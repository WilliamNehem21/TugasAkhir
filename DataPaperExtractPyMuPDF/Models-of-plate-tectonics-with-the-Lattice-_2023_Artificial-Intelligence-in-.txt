Artificial Intelligence in Geosciences 4 (2023) 47–58
Available online 5 April 2023
2666-5441/© 2023 The Authors. Publishing services by Elsevier B.V. on behalf of KeAi Communications Co. Ltd. This is an open access article under the CC
BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
Contents lists available at ScienceDirect
Artificial Intelligence in Geosciences
journal homepage: www.keaipublishing.com/en/journals/artificial-intelligence-in-geosciences
Original research articles
Models of plate tectonics with the Lattice Boltzmann Method
Peter Mora a,∗, Gabriele Morra b, David A. Yuen c,d
a Geosciences Department, College of Petroleum Engineering and Geosciences, King Fahd University of Petroleum and Minerals, Dhahran, 31261, Saudi Arabia
b Department of Physics, University of Louisiana at Lafayette, Lafayette, LA, 70504, USA
c Department of Applied Physics and Applied Mathematics, Columbia University, New York, NY, 10027, USA
d Department of Information Science and Engineering and College of Marine Geosciences, Ocean University of China, Qingdao, 266100, China
A R T I C L E
I N F O
Keywords:
Lattice Boltzmann Method
Mantle convection simulation
Plate tectonics simulation
Nonlinear rheology
Extreme plasticity
A B S T R A C T
Modern geodynamics is based on the study of a large set of models, with the variation of many parameters,
whose analysis in the future will require Machine Learning to be analyzed. We introduce here for the first time
how a formulation of the Lattice Boltzmann Method capable of modeling plate tectonics, with the introduction
of plastic non-linear rheology, is able to reproduce the breaking of the upper boundary layer of the convecting
mantle in plates. Numerical simulation of the earth’s mantle and lithospheric plates is a challenging task for
traditional methods of numerical solution to partial differential equations (PDE’s) due to the need to model
sharp and large viscosity contrasts, temperature dependent viscosity and highly nonlinear rheologies. Nonlinear
rheologies such as plastic or dislocation creep are important in giving mantle convection a past history. We
present a thermal Lattice Boltzmann Method (LBM) as an alternative to PDE-based solutions for simulating
time-dependent mantle dynamics, and demonstrate that the LBM is capable of modeling an extremely nonlinear
plastic rheology. This nonlinear rheology leads to the emergence plate tectonic like behavior and history from
a two layer viscosity model. These results demonstrate that the LBM offers a means to study the effect of
highly nonlinear rheologies on earth and exoplanet dynamics and evolution.
1. Introduction
The discovery of plate tectonics emerged from a huge amount of
new data on seafloor bathymetry and a courageous new approach to an-
alyze them. In the next decade, our way to use modeling to understand
geodynamics will have to evolve by combining artificial intelligence
with high-performance computing (HPC) simulations (Morra et al.,
2021). While the number of geoscientists who use HPC is increasing,
there is great need for fast and reliable geodynamic tools for producing
the large number of training and verification samples necessary to train
machine learning algorithms. New numerical methods for geodynamics
must be carefully crafted to maintain their performance on parallel
computers and be tested for non-linear rheologies which are responsible
for the fragmentation of the surface in tectonic plates.
Geological processes such as mountain building, geomorphological
evolution of river deltas, require a knowledge of the past, and hence
its past history. Therefore, an important criterion for understanding
the history of plate tectonics and the underlying mantle convection
is a rheology which can preserve its history. Both viscoelastic and
plastic rheology (Karato, 2008) can produce this attribute, with vis-
coelastic rheology limited to a time interval of at most tens of million
∗ Corresponding author.
E-mail addresses: peter.mora@kfupm.edu.sa (P. Mora), gabriele.morra@gmail.com (G. Morra), daveyuen@gmail.com (D.A. Yuen).
years (Shahnas et al., 2018), while plastic rheology can exert a more
pronounced effect over longer time scales (Sherburn et al., 2011). Most
commonly, plasticity is associated with the natural dislocation creep of
rocks (Bercovici et al., 2015).
The Lattice Boltzmann Method (LBM) is an alternative approach
to classical numerical solutions to PDE’s for modeling fluid dynam-
ics based on simulating the Boltzmann Equation on a discrete lat-
tice. Since the first inception as the Lattice Gas Method in which
it was proven that the Navier–Stokes equations are recovered at the
macroscopic scale by modeling discrete particles moving and colliding
on a discrete lattice (Frisch et al., 1986), the more efficient Lattice
Boltzmann Method (LBM) was developed (Chen and Doolen, 1998) in
which particle number densities are moved on a discrete lattice with
collisions being achieved by relaxing the number densities towards
the Boltzmann equilibrium distribution (Bhatnagar et al., 1954). The
LBM, has since been used to model a wide range of fluid dynamics
problems (Succi) including mantle convection (Mora and Yuen, 2017,
2018a,b), magneto-hydrodynamics (Dellar, 2002), multiphase flow in
porous media (Huang et al., 2015; Mora et al., 2021) and plastic
flows (Falk et al., 2015).
https://doi.org/10.1016/j.aiig.2023.03.002
Received 29 December 2022; Received in revised form 21 March 2023; Accepted 23 March 2023
Artificial Intelligence in Geosciences 4 (2023) 47–58
48
P. Mora et al.
In the following, we overview the thermal Lattice Boltzmann
Method which can be used to simulate mantle and exoplanet con-
vection, and present 2D simulations in a two layer model with a
highly nonlinear rheology and demonstrate that this rheology leads
to the emergence of plate tectonic like behavior in the model. This
is consistent with simulation results using classical methods (Tackley,
2000; Gerya, 2019) which require a nonlinear rheology such as plastic
or dislocation creep to model convection with plate tectonics. However,
we use a much more nonlinear rheology than the standard plastic
or dislocation creep rheologies with an effective viscosity – above
a yield stress – that is inversely proportional to strain rate to the
fourth power (cf. plastic and dislocation creep rheologies respectively
have effective viscosities inversely proportional to the strain rate to
the power of one and to a power that is less than one). Use of this
extremely nonlinear rheology demonstrates the LBM’s potential to
be used to study the effect of different highly nonlinear rheologies
on earth and exoplanet mantle convection dynamics and evolution.
Machine Learning (ML) and Deep Neural Networks have proven to
be extremely useful scientific tools (Baldi, 2021). Previous work on
machine learning applied to the geosciences has shown that models
like the ones presented here can be organized as data to be analyzed
using Convolutional Neural Networks (Dye and Morra, 2020) and other
machine learning algorithms (Qingkai et al., 2021).
2. The thermal lattice Boltzmann method
The thermal LBM models two distributions 𝑓𝛼 and 𝑔𝛼 representing
the mass density and energy density moving one lattice spacing along
the 𝛼 directions (i.e. orthogonally and diagonally) of a cartesian lattice.
After these number densities move by one lattice spacing, they are
‘‘relaxed’’ towards the Boltzmann equilibrium distribution. These two
steps applied to 𝑓𝛼 which relates to the fluid density 𝜌 are found to
yield the Navier–Stokes equations for incompressible fluids (Chen and
Doolen, 1998). The two steps applied to 𝑔𝛼 are found to yield the
convection–diffusion equation for energy density 𝐸 which relates to the
temperature 𝑇 (Krüger et al., 2017).
The combined movement and collision steps can be written as
𝑓𝛼(𝐱 + 𝐜𝛼𝛥𝑡, 𝑡 + 𝛥𝑡) = 𝑓𝛼(𝐱, 𝑡) + 𝛥𝑓 𝐶
𝛼 (𝐱, 𝑡)
,
(1)
and
𝑔𝛼(𝐱 + 𝐜𝛼𝛥𝑡, 𝑡 + 𝛥𝑡) = 𝑔𝛼(𝐱, 𝑡) + 𝛥𝑔𝐶
𝛼 (𝐱, 𝑡)
,
(2)
where 𝐜𝛼 is the velocity vector pointing between adjacent lattice sites
(i.e. 𝐜𝛼𝛥𝑡 equals one lattice spacing orthogonally or diagonally in a
square or cubic lattice), and 𝛥𝑓 𝐶
𝛼
and 𝛥𝑔𝐶
𝛼
are the collision terms
which redistribute number densities between directions due to colli-
sions. These collision terms can be calculated by an efficient method of
relaxing the distributions towards the equilibrium distribution due to
Bhatnagar, Gross and Krook 1954 using
𝛥𝑓 𝐶
𝛼
=
(
1
𝜏𝑓
)
(𝑓 𝑒𝑞
𝛼
− 𝑓𝛼)
,
(3)
𝛥𝑔𝐶
𝛼
=
(
1
𝜏𝑔
)
(𝑔𝑒𝑞
𝛼
− 𝑔𝛼)
,
(4)
where 𝜏𝑓 and 𝜏𝑔 are the relaxation times for the two number densities
𝑓𝛼 and 𝑔𝛼, and 𝑓 𝑒𝑞
𝛼
and 𝑔𝑒𝑞
𝛼 are respectively the corresponding equilib-
rium distributions which can be calculated as a Taylor expansion to
second order of the Boltzmann distribution, namely
𝑓 𝑒𝑞
𝛼
= 𝜌𝑤𝛼
(
1 + 𝐜𝛼 ⋅ 𝐮
𝑐2
𝑠
+ (𝐜𝛼 ⋅ 𝐮)2
2𝑐4
𝑠
− 𝐮2
2𝑐2
𝑠
)
,
(5)
and
𝑔𝑒𝑞
𝛼
= 𝜌𝜀𝑤𝛼
(
1 + 𝐜𝛼 ⋅ 𝐮
𝑐2
𝑠
+ (𝐜𝛼 ⋅ 𝐮)2
2𝑐4
𝑠
− 𝐮2
2𝑐2
𝑠
)
,
(6)
where 𝜌 is the macroscopic density, 𝐮 is the macroscopic fluid velocity,
𝜀 is the energy density, 𝑤𝛼 are weights which depend on the lattice (to
be specified shortly) and 𝑐𝑠 = 𝑠∕
√
3 is the speed of sound in the lattice
where 𝑠 = 𝛥𝑥∕𝛥𝑡 is the lattice speed (i.e. 𝛥𝑥 is the lattice spacing of
the cartesian lattice and 𝛥𝑡 is the time step). In the following, we use
non-dimensionalized simulations and hence, we set 𝛥𝑥 = 𝛥𝑡 = 1 which
leads to equilibrium distributions given by
𝑓 𝑒𝑞
𝛼
= 𝜌𝑤𝛼
(
1 + 3(𝐜𝛼 ⋅ 𝐮) + 9
2 (𝐜𝛼 ⋅ 𝐮)2 − 3
2 𝐮2)
,
(7)
and
𝑔𝑒𝑞
𝛼
= 𝜌𝜖𝑤𝛼
(
1 + 3(𝐜𝛼 ⋅ 𝐮) + 9
2 (𝐜𝛼 ⋅ 𝐮)2 − 3
2𝐮2)
.
(8)
The relaxation times in the above equilibrium distributions relate to the
kinematic viscosity and the thermal diffusivity as
𝜏𝑓 =
𝜈𝑓
𝑐2
𝑠 𝛥𝑡 + 0.5
,
(9)
where 𝜈𝑓 is the kinematic viscosity and
𝜏𝑔 =
𝜈𝑔
𝑐2
𝑠 𝛥𝑡 + 0.5
,
(10)
where 𝜈𝑔 = 𝜅 is the thermal diffusivity.
So far, the above equations are valid for 2D or 3D. However, in the
following numerical study, we will perform simulations in 2D. We use
the so called D2Q9 lattice (2 dimensions, 9 lattice velocities) in which
number densities move on a square lattice along the axes or in the
diagonal directions. We define the velocity vectors in the D2Q9 lattice
𝐜𝛼 as
𝐜𝛼 =
[(0, 0), (1, 0), (−1, 0), (0, 1), (0, −1),
(1, 1), (−1, −1), (1, −1), (−1, 1)] 𝛥𝑥
𝛥𝑡
,
(11)
and the weights vector 𝑤𝛼 for this lattice is given by
𝑤𝛼 = (4∕9, 1∕9, 1∕9, 1∕9, 1∕9, 1∕36, 1∕36, 1∕36, 1∕36)
,
(12)
i.e. a weight of 4/9 for the zero velocity vector (i.e. the velocity vector
for no movement), 1/9 for directions along the cartesian axes, and 1/36
along diagonals (note that ∑
𝛼 𝑤𝛼 = 1). It is well known that the above
choice leads to the Navier–Stokes equations for incompressible fluid
flow (Chen and Doolen, 1998) where the macroscopic properties can
be obtained from the number densities 𝑓𝛼 and 𝑔𝛼 using
𝜌 =
∑
𝛼
𝑓𝛼
,
(13)
𝜌𝐮 =
∑
𝛼
𝑓𝛼𝐜𝛼
,
(14)
and
𝜌𝜀 =
∑
𝛼
𝑔𝛼
,
(15)
where the energy density 𝜀 relates to temperature through 𝜀 = 𝐷𝑅𝑇 ∕2
where 𝐷 = 2 is the number of dimensions, 𝑇 is temperature and 𝑅
is the gas constant which we set to unity for our non-dimensionalized
simulation runs in this paper.
2.1. Boussinesq buoyancy term
In order to model convection, we need to add a buoyancy force
and we adopt the usual Boussinesq approximation where density vari-
ations have a fixed part plus a perturbation that linearly depends on
temperature given by
(𝜌 + 𝛿𝜌) = 𝜌(1 − 𝛽𝛥𝑇 )
.
(16)
We assume gravity and hence, under the Boussinesq approximation, we
need to add a force term of
𝐆 = −𝜌𝛽𝛥𝑇 𝐠
,
(17)
Artificial Intelligence in Geosciences 4 (2023) 47–58
49
P. Mora et al.
where 𝐠 is the acceleration due to gravity and 𝐆 is the gravitational
force due to gravity.
The above gravitational force can be added to the LBM by adding a
forcing term to the Lattice Boltzmann equations for 𝑓𝛼. Namely, Eq. (1)
including the gravitational force becomes
𝑓𝛼(𝐱 + 𝐜𝛼𝛥𝑡, 𝑡 + 𝛥𝑡) = 𝑓𝛼(𝐱, 𝑡) + 𝛥𝑓 𝐶
𝛼 (𝐱, 𝑡) + 𝐹 𝑏
𝛼 (𝐱, 𝑡)
,
(18)
where the Boussinesq buoyancy forcing term 𝐹 𝑏 is given by
𝐹 𝑏
𝛼 = 𝑤𝛼3𝐜𝛼 ⋅ 𝐆 = 𝑤𝛼3𝑐𝛼𝑧𝐺𝛥𝑡
,
(19)
where 𝐺 = |𝐆| = 𝐺𝑧 = −𝜌𝛽𝛥𝑇 𝑔. Eq. (19) can be verified by calculating
the change in velocity during one time step due to the Boussinesq term
using Eq. (14).
2.2. Extremely nonlinear ‘‘plastic’’ rheology
In order to add the effect of a plastic rheology, the total viscosity
denoted 𝜈𝑇 is normally specified as a function of the strain rate (Tosi
et al., 2015) such as
𝜈𝑇 =
(
1
𝜈𝑙𝑖𝑛𝑒𝑎𝑟
+
1
𝜈𝑝𝑙𝑎𝑠𝑡𝑖𝑐
)−1
,
(20)
where
𝜈𝑙𝑖𝑛𝑒𝑎𝑟 = exp(−𝛾𝑇 𝑇 + 𝛾𝑧𝑧)
,
(21)
and
𝜈𝑝𝑙𝑎𝑠𝑡𝑖𝑐 = max
(
𝜈∗,
( 𝜏𝑦
̇𝜖
)𝑁)
,
(22)
where 𝜈∗ is the effective viscosity at high stress, 𝜏𝑦 is the yield stress,
̇𝜖 is the shear strain rate, and 𝑁 is a power relating to the nonlinear
rheology which is normally 𝑁 = 1 for plasticity and 𝑁 = (1 − 1∕𝑛)
for dislocation creep. With the above formula, one could set 𝑁 > 1 to
model a more strongly nonlinear strain rate weakening material than
plastic rheology with 𝑁 = 1. In this work, we consider setting 𝑁 to any
positive value as a generalization of standard plasticity, and we refer
to cases with 𝑁 ≫ 1 as extreme plasticity. In the above formula, one
can see that the plasticity effect will be negligible if 𝜈𝑝𝑙𝑎𝑠𝑡𝑖𝑐 ≫ 𝜈𝑙𝑖𝑛𝑒𝑎𝑟. In
other words, the plastic effect is negligible when ̇𝜖 ≪ 𝜏𝑦 assuming that
the effective viscosity at high stress denoted 𝜈∗ is small, i.e. 𝜈∗ < 𝜈𝑙𝑖𝑛𝑒𝑎𝑟.
In the LBM, we can calculate the shear strain rate using (Chen et al.,
2014)
̇𝜖 = (𝑆𝑖𝑗𝑆𝑖𝑗)
1
2
,
(23)
where 𝑆𝑖𝑗 is the shear strain rate tensor given by
𝑆𝑖𝑗 =
3
2𝜌𝜏𝑓 (𝑡 − 𝛥𝑡)𝑠2
∑
𝛼
𝑓 𝑛𝑒𝑞
𝛼
𝑐𝛼𝑖𝑐𝛼𝑗
,
(24)
where 𝜏𝑓 (𝑡 − 𝛥𝑡) is the relaxation time at the last time step and 𝑓 𝑛𝑒𝑞
𝛼
is
the non-equilibrium component given by
𝑓 𝑛𝑒𝑞
𝛼
= 𝑓𝛼 − 𝑓 𝑒𝑞
𝛼
.
(25)
In past work (Mora and Yuen, 2018b), we demonstrated the ability
of the LBM to model temperature dependent viscosity such as Reynolds
viscosity of form
𝜈𝑓 (𝑇 ) = 𝜈0 exp(−𝑏𝑇 )
,
(26)
with powers up to 𝑏 = 15. Here, we will set 𝜈𝑙𝑖𝑛𝑒𝑎𝑟 = 𝑐𝑜𝑛𝑠𝑡𝑎𝑛𝑡 (i.e. no tem-
perature or depth dependence of viscosity) and focus on demonstrating
the ability of the LBM to model extremely strong plasticity.
3. Numerical experiment
In this section, we will apply the LBM described above to a two
layer model with an upper low viscosity layer, and demonstrate the
LBM’s ability to model strong plasticity which leads to the emergence
of plate tectonic like behavior.
3.1. Setting of viscosity and thermal diffusivity
We first utilize the definition of the Rayleigh number given by
𝑅𝑎 = 𝑔𝛽𝛥𝑇 𝐿3
𝜈𝜅
,
(27)
where 𝜈
= 𝜈𝑓 is the kinematic viscosity, 𝜅
= 𝜈𝑔 is the thermal
diffusivity, 𝑔 is the gravitational acceleration, 𝛽 is the coefficient of
thermal expansion, 𝛥𝑇 is the temperature difference between the top
and bottom of the layer, and 𝐿 is the layer thickness. Now, given that
the Prandtl number 𝑃 𝑟 is defined by
𝑃 𝑟 = 𝜈
𝜅
=
𝜈𝑓
𝜈𝑔
,
(28)
and using Eq. (27), we can set the viscosity and thermal diffusivity to
𝜈𝑓 = 𝜈
= 𝐾
√
𝑃 𝑟
𝜈𝑔 = 𝜅
= 𝐾∕
√
𝑃 𝑟
,
(29)
where
𝐾 =
√
𝑔𝛽𝛥𝑇 𝐿3
𝑅𝑎
,
(30)
and hence, we can calculate the two relaxation times 𝜏𝑓 and 𝜏𝑔 required
by the LBM using Eqs. (9) and (10).
3.2. Two layer model initialization
We initialize a 2 layer model where the upper layer has a lower
viscosity than the lower layer by a factor of 50, analogous to an
assumption that the upper mantle has a 50× lower viscosity than the
lower mantle.
This is achieved by first calculating the viscosity and thermal diffu-
sivity based on a Rayleigh number of 𝑅𝑎 = 4.1667 × 106 and 𝑃𝑟 = 1000,
assuming a single layer. The dimensions of the computational lattice
in 𝑥 and 𝑧 are set to 𝑛𝑥 = 512, 𝑛𝑧 = 256. Hence, from Eqs. (29) and
(30) and setting 𝑔 = 0.41667, 𝛽 = 0.1, 𝛥𝑇 = 0.001, and layer thickness1
𝐿 = 𝑛𝑧 − 3 = 253, we obtain the viscosity 𝜈𝑓 and thermal diffusivity
𝜈𝑔 = 𝜅 to be
𝜈𝑓
= 0.4024
𝜈𝑔
= 0.0004024
.
(31)
We then set the thickness of the upper layer to be approximately 20% of
the total model thickness 𝐿 (i.e. similar to the upper mantle thickness
relative to the total mantle thickness) so we have the upper layer
thickness 𝑛𝑧1 = 50 ≈ 0.2 × (𝑛𝑧 − 3).
Finally, we set the viscosity of the lower layer to 𝜈𝑓2 = 𝜈𝑓 = 0.4024,
and the viscosity of the upper layer to be 50× smaller 𝜈𝑓1 = 𝜈𝑓 ∕50 =
0.00805. These viscosity values then allow the relaxation times for all
parts of the model to be calculated using Eqs. (9) and (10).
3.3. Setting of plasticity parameters
We set the power 𝑁 in Eq. (22) in the upper and lower layers to
be 𝑁1 = 4 and 𝑁2 = 1, so the plasticity will be much stronger in the
upper layer (i.e. extreme plasticity in our terminology). The value of
𝜈∗ is set to 𝜈∗ = 0.00102 which is significantly less than the viscosity of
the upper layer (i.e. about 8× less), and the value of the yield stress 𝜏𝑦
is calculated as follows
𝜏𝑦 = 0.8 × max( ̇𝜖)𝜈𝑓𝓁
,
(32)
where 𝓁 = 1, 2 specifies which layer. The above formula means that
when the strain rate exceeds 80% of the maximal strain rate, the plastic-
ity effect will become significant. A summary of the model parameters
is given in Table 1.
1 The value of 𝐿 = 𝑛𝑧 − 3 because the upper and lower temperatures are
specified at lattice depth indices 𝑧𝑢𝑝𝑝𝑒𝑟 = 1 and 𝑧𝑙𝑜𝑤𝑒𝑟 = (𝑛𝑧 − 2) = 254 so the
distance between the upper and lower surfaces where temperature is specified
in lattice units is 𝐿𝓁 = 𝑧𝑙𝑜𝑤𝑒𝑟 − 𝑧𝑢𝑝𝑝𝑒𝑟 = 𝑛𝑧 − 3.
Artificial Intelligence in Geosciences 4 (2023) 47–58
50
P. Mora et al.
Table 1
Model parameters.
Layer
Thickness
𝜈𝑓
𝜈𝑔
𝑃 𝑟
𝜈∗
𝑁
1
50
0.00805
0.0004024
20
0.00102
4
2
203
0.4024
0.0004024
1000
0.00102
1
3.4. Boundary conditions
We use periodic boundary conditions in the 𝑥-direction, no-slip
boundary conditions at the base of the lower layer, and a free slip
boundary condition at the top of the upper layer. The no-slip bound-
ary condition at the base of the lower layer is achieved through the
standard LBM bounce-back approach. Namely, at the base of the lower
layer at 𝑧 = 𝑧𝑏 we set the upgoing number densities as the bounced back
downgoing number densities, namely 𝑓4 = 𝑓3, 𝑓7 = 𝑓8 and 𝑓6 = 𝑓5.
At the top of the upper layer at 𝑧 = 𝑧𝑢, we developed free slip in
𝑥 boundary conditions based on the approach of Zou and He (1997)
in which we solve for 𝜌, 𝑢𝑥 and downgoing number densities 𝑓3, 𝑓5
and 𝑓8 in terms of the known number densities 𝑓1, 𝑓2, 𝑓4, 𝑓6 and 𝑓7
and the known 𝑧-component of velocity 𝑢𝑧 = 0. This development uses
Eqs. (13) and (14) and the bounce-back of non-equilibrium parts as
in Zou and He (1997), namely: 𝑓5 − 𝑓 𝑒𝑞
5 = 𝑓6 − 𝑓 𝑒𝑞
6 , 𝑓8 − 𝑓 𝑒𝑞
8 = 𝑓7 − 𝑓 𝑒𝑞
7
and 𝑓3 − 𝑓 𝑒𝑞
3
= 𝑓4 − 𝑓 𝑒𝑞
4 . Setting the vertical velocity 𝑢𝑧 = 0 (i.e. no
flow through the upper boundary), the solution of these free slip in 𝑥
boundary conditions is given by
𝜌
= 𝑓0 + 𝑓1 + 𝑓2 + 2(𝑓4 + 𝑓6 + 𝑓7)
𝑢𝑥
=
3
2(𝑓1 − 𝑓2)∕𝜌
𝑓3
= 𝑓4
𝑓5
=
1
2
(𝜌𝑢𝑥 + 𝑓2 + 𝑓4 + 2𝑓6 − 𝑓1 − 𝑓3
)
𝑓8
=
1
2
(𝜌(−𝑢𝑥) + 𝑓1 + 𝑓4 + 2𝑓7 − 𝑓2 − 𝑓3
)
.
(33)
The boundary conditions for 𝑔 are the standard LBM bounce-back
boundary conditions at the upper and lower boundaries. So at the top
of the model at 𝑧 = 𝑧𝑢 we have 𝑔3 = 𝑔4, 𝑔5 = 𝑔6 and 𝑔8 = 𝑔7, and
at the base of the model at 𝑧 = 𝑧𝑏 we have 𝑔4 = 𝑔3, 𝑔6 = 𝑔5 and
𝑔7 = 𝑔8. These boundary conditions amount to thermally insulating
boundary conditions. In the runs in the next section, we will initialize
a constant temperature 𝑇 = 𝑇0 in the lattice, and set the temperature
of the upper and lower boundaries to be 𝑇𝑢 = 𝑇0 − 𝛥𝑇 ∕2 + 𝛿𝑇𝑟𝑎𝑛𝑑 and
𝑇𝓁 = 𝑇0 + 𝛥𝑇 ∕2 + 𝛿𝑇𝑟𝑎𝑛𝑑, where 𝛥𝑇 = 0.001 as per our equations to
calculate the layer viscosities in Eq. (29) and 𝛿𝑇 is small zero mean
Gaussian distributed random fluctuations with standard deviation of
2.5% of 𝛥𝑇 . These random fluctuations are required to help to initiate
convection.
3.5. Numerical stability
The thermal LBM is stable for a large range of viscosities, Rayleigh
numbers and Prandtl numbers as shown in Mora and Yuen (2018a),
and it is stable in the present work. However, it should be noted that
this is not always so. Instabilities – if they occur – are generally due to
either the fluid velocity speed |𝐮| becoming too large relative to the 𝑐𝑠
(i.e. the Mach number being too high) which leads to the equilibrium
distribution ‘‘blowing up’’, and/or the non-dimensional viscosity being
too small.
Regarding the choice of viscosity 𝜈𝑓 , the LBM community generally
thinks in terms of the relaxation time 𝜏𝑓 . For a value of 𝜏𝑓 that is too
small, the LBM will become unstable. From Eq. (9), one can see that 𝜏𝑓
has a minimum value of 0.5 when the viscosity is zero. Hence, one must
choose a value of 𝜏𝑓 > 𝜏𝑓 𝑚𝑖𝑛 > 0.5 to ensure stability of the LBM where
the value of 𝜏𝑓 𝑚𝑖𝑛 depends on the problem being solved. For example,
in the problem described above, the lowest possible viscosity being the
effective viscosity at high stress denoted 𝜈∗ = 0.00102 which means
that the lowest possible value for the relaxation time in the model is
𝜏𝑓 ∗ ≈ 0.503, and our simulation was stable with such low values for 𝜏𝑓 .
This implies that for our problem with an extremely plastic rheology,
𝜏𝑓 𝑚𝑖𝑛 for stability is within the range 0.5 < 𝜏𝑓 𝑚𝑖𝑛 ≲ 0.503.
Finally, if stability is an issue for a given problem using the BGK
Single Relaxation Time (SRT) LBM method described above, the LBM’s
stability can potentially be improved by using the Multiple Relaxation
Time (MRT) LBM method (d’Humières et al., 2002; Aslan et al., 2014)
in which one calculates the relaxation to equilibrium in moment space.
3.6. Getting the time scale and converting to physical units
In the above, we chose values for the various quantities in lattice
units such that we ensured stability without thought to the time scale
implied with our choices. However, the duration of each time step can
be converted to seconds from lattice units as follows.
We start by re-defining 𝛥𝑥 as the number of meters per lattice space
unit, and 𝛥𝑡 as the number of seconds per lattice time unit (one time
step) = amount of physical time per time step. Hence, we have the
following relationships between lattice and physical units
𝑔𝑝
= 𝑔𝓁𝛥𝑥∕𝛥𝑡2
𝜈𝑝
= 𝜈𝓁𝛥𝑥2∕𝛥𝑡
,
(34)
where the subscript 𝑝 denotes that a quantity is in physical units, and
the subscript 𝓁 denotes that a quantity is in lattice units. Hence, from
the above relationships, and assuming we have chosen a value for 𝛥𝑥 =
spatial resolution of the LBM in physical units, we can derive the value
of 𝛥𝑡 number of seconds corresponding to one time step as
𝛥𝑡 =
𝑔𝓁𝜈𝑝
𝑔𝑝𝜈𝓁𝛥𝑥
.
(35)
Note that the above calculation assumes that the values of 𝛽𝓁𝛥𝑇𝓁 =
𝛽𝑝𝛥𝑇𝑝 so if this is not so, then before applying Eq. (35), one must
convert 𝛥𝛽𝓁 and 𝛥𝑇𝓁 to the desired physical values of 𝛥𝛽𝑝 and 𝛥𝑇𝑝 while
leaving the Rayleigh number the same by adjusting 𝑔𝓁.
To illustrate, we will now calculate the time scale for the runs in
this paper assuming the physical quantities are as follows
𝜌𝑝
= 4.5 × 103 kg m−3
𝑔𝑝
= 9.8 m s−2
,
𝛽𝑝
= 3 × 10−5 (1∕◦K)
,
𝛥𝑇𝑝
= 3400 ◦K
,
𝐿𝑝
= 2.9 × 106 m
,
𝜂𝑝
= 2.8 × 1022 kg m−1 s−1
,
𝜈𝑝
= 6.222 × 1018 m2 s−1
,
𝜅𝑝
= 9.403 × 10−7 m2 s−1
,
(36)
which are similar to the parameters for the Earth’s mantle, where the
value for 𝜅𝑝 above is back calculated from the other values above
assuming our Rayleigh number of 𝑅𝑎𝑝 = 𝑅𝑎𝓁 = 4.1667 × 106. The
above values lead to a physical Prandtl number of 𝑃 𝑟𝑝 = 𝜈𝑝∕𝜅𝑝 =
6.617 × 1024 which is very high and is often assumed to be infinity
in geodynamical simulations. The LBM calculations are dynamic and
cannot be done at infinite Prandtl number. However, if the value of
𝑃 𝑟 is large enough, a dynamic solution such as by using the LBM will
asymptotically approach the solution at an infinite Prandtl number.
In the specifications of our numerical experiment above, we assume
𝑃 𝑟 = 103 although previous work suggests that the LBM can achieve
higher Prandtl numbers of at least 𝑃 𝑟 = 104 (Mora and Yuen, 2018a).
Assuming the physical values for the earth given in Eq. (36), we can
now rescale to obtain the physical time step 𝛥𝑡 using Eq. (35) as follows.
First, we modify the value of 𝑔𝓁, 𝛥𝛽𝓁 and 𝛥𝑇𝓁 to obtain an equivalent
set of values
𝛽𝓁′
= (𝛽𝑝∕𝛽𝓁)𝛽𝓁 = 𝛽𝑝
,
𝛥𝑇𝓁′
= (𝛥𝑇𝑝∕𝛥𝑇𝓁)𝛥𝑇𝓁 = 𝛥𝑇𝑝
,
𝑔𝓁′
= 𝑔𝓁(𝛽𝓁𝛥𝑇𝓁)∕(𝛽𝑝𝛥𝑇𝑝)
,
(37)
Artificial Intelligence in Geosciences 4 (2023) 47–58
51
P. Mora et al.
where 𝑔𝓁′ is a new value for gravitational acceleration in lattice units
re-scaled such that the Rayleigh number is identical but with lattice
values for 𝛽𝓁′ and 𝛥𝑇𝓁′ which are identical to the desired physical
values given in Eq. (36).
To obtain the time scale, the values for 𝑔𝑝, 𝑔𝓁′, 𝜈𝑝, 𝜈𝓁 and 𝛥𝑥 are
substituted into Eq. (35). In our simulations, we have 𝐿𝑝 = 2.9 × 106 m
so for our lattice grid size of 𝑛𝑧 = 256 we have 𝐿𝓁 = (𝑛𝑧 − 3) = 253 ⇒
𝛥𝑥 = 𝐿𝑝∕𝐿𝓁 = 1.146×104 m. Applying Eq. (35) using the specified value
of 𝛥𝑥, 𝑔𝓁′ and 𝜈𝓁 yields
𝛥𝑡 =
𝑔𝓁′𝜈𝑝
𝑔𝑝𝜈𝓁𝛥𝑥 = 5.398 × 1010 s = 1.783 Ky
.
(38)
Hence, the 𝑛𝑡 = 700 thousand time step simulations in the following
corresponds to a total equivalent physical simulation time of 𝑇𝑝 = 𝑛𝑡𝛥𝑡
= 1.248 billion years. We note that by adjusting the values of 𝑔𝓁 and
𝜈𝓁 while maintaining the same Rayleigh number, we could achieve the
same physical simulation time 𝑇𝑝 with a greater or smaller time step 𝛥𝑡
and hence, using a lower or higher number of time steps.
3.7. Results
We ran two simulations for the two layer model specified above.
The first used only a viscous rheology, so we set 𝜈𝑇 = 𝜈𝑙𝑖𝑛𝑒𝑎𝑟 = 𝑐𝑜𝑛𝑠𝑡𝑎𝑛𝑡
where 𝜈𝑓 and 𝜈𝑔 were as specified in Table 1. In the second, we applied
Eq. (20) to calculate the total viscosity with the plasticity calculated
using Eq. (22) and used the values for 𝜈𝑓 , 𝜈𝑔, 𝜈∗, 𝜏𝑦 and 𝑁 specified in
Table 1, so ‘‘extreme plasticity’’ in the upper layer.
Fig. 1 shows snapshots of the magnitude of the velocity |𝐮| for
the extreme plasticity case specified in the preceeding section (left
column) and for the linear viscosity case where 𝜈𝑇
= 𝜈𝑙𝑖𝑛𝑒𝑎𝑟 (right
column). This plot enables the general style of convection to be seen
for each case. For the case of extreme plasticity (left column), one
observes convection cells in the upper layer initially (𝑡 = 100 K).
However, later in the simulation, the convection in the upper layer
tends to consist of narrow horizontal channels along the upper edge
of the model (see 𝑡 = 300 K, 600 K and 700 K time steps), separated
by upwelling or downwelling plumes. This can be considered as plate
tectonic like behavior in that convection is mainly confined to narrow
horizontal zones near the top of the upper layer and to vertical plumes.
However, sometimes this plate tectonic like behavior is disrupted such
as at 𝑡 = 500 K time steps where one sees some convection in a
broader zone in the upper layer and some evidence for convection cells
within the upper layer. For the viscous case with no plasticity (right
column), one tends to observe either convection cells within the upper
layer, broad horizontal zones and plumes within the upper layer, or
a combination of these two modes of convection. Note that we obtain
plate like behavior with downwelling plumes rather than plate tectonics
with subduction zones because we are focussed on modeling extreme
plasticity whereas plate tectonics with subduction zones requires stiff
plates which can be achieved by the addition of temperature dependent
viscosity (Tackley, 2000).
Fig. 2 shows snapshots of vector plots of 𝐮∗ = (𝑢𝑥, −𝑢𝑧) which show
the flow pattern. One can clearly see on the plots for the case of extreme
plasticity (left column) that there is plate like flow in the upper layer at
𝑡 = 300 K, 600 K and 700 K time steps, with most of the flow confined
to a narrow layer at the top of the model, or to upwelling plumes (c.f.
spreading centers) and downwelling plumes (c.f. subduction zones).
Again, one observes a different pattern of convection for the viscous
case (right column) with convection in the upper layer being more
distributed within the layer as smaller convection cells, or horizontally
flowing broad regions within the upper layer.
Fig. 3 shows snapshots of temperature 𝑇 for the extreme plasticity
case (left column) and linear viscosity case (right column). For the
extreme plasticity case, one can see the detailed form of the upwelling
plumes below the spreading centers and downwelling plumes below the
convergence zones at 𝑡 = 300 K, 600 K and 700 K. Again, snapshots for
the linear viscosity case show convection tends to occur throughout the
upper layer.
Regarding computational cost of the 700 K time step = 1.25 Gy
simulations above, the extremely plastic simulation took 17.4 min on
16 CPU 2.2 GHz Xeon cores and the viscous simulation took 13.8 min.
The LBM kernel calculations ran at 3.45 GFlops = 78% of peak per-
formance per core, and the total LBM algorithm including streaming
and inter-core communications ran at 1.93 GFlops = 44% of peak
performance per core. The computer code runs in 2D or 3D and was
written in Python and parallelized using MPI with the LBM kernel
calculated using optimized C code, and has been shown to have linear
weak scaling to thousands of cores (Mora et al., 2020, 2023). Note that
further optimizations to the streaming and communications steps may
be possible which would further improve the performance of the total
LBM algorithm.
4. Discussion
4.1. Use of geodynamic simulations in AI
Machine learning applied to geodynamics data is still in its infancy,
however applications have been put forward to investigate poten-
tial practical applications. At the level of whole mantle convection,
thanks to mantle tomography, present Earth’s detailed velocity and
density structure is relatively well known, however the past history
and detailed interiors of terrestrial planets, either the ones in our
solar system or newly discovered exo-planets, can only be indirectly
inferred. Due to the complexities of the differential equations driving
mantle convection, coverage of the entire parameter space of mantle
convection is infeasible, even in 2D. Machine learning has been shown
to be able to at least partially overcome this computational bottleneck
by running end-member cases of large scale 2D or 3D simulations and
then extracting potential observable parameters (e.g. 1D seismic profile
for terrestrial planets, thermal emission and atmosphere composition
for exo-planets). Examples of this approach are in Agarwal et al. 2020.
Similarly, machine learning has been used to process large 3D
models and extract snapshots of convection models as training, testing
and verification samples. For example, Shahnas et al. (2018) used
Support Vector Machines (SVMs) to predict mantle density anomalies
and mantle flow patterns, illustrating how machine learning can be
used to add time dependency to geodynamic modeling. Snapshots of
convection models can also be used to analyze the effect of varying
mineral physics data, which can rapidly expand the parameter space of
the models to be explored.
Supervised learning techniques that can be used to analyze full
convection models vary from Convolutional Neural Networks (CNNs)
(Morra et al., 2020), which are already widely used to analyze images
in geosciences, as well as Support Vector Machines. For example, re-
cently efforts have been made to extract fundamental parameters such
as Prandtl and Rayleigh numbers from a CNN applied to LBM models
of convection (Boroumand et al., 2023) where 200 snapshots of 88
convection simulations were used to train and test the Neural Network
based classifier. In a future not too remote, we can see how Generative
Artificial Intelligence will be used to predict solutions of mantle dy-
namics models, as recent attempts in atmospheric convection (Mooers
et al., 2020) and convection in general (Jiang and Farimani, 2020) have
shown to be possible.
While all these approaches are promising and give us a snapshot
on the future of geodynamics modeling, the present challenge is rep-
resented by the large number of samples of training set and by the
high level of quality, detail and reliability of the training set. In this
sense, LBM represents a unique opportunity for geodynamics research
to produce the necessary datasets, due to the capability to almost
perfectly scale to large number of processors (Mora et al., 2020) with
very high performance (Mora et al., 2023), and to model at the same
time high as well as low Prandtl numbers (Mora and Yuen, 2018a).
Artificial Intelligence in Geosciences 4 (2023) 47–58
52
P. Mora et al.
Fig. 1. Snapshots of the magnitude of velocity |𝐮| at various time steps with extreme plasticity (left) and for the viscous case — i.e. no plasticity (right). Note that the values are
clipped at half of |𝐮|𝑚𝑎𝑥 so dark red shows regions where |𝐮| > 0.5|𝐮|𝑚𝑎𝑥.
Artificial Intelligence in Geosciences 4 (2023) 47–58
53
P. Mora et al.
Fig. 1. (continued).
Low Prandtl number models are necessary to model the formation of
terrestrial planets, when all or part of the mantle was molten, and to
investigate the transition to the present solid state convection, which is
the engine of plate tectonics.
4.2. The plate tectonic-like behavior defined as complexity theory
Another application of large scale 2D and 3D models is to finally elu-
cidate some of the mysteries of plate tectonics, which require multiple
space and temporal scales to be accurately reproduced. Major exam-
ples in geodynamics are the feedback at different scales between the
megathrust scale and the subduction zone scale, which has seen major
recent strides in numerical modeling (Van Dinther et al., 2013), as for
example in Sobolev and Muldashev (Sobolev and Muldashev, 2017),
which reflects advances in laboratory models, Corbi et al. (2020),
Johnson et al. (2021).
Also the long term geodynamic scale requires high resolution mod-
els in 3D, until now not available. For example Fractal Plate tecton-
ics (Sornette and Pisarenko, 2003) is likely an expression the complex-
ity of the interplay between the large scale mantle flow and the brittle
rupture of the surface (Bird, 2003) as suggested by time dependent
analysis of the last 200 Myrs of plate boundary evolution (Morra
et al., 2013). Large scale models have shown that part of the scaling
between mantle flow and lithospheric deformation reflects the mantle
flow patterns (Mallard et al., 2016) but the fractal scaling across the
scales is still a mystery (Bercovici et al., 2015).
4.3. Computational performance
We have not directly compared the computational performance of
the LBM to that of other approaches which would require comparisons
of specific simulations within the range of applicability of both meth-
ods. For example, many classical approaches are developed assuming
infinite Prandtl number while the LBM can model a wide range of
Prandtl numbers such as 1−104 as well as Rayleigh numbers up to over
𝑅𝑎 ∼ 1012. Recent work Mora et al. (2023) indicates that the LBM is
able to achieve extremely high performance on up to thousands of cores
with the computational kernel running at around 4–5 GFlops/core, and
the overall algorithm including the streaming step and MPI commu-
nications running at 1.3–3 Gflops per core. The exact computational
performance within these ranges depending on number of cores being
used and hardware details such as cache sizes combined with memory
and infiniband bandwidth of the HPC cluster. Whether the LBM or
classical methods are more efficient for any specific simulation where
both are applicable is yet to be studied. However, given the example
in this paper where we modeled a highly nonlinear rheology case for
1.25 Gy in 17.4 min on just 16 cores, we believe that the LBM performs
extremely well for many problems in geodynamics.
Furthermore, given the LBM’s ability to model highly nonlinear
rheologies, sharp viscosity contrasts, and a wide range of Rayleigh &
Prandtl numbers, we believe the that at least in some cases, the LBM
goes beyond the capabilities of classical methods. Hence, we believe
that in many problems – where both methods can be applied – the LBM
will be computationally efficient and/or superior to classical methods.
Artificial Intelligence in Geosciences 4 (2023) 47–58
54
P. Mora et al.
Fig. 2. Snapshots showing a vector plot of velocity 𝐮∗ = (𝑢𝑥, −𝑢𝑧) at various time steps with extreme plasticity (left) and for the viscous case — i.e. no plasticity (right). Note that
the color scale shows either 𝑢𝑥 if |𝑢𝑥| > |𝑢𝑧| so red = right and blue = left, or −𝑢𝑧 otherwise so red = up and blue = down.
Artificial Intelligence in Geosciences 4 (2023) 47–58
55
P. Mora et al.
Fig. 2. (continued).
Furthermore, the LBM also offers extended geodynamical modeling
capabilities such as for simulations at extremely high Rayleigh numbers
and low Prandtl numbers and efficiently modeling nonlinear rheologies.
We note however that at high Prandtl numbers where the dynamics
asymptotically approaches that of an infinite Prandtl number, the LBM
may require a large number of time steps to initiate convection. As
such, for simple rheologies (e.g. viscous) at extremely high Prandtl
numbers whose dynamics asymptotically approached that of infinite
Prandtl number, classical methods may be more efficient than the LBM
although this is yet to be studied.
Unfortunately, to our knowledge, although a direct comparison
of the performance of several codes have been done for the geody-
namo (Hiroaki et al., 2016), no such analysis has been performed
for generally used mantle convection codes, such as Aspect (Bangerth
et al., 2020), Underworld (Mansour et al., 2020), or GAIA (Hüttig and
Stemmer, 2008). For these reasons we can only mention that while the
first two of these codes use a sparse matrix-based solver, and GAIA a
matrix multiplication one, our approach is matrix-free and therefore
promises to ultimately be able to scale more successfully for large
number of processors. Furthermore, our code works in both 2D and 3D.
Existing scaling tests exist for some of the above mentioned software,
e.g. for Aspect, scaling performed for the XSEDE cluster (Anon, 0000)
show that linear scaling is lost at about 100 cores for 2.7 × 105 Degrees
of Freedom (DOFs) and at 1000 cores for about 107 DOFs, so a model
resolution of order a few hundred cubed. Similar results are have been
found for Underworld, where linear scaling is found to around 1000
cores for a 3D mesh of 2563 so 16.8 million model size, estimated
equivalent to 7×107 DOFs (Giordani, 2021). While a direct performance
comparison would require running exactly the same problem, with the
same resolution and for the same scaled geodynamical time, our LBM
implementation displays weak linear scaling to 2048 cores (the largest
number available to us) for up to 64 million computing points where
further details and performance analysis will be given in a publication
in preparation (Mora et al., 2023).
5. Conclusions
The Lattice Boltzmann Method (LBM) is a semi-microscopic method
in which particle number densities move and collide on a discrete
lattice which has been shown to model the incompressible Navier–
Stokes equations in the macroscopic limit. We have presented the
thermal LBM as an alternate means to classical numerical solutions to
PDE’s for geodynamic simulations of mantle convection in the Earth or
exoplanets. The advantage of the LBM is that it is able to handle large
viscosity ranges and contrasts, temperature dependent rheologies and
highly nonlinear rheologies such as ‘‘extreme plasticity’’, which endows
mantle convection with a connection to the past. We demonstrate the
method by modeling a two layer system with an upper low viscosity
layer with a highly nonlinear rheology with 𝜈𝑒𝑓𝑓 ∝ ̇𝜖−𝑁 where 𝑁 =
4. We find that, as expected, introduction of this highly nonlinear
rheology leads to the emergence of plate tectonic like behavior where
emergence is as defined by complexity theory (Nicolis and Prigogine,
1989). We therefore propose the LBM provides a valuable alternative
to classical numerical solutions to PDE’s for modeling the dynamics of
Artificial Intelligence in Geosciences 4 (2023) 47–58
56
P. Mora et al.
Fig. 3. Snapshots of temperature 𝑇 at various time steps with extreme plasticity (left) and for the viscous case – i.e. no plasticity (right). Cold downwellings can be seen as blue
colors, and upwelling plumes can be seen in red colors.
Artificial Intelligence in Geosciences 4 (2023) 47–58
57
P. Mora et al.
Fig. 3. (continued).
the earth and exoplanets. The LBM’s ability to model a wide range of
viscosities, multiphase flow, strong viscosity contrasts, high Rayleigh
numbers, a wide range of Prandtl numbers and highly nonlinear rhe-
ologies such as ‘‘extreme plasticity’’ with 𝜈𝑒𝑓𝑓 ∝ ̇𝜖−4 as shown here,
potentially allows it to model the dynamics of the earth and exoplanets
from the early lava world stage through to plate tectonics or other
regimes. Our code is available to researchers upon request for collabo-
rative research and in time will become open source, and moreover, it
is parallelized using MPI with linear weak scaling, and hence, has the
potential to run on 104 to 105 cores, which can make use of today’s era
of exascale computing.
Declaration of competing interest
The authors declare that they have no known competing finan-
cial interests or personal relationships that could have appeared to
influence the work reported in this paper.
Data availability statement
No new data were generated or analyzed in support of this research.
Acknowledgments
We thank Professors Shun-ichiro Karato and Roberto Sabadini for
discussions about mantle rheology over many timescales. We also thank
Cedric Thieulot for reviewing a draft paper and helpful comments. D.
Yuen would like to thank NSF’s geochemistry and CISE program for
support, as well as the DoE, NSF and NASA. G. Morra would like to
thank NASA Emerging World program for support.
Funding statement
This research was supported by the College of Petroleum Engineeing
and Geosciences (CPG) at King Fahd University of Petroleum and
Minerals, Saudi Arabia. This research was in part funded by the US
DoE [Grant DE-SC0019759], by the National Science Foundation, USA
[Grant EAR-1918126] and by the NASA Emerging World program, USA
[Grant 20-EW20_2-0026].
References
Anon, 0000. Computational Infrastructure for Geodynamics (CIG), http://geoweb.cse.
ucdavis.edu/cig/dev/xsede-resources/code-scaling/.
Aslan, E., Taymaz, I., Benim, A.C., 2014. Investigation of the lattice Boltzmann SRT
and MRT stability for lid driven cavity flow. Int. J. Mater. Mech. Manuf. 2 (4),
317–324.
Baldi, P., 2021. Deep Learning in Science. Cambridge University press, p. 371.
Bangerth, W., Dannberg, J., Gassmoeller, R., Heister, T., 2020. ASPECT v2. 2.0. Zenodo.
https://zenodo.org/record/3924604.
Bercovici, D., Tackley, P., Ricard, Y., 2015. 7.07-The generation of plate tectonics from
mantle dynamics. Treatisen Geophys. 7, 271–318. http://dx.doi.org/10.1016/B978-
0-444-53802-4.00135-4.
Artificial Intelligence in Geosciences 4 (2023) 47–58
58
P. Mora et al.
Bhatnagar, P.L., Gross, E.P., Krook, M., 1954. A model for collision processes in gases
I. small amplitude processes in charged and neutral one-component systems. Phys.
Rev. 94 (3), 511.
Bird, P., 2003. An updated digital model of plate boundaries. Geochem. Geophys.
Geosyst. 4 (3), http://dx.doi.org/10.1029/2001GC000252.
Boroumand, M., Morra, G., Mora, P., 2023. Extracting fundamental parameters of 2-d
natural thermal convection using machine learning. In: Bulletin of the American
Physical Society - APS March Meeting 2023. T00.00300.
Chen, S., Doolen, G., 1998. Lattice Boltzmann method for fluid flows. Annu. Rev. Fluid
Mech. 30, 329–364.
Chen, S., He, X., Volfango, B., Moran, W., 2014. Electro-osmosis of non-Newtonian
fluids in porous media using lattice Poisson–Boltzmann method. J. Colloid Interface
Sci. 436, 186–193.
Corbi, F., Bedford, J., Sandri, L., Funiciello, F., Gualandi, A., Rosenau, M., 2020.
Predicting imminence of analog megathrust earthquakes with machine learn-
ing: Implications for monitoring subduction zones. Geophys. Res. Lett. 47 (7),
e2019GL086615.
Dellar, P., 2002. Lattice kinetic schemes for magnetohydrodynamics. J. Comput. Phys.
179, 95—126. http://dx.doi.org/10.1006/jcph.2002.7044.
d’Humières, D., Ginzburg, I., Krafczyk, M., Lallemand, P., Luo, L.S., 2002. Multiple
relaxation time lattice boltzmann models in three dimensions. Philosoph. Trans. R.
Soc. London 360, 437–451.
Dye, Brian C., Morra, Gabriele, 2020. Machine learning as a detection method of
Strombolian eruptions in infrared images from Mount Erebus, Antarctica. Phys.
Earth Planet. Inter. 305, 106508.
Falk, A.L., Wittel, M.M., Herrmann, H.J., 2015. Lattice-Boltzmann method for geo-
physical plastic flows. In: Wu, W. (Ed.), Recent Advances in Modeling Landslides
and Debris Flows. Springer Series in Geomechanics and Geoengineering. Springer,
Cham, pp. 131–140.
Frisch, U., Hasslacher, B., Pomeau, Y., 1986. Lattice-gas automata for the Navier–Stokes
equation. Phys. Rev. Lett. 56 (14), 1505.
Gerya, T., 2019. Introduction to Numerical Geodynamic Modelling, Second Edition.
Cambridge University Press.
Giordani, J., 2021. Underworld 2.11 scaling. https://www.underworldcode.org/articles/
2-11-scaling/.
Hiroaki, M., Heien, E., Aubert, J., Eric, H., Aurnou, J.M., Avery, M., Brown, B.,
Buffett, B.A., Busse, F., Christensen, U.R., Davies, C.J., Featherstone, N., Gastine, T.,
Glatzmaier, G.A., Gubbins, D., Guermond, J.L., Hayashi, Y.Y., Hollerbach, R.,
Hwang, L.J., Jackson, A., Jones, C.A., Jiang, W., Kellogg, L.H., Kuang, W.,
Landeau, M., Marti, P., Olson, P., Ribeiro, A., Sasaki, Y., Schaeffer, N., Simitev, R.D.,
Sheyko,
A.,
Silva,
L.,
Stanley,
S.,
Takahashi,
F.,
Takehiro,
S.,
Wicht,
J.,
Willis, A.P., 2016. Performance benchmarks for a next generation numerical
dynamo model. Geochem. Geophys. Geosyst. 17, 1586–1607. http://dx.doi.org/10.
1002/2015GC006159.
Huang, H., Sukop, M., Lu, X., 2015. Multiphase lattice Boltzmann methods: Theory and
application. Wiley-Blackwell.
Hüttig, C., Stemmer, K., 2008. Finite volume discretization for dynamic viscosities on
voronoi grids. Phys. Earth Planet. Inter. 171 (1-4), 137–146.
Jiang, C., Farimani, A.B., 2020. Deep learning convective flow using conditional
generative adversarial networks. arXiv preprint arXiv:2005.06422.
Johnson, P.A., Rouet-Leduc, B., Pyrak-Nolte, L.J., Beroza, G.C., Marone, C.J., Hul-
bert, C., Howard, A., Singer, P., Gordeev, D., Karaflos, D., Levinson, C.J., Pfeiffer, P.,
Puk, K.M., Reade, W., 2021. Laboratory earthquake forecasting: A machine learning
competition. Proc. Natl. Acad. Sci. 118 (5), e2011362118.
Karato, S.I., 2008. Deformation of Earth Materials. An Introduction to the Rheology of
Solid Earth, vol. 463. Cambridge, New York, Melbourne.
Krüger, T., Kusumaatmaja, H., Kuzmin, O., 2017. The Lattice Boltzmann Method:
Principles and Practice (Chapter 8). Springer.
Mallard, C., Coltice, N., Seton, M., Müller, R.D., Tackley, P.J., 2016. Subduction controls
the distribution and fragmentation of Earth’s tectonic plates. Nature 535 (7610),
140–143.
Mansour, J.A., Giordani, J., Moresi, L., Beucher, R., Kaluza, O., Velic, M., Farrington, R.,
Quenette, S., Beall, A., 2020. Underworld2: Python geodynamics modelling for
desktop, HPC and cloud. J. Open Sour. Softw. http://dx.doi.org/10.21105/joss.
01797.
Mooers, G., Tuyls, J., Mandt, S., Pritchard, M., Beucler, T.G., 2020. Generative modeling
of atmospheric convection. In: Proceedings of the 10th International Conference on
Climate Informatics. pp. 98–105.
Mora, P., Morra, G., Yuen, D., 2020. A concise python implementation of the lattice
Boltzmann method on HPC for geo-fluid flow. Geophys. J. Int. 220 (1), 682–702.
http://dx.doi.org/10.1093/gji/ggz423.
Mora, P., Morra, G., Yuen, D., 2023. HPC implementation of the thermal Lattice
Boltzmann Method for geodynamics simulations, in preparation.
Mora, P., Morra, G., Yuen, D., Juanes, R., 2021. Influence of wetting on viscous
fingering via 2D Lattice Boltzmann simulations. Transp. Porous Media 138,
511–538.
Mora, P., Yuen, D., 2017. Simulation of plume dynamics by the Lattice Boltzmann
Method. Geophys. J. Int. Express Lett. 212 (3), 1932–1937.
Mora, P., Yuen, D., 2018a. Simulation of regimes of thermal convection and plume
dynamics by the Lattice Boltzmann Method. Phys. Earth Planet. Inter. 275, 69–79.
http://dx.doi.org/10.1016/j.pepi.2018.01.003.
Mora, P., Yuen, D.A., 2018b. Comparison of convection for Reynolds and Arrhenius
temperature dependent viscosities. Fluid Mech. Res. Int. J. 2 (3), 99–107.
Morra, G., Bozdag, M., Knepley, L., Räss, E., Vesselinov, V., 2021. A tectonic shift
in analytics and computing is coming. EOS, p. 102. http://dx.doi.org/10.1029/
2021EO159258.
Morra, G., Seton, M., Quevedo, L., Müller, R.D., 2013. Organization of the tectonic
plates in the last 200 Myr. Earth and Planet. Sci. Lett. 373, 93–101.
Morra, G., Yuen, D.A., Tufo, H.M., Knepley, M.G., 2020. Fresh outlook in numerical
methods for geodynamics–Part 2: Big data HPC Education. In: Encyclopedia of
Geology. pp. 841–855.
Nicolis, G., Prigogine, I., 1989. Exploring Complexity: An Introduction, 328pp. St.
Martin’s Press.
Qingkai, Kong, Chiang, Andrea, Aguiar, Ana C., Giselle Fernández-Godino, M., My-
ers, Stephen C., Lucas, Donald D., 2021. Deep convolutional autoencoders as
generic feature extractors in seismological applications. Artif. Intell. Geosci. 2,
96–106.
Shahnas, M.H., Yuen, D.A., Pysklywec, R.N., 2018. Inverse problems in geodynamics
using machine learning algorithms. J. Geophys. Res. Solid Earth 123 (1), 296–310.
Sherburn, J.R., Horstemeyer, M.F., Bammann, D.J., Baumgardner, R.R., 2011. Two-
dimensional mantle convection simulations using an internal state variable model:
The role of a history dependent rheology on mantle convection. Geophys. J. Int.
186 (3), 945–962.
Sobolev, S.V., Muldashev, I.A., 2017. Modeling seismic cycles of great megathrust
earthquakes across the scales with focus at postseismic phase. Geochem. Geophys.
Geosyst. 18 (12), 4387–4408.
Sornette, D., Pisarenko, V., 2003. Fractal plate tectonics. Geophys. Res. Lett. 30 (3).
Succi, S., 2018. The Lattice Boltzmann Equation: For Complex States of Flowing Matter.
Oxford University Press, http://dx.doi.org/10.1093/oso/9780199592357.001.0001.
Tackley, P.J., 2000. Self-consistent generation of tectonic plates in time-dependent,
three-dimensional mantle convection simulations Part 1: Pseudo-plastic yielding.
Geochem. Geophys. Geosyst. 1 (1), http://dx.doi.org/10.1029/2000GC000036.
Tosi, N., Stein, C., Noack, C., Samuel, H.Maierova., Davies, D.R., Wilson, C.R.,
Kramer, S.C., Thieulot, C., Glerum, A., Fraters, W., Rozel, A., Tackley, P.J., 2015.
A community benchmark for viscoplastic thermal convection in a 2-D square
box. Geochem. Geophys. Geosyst. 15 (7), 2175–2196. http://dx.doi.org/10.1002/
2015GC005807.
Van Dinther, Y., Gerya, T.V., Dalguer, L.A., Mai, P.M., Morra, G., Giardini, D., 2013.
The seismic cycle at subduction thrusts: Insights from seismo-thermo-mechanical
models. J. Geophys. Res. Solid Earth 118 (12), 6183–6202.
Zou, Q., He, X., 1997. On pressure and velocity flow boundary conditions and bounce
back for the lattice Boltzmann BGK model. Phys. Fluids 9, 1591–1598.
