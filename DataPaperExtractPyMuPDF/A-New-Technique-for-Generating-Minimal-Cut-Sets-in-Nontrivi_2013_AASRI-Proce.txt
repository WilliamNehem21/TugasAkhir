 AASRI Procedia  5 ( 2013 )  67 – 76 
2212-6716 © 2013 The Authors. Published by Elsevier B.V.
Selection and/or peer review under responsibility of American Applied Science Research Institute
doi: 10.1016/j.aasri.2013.10.060 
ScienceDirect
 
2013 AASRI Conference on Parallel and Distributed Computing and Systems 
A New Technique for Generating Minimal Cut Sets in 
Nontrivial Network 
Mohamed-Larbi Rebaiaiaa*, Daoud Ait-Kadi 
aResearch Center : CIRRELT, mechanical engineering department, Laval university, Quebec (QC), Canada 
bMechanical engineering department, Laval university, Quebec (QC), Canada  
 
Abstract 
Network reliability analysis problem is the center of many scientific productions. It consists of evaluating the all-terminal 
reliability of networks. Two classes have emerged; exact and approximate methods. The aim of this paper is to present an 
efficient exact method for enumerating minimal cuts (MCS) of R-networks. The algorithm proceeds by determining 
minimal paths set (MPS) and from which minimal cuts are generated by managing binary decision diagrams. The 
manipulation process consists of a series of transformations, reductions and filtering operations. The approach succeeds in 
the reduction of computation time and memory space and was applied for evaluating the reliability of a national radio 
communication network. 
 
© 2013 Published by Elsevier B.V.  
Selection and/or peer review under responsibility of American Applied Science Research Institute 
 
Keywords: Performance evaluation, minimal cut set, 2-terminal Networks reliability, Wireless communication networks 
1. Introduction 
R-networks (R: for reliability) are a representative graph-model of systems. They are stochastic because 
each link between two nodes takes its value in Boolean domain and events are randomly distributed in 0,1
n . 
 
 
* Corresponding author. Tel.: -1-418-656-2131(#12244); fax: +1-418-656-7415. 
E-mail address: Mohamed-larbi.rebaiaia@cirrelt.ca. 
Available online at www.sciencedirect.com
© 2013 The Authors. Published by Elsevier B.V.
Selection and/or peer review under responsibility of American Applied Science Research Institute
Open access under CC BY-NC-ND license.
Open access under CC BY-NC-ND license.
68  
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
R-networks are particular graphs and could be either directed or undirected. “0” correspond to the failure 
mode and 1 to the operating mode, and nodes as links may fail randomly. R-networks are only used for 
determining the reliability of systems. A large literature relative to networks reliability evaluation have been 
discussed in many publications and concerns physical systems such as electric power systems, 
telecommunication networks, and traffic and transportation systems (Rebaiaia and Ait-Kadi, 2010; Hardi et 
al., 2007).  
Generally, reliability engineers model the physical connectivity of system components using a network. 
Mathematically, a network is a graph 
( ,
)
G U E in which the edges E represent the components (e.g. devices, 
computers, routers, etc.) and the nodes U represent the interconnections.  
Network reliability analysis problem has been the subject of many scientific productions (Rebaiaia, 2011; 
Kuo et al., 2007; Al-Ghanim, 1999; Rauzy, 1993; Yeh, 2007). It consists of evaluating the 2-terminal, K and 
all-terminal reliability. The letter K, represents le number of nodes of any sub-network of the R-network. 
General theory, has discussed extensively two techniques; exact and approximate methods (Locks, 1992). 
The exact methods employ the concept of minimal pathsets/cutsets (MPS/MCS). Determining MCS is 
essential not only to evaluate the reliability indices but also to investigate the different scenarios to find for 
instance the redundant components which could be added to improve the load point reliability. Enumerating 
all MCS may be a preferable way if the number of paths is too huge to be practically enumerated than the 
number of cuts. Examples of this kind of preferences is the 2x100 lattice which has 299  paths and just 10000 
cuts (Kuo et al. , 2007), and complete network with 10 nodes from which it can be generated 109601 minimal 
paths and 256 cuts. In existing algorithms (Jason and Kai, 1985; Yan et al., 1994), minimal paths are deduced 
from the graph using simple and systematic recursive algorithms that guarantee the generated paths set to be 
minimal. The enumeration of MCS is more problematic because it needs advanced mathematics, set theory 
and matrices manipulation. In the paper of Locks and Wilson, 1992, a method is presented for generating 
MPS directly from MCS, and vice-versa. It starts with the inversion of the reliability expression accomplished 
by a recursive method combining a 2-step application of De-Morgan's theorems. Yan et al., 1994 presented a 
recursive labelling algorithm for determining all MCS in a directed network. They used an approach adapted 
from dynamic programming methods. The algorithm produces all MCS, and then eliminates any redundant 
cutsets by simple comparison. Jasmon et al., 1985 use an algorithm which proceeds by deducting first, the 
link cutsets from node cutsets, and second, determine basic minimal paths using network decomposition. 
Recently, Yeh, 2007 presented a simple algorithm for finding all MPS between the source and the sink nodes. 
It is based on the universal generating function. More recently, Rebaiaia and Ait-Kadi, 2012 proposed an 
elegant and fast algorithm to enumerate MPS using a modified DFS technique. The procedure uses each 
discovered path to generate new MPS from sub-paths. The above procedure is repeated until all MPS are 
found. The algorithm didn’t at all produce any redundant MPS.  
This paper presents an efficient technique for determining all MCS of a given directed or undirected graph 
network using an approach based on binary decision diagrams (BDD’s) representation. The first interest of 
BDDs is that they encode disjoints terms. This allows to enormously simplifying the probabilistic calculation 
as the Poincaré formula as it is reduced to its first term (For more details on the Poincaré formula, please see 
Rebaiaia, 2011). This is why this approach is so effective to perform exact probabilistic calculations. The 
algorithm proceeds in two stages. First action consists of determining MPS using a fast depth first search 
(DFS) algorithm. The second action consists of obtaining MCS by manipulating the reduced ordered BDD 
(ROBDD) of the MPS. The manipulation process consists of a series of transformations, reductions and 
filtering actions. 
The paper is structured as follows. Section 2 presents some related preliminaries. Section 3 details the 
principle of BDD manipulations. Section 4 and section 5 give respectively the algorithm for generating MCS 
from ROBDD and its computational efficiency illustrated using some benchmark networks. In section 6, a 
69
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
practical problem is presented and consists of evaluating the reliability of a radio communication network. 
The paper concludes in section 7. 
2. Preliminaries 
Consider a system consisting of m components numbered from 1 to m. Each of these components may be 
Up (running) or Down (failed). Let 
ix be the state component and X  the state vector. In the field of 
reliability engineering, a system can be modeled by a network (graph) and its reliability is generated from the 
corresponding structure function which is identified as the mathematic expected function where the vectors 
are the minimal paths set (MPS) respectively the minimal cuts set (MCS) (see Rebaiaia, 2011 for more 
details). An example is illustrated as follows: 
Consider the directed bridge network in Fig. 1 (a) from which the following MPS and MCS are generated: 
1
1
4
2
2
5
3
1
3
5
,
;
,
;
,
,
P
x x
P
x
x
P
x x x
.
1
1
2
2
1
5
3
2
3
4
4
4
5
,
;
,
;
,
,
;
,
C
x x
C
x x
C
x
x x
C
x
x
ix  represents the state of a component  i and P1, P2 and P3 , and C1, C2, C3 and C4 are respectively the MPS 
and MCS derived from the network in Fig. 1 (a). 
The structure function 
X t
of the system is equivalent to the series-parallel graph (Fig. 1 (b)). It can 
be written as follows: 
1
4
2
5
1
3
5
1
1
1
1
1
1
1
1
1
1
X t
x
x
x
x
x
x
x
 
The reliability of the system generated from the minimal paths set (figure 1.b) is  
1
4
2
5
1
3
5
1
2
4
5
1
3
4
5
1
2
3
5
1
2
3
4
5
Pr
1
R t
t
p p
p p
p p p
p p p p
p p p p
p p p p
p p p p p  
Where  Pr . is the probability function and 
ip for 
1,
,5
i
are respectively the probability of component i 
being UP and 
1
i
i
q
p  being DOWN. 
And, the reliability of the system generated from the minimal cuts set (figure 1.c) is  
1
4
2
5
1
3
5
1
2
4
5
1
3
4
5
1
2
3
5
1
2
3
4
5
Pr
1
R t
t
p p
p p
p p p
p p p p
p p p p
p p p p
p p p p p  
 
 
 
 
 
 
 
 
 
 
Fig.1. (a) System structure, (b) Reliability structure of (a): case MPS, (c) Reliability structure of (a): case MCS. 
1
4
1
3
4
2
5
1
1
1
2
5
5
3
2
2
3
4
5
4
5
(a) 
(b) 
(c) 
70  
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
3. Binary Decision Diagram Approach 
Experimental techniques have been applied to reduce reliability network expression, but they are not 
adequate for simplifying network Boolean expression. One of the efficient solutions has been introduced by 
Bryant, 1992 who was the first to encode the theorem of Shannon using a new interpretation formula called 
ITE for If Then Else, which is used to represent and manipulate logical formula as a binary decision diagrams. 
The implementation and manipulation of BDD algorithms is composed by three procedures, restrict, apply 
and ite. The problem with BDD representation despite their effectiveness is that, their exponential growing 
size due to a wrong order declaration between variables. To overcome partially this problem, Ruddell, 1993  
used a dynamic programming algorithm to reduce the size of the BDD demonstrated that; improving the 
Variable Ordering of a BDD is NP-Complete. BDD principle has been used in many fields for simplifying 
Boolean expressions. Rauzy, 1993 applied first, BDDs for evaluating networks reliability. Recently several 
papers have been dedicated to ROBDD for reliability investigation as those of Hardy et al., 2007.  
The representation and the simplification of a Boolean expression proceed in 4-steps as follows: 
- 
Construct the binary decision tree (BDT) associated with the graph formula. 
- 
Transform the BDT to a BDD by applying the following rules (see Fig.2) by: 
a- Merging equivalent leaves of a binary decision tree. 
b- Merging isomorphic nodes.  
c- Elimination of redundant tests 
- Transform the BDD to ordered BDD (OBDD) by just a wise choice on variables (see. Rudell, 1993).  
 
OBDD can be reduced to a ROBDD by repeatedly eliminating, any instances of duplicate and redundant 
nodes using a bottom-up graph traversing procedure. If two nodes are duplicates, one of them is removed and 
all of its incoming pointers are redirected to its duplicate. If a node is redundant, it is removed and all 
incoming pointers are redirected to its just one child. 
To overcome this deficiency, Bryant, 1992 suggested to represent the decomposition procedure of 
Shannon as an ITE (if then else) function, which in turn is expressed by the following relation: 
1
2
1
2
( ,
,
)
.
.
f
ite x F F
x F
x F  
Two modified “pseudo-code” have been written to simulate the ite and Apply functions of Bryant (see 
Rebaiaia, 2011 and Rebaiaia and Ait-Kadi, 2010 for more the details). 
4. Generation of MCS from ROBDD 
As described by Locks and Wilson. 1992, an inverse polynomial to the path polynomial can be obtained 
by complementing the given polynomial and using De Morgen’s laws. If we transpose the idea of generating 
MCS by inversion as introduced by Locks and Wilson, 1992 and Shier and Whited, 1985, we can use the 
model generated by the graphical representation of BDD.  
The new idea is explained first using the bridge network to show how one can generate minimal cuts by 
just using a DFS procedure (Rebaiaia, 2011), which visits BDD graph nodes representing the Boolean 
decision variables and edges.   
Consider the bridge network given in Fig.1.(a) and its corresponding ROBDD constructed from the MPS 
(Fig.2. (a)). The first step try to find the cutset by traversing the graph tree by tracing the arborescence from 
button to top in a reverse direction. The second step proceeds by removing from the branches cuts. In the 
third phase, the algorithm deletes all redundant cuts to build the MCS. 
71
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
The following procedure works for generating MCSs using a depth first search algorithm and data 
information’s taken from matrix of Fig. 2. (b).  
 
Procedure Generation_of  MCS 
- 
Place the squared node on top of a stack 1  //* records DFS visits to ROBDD nodes *//. 
- 
Place the squared node on top of a stack 2  //* records cut’s nodes. 
- 
Place on the top of the stack 1 all the ascending nodes of the top variable in the stack. 
- 
Place the node top of the stack 1 on top of the stack 2, if the edge (link) is dotted. 
- 
Continue until the variable reach the root node. 
- 
If so, a cut has been found. Write the content of the stack 2 as a line of a matrix. Remove top 
variable from stack 1 and from stack 2. 
- 
Continue the procedure until stack 1 is empty. 
- 
Apply the filtering process by removing all the redundant paths (cuts) using the matrix of 
paths (cuts) 
- 
Display MSC Matrix. 
end_procedure  
 
 
 
 
 
 
 
 
 
 
 
Fig. 2. (a) : The BDD network of figure 1.(a) and (b) : its representation code in memory. 
The filtering procedure removes redundant cuts from the set of all the cuts. It proceeds as follows: 
1- Sort the matrix CS in an ascending order according to the size of each vector (number of variables); 
2- Take the first vector and compare it with each of the others vectors; 
3- If the members of the intersection are equal to the first vector then remove the actual vector from CS 
matrix; 
4- Iterate using the others vectors of the matrix.  
 
The following pseudo-description shows the processing of the filtering procedure as explained bellow: 
Procedure filtering(CS, MCS) 
(b) 
[       8]       4:     0        1 
[     10]       5:     0        1 
[ 8010]       4:   10        1 
[ 8011]       3:     8     8010 
[ 8013]       2:     0       10 
[ 8014]       2:  8011  8010 
[ 8015]       1:  8013  8014 
 
 
0 
1 
4 
5 
4 
2 
3
1 
2
(a) 
72  
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
n = length(CS); /* size of matrix vector */;  m = 
size(CS);  /* size of matrix vector 
   for i = 1,m-1 
       v(k) = CS(i,k) (k=1,...,n)(CS(i,k)  0) 
      for j = i+1,m 
          w(k) = v(k) CS(j,k) (k=1,...,n)(CS(i,k)  0) 
          if w(k) = v(k) (CS(j,k) is a redundant vector) 
             remove vector  CS(j,k); 
         end_if 
     end_for 
 end_for 
    MPS = CS;   display MPS   
end_procedure  
5. Experimental results 
The proposed algorithms have been implemented in MatLab 8 and Java Jdk 1.6. A communicating 
interface has been written to render easy data and results transfer between MatLab system and Java packages 
running under jGRASP, which is a graphical tool written in Java JDK. The operating system is 32 bits and 
2038 MO of Windows Vista of Microsoft. The machine is an HP notebook PC with an Intel(R) core (TM) 2 
Duo processor of 1.67. The benchmark networks in figure 3 were used and the results are in the table (at 
right). All the networks are 2-terminal and they have been used in different publication papers. We can 
remark from these results, that the value of execution time is interesting despite the fact that the performance 
of the machine characteristics is not high. The importance of this work show the efficiency of the algorithms 
developed in this work. It is certain that if the CPU was more powerful and memory space was wider the 
program could easily handle more complex networks.  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Networks 
#MPS 
#MCS 
Time(s) 
A 
8 
12 
0.075591 
B 
18 
110 
0.282727 
C 
115 
85 
313.17 
D 
33 
72 
11.29 
E 
35 
3 
0.046 
F 
114 
562 
21236.06 
G 
10 
959 
818.80 
H 
29 
29 
0.708676 
I 
25 
20 
0.332611 
J 
13 
21 
4.059842 
K 
44 
528 
2572.03   
L 
6 
23 
0.226500 
M 
36 
96 
11.166 
N 
100 
16 
8.3297 
O 
98 
105 
283.38 
P 
5 
16 
0.768533 
Q 
13 
9 
0.945836 
73
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
Fig.3. Benchmark networks (left) and their generated minimal paths and cuts sets  
 
A 
 
B 
 
C 
                                  D 
E 
F 
G 
H 
I 
 
J 
K 
L 
M 
 
N   
   O 
   P 
Q 
 
 
 
 
 
 
 
 
t  
s 
74  
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
6. Case Study- A radio communication network 
To illustrate the algorithms presented in this paper, we propose a real a case study problem of undirected 
regional radio communication network showed in Fig.4. Fundamental statements necessary to analyse the 
system are presented in (Rebaiaia, 2011). All the details on the architecture of the system, the model 
representation and the model simulation, and the reliability indices and how they have been generated of the 
individual system components can be found in Rebaiaia and Ait-Kadi, 2010, and Rebaiaia et al., 2012.  
Reliability indices consisting of failure rate, failure duration, fading duration, mean time between failure 
(MTBF), availability and other’s system information.  
The radio system consists of equipment’s scattered across a wide geographic area. The basic components 
of the radio system are: Radios (portable and mobile), sites (master sites, secondary Radio Frequency 
(UHF/VHF sites)), zones (a zone or zones with one or more UHF/VHF sites), and sites (master sites, 
secondary Radio Frequency (UHF/VHF sites)). 
In the radio system, a zone is responsible for managing its own elements (sites, repeaters, subscribers, 
UHF-VHF and microwave carriers) interconnected using a Local Area Network (LAN). The LANs are 
interconnected though a high-speed transport network to form a Wide Area Network (WAN). The WAN 
allows user configuration information, call processing information, and audio to be conveyed throughout the 
system. 
 
 
Fig. 4.  A regional radio communication network (left) and its reliability block diagram (right) 
The graph in Figure 4 (left) presents the radio communication network. Each node is a standard site or a 
75
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
master site. There are more than 160 standard sites and three master sites. The link between sites is insured 
using a microwave communication system. We can observe that there are seven loops and each Loop is 
composed of dozen of sites. The problem is not as simple as one can think and the determination of all 
minimal cuts set, it quickly becomes very complex. The idea found in this work is to consider that each 
branch of a loop consists of a site component, as shown in Figure 4 (right). A site component represents the 
concatenation of others site on the same branch. When the minimal paths set are finally determined which 
might be called meta-MCS, then the algorithm generates the ordinary MCS by combination of these meta- 
MCS. Table 5 and 6 give respectively the reliability of each site and the microwave link which is determined 
using the availability generated by the system. Because that the mean time to repair is negligible the 
reliability is taken as equal to the reliability. The application of the program gives the results depicted in 
Table 1. 
Once all the MCS are known, then the algorithm proceeds to calculate the network reliability using a novel 
procedure (see. Rebaiaia, 2011), and the determination of each component reliability uses different 
informations (e.g. the mean time between failures (MTBF)). The results of the calculus are shown in Table 1. 
Table 1. The reliability joining any two nodes (this is a part of a big table of dimension = 156 links x 156 links). 
  
Site 1 
Site 2 
Site 3 
Site 4 
Site 5 
Site 6 
… 
Site 162 
Site 1 
0,99985 
0,9997959 
0,99984233
0,99984429
0,99991849
0,99935891
… 
0,99984525 
Site 2 
 
0,9998767 
0,99978802
0,99985381
0,99958976
0,99968957
… 
0,99981247 
Site 3 
 
 
0,99996685
0,99971845
0,99912586
0,99914879
… 
0,99935487 
Site 4 
 
 
 
0,99987748
0,99978492
0,99956287
… 
0,99968973 
Site 5 
 
 
 
 
0,99995722
0,99945456
… 
0,99912357 
Site 6 
 
 
 
 
 
0,99996286
… 
0,99952413 
… 
 
 
 
 
 
 
… 
0,99975315 
Site 162 
 
 
 
 
 
 
… 
0,99995864 
7. Conclusion 
This paper presents an efficient algorithm for generating all minimal cuts of a given network. The 
algorithm is based essentially on the information taken from the computed table relative to a binary decision 
diagram representation. These BDDs have been first determined using the composition of minimal pathset. 
So indirectly, the minimal cutsets are scanned from minimal pathsets which use a particular pseudo-algorithm 
to be generated. The described method in this paper can be applied for relatively large systems. It is similar to 
those of Locks technique but its effectiveness is far better. We applied the algorithm’s program to different 
graphs as shown in Fig. 3, and we can testify that the time required for generating all cutsets proceeds in 
linear time. Also, a simple procedure has been used to determine the reliability of a large radio-
communication and the results of the calculation are presented here in and in Rebaiaia, 2011. 
References 
[1] Rebaiaia ML, Ait-Kadi D. A Program for Computing the Reliability of Communication Networks. In The 
Latin American Conference. Chile, August, 24:27. 2010. 
76  
 Mohamed-Larbi Rebaiaia and Daoud Ait-Kadi /  AASRI Procedia  5 ( 2013 )  67 – 76 
 
[2] Hardy G, Lucet C, N. Limnios. K-Terminal Network Reliability Measures with Binary Decision Diagrams. 
IEEE Transaction on Reliability, 56,506:515, 2007. 
[3] Rebaiaia ML. Contributions to the evaluation and optimization of networks reliability. PhD Thesis, 
University of Laval, CA, 2011. 
[4] Kuo SY, Yeh., F.M, Lin Y.H. Efficient and Exact Reliability Evaluation for Networks With Imperfect 
Vertices. IEEE Transaction on Reliability, 56, 288:300, 2007. 
[5] Al-Ghanim AM. A heuristic technique for generating minimal path and cutsets of a general network. 
Computers & Industrial Engineering, 36, 45:55, 1999. 
[6] Rauzy, A. New Algorithms for fault tree analysis. Reliability Eng. and Systems Safety J; 40, 203:210, 
1993. 
[7] Yeh W-C. A Simple Heuristic Algorithm for Generating All Minimal Paths. IEEE Transactions on 
Reliability. 56: 488-494, 2007. 
[8] Locks MO, Wilson JM. Note on disjoint products algorithms. IEEE Transactions on Reliability. 41:  81-84, 
1992. 
[9] Jasmon G. B, Kai O.S. A New Technique in Minimal Paths and Cuts set Evaluation. IEEE Transactions 
on Reliability, R34, 136:143, 1985. 
[10] Yan L, Taha H, Landers L.A. Recursive Approach for Enumerating Minimal Cuts sets in a Network.  
IEEE Transactions on Reliability, 43, 383:388, 1994. 
[11]Rebaiaia M.L, Ait-Kadi D., Merlano A, Page D and Gosselin R, Modeling and evaluation of a national 
radio telecommunication network reliability, conference  LM18, Tours France, 2012 
[12] Bryant RE. Symbolic Boolean Manipulation with Ordered Binary Decision Diagrams. ACM Computing 
Surveys, 3, 293:318, 1992. 
[13] Rudell, R. Dynamic variable ordering for ordered binary decision diagrams. In: IEEE/ACM international 
conference on Computer-aided design, 42:47, 1993. 
[14] Shier DR, Whited DE. Algorithms for generating minimal cutsets by inversion. IEEE Transaction on 
Reliability, R-34, 314:319, 1985. 
[15] jGRASP, Auburn University, http://www.jgrasp.org (accessed 10 May 2011). 
