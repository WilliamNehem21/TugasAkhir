this paper presents a rule-based algorithm for performing order-sorted e-unification using an unsorted e-unification decision procedure under assumptions about e that are commonly satisfied in practice. we have implemented this algorithm in maude for use with the maude-nrl protocol analyzer and have used cime for unsorted e-unification for e any set of ac and acu axioms. in many examples of interest, using order-sorted unification over unsorted unification is able to reduce the total number of unifiers considered, and dramatically improve the performance of the maude-nrl tool.



this paper is organized as follows. in section 2, we review basic definitions of order-sorted algebra and unification. in section 3, we present our algorithm to compute order-sorted unifiers from unsorted unifiers. in section 4, we illustrate how it can be used for ac and acu order-sorted unification in maude and, in section 5 we prove its correctness. finally, in section 6, we discuss related work and suggest directions for future research.



to validate these ideas and test this assumption, we have extended an alpha version of maude so that it may communicate with cime[3,4] by passing unsorted unification problems as strings, and parsing the unsorted unifiers returned from cime back into maude terms. as an additional safeguard, the parsing process checks the substitutions returned by cime to verify that assumption(e) is satisfied. these checks have always been satisfied in our experience using the procedure so far. we then apply the sort propagation algorithm described in the previous section to generate order-sorted e-unifiers. the order-sorted unification procedure is used to analyze cryptographic protocols with algebraic properties of associativity and commutativity using the maude-nrl protocol analyzer.



