in the past data was kept on paper. a piece of paper, containing information, could be interpreted as sort of a token flowing through the basic activities. this kind of a paper is called the work item. the colleagues carry out activities on work items. the workflow comprises all the activities. as such, the workflow defines the order in which the activities have to be carried out.



the formalism of dataflow networks is meant to model complex, distributed computing systems with well defined semantics. the abstraction level of this formalism is between the bpel model and the verification model, the promela implementation. it combines the state based description of finite state automata, and the data(token) flow of petri nets. a further advantage of modeling with dataflow networks is that with additional rules and states of nodes, fault simulation can also be performed.



a workflow execution engine can coordinate the work of many people, and it is usually connected to multiple computers of independent organizations. these computers are loosely coupled with no guarantee on their availability. thus failures have to be considered. it is reasonable to add some redundancy to the workflow and then to check whether the planned fault tolerance was reached.



in this paper we proposed a method to check correctness properties of workflows implemented in bpel. dataflow networks are used to define the formal semantics of the workflow. the bpel model is mapped into dataflow network, the dataflow network is mapped into a promela model.



