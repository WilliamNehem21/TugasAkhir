lambdais an extension to first-order lambda calculus unifying two approaches of non-cloning in quantum lambda-calculi. one is to forbid duplication of variables, while the other is to consider all lambda-terms as algebraic linear functions. the type system of lambdahave a constructor s such that a type a is considered as the base of a vector space while s(a) is its span. a first semantics of this calculus have been given when first presented, with such an interpretation: superposed types are interpreted as vectors spaces while non-superposed types as their basis. in this paper we give a concrete categorical semantics of lambda-, showing that s is interpreted as the composition of two functors in an adjunction relation between the category of sets and the category of vector spaces over c. the right adjoint is a forgetful functor u, which is hidden in the language, and plays a central role in the computational reasoning.



by such a basis. in this paper we go beyond and give a categorical interpretation of lambdawhere s is a functor of an adjunction between the category set and the category vec. explicitly, when we evaluate s we obtain formal finite linear combinations of elements of a set with complex numbers as coefficients and the other functor of the adjunction, u, allows us to forget the vectorial structure.



the main structural feature of our model is that it is expressive enough to describe the bridge between the quantum and the classical universes explicitly by controlling its interaction. this is achieved by providing a monoidal adjunction. in the literature, intuitionistic linear(as in linear-logic) models are obtained by a comonad determined by a monoidal adjunction(s, m)(u, n), i.e. the bang! is interpreted by the comonad su(see). in a different way, a crucial ingredient of our model is to consider the monad us for the interpretation of s determined by a similar monoidal adjunction. this implies that on the one hand we have a tight control of the cartesian structure of the model(i.e. duplication, etc) and on the other hand the world of superpositions lives in some sense inside the classical world, the first. this way, the first type give us the information that the state is separable, while the second type do not. we can choose to take the first state as a pair of qubits forgetting the separability information, by casting its type, in the same way as in certain programming languages an integer can be casted to a float(and so, forgetting the information that it was indeed an integer and not any float).



even though the semantic of this article is about particular categories i.e. the category of sets and the category of vector spaces, from the start our approach is categorical in an abstract way. the idea is that the concrete situation exposed in this article will pave the way to a more abstract formulation, and that is why we give the constructions as abstract as general as possible. a more general treatment, using a monoidal adjunction between a cartesian closed category and a monoidal category with some extra conditions, remains a topic for future publication.



we have constructed a concrete mathematical semantic model of lambdabased on a monoidal adjunction with some extra conditions. however, the construction depends crucially on inherent properties of the categories of set and vector spaces. in a future work we will study the semantics from a more abstract point of view. our approach will be based on recasting the concrete model at a more abstract categorical level of monoidal categories with some axiomatic properties that are now veiled in the concrete model. some of these properties, such as to consider an abstract dagger instead of an inner product, were introduced in the concrete model from the very beginning, but others are described in remark 3.2 and definitions 3.5, 3.8, 3.9, 3.11, 3.12, and 3.14. another question we hope to address in future work is the exact categorical relationship between the notion of amplitude and probability in the context of the abstract semantics. while some research has been done in this topic(see, for example,[2, 19]) it differs from our point of view in some important aspects: for example to consider a notion of abstract normalization as primitive.



