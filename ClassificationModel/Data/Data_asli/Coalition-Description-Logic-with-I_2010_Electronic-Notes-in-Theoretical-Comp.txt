in, we proposed a product style combination of the description logic alc with coalition logic, that allowed for application of modal operators to both formulas and concepts. still, the combination kept the agent and the concept layers pretty much separated; in particular, one could not use the first-order elements of dl to specify how agents and their groups can influence themselves. in this paper, we make the first step to overcome the drawback: we extend the language of concepts with names of individuals(including agents), and we allow for more complex terms to define coalitions. this simple extension allows to express surprisingly sophisticated properties, as the examples in section 2.4 demonstrate. furthermore, we extend the satisfiability procedure from to handle the new language, and we establish complexity bounds for the satisfiability problem.



a run r is defined over all states so that an individual(in the classical sense) corresponding to r is represented by some type in every state. this validates the constant domain assumption. however, one needs to impose several properties on runs in order for them to preserve satisfiability.



from theorem 3.12, an algorithm which constructs a(finite) representation of a compact hintikka quasistructure for a clalco-formula can be used as a decision procedure for the satisfiability of clalco-formulas. in this section, we describe such an algorithm, and we prove its termination, soundness, and completeness.



remark 4.3 pauly obtains the pspace lower bound of the satisfiability problem of cl by a polynomial reduction from the satisfiability problem of kd(the normal modal logic over serial frames). the formula satisfiability problem of kdalc is nexptime-hard. therefore, we conjecture that the nexptime-hardness of clalc(which is subsumed by clalco) could be shown by a similar reduction.



this study offers also an interesting reflection on the methodological level. in our previous work, we proposed a general framework for combining strategic and descriptive elements of a multi-agent system. however, it turned out that a nontrivial semantic machinery does not guarantee exciting specifications. here, we present a small extension of the framework(one may be even tempted to call it slight) that allows to specify surprisingly sophisticated properties, as we hope to have demonstrated in section 2.4. this shows that the practical usability of a language may very much depend on elements which seem minor from the theoretical point of view.



