Program analysis is a critical aspect of enhancing contemporary software. While static analyses provide globally correct results, they often tend to be overly cautious. On the other hand, dynamic analyses yield precise results but have limited coverage. In this paper, we introduce the fuzzy set abstraction, building upon previous work based on 3-valued logic. Our abstraction facilitates hybrid analysis, allowing static results to be refined dynamically through the use of fuzzy control systems.

The combination of both types of analyses can significantly enhance results, especially in non-functional verification scenarios, such as inferring the worst-case benefit of compiler optimizations based on pessimistic assumptions about the input state/environment. Sound results are valuable at compile-time to ensure that optimizations that may be detrimental are not applied. Conversely, complete results are crucial at run-time, where the actual set of inputs is known and the benefit of an optimization can be accurately evaluated. The fuzzy dataflow framework demonstrates how program analyses based on fuzzy logic can identify optimization opportunities that traditional frameworks might overlook by generalizing to many-valued fuzzy logics, which allow program properties to be true or false to a certain degree.

We present the theoretical foundation of the fuzzy set abstraction and demonstrate its soundness for static analysis in section 3.1. Additionally, in section 3.2, we introduce dynamic analysis, where we utilize an adaptive fuzzy inference system from fuzzy control theory to gradually specialize the analysis results for improved accuracy.

Our static analyses manipulate fuzzy sets using predicate transformers expressed using fuzzy logic (section 2.1) and collector functions motivated by possibility theory (section 2.2). Correspondingly, our dynamic analyses start from the results of the static analysis and iteratively specialize to enhance accuracy, relying on a fuzzy classifier (section 2.3).

Our work also considers the minimization of resulting descriptions in cases where the abstract description might be very large. This approximation yields a single interpretation representing the maximum interpretation. We also introduce embeddings to relate 2-valued and 3-valued interpretations, forming the basis for the abstract semantics of a flow graph.

The fuzzy set abstraction enables the expression of program properties that are true or false to a certain degree, offering opportunities for speculative optimizations based on the likelihood of values, branches, etc. We also demonstrate how to perform hybrid analysis by refining the result of a static analysis online using ts-anfis, an adaptive fuzzy inference system from control theory, potentially opening the door for leveraging other results from the extensive literature of fuzzy control theory.