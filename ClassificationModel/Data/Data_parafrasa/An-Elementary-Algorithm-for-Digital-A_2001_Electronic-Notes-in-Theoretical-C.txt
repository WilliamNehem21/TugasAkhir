This paper addresses the issue of recognizing digital circles, focusing specifically on the circular separation algorithm. It aims to provide detailed implementation guidelines by offering pseudo-code algorithms for the main points, without relying on the complex techniques used in previous works on computational geometry or linear programming. After discussing the geometric significance of the circular separation problem, the paper introduces an incremental algorithm for segmenting a discrete curve into digital arcs.

Recognition of Euclidean shapes is a significant area of study in discrete geometry, with extensive research on straight lines and planes leading to increasingly efficient algorithms. While some progress has been made for higher order objects such as conics or general polynomials, there is still much room for further development.

The paper presents an elementary algorithm based on duality, employing the formal approach to the Hough transform to address the circular separation problem. This algorithm is then utilized to partition any 8-connected curve into digital circular arcs, allowing for the definition and computation of the local curvature of a digital curve.

The paper also introduces a proposition regarding the duality of sets of lines, mapping lines of the lower envelope of a set to the vertices of the upper part of the convex hull of the set in a one-to-one manner.

Additionally, it proposes an algorithm to reduce the complexity of the circular separation problem by determining the convex hull of a set and removing unnecessary points, leading to a more efficient processing.

By demonstrating that the number of constraints is O(n^2), the paper establishes a linear number of constraints with respect to the size of the curve. It also presents an algorithm to compute the vertices of the convex set, with a complexity of O(nlog^3(n)) under the assumption that the curve does not have inflection points, which can be checked in O(n) as a preprocessing step.

Furthermore, the paper outlines a method for estimating the curvature at each point of the discrete curve, involving the computation of the inverse of the osculating circle radius based on the best fitting circle locally at each point. It utilizes specific characteristic points and convex hull vertices and edges to recognize digital arc pieces from a discrete curve in order to solve the curvature estimation problem.

The proposed approach for the curvature estimation problem is not reversible in some cases, but this is deemed unimportant for the local curvature computation. The paper also discusses the complexity analysis of the algorithm and presents techniques for bounding the growth of discrete segments to achieve a more efficient computation of the curvature.