This academic paper demonstrates that all the components of a graph transformation system can be defined as labelled port graphs. The rewrite rules in the system are specified as labelled port graphs comprised of two port graphs (representing the left and right sides) and an arrow node that links the ports from the left-hand and right-hand sides. The arrow node defines a morphism, enabling a single pushout semantics for rewriting. A strategy expression is utilized to select the rule to be applied and the position in the graph where the rule should or should not be applied, as there are typically multiple ways to apply rules to a graph for generating rewriting steps. The paper also introduces the concept of located graphs, which are labelled port graphs including labels to specify the rewriting position and the subgraphs that should be protected from rewriting.

The paper is organized as follows: 

- Section 2 introduces the concept of labelled port graphs as a generic structure and presents the specific instance used in Porgy. 
- Section 3 provides examples of labelled port graphs from various domains. 
- Section 4 defines rules and rewriting, demonstrating that rules are also labelled port graphs, and presents the rewriting mechanism on this structure. 
- Section 5 discusses located port graphs as labelled port graphs. 
- Section 6 defines derivation graphs, used to visualize the dynamic behavior of systems modeled by labelled port graphs, rewrite rules, and strategies.
- Section 7 describes related works and suggests directions for future work.

The paper goes on to discuss the use of labelled port graphs to describe complex models in various domains, such as biology, social networks, interaction nets, and capital markets, with examples provided to illustrate the supported labels.

The authors propose that the reflection of the rules as graphs simplifies the design and implementation efforts, and the formalism is reflective by construction, making it a key property in logical frameworks. The use of labels in the graph is elaborated upon and examples are provided to show the additional information that can be represented using labels.

The authors also propose future research directions, such as exploring the semantic considerations for labelled port graph rewriting, extending the results to cover a broader class of labelled port graphs and graph rewriting, and representing strategies as labelled port graphs to design a reflective logical framework based on a rho-graph calculus.