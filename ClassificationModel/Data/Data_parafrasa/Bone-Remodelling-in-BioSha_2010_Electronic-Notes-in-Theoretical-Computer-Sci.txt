The tissue that forms the skeleton, known as bone tissue, is an exceptional material with two distinct types: cortical (or compact) bone, which is dense and found primarily in the shaft of long bones, and trabecular (or cancellous) bone, which is porous and located near joint surfaces, at the ends of long bones, and within vertebrae.

The structural efficiency of bone is enhanced by its ability to increase capacity without adding mass, and mechanical stress contributes to bone strength by influencing collagen alignment during the formation of new bone. In regions subject to tensile stresses, cortical bone tissue contains a higher percentage of collagen fibers aligned along the bone's long axis, while in regions subject to compressive stresses, fibers are more likely to be aligned transverse to the long axis.

At the cellular scale, bone remodeling involves two main types of cells, osteoclasts (OC) and osteoblasts (OB), which work together in the remodeling process within a basic multicellular unit (BMU). The organization of BMUs in cortical and trabecular bone differs mainly in terms of morphology rather than biology.

Studies on bone remodeling have focused on understanding the behavior of bone cells at an individual level, often overlooking the influence of mechanical forces on the structural adaptation of the internal cellular architecture. The expression of mechanical forces in the activities of osteoblasts and osteoclasts, as well as the mechanisms through which mechanical signals are translated into bone formation and resorption, remain unresolved issues in bone mechanobiology.

To enhance the predictiveness of cellular and tissue models, the authors propose to refine and validate these models using experimental data and existing continuum-based descriptions of bone remodeling. They also aim to use the detailed description level of their particle-based cellular model to validate continuum-based tissue models.

The bioshape software architecture has been designed to support cluster and distributed computational approaches for simulating complex systems in terms of geometrical shapes and interactions. The current version is based on the unicam agent-based Java framework HERMES, with ongoing development for porting to a multiple instruction multiple data (MIMD) architecture with message passing.

The multiscale model in the bioshape simulator is based on primitive concepts such as shapes, perception, movement, collision-driven interaction, communication, internal calculus, aggregation and disaggregation of shapes, as well as shape formation and death.

The density of mineralization is associated with each void/full/surface shape in the model. A meshless cell method-based system calculates how a tensor field applied to the tissue modifies density over time for each shape. The density values are also adjusted based on internal systemic factors, including osteoblastic and osteoclastic activity, growth factor values, apoptosis, and replication ratio. The dynamics of each shape in the tissue model depend on the new density values, which trigger the replacement of each shape with another void/full/surface shape associated with the new density value.

The bioshape model incorporates biochemical signals released by surface lining cells or cells in the fluid section, treating them as a multi-scalar field overlaid onto the fluid section. The presence of macrophages and water in the fluid section is also considered.

Unlike other frameworks, the particle-based and single-scale approaches in the meredys and similar models allow for the incorporation of particle geometric information. The mesoscopic simulator in meredys represents biological entities as single particles, spheres, or cylinders, which diffuse through the simulation volume using a 3D random walk algorithm. Bonds between particles are created or broken based on user-defined rules, and a collision detection algorithm determines whether particles come close enough to allow bond formation. The simulator is designed to handle spatial locality, very low particle concentrations, and collision between particles using a discrete 3D grid, avoiding floating-point computation and distance calculations for highly parallel, large-scale simulations.