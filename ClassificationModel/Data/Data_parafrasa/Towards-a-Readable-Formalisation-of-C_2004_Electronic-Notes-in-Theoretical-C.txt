Mathematicians have largely overlooked formalized mathematics as a computer science discipline for several reasons. First, becoming proficient in any proof assistant requires months of effort. Second, even after mastering the tool, it takes days of tedious work to reproduce even simple results, and the resulting formal text is often incomprehensible to those unfamiliar with the specific proof assistant in use.

Understanding the subject matter of this paper requires familiarity with constructive dependent type theory, and its connection to category theory as traditionally presented in mathematical texts is tenuous. Nonetheless, it contributes to the development of category theory more than other existing formalizations.

The primary distinction between the two developments in Mizar revolves around the treatment of arrows. One follows the conventional definition of a category as having a collection of arrows with source and target functions from arrows to objects, while the other takes an alternative approach.

Access to the source files for one of these developments is limited, and the available exposition is sparse. Although it claims to provide definitions for subobjects, limits, adjunctions, cartesian closed categories, and triples, the primary focus is on proving the adjoint functor theorem.

The formal development, automatically produced by Isabelle, spans 27 pages and is available online, along with the Isabelle/HOL source files. The paper discusses most of the definitions, some results, and a couple of proofs.

Skipping trivial lemmas about categories, the paper moves on to define the category of sets by defining the category of subsets of a given universe set U. This approach is different from assuming the existence of a universe containing every set.

The authors discuss the challenges related to defining functors and note that using locale and explicit notation is necessary for defining properties of functors, as well as predicates in a locale.

The paper provides an example of a simple result and its proof, explaining that certain assertions are given numbers as names to refer to them later. Additionally, the authors emphasize the need to construct an instance for each concept and prove that it is indeed an instance to ensure accurate definitions.

The authors acknowledge that the presented ISAR proofs may seem cumbersome compared to informal textbook proofs, as the reasoning is often tailored to the benefit of the proof assistant rather than the reader. They express the possibility of achieving better results through improved automation application and point out opportunities for learning from other formalizations. However, the goal is not to automate everything but rather to streamline steps that a human reader is expected to make independently.