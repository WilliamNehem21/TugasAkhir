The paper employs structural induction in the base case-formula (bcf) and focuses on the case for (x:e1)@e2. It uses the monotonicity of bound and free variables to establish that changes to e1 do not hinder the redex, provided that capturing variables are included in bound variables. The paper argues that the 2-rule could be avoided, allowing for the contraction of all marked redexes. However, the authors contend that this would complicate the proof of lemma 3.4 due to the non-straightforward transitive, reflexive induction. The enforcement of the restriction that the relation must be well-defined in non-trivial cases is discussed, although it is clarified that there are such cases according to lemma 3.3.

The result demonstrated in the paper is referred to as the s(f)dp, which excludes the finiteness of developments. Contrary to conventional thought, the paper claims that even without the finiteness of developments, the s(f)dp can lead to the conclusion of confluence. The proof method presented is a hybrid of the standard s(f)dp method and the Tait/Martin-Lof/Takahashi method, which is suggested to be less complex due to reliance on a 'weaker' commutativity lemma. However, it is also noted that the proof may be somewhat lengthier as it employs more auxiliary lemmas.

The paper directs interested readers to a comprehensive mechanized account of the residual theory of the λ-calculus represented with de Bruijn terms. The aim is to provide a theoretically robust and stand-alone treatment of residual theory, which is essentially categorical. The paper emphasizes that its results can be likened to those of Huet in comparison to the original Tait/Martin-Lof confluence proof using parallel reduction, as well as to Takahashi's work.

The use of the meta-variable 'e' over real terms is retained, and occasionally 'm' and 'n' are used for raw terms. The paper also mentions the use of the raw notion of 'unmarked()' at the real level. Additionally, the paper establishes a clear distinction between raw and real relations through the use of dashed and full-colored arrows, respectively.

The research justification for considering residuals is based on the fact that developments (as opposed to unrestricted reduction) can be proven finite by using Newman's lemma. This leads to the proof of the development relation being confluent through weak confluence. Ultimately, this can be utilized to establish the confluence of the λ-calculus.

The proof involves showing that the 'dev-relation' is a witness of the quantification in lemma 5.1, as well as an adaptation of lemma 4.4 by lemma 2.3.2. The paper also provides an overview of the diagrammatic reasoning in [27, 28], and introduces the m-calculus, a calculus for linking with first-class primitive modules. The authors assert that the m-calculus is more expressive than the λ-calculus in terms of computational paradigms it can simulate directly and contains mutually recursive binding amongst sets of elements. For consistency, both results are framed in terms of the calculus.