The use of service-oriented computing (SOC) has been increasingly adopted for developing distributed, inter-organizational applications in diverse environments, particularly through the use of web service technologies in the software industry. Web services, which are programs with clearly defined interfaces that can be located, published, and invoked using standard web protocols, have played a crucial role in the adoption of SOC.

This paper proposes a case-based reasoner for service selection, making three primary contributions. Firstly, it establishes a case representation that captures information from the functional descriptions of web services, typically provided as Web Services Description Language (WSDL). Additionally, it draws parallels between the key steps in Case-Based Reasoning (CBR) and the problem of web service discovery and selection. Finally, the paper presents three implementations for the similarity function, focusing on structural and semantic aspects derived from functional service descriptions.

The subsequent sections of the paper elaborate on the service selection process, the application of CBR in service selection, details of the alternatives for the similarity function, experimental validation of the proposed approach, and a discussion of related work, followed by conclusions and future work.

The final step of the proposed approach involves deciding whether to include the confirmed solution (tested case) in the knowledge base (KB). The decision about including a learning case relies on different criteria, with a threshold value (th) set for the similarity function. If the similarity function returns a value higher than the threshold, the case is added to the KB.

In evaluating the operations attribute for semantic similarity, the paper assigns the highest weight (w= 0.6) to this attribute, employing a complex similarity function in the case-based reasoner. The similarity functions for semantic aspects compare terms and identifiers from operations, with three different alternatives implemented. The use of WordNet and stop words lists, as well as the stemming process, is described in detail as part of this evaluation.

The approach is validated using a data set of 62 services, for which a case is generated for each service to establish the initial KB. The execution of the case-based reasoner for service selection involves defining a scenario with three implementations based on the similarity functions presented in the paper and utilizing 506 new cases generated by mutating operation signatures. Additionally, traditional techniques of service retrieval and selection, including the Easysoc service registry, are employed in tandem with the proposed approach.

The paper also discusses related work in the field of web service selection and similarity search, comparing and contrasting different approaches such as the use of ontology, schema matching, and comparison of complex types, as well as the limitations and challenges associated with existing methods.

In summary, this paper puts forth an approach for web service selection using CBR, focusing on leveraging information from service functional descriptions to build a case representation, and proposes and validates three different implementations for the similarity function. This work contributes to the ongoing research on effective methods for web service selection and substitution.