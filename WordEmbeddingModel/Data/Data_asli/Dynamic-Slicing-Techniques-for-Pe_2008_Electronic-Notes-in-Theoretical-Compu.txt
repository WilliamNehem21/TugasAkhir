a petri net[13,14] is a directed bipartite graph, whose two essential elements are called places(represented by circles) and transitions(represented by bars or rectangles). the edges of the graph form the arcs, which are labelled with a positive integer known as weight. arcs run from places to transitions and vice versa. the state of the system modeled by the net is represented by assigning non-negative integers to places. this is known as a marking, and is shown graphically by adding small black circles to the places, known as tokens. the dynamic behavior of the system is simulated by changes in the markings of a petri net, a process which is carried out by the firing of the transitions. the basic concepts of petri nets are summarized as follows:



using an initial marking can be useful, e.g., in debugging. consider for instance that the user is analyzing a particular trace for a marked petri net(using a simulation tool, which we assume correct), so that an erroneous state is reached. here, by erroneous state, we mean a marking in which some places have an incorrect number of tokens. in this case, we are interested in extracting the set of places and transitions(more formally, a subnet) that may erroneously contribute tokens to the places of interest, so that the user can more easily locate the bug.



finally, the third step obtains the slice n'=(p',t',f') defined as the subnet of n where p' is the intersection of p1 and p2, t' is the intersection of t1 and t2, and f' is the restriction of f over p' and t', i.e., the intersection of backward and forward slices.



