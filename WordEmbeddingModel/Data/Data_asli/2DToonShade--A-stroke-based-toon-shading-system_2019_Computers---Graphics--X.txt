at the origin of our idea is the observation that state-of-theart automatic shading methods usually rely on a very complex pipeline, whereas manual, but still appealing shading, is often quite simple. a pipeline such as: building a 3d model from 2d drawn art(for each frame), then rendering using 3d global illumination to finally simplify rendered shadows to match the animation hand-drawn style, seems overly complex for the task at hand. by relying only on 2d-based algorithms instead of 3d models or normal map estimation, our system bypasses the major state-ofthe-art work-flow. it tries to preserve the intuition-based creative process of hand-drawn animation while still producing appealing and plausible self-shadows and shades.



let c be our set of candidates, s the shade we want to propagate from frame n, a the region around s and a+1 the corresponding region in the next frame n+ 1. candidates in c have a high probability of being in a+1. however, we only need to find one seed point in a+1 for the propagation.



overall, in the state of the art that rely on geometric models, the quality of the toon shading result is closely related to the amount of geometric detail in the 3d model/normal map. one key advantage of our system is that the user is free to choose where to create the shades. also, rather than giving a rendered result, shades can be edited/modified one by one. furthermore, shading colors can be carefully chosen by the artist to obtain the most appealing result possible rather than a physically realistic one.



this paper presents 2dtoonshade: a complete system for the semi-automatic creation of shading and self shadowing. while previous works focused on reconstructing 3d models or normal maps from 2d artwork, the tool tries to directly construct animation style shade lines, while staying in the natural 2d drawing environment. the system yields plausible cartoon style shades and self-shadows. the process drastically reduces the labor of drawing shades and self-shadows by hand. it also brings more flexibility to the user as the lighting can be moved in retrospect. we also introduced a new way to position a light in the 3d space without leaving 2d space, which was greatly appreciated by experienced users. moreover, we compared our method to the state of the art and two widely used software packages for professional animation. we are convinced that it can motivate future work on non-physical manipulation of shading and shadows.



