probabilistic programming is an extension of imperative programming that enables the specification and implementation of randomized network and security protocols, machine learning and quantum algorithms. the variety of applications has recently led to a rapidly growing interest in the probabilistic perspective. reasoning about the correctness of such programs, and more generally verifying properties such as convergence and termination, is quite intricate. it is thus important to establish formal techniques that enable these forms of reasoning.



remark 2.1 in the paper originally introducing ppdl, arbitrary linear combinations of functions are allowed. in our presentation, we admit only positive linear combinations for the sake of simplicity. note that eliminating such restriction would not affect the results that we prove.



it is worth noting that state and event bisimulation coincide in discrete settings and for analytic state spaces. however, in general, the two notions are orthogonal[2,20]. from a categorical point of view, lmp state bisimulation are spans in the category of lmps with analytic state spaces(seen as coalgebras). note that the spans are properly definable(as a weak pullback) only when the lmps are analytic[3,18]. on the other hand, lmp event bisimulations are cospans of surjections in the category of lmps, which are definable without any need of the analyticity restriction.



we start with introducing the logic ppdl+ as an extension of ppdl. the idea is that, since l0 characterises lmp state bisimilarity(proposition 2.3), we extend ppdl so that it can interpret l0 formulas as functions. in the grammar below, we point out which clauses are the same as in ppdl to emphasise the difference between the two logics. ppdl+ is defined as



we now develop the characterisation result for state bisimilarity. for the reminder of this subsection, we restrict ourselves to those lmps(and ppdl models) whose state spaces are analytic. the notion of state bisimulation for ppdl models is defined as the extension of the same notion on the underlying lmps, by taking the extra weight structure into account.



