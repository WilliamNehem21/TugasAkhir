compute the key, and ciphers m with this key. let cm(k) be the ciphered message. she wants to know which are her guarantees injecting the network with cm(k). more precisely, let cm(k) be a message ciphered using timed-release



automata extend timed automata by associating weights(different costs) with both locations and transitions. this model was independently introduced and studied in[3,5] 3 with the aim of providing timed automata with a performance measure of their finite outcomes. the weight of a location gives the cost of staying at that location per each time unit and the weight of a switch is the cost of taking that discrete transition. therefore, a cost is associated to each run as the sum of two addend: the sum of the costs of the taken switches and the sum of the costs of the time spent in each location. this way, with each run a linear-cost function of time is associated that accounts for visited locations and taken transitions.



a network can be naturally modeled as a timed automaton where the nodes are represented as locations, and the actions of sending and receiving a message can be modeled as transitions. time features of the network behaviour(such as traffic delay, latency time, processing time, etc.) can be captured by clocks, resets, and clock constraints. in such a model, weights can be used to capture the computational speed of each node, i.e., the number of squaring operations reachability, that is, the minimum time to reach a given target location, was first considered in. in that paper, the authors addressed the problem of computing lower and upper bounds on time delays in timed automata. minimum-time reachability is also considered in and the related minimumtime control problem is considered in.



the rest of the paper is organized as follows. in section 2, we recall the main ideas used in timed-release crypto and state our security problem. in section 3 we recall the definition of weighted timed automata and introduce our notation. our solution to the tbr problem for weighted timed automata is given in section 4. finally, in section 5 we give a few remarks.



timed automata. the solution consists of rephrasing the problem into a decision problem for such class of automata, the time-cost bounded reachability. we have studied this problem and proposed an algorithm that takes time exponential in the size of the time deadline and in the number of clocks used in the automaton. we observe that it is unlikely that this problem can admit a sub-exponential solution, since from the computational complexity of reachability in standard timed automata, we get that this problem is pspace-hard. in some situations, it is reasonable to assume that the receiver of the message can control only some nodes of the network and thus routes the message only to these adjacent nodes instead of to others. we could capture this framework by modeling the network as a two-player game on a weighted timed automaton, and search for a winning strategy of the receiver. we will



