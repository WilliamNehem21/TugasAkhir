3) edge creation and 4) re-labelling of vertices. the number of labels(vertices) used to build the graph is commonly denoted by k. a well defined combination of these operations, called k-expression, are necessary to build the graphs, which in turn defines clique-width. the clique-width or the corresponding decomposition of the



it is important to look for an alternative graph decomposition that can be applied to a wider classes than to those of bounded tree-width and still preserve algorithmic properties. tree decomposition and its tree-width parameter of a graph, are among the most commonly used concepts. therefore, courcelle and olariu proved that the clique-width can be seen as a generalization of tree-width in a sense that every graph class of bounded tree-width also have bounded clique-width.



combine the labels in order to compute the clique-width of g. assume that a and b are used as labels of the root and the rest of the vertices of each tree respectively. let c and d be the free allowed labels to be used. we built the k-expression of cn beginning with a joint vertex v. make a label c(v).



we discuss the time complexity of algorithm 2 which is the main result reported in this paper. the complexity of algorithm 2 is given by the two embedded procedure loops(lines 5 and 6) together with the call to algorithm 1(lines 7 and 11). the first loop(line 2) is outside the embedded loops so its complexity is considered apart.



