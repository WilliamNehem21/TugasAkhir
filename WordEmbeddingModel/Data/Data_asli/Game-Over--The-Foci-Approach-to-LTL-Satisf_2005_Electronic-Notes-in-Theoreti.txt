verification is strongly linked with logics and in fact is nowadays a broadly accepted and active area of research in logics for computer science. this is because logical formulas express properties and, therefore, can be used to express correctness in particular. the question of whether or not a piece of hardware or software obeys a certain correctness property is often reduced to the satisfiability or model checking problem for a temporal logic.



in both cases, games provide an advantageous mechanism for carrying out the verification task. a game-based algorithm deciding one of these problems computes a winning strategy for a player in a certain 2-player game. this strategy can then be used not only to report to the user of a verification tool that the examined formula is or is not satisfied/satisfiable, but also to show to her why this is the case. this is done by letting the user play against the winning strategy. by its very definition, the user is bound to lose any resulting play. since the rules of such games usually follow the semantics of formulas closely, this provides the user with insight into where exactly a transition system fails to satisfy the formula at hand for example.



the paper is organised as follows. section 2 recalls the definition of ltl. section 3 gives a short summary and discussion of focus games for satisfiability of ltl formulas. section 4 defines foci games for this problem, proves them correct, sketches an algorithm that decides their winners and shows how to use their winning strategies back in focus games. finally, section 5 defines model checking foci games for ltl.



thus the witness becomes smaller and smaller until it finally is either a proposition or remains a r, resp. its unfoldings. in the first case, the play is won by player e with her winning condition(i). in the second case the r will get a focus index and keep it, according to a variant of lemma 4.4. hence, the play will be won by player e with her winning condition(ii). altogether, player e has a winning strategy.



