we consider several different sound and complete classes of models for the computational-calculus, explain the definitions, and outline why one might be interested in the various classes. we first consider the class of closed-categories, a natural and direct generalisation of the notion of cartesian closed category. we then consider closed-categories, which are based upon indexed categories and which are closely related to modern compiling technology. finally, we consider the class of cartesian closed categories together with a-enriched monad. the latter class has the most developed abstract theory, which one can adopt and by which one can dispense with coherence details in the spirit of mac lane involving strengths.



cartesian closed categories c together with c-enriched monads eliminate the need for strengths. this is convenient in proving abstract mathematical results, as it is an instance of the substantial literature on enriched categories, allowing use of the much studied 2-category c-cat of small c-enriched categories. that allows easy proofs of relationships between computational effects, for instance in seeing partiality as a part of continuations: one can consider a c-enriched map of monads from a monad for partiality to a monad for continuations, without concern at every step for the relationships between the strengths. this, when combined with axiomatic domain theory as developed for instance in and, allows an account of recursion in the models. perhaps more importantly, it is also the class of models best suited to modelling the operations associated with computational effects.



for any cartesian closed(or more generally symmetric monoidal closed) category c, one can speak of a c-category. the idea is that instead of having homsets as in the usual definition of category, a c-category has a homobject of c. formally, the definition is as follows.



