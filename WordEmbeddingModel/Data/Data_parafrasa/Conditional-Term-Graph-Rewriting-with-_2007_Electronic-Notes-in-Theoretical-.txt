The unconditional term rewriting system (TRS) obtained from a conditional TRS R by removing the conditions in its rewrite rules is denoted as RU. It should be noted that (f, RU) is considered an unconditional TRS in the conventional sense as long as (f, R) is a two-conditional TRS. However, this is not the case for three-conditional TRSs because rules of type 3 may contain variables on the right-hand sides of rules that do not occur on the corresponding left-hand side. For a conditional TRS R, concepts such as left-linearity and constructor term are defined using the system RU. As these properties depend solely on the left-hand sides of the system RU, they remain well-defined even if RU is not a TRS in the conventional sense.

Furthermore, if p â‰  q, then p is considered strictly below q or q is strictly above p. Two positions p and q are considered independent or disjoint, denoted by p q, if neither is below the other.

The restrictions outlined in Lemma 2.8 are indeed necessary, as demonstrated by counterexamples in [5, 20]. In a similar manner to Lemma 2.4, the previous parallel moves lemma can be expanded to nearly orthogonal systems, and one can allow infeasible conditional critical pairs. Consequently, it follows that the conditional TRS from Example 2.6 is level-confluent.

For the sake of efficiency, term rewriting is commonly implemented using term graph rewriting. In term rewriting, expressions are represented as terms, whereas in term graph rewriting, they are represented as directed graphs. Unlike terms, graphs permit the sharing of common subexpressions. In term graph rewriting, expressions are evaluated through rule-based graph transformations, focusing specifically on directed acyclic graphs.

The subterm t is duplicated. If t is a large term, this operation can be particularly costly in terms of both space and time. Additionally, following this reduction step, the value (normal form) of t must be computed twice unless t is already in normal form. Consequently, this reduction step duplicates the work required to evaluate t.

In the resulting directed acyclic graph, the subterm t is shared. An evaluation of t in the directed acyclic graph corresponds to a parallel evaluation of the two occurrences of t in the term t+ t. Therefore, representing expressions as graphs instead of terms saves both time and space. Studies of term graph rewriting include [19, 4, 18, 10, 11, 1, 14, 15, 2, 17]. Kurihara and Ohuchi have demonstrated that directed acyclic graphs can be represented by well-marked terms; as such, graph transformations can be modeled by rewriting well-marked terms. We first review some basic concepts, most of which originate from.