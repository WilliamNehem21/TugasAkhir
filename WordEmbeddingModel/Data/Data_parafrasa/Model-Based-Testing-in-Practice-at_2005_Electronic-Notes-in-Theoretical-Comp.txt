As part of Microsoft's efforts to enhance reliability through its Trustworthy Computing initiative, the company has been exploring various approaches, one of which is model-based testing. The use of a finite state machine modeling tool (TMT) has proven successful in many test groups, but there is a need for more powerful and flexible modeling. Some product groups are considering the adoption of the abstract state machine language (ASML) and its associated test tool (ASML/T). Results from both approaches show that defects can be detected earlier in the specification and design stages, and higher structural code coverage can be achieved in the systems under test.

Traditionally, most test engineers have conducted black box testing, observing the external behavior of software. As the complexity of Microsoft products and their operating environments increases, there is a growing demand for easier test design and maintenance. Although many testers use mental models or document them, the lack of automation hinders the full exploitation of model-based testing.

Different query types such as "directed," "shortest path," and "shortestpath-random" or "shortestpath-directed" can be used to generate test cases that target the riskiest areas of a product. TMT also supports simple model checking through assertions, which are statements about the tested system and its specifications. Not only are assertions useful for ensuring the quality of the model, but they can also be used to validate the quality of the specifications the model is based on.

TMT outputs test cases as XML files called XML test cases (XTC) and generates an automation template, enabling the automation of test design. This tool has significantly reduced the time required for automation and test case generation, as evidenced by its adoption by over 20 teams at Microsoft.

ASML specifications provide a precise and non-ambiguous way to specify computer systems, and can be executed to explore a design's potential before committing to complete system coding. The benefits of using an ASML specification include achieving a unified understanding among program managers, developers, and testers.

In the context of the Indigo framework, the modeling of web services standards (WS) using ASML has proven effective in identifying numerous specification issues and uncovering bugs in early implementations. For example, modeling the WS-routing specification revealed multiple issues that had taken months to identify through traditional design and architecture meetings, while modeling the WS-atomic transactions specification uncovered numerous specification issues and bugs in the early implementation.

In summary, the use of model-based testing, tools such as TMT and ASML, and the adoption of industry-defined standards have significantly improved the reliability and quality of Microsoft products by enabling early defect detection and better code coverage.