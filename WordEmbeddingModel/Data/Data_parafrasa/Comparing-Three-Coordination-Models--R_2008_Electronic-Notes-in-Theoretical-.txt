This academic paper addresses a comparative analysis of three coordination models: Reo, Actors-Roles-Coordinators (ARC), and Reflective Russian Dolls (RRD). These models encompass a wide range of communication mechanisms and coordination strategies, providing a comprehensive set for examination. The paper also recommends potential models for future comparative studies, including Linda, Lime, Klaim, and its stochastic extension.

Reo is a channel-based exogenous coordination model for component composition, where complex connectors are built compositionally from simpler ones. The simplest connectors are channels with well-defined behaviors, which impose coordination and communication patterns on the components but not on the coordinated components themselves. The compositional semantics of Reo circuits can be represented by timed data streams (TDS) and constraint automata.

ARC utilizes the separation of concern principle to categorize coordination into intra-role and inter-role coordination, abstracting these behaviors using roles and coordinators. Actors serve as coordinatees in the ARC model, interacting through asynchronous message exchange, with coordination managed through message time-space manipulations that are transparent to the coordinatees.

The paper is structured as follows: Section 2 outlines the features to be compared and contrasted, Section 3 describes and compares the three models based on the listed features, Section 4 illustrates representations of a simple coordination task in the three models, and in Section 5, the paper takes a step towards establishing a common semantic foundation for the three models. Conclusions and future work are discussed in Section 6.

The semantic model details the specification of the semantics of components and/or coordinators. An operational semantics can be given as a state transition system, such as automata or rewrite systems, while denotational semantics might be expressed in terms of observable events, traces/streams, or signals.

The computation model characterizes Reo as a channel-based language with synchronous or asynchronous channels, emphasizing the absence of shared global memory. Both ARC and RRD are based on the actor model of computation, with actors serving as the coordinated objects and meta-actors as the coordinators.

Coordination in the Reo model is enforced by the Reo circuit on connected components, determining when data can be accepted on input ports and when it can be taken from output ports. In the ARC model, role meta-actors intercept and control the delivery of base level messages, while in the RRD model, coordination is exogenous at all levels.

In conclusion, the paper highlights that each of the models is highly expressive, with Reo being more mature and closer to a programming model, whereas RRD focuses on abstract specifications. Future work is proposed, including defining coordination behavior, developing methods for combining coordination rules for different concerns, and exploring the use of logics for expressing end-to-end properties emerging from coordination.