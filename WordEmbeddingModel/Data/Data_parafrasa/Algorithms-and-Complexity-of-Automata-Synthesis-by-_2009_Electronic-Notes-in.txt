This academic paper highlights the importance of creating compositions of web services to accomplish complex tasks on the internet. The authors discuss the challenges of web service composition, presenting it as both a plan synthesis problem and a software synthesis problem. They propose algorithms for automating web service composition and analyze the computational complexity of the process.

The paper is organized as follows: 
Section 2 reviews the concept of finite automata and introduces the notion of web services. 
In Section 3, the authors provide basic definitions and establish preliminary results that will be used extensively in subsequent sections. 
Section 4 introduces the composition problem, which involves generating a composition of web services to achieve a specific goal. 
Section 5 examines the composition of services from the perspective of computational complexity. 
Section 6 presents two approaches for solving the composition problem. 
Finally, in Section 7, the authors discuss open problems in the field.

The paper discusses different perspectives on defining goals for web service composition. It presents approaches that define goals as conditions expressed in the Eagle language, where service composition involves coordinating web services to create a complex business process that meets the specified conditions. Additionally, it explores another approach that defines goals as finite automata with input and output, linking them to web services. The paper focuses on automating composition using the latter approach, leading to the formulation of a decision problem.