In many industrial settings, scheduling and managing a limited number of resources are fundamental to achieving optimization objectives. The literature addresses a wide variety of problems, with one of the most extensively studied being the parallel machine scheduling problem. In this scenario, a group of jobs needs to be processed on a set of machines simultaneously, with each job being assigned to only one machine without interruption, while each machine can handle only one job at a time. We refer to the general case as unrelated, where the processing time of a job depends on the machine to which it is assigned. An example of such a problem is the unrelated parallel machine scheduling problem (UPM), which can be observed in the context of a ceramics plant where different orders need to be allocated to different kilns. 

A common objective in addressing such problems is to minimize the maximum completion time, also known as makespan or cmax. This problem, denoted as r//cmax (Graham, Lawler, Lenstra, & Rinnooy Kan, 1979), is known to be NP-hard, even in the case of two identical parallel machines (Lenstra, Rinnooy Kan, & Brucker, 1977). An important consideration typically added to UPM problems is setup. 

In the literature, UPM has been extensively studied (see Pinedo, 2016 for references), whereas UPMS has received comparatively less attention. Various mixed integer linear programs (MILP) have been proposed for UPMS, with a notable model presented in Guinet (1991), and an improved version found in Vallada. Additionally, we present a complete instance involving four jobs and two machines, for which an optimal solution for UPMS is demonstrated, followed by the introduction of different types of resources. All resources are renewable and required during processing and setup times.

The resources needed for processing (p-resources), setups (s-resources), and unspecific shared resources (h-resources) are represented for a specific instance. The sums of these resources for different times are shown, with consideration of the maximum limits for resource usage. Moreover, detailed descriptions of MILP models used for UPMS and UPMR problems are provided, as well as corresponding adaptations and algorithmic approaches.

The paper provides insights into the behavior of the three-phase algorithm (TPHA) and the distribution times for processing and setups, using a virtual machine setup to conduct experiments. Results for small, medium, and large instances are presented, along with considerations for time limits and the performance of the TPHA. The impact of resource types on the problem difficulty, and the performance of different models, including MILP and TPHA, are thoroughly discussed.

In conclusion, the paper presents comprehensive findings and analyses regarding scheduling and resource optimization problems. It suggests that the MILP proposed is effective for small instances but may face challenges with increasing job numbers. Additionally, it highlights the potential of the TPHA in obtaining solutions for a greater number of jobs. Lastly, the results shed light on the influence of different resource types on problem complexity and the performance of various models.