Many researchers in the graph transformation community have argued that model transformation, as it pertains to model driven architecture, can be viewed as an application of graph transformation. This paper aims to substantiate this claim by providing a graph transformation-based semantics for one of the original QVT language proposals. The authors define a mechanism that translates any model transformation definition in the QVT language to a graph production system, effectively applying that model transformation. 

However, a common issue in language definitions is the lack of formal definition in the semantics of MTL, which makes it challenging to reason about, verify, and ensure the correctness of model transformations. The paper sets out to address this problem by translating model transformation definitions to graph production systems, which have a formal foundation. The approach is described in the following sections, including an example taken from the QVT submission. The authors evaluate the achievements and discuss related approaches. 

The paper also discusses the existing body of research supporting graph transformation techniques as a basis for formal semantics of model transformation, both in practical tools and theoretical investigations. Additionally, it aims to provide the semantics of MTL by following this route. The paper identifies inconsistencies in the example provided and proposes solutions to address the problems encountered.

The paper also describes the left[a|b]and right[a|b] production systems, which extract the instance graphs from the linked graph produced by the rules discussed earlier. This process involves stripping away nodes and edges introduced by the rules, as well as the elements of the target or source model that they link to.

In discussing related work, the paper notes that while there has been significant research on using graph transformation for model transformation, the specific task of providing graph transformation semantics to a pre-existing model transformation language has not been extensively studied. Instead, the inverse trajectory has been followed in some research, where model transformations originally specified in a graph transformation formalism were translated to the language MTL. 

One of the references mentioned in the paper is from Gardner, T., C. Griffin, J. Koehler, and R. Hauser, providing a review of OMG MOF 2.0 query/views/transformations submissions and recommendations towards the final standard, presented at the First International Workshop on Metamodelling for MDA in 2003.