In the current millennium, the United States has experienced a significant increase in the number of registered vehicles, with a rise of approximately 19% (equivalent to around 46 million vehicles) over the past two decades. This surge in vehicle numbers has led to more serious issues related to traffic accidents, road congestion, and environmental pollution. To address these challenges, potential solutions such as intelligent transportation systems (ITS) or smart traffic lights have been proposed. These methods aim to reduce waiting times at traffic lights and improve driving quality. In major cities, where waiting times and traffic congestion are critical, smart cities can potentially alleviate congestion, reduce trip times, and decrease carbon dioxide emissions by implementing smart traffic management systems, incorporating technologies such as intelligent traffic lights, genetic algorithms, fuzzy logic, neural networks, machine learning, deep learning, and virtual traffic lights.

However, in highly congested locations or areas with no waiting automobiles, these approaches may be ineffective. To address this, a new technique is proposed that involves placing detectors along side roads or on traffic signal lights to track vehicle demands at each intersection in an automated manner. This technique enables vehicles to transition through traffic lights more efficiently, with the green status being asserted as quickly as possible based on the demands of the vehicles and the number of cycles for a given intersection.

Xu et al. utilized a generative adversarial network to predict road traffic conditions in 202, emphasizing the importance of accurate state prediction for intelligent transportation systems. Their proposed framework consists of three models: a generator that uses historical traffic data to generate future traffic states, a discriminator for detecting traffic light states, and a convolutional neural network for state recognition based on various lighting conditions and weather scenarios to evaluate driving performance. Hagenauer et al. studied the performance of self-organized traffic management algorithms in vehicle-to-vehicle (V2V) networking, introducing a virtual traffic light (VTL) on a leading vehicle to carry out real-time traffic light computations. This study demonstrated that VTL effectively utilizes vehicular system resources and enhances driving experience under average network load.

Arel et al. experimented with reinforcement learning neural networks to control traffic light cycles effectively for multi-intersection networks, aiming to reduce average waiting times, congestion, and intersection cross-blocking. Iyer et al. discussed synchronizing traffic flow using multi-agent fuzzy logic distribution and Q-learning, focusing on managing multiple input data levels provided by traffic lights. Teo et al. employed a simulation to observe the impact of waiting vehicle lanes, amber time, and duration of green lights, utilizing a genetic algorithm to optimize traffic light cycling based on the present queue length.

Wang et al. performed a microscopic simulation using an adaptive linear quadratic regulator (LQR) with incremental adjustments for multi-agent traffic control, while Siyal and Fathy developed a process to improve traffic flow at intersections using edge detection and neural network algorithms. Additionally, John et al. introduced machine learning techniques based on computer vision for traffic signal identification in varying illumination environments, incorporating onboard GPS sensors for enhanced accuracy. Zou et al. presented a fuzzy logic-based traffic light regulation model using wireless sensor networks and single-axis magneto sensors to monitor traffic flow and alter passing times for vehicles, resulting in a decrease in average waiting time compared to traditional fixed cycle systems.

Furthermore, various strategies have been proposed to enhance intelligent traffic systems, including a traffic light synchronization parallel algorithm for bus rapid transit systems, self-organizing intersections to reduce waiting times, and the use of the JADE framework, Java, and SUMO to decrease average waiting times and increase vehicle speed. Finally, the methods for detecting the number of vehicles passing through a particular point, based on the speed and length of the vehicles, were discussed.