This paper presents research conducted as part of the SAMS project, which aims to develop and certify a safety component for autonomous mobile service robots that is compliant with SIL-3 standards. The safety component is designed to calculate a safety zone for the robot and halt its movement when an obstacle enters the zone, thereby preventing collisions. The safety properties are formulated at an abstract level using geometrical concepts, and the paper discusses the mathematical modeling of these properties, as well as their formalization in higher-order logic using the Isabelle theorem prover.

The paper is structured as follows: Section 2 provides an overview of the SAMS project, Section 3 discusses the specification of safety properties, Section 4 demonstrates how to prove the correctness of the safety component, and Section 5 offers a simplified account of the entire development process. The paper concludes with Section 6.

The development of a safety avoidance algorithm under the IEC 61508 standard as a SIL-3 compliant safety component is considered novel, both from a robotics perspective and in terms of certification requirements. Unlike traditional industrial safety certification, which often relies on hardware-based solutions, the safety function in this project is based on software and sophisticated algorithms.

The lack of a history of formal methods in robotics presents a challenge, as there are no established best practices, specification languages, or domain-specific tools available. The paper emphasizes the importance of formulating safety properties in a comprehensible and abstract manner to make them credible for external certification authorities.

The formalization of the proofs for well-known theorems is ongoing and is considered essential for certification. Formalizing proofs in Isabelle helps to make all preconditions and assumptions explicit, reducing the potential for errors arising from contextual or tacit assumptions.

The paper also discusses the link between discrete input and continuous behaviors and highlights the need for specifications related to odometry. The approach presented in the paper is advantageous because the abstract specification allows for a focus on main aspects during review and helps uncover conceptual errors. Additionally, the paper provides an update on the current status of the SAMS project, stating the amount of software code and proof scripts developed so far.