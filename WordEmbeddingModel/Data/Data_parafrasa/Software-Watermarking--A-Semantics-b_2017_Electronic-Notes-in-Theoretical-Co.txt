Software developers are interested in safeguarding the intellectual property of their products from software piracy, particularly in preventing the unauthorized use of their code. One technique used for this purpose is software watermarking, which involves embedding a unique identifier representing the owner into a cover program. This enables software developers to demonstrate their ownership by extracting their signature from pirated copies. Over the past two decades, researchers have developed various software watermarking techniques, such as static, dynamic, and abstract watermarking, which differ based on their extraction processes. Static watermarking preserves program properties of interest to observers during the embedding process. Additionally, the ability of a watermarking scheme to resist collusive attacks aimed at removing the signature can be characterized as a form of abstract non-interference among programs.

Our work presents a more detailed validation of known watermarking techniques than found in existing literature. We incorporate two established watermarking techniques, one dynamic and one static, into our framework. Through our investigation, we have made the following contributions.

Transparency refers to the ability to make it difficult to discern whether a given program is a stegoprogram. A watermarking system is considered invisible to an observer if they cannot differentiate a generic cover program from any stegoprogram generated from it.

In order to validate our model, we have formalized two known watermarking techniques, one dynamic and one static, within our framework (the case of abstract watermarking is straightforward). By doing so, we aim to emphasize our main assertion that static and dynamic watermarking are specific instances of abstract watermarking.

We introduce an efficient approach, where only attacks that fully consider the semantic encoding of the signature are capable of detecting and potentially altering it. This implies that the abstract domain used for the semantic encoding of the signature m(s) functions as a secret key, revealing the signature solely to attackers fully considering m(s).

In terms of evaluating the quality of a watermarking scheme, our general framework provides a formal context for demonstrating the effectiveness of a watermarking scheme in relation to resilience, secrecy, transparency, and accuracy. To validate our theory, we have demonstrated the effectiveness of two well-known watermarking systems. Consequently, we offer a comprehensive theory that enables researchers to formally substantiate the quality of the watermarking systems they propose. We believe this represents an important contribution, serving as the initial step toward a formal theory for software watermarking, where both new and existing techniques can be certified in terms of their effectiveness.