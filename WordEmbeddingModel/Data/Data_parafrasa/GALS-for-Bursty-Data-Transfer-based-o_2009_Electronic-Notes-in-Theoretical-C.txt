This paper introduces a new burst-mode GALS (Globally-Asynchronous Locally-Synchronous) technique aimed at enhancing the performance of GALS approaches for systems with predominantly bursty data transfer. The technique is applied to implement a GALS-based version of a hardware accelerator for a 60 GHz OFDM (Orthogonal Frequency Division Multiplexing) baseband processor. Simulation results demonstrate a significant performance improvement compared to a traditional GALS implementation utilizing pausible clocking.

In wireless communication systems, design challenges are particularly demanding, with complexity increasing rapidly. For example, the complexity of a 5 GHz WLAN OFDM baseband processor with a capacity of up to 54 Mbps is currently around 500k gates. In contrast, the state-of-the-art 60 GHz OFDM baseband processor supporting data rates up to 1 Gbps has a complexity of over 23m gates, and efforts are underway to target data rates of 10 Gbps, which would result in a complexity increase by an order of magnitude. Additionally, communication systems present additional challenges such as low-power and EMI reduction to enhance mobility and achieve system-on-chip (SoC) integration.

The paper elaborates on the concept of the novel burst-mode GALS wrapper and provides details of its implementation and comparison with other GALS solutions. Practical application of this concept to a hardware accelerator for a 60 GHz OFDM baseband processor is discussed in Section 4, followed by concluding remarks.

A key limitation of most GALS implementations is their inability to support one data transfer per clock cycle. While traditional GALS approaches enable one data transfer per two clock cycles or less, there are only a limited number of interfaces capable of accommodating data bursts, allowing data transfer on each clock cycle of the local clock. However, pausible clocking interfaces with bursty data transfer pose a general challenge. Traditional pausible clock-based GALS approaches require synchronization between communicating modules during each data transfer, resulting in unnecessary overhead. Operating in burst mode, it appears unnecessary to synchronize clocks for each clock cycle.

In more complex systems with multiple masters and slaves, the burst-mode GALS technique scales effectively. However, the clock generator for the slave block must also be pausible if this block is also a master block for another GALS module, as defined in Section 2.

A significant advantage of the proposed solution is that synchronization is only required once at the beginning of the burst, eliminating the need for further synchronization. This is a notable improvement over classical pausible clocking interfaces. The solution is conceptually similar to a previous proposal, but with a simpler implementation and higher throughput.

Additionally, the paper references the work of L. A. Plana, W. J. Bainbridge, and S. B. Furber on the design and testing of a smartcard chip using a chain self-timed network-on-chip, presented in the proceedings of the Design, Automation, and Test in Europe Conference and Exhibition in February 2004.