This paper suggests an efficient offloading strategy for a mobile edge environment using queuing networks and a genetic algorithm (GA). The queuing network models the waiting and service times of mobile tasks on edge servers, while the GA is employed to optimize task allocation and minimize response time, considering transmission times and server load conditions. The proposed GA-based offloading algorithm is compared with particle swarm optimization (PSO), demonstrating superior performance in enhancing mobile application response time.

Mobile task offloading to cloudlets, located at the edge of the network, is aimed at improving response time and reducing power consumption. However, the limited capacity of cloudlet servers necessitates careful offloading and allocation decisions to avoid increased response times as the number of offloaded tasks grows. Designing an effective offloading strategy under these resource constraints is challenging, necessitating consideration of transmission times, waiting times, and service times at cloudlet servers.

The remainder of the paper is organized as follows: Section 2 reviews related work on mobile task offloading in edge environments, Section 3 presents a formal system model of the optimization problem, Section 4 outlines evolutionary-based algorithms for solving the problem, Section 5 analyzes and discusses experimental results, and Section 6 summarizes the paper and outlines future research directions.

Evolutionary algorithms have demonstrated exceptional results in cloud computing, and a previous study proposed offloading strategies using genetic algorithms, differential evolution, PSO, and shuffled frog leaping algorithm. The experiments showed that the genetic algorithm outperformed other algorithms in offloading tasks on mobile cloud computing architectures. Another study proposed an evolutionary-based offloading strategy using grey wolf optimization in a mobile cloud computing environment.

The GA simulates biological evolution by generating random populations of solutions, encoding each solution as a chromosome with genes, and then applying operations such as crossover and mutation to evolve the population toward the optimal solution. The algorithm initializes parameters, generates an initial population, calculates fitness values, iterates, applies crossover and mutation, and selects new individuals using roulette wheel selection.

PSO is a bio-inspired optimization method mimicking the behavior of bird swarms. Each particle in the swarm searches for the best solution based on its position, the best solution found by the particle, and the best solution found by the swarm as a whole. It aims to minimize the response time of offloaded tasks, considering transmission times and server load conditions.

In conclusion, the proposed GA-based offloading algorithm is efficient compared to PSO-based and round robin-based offloading algorithms. Future research will explore multi-objective functions for mobile task offloading in mobile edge environments and investigate task offloading for workflows using different evolutionary algorithms.