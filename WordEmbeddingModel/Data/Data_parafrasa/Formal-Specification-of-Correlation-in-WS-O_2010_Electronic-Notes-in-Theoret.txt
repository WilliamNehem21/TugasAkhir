The motivations for this paper are twofold. First, we aim to extend the low-level implementation mechanism in order to express the handlers constructs by introducing a message algebra with functions, thereby allowing abstraction from implementation details. Secondly, we seek to expand the mapping to include correlation sets and introduce a formal framework for studying the mechanism of correlation in orchestration languages.

The remainder of this paper is organized as follows. Section 2 introduces ws-bpel with correlation sets and provides an illustrating example. The syntax of the extended bp-calculus is presented in Section 3.2, and its operational semantics is discussed in Section 3.3. Section 3.4 presents the encoding of some relevant bpel constructs into bpcalculus, and a bp-model for the example is given in Section 3.5.

Ws-bpel is an xml-based specification language for describing business processes that orchestrate the interaction of different web services. It builds upon the wsdl language for describing web service interfaces, including port types, actions, and messages.

In ws-bpel, variables can be defined to carry xml data values and messages, and define the state of each process instance. Notably, variables can also contain partner links, allowing for addressing mobility coupled with the ws-addressing specification.

Correlation rules in ws-bpel define how messages correlate with process instances, and correlation sets are introduced to identify interactions pertinent to a given process instance. Each correlation set is a set of properties, which are aliases for parts of messages. Correlation sets are instantiated while initializing the containing scope.

The paper also introduces a mechanism that abstracts ws-bpel scopes, which act as containers for ws-bpel processes and handlers. Scopes contain a primary structured activity defining their normal behavior, as well as variable definitions and handlers.

The paper presents a bp-calculus specification of a fragment of a trade market example, involving three processes: the agent, the customer, and the broker. The agent acts as a coordinator between the other processes and represents the bpel process of interest, while the customer process and the broker process are instantiated.

The paper enhances the bp-calculus by using function calls and message handling to formalize the correlation concept for orchestration languages, specifically the bpel language. Further analysis is needed to study properties of the model and the interactions of correlation sets with handlers and other complex constructs. Additionally, the paper aims to integrate a formalization of the ws-addressing standard to handle name mobility and integrate the concepts into a verification engine based on the bp-calculus.