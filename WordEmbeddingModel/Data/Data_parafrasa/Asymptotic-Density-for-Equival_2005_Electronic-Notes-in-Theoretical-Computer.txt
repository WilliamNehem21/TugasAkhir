This paper investigates the asymptotic density of certain propositional logics by examining the ratio of true formulas of a given length to the total number of formulas of that length. The goal is to determine the limit of this ratio as the length of the formulas, n, approaches infinity. If such a limit exists, it represents a number known as the density of truth for the logic under study.

Furthermore, the paper extends the previous research by incorporating negation into the language. It is found that the limit still exists, but the addition of negation reduces the density of truth to 42.32%. Additionally, the author presents a simple and efficient (logarithmic in n) probabilistic algorithm for determining whether a given formula is a tautology.

More general results are discussed in another paper, where authors examine a language constructed with two connectives (and, or) and literals. They demonstrate that the asymptotic density exists for any boolean function defined in this language when the number of variables is fixed. Moreover, they improve the existing upper bound for the asymptotic density of a selected boolean function.

To determine the value of a parameter tk, the authors make a simple observation that allows them to develop a closed form (Lemma 2.5) for tk. However, this form is found to be too complex, and Theorem 2.6 provides a more useful representation for tk.

The authors use Lemma 2.2) to show that every formula can be represented as a binary tree, with each leaf labeled by a corresponding variable. By counting the number of binary trees with 2n leaves, where each label appears an even number of times and applying Remark 2.4, the authors are able to determine the total number of tautologies of even length.

In the specific case under consideration, there are c2n binary trees with only one label, and each of these trees must be labeled to meet the requirement of having an even number of occurrences for each variable. Let 2ij (where j = 1,..., k) represent the number of occurrences of the label vj.

