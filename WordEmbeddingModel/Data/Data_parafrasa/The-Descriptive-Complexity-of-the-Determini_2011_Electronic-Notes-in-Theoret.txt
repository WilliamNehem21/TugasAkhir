The paper delves into the field of descriptive complexity, which explores the use of logics to describe computational complexity classes. Fagin's seminal 1974 proof that the class NP can be characterized by existential second-order logic marked the initiation of this line of inquiry, leading to subsequent research on the connections between logics and complexity classes. Notably, various relationships have been established between first-order logic and its extensions and complexity classes within the realms of polynomial time or space. For instance, it has been demonstrated that the first-order logic extended by the least fixed-point operator encompasses the class P, while the second-order logic extended by the transitive closure operator captures certain complexity classes.

One vital aspect of computational complexity lies in evaluating the efficiency of algorithms, which is typically measured using the amount of time and space required for execution. This investigation into algorithmic efficiency enables the delineation of a hierarchy of problem classes based on time and space considerations. Key classes in this context include P, encompassing problems solvable by a polynomial deterministic Turing machine, and NP, encompassing problems solvable by a polynomial nondeterministic Turing machine. These classes form the foundation of the computational complexity hierarchy and play a crucial role in characterizing the efficiency of algorithms.

This work focuses on exploring the combined application of the least fixed-point operator with higher-order logics. The paper outlines the definition of higher-order logics and highlights existing findings regarding their expressive capabilities. Additionally, it introduces the least fixed-point operator and demonstrates how it enhances the expressive power of first-order logic. The main result of the paper pertains to characterizing the complexity classes encapsulated by each higher-order logic extended with the least fixed-point operator, along with presenting relevant corollaries regarding the expressive capabilities of these logics.

The study also examines alternative approaches to extending first-order logic and augmenting its expressive prowess through the introduction of operators such as the least fixed-point operator, giving rise to the least fixed-point logic. Furthermore, the paper discusses other fixed-point operators, such as inflationary and partial fixed-points, and how they can be incorporated into higher-order logics to capture additional classes of problems.

One notable aspect of the research is the consideration of the general hierarchy of higher-order logics with the least fixed-point operator, leading to the proof that each level of this hierarchy corresponds to a level of the deterministic exponential time hierarchy. This finding underscores a deep-seated relationship between the expressive power of logic and the complexity of problems that can be represented within it.

The paper also examines the relationship between the addition of the least fixed-point operator and the exponential gains in time complexity. Notably, the inclusion of the operator leads to an exponential gain in time complexity, exemplified by the fact that first-order logic captures the logarithmic hierarchy, while its extension with the least fixed-point operator captures the class P, marking a notable leap in time complexity. These insights offer valuable implications for understanding the interplay between expressive power and computational complexity.