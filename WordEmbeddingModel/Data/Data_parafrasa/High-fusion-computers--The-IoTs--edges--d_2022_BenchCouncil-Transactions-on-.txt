The paper uses HFC as a central example of an open-source computing system design. It extracts reusable functions (funclets) from system stacks across IoTs, edges, and data centers. These funclets are used to restructure the IoTs, edges, data centers, and human-in-the-loop components as a unified computer system, incorporating features such as autonomic resource discovery, management, programming, workload scheduling, and coordinated collaboration between software, hardware, and human components. The paper outlines a three-fold plan, which includes the importance of benchmarks and funclet-based standards, methods and tools to facilitate workload-driven exploration of system and architecture design space, and the provision of the first open-source implementation of the funclet architecture of HFC systems.

The remainder of the paper is organized as follows: Section 2 explains the motivation; Section 3 outlines the challenges with HFC; Section 4 explores the software and hardware design space of HFC; Section 5 describes the proposed plan; Section 6 summarizes related work; and Section 7 provides the conclusion.

The paper discusses the medical system's ability to effectively allocate medical resources for rapid rescue, and highlights the role of medical experts in the system. It introduces the concept of a "reliable-human-in-the-loop" for medical emergency management systems, where medical professionals are considered reliable external components in the control loop. The paper also describes computation patterns applicable to IoT devices and medical experts in medical emergency scenarios, emphasizing the observe, fuse, recommend, and train patterns.

Furthermore, the paper discusses the challenges related to task types (highly-automated and safety-critical), the generation of heterogeneous data from IoT devices and the implications for autonomous driving systems, as well as the challenges of organizability, manageability, effective evaluation, simulation, and validation.

The paper also addresses the need for CPU benchmarks and outlines steps to define an ideal chiplet architecture for different layers and patterns, validate the chiplet architecture design, and implement the datapath processor as an accelerator. It discusses the design of a data storage system and the uncertainties in optimization objects for HFC systems, as well as the complexity of automatically co-optimizing the algorithm, software, and hardware components.

In summary, the paper proposes abstracting reusable functions across system stacks to guide the design and evaluation of HFC systems, emphasizing the importance of benchmarks, standards, and tools, and offering an open-source implementation. The paper outlines a co-design approach that explores algorithms, runtime systems, resource management, storage, memory, networking, and chip technologies, as well as the collaboration and interaction among IoTs, edges, data centers, and humans-in-the-loop.