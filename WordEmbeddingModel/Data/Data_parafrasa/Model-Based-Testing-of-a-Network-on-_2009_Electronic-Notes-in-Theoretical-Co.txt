This academic paper discusses the challenges related to model-based test case generation and automatic testing of a component within an asynchronous network-on-chip (NoC). The paper first introduces a model of the component using the B action system, which is a state-based formalism based on action systems and the B method. A finite state space graph is constructed through the execution of the model, and a test driver is generated from the abstract test cases to facilitate automatic testing of a corresponding implementation. The key contribution of this work is the consideration of hierarchical models for test case generation and automatic testing, addressing the limitations of previous approaches that were based on flat models. Moreover, the paper highlights the issues attributable to non-determinism in hierarchical models.

The paper is organized as follows: Section 2 discusses related work, Section 3 provides a brief introduction to the B action systems and discusses the model of a NoC component, Section 4 outlines the problem addressed in the paper, Section 5 describes the test generation procedure, Section 6 proposes a solution to the non-determinism issue, Section 7 presents an analysis of the approach, and Section 8 concludes the paper.

The paper also discusses the creation of operation instances and the generation of test cases through a finite state automaton (FSA) by traversing the FSA. It contrasts the hierarchical approach of the presented work with existing methods, such as the BZ testing tool and the Protest approach, which primarily focus on flat B models. Additionally, the paper highlights the utilization of model checking for generating test cases from models in the SAL formal language while emphasizing the lack of similar work addressing the challenges of non-determinism or hierarchical models in the context of NoC system design.

Furthermore, the paper outlines the composition of B action systems to model parallel systems and demonstrates how structuring mechanisms (e.g., sees, includes, and promotes) can be used to express B action systems as a composition of subsystems, providing an efficient way to model system hierarchy. The paper also includes a discussion on the testing of hierarchical B action systems and the challenges associated with full coverage of operations.

The paper concludes by acknowledging that, despite the formal refinement process associated with the B method, model-based testing is still recommended in certain cases and can potentially reduce the time required for performing proofs. It also discusses the generation of functional test cases using model checking and the utilization of the PROB tool to generate a finite state space of the hierarchical B model.

In summary, the paper addresses the challenges of model-based test case generation and automatic testing in the context of an asynchronous network-on-chip, emphasizing the significance of considering hierarchical models, and proposes solutions to address the limitations of previous approaches based on flat models and non-determinism.