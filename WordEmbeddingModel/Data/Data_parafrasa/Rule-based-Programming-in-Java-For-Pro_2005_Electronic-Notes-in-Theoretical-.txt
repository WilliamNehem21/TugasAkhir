This paper introduces a method for developing model-checkers within a framework called TOM, which combines declarative and imperative features. The authors demonstrate their approach by using TOM to specify the Needham-Schroeder public-key protocol, a protocol designed to enable mutual authentication between an initiator and a responder communicating over an insecure network. They describe the message exchange behavior of the agents, the actions of potential intruders, and the security requirements that the protocol needs to satisfy using TOM's rewrite rules. The paper also outlines how the exploration of the search space is conducted using TOM's imperative features, and it discusses several optimizations and compares their results to existing methods.

The authors note that programming with rewrite rules and strategies has been employed in various computational logics and transition systems, such as in languages like Elan or Maude. They point out that these languages allow transitions to be described through conditional rewrite rules and provide mechanisms for defining strategies for applying these rules. Furthermore, they highlight that these languages can be suitable for modeling and checking transition systems, including cryptographic protocols like the Needham-Schroeder public-key protocol.

The authors mention that various methodologies, from model-checkers like FDR to approaches based on theorem proving, have been used to analyze the Needham-Schroeder public-key protocol. While this protocol consists of only a few rules, its insecurity was only discovered in 1995 by G. Lowe. Following the identification of the security issue and the verification of a modified version, several other methods have been utilized to demonstrate the attack and obtain correct versions.

The paper explains that the goal of the protocol is to establish mutual authentication between agents using public keys distributed by a key server to encrypt their messages. The authors consider a simplified version proposed by G. Lowe, in which each agent knows the public keys of all other agents but does not have access to their private keys.

The authors detail the use of TOM's conditional rewrite rules to describe state transitions of agents and intruders, as well as the security invariants that the protocol needs to adhere to. They note that the imperative features of TOM are utilized for improving efficiency, particularly in guiding the exploration of the search space.

The paper mentions that TOM is a language extension that introduces new matching primitives to existing imperative languages. It is particularly suitable for describing transformations of structured entities, such as trees/terms and XML documents. The authors also highlight TOM's language and data-structure independence, as well as its capability to compile into various native languages like C or Java.

The paper presents a detailed description of the Needham-Schroeder public-key protocol, including an attack scenario and a corrected version. It also demonstrates the encoding of the protocol and compares the results with other approaches. The authors conclude the paper by outlining future perspectives for their work.

Overall, the paper proposes an innovative approach for developing model-checkers using TOM, and it demonstrates the applicability of this approach through the specification and analysis of the Needham-Schroeder public-key protocol.