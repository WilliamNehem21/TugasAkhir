The paper presents a framework for developing and verifying distributed systems using the Object-Based Graph Grammar (OBGG) formalism. The framework utilizes simulation, verification, and code generation techniques, and it maps OBGG models to Java for execution in a real environment. The main innovation of this framework lies in its use of OBGG as the formal specification language, providing a unifying formalism for the development of distributed systems.

To verify OBGG models, the paper introduces an approach where OBGG models are translated to Promela, the input language of the Spin model checker. Notably, properties to be verified are specified over OBGG models, rather than over the translated Promela models. However, the paper also acknowledges the potential to specify properties over states, in addition to events, for a more comprehensive understanding of system behavior.

The paper also discusses the use of graph grammars to capture the dynamic aspects of systems, highlighting the representation of system states by graphs and the application of rules to change system states. Additionally, the behavior of entities and the initial state of the system are specified using graph grammar concepts.

Furthermore, the paper presents the application of the Spin model checker for the verification of concurrent software systems. It discusses the use of linear temporal logic (LTL) for property specifications and emphasizes the need to define atomic propositions over the Promela model during property specification.

The translation of OBGG objects to Promela processes is also explained, along with the subsequent verification of properties based on events. The paper extends the approach to allow for the specification of properties based on the internal states of objects, addressing the limitations of solely using events for property specification.

The paper also touches on the graphical representation of OBGG models and the challenge of capturing both message exchange and rule application in this representation. Additionally, it highlights the difficulty of analyzing causal relationships among events due to the lack of unique identifiers for messages in the Promela model.

In summary, the paper contributes to the development of a framework for verifying OBGG models and presents an approach for specifying properties based on events and states. Moreover, it addresses the graphical representation of counter-examples and emphasizes the compatibility of the approach with the OBGG formalism. The paper distinguishes itself from related works by providing a formal proof of the correctness of the translation and by offering a higher level of abstraction that aligns with the OBGG formalism.