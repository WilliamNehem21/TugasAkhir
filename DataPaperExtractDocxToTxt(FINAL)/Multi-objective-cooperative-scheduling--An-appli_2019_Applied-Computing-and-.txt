







Original Article
Multi-objective cooperative scheduling: An application on smart grids
Khouloud Salameh a,b, Richard Chbeir a,⇑, Haritza Camblong b
a Univ. Pau & Pays Adour, LIUPPA, 64600 Anglet, France
b University of Basque Country, Donostia 20018, Spain



a r t i c l e  i n f o 

Article history:
Received 15 September 2017
Revised 25 October 2017
Accepted 26 October 2017
Available online 28 October 2017

Keywords:
Multi-objective optimization Smart Grid
Scheduling
a b s t r a c t 

As the size of the Smart Grid (SG) grows, the economic significance of power generation, consumption and storage scheduling becomes more and more apparent. A proper scheduling for electricity generation, consumption and storage will also ensure the reliability of the SG and extend the operational lives of its constituent units. Besides, it can achieve economical and ecological benefits for the SG. In this work, we propose a multi-objective cooperative scheduling consisting of two main modules: (1) the Preference- based Compromise Builder and (2) the Multi-objective Scheduler. The Preference-based Compromise Builder aims at generating the best balance or what we call ‘the compromise’ between the preferences or associations of the sellers and the buyers that must exchange power simultaneously. Once done, the Multi-objective Scheduler aims at proposing a power schedule for the associations, in order to achieve three-dimensional benefits: economical by reducing the electricity costs, ecological by minimiz- ing the toxic gas emissions, and operational by reducing the peak load of the SG and its components, and by increasing their comfort. Conducted experiments showed that the proposed algorithms provide con- vincing results.
© 2017 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University. This is an
open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).





Introduction

The Information and Communication Technologies (ICT) repre- sent unprecedented opportunities to move the power systems into a new era of reliability and efficiency that will contribute to oper- ational, economical and ecological improvements. During this transition period, it is important to implement adequate tech- niques allowing to ensure that the benefits envisioned from the SG (cf. Fig. 1) become a reality. Commonly considered as a key mechanism towards a more efficient and cost effective SG, the Demand Side Management (DSM) [6,16] refers to the planning and implementation of the utility companies’ programs1 designed to directly or indirectly influence the consumer consumption in the aim of reducing the system peak load and electricity costs.

* Corresponding author.
E-mail addresses: khouloud.salameh@univ-pau.fr (K. Salameh), richard.chbeir@ univ-pau.fr (R. Chbeir), aritza.camblong@ehu.eus (H. Camblong).
Peer review under responsibility of King Saud University.


1 A utility company is a company that engages in the generation and the distribution of electricity for sale generally in a regulated market.
DSM techniques can be mainly gathered in two main categories:

The load shifting [12] which involves shifting the power con- sumption from on-peak to off-peak periods
The energy efficiency and conservation [2] which encourages con- sumers to reduce their consumption in order to reduce their electricity bills and the peak load.

Although important the emergence of tools provided by the energy efficiency and conservation approaches, such as TiDomus [7], we focus here on the load shifting, and more specifically on the power scheduling, since it has been observed that it is easier to motivate users to reschedule their needs rather than asking them to reduce their consumption [12]. Several approaches have been provided in the literature to address the power scheduling problem [11,19,15,1,5,17]. However, and to the best of our knowl- edge, none of the them fully addresses the following challenges:

Operational Challenges: Several limitations can be mentioned regarding the operational aspect:
The consumer discomfort: while the consumers are enjoy- ing their reduced electricity bills when shifting their con- sumption from on-peak to off-peak periods, they might risk


https://doi.org/10.1016/j.aci.2017.10.005
2210-8327/© 2017 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



Acronyms


Diseco	economical dissatisfaction Disecolo	ecological dissatisfaction Disop	operational dissatisfaction
S(e; w)	satisfaction
Seco	economical satisfaction Secolo	Ecological Satisfaction Sop	operational satisfaction
DE	digital ecosystem
Dis	dissatisfaction
DSM	Demand Side Management e	edge
ICT	Information and Communication Technologies PG	purchase graph
S	schedule
SG	smart grid
W	set of weights



discomfort related to the delay time of receiving their desired power.
The local peaks: while trying to reduce the whole SG peak load, it is essential to consider the individual SG components’ peak loads as well. This would conduct to increase the relia- bility of the components and decrease the local failure risks.
The consumption wise: the current shifting programs [11,19,15,5] provide consumption scheduling without con- sidering the production nor the storage scheduling (with the exception of few approaches [1,17]) which negatively impact their efficiency in shaping the peak load, reducing the electricity bills and minimizing the gas emissions effects.
Economical Challenges: Knowing that the electricity price relies on the demand and supply over a specific period [10], an adequate scheduling is expected to shift loads during periods of high market prices (peak hours) and consequently minimize the electricity costs.
Ecological Challenges: A significant power production from pollutant energy sources leads to a significant toxic gas emis- sions. Hence, it is essential to provide a power production scheduling allowing to reduce the bad emissions and effects on the environment by reducing the simultaneous toxic power production.

To address the aforementioned challenges, we introduce here MOCSF, a ‘Multi-Objective Cooperative Scheduling Framework’ designed for the power scheduling in the SG. MOCSF aims at scheduling a set of couples, each consisting of a seller and buyer, working together in a mutual spirit so to ensure a better reduction of the economical, operational and ecological costs and impacts within the SG. In addition, our approach presents several advan- tages over existing approaches, namely:
The rest of this paper is organized as follows. Section 2 provides details about existing power scheduling techniques and their drawbacks regarding aforementioned challenges. Section 3 details the ‘MOCSF’ modules. An illustrative example is provided after each step to ease the understanding of each module. In Section 4, the experiments conducted to validate our approach and the main results obtained are presented. Section 5 concludes the paper.

Related work

Many approaches have been proposed in the literature to solve the power scheduling problem. Current approaches can be catego- rized into two main groups [8]: semi-automatic schedulers [11,19,5] and automatic schedulers [17,15,1] schedulers. In the semi-automatic schedulers, the consumers inject their desired preferences (e.g., desired temperature, appliances start time pref- erences, etc.) during the scheduling, contrarily to the automatic schedulers where there is no human intervention. In our work, we will be focusing on six scheduling approaches, that vary in their scheduler, optimization problem type, appliances types and objectives.

Semi-automatic schedulers

In [11], the authors developed a distributed power consumption scheduling algorithm aiming at reducing the electricity bills and balancing the total power demand when multiple consumers share a single energy source. To do so, the authors formulated a game- theory technique, where the players are the consumers and the strategies are their corresponding power consumption schedules (represented as vectors). The objective function of each consumer n when choosing the strategy xn is defined as follows:

It provides a scheduling coverage able to consider all of the power consumption, production and storage entities of the SG,
It  considers  multiple  energy  sources  (unlike  existing
H
Min	Ch
h=1


h n;a
n∈N a∈An

(1)

approaches [11,19,15,1,5,17] that studied the interaction of the consumers with only one energy source),
It takes into account the SG components’ preferences unlike current approaches [19,1,17] that consider them partially.
where Ch is the cost function, assumed to be strictly convex for each h ∈ H, and H = 24. xh is the schedule of the appliance a, owned by the player n, at hour h. The pseudo-code of the distributed algo- rithm proposed is provided in cf. Algorithm 1.




Algorithm 1. Executed by each consumer n ∈ N












Fig. 1. Smart Electricity Network (Source: www.actia.com, 2017).


For each player n ∈ N, the power consumption scheduling is generated randomly. The intuition behind this choice is that the authors considered that, at the beginning, a player n has no prior information about others players. Then, a loop is executed until the algorithm converges. Within the loop, the objective function
Fig. 2. CPSO configuration and operation.


In [5], the authors developed a power consumption scheduling aiming at reducing the electricity bills of the consumers with a minimum impact on their consumption preferences. The authors
considered that the scheduler needs to determine the consumption vector Xi = [xi;1; xi;1; ... ; xi;H] for each unit i in the determined zone horizon H, where H consists of M segments comprised of m time
intervals, i.e., H = M * m. Then, a shrinking horizon optimization problem [4] has been defined as follows:

is resolved using an IPM algorithm [3], resulting a new schedule for each player. The same process is repeated until there is no new announced schedule for all the players. Simulations results showed that the proposed distributed algorithm can reduce the
jm
S(j)(H)= 
h=jm—m+1
jm
S(th)+	S^(th)	(3)
h=jm+1

electricity bills and the peak of average ratio.
where S(j)(H) is the total electricity cost in the jth optimization step,

In [19], the authors developed a meta-heuristic scheduling algo-
rithm, aiming at reducing the dissatisfaction and the energy cost of
jm h=jm—m+1
S(th) is the energy cost for m intervals in the jth time seg-

a set of homes in a district, and the variance of the grid. To do so, the authors divided the home appliances into two categories: power-shiftable and time-shiftable appliances. The objective func- tion is formulated as follows:
ment based on actual electricity prices, and jm S^(th)is the esti- mated energy cost based on the forecasted electricity prices for subsequent time intervals. Note that the user preferences are con- sidered by including the time intervals where energy scheduling
is performed for unit i. Without giving details about the obtained

T  S
Min
t=1 j=1
Iij(t)* Uij(t)+ a * (c(t)* 
Xj=1
Pij(t))


(2)
results, the authors assume that the proposed model can minimize
the electricity consumption costs while including the consumers’ preferences.

+ b *
T  S


t=1 j=1
* Pij(t)— 1/|T|* 
Xi=1 Xt=1 Xj=1
2
Pij(t)

Automatic schedulers

where T is the set of time interval, N is the set of households, S is the set of electric appliances, Iij(t) is a binary variable denoting the working status of the appliance j in the household i at time
t; Uij(t) is the dissatisfaction caused by operating the appliance i in
the household i at time t; c(t) is the electricity sale price at time t, and Pij(t) is the working power of the appliance j in the household i at time t.
The dissatisfaction function Uij(t) represents the difference between the desired temperature and the actual indoor tempera-

In [15], the authors formulated an optimization model for households power scheduling, aiming at reducing the electricity costs and the peak load of the grid. To do so, the authors integrated the incentive and inconvenience concepts. The incentive is offered to the users during peak times to encourage them to reduce their consumption, while the inconvenience seeks to reduce the differ- ence between the baseline and the optimal appliances schedule. The objective function is defined as follows:

T  I

ture for the space heater at time t, and the difference between
MinXX[P (c * Uopt — b * d(Ubl — Uopt)) * D.t + (Ubl — Uopt 2

the desired hot water temperature and the actual hot water tem- perature for the water heater at time t.
The authors used the Cooperative Particle Swarm Optimization
i t
t=1 j=1
i;t	t
i;t
i;t
i;t
i;t ) ]


(4)

(CPSO) (cf. Fig. 2) to find the optimal scheduling of the appliances. Experimental results showed the positive impact of the households coordination in decreasing the peak loads and reducing the power
costs.
where Pi is the rated power of the appliance i; Uopt is the new on/off
status of the appliance i at time t; Ubl is the baseline on/off status of the  appliance  i  at  time  t; I = 10; T = 144; d(Ubl — Uopt)= 1  if

i;t	i;t



(Ubl — Uopt) > 0 and d(Ubl — Uopt)= 0 if (Ubl — Uopt) < 0. The formu-
Discussion

i;t
i;t
i;t
i;t
i;t
i;t

lated model is solved using the MINLP algorithm, which utilizes the Mixed Integer Programming (MIP) [18] and the Non-Linear Pro- gramming (NLP) [3]. Simulations results showed that using this model, the consumers realized 25% of electricity cost reduction. Noting that this percentage is affected by several factors, such as the number of shiftable appliances and the prices of the on-peak and off-peak times.
In [17], the authors developed a power storage scheduling algo- rithm aiming at managing the storage in the grid in a way of saving energy and reducing the reliance on the non-renewable energy sources. To do so, the authors formulated a game-theorist tech- nique, where the players are the consumers and the strategies are their storage schedule vectors. The objective function of each player i when choosing the strategy si is defined as follows:
P (s ; s  )X(sh + lh)	(5)



Table 1 shows a comparison between the existing DSM approaches highlighting their strengths and drawbacks with respect to the aforementioned challenges. On can observe the following:

Scheduling coverage: All the existing DSM approaches [11,19,15,1,5,17] focused only on the power consumption scheduling, with the exception of [1,17] that addressed the stor- age scheduling as well. However, none of them covers the power production scheduling.
Consumer satisfaction: Few approaches [1,17,19] took into account the consumers’ satisfaction. In [19], the consumers’ comfort is ensured by reducing the gap between the desired and the actual hot water, and between the desired and the actual indoor temperature. However, in [1,17], the satisfaction

where si is the storage schedule vector of all the players expect
i; Pi(si; s—i) is the power price determined using a continuous and supply curve, and lh is the amount of power required by the player i at time h. The Nash equilibrium of the game correspond to the storage schedule si that minimizes the global generator costs given
H 0 bh(x)dx, where bh() is the supply curve and qh is the total amount of power traded by all the players at time h. Simulation results showed that it is possible to realize an electricity bill saving of 13% per consumer with a storage capacity of 4 kW.
Similar to [15], the authors in [1] proposed an energy storage and loads scheduling algorithms aiming at reducing the electricity costs and the peak load hours. In this study, the electricity load analysis is done by grouping the day periods into three time zones each representing a cluster. Each cluster represents the loads expected to be launched during a given period. The cost required to satisfy the power needs of a given cluster j, consisting of K appli- ances is given by:
K
to [11,15,5], where this aspect was completely absent.
Multiple energy sources: To the best of our knowledge, all the DSM approaches [11,19,15,1,5,17] target the interaction of the consumers while assuming having only one utility grid and con- sequently one energy source.
Restricted goal: Another limitation of all the existing approaches is that they do not cope with the three objectives (operational, ecological, and economical) of a successful DSM. In almost all the approaches [11,19,15,1,5,17], the goal was mainly to reduce the electricity costs (economical aspect). In [11,19], the peak load reduction (operational aspect) is addressed aiming at reducing the peak hours in the power grid. However, none of the approaches considers the gas emission reduction (ecological aspect).

All these limitations lead us to develop a new DSM cooperative model, allowing the scheduling of the power production, consump- tion and storage while considering the three-objective aspect of
the DSM and the components’ preferences.

Cj = XX{(Eh;m + Bc
d h;m
)* rh}	(6)

m=1h∈Tj

where Eh;m is the power purchased from the utility grid by a con- sumer m to meet its electrical appliances’ power needs at period
Multi-objective cooperative scheduling

In this section, we detail our ‘Multi-Objective Cooperative

c h;m
and Bd
are the charging and discharging power profiles of
Scheduling Framework’ or MOCSF aiming at reducing electricity

the consumer m for the same period h, and rh is the market power price at a period h. An optimal load and storage scheduling should satisfy the consumers’ requirements at the lowest cost in each per- iod without harming the grid stability. To do so, the objective func- tion has been defined as follows:
3
Min  (Cj)	(7)
j=1

Here, linear programming was applied in resolving the optimization problem. Simulation results showed a 20% of peak load reduction and a 17% of costs savings.
bills, peak loads and environmental bad effects, while enhancing the comfort of the SG components. In order to conceive a coopera- tive environment, MOCSF takes as input a set of couples, or what we call: seller-to-buyer associations, each consisting of a seller and buyer having mutual benefits in working together, with their desired schedules reflecting their operational preferences in terms of: start time, end time and power quantity (to sell or to buy). The main reason behind this choice relies on the fact that we do not want to schedule the sellers and the buyers randomly but we rather want to maintain the power exchange between the sellers and the buyers having the biggest interest in working together (the interest can be expressed via an objective function that takes


Table 1
Comparing existing DSM approaches.




into account the ecological, economical and operational parame- ters). Several approaches have been proposed in the literature to provide appropriate associations [13,14]. Our approach is based on [14], where the authors provided a dedicated clustering algo- rithm aiming at gathering the components that have mutual ben- efits. To do so, they proposed a Digital Ecosystem DE cooperative model for SG management, that consists of two main modules:
(1) the Alliances Builder and (2) the Seller2Buyer matcher. The Alli- ances Builder provides an appropriate clustering algorithm, aiming at gathering all the DE heterogeneous components, having similar needs and preferences. Once done, the Seller2Buyer matcher is applied inside each cluster and between clusters, targeting a better collaboration inside the SG. Note that, their needs and preferences are expressed via a three-dimensional objective function that takes into account the operational aspect by reducing the transmission
power losses wasted over the distribution lines and maintaining
As shown in Fig. 3, MOCSF consists of two main modules: Preference-based compromise builder and Multi-objective Scheduler detailed in what follows.

Preference-based compromise builder

As mentioned before, the input of this module is a set of seller-to- buyer associations, each composed of a seller and a buyer. Note that, each seller or buyer might belong to one or several associations. While sellers and buyers of the same association have to exchange power, each one of them has its own preferences to be respected so to establish a successful cooperative SG. Hence, the first step towards each association scheduling is to find the best balance or what we call the compromise, between the preferences of the related seller and buyer. Let us consider the first association
(nR+, nR—) of the illustrative example. nR+ and nR— should be sched-

1	3	1	3

a power balance (between the generation and the consumption), the economical aspect by minimizing the environmental impact due to the conventional energy sources, and the ecological aspect by ensuring a stable energy trading via a cost reduction.
For the rest of our paper, we will be using the following exam- ple: Let us consider an SG consisting of 9 components having the power generation (g), demand (d) and storage (s) as shown in Table 3. After classifying the SG components, they will be put into
uled together, however nR+ may have several preferences that are different from nR—’s: for instance, this latter prefers to buy power at 7:00 am, while nR+ prefers to sell its surplus at 8:00 am. Hence, our goal is to find the trade-off between the sellers and the buyers preferences. The problem becomes more and more complicated when each seller and buyer exchanges power with several compo- nents (since each can belong to several associations). For instance,
nR+ belongs to another association as well, (nR+, nR—), where nR—

three main categories: the sellers willing to sell their power sur-	1
1	1	1

plus (nR1 → nR+, nR4 → nR+, nR6 → nR+, nR8 → nR+), the buyers willing to buy their power needs (nR2 → nR—, nR3 → nR—, nR5 →
nR—, nR9 → nR—), and the self-satisfied components (nR5 → nR0)
prefers also to buy power at 7:00 am. Hence, our module should pro- pose an optimal distribution of the sellers’ available power at each time t, in that it can meet its preferences and the buyers preferences,
as well. Note that, for privacy reasons, a component has no prior

3	4
(c.f. Table 2.).
1
information with whom he will exchange power, he can only precise

After applying a clustering algorithm aiming at gathering the SG components having mutual interests in working together based on the minimization of an objective function that takes into account the ecological, economical and operational costs, the result is a set of couples or seller-to-buyer associations as follows:
Association 1 : (nR+, nR—)— nR+should sell nR— a quantity of 14 kW
><Association 2 : (nR+, nR—)— nR+should sell nR— a quantity of 3 kW
the quantity he needs to sell or buy at each time t.
Before detailing the process, we present first some definitions used in our study. Each component nR,2 coud be a seller nR+ or a buyer nR— having respectively power surplus and power need.

Definition 1 (Schedule [S]). A schedule S consists of the power exchanged vector sR = [s1 , s2 , ... , sT ], where st  denotes the corre-

>>:


Table 2

4	1	4	1

4	2	4	2
exchange, at a time t over a period T r

Definition 2 (PurchaseGraph [PG]). A PurchaseGraph PG is an ori- ented graph (V , E, S, EV ) consisting of representing power scheduling

Example of 9 components of an MG.
of vertices vi  and associations e j
where  each  vertice  vi  ∈

V = {nR+}∪ {nR—} represents a component, each edge e j connects a seller vi ∈ {nR+} to a buyer vj ∈ {nR—} with the total power quan-
tity in EV exchanged between them, and each vertice v or edge e j is
i	i
associated to one desired schedule, denoted sinit ∈ S, and one opera- tional schedule sop ∈ S. The desired schedule designates the compo- nent operational preferences expressing its willing power quantity to exchange at each time t within a period T. The operational sched- ule designates the proposed schedule (provided by our algorithm). Note that, 6 nR ∈ {PGk} ⇒ nR R {PG–k}. To simplify in what follows,


Table 3
Resulting components after of the Classification module.



nR1 (nR1 )
e.nR+ designates the edge seller,
e.nR— designates the edge buyer,
e.EV designates the edge total power quantity,
sinit designates the component desired schedule,
sop designates the component operational schedule,

2	1	nR
2	– sinit designates the edge desired schedule, and
2	– sop designates the edge operational schedule.
1
3	r
3
4
4	2 Self-satisfied components are not included here.




Fig. 3. Multi-objective cooperative scheduling framework.

Definition 3 (Satisfaction [Sas]). .The satisfaction of an edge e is defined according to the operational, economical, and ecological satisfactions of its vertices (its connected seller and buyer). It con- siders the sellers and buyers’ comfort (operational), the power peak load (operational), the electricity bills (economical) and the environmental impacts (ecological). Although it can be defined using different aggregation functions (e.g., maximum, average, etc.), we adopted the weighted sum function to combine the different objective aspects costs, allowing the user to tune the weight of each criterion. Formally:
S(e, W )= W.wop × Sop(e)+ W.weco × Seco(e)+ W.wecolo × Secolo(e)  (8)
where:

Sop(e) represents the operational satisfaction of e,
Seco(e) represents the economic satisfaction of e,
Secolo(e) represents the ecological satisfaction of e, and
W  is  a  set  of  three  weights,  denoted  as:< wop, weco,
where  W  is  a  set  of  three  weights,  denoted as:< wa, wb, wc >, wa + wb + wc = 1 and (wa, wb, wc) P 0, and PG is the PurchaseGraph to which e belongs. r
Thus, the operational satisfaction of a PG consisting of M edges is defined as follows:
M
Sop(PG, W)=  Sop(ei, W)	(13)
i=0
Similarly, the operational satisfaction of an MG consisting of N
number of PG is defined as follows:
N
Sop(SG, W)=  Sop(PGi, W)	(14)
i=0
Note that, the operational dissatisfactions (Disop) is defined as follows:

1

wecolo >, wop + weco + wecolo = 1 and (wop , weco , wecolo ) P 0
Disop(e, W)= 1 + Sop
∈ [0, 1]
(e, W)

r
Thus, the satisfaction of a PG consisting of M edges is defined as follows:
M
Disop(PG, W)= 	1	 ∈ [0, 1]
1 + Sop(PG, W)
Disop(SG, W)=	1	∈ [0, 1]
1 + Sop(SG, W)
(15)

S(PG, W)=	S(ei, W)	(9)
i=0
Similarly, the satisfaction of an SG consisting of N number of PG
is defined as follows:
S(SG, W)= XS(PGi, W)	(10)



where the lower is the operational dissatisfaction (tends to 0), the higher is the operational satisfaction.

Definition 5. [Comfort [Comfort(e)]] The comfort of an edge e, is the waiting time penalization of its vertices, defined as:
X

Note that, in our study, we are aiming to minimize the opera- tional, ecological and economical dissatisfactions (Dis) as follows:

t=1
—


op	init
e	e.nR+
(16)

Dis(e, W )=	1
1 + S(e, W)
∈ [0, 1]
+ e.nR .Op.Penalty × |se [t]— se.nR— [t]|)
where Penalty is the waiting time penalty of the seller nR+ and the

1	buyer nR—, |sop[t]— sinit
[t]| is the difference between the initial

Dis(PG, W)= 
∈ [0, 1]
(11)
e	e.nR+

1 + S(PG, W)
1
desired schedule and the real operation of the seller nR+, and
|sop[t]— sinit — [t]| is the difference between the initial desired sched-

Dis(SG, W)= 
∈ [0, 1]
e	e.nR

1 + S(SG, W)
where the lower is the dissatisfaction (tends to 0), the higher is the satisfaction.

Definition 4 (Operational Satisfaction[Sop]). The operational sat- isfaction of an edge e, denoted Sop(e, W), is defined as:

Sop(e, W)= W.wa × Comfort(e)+ W.wb × Variance(e)
+ W.wc × Variance(PG)	(12)
ule and the real operation of the buyer nR—. r
Note that, the penalty is a positive weighting factor, which represents the waiting time flexibility of the component. If the penalty is zero, this means that the component does not penalize the delay between its desired and operational schedule. The high- est is the penalty, the most the component is delay time constraining.

Definition 6 (Variance e [Variance(e)]). The variance of an edge e, denoted Variance(e) is the peak load ratio of its vertices, defined as:

XT 0 op

Xt=1

2
sop[t]
C

where, the lower is the economical dissatisfaction (tends to 0), the higher is the economical satisfaction.

Variance(e)= 
se [t]— 
t=1 @
|T|  CA
(17)

Definition 10. [Ecological Satisfaction [S


ecolo

]] The ecological




r
Note that, the variance is a positive value reflecting the power load dispersion all along T. The highest is the variance, the higher are the peak loads probabilities.

Definition 7 (Variance PG [Variance(PG)]). The variance of a PG, denoted Variance(PG) is the peak load ratio of its edges, defined as:


Secolo(e)=	sop[t]× e.nR+.Ecolo.GasEss × SG.Op.GasEssCost	(22)
t=1
The ecological satisfaction depends on the toxic gas emissions GasEss emitted during the power production, and the cost GasEss- Cost per unit of gas emission. Note that, all these parameters are modeled in our OntoMG ontology.r

T 0 M op
XBX
Xt=0 Xi=0
2
Sop[t]
C
Thus, the ecological satisfaction of a PG consisting of M edges is defined as follows:

Variance(PG)= 
t=0 B@

i=0
Se [t]— 
|T|	CA
(18)
M
Secolo(PG)= 
i=0

Secolo(PG)	(23)

where M is the number of e in PG r

Definition 8 (Variance SG [Variance(SG)]). The variance of an MG, denoted Variance(SG) is the peak load ratio of the PGs forming the SG, defined as:
Similarly, the ecological satisfaction of an MG consisting of N
number of PG is defined as follows:
N
Secolo(SG)=	Secolo(SG)	(24)
i=0
Note that, the ecological dissatisfactions (Disecolo) is defined as

T  N 0 M
XXBX
op	Xt=1 Xi=1
2
PGj.sop[t]
C
follows:
1

Variance(SG)= 

t=1 j=1
B@ i=1
PGj.sei [t]— 
|T|	CA
(19)
Disecolo(e)= 1 + S

ecolo
∈ [0, 1]
(e)



where N is the number of PG in SG and Mis the number of e in PG r
Dis	(PG)= 	1	 ∈ [0, 1]
ecolo	1 + Secolo (PG)
(25)

Disecolo(SG)=	1
1 + Secolo(SG)
∈ [0, 1]

Definition 9 (Economical Satisfaction [Seco]). The economical sat- isfaction of an edge e, denoted Seco(e), is defined as:
T
op e
t=1
+ e.nR+.Op.LaunchCount ×(e.nR+.Eco.SUCost + e.nR+.Eco.SDCost)
+ e.nR—.Op.LaunchCount ×(e.nR—.Eco.SUCost + e.nR+.Eco.SDCost))
(20)
where PwrCost[t] is the electricity price at a time t and LaunchCount is the number of launches of the sellers and buyers belonging to e, during T. Note that, all these parameters are represented in our OntoMG. r
Similarly for Diseco,
Diseco(e)=    1    ∈ [0, 1]
1 + Seco(e)
where the lower is the ecological dissatisfaction (tends to 0), the higher is the ecological satisfaction.
An overview of the Preferences-based Compromise Builder module is shown in Fig. 4 consisting of three main components:
(1) Candidate components’ prescheduling, (2) Final components’ prescheduling, and (3) Compromise prescheduling. They are detailed below.

Candidate components’ prescheduling
The aim of this module is to dissociate the desired schedule of each seller/buyer, so as to distribute the power quantity at each time t (its capacity of selling/buying) between the components with which, it must exchange, without exceeding nor being inferior to its desired capacity at time t. The pseudo-code of the candidate components’ prescheduling is provided in Algorithm 2. Briefly, for each seller/buyer, we retrieve the list of edges to which the seller/ buyer belongs. Then, we generate the list of all the possible permu-


Diseco


Dis
1

(PG)= 1 + Seco(PG)
1
∈ [0, 1]
(21)
tations of the retrieved edges (Lines 7–16). For each possible per- mutation list of edges at a time t, we verify if the seller/buyer has enough power to sell/to buy to the buyer/from the seller of

eco(SG)= 1 + Seco (SG) ∈ [0, 1]
the same edge (Line 17). If there is enough power (Lines 18–20), we fill the schedule with the quantity to buy/to sell and recall




Fig. 4. Preferences-based compromise builder framework.



the process by the next seller/buyer. If not, we fill the schedule with the quantity to buy/sell, reduce the quantity to sell/buy, and verify the quantity to sell/buy to the next buyer/from the next seller of the next edge (Lines 21–25).
Compromise prescheduling
The aim of this module is to generate every seller-to-buyer association (edge) desired schedule. It consists of selecting the best combination between the final preschedules of the sellers and buy-



Algorithm 2. Candidate Components’ Prescheduling





Final components’ prescheduling
The aim of this module is to select the candidate components’ schedules that guarantee that each edge is provided with its exchanged value (EV) at each time t (e.g., at the end of the day, where t = 24 h). In other words, for each edge, the sum of the power quantity exchanged between its sellers and the buyers at T, should be equal to their exchanged value (EV) in the PG. So, the sellers sell all their power surplus and the buyers satisfy all their needs. The pseudo-code of the final components’ schedules is provided in Algorithm 3. Briefly, for each candidate schedule of each seller (Lines 2–9) and for each time t of the day, we calculate the sum of the energy exchanged of the edges to which the seller/ buyer belongs. The schedule is accepted if the sum is equal to the exchanged value of the edge (Lines 12–13). If the equality is veri- fied for all the edges, we add the candidate schedule to the final components’ schedules (Lines 13–16).
ers. This can be done by selecting the combination that ensures the minimum gap between the desired schedules of the sellers and buyers and the proposed compromise desired schedule. The pseudo-code of the final components’ schedules is provided in Algorithm 4. First, we generate the combinations between the final preschedules of the sellers and the buyers (Lines 1–3). Then, for each seller/buyer of each combination, we calculate the power quantity for each edge in each candidate schedule for all combina- tions at a time t and fill it into a new vector (FinalQuantity) (Lines 4–17). After that, a similarity computation of the resulting vector and the initial desired schedule (vector) of each seller/buyer is done using the cosine similarity measure (Line 18). In fact, we adopted the commonly adopted cosine measure to calculate the distance between the proposed and the desired schedule vectors (instead of many others such the Euclidean Distance, the Pearson Correlation Coefficient, etc.) since it provides better results when



Algorithm 3. Final Components’ Prescheduling





there are many values in common between the two schedules to compare. Finally, the combination vector having the biggest simi- larity or what we call it here ‘minimum delay’ will be retrieved (Lines 19–27).
– Candidate components’ prescheduling:
The output of the candidate components’ prescheduling is as follows:



Algorithm 4. Compromise prescheduling






Preference-based compromise builder illustration
In our previous illustration, all the buyers and sellers are con- nected, forming one purchase graph (cf. Fig. 5), where the sellers
Candidate nR+ prescheduling: There are two possible solutions:

8< Sinit
— = [3, 11, 0, 0]

are represented in red, the buyers in blue and the exchanged
power value is annotated on the gray arrow. For example, in Fig. 5, there are 2 sellers (nR+ nR+) and 3 buyers (nR— nR— nR—),
where nR+ and nR— should exchange 14 kW, nR+ and nR— should
Solution1
nR+,nR3
: SnR+,nR— = [0, 3, 0, 0]
8 init

1	3	1	1
+	—	+
Solution2<
SnR+,nR—
= [3, 0, 0, 0]

nR2 should exchange 2 kW.
: SnR+,nR— = [0, 14, 0, 0]

As an input, each seller and buyer proposes its desired schedule.	1	1
Here, we will consider that T = 4.
8> Sinit = [3, 14, 0, 0]
1
>

4

Sinit
1
>

2
init
—
3

The aim of applying the Preference-based comprimise builder is to find the desired schedule of the resulting linked couples
(nR+, nR—),	(nR+, nR—),	(nR+, nR—)	and	(nR+, nR—):

1
Sinit
3
init
1
init
1	4	1	4	2
init

nR+,nR— , SnR+,nR— , SnR+,nR— and SnR+,nR— , respectively.
Fig. 5. Purchase graph illustration.

1  3	1  1	4  1	4  2


Those solutions were selected since the sum of the selling power
8<Sinit

— = [0, 0, 0, 1] : (nR+, nR—).EV = 1 = 0 + 0 + 0 + 1


input (3 kW at t = 1 and 14 kW at t = 2)
:SnR+,nR— = [0, 0, 1, 1] : (nR4 , nR2 ).EV = 2 = 0 + 0 + 1 + 1


4
There are two possible solutions:

Final nR— prescheduling:

init nR+,nR
= [0, 0, 1, 0]
There are two possible solutions:


: SnR+,nR— = [0, 0, 0, 2]
nR1 ,nR1	1	1

8	:SnR+,nR— = [0, 0, 1, 0] : (nR4 , nR1 ).EV = 1 = 0 + 0 + 1 + 0

Solution2<
nR+,nR— =[ , , , ]

4  1
init
nR
8<Sinit
= [1, 0, 0, 0] : (nR+, nR—).EV = 1 = 1 + 0 + 0 + 0

Those solutions were selected since the sum of the selling power


:SnR+,nR— = [2, 0, 1, 0] : (nR1 , nR1 ).EV = 3 = 2 + 0 + 1 + 0

input (1 kW at t = 3 and 2 kW at t = 4) Candidate nR— prescheduling:
There are two possible solutions:
Final nR— prescheduling: There is one possible solution:

8 Sinit

3 0 0 0
SolutionnSinit
— = [0, 0, 0, 2] : (nR+, nR—).EV = 2 = 0 + 0 + 0 + 2

Solution1<
nR+,nR— =[ ,
, , ]
nR+,nR2	4	2

: SnR+,nR— = [0, 0, 1, 0]	4

8< Sinit nR— = [1, 0, 0, 0]
SolutionnSinit	= [0, 14, 0, 0] : (nR+, nR—).EV = 14 = 0 + 14 + 0 + 0

SnR+,nR— = [2, 0, 1, 0]
Those solutions were selected since the sum of the buying power at each time t is equal to the desired power quantity given as an
– Compromise prescheduling:
The output of the compromise prescheduling is as follows:

input (3 kW at t = 1 and 1 kW at t = 3) Candidate nR— prescheduling:
8>><
init
+
1
init
— = [3, 0, 0, 0]
3




Solutionn Sinit
= [0, 0, 0, 2]
SnR+,nR— = [0, 0, 1, 0]

4  1
nR+,nR—	>

 


at each time t is equal to the desired power quantity given as an input (2 kW at t = 4)
Candidate nR— prescheduling:
There is one possible solution:
init
nR

Those solutions were selected since the sum of the buying power at each time t is equal to the desired power quantity given as an input (14 kW at t = 2)
–      Final     components’     prescheduling: In our case, the output of the final components’ prescheduling is the same output generated in the candidate components’ prescheduling. Those solutions ensure that the sum of the power exchanged between a linkedcouple is equal to the exchanged value of this couple.
Final nR+ prescheduling:
There are two possible solutions:
8< init nR	+	—
This solution is the combination of the final seller and buyer preschedules that reduces the gap with the initial desired sched- ules of the sellers and buyers. Here, the Gap = 0 (the ideal solution).

Multi-objective Scheduler

Once done with the preferences-based combination generator that aims at extracting the desired schedules of the seller-to- buyer associations based on the sellers and buyers desired sched- ules given as input, it is time to schedule the resulting associations in a way to minimize the operational, economical and ecological aspects. As defined in Eq. (3), our objective function takes into account: 1)- the operational aspect by considering the comfort of the sellers and buyers measured by the delay time between the desired schedule and the real operation, the peak load reduction of the SG and the components calculated using the variance of the power at a time t 2)- the economical aspect is considered by measuring the electricity price at a time t, and 3)- the ecological

:SnR+ ,nR— = [0, 3, 0, 0] : (nR1 , nR1 ).EV = 3 = 0 + 3 + 0 + 0
at a time t in the SG.

1
8<Sinit
1


— = [3, 0, 0, 0] : (nR+, nR—).EV = 3 = 3 + 0 + 0 + 0
In our work, we adopted Particle Swarm Optimization (PSO), to search for the near-optimal scheduling for each seller-to-buyer

:SnR+ ,nR— = [0, 14, 0, 0] : (nR1 , nR3 ).EV = 14 = 0 + 14 + 0 + 0

demonstrated ability of optimization. In essence, PSO is a compu-


Final nR+ prescheduling:
There are two possible solutions:
improve a candidate solution with regard to a given measure of quality using an objective function. It is considered as a powerful

8<Sinit
= [0, 0, 1, 0] : (nR+, nR—).EV = 1 = 0 + 0 + 1 + 0
tool to solve complex non-linear and non-convex optimization

:SnR+,nR— = [0, 0, 0, 2] : (nR4 , nR2 ).EV = 2 = 0 + 0 + 0 + 2


Algorithm 5. Particle Swarm Optimization Algorithm





Briefly, the problem is solved by having a population of candi- date solutions, here dubbed particles, and moving these particles around in the search-space according to simple mathematical for- mula over the particle’s position and velocity. Each particle’s movement is influenced by its local best known position, but is also guided toward the best-known positions in the search-space, which are updated as better positions are found by other particles. This is expected to move the swarm toward the best solutions.
The pseudo-code of the adapted PSO is provided in Algorithm 5. The goal is to find a solution a for which Dis(a) < Dis(b) for all b, which would mean that a is the global minimum. Let S be the num- ber of particles in the swarm, each having a position xi and a veloc-
ity vi . Let pi be the best known position of particle i and let g be the best known position of the entire swarm. The values blo and bup are
respectively the lower and upper boundaries. The termination cri- terion can be number of iterations performed, or a solution with adequate objective function value is found. In our method, we set the parameters as in [19] to calibrate the PSO problem, used for mathematical models of Smart Homes.

Experiments

A set of experiments have been conducted to highlight the effi- ciency of our approach as explained below.

Experimental context

A prototype has been implemented using Java to conduct the test on a PC with an Intel Core i7-3630 QM CPU, 2.40 GHz proces- sor with 8 GB RAM. Since the SG is relatively a recent concept in the power systems area, there is a lack of a current Benchmark to be based on. Hence, we carried out our experimental scenario inspired by the one provided in [13] but adapted to fit better the scope of our study. Here, we set up an SG within an area of 10 km × 10 km with: 1) the main grid located at the onshore, and
2) the SG components randomly located within this area. The power gap (G) of any SG component nR: 10 MW 6G(nR) 6316 MW. Note that, the power cost per kW is set to 11.6 cents based on the US electricity prices 3 and the conventional power generator gas emissions is set to 0.26 kgCO2/kWh.4 The prototype includes the
following functionalities: (1) the Preference-based compromise builder and the (2) Multi-objective scheduler.

3 https://www.ovoenergy.com/guides/energy-guides/average-electricity-prices- kWh.html.
4 https://www.carte-grise.org/explication-calcul-bilan-co2.htm.
Experimental metrics and results

The main criteria used to evaluate the effectiveness of our approach are: (i) the preference-based compromise builder effec- tiveness, (ii) the time needed to generate the compromises, as well as, (iii) the multi-objective scheduler impact on the electricity cost reduction, the peak loads and the gas emissions.

Preferences-based compromise builder effectiveness
The efficiency of the generated desired compromise schedule is measured by its similarity with the desired schedules of the sellers and the buyers given as an input. The similarity measure used in our module is the ‘Cosine Similarity Measure’, which results a sim- ilarity between 0 and 1 (from an absence of similarity ‘0’ to the big-
gest similarity ‘1’). Fig. 6 shows that the worst similarity ratio obtained is 0.72 and the best one is 0.95. This result reflects that our module ensures nice results providing an adequate compro-
mise between the seller and the buyer preferences.

Preferences-based compromise builder performance
In addition to testing the effectiveness of our module in reduc- ing the gap between the proposed compromise desired schedule and the desired sellers and buyers, we also evaluated its time per- formance. This test consisted of measuring the necessary time to build the compromise from the sellers and buyers associations (cf. Fig. 7), and showed a linear complexity of our algorithm.

Multi-objective scheduler impact on the SG
The cooperation and the multi-objective aspects of the SG are the key features of our scheduling. Hence, we measured the follow- ing resulting costs: the total electricity prices, the total toxic gas emissions, the components comfort, and the peak loads.


Fig. 6. Compromise similarity w.r.t the number of SG components.






Fig. 7. Time performance w.r.t the number of SG components.


In this test, two different scenarios were considered: (1) a non- cooperative scheduling, where each association is selfish in that it only considers its desired schedule, and (2) a cooperative schedul- ing based on our proposed multi-objective scheduling. To remain coherent, we will consider the scheduling of the seller-to-buyer associations of our same previous illustration. Note that, the out- put of the preference-based compromise builder will be used here to calculate the comfort of the components by calculating the gap between the resulting schedule and the compromise desired schedule.
Fig. 8 shows the electricity load resulting from the non- cooperative case. At T = 2, a peak load (Electricity load = 14 kW) appeared having several bad effects on the economical, ecological and the operational costs. From the economical perspective, this peak load leads to a total electricity cost of 163 cents. From the ecological perspective, and having at T = 2, a conventional power generator (emitting 0.26 kgCO2/kWh), the non-cooperation scheduling caused a simultaneous gas emissions of 3.64 kgCO2. The only advantage of this scheduling is that it answers exactly the desired preferences of the components, which gives a similar- ity of 1 (the highest), between the proposed and the desired schedules.


Fig. 8. Non-cooperative electricity load result.



Fig. 9. MOCSF electricity load result.
Fig. 9 shows the electricity load resulting from our multi- objective scheduler. It shows how the peak loads are shaved (High- est electricity load = 6 kW). The result is a trade-off between the economical, ecological and operational aspects. From the econom- ical perspective, the total electricity cost is reduced to 136 c. From the ecological perspective, the highest simultaneous gas emissions is reduced to 1.57 KgCO2. The only feature affected negatively is the similarity between the desired and the proposed schedule,
reduced to 0.75. Despite this reduction, the value remains a very
good result.

Conclusion

In this paper, we proposed MOCSF, a Multi-Objective Coopera- tive Scheduling Framework providing a multi-type scheduling for the power generation, storage and consumption, while taking into account the ecological, economical and operational costs in a power system. MOCSF consists of two main modules: the Preference-based Compromise Builder, providing the best balance between the desired schedulers of the sellers and the buyers given as an input, and the Multi-objective Scheduler, providing seller-to- buyer associations scheduling aiming at ensuring the economical, ecological and operational satisfactions. Experiments results showed the potential of our modules in providing efficient preference-based compromises able to reduce the gap with the ini- tial components preferences and in minimizing the three- dimensional costs. Currently, we are working on implementing a privacy-by-design [9] grid control allowing to protect the compo- nents privacy whilst preserving the advanced control and monitor- ing functionalities of the power systems. Further, it is interesting to apply strategy-proof techniques, in order to avoid cheating in the desired schedules,

References

Christopher O. Adika, Lingfeng Wang, Smart charging and appliance scheduling approaches to demand side management, Int. J. Electr. Power Energy Syst. 57 (2014) 232–240.
Hunt Allcott, Social norms and energy conservation, J. Public Econ. 95 (9) (2011) 1082–1095.
Dimitri P. Bertsekas, Nonlinear Programming, Athena Scientific Belmont, 1999.
Moritz Diehl, H. Georg Bock, Johannes P. Schlöder, Rolf Findeisen, Zoltan Nagy, Frank Allgöwer, Real-time optimization and nonlinear model predictive control of processes governed by differential-algebraic equations, J. Process Control 12 (4) (2002) 577–585.
Amin Fakhrazari, Hamid Vakilzadian, F. Fred Choobineh, Optimal energy scheduling for a smart entity, IEEE Trans. Smart Grid 5 (6) (2014) 2919–2928.
Clark W. Gellings, J.H. Chamberlin, Demand-side management, Energy Efficiency and Renewable Energy Handbook, Second Edition edited by D. Yogi Goswami, Frank Kreith, 1988, pp. 289–310 (Chapter 15).
G. Graditi, M.G. Ippolito, R. Lamedica, A. Piccolo, A. Ruvio, E. Santini, P. Siano, G. Zizzo, Innovative control logics for a rational utilization of electric loads and air-conditioning systems in a residential building, Energy Build. 102 (2015) 1– 17.
Ijaz Hussain, Sajjad Mohsin, Abdul Basit, Zahoor Ali Khan, Umar Qasim, Nadeem. Javaid, A review on demand response: pricing, optimization, and appliance scheduling, Proc. Comput. Sci. 52 (2015) 843–850.
Marc Langheinrich, Privacy by designprinciples of privacy-aware ubiquitous systems, In International conference on Ubiquitous Computing, Springer, 2001,
pp. 273–291.
Julio J. Lucia, Eduardo S. Schwartz, Electricity prices and power derivatives: evidence from the nordic power exchange, Rev. Derivat. Res. 5 (1) (2002) 5–50.
Amir-Hamed Mohsenian-Rad et al., Autonomous demand-side management based on game-theoretic energy consumption scheduling for the future smart grid, IEEE Trans. Smart Grid 1 (3) (2010) 320–331.
José Monteiro, Srinivas Devadas, Pranav Ashar, and Ashutosh Mauskar, Scheduling techniques to enable power management, in: Proceedings of the 33rd annual Design Automation Conference, ACM, 1996, pp. 349–352.
Walid Saad, Zhu Han, H. Vincent Poor, Coalitional game theory for cooperative micro-grid distribution networks, in: 2011 IEEE International Conference on Communications Workshops (ICC). IEEE, 2011, pp. 1–5.
Khouloud Salameh, Richard Chbeir, Haritza Camblong, Ionel Vechiu, Microgrid components clustering in a digital ecosystem cooperative framework, in: International Conference on Knowledge Based and Intelligent Information and Engineering Systems. Elsevier, 2017, pp. 167–176.



Ditiro Setlhaolo, Xiaohua Xia, Jiangfeng Zhang, Optimal scheduling of household appliances for demand response, Electr. Power Syst. Res. 116 (2014) 24–28.
Goran Strbac, Demand side management: benefits and challenges, Energy policy 36 (12) (2008) 4419–4426.
Perukrishnen Vytelingum, Thomas D. Voice, Sarvapali D. Ramchurn, Alex Rogers, Nicholas R. Jennings, Agent-based micro-storage management for the smart grid, in: Proceedings of the 9th International Conference on Autonomous  Agents  and  Multiagent  Systems:  Volume  1-Volume  1.
International Foundation for Autonomous Agents and Multiagent Systems, 2010, pp. 39–46.
Laurence A. Wolsey, Mixed integer programming, Wiley Encyclopedia of Computer Science and Engineering, 2008.
Jiawei Zhu, Fabrice Lauri, Abderrafiaa Koukam, Vincent Hilaire, Scheduling optimization of smart homes based on demand response, in: IFIP International Conference on Artificial Intelligence Applications and Innovations. Springer, 2015, pp. 223–236.
