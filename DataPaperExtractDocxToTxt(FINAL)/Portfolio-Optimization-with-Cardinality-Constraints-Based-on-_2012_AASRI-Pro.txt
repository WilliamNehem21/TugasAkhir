Available online at www.sciencedirect.com



AASRI Procedia 1 (2012) 311 – 317
AASRI
Procedia
www.elsevier.com/locate/procedia





2012 AASRI Conference on Computational Intelligence and Bioinformatics
Portfolio Optimization with Cardinality Constraints Based on Hybrid Differential Evolution
Xiaohua Ma ,Yuelin Gao a ,Bo Wang
Institute of Information and System Science, Beifang University of Nationalities, Yinchuan 750021




Abstract

A portfolio optimal model with cardinality constraints is researched, in which the minimum of Value-at-Risk is taken as the objective function. We give a hybrid differential evolution algorithm to solve the model and make the case study with sixteen alternative stocks from Shanghai and Shenzhen stock market. The numerical results show that the given model is reasonable and the given algorithm is effective.

© 2012 Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and/or peer review under responsibility of American Applied Science Research Institute

Keywords:Portfolio optimization, Value-at-Risk(VaR), Cardinality constraints, hybrid differential evolution


Introduction

Since 1970s, financial risk has emerged increasingly due to the economic globalization, the rapid development of the modern information technology and financial system innovation. How to control financial risks effectively becomes the focus to financial regulators and investors. Therefore, how to measure risk has been a very important research subject.
In 1952, Markowitz [1] proposed the mean-variance model in which the variance is risk measure. Markowitz [2] and Mao [3] discussed the mean semi-variance portfolio model in which the semi-variance is



aCorresponding author. Tel.: +86-0951-2066579; fax: +86-0951-2066602.
E-mail address: gaoyuelin@263.net







2212-6716 © 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
doi:10.1016/j.aasri.2012.06.048


risk measure. In 1991, Konna and Yamazaki [4] adopted mean semi-absolute deviation as the risk measure and proposed a linear programming model of portfolio, which is called as the mean - absolute deviation model. This model can be solved effectively by linear programming method. But the study only measured the deviation level of future returns and expected returns, and didn’t make comprehensive accurate quantitative calculation to risk of loss. Consequently, the Group of Thirty proposed a new risk measure tool named
VaR [5] in 1993. VaR reflects a potential biggest loss of an asset or portfolio in a certain period and at the confidence level. But VaR does not satisfy subadditivity, so it is not a coherent risk measure. Uryasev and
Rockafellar [6] proposed Conditional Value-at-Risk (CVaR) portfolio model and obtained approximate conclusion with VaR.
In recent years, there has been much research on portfolio model based on VaR and CVaR which consider the actual market friction, such as transaction costs. But, research on portfolio with cardinality constraints is still not enough, for it is a mixed integer programming problem and difficult to solve by traditional methods.
Paper [7] proposed heuristic algorithm for the portfolio optimization problem. Then, Paper [8] used local hybrid search algorithm to solve portfolio optimization problems with cardinality constraints.Yi Wang and
Zhiping Chen [9] studied portfolio problem with cardinality constraints under multivariate distribution.
We apply differential evolution algorithm to solve the problem in order to obtain reasonable results which ensured the feasibility of our solution. The numerical results show that the model is reasonable and the given hybrid algorithm is effective. That is to say, this paper provides an effective method for the portfolio optimization model with cardinality constraints.

M-VaR model with cardinality constraints

Value-at-Risk Description


Suppose
f (x, y)
is a loss function of decision vector, x  is the vector of portfolio weights,

x [x1, x2,⋯, xn ] , where n is the number of available assets, xi ( i = 1, 2,⋯, n ) is the portfolio weight of the
i th asset, and 0  xi  1,  xi  1. y is the vector of market factor, such as market price, ratio of return. For
i 1

any x , the loss
f (x, y) caused by Vector y is a random variable and follows a distribution in R .Suppose

probability density function of y is
 (x, p)  f ( x, y)p p( y)dy
p( y) , then the probability of
f (x, y) doesn’t exceed p is:

(1)

As a function of p , when x is fixed,  (x, p)
is a cumulative distribution function of x .It is right

continuous and non-decreasing with respect to p . Then VaR can be denoted by VaR ,  is the confidence level. In our setting they are given by:
VaR  min{p  R : (x, p)  }


Portfolio optimization model


Let us consider the following variables:
n : the number of available assets
ri : the return ratio of the i th asset, i = 1, 2,⋯, n
l : the minimum investment ratio allowed in the i th asset( i = 1, 2,⋯, n )
u : the maximum investment ratio allowed in the i th asset( i = 1, 2,⋯, n )
k1 : the minimum stock amount hold by the investor
k2 : the maximum stock amount hold by the investor
Z = ¹('1	if the i-th asset is chosen
i	''t0	otherwise
Then, the return of portfolio is r  xT y , the loss of portfolio is f (x, y)  xT y .

Suppose E( y)  ,Cov( y)  V , we can infer return and variance of portfolio:
E(r )  (x)  xT , 2 (r )   2 (x)  xTVx
In this paper, we assume risky asset return is normally distributed, suppose market factor



y ~ N(,V ) ,

so loss function
f (x, y)  xT  ~ N(xT , xTVx) .

According to definition of VaR , we can obtain
p( f  p)  
 p( f  ((x))  p  ((x)))  
 
 (x)	 (x)

Set Z
  f  ((x)) , Z
is lower quantile of standard normal distribution under  confidence level, then

	 (x)	
Z   p  (x) , p  Z  (x)  (x) , so
	 (x)	


VaR  Z (x)  (x)
Set Y  t  (x) ,
 (x)
(2)



where  (x)
is the standard deviation of (x) ,  (x) 
,and
(x)
is the expected return of

portfolio, (.) is a probability density function of standard normal distribution.
To sum up, our model with cardinality constraints is given by:

min
s.t.
VaR  Z (x)  (x)
E(r )  xT   s
(3)
(4)

Zil ≤ xi ≤ Ziu 
(5)



n
k1 ≤ Σ Zi ≤ k2
i=1
(6)

n
Σ xi =1
i=1
xi ≥ 0

(7)

(8)

Here, (3) is return constraint, (5) and (6) are cardinality constraints, (7), (8) are weight constraint and non- short selling, respectively.

Hybrid Algorithm

Differential evolution algorithm

Differential evolution (DE) is a simple but powerful evolutionary algorithm for global optimization
introduced by Price and Storn [1112] . The DE algorithm has gradually become more popular and has been used in many practical cases. This is mainly because it has good convergence properties and is principally easy to understand. The individual of DE is a real vector, D is dimension of individual, NP is Population scale,The adaptive differential evolution algorithm of solving integer programming works as follow:
Mutation
For each target vector, a mutant vector ut1 is generated by

t 1	t
i	r1
(F _ max (F _ max F _ min)*t / T )*(xt
xt )
(9)

(with r1  r2  r3  i ). Note that indexes have to be different from each other and from the running index, so
NP must be at least four. F  0 is a real parameter, called mutation constant, and that F _ max is upper

bound of F , F _ min
Crossover
is lower bound of F . t is current iteration, and T is the maximum iteration.

The target vector is mixed with the mutated vector, using the following scheme to generate the trial vector

ut 1
vt 1   i
x
if (rand(0,1)  CR)៪(j=rand(1, D)) otherwise

(10)

CR is the crossover constant, which has to be determined by the user.
Selection
A greedy selection scheme is used

vt 1
if  (vt1)  (xt )

vt 1   i	i	i
(11)

i
xt
otherwise

Here (x) is the adaptive value of function.

Hybrid algorithm description

First of all, for restraint E(r )  xT   s ,we set g(x)  xT   s and use penalty function method, then it



will be transformed into the unconstrained optimization that is expressed as
F(x)  f (x)  signa* H(x) ,

where
f (x) is the object function of formula (3),and
H(x)  (min{0, g (x)})2 , signa
is a penalty factor from

105 to 108 in general ,which depends on the practical problem. Other constraints’ processing is given in the following algorithm. Our problem is solved by using differential evolution algorithm. Then we give a hybrid which is produced by combining penalty function method and differential evolution. Parameters are set as

follows: Population scale
N  80,
Maximum iteration
gen  500 , Scaling factor is
F _ min  0.4 ,

F _ max  0.8, respectively, mutation rate steps are:
CR  0.6 , penalty factor
sigma  106 . The algorithm concrete

Step1. Define particle number and dimension of differential evolution algorithm.
Step2. Set value of the mutation probability and upper bound and lower bound of scaling factor. Step3. Generate a matrix A , in every row of which the sum of 1 is between k1 and k2 .
Step4. Generate a matrix B whose elements are between l and u .
Step5. Matrix A dot product matrix B , in this way, we obtain matrix C .This is satisfied constraints (5) and (6) in this progress.
Step6. The rows of matrix C are normalized to get matrix D , if nonzero elements of row of matrix D
are between l and u , we will save this row in E ; if not, return step 3, until row of matrix E reach to N .
Step7. According to (10) and (11), we execute crossover operation and produce a new trial individual, if this trial individual is between l and u , it will be set l (u l)*rand() .
Step8. If the amount of the nonzero elements of trial is not between k1 and k2 , we can produce a new trail according to Step 3 and Step 4. If elements of trial are between l and u , break; else, return step 7 and go on.
Step9. For the current iteration ,according to formula (11), we proceed selection and renew the best
value of individual.
Step10. By means of selection, we can find the best individual and corresponding value.
Step11. Update individual continually until meet the terminal condition of the program (maximum iterations), output the results.

Empirical Analysis

Assets selection

In order to disperse risk, we choose different industry and circulation stock market. 16 stocks from Shanghai and Shenzhen stock market are illustrated. They are respectively: CCGX(000661),XDL(000997), FYDA(000026),SSSH(600688),DFDQ(600875),SQGF600623),MSYH(600016),CCJK(600215),SFZA(00000 1),SGGF(600303),LCRJ(600756),JGHX(600307),LPGK(000998),ZSDC(000024),HXYH(600015),ZHGJ(60
0500).

Data pretreatment and Algorithm parameter Settings

A set of week data from 5,sep,2008 to 5,Jun,2009 of the 16 stocks are selected as our experimental data

and the returns of stocks are calculated using formula ri,t
 ln( pi,t 1 / pi,t ) , where
pi,t 1 , pi,t
are week

closed price of the ith
stock at time t 1lim and t , i  1, 2,…,16 .
x

Analysis of experimental results


Set
k1  4, k2  7 , l  0.1, u  0.3 . Firstly, we set expected return threshold
s  0.018 ,in table 1,


under different confidence level, we have different portfolio weights and corresponding risks. From loss value, high confidence level states that investors are more dislike risk. This also reflects conservative investors will select bigger confidence level. The portfolio weights of the stocks are satisfied the constraints condition of our model. Figure 1 shows the results of algorithm operation for 500 generation under differential level, and in 200 generation algorithm convergence stabilize which shows that the algorithm is feasible.
Table 1. Results under different confidential level


When alpha =0.95, Table 2 gives the risk value and portfolio weight as return threshold increased from
0.018 to 0.026. With the increasing of return threshold, the value of risk is increasing, this also meet high-risk and high-income principle. In this progress, if investment tends to focus on several stocks, it goes against dispersive risk, so the corresponding risk loss will increase in value.
Table 2 Results under different return threshold

Under different confidence level, Table 3 gives the corresponding value of VaR when return threshold increased from 0.018 to 0.026. Then, we can map out the return and risk efficient frontier, see Figure 2. From Figure 2, the smaller confidence level, the closer the efficient frontier of portfolio to graphic top left. This is because higher confidence level corresponds to higher degree of risk aversion. In the same expected yield, the lower confidence level of corresponding risk is smaller, this also accord with theoretical results.
Table 3 Results under different confidential level and return threshold




According to above analysis, we can conclude that model and operation results are reasonable, hybrid difference algorithm proposed to solve the mixed integer programming model is effective.


Acknowledgements

The work is supported by the Foundation of National Natural Science China under Grant No. 60962006.


References
Markowitz H M. Portfolio selection. Journal of Finance, 1952, 7: 77-91.
Markowitz HM. Portfolio Selection: Efficient Diversification of Investment. New York: John Wiley&Sons, 1959.
Mao J C T. Models of capital budgeting, E-Vversus E-S. Journal of Financial and Quantitative Analysis, 1970, 5: 657-675.
Konno H, Yamazaki H. Mean-absolute deviation portfolio optimization model and its application to Tokyo stock market. Man-agement Science, 1991, 37: 519-531.
Philippe J. Value at Risk:The New Benchmark for Controlling Market Risk. Chicago:Irwn Prefessional,1996.
Rockafellar R T. Uryasev S. Optimization of Conditional Value-at-Risk. The Journal of Risk, 2000,2(3)21- 24.
Chang T J, Meade N, Beasley J E, Sharaiha Y M. Heuristics for cardinality constrained portfolio optimization.Computer and Operations Research.2000(27):1271-1302.
Hans Kellerer, Dietmar Maringer. Optimization of Cardinality Constrained Portfolios with an Hybrid Local Search Algorithm.MIC’2001-4-th Metaheuristics International Conference,2001,July,585-589.
Yi Wang, Zhiping Chen, Kecun Zhang.A chance-constrained portfolio selection problem under t- distribution.Asia-Pacific Journal of Operational Research,2007,24(4):535-556.
Storn R, PriceK. Differential evolution-a simple and efficient adaptive scheme for global optimization over continuous spaces.Technical Report, International Computer Seience Institute,1995,(8):22-25.
Storn R, PriceK. Differential evolution-a simple and efficient adaptive scheme for global optimization over continuous spaces. Journal of Global Optimization,1997,11(4):344-359.

.
