This academic paper discusses an enhancement to fuzzy logic programming, which blends fuzzy logic with logic programming, by proposing an improved fuzzy query answering method within the framework of multi-adjoint logic programming. This improved method integrates tabulation with thresholding techniques to prevent the unnecessary re-evaluation of goals and to eliminate pointless computations. 

The process works by first checking if a computation step using a specific program rule could lead to significant, new solutions. If not, that computation step can be skipped using thresholds and filters determined by the rule's truth degree and a dynamic estimation of the maximum truth degree possible for that rule's body. 

The paper addresses two important issues for the implementation of multi-adjoint logic programs: termination and efficiency. The proposed method modifies the original tabulation procedure to handle these challenges, including employing thresholding to manage the size and number of computation trees, thus improving the overall efficiency. 

The paper also introduces heuristics to minimize the complexity of the resulting computation forests and demonstrates the application of thresholding as an improvement to the basic tabulation proof procedure. Multiple opportunities for thresholding are presented to further avoid unnecessary expansion of computation trees.

In summary, the paper shows that by using a fuzzy variant of tabulation specifically designed for multi-adjoint logic programs, it is possible to prevent redundant goal evaluations and avoid other kinds of unnecessary computations, resulting in a more efficient fuzzy logic programming approach.