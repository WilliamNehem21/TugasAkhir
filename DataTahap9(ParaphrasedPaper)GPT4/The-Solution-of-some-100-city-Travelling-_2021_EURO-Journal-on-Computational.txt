The late Ailsa H. Land, who passed away on May 16, 2021, was incorrectly stated to have received the Euro Gold Medal posthumously; according to the award's guidelines, she was bestowed this honor prior to her death. A typewritten manuscript with her handwritten notes was typeset again for publication. All editorial notes are added as footnotes, with the last two references included by the Editor-in-Chief to maintain consistency with the original citation style. Publication in the European Journal of Computational Optimization (EJCO) is thanks to permission from Professor Frank Land, her husband. The Editor-in-Chief extends gratitude to Professors Gilbert Laporte and Panagiotis Miliotis for introducing this manuscript and providing a complete version.

The algorithm, when unable to find violations in two-matching constraints, postpones the use of integer forms to Phase III, ensuring that all relevant variables are included in the linear program (LP). Step 14 checks for Phase III—if not, the procedure does not advance to Step 18.

Upon re-optimization, some constraints are removed unless they are currently effective; that is, they are satisfied exactly and part of the current basis. Purging them is efficient because it relies on pointers tied to the constraints' associated records.

Determinants of basis changes are monitored—previously, excessive values (over 1,000,000) would halt the computation, but in reported instances the determinant never exceeded 36,192.

If no new constraints arise and the solution remains non-integer, the algorithm proceeds to Phase III where all LP variables are present, and “Mixed Integer Formulation” (MIF) constraints are considered. Otherwise, the global routine searches for dual condition violations among the inactive variables.

To efficiently recognize reuse of variables, most special variables and those non-basic at their upper bounds are arranged into ordered trees, with any outliers kept on a separate list that's checked only as necessary. In reported problems, the number of non-tree-fitting variables did not surpass 50.

In earlier versions, the algorithm sometimes failed due to the computer's word size limitations after applying several MIF constraints, indicative of challenges in using exact arithmetic cutting plane algorithms for general integer linear programming (ILP) problems. However, a revised selection criterion for MIF constraints has significantly improved performance in solving the traveling salesman problem (TSP), with pending tests for other ILP problem types. Distances between point pairs are rounded to the nearest integer, creating an integer cost matrix with values ranging from 0 to 141, though only distances for variables in the active set are stored, with the rest recalculated as needed.