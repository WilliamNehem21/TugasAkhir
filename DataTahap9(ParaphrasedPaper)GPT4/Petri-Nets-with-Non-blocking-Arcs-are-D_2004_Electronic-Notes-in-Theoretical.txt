In this academic paper, the authors investigate the decidability of five computational problems in a specific class of Extended Petri Nets, inspired by the challenge of parametric verification in systems with multiple communicating processes. These processes model abstractions representative of multi-threaded Java programs, utilizing partially non-blocking rendezvous for communicationâ€”a communication mechanism where a sending process doesn't have to wait indefinitely for a receiving process to be ready.

The rationale behind parametric verification lies in the necessity to confirm the correctness of a system family as a whole, rather than for a fixed number of instances. An example is verifying mutual exclusion protocols that are intended to work irrespective of the number of involved processes. Instead of verifying each possible instance separately, parametric verification seeks a universal proof applicable to any quantity of process instances. Despite the intrinsic undecidability of parametric verification in a general sense, various abstractions have proven valuable for automated methods. For instance, the "notifyall" work in Java can be abstracted as a broadcast communication.

While previous research has delved into theoretical aspects of transfer nets capable of modeling broadcast communications, less attention has been paid to extensions of Petri Nets that capture the partially non-blocking rendezvous. The paper focuses on assessing the decidability of five specific problems when engaging with Petri Nets that incorporate non-blocking arcs. Although these problems are decidable in standard Petri Nets, the authors find that within the extended framework, only two remain decidable.

The structure of the academic paper is such that after an initial introduction, it delineates fundamental terms and concepts. The following section introduces the extended Petri Nets and discusses the five assessed problems. Subsequent sections demonstrate the decidability of two problems and the undecidability of the remaining three.

Regarding the model's visual representation, rectangles symbolize transitions, while plain edges denote the input and output occurrences between places and transitions. Exceptions are when a single occurrence is present in a transition's multi-set, in which case edges are unlabeled. Dashed edges between a place and a transition signify the non-blocking components of a transition, and tokens within places are standard representations of markings.

The paper suggests simplifications in certain proofs but maintains a uniform approach by using full-version widgets. It explores various Petri Net extensions previously proposed for parametric systems modeling and aspires to formally compare their expressive capabilities by evaluating the languages each extension can define.

Lastly, the paper addresses related work, including the study of similar problems in other computational models and references material for practical analysis of models generally encompassing the class of Extended Petri Nets addressed in the research.