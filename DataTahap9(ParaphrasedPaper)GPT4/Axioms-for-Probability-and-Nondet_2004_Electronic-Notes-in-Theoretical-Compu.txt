This paper investigates a calculus designed for finite-state processes that incorporate both nondeterministic and probabilistic choices. It introduces a domain model and defines an operational semantics to represent the calculus. The denotational model applies the probabilistic powerdomain developed by Jones and Plotkin and integrates it with a geometrically convex variant of the Plotkin powerdomain to capture nondeterministic choices. Concurrently, the operational model outlines transition rules, allowing a process to evolve into probability distributions across possible states.

The paper presents a significant result, demonstrating full abstraction by establishing that two processes are equivalent in denotation when they exhibit probabilistic bisimilarity. Additionally, it validates that established axioms for handling probability and nondeterminism accurately reflect the denotational model, both in terms of soundness and completeness.

The study provides semantic foundations for a probabilistic process algebra, employing the probabilistic powerdomain to represent probabilistic choices, and a geometrically convex version of the Plotkin powerdomain, attributed to Mislove and Tix, for modeling nondeterministic choices. The work elaborates on the operational semantics for the process algebra and confirms that the domain model is fully abstract when compared against probabilistic bisimilarity.

The paper's central claim introduces a series of principles governing probabilistic and nondeterministic choices, proving these principles are complete and sound in regards to the domain model. The completeness aspect pertains specifically to finite-state processes, thus the process algebra includes operations such as prefixing, probabilistic choice, nondeterministic choice, and recursion. For the purposes of proving completeness, the domain model proves more practical than the operational model.

An example illustrating the process algebra describes a scenario where a summand performs a 'b' action leading to process 'p'. It implies that one probabilistic transition for 'p' could involve performing 'a' with a 50% chance or 'b' with a 50% chance, resulting in 'p' in both outcomes. This explains the right branch of process 'q'. For the left branch of 'q', the semantics suggests 'p' can perform 'a' with 100% probability before transitioning back to 'p'.

Finally, the paper equates the domain-theoretic semantics for probabilistic agents with a form of probabilistic bisimulation. It references previous definitions of bisimulation that accommodate both probabilistic and nondeterministic choices and introduces a modestly altered definition to incorporate divergence within the operational semantics.