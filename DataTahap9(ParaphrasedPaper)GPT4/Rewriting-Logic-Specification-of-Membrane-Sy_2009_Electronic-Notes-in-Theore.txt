Membrane computing is an emerging field in natural computing that derives computational models and ideas from the structures and functions of living cells. This area has evolved through biological motivations to include more complex biological realities, as well as mathematical and computer science motivations to develop more powerful or streamlined models.

A close relative to membrane computing is the family of multiset processing languages, among which Gamma is notable. Membrane systems, an aspect of membrane computing, refine Gamma's rule structure to find a balance between biological authenticity and mathematical neatness. In another related model, the Chemical Abstract Machine (CHAM), membranes are conceptualized differently from cell biology, representing the contents of membranes rather than the membranes themselves. CHAM's aims and descriptions differ from membrane systems as it aligns more with process algebras.

Other related formalisms include the mobile ambient calculus and brane calculus, with established formal connections between mobile ambients and mobile membranes.

Membrane computing focuses on distributed and parallel computing models that process multisets of symbol objects within localized compartments defined by membranes. Initially, membrane computing wasn't aimed at providing biological models, such as cell models. However, theoretical advancements in the field now make it well-positioned to offer such models, with significant progress reported in utilizing these models for biology.

In terms of achieving universal computation with membrane systems, there are findings related to the use of promoters and inhibitors within the rules. With a certain restriction on the number of rules containing promoters or inhibitors, it is possible to reduce the necessary number of membranes to achieve universalityâ€”to one membrane with promoters and three with inhibitors.

Rule presentations in membrane systems are identified by a label that leads to a set of rules within a membrane. The paper discusses working with register membranes, which doesn't affect the semantics, as membranes can be associated with register membranes based on defined propositions.

The evolution of a membrane is described by how a single rewriting step occurs depending on the reducibility of its child membranes. If the set of child membranes can be reduced, it is transformed, the output is collected, and any inter-membrane messages are processed accordingly. The end state is an irreducible configuration, with message handling being localized within a membrane or removed if it reaches the outermost membrane.

This summary simplifies complex concepts and leaves out some of the detailed mechanisms and specific propositions referenced in the original academic paper.