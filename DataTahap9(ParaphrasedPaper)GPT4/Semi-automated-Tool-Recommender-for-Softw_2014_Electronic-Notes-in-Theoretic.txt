In this scholarly article, the authors present a framework for recommending software tools within a multi-criteria decision-making (MCDM) context for application lifecycle management (ALM) domains. Their domain-parametric recommender system inputs a specific domain, a process definition, and a set of evaluation criteria to provide a ranked list of appropriate tools. The prototype has been tested in the domain of software testing, showing recommendations similar to those made by human experts, offering potential time and cost savings.

Companies with formalized software development processes can benefit from this approach, as it simplifies sorting through many tools using a narrowed set of criteria. This filtering can be easily repeated if processes change, with the additional advantage of the tool and task taxonomies growing incrementally.

Key contributions include proposing a semi-automated tool recommendation framework considering project context and process, developing a testing tool catalog and corresponding taxonomies, and framing tool recommendation as an MCDM problem which permits control over the recommendation process through defined criteria preferences.

The paper outlines their MCDM approach and testing domain taxonomies, followed by a validation study with three Chilean software quality assurance experts. The case study involved recommending tools for a real, documented project. Results indicated strong agreement on top tool choices, with differences in subsequent recommendations attributed to the experts' desire to offer comprehensive guidance.

The paper also discusses the importance of defining knowledge domains and ontologies for standardization and tool integration, referencing several literature examples in software engineering, testing, and other areas.

Validating their approach, the authors created testing domain tool and task taxonomies and compiled a catalog from which the prototype generated expert-comparable tool recommendations efficiently. They anticipate this framework improving software quality and freeing testing teams to focus more on actual testing, potentially making them aware of tool supports for activities they had not considered before.

Future work entails expanding the recommendation system to other ALM domains, exploring other MCDM techniques like fuzzy logic to refine recommendations, and enhancing the selection criteria evaluation method. Additionally, the tool catalog will be expanded and made accessible online.