The paper discusses the design and verification of reactive systems, emphasizing the use of the synchrony hypothesis, which posits that system reaction times are instant. Several languages and approaches are utilized for specifying reactive systems, such as graphical, dataflow-based, and imperative languages, including statecharts, RSML, SyncCharts, Argos, SIGNAL, LUSTRE, ESTEREL, and Reactive C.

The concept of distributed reactive systems is introduced, referring to networks of reactive nodes that autonomously execute specific functions while sharing information. Distribution is integrated at the specification level of the design process.

Synchronous Estelle is an extension of the ISO standard formal description technique Estelle, which details distributed systems using modules and message-exchanging channels. Modules are represented by finite state machines with state transitions triggered by events. While Synchronous Estelle provides familiar syntax for users of standard Estelle and supports both textual and graphical specifications, it distinguishes itself by incorporating the synchrony hypothesis.

In a Synchronous Estelle specification, system execution comprises computational steps divided into micro-steps. External signals and messages are processed at the beginning and end of each step, allowing synchronous modules to function in parallel despite asynchronous global behavior. Steps are procedurally executed until no transitions are enabled, and the step concludes by sending signals and messages to their intended destinations.

The development process entails transforming specifications into a C program that maintains original structural and hierarchical information while implementing the semantics of the system. Concurrently, tools are being developed to verify these specifications using the model checker SPIN, with efforts to translate Synchronous Estelle into PROMELA for verification purposes.

The paper illustrates how Synchronous Estelle and associated tools can be applied to a practical example, such as a steam boiler control system. Here, the language is used to specify the physical components of the boiler and the controller, with different synchronous modules representing each aspect of the system. The interconnections, behavior, and error management of these modules are elaborated upon, portraying the complexity and interaction in the reactive system.

The control module, regarded as the core of the steam boiler system, contains logic to maintain safety and manages the system's reactive aspect. It encompasses multiple parallel submodules, resulting in a specification of considerable intricacy. For this case study, a simple protocol was adopted to demonstrate the applicability of Synchronous Estelle to distributed reactive systems without delving into the specifics of a robust, fault-tolerant system, which is left for future refinement and research.
