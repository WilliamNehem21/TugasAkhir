Generalized semi-Markov processes have been widely used in stochastic modeling but lack features for concurrently modeling systems and for compositional specification, making large system models complex. Formalisms have been developed for performance and concurrency analysis, with stochastic Petri nets being one such example. They are expressive and account for concurrency by assigning random delays to transitions, but are rather low-level.

Stochastic process algebras extend traditional process algebras to include performance modelings, such as random delays for actions, and can handle more complex distribution models beyond continuous-time Markov chains (CTMCs) by using generalized semi-Markov processes and stochastic automata.

The paper introduces generalized stochastic graph transformation systems for modeling architectural evolution with non-exponential time distributions. System states are represented by graphs, with state transitions by graph transformations timed according to continuous probability distributions. Execution priority is given to the transformation with the shortest delay.

This model excels in representing concurrency, architectural, and stochastic elements through timed events, providing a high-level approach that incorporates stochastic analysis. However, analysis complexity increases with model generality, and stochastic model checkers like PRISM have limitations when dealing with non-Markovian processes.

The paper is outlined to discuss the rationale behind using general distributions, the concept of generalized semi-Markov processes, the new modeling system, and how Monte Carlo simulation can be applied, followed by experimental results and conclusions.

Generalized semi-Markov processes offer a semantic framework for non-Markovian systems, building from the CTMCs but accommodating general distributions. The operational semantics are outlined, referencing a stochastic automaton as the analytical tool.

New modeling considers categorical approaches to graphs and typed graph transformation, a crucial method in visual language modeling, with a focus on general applicability. The simulation algorithm and visual modeling interface are also discussed, estimating system-related quantities by simulating the system either for long-term or transient behaviors and analyzing the results statistically.

Stochastic graph transformation systems with general distributions enable the study of broader system classes, but analysis is more challenging, and traditional model checking techniques are inadequate, necessitating Monte Carlo simulations.

Future work aims to develop tools for these systems, explore database management systems for implementation, and apply existing simulation techniques to stochastic graph rewriting, as well as to develop stochastic property specifications and investigate model checking approaches for mixed stochastic and deterministic system behaviors.