This paper introduces a method for ensuring software components meet performance specifications by refining non-functional properties, specifically performance requirements, through a new refinement calculus. The calculus is designed for use with the Palladio Component Model (PCM), which is a meta-model allowing for performance and reliability predictions of component-based software architecture.

Key contributions of the paper are a model for parameterized performance specifications of components and the associated refinement calculus. The PCM serves as the language for defining these performance properties due to its established use in industrial case studies and its comprehensive tool support.

The paper is organized as follows:

1. Introduction to the PCM
2. Presentation of the scenario for software performance certification along with the refinement calculus
3. Discussion of the assumptions and limitations
4. Review of related work
5. Conclusion

The refinement calculus allows for checking the conformance of components by ensuring that they adhere to specified performance criteria, such as CPU, memory, and disk resource demands, but does not currently take into account external calls or variables. The idea is to compare two components by matching the actions within their resource demanding service effect specifications (RDSEFFs) to determine if performance refinement has occurred.

While aspects like external call protocols, branchaction, loopaction, and forkaction are covered, elements such as setvariableaction, acquireaction, and releaseaction are intentionally left out for future consideration, with the current focus on active rather than passive resources.

The paper also touches on other component models for performance analysis and points out that formal approaches are few, noting that tools like PRISM offer probabilistic model checking but lack parametric modeling abilities.

The proposed refinement calculus aims to protect intellectual property by providing an abstract conformance check that can be used for performance certification without revealing sensitive implementation details. It uses PCMâ€™s parametric modeling features to remain independent of the component's execution environment, a feature which is essential for the future goal of including independence from usage profiles.

To summarize, this paper presents a performance refinement calculus that can be applied to abstract performance descriptions of software components within the Palladio Component Model, aiming to certify software performance while preserving intellectual property. Future work aims to address the challenges of modeling user behavior and managing passive resources.