This paper discusses the handling of long-running, non-ACID transactions, which the authors call "business transactions," using the concept of compensation to manage errors. Unlike traditional ACID transactions, where the system has full control over uncommitted changes, compensation for business transactions is part of the business logic and must be explicitly defined.

The paper describes how choreographing web services is addressed by three recent standards: BPEL (Business Process Execution Language for Web Services), WS-Coordination (WS-C), and WS-Transaction (WS-T). BPEL specifies complex business processes orchestrating web services, while WS-C and WS-T provide additional protocols and coordination mechanisms.

The authors reference the ability to dynamically define event scopes within processes, introducing a flexible event-driven aspect to transaction handling. They present an e-commerce scenario to illustrate the use of event calculus in describing long-running transactions and manage compensations when internal transactions fail.

The paper emphasizes the integration of more complex coordination scenarios, as well as the asynchronous nature of event signaling in a distributed web services environment, and the potential to handle security, privacy, and dynamic event scopes.

Lastly, the authors note the potential benefit of introducing time aspects into long-running transactions to improve their utility in business contexts, suggesting this is an area in need of further research both in theoretical models and practical implementations.