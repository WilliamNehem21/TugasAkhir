The paper discusses the challenge of scaling relational numerical abstract domains, which are used in abstract interpretation-based tools for analyzing large programs. To keep the cost of such analyses linear, these tools typically divide the program variables into smaller, independent sets, sometimes sharing some non-relational information among them. The paper introduces a method that maintains complex relationships between these variable subsets while preserving linear complexity for scalability.

This approach has previously been employed in tools like Astr√©e and C Global Surveyor, which analyze large avionic and aerospace C programs. They divide the variables into groups known as packs and apply the octagon domain operators to each pack independently. Until now, only non-relational information (e.g., intervals) has been shared across these packs.

The authors suggest organizing the packs into a directed tree structure, arbitrarily choosing a root and directing the tree from this root to its leaves. Assuming pack P1 is the root, an arc from pack Pi to Pj would imply that i < j. The function father(i) is used to identify the parent pack of Pi in this hierarchy (undefined for P1, the root). By managing the relationships among these packs more precisely, the authors aim to enhance the precision of the analyses without sacrificing performance.