Our work presents a machine-verified proof of the axiomatization of strong late bisimilarity for the pi-calculus, which was achieved using the Isabelle interactive theorem prover and its nominal data type package. This endeavor extends our ongoing efforts to formally represent the pi-calculus within Isabelle. Notably, this is the first time such a completeness proof has been verified in a formal setting; previously, manual proofs were essentially outlines, whereas our verified proof mirrors the original's structure closely. Our contributions are multifold: we clarify the requirements for a full formal proof of this nature, we enable easier verification of similar proofs in the future, and we validate the effectiveness of representing these proofs using the nominal data type package within Isabelle.

A key element of our completeness proof revolves around head normal forms (HNFs). In Isabelle, we employ a function to assess if a term is in HNF, which is defined as a sum of prefixed processes. The proof progresses by rule induction on the construction of a term, with case analyses conducted during the inductive step to determine if a term can undergo the desired transition.

Throughout the proof development, we concurrently built up the Isabelle infrastructure, making it challenging to quantify the required time investment. One illustrative task, related to integrating the parallel operator, took approximately one day, with the majority of that time focused on establishing soundness. Our experience indicates that Isabelle, complemented by the nominal datatype package and our pi-calculus implementation, is well-suited for this kind of work, especially in handling bound names. Although this paper does not reveal the full depth of how these tools simplify the process, as most benefits lie in intricate details, we maintain that this system is efficacious. We acknowledge that subjective assessment plays a role, directing readers to our prior work for an evaluative comparison with alternative methods. However, this current achievement further substantiates our belief, as similar completeness proofs have been in existence for over two decades without being formalized within a theorem prover until now.