In this academic paper, the authors present a new method for connecting domain experts to the complex world of formal methods by using visualizations of formal models' behaviors. They define visualizations within a game-theory framework, viewing them as transition systems that sync with formal models. This approach allows domain experts to comprehend and interact with the formal model, forming a bridge between expert knowledge and technical formal methods.

The authors discuss Mimic/CPN, a tool designed to help visualize colored Petri net models, highlighting its strengths and limitations—specifically, the inconvenience of changing models to add visualizations that can clutter the model and the challenge in representing dynamic values or handling asynchronous input.

Play-Engine is then introduced as a tool for building program prototypes through scenario inputs on a GUI. However, it constructs models implicitly and requires computationally expensive model-checking to operate, leading to a less interactive experience with the model.

To interact more effectively with the model and explore it in greater depth, the authors discuss the necessity of introducing fairness into the execution of the model and how fast, uncontrollable transitions can be challenging for a user to follow or influence.

The paper also tackles how visualizations can be used to validate formal models and communicate the results of formal verification – particularly, to prove the absence of winning strategies in games. Here, domain experts take on the model roles using visualizations, experimenting with potential winning strategies. At the same time, a computer tool manages uncontrollable actions based on pre-calculated counterexamples, aiming to demonstrate the impossibility of achieving a winning state due to errors in the specification or the model itself.

The paper provides a theoretical framework for visualizations as synchronized game transition systems with formal models. Two concrete visualization examples are given, illustrating the benefits in an industrial context. The approach facilitates the creation of counterexamples that help domain experts without formalism knowledge to comprehend game strategies and validate models.