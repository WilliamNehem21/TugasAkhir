Coalgebra has emerged as a unifying and abstract framework for transition systems, capturing diverse types of systems such as labelled, probabilistic, and timed systems through coalgebras for specific functors on the category of sets. Other categories, like presheaf categories and the category of nominal sets, are being used to model process algebras with name binding. Coalgebra provides a general perspective on coinduction and bisimulation.

The earliest attempts at coalgebraic logic, such as the logic introduced by Moss, were quite expressive for various functors on sets but complex and difficult for practical use due to their syntax, lacking simple modalities found in Hennessy-Milner logic and similar systems. Subsequent logic formulations were easier to use but their expressiveness hinged on conditions related to the behaviour functor.

This paper's approach draws inspiration from Kurz and Bonsangue's use of Stone dualities for creating logics for coalgebras across different categories and studies by Pavlovic, Mislove, and Worrell, which explored the relationship between data and tests for an abstract testing theory. In these works, contravariant adjunctions, which are connections between processes and formulas, are foundational. Earlier works assumed these adjunctions formed categorical dualities, making it easier to find concrete logic representations. However, this paper relaxes the duality condition, potentially simplifying the discovery of concrete logic representations for expressive logics and accommodating various non-expressive logics uniformly, albeit at the cost of needing certain conditions for expressive logics to exist.

The problem with polyadic modalities, however, is their complexity, which makes their logic cumbersome. The paper suggests choosing a subset of the logic and using theorem 4.2 to still achieve expressiveness. As an illustration, it looks at a logic defined by certain transition conditions. Notably, some elements in this logic are not finitely generated.