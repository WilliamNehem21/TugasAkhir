This paper discusses the challenge of ensuring behavioral model consistency within UML and introduces methods for defining and analyzing this consistency. Behavioral models are represented in UML and then transformed into a semantic domain using meta-model rules. Within this domain, consistency constraints are specified and verified using its language and tools. The paper uses the issue of protocol statechart inheritance to illustrate the approach.

The authors divide the process into four steps. It begins with an informal identification of the consistency problem, followed by the selection of a suitable semantic domain and the definition of a model-to-domain mapping. Next, the semantic domain's language and tools are employed to formulate and verify behavioral constraints.

An example provided is the UML statechart of the 'TraditionalPerson' class, showcasing how behavioral semantics are derived from UML models using rules. The paper notes that they are not seeking to provide a full denotational semantics for UML but rather a flexible, local mapping for specific language features.

The flexibility and extendibility of this mapping approach are crucial to accommodate changes during the development process or the introduction of new profiles. The authors advocate for a rule-based notation supported by a tool capable of generating a translator from rule-based descriptions, and they are exploring the use of XSL transformations for this task.