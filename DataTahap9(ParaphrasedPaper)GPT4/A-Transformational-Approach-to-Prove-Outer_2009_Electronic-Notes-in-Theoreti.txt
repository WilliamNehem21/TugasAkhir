This academic paper presents methods for converting a specialized class of term rewrite systems (TRSs), named quasi left-linear TRSs, into standard TRSs, in order to prove that if the transformed TRS terminates, then the original system is outermost terminating. This transformation allows for the automated proof of outermost termination, expanding the set of systems that can be demonstrated to terminate without human intervention. The researchers conducted experiments providing evidence that their approach is effective even for complex examples that previously could not be automatically verified for outermost termination.

Traditionally, much work has focused on proving termination and innermost termination; however, proving outermost termination is also relevant. Outermost termination is a reduction strategy, where one can always reduce the outermost reducible expression (redex), given that it is not contained within another redex. This contrasts with strategies to prove termination in Haskell, which focus on a specific set of terms.

The Cariboo tool was previously the only known tool for proving outermost termination, but it operates independently. The paper aims to leverage the advancements in termination tools over recent years. The transformation approach discussed has been successful in addressing termination in context-sensitive and liveness issues.

The paper focuses on outermost ground termination and demonstrates that by adding fresh constants, outermost termination and ground outermost termination become equivalent for the systems considered. For quasi left-linear TRSs, adding a single fresh constant suffices.

The main transformation, denoted as T1, uses control symbols to determine where reductions are permitted, moving the control symbols as terms are reduced until the outermost redex is found. For this approach to work, the paper introduces the concept of anti-matching, where terms are identified that do not match any left-hand side of the rules. The paper proves that a finite anti-matching set can be constructed for quasi left-linear TRSs and presents alternative transformations T2 and T3 that use the concept of anti-matching contexts.

The paper is organized into several sections, including introducing notations (section 2), describing and proving the basic transformation T1 (section 3), presenting alternative transformations with contexts (sections 4 and 5), and showcasing implementation and examples (section 6). The conclusion is presented in section 7.

The paper includes an implementation of the transformations and provides examples where termination could be proven using their approach. While there are success stories, the paper acknowledges that not all cases can be handled by the transformations, particularly those that are not quasi left-linear or where the termination tools still fail despite the transformation. Nonetheless, the research substantially augments the range of systems whose outermost termination can be automatically verified.