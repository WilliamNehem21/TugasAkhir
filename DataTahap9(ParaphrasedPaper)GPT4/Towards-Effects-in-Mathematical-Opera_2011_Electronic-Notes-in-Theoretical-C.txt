In this study, the authors delve into the expansion of mathematical operational semantics through the incorporation of algebraic effects. The point of departure is a coalgebraic operational semantics devoid of effects, which is expressed as a natural transformation from syntax to behaviors. They progress to accommodate effects by distributing the syntax of programs across these effects, as a result creating a coalgebraic operational semantics within the Kleisli category related to the monad shaped by the algebraic effects. The ultimate coalgebra existing within this Kleisli category is then employed as the conceptual framework for the denotational model. To assure the existence of this coalgebra, the Kleisli category is enriched over complete partial orders (cpos) by adopting the monad comprised of potentially infinite terms with an added bottom element.

The paper takes initial steps in developing an abstract operational semantics for programming languages that include effects. The authors begin with an uncontaminated, effect-free language with an operational semantics defined by a natural transformation. They enrich the syntactical aspects with computational effects as mapped out by an algebraic theory and amplify the operational semantics to encompass these effects, which leads to an operational model influenced by structural recursion and characterized by effects.

They illustrate the concept with an exemplary term that is analyzed with original effect-free rules at each component, with the outcomes captured within an effect-tree that mirrors the structure of the original terms.

In summary, the authors expand on operational specifications that were initially limited to multisorted, effect-free languages, demonstrating an approach to incorporate purely syntactical effects. This approach characterizes an operational model as a coalgebra in the Kleisli category, provided that the behavior functor has the capability to be lifted. With certain prerequisites met, the ultimate coalgebra in the Kleisli category is realized, and operational semantics are characterized through a unique morphism into this final structure, which can also be utilized as the denotational model by adding an algebraic structure onto this coalgebra.