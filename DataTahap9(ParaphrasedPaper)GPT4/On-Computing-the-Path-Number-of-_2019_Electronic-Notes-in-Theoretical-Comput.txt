In a particular algorithm, a focal node (node with xef=1) and all its descendants follow a protocol where edges e and f belong to the same path. During subsequent branchings, the algorithm seeks to extend this path by choosing variables linked to an angle that includes either edge e or f. This iterative process continues for each descendant node until path extension is no longer feasible, and then a new path commences. This necessitates recording path information induced by fixed variables in each node of the search tree, a method proving to be efficient in multiple cases.

The paper summarizes computational experiments conducted on an Intel Xeon CPU with 32 GB RAM and integer programs solved using CPLEX 12.8 within a 10-minute time frame. The algorithm, BRKGA, employs a standard approach to solution encoding, using chromosomes with random keys as alleles.

The algorithm adds angles to an initial empty solution in a greedy manner, sorted by non-increasing allele values. An angle can be added to a solution provided it doesn't share an edge supported by a common vertex with existing angles and doesn't create cycles. This aligns with constraints in an integer linear programming (ILP) model used by the algorithm.

BRKGA was developed using the libbrkga library. It operates within parameters set for elite population fraction, mutant replacement fraction, and elite allele inheritance probability (10%, 20%, 70% respectively). The heuristic performs well with small populations and can confirm certificates efficiently by progressively doubling the population size if initial attempts fail.

Should BRKGA fail, particularly with dense graphs where variable symmetry is an issue, a fallback heuristic selects random edge-disjoint paths to simplify the graph and reduce symmetries. The authors applied their ILP model and heuristic strategies, coupled with theoretical knowledge, to successfully verify a conjecture for over 11 million graphs with ten vertices in just 35 minutes using a single thread.

For future work, the authors aim to test the conjecture on a significantly higher number of graphs (12-vertex graphs) and compute their path numbers. They also speculate that their model could contribute to developing an approximation algorithm for determining the path number of any graph.