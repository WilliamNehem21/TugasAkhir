In this section, the authors provide a detailed examination of various computer arithmetics and discuss methods for creating efficient evaluative expressions within each type. Initially, they address integer arithmetic, which they consider the simplest form.

Next, the paper delves into floating-point arithmetic, which adheres to the IEEE 754 standard and serves to approximate real numbers. The authors point out the limitation of floating-point arithmetic, namely that rounding errors can occur due to finite representation, potentially leading to significant inaccuracies in calculations.

Lastly, the authors touch upon fixed-point and interval arithmetic, though details about them are not provided in the excerpt given.

The paper concludes this section with aspirations for future work, including extending the methodologies to more complex code structures, going beyond simple arithmetic expressions. They mention prior research by Logozzo and Ball, who have examined binary relations between integer expressions. The overall goal moving forward is to modify more complex control structures, such as conditionals and loops, to improve computational efficiency and accuracy.