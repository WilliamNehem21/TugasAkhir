This academic paper discusses the concept of hybrid cloud infrastructure, which merges two or more distinct types of clouds (private, community, or public) while maintaining their individuality. These clouds are connected through standardized or proprietary technologies that support the transfer of data and applications, for example, to balance workloads across the different clouds.

Additionally, the paper describes Tap-as-a-Service (TaaS), a tool that expands upon OpenStack's networking capabilities, offering users the ability to mirror ports for network traffic monitoring within virtual networks. This is especially useful for debugging and maintaining visibility into the traffic pertaining to virtual machines (VMs) while respecting tenant privacy. TaaS can span multiple computing and network nodes, aiding in the provision of data for network analytics and security purposes.

When it comes to simulation parameters, the authors consult existing literature on latency in optical fiber metro networks and discuss techniques to reduce this latency. The discussion touches upon various methods, such as chromatic dispersion compensation, low-latency amplifiers, and other network components, while referring to experimental values.

The performance of network environments is also analyzed, with a particular focus on OpenStack's capabilities in handling network virtualization for multiple tenants. OpenStack's network components are evaluated by measuring packet throughput in a test environment.

The integration of Software-Defined Networking (SDN) solutions with OpenStack is another focal point. The architecture of OpenStack's networking module (Neutron) and its compatibility with SDN controllers are considered. An experimental model was developed to assess the performance of an SDN-OpenStack integration, with considerations like delay, and the handling of both UDP and TCP traffic flows based on experimental data.

Lastly, the paper examines the impact of virtual networking on latency in public clouds that are based on OpenStack. They measure the throughput of virtual machines and monitor packet transmission to gauge performance.

The research employs a modular multiformalism modeling technique that uses Petri nets (PN) and queuing networks (QN). The high-level model orchestrates functional blocks representing behaviors and connection ports, enabling the confluence of packet traffic through various connections. The paper does not delve into further detail regarding this modeling approach.