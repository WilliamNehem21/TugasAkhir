To manage the inherent complexity of embedded control systems, a strategy is to adopt a modular design that involves assembling pre-defined components. These systems are tailored to specific applications, such as industrial facilities or railway networks, by creating unique configurations from a vast array of potential combinations that are essentially limitless.

The paper is structured as follows: after a review of prior work, the "compose approach" is detailed with an illustrative example. Next, the evaluation methods for this approach and some preliminary outcomes are discussed. The paper concludes with a summary and future research directions.

The paper builds on established ideas in component-based and model-based engineering, applying them to software testing, particularly model-based testing. This is a continuation of former work in the railway sector.

Composition operators have conventionally been defined in natural language along with a mathematical description. Few formalizations exist that are machine-readable, apart from basic examples in process calculi.

For state-event systems like mealy automata, there are various compositional methods; statecharts and communicating automata such as those used in UPPAAL are notable examples. Model-driven development has seen other techniques emerge, but these are generally unsuitable for our study's focus on constructing composite Markov chain and system models.

Component behavior is modeled as mealy machines, and there are numerous ways to describe this, including direct graph construction or transformations from statecharts, among others.

The composition operator presented composes a central interlocking unit with multiple concrete blocks. When an operation on a network path is initiated, the central unit sends the appropriate signal to each block on that path, using a transactional pattern to keep states consistent.

Domain experts have developed specific notations, such as block or railway network diagrams, to represent complex systems. The paper suggests a language derived from such notations that is user-friendly for experts and translates syntactically into system components seamlessly.

The paper outlines three future objectives: finalizing a supporting tool, applying the methodology to various examples such as industrial controls, and exploring how this approach can be used to quantitatively estimate the reliability of complex systems.