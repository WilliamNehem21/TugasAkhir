We demonstrate the effectiveness of our synthesis method through two case studies: a generalized buffer by IBM and an arbiter for the AMBA bus system. Prior studies on synthesis have largely focused on simple examples, but here we tackle complex, industry-level designs.

The current document details the generalized buffer case study while a companion paper presents the AMBA arbiter case study. This paper outlines our algorithm for constructing circuits from binary decision diagrams (BDDs), incorporating upgrades and improvements, specifically in applying the method to the AMBA example.

The structure of the paper is as follows: Section 2 explains the circuit synthesis from specifications. Section 3 focuses on the generalized buffer, its formal specification, and synthesis outcomes. Section 4 discusses the ARB arbiter for the AMBA bus system, followed by lessons learned in Section 5, and conclusions in Section 6.

We revisit prior results on synthesizing GR(1) properties, focusing on the realization of PSL specifications and whether they can be achieved by an open controller, comprising of environmental input and system variables. The synthesis process involves checking whether such a controller can meet specifications against environmental interactions, framed as an infinite two-player game.

The winning strategy for the game, if it exists, is expressed through a BDDâ€”a nondeterministic representation of potential implementations. We illustrate the approach by synthesizing a buffer controller, presuming pre-established FIFO and multiplexer components, since they are standard and complex to design from scratch.

Initially, our synthesized buffer did not utilize the FIFO, leading us to adapt the specification to integrate it properly.

The AMBA bus enables connectivity between processors, memory, and other components, with the arbiter managing access to the bus. Our first attempts at synthesis were limited by memory constraints, but optimization allowed synthesis of arbiters for a more significant number of masters. The synthesized arbiters implement a round-robin selection method, validated through cooperation with manual master and client designs.

The time and complexity of synthesizing circuits increase with scale, and the resulting circuits are complex, offering little room for manual alterations. While finding minimal implementations that match the specifications is challenging, our two-step synthesis process enables us to construct correct, albeit sometimes large, controllers.

Despite their complexity, the synthesized circuits benefit from concise and modifiable PSL specifications, allowing for consistent and complete design processes. While manual coding remains more compact, our synthesis approach offers promising opportunities for optimization and future advancements.

In conclusion, we have successfully applied an automatic synthesis technique to real-world design blocks, yielding large circuits with potential for size reduction in future investigations. Optimizations in the co-factor approach have already resulted in smaller circuits, indicating the promise of automatic synthesis as a viable alternative to manual circuit design.