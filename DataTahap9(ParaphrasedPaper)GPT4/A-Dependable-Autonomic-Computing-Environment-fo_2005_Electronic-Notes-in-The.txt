This paper discusses the development of a dependable autonomic computing environment that uses self-healing techniques to enhance the reliability of digital systems. The research focuses on the design and prototype creation of an architecture that employs mobile agents for self-testing, self-diagnosis, and self-repair of complex, heterogeneous systems.

The innovation of this project is the comprehensive use of mobile agents—self-controlling programs that can move across network hosts—to regularly inspect systems, detect anomalies, diagnose issues, and undertake repairs before significant malfunctions occur.

Mobile agents have advantages such as autonomy, better support for mobile hosts, reduced network traffic through onsite operations, and easier software deployment. These agents are tasked with performing software-implemented hardware tests on critical components like RAM and hard drives to preempt failures.

The core of the proposed environment is an "agency," which synthesizes information from each system, devises healing strategies, initiates mobile agents, and sends them directives. The agency aligns local and global administrative policies, creates test plans, and dispatches manager agents to oversee and collect test results from the target systems. Manager agents, in turn, can self-clone to manage multiple systems efficiently.

Agency agents reconcile local and global policies and, using both software and hardware data, compile a list of tests. The mobile manager agent assigned to a system conducts these tests when appropriate, following policy constraints. The agency, or goal interpreter, either assigns tasks to existing agents or activates new agents for specific actions as needed.

Mobile agents then move to target systems, carry out their tasks if resources permit, and store results locally. The on-duty manager agent is in charge of gathering this data and deciding on subsequent actions, such as additional diagnostics following test failures.

Local agents initiate tests based on goals, with test agents traveling to systems under test to conduct their assigned tasks and collaborate with local services.

The paper aims to outline the general concepts of the project, detail the design choices, and provide an in-depth presentation of the current architecture, along with the work on a functional prototype.