Remark 3.6: The β rule is the exclusive rule responsible for generating substitutions. The "lam" rule defines the context in which a substitution exits the functional domain of its original abstraction and penetrates a nested functional domain. The mechanisms for controlled duplication and deletion of substitutions (namely, cpy1 and ers1) enable the tracing of routes that originate from contraction nodes.

Example 3.7: The β rule is illustrated graphically, depicting its left and right sides. Two steps are necessary for the cut elimination to accomplish this transformation: (1) resolving a closed dereliction cut, and (2) resolving a multiplicative cut.

During reduction, certain paths perish, but our focus is on identifying those routes that pertain to discarded arguments, given that substitutions are discarded methodically. Thus, such paths are retained within the set B.

Paths usually get labels post-removal of nodes from the graph. In this instance alone, the convention is slightly bent by tagging the contact points with a "of course" label. It is noted that the reduction has preserved the root of the box in g(n'), which will continue to undergo exponential cut elimination until it is consumed by a dereliction cut.

One significant point is that the discussed calculus can only accurately represent the exponential segment for the call-by-value translation in linear logic. If a call-by-name translation were used instead, the calculus would encounter issues. This problem arises in the call-by-name framework because the exponential box structure is allocated within argument positions. While the multiplicative details within labels remain consistent regardless of translation, exponential indicators would need updates to mirror the changes. An expansion of labels to accommodate call-by-name translation and the examination of structural differences that emerge from both modalities require further investigation.