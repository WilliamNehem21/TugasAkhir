The original paper discusses the challenges and potential of adapting termination techniques from term rewriting systems to term graph rewriting systems. While these techniques are well-established for term rewriting, their application to the more complex structure of graph rewriting is not straightforward, in part because the non-hierarchical nature of graphs complicates matters. Despite this, the paper posits that exploring the adaptation of termination theory to the context of graph rewriting is a valuable endeavor.

The research presented employs edge-labeled directed graphs and uses the double pushout (DPO) approach to graph transformation, a standard methodology in the field (with references provided for details). Key concepts necessary for the paper's later discussions are briefly summarized.

Unlike terms and strings, which are inherently hierarchical, graph rewriting deals with networks of nodes and edges that don't have this property, making the transfer of techniques less direct. The authors note specific difficulties that arise due to the lack of a clear hierarchy, such as the representation of graph productions and the functioning of graph automata.

To illustrate their point, they discuss a finite graph automaton (FGA) which differs from a type graph in being dynamic rather than static, aiming to accept all reachable graphs from an untyped graph transformation system, hence necessitating a different terminology. They give an example of such an FGA (denoted as G) and demonstrate how it relates to a given graph transformation system (GTS), revealing that the language it accepts consists of all acyclic graphs with a maximal path length of 3.

The paper also emphasizes the limitations of their method, pointing out that while creating an unwinding of the initial annotation of a graph is useful to prove termination, it cannot always result in a finite process. Therefore, the authors propose focusing on a semi-decision procedure that may be more practical.

Lastly, the authors introduce an algorithm that analyzes termination by considering the source graph's structure rather than just the type of elements, a new approach in contrast to older methods. They suggest that combining the consideration of creation heights with more expressive graph language classes may yield stronger termination proofs, especially since regular graph languages are insufficient for recognizing important structures like acyclic finite graphs or trees, which are crucial for termination.