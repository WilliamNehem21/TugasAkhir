In the contemporary landscape of internet communication, ensuring data security and copyright protection remains a challenging endeavor. The necessity for clandestine transmission protocols to safeguard message exchanges online is highlighted. One potential solution is the use of encryption, which converts plaintext data into an encoded format known as ciphertext through various encryption algorithms. The downside of encryption is that while it protects the content, the garbled outcome may raise suspicion and thus inadvertently draw attention to the message.

To address this, a steganographic approach is introduced which involves embedding secret data into images in such a way that it goes unnoticed. This method utilizes five secret keys: r1, r2, v1, v2, and t, with constraints specified for v1 and v2 to ensure that their sum is less than 6. The method classifies a block of four pixels as either belonging to a smooth or an edge area by calculating the average difference in values within the block. Depending on this classification, the block is assigned to a smooth or edge level, and a corresponding number of bits (denoted q) of the secret data is then embedded within the pixels of the block. For smooth areas, a lower number of bits represented by v1 is embedded, while for edge areas, a higher number of bits (v1 + v2) is used.

The embedding process is detailed in Section 3.1.1 of the paper, while the extraction process is explained in Section 3.1.2. When it comes to embedding, if the block is classified as an edge area, the q bits of secret data (sq) are split into two segments: sq1 containing v1 bits and sq2 containing v2 bits. In the case of smooth areas, sq consists of a single segment sq1 containing v1 bits.

The paper provides an example to illustrate this non-adaptive algorithm, showcasing the output stego-pixels 17 and 237. A set of selected binary numbers, kr kc, is used in conjunction with q equal to the sum of v1 and v2 (which in this example is 4), and the implementation was tested on a MATLAB R2009a environment running on a Windows XP platform. Pseudo-random numbers served as the secret data for the embedding procedures, and the quality of the resulting stego-images was assessed using the peak signal-to-noise ratio (PSNR) metric, a commonly used measurement for representing image quality after data embedding.