This paper discusses the application of probabilistic process algebra to the analysis of an unnamed protocol, focusing on its behavior when not timed, through the use of probabilistic weak bisimulation. The authors previously studied this protocol using probabilistic timed systems and bisimulation, demonstrating its fairness within an acceptable margin of error.

In the current study, the model of the protocol is converted into specifications for PRISM, which is a probabilistic model-checking tool. This conversion allows the authors to evaluate how altering the protocol's parameters affects the tolerance for fairness.

The protocol is deemed to conclude fairly and correctly when a specific action, here named "correctStop," happens, indicating reaching a designated state (q0, r5). The protocol is structured so that if all parties involved act as intended, unfair practices are prevented. Nevertheless, there is a possibility of encountering a dishonest recipient who manages to obtain the desired information but fails to send the final acknowledgment.

The paper describes the situation of a malicious recipient who manages to correctly predict the last message, represented by state r7. This occurs when the originating sender has set a certain variable "l" to 1 during the final message transfer. If the variable "l" is indeed 1 while at state r5, the malevolent recipient successfully proceeds to state r7. If not, the recipient enters state r6 and may attempt to acknowledge the sender.

The authors establish that the probability of a malicious actor successfully compromising the protocol is always less than "p," a parameter determined by the protocol designer. This likelihood holds when certain conditions are met (ad + dd > ad). Under these conditions, a malicious user's potential actions are limited to attempting to decrypt the initial message using the last received message as a key, which could disrupt the protocol, or simply sending an acknowledgment back to the originator.

PRISM, the tool used for analyzing the protocol, is capable of modeling systems with inherent randomness. It creates probabilistic models such as discrete-time Markov chains (DTMCs), Markov decision processes (MDPs), or continuous-time Markov chains (CTMCs). Properties of the system can be verified by PRISM, which checks against specifications written in temporal logics, specifically PCTL for DTMCs and MDPs, and CSL for CTMCs.