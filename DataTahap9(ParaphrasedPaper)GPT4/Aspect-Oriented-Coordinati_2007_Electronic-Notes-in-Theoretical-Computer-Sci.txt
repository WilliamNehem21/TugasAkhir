This academic paper discusses the challenges posed by coordination protocols that are intertwined with the functionality of software modules, affecting their reusability, independence, maintenance, and evolution. It proposes the separation of coordination from computation by externalizing coordination aspects from the components involved in processing, utilizing aspect-oriented programming (AOP) as a solution. AOP allows for the implementation of coordination protocols across components without embedding them into the component logic, promoting better modularization and ease of system updates.

The paper outlines how coordination concerns, which are pervasive across different components, can be modularly addressed using AOP techniques. It focuses on component-based systems and demonstrates that AOP can streamline the handling of coordination by transparently injecting additional behavior into components at runtime without altering their code. For instance, the Java Aspect Components (JASCO) framework is used to illustrate the concrete application of AOP for coordination.

The paper continues by exploring how coordination protocols are significant across various modules to form cohesive systems, and it provides examples such as auction systems to clarify the concept. By implementing coordination as a separate aspect, developers can benefit from improved modularization, which eases system development, maintenance, and evolution according to the authors' claims, although this is not exhaustively verified within the scope of the paper.

Moreover, the paper critiques traditional design patterns and endogenous coordination models, highlighting that while they offer some solutions for coordination challenges, they do not fully address the concerns related to crosscutting aspects. In comparison, AOP's exogenous coordination approach offers a promising alternative to encapsulate coordination concerns transparently, resulting in more manageable and adaptable software systems.

The paper concludes by acknowledging the value of AOP in dealing with coordination concerns while noting that it is not a catch-all solution for all crosscutting issues, and it presents current challenges that still need addressing. It also emphasizes the potential for reusability and modular combination of components when coordination is treated as a separable aspect, which does not necessitate alterations to the component's internal structure. Briefly mentioned are related works and future research directions in aspect-oriented coordination.