In the context of cloud computing, the paper discusses an enhanced cost-based scheduling approach designed to minimize overall completion time, referred to as the makespan, as well as to reduce costs, while bettering the ratio of computation to communication. This methodology assigns priority to tasks by considering the cost of resources and potential benefits. Subsequently, tasks are categorized into three priority levels (low, medium, high) and a job grouping strategy is employed to manage the execution of tasks within each category.

The innovation of the GTS (Grouping Tasks by Similarity) algorithm lies in the grouping of tasks into classes based on their characteristics. The task attributes outlined by the TS (Task Scheduling) algorithm inform the categorization, with tasks of alike attributes falling into the same group. These groups are prioritized for scheduling according to the weights assigned to the task attributes in the TS algorithm. The prioritization ensures that the group of tasks with the highest attribute values or priorities is scheduled first. Within the selected group, the tasks are arranged so that the one with the shortest expected execution time is tackled initially.

The goal of the research was to present an algorithm that achieves minimal execution time for cloud computing tasks, with an emphasis on quickly servicing high-priority tasks. The proposed GTS algorithm schedules tasks based on Quality of Service (QoS) requirements. It integrates multiple task attributes—like user type, task priority, task size, and task latency—to determine the scheduling priority of each task.

Performance comparisons indicate that the GTS algorithm reduces latency more effectively for tasks considered urgent (by 12% and 9% for 50 and 100 services, respectively) when compared to the Min-Min and TS algorithms. Furthermore, the GTS algorithm significantly cuts latency for longer tasks (by 57% and 54% for 50 and 100 services, respectively) compared to the Min-Min algorithm. In terms of achieving load balancing, the GTS algorithm is comparable to the TS algorithm.