In recent years, there has been a shift within the European railway sector, moving away from exclusive partnerships between national rail companies and industries. Previously, these close relationships allowed for informal communication, including on-the-phone resolutions for system specifications, especially regarding Relay Interlocking Systems (RIS) defined by Principle Schemata. However, with the adoption of computer-based RIS, manufacturers have begun to formalize designs independently, using various logical frameworks while still adhering to the familiar Principle Schemata to ensure compatibility.

Interlocking systems are critical for railway safety, managing signal indications and train movements to prevent accidents. The statecharts formalism builds upon conventional finite state machines to enable the design of complex, hierarchical state systems for better communication and event-driven transitions within the interlocking system.

The authors propose a design methodology for constructing an interlocking system, akin to the Euris language approach, avoiding the use of global summarizing variables, which can obscure the correlation between the system's model and its actual physical layout. This new approach advocates for the geographic distribution of control, where, for instance, switch points are managed by the relevant local elements, not by a central functional object.

Using the statecharts model, C or ADA codes can directly be generated through tools like Statemate, providing code closely representative of the model without further translation. The geographic approach also simplifies system modification; unaffected modules do not require revalidation, reducing the need for exhaustive testing since each component operates independently.

The discussed geographic approach is part of extensive research exploring the design of RIS using different statecharts dialects and tools. The study aims to gauge the effectiveness of this approach in reducing revalidation efforts during modifications, investigating both its scalability and its compatibility with formal verification methods and automatic model generation from physical specifications.