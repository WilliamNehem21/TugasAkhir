In this academic paper, the authors discuss an improved technique for value analysis in programs that contain non-linear arithmetic operations. Standard abstract domains typically use linear constraints, such as polyhedra or octagons, which are insufficient for capturing the semantics of non-linear operations like multiplication or division. To address this issue, the paper suggests utilizing disjunctive abstract domains, which involve combinations of linear constraints to approximate non-linear behavior by splitting it into several exclusive cases.

The research presented in the paper outlines a value analysis method that uses linear constraints in disjunction to model non-linear arithmetic within an abstract version of the program. This approach allows the analysis to use efficient non-disjunctive abstract domains while still incorporating the disjunctive information needed for more precise analysis of non-linear operations. The proposed technique has been integrated into Costa, a cost and termination analyzer for Java bytecode, showing it can successfully handle programs with non-linear arithmetic that were previously unmanageable.

The paper also describes a strategy for constructing abstract procedures and maintaining precision during the analysis. It discusses how non-linear operations that do not affect termination can be simplified to avoid extra computational overhead. Additionally, the paper details technical aspects of managing procedure pre-conditions and post-conditions using the underlying abstract domain's properties to ensure analysis termination.

Results indicate that the new value analysis in Costa successfully proved termination for all benchmarks tested, outperforming previously unsuccessful attempts. The paper concludes by highlighting the benefits of the new approach over using disjunctive abstract domains directly and anticipates future work to enhance the analyzer's scalability, and support for arithmetic overflow and floating-point arithmetic.