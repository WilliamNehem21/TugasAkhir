This paper enhances a previous access control model for the seL4 microkernel by incorporating non-determinism, explicit sharing of capability storage, and a delete function for entities. The improved model is formally verified to enforce security policies and authority confinement across the system. By explicitly handling sharing in the abstract model, proof refinement toward the seL4 implementation is simplified. This is believed to be the first machine-checked access control model addressing explicit sharing.

Refinement proof efforts between the access control model and the seL4 operational specification highlight challenges from non-determinism, entity deletion (beyond capability deletion), and capability storage sharing. The latter introduces significant complexity in linking the abstract model to implementation details. The paper provides the first formal analysis of shared capability storage, adjusting security analysis to manage shared authority. A security flaw involving operation interruptions leading to potential unauthorized grants was identified but has since been addressed.

The Isabelle theorem prover is utilized, representing data structures as named tuples and updating them with a specific syntax. The paper promotes an explicit model of sharing for security analysis rather than traditional indirect modeling, which becomes more complex with more intricate sharing structures. This explicit approach not only aids in the security analysis but also benefits those implementing security monitors.

Following the access control model's conventions, all kernel objects are termed entities and are defined by their capabilities. The rights model includes a 'store' right for shared access to capabilities, leading to a complex interaction between entities when sharing is involved. The 'step' function captures operation effects, allowing for non-deterministic outcomes that can include operation abortion, mirroring real-world system behaviors.

The security proof in the paper relies on state invariants ensuring that all capabilities refer to actual entities. To avoid the theoretical possibility of using infinite unique names for entities across the system's entire lifetime, the paper chooses to reflect this limitation in the security analysis.

Noteworthy theorems are presented regarding authority confinement. The paper makes a distinction between de jure rights (officially given by capabilities) and de facto rights (indirect rights materializing from existing access combinations), which are critical for modeling information flow in the system.

The seL4 access control model borrows concepts from the take-grant model and extends these by making capability sharing explicit. Proofs are validated in Isabelle/HOL. The paper discusses how the concept of non-interference, a form of isolation, is more comprehensive than the isolation used in the model as it also considers covert channels, albeit the current focus is on overt and potentially indirect information flows. Connecting this notion to the operational and implementation models of seL4 would require careful consideration.