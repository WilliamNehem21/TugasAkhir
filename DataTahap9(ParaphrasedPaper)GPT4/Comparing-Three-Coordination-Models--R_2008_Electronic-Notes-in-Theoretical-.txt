In this paper, the authors examine and contrast three distinct coordination models—Reo, Actors-Roles-Coordinators (ARC), and Reflective Russian Dolls (RRD)—to understand their various communication strategies and coordination mechanisms. These models have been chosen as they represent a broad range of approaches and can shed light on key aspects of coordination. Future research could include other models like Linda and its extension Lime, or Klaim and its extension StochKLAIM.

Reo is a model focused on component composition using channels with specific behaviors to connect components. It is exogenous, meaning that the coordination mechanisms are external to the components being coordinated. Coordination and communication are determined by these channels without altering the components themselves. The semantics of Reo can be explained through timed data streams or constraint automata, the latter of which also facilitates analysis and model checking of Reo systems.

The ARC model relies on separating coordination concerns into intra-role and inter-role categories. It leans on actors who communicate asynchronously through message exchanges, with roles and coordinators managing the coordination aspects. The ARC system's coordination works through modifying the timing and spacing of messages, and reasoning is based on the dispatch of messages with respect to time and recipient—both being transparent to the actors involved.

RRD introduces coordination as an external layer at each nesting level, where lower-level objects operate independently of the coordination layer. In RRD, attributes of the message queue represent the interfaces of the coordinatees. The RRD policy is expressed in terms of rewrite rules that manipulate message queues under certain conditions.

The paper is structured to outline the features used for comparison, describe the three models according to these features, provide representations of a simple coordination task within each model, offer a step towards a common semantic foundation, and finally, present conclusions along with future research directions.

All three models showcase robust expressiveness. Reo is relatively mature, with well-established formal semantics and analysis tools, whereas RRD is more about abstract specifications, and ARC focuses on coordinating resource usage and Quality of Service (QoS) goals. Each model allows for customizable coordination behaviors—through channel behavior in Reo, coordinator events in ARC, and rewrite rules in RRD. Despite operational differences between channels and messages, their denotational semantics are strikingly similar.

For the future, the authors suggest exploring whether Reo specifications could be adapted to policy languages for other models and embedding ARC into RRD. Developing logics for coordination specification and reasoning, examining whether existing logics can be generalized, and creating new logics to express properties that emerge from coordination are also proposed. Lastly, the paper emphasizes the need for techniques to safely combine multiple coordination rules concerning communication, timing, and resource management.