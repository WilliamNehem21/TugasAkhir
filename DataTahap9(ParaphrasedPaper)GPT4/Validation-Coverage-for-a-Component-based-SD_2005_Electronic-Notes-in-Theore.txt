The paper discusses applying an exhaustive exploration algorithm to validate large systems, such as the System Component Architecture (SCA). It suggests measuring the thoroughness of verification activity by employing the concept of coverage, a metric familiar in software testing. Coverage assesses the extent to which tests exercise different parts of the system, including statement, branch, and condition coverage, among others.

Furthermore, the paper examines the integration of new components into an existing system and the impact on validation. It specifically looks at incorporating new components by analyzing the required signal changes, represented as dashed lines, up to a certain process in the system. The feasibility of these guidelines depends on comprehending the communication semantics of both the new and existing components. This understanding can be achieved if the internal structure of the components is known, or if Message Sequence Charts (MSCs) that describe all possible behaviors are available, though this latter approach is mainly suitable for small components.

The authors note that adding a new component earlier in the processing chain typically results in reduced coverage during regression validation, as it is more likely to disrupt the MSCs, but thi>s scenario also tends to be less costly in terms of required modifications, since fewer changes will be necessary moving backward from the new component to the environment.