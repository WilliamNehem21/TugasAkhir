In research aimed at modeling and programming systems with variable constraints, there exists a necessity for languages that can describe the likelihood of different time delays that might occur as a system evolves. Languages like PEPA and stochastic π-calculus serve this purpose by expressing stochastic temporal behaviors. These languages use an operational approach to their semantics, which is shown through labelled probabilistic transition systems. Such transition systems represent continuous-time stochastic processes, frequently seen as continuous-time Markov chains.

The concept has been extended to loops incorporating a predetermined delay operation, resulting in a semantic model called M-timed stochastic relations (TSRelM), which expands on the standard stochastic relations (SRel) used to understand the semantics of probabilistic languages for while loops. A connection is made between probabilistic choice and stochastic temporal behavior, suggesting that both can be sourced from a fundamental primitive involving sampling from probability distributions.

When considering the standard language for while loops, known as ISLWhile, a structure is needed to support iteration within its Kleisli category. Inspired by Manes and Arbib, the Kleisli category is required to be partially additive, a property necessary for supporting loops, which conceptually represent an infinite unrolling of their body. Partial additivity is presented as a comprehensive definition although the intricacies of this definition are less important than its practical application in interpreting loops.

Examples of partially additive categories include the category of sets with partial functions (Par) and the category of complete partial orders with continuous functions (CPO). In Par, partial functions can be summed when they apply to separate sections of the domain, while in CPO, a sum can be represented as the least upper bound of a directed set of functions.

However, deterministic delays are too simplistic for capturing complex temporal behaviors of systems. A more elaborate language that can stochastically represent the duration of operations by sampling from probability distributions is warranted. This paper discusses a language that accommodates probabilistic delays and deterministic state behavior, with plans to explore a fully probabilistic language thereafter.

Multiple frameworks have been developed to describe and model stochastic behaviors, such as queueing systems, stochastic automata, generalized stochastic Petri nets, and generalized semi-Markov processes. Stochastic automata are particularly noteworthy as they introduce clock variables to deterministic automata, which are set by sampling probability distributions and decrease uniformly. These automata are interpreted using a probabilistic transition system with states that represent either nondeterministic or probabilistic choices.

The impetus behind developing languages for stochastic behaviors arises from the need to represent models for studying such behaviors in systems, particularly those with 'soft' constraints. Stochastic process calculi have become a popular tool for this, given their support for concurrency and composability. The stochastic π-calculus, in particular, is widely used for biological modeling. In these calculi, semantics are operational, with annotations that track reaction rates corresponding to time delays, typically using exponential distributions to represent delays. The use of Markov processes enables efficient reasoning about processes in such calculi. Extensions to non-Markovian distributions have also been studied.

The paper concludes by suggesting that the categories discussed could be used to semantically interpret stochastic process calculi, and that further research in this area is intended to be reported in the future.