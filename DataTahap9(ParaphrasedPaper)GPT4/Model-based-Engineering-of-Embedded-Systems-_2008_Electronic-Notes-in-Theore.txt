The academic paper discusses a process algebra named Hybrid Chi, which is used for modeling and analyzing hybrid systems. Hybrid Chi employs a range of atomic statements and combination operators, facilitating modular specifications of complex systems. However, for better efficiency in simulation and verification, a more concise syntax subset is preferable. This paper presents an algorithm to linearize a significant subset of Hybrid Chi language into a normal form.

The paper is structured as follows: Section 2 outlines the input language accepted by the linearization algorithm. The target normal form resulting from the linearization process is defined in Section 3. Section 4 presents the linearization algorithm itself, while Section 5 demonstrates the algorithm's application using a bottle-filling line case study. Section 6 concludes the paper with remarks and suggestions for future work.

Additionally, the paper explains that user-friendly syntax that translates to the linearization algorithm's input language is also acceptable. An example provided is the "any delay operator," which represents arbitrary delays in a process's behavior. Furthermore, parallelism in processes is described using a parallel composition operator, which allows processes to interact via shared variables or synchronized communication through channels.

The paper also introduces the notation for recursive variables, which are used to model repetition and define process behavior. Local declarations are addressed, explaining how one can define local variables and modes, ensuring their scope is limited to the relevant process term.

The case study involves modeling a bottle-filling line by specifying parameters like initial tank volume, flow rate for filling, and maximum allowable volumes and flow rates. The linearization algorithm is evaluated while noting that recursion variables might increase exponentially in cases of parallel compositions, an aspect they aim to improve upon in the future.