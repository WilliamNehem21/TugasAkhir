In this paper, we introduce a tool specifically designed for the modeling, analysis, and design of service-oriented systems (SOS). Leveraging the Resource-Aware Timed Behavioral Language (ReMes), our tool provides both a graphical interface for visually assembling service-based systems and a textual interface for system descriptions. We offer a graphical environment that facilitates the user-directed composition of services and a textual composition interface with built-in correctness checks for the composed services. A significant feature of our tool is its ability to maintain automated traceability between the graphical and textual design methods, which greatly enhances the design process by allowing for intuitive manipulation of services.

Service-oriented systems have become increasingly important for integrating and composing software due to the characteristics of services as loosely coupled, autonomous entities. To support system design and ensure quality of service (QoS), we have extended ReMes to incorporate service-oriented characteristics, such as service interface descriptions that outline service types, capacities, time commitments, and pre/postconditions. We have also added elements to ReMes for dynamically composing services and tools to verify these compositions.

Our tool enables SOS design within ReMes, combining a graphical environment for behavioral modeling and a textual service composition view. It also features automatic transition tracking between the graphical and textual views and generates verification conditions for service compositions. The tool is designed to interface with provers or model-checking software to fulfill verification conditions easily.

The paper's structure includes an explanation of our approach and tool workflow, details on the user interface, and a discussion on model traceability and the verification condition generator. Our findings and future work are summarized at the end.

The tool comprises two main components: the Diagram Editor View (DEV) and the Console View (COV). DEV manages diagrams and displays service compositions using the NetBeans Visual Library API, while COV supports the textual system description and verification conditions generation required for composed services. The tool uses a service repository containing services modeled with the enhanced ReMes interface, allowing users to invoke and compose services in various configurations.

Users can compose services visually or textually with the assurance of consistency and traceability through features enabling the visualization of transformations across different interfaces. Each service link in the tool possesses attributes associated with various service properties to maintain consistency across views and provide details applicable to service compositions or particular services lists.

We presented a tool that allows for the specification, modeling, and analysis of SOS, enabling graphical and textual system designs, error detection, and user adaptation of pre-existing services. The tool improves the ease of specifying functional and extra-functional service behaviors, like timing and resource usage, and simplifies modifications via the textual console, which automatically updates the graphical view. To verify service correctness, the tool employs the strongest postcondition calculus and generates boolean formulae that can be discharged by the tool. Despite these capabilities, integration is still pending with model-checkers like UPPAAL 5, as ReMes semantics is defined in terms of Priced Timed Automata (PTA), as well as integration with provers for automatic correctness condition verification.