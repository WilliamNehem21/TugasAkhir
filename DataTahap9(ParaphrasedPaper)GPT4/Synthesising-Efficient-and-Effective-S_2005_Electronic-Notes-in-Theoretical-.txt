The paper describes a framework for designing secure communication protocols by treating the design process as a numerical optimization problem, leveraging the simulated annealing technique for the global search. This work advances the authors' previous efforts, which focused solely on logical correctness, by employing SVO logic, a more intricate system than the formerly used BAN logic, to enhance confidence in the protocols' practical security.

SVO logic provides a means to represent and reason about protocols, making it possible to comprehend and interpret received messages, while dealing with potential issues related to message formats that carry context-dependent meanings. To overcome this, the authors use the GNY recognisability rule and message extensions.

The paper illustrates a scenario where a principal (user) A acquires a new session key from a key distribution server S to communicate securely with another principal B. Various initial assumptions are defined, such as the possessions of identifiers, nonces, and long-term keys, along with beliefs about the security and jurisdiction over these keys.

Efficiency in protocol design is categorized as computational, relating to the necessary calculations to execute the protocol, and communications, regarding the volume and length of messages exchanged. The authors define fitness functions to evaluate these efficiencies within their system and refine the protocols accordingly.

Experiments with their system used specific simulated annealing parameters and provided a method for determining the appropriateness of keys used for secure communication.

This paper notes that literature on protocol efficiency is sparse, and the authors' framework contributes by integrating efficiency considerations into the synthesis process. Lastly, they demonstrate the system's capability to generate three-party authentication and key transport protocols employing symmetric key cryptography and posit the potential to extend the system to include public key schemes and key agreement protocol synthesis. Protocols are produced rapidly, with a typical run taking less than two minutes, highlighting the framework's efficacy compared to other design synthesis methods.