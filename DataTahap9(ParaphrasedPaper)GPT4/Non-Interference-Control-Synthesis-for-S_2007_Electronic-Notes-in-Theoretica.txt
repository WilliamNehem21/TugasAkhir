This academic paper delves into the challenge of creating controllers to guarantee non-interference within multi-level security systems that feature dense timed discrete event dynamics, as represented by an extended form of timed automata – a subject discussed here for the first time. The authors refine the concept of non-interference for dense real-time systems, build upon current literature, and probe into the solvability of verifying these dense time features. They demonstrate that the task of synthesizing a timed controller capable of upholding specific non-interference properties related to time is, in fact, solvable, and provide a symbolic methodology for designing such a controller.

The concept of non-interference is of particular significance in modern computing environments where users operate software sourced from various locations for personal or organizational objectives. This software can range from simple calculation tools to interactive programs managing input/output operations and communication, and occasionally handles confidential data. In shared computing settings, a primary security concern is preventing the unauthorized transmission of sensitive information to unintended recipients, whether deliberate or accidental. Non-interference properties help to prevent any causal links between actions dealing with sensitive data and observable system behaviors. These properties, which challenge the traditional safety-liveness dichotomy in system verification, have gained prominence due to their successful application in scrutinizing information security in cryptographic protocols.

With the increasing need to verify real-time systems, the question arises as to whether established proof strategies from non-timed contexts can be adapted for timed-systems – to encompass both logical and time-induced interferences, such as timing covert channels. Past work has modified untimed bisimulation-based non-interference properties for a discrete-time framework, and others have introduced state-based and trace-based non-interference properties using timed automata within a dense time context.

The paper presents an example illustrating the proposed method for ensuring a co-simulation based timed non-interference property. A brief overview of timed automata, which the paper utilizes, is provided along with the necessary definitions and constructors, following initial remarks on timed transition systems to articulate the semantics of timed automata.

The authors then define and present solutions for some timed non-interference control problems, validating that control problems like timed-STNNI and timed-CSNNI can be conclusively addressed through algorithms that facilitate the synthesis of a controller that guarantees these properties. Similar to the safety control problems for timed automata, the solution offered by the algorithm can represent both the system in a closed-loop and the controller itself. Throughout, they note that the simplest solution—restricting all controllable actions—is possible but not necessarily optimal.

The paper also touches on the concept of timed automata unfolding, which retains the discrete structure but encompasses the behavioral aspects of the automaton to identify states that comply with timed-CSNNI and to calculate the controller that ensures this property.

Lastly, the paper discusses the synthesis of controllers with partial observability, emphasizing that, depending on the system's design, non-controllable actions might be completely observable (full observability) or only partially so. Within a timed context, this idea of partial observability extends not only to uncontrollable actions but also to the timing mechanisms of the security system.