The paper discusses the use of "GREAT," a language for defining graph transformation rules, which falls within the category of practical graph transformation systems like AGG, PROGRES, and Fujaba. GREAT employs UML and OCL to define the domains within which transformations occur.

Graph transformation tools such as GREAT enable the translation of models from one meta-model to another by applying pattern matching rules. Nevertheless, there is uncertainty regarding the preservation of the original model's semantics during these transformations. The concern arises from the possibility of losing critical semantic details or misinterpreting information during the transformation process, due to mistakes in the graph rewriting rules or execution of the transformation. Hence, a verification method is necessary to ensure the semantic information intended for analysis is retained after the transformation.

The paper outlines a method to convert Statechart models into EHA (Extended Hierarchical Automata) models and subsequently into PROMELA models, the latter of which can be validated with the SPIN model checker. The authors propose a technique to certify that intermediate formats conserve the properties intended for verification within the models. The research poses an interesting question: whether the method can confirm if the generated PROMELA model (a plaintext code representation) accurately reflects the EHA model from which it was derived.