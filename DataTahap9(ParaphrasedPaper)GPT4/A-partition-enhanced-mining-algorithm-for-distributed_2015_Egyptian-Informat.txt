The execution of the PEMA (Partitioning-based Efficient Mining Algorithm) consists of two stages. In the first phase, when dealing with a smaller database, the mining agent divides the database horizontally into several distinct partitions, based on the quantity of data sites available. An example illustrates that the first twelve partitions contain an equal number of transactions, while the last partition holds the remaining transactions, slightly more than the others. This process addresses the issue of initial approximation.

The research posits that the database is stored on secondary storage with a known amount of memory. PEMA operates dynamically, implementing horizontal segmentation for short transaction databases, while for larger datasets with long transactions, it employs vertical partitioning to enhance the algorithm's performance. This hybrid approach enables PEMA to handle databases fragmented across various locations by combining horizontal segmentation, vertical partitioning, and incremental mining. PEMA can mine both real and synthetic datasets that are already vertically distributed or dynamically partition sizeable datasets with long transactions, such as the Covertype dataset from the UCI Machine Learning Repository.

One unique feature of PEMA is its flexibility. It can conduct a complete global mining task or a partial one if miners are not interested in all data parts or sites. The efficiency of PEMA in this selective mining was demonstrated in the results presented in section four.

Various experiments were conducted to assess the impact of the number of data sources, dataset size in records, and dataset size in items. The experiments were carried out using four virtual machines equipped with Intel® Core™ i5-2450M CPUs, 6 GB of memory, and running Windows 7 Home Premium edition. Dataset distribution was performed across the four virtual machines. Parameters such as response time and communication overhead (number and size of messages exchanged) were measured. The minimum support threshold was varied from 0% to 100% of total transactions for each dataset. PEMA's results were compared with other algorithms, such as Apriori, AprioriTid, and FP-Growth.

Further experiments with the Connect4 and Covertype datasets were performed using default values of 20% minimum support and 80% minimum confidence for PEMA, although these values could be adjusted by users. The findings suggested that PEMA outperformed the other methods, especially at a 75% minimum support threshold, where it exhibited the lowest number of message exchanges while maintaining robust performance as the threshold increased.