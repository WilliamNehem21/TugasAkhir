Operators that yield boolean values can be employed to discern both affirmative and negative responses (meaning outcomes that make the goal either true or false). In contrast, operators that produce a "success" are designed only to identify affirmative responses and ignore any others, due to the nature of "success" as a singular outcome space. The selection of operator is contingent upon the specific results the programmer is seeking from the program.

Definition 4.1 [Type Graph]: A Type Graph G for a type T can be conceptually understood as a directed graph where the nodes represent types, and there is a directed edge from Type 1 (T1) to Type 2 (T2) if T1 encompasses T2. In this graph, type variables receive the unique type 'pol'.