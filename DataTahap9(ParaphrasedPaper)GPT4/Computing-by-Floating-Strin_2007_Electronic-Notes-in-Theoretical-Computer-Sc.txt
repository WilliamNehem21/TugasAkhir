We introduce a computation system inspired by biological processes, specifically mimicking DNA computation. This system operates on double-stranded structures of moving strings, which are manipulated through rewrite rules with potential biotechnological applications. The computational power of this system can be inferred from previous theoretical work in formal languages by one of the authors.

We thank Vincenzo Manca for inspiring the first author to explore bio-inspired operations on double structures, and we appreciate the funding from NATO grant PST.CLG.976912 for the presentation of this paper.

The system resembles the natural process of DNA replication, using a set of rules to achieve bilinear duplication, ensuring linear computational complexity in both time and space. Inspired by DNA's duplication mechanism, we propose a DNA-like computational model capable of performing arithmetic operations through a similar biologically-based method.

Conceptually, only three operations—duplication, triplication, and division by six—are necessary for universal computation. Our system can execute any instruction set of a register machine, allowing for the transition between instructions, including jump commands.

In the final section, we describe our DNA-like computational model using a membrane structure, which is an inherently discrete system reflecting biological compartmentalization. This structure houses strings and their evolving rules, akin to formal grammars used in biological analysis.

Under this model, a string on a computational 'tape' is manipulated through a series of operations, transforming it in a manner similar to a Turing machine. This string initially encodes numerical input and then alters 'instructions,' equivalent to numeric divisions, using a bounded set of pointers during computation.

A register machine program can be emulated by our system, translating numerical information via doubling, triplicating, or dividing by six, with the initial step occurring only once. Rewriting rules deterministically govern subsequent operations.

For duplication and triplication, the necessary transformations involve rewriting the initial or final symbol of the string before copying. In divisions, a string is copied after eliminating specific symbols. The labels associated with these instructions—duplications, triplications, divisions by six, and jumps—are partitioned into distinct sets within the program.

In summary, this work presents a theoretical, DNA-inspired computational framework that offers a novel approach to processing information through biologically reminiscent operations and membrane systems.