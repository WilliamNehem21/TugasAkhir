This paper proposes a novel model for representing and processing directional spatial relationships in a 3D environment, expanding on existing 2D object-orientation-based models. The key concept involves representing actual direction regions as open shapes, thus avoiding calculations that reference the world boundary of these regions. Directional predicates are then transformed into topological operations between these open shapes and closed geometrical objects. The paper also develops algorithms for these topological operations and provides theoretical proofs for their correctness and completeness.

The paper emphasizes the importance of this research for spatial database management systems that need to support queries about the direction in three dimensions. It introduces a three-dimensional approach based on the simplex data structures of points, line segments, triangles, and tetrahedrons, which simplifies spatial operations.

The paper defines a specific topological operation named "interiorintersects," which determines whether a closed shape intersects the interior of an open shape. This operation is fundamental to solving directional predicates. The operation relies on checking whether a closed shape is contained within or overlaps an open shape. The implementation details for various types of open shapes interacting with a box-shaped closed object are provided, demonstrating the algorithm's completeness and correctness.

The object-orientation-based open shape model for 3D space, presented in the paper, is built on the concept of the 'openshape' abstract data type (ADT). Resulting in a new 3D model for direction relations that optimizes I/O and CPU usage during directional relation query processing, this new model is poised to improve filtering effectiveness, consequently enabling more efficient queries.

The paper concludes with an outlook for future research, including the further extension of the openshape base class and the exploration of direction relation queries in a mobile environment, which entails addressing viewer-based directional predicates through derived class operations for the openshape ADT.