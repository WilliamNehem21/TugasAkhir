We share Pullum and Scholz's view that model-theoretic approaches are a critical component of formally analyzing natural language syntax. To address the limited expressive capabilities of monadic second-order logic, we propose a two-step model-theoretic method. We demonstrate our approach using Tree Adjoining Grammar (TAG), a canonical example of a mildly context-sensitive language model, to illustrate a generative formalism that goes beyond context-free constraints.

In TAG, initial trees are constructed such that all internal nodes (including the root) bear nonterminal labels, while the frontier nodes may have terminal or nonterminal labels—with nonterminals indicating possible substitution points. In contrast, auxiliary trees are similar but feature a special 'foot node': a leaf labeled identically to the root, indicating where further adjunction is possible. Additionally, nodes may be marked to either permit or discourage further adjunction. For brevity, only non-adjunct nodes are denoted using an overline.

Adopting an algebraic view facilitates a seamless movement from strings to trees through the mere expansion of operators from unary to multiary. Analogously, we extend string-based grammars to those that manipulate trees, forming a parallel to the Chomsky hierarchy: 'regular tree grammars' align with classic regular grammars, and 'context-free tree grammars' with context-free grammars.

Grammars can be considered mechanisms for applying local transformations to trees. They rely on a finite set of productions, with each production comprising a pair of trees. These productions forge a binary relation between trees, allowing for a transformation of tree 't' into tree 't'' via replacement of a subtree indicated by a production pair. An elementary example of this is substituting a single-node tree with another tree, akin to how context-free string grammars rewrite nonterminal symbols as sequences of terminals and nonterminals.

The concept of lifting in Multiple Context-Free Tree Grammars (MCFTGs) is directly borrowed from general Context-Free Tree Grammars (CFTGs). The translation process for grammars hinges on a 'liftmorphism' that converts alphabet symbols and production rule right-hand sides. To enhance clarity, we omit nullary and unary composition symbols in our examples.

Similarly to a tree-walker automaton for dominance relations, one for precedence must be constructed. Given that the regular tree grammars in our examples are linear—meaning no variable recurs in a production's right-hand side—we can define the precedence in two stages.

Finally, Model-theoretic Order (MSO) transductions serve as classic methodologies for interpreting one relational structure within another. Intuitively, we interpret the output tree based on the input tree. For example, transforming input tree 't1' into output 't2' involves delineating a subset of 't1' nodes using a unary MSO relation and specifying the child relation with a binary MSO relation on 't1' nodes.