This paper addresses the scalability issues encountered when using automatic static checkers, such as SAT-based bounded model checkers, in industrial settings. Specifically, these tools can struggle when dealing with function pointers, defensive programming, and re-entrancy in C programs. These standard practices in industry make modular checking insufficient. The authors propose the use of Design by Contract (DbC) with an add-on method of behavioral subtyping to better locate errors.

While model checking tools are prone to the state space explosion problem and users often need to manually preprocess code to reduce its size, the tool described in the paper, Varvel, integrates DbC into the model checking process by automatically embedding appropriate primitives in the source code, thereby conducting modular checks.

Varvel enhances modular checking capability, especially for higher-order functions (emulated by function pointers in C). It relies on the concept of Behavioral Subtyping to distinguish between internal contracts designed for defensive programming and external contracts that specify the normal functionality of a program module.

The paper also indicates that the improved DbC notation supports modular checking by establishing contracts as module boundaries and maintaining consistency between external specialized behaviors (subtypes) and internal general behaviors (supertypes). This approach aids in handling re-entrancy issues caused by function-pointer calls.

Additionally, the paper suggests that to be practically useful, the model checking tool must also take into account the conformance with programming conventions and the proper initialization of invariants, which is more challenging in C due to the lack of a constructor.

Finally, the authors aim to establish a programming convention that supports advanced checking with tools like Varvel, considering the complex nature of industrial C code and how it is structured both logically and physically. This would aid in leveraging model checking tools in industry more effectively.