The paper discusses the association between two issues in software engineering and the concept of substitution challenges. In the context of developing or maintaining software applications, there is often a need for specific components. Designers or maintainers envision "ideal" components that would perfectly fulfill these needs. The quest then becomes to find real-world components that closely match these imagined perfect ones. The undertaking of composing or maintaining components is essentially an effort to replace these ideal components with actual, tangible alternatives.

The structure of the paper is outlined as follows: the proceeding section explores the role of substitution in the processes of development and evolution. In the third section, the authors introduce a universal model for both components and quality, which is the foundation for all further definitions in the paper. The fourth section details a model oriented around component substitution, complete with rules for replacing both the functional and non-functional aspects according to the proposed framework. The fifth section offers a practical example to demonstrate the potential applications of the model. The sixth section reviews work in related fields.

The aim of the paper is not to redefine components or non-functional properties but to establish a framework for component-oriented substitution that can be applied across various existing models for components and quality. To achieve this, the authors propose a generic blueprint for both.

In addition to the component model, a generic quality model is also defined, incorporating quality characteristics (akin to those in ISO 9126) and metrics. Existing metrics are utilized for assessing and comparing non-functional properties. While there are numerous methods for defining and evaluating non-functional properties, they often concentrate on a singular property or category, like quality of service. However, metrics are versatile and can be applied across different property families, facilitating comparisons, which is why metrics are considered the more effective method for comparison in this context.

A component artifact is associated with quality elements via non-functional properties (notated as NFPs). One artifact might relate to multiple quality characteristics and thus have various NFPs. Each NFP describes how a quality characteristic impacts its associated artifact, using the applied metric. Multiple NFPs tied to a single component artifact might use the same metric but differ in characteristics.

For each envisioned ideal component, a threshold for acceptable substitution deviation is determined by the designer. Considering two components, C1 as a substitute for another, C0, if the difference between C1 and the ideal is greater than C0's maximum allowable deviation, C1's substitution would not be acceptable.