This paper proposes a method for determining the relative occurrence rate (referred to as density) of one formal language within another when considering words of increasing length. Specifically, it explores the mathematical concept of a language's density, which is the likelihood that a word of a certain length chosen at random from one formal language is also part of another. The researchers acknowledge that not all languages possess well-defined densities and present a procedure for deciding whether a given regular language exhibits a calculable density within another regular language.

The method in question utilizes generating functions, which are mathematical constructs that can be applied to analyze formal languages. These functions are complex-valued functions over complex numbers, and for the languages considered in this paper, they are expressed as the quotient of two polynomials with integer coefficients. A particular focus of this method is on the properties of the roots of these polynomials, specifically identifying a dominant real positive root that affects the generating function's behavior.

Furthermore, the paper discusses the process of calculating conditional densities and distinguishing different scenarios using known propositions and cases outlined within the paper. In situations where direct comparison of limiting values (referred to as partial limits) is necessary, the authors offer a specific procedure.

Decision-making about densities is grounded in the representation of languages by deterministic finite automata (DFAs). The paper details a method with an inherent complexity determined by the time required for quantifier elimination in the ordered field of real numbers, which is generally double exponential. However, for simpler cases defined by certain conditions, the decision-making process can be resolved in polynomial time using basic techniques like Sturm sequences.

In conclusion, the research confirms the decidability of determining whether one regular language has a positive density within another regular language, with the general computational complexity bounded by double exponential time due to the quantifier elimination process. Nonetheless, the authors suggest that the specific formulas produced by their algorithm might allow for improved complexity bounds, yet surmise that solving this problem in polynomial time is likely unachievable in the general case.