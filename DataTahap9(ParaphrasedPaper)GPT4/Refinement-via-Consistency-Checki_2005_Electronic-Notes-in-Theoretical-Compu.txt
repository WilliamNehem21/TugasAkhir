This paper discusses the concept of refinement within the scope of the Model-Driven Architecture (MDA) initiative championed by the Object Management Group (OMG). Refinement in MDA is recognized as loosely defined and often misunderstood. The paper highlights the ongoing efforts to provide a clear and precise definition of refinement by emphasizing consistency checks, applicable not just within MDA, but across various domains in Model-Driven Development (MDD).

MDD isn't a specific development method, but a framework that can be adapted using different methodologies like Extreme Programming, Rational Unified Process, or any refinement calculus. Central to MDD is the creation and modification of models tailored to the project's goals, employing diverse modeling languages and processes accordingly.

Surprisingly, refinement is a crucial aspect of MDA, despite expectations to the contrary given that MDA primarily involves UML-based languages, which traditionally lack the formal structure associated with refinement methods. Additionally, MDA's reliance on multi-view languages creates challenges for seamless refinement.

In MDA, refinement typically involves predefined transformations, facilitated by a standard transformation language like QVT, to transition from Platform-Independent Models (PIM) to Platform-Specific Models (PSM), or from PSM to code. Refinement within model types, such as PIM to PIM, often requires custom transformations that depend heavily on the context of the application, where transformations validated by MDA experts are deemed reliable if properly applied.

MDA consists of languages for modeling as well as the application of transformations to these models. MDA languages are generally UML-based, built upon the Meta-Object Facility (MOF), and as such, the transformations in MDA are defined relative to MOF and its foundational constructs.

Applying formal analysis techniques to MDA's semiformal languages presents significant challenges, especially due to the layered nature of the languages, with UML defined in terms of MOF.

Diagrams and non-graphical languages can represent various views of a model, each with an underlying language that includes syntax and a metamodel. The metamodel specifies constraints for the languageâ€”for example, ensuring uniqueness of class names in UML class diagrams. These constraints can often be articulated and checked using the Object Constraint Language (OCL).

For complete model consistency within MDA, structural and state-based rules are not enough due to the multi-part nature of the system model, including PIM and PSM. Additional kinds of consistency checks are needed, such as those ensuring that PSMs are consistent with their specific domain, achieved by applying domain-specific rules through mechanisms like stereotypes or metamodel refinements.

Cross-model consistency, such as between PIM and PSM or between PSM and a domain model, also needs to be addressed. Models must conform to any applicable cross-model consistency rules for their transformation to be considered valid.

In sum, this paper addresses the undervalued aspect of refinement in MDA and MDD and asserts the importance of formalizing its definition and methods to ensure consistency across various types of models and domains.