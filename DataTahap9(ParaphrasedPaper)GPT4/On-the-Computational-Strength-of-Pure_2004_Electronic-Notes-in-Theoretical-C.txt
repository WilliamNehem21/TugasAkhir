In the academic text, various alternative extensions of the ambient calculus (AC) are introduced, including Mobile safe ambients (SA), Robust Ambients (ROAM), Safe Ambients with Passwords (SAP), the Push and Pull Ambient Calculus (PAC), Controlled Ambients (CA), and Boxed Ambients with Passwords (NBA). Collectively, these variants are referenced under the umbrella term Ambient Calculus (AC).

The central unanswered question from earlier research is whether the pure Ambient Calculus, without the "open" capability to dissolve ambients, can still be Turing complete. This inquiry gains importance in light of Bugliesi, Castagna, and Crafa's boxed ambients model which precludes the ambient opening in favor of inter-ambient communication.

The authors demonstrate Turing completeness for a pure Mobile Ambients (MA) fragment without the "open" capability or restrictions by encoding counter machines into pure MA (Theorem 3.6), also proving the undecidability of both termination and weak barbs observation. Although this result had not been previously proven for pure AC lacking the ability to dissolve ambients, a similar encoding of the Pi-calculus was noted within boxed ambients facilitating communication.

ROAM introduces a calculus with synchronized ambient entry, combining subjective and objective movement aspects. The paper explains that Turing completeness results from MA or PAC are extended to ROAM.

The pursuit of minimally Turing complete fragments of AC involves demonstrating potential weakness in smaller fragments. Busi and Zavattaro noted decidability for a non-terminating computation in a MA fragment with the "open" capability but lacking movement or restriction. This paper mirrors that by showing similar decidability in fragments with unidirectional movement capabilities (either only entering or exiting) and notes that computations always terminate in even smaller fragments allowing replication only on capabilities.

The paper is organized to revisit various AC operators and capabilities, discuss Turing complete languages, and explore the computational strength influenced by specific sets of capabilities. Notably, even in languages with constrained replication, the simulation of certain capabilities like entry (in) can be achieved by transforming ambients into a receptive state.

The authors assert that even empty ambients with no movement tools can suffice due to clever use of restriction to mimic mutual recursion, highlighting the power of the "open" capability. They seek to uncover Turing completeness in a setting devoid of this ability.

Lastly, the paper acknowledges results showing that specific process languages terminate and that termination is decidable under certain conditions, while other combinations, particularly involving the "in" capability and full replication, may lead to unbounded ambient nesting and thus an unsolvable problem space for termination. The text concludes with insights into processes with finite computation trees, and effectiveness in constructing these trees to determine whether a given process will have a non-terminating computation.