This paper examines the adaptation of XQuery, an XML query language, to work with RDF documents, expanding its capabilities for querying and inferring knowledge from RDF data. The paper presents an approach that builds on previous work where XQuery is enhanced with specialized syntax and functions to work efficiently with RDF's graph-based structure. It describes a method for serializing RDF in XML format and extending XQuery with functionality to handle RDF triples directly, bypassing the need for serialization-specific queries.

The authors also explore how to implement XQuery extensions for RDF in a logic programming context. This involves translating both XML and RDF documents into logic programs using facts and rules and then processing queries through logic rules to infer additional information from RDF data. They propose a system where RDF triples are represented as facts in a logic program and additional logic rules are defined for inferral based on RDFS semantics. Transitivity and other RDF(S) relationships are calculated using these logic predicates.

The paper goes on to detail the methodology for translating XML documents into logic programs and vice versa, emphasizing the reconstruction of XML documents from logic program output. It also discusses the peculiarities of translating XML hierarchies into a logic programming framework, including node numbering and parent-child relationships.

Finally, the paper concludes by outlining how the proposed system can handle query outputs in XML format and how it integrates namespaces in the output documents. This approach allows for the query results to be serialized as RDF if needed, facilitating flexible input/output handling and the composition of queries.

In summary, the research aims to extend XQuery to support RDF, leveraging logic programming to enable efficient querying and knowledge inference and enabling RDF/XML documents to be both the source and target of queries.