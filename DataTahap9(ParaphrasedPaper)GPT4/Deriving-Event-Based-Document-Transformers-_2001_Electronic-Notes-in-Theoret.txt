This paper discusses how to efficiently transform structured documents by creating an event-based document transformer from a specification that usually applies to tree-based document transforms. Traditional tree-based transformers build an entire document tree in memory, which can become unmanageable with large documents or limited memory. Event-based transformers, which process a stream of parsing events, are more memory-efficient and can handle larger documents more gracefully, but they are typically less expressive and harder to program than their tree-based counterparts.

To address these issues, the authors propose an algorithm that works within the framework of attribute grammars (AGs). They apply a deforestation method to obtain an AG that processes parsing events directly without building intermediate trees. The algorithm then derives an attribute evaluation scheme for the event-based transformer, which separates semantic rules into attribute dependency and value construction. By analyzing the patterns of attribute dependencies, they can model an evaluation scheme as a finite state machine, which only keeps partially evaluated attribute values to minimize memory usage and outputs the result incrementally during transformation.

The paper outlines a method for transforming structured documents through a one-pass program that writes output data as it reads input eventsâ€”thus acting interactively. The transformations address simple, modular functions such as tag renaming or removal and are described in a "declarative style," avoiding the need for intricate low-level stream processing. The usefulness of the algorithm is somewhat limited, however, as it only applies to AG specifications under a specific condition called the quasi-SSUR condition.

The authors have implemented a prototype based on their algorithm for a simplified XML-like language and are exploring extensions to increase the expressiveness and range of possible document transformations. They aim to improve the handling of embedded text and labeled data in structured documents, expecting to present their extended work in the future.