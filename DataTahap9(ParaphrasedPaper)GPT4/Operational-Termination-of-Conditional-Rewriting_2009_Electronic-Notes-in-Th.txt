This academic paper addresses the concept of termination, which is critical in the context of rewriting systems. For conditional rewriting systems, proving termination involves not only demonstrating that the rewriting process itself is well-founded but also that the evaluation of the conditions within the system always reaches a conclusion. This dual requirement is encapsulated by the term 'operational termination'.

The key contribution of this paper is the demonstration that it's possible to analyze the operational termination of a conditional rewriting system by transforming it into an unconditional rewriting system and checking its termination. This transformation leverages a syntactic technique that is similar to one used in previous studies on ordinary conditional rewriting. By applying this transformation, existing methods for ensuring the termination of unconditional systems—particularly methods using dependency pairs—can be employed to prove the operational termination of conditional systems.

The paper is structured as follows: Section 2 elaborates on the rewrite relation, Section 3 introduces and formulates the concept of operational termination and establishes that for unconditional systems, termination and operational termination are equivalent. Section 4 details the specific syntactic transformation that maps a conditional rewriting system to an unconditional one and illustrates that if the resulting system is terminating, it confirms the operational termination of the original system. While proofs are not included in this condensed version, the full version of the paper contains these, as well as examples of complex conditional systems, whose operational termination is established through this transformation and termination techniques.