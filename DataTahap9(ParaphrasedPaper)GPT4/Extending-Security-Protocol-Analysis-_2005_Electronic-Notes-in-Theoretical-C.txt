Our paper argues that current formal analysis tools are underutilized in helping design complex and modern security protocols, especially in constrained environments or security APIs. We suggest that common assumptions, like perfect encryption, need to be reevaluated and other threats, such as partial information leakage, should be included in analysis to keep these tools relevant and widen their adoption. We present simple protocols to demonstrate various relevant attacks not yet addressed by formal analysis tools and create a wishlist for future research and development. 

Moreover, theorem provers operate on a more abstract level, seeking logical chains for proofs of certain protocol properties or counter-examples, while reasoning logics like BAN logic have been more about retrospective analysis than flaw identification despite their role in formal analysis development. Researchers often tailor and enhance these logics for protocol design.

Analysis of Security APIs is similar to protocol analysis. Imagine a cryptographic processor, akin to a PC in a safe, that's network-connected and offers services to users like a trusted third party. Through its API, it allows offloading sensitive and computationally heavy security tasks to a device optimized for these purposes. These devices, having potentially robust security features and specialized storage for cryptographic keys, are foundational to international funds-transfer and credit card systems.

Issues like leaked information from error conditions or codes, revealed either directly via messages or indirectly through timing patterns, are common in practice. Attacks on RSA padding schemes by Bleichenbacher and Manger, which exploit error responses to reveal plaintext information, illustrate the importance of identifying and understanding such leaks, which might not be obvious during design but become apparent during coding or development. Addressing these challenges in automated security API analysis and extending tools to handle situations like reasoning about 3DES as three separate crypto operations is critical.

In essence, there is clear value in enhancing formal analysis tools to cover new threats and scenariosâ€”advancements that will make them more practical and effective for real-world security design and implementation.