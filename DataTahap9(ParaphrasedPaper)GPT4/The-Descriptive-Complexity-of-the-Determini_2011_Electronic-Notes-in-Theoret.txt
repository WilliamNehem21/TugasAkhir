In the field of descriptive complexity, research focuses on characterizing complexity classes using various logics. The foundational result of this field was established in 1974 by Fagin, who demonstrated that existential second-order logic captures the complexity class NP. Since then, additional connections between certain logics and complexity classes have been identified. For example, extending first-order logic with the least fixed-point operator captures class P, and similarly, second-order logic with the transitive closure operator captures another complexity class.

In computational complexity theory, algorithms are evaluated based on their time and space requirements. Classes of problems can be organized into hierarchies based on these criteria, amongst which the class P consists of problems solvable in polynomial time by a deterministic Turing machine, and class NP includes those solvable in polynomial time by a nondeterministic Turing machine.

First-order logic (FO) is considered to have limited expressive power; however, it can be strengthened in various ways, such as by increasing variable order to create higher-order logics, adding operators like transitive closure and the fixed-point operator not expressible in FO, and by considering formulas of infinite size, resulting in infinitary logics.

This paper investigates how the least fixed-point operator can enhance higher-order logics. It introduces definitions and known expressiveness results before examining how the least fixed-point operator extends the power of FO. The main contribution of the paper is to establish which complexity classes are characterized by higher-order logics combined with the least fixed-point operator. It also explores the expressive capabilities of these logics, leading to conclusions about their computational strength.

The study delves into other fixed-point types, including inflationary and partial fixed-points. Previous work showed that to incorporate these into higher-order logics, one must increase the logic's order by one and two levels, respectively. The paper presents analogous findings derived from one of its primary theorems.

A broader investigation examines the impact of integrating the least fixed-point operator across the entire hierarchy of higher-order logics. This yielded a proof showing that each level of this hierarchy corresponds to a level within the deterministic exponential time hierarchy.

A particularly interesting observation from this research is that the inclusion of the least fixed-point operator results in an exponential increase in computational time capacity. For example, first-order logic captures the logarithmic hierarchy, but when enhanced with the least fixed-point operator to become FO(LFP), it can capture class P, an exponential jump in capability. This exponential improvement is also seen when the least fixed-point operator is added to higher-order logics. The paper concludes with several corollaries that follow from the main result, underlining the significance of combining the least fixed-point operator with higher-order logics in descriptive complexity.