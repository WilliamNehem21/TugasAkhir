In this study, researchers examine the critical need to address job scheduling based on priority in systems where certain tasks are time-sensitive and cannot be delayed. The researchers acknowledge the importance of job priority as a vital component for devising efficient scheduling strategies. Ghanbari et al. proposed a priority-based job scheduling technique (PJSC) that leverages the Analytical Hierarchy Process (AHP), a multi-criteria decision-making (MCDM) tool, to account for multiple attributes, complexity, and finish time. The study suggests that this algorithm could be refined to further reduce the makespan by incorporating additional quality-of-service (QoS) parameters.

Priority scheduling, a traditional approach to task selection based on QoS parameters, is compared by Xiao et al. to a priority-based strategy that aims to identify optimal choices for given scenarios. This strategy is found to be superior to the first-come, first-served (FCFS) technique and could be further improved with more frequent information on its application. The paper proposes negotiating with users over their waiting times as a benefit to others.

Yang et al. address the issue that fair queuing algorithms work well for data applications but fall short for real-time services, such as voice or interactive videos. They introduce a Class-Based Weighted Fair Scheduling (CBWFQ) approach that enhances network performance, latency, and fairness but does not necessarily decide on scheduling strategies when job priorities are identical.

Lakra et al. suggest that focusing on multiple objectives with QoS as a core criterion can improve data center throughput. Their approach inversely correlates the QoS allocation with job priority, aiming to minimize the total execution time. This method could be further enhanced by refining the categorization of VMs and tasks and considering more QoS parameters. Their experiments were conducted using the CloudSim simulator.

The researchers describe an algorithm to assign "task credits" based on pre-determined task lengths stated by users. They recommend a strategy of selecting tasks from both ends of a sorted array to manage variable task lengths effectively and prioritize them accordingly.

The paper details the research methodology, experimental setup, and simulation results. It emphasizes that CloudSim is a preferred general-purpose simulator for its features and popularity. The study notes that task queuing times lead to longer memory occupation, and it highlights significant improvements in makespan and memory usage within the proposed system.

Additionally, network operations benefit from reduced makespan and processing time, freeing up resources sooner than before. The proposed multiple credits-based scheduling algorithm, which integrates a modified k-means clustering technique, shows a considerable decrease in makespan, processing time, and total computational cost. The researchers observed spikes in the graphs for the proposed system and identified the need for improved load balancing techniques.

The paper concludes with prospects for future work incorporating more QoS factors and effective load balancing methods to further enhance cloud computing performance.

Lastly, the paper provides biographical information about the authors and their academic and professional backgrounds, highlighting their contributions to the field.