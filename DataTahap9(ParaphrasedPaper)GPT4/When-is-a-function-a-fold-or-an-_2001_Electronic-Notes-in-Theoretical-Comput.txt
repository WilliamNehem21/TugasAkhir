This article explores the conditions under which a program can be implemented using either the 'fold' or 'unfold' operators, focusing on the specific case where programs are total functions between sets. The authors present a necessary and sufficient condition for when a set-theoretic function can be expressed using 'fold' and a corresponding condition for 'unfold'. These criteria are straightforward and allow for effective program code while maintaining structural and clarity aspects of the source code. Additionally, the results help identify cases where two phases of a program cannot be merged into a single 'fold' or 'unfold'. The article suggests the potential use of an automatic testing tool like QuickCheck to discover counterexamples to certain inclusions.

The authors express their gratitude to Lambert Meertens for contributing to the simplification of their proof and to anonymous reviewers for valuable feedback. Graham Hutton's research was supported by an EPSRC grant for structured recursive programming, and both Hutton and Thorsten Altenkirch were supported by the ESPRIT working group on applied semantics.