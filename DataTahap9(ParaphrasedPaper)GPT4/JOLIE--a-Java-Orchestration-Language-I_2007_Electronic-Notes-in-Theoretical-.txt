The unique feature of Jolie lies in its integration of solid mathematical foundations—specifically, an orchestration process calculus—with a user-friendly programming environment that resembles C/Java syntax rather than XML. This approach differs from other web service orchestration languages that often retroactively define formal semantics following the development of syntax. Additionally, unlike the ongoing developments for WS-BPEL, which is only now considering Java extensions, Jolie was built with these aspects from the start.

Jolie plays a critical role in advancing research on orchestration and choreography languages, allowing for empirical testing of theoretical concepts in actual execution contexts. Jolie incorporates constructions beyond its process calculus origins, such as a loop construct (while) and a sleep function for timed process delays, essential for orchestrators dealing with potential service or communication failures.

Developed in a modular and encapsulated manner, Jolie supports protocol and communication medium independence, making it easily extendable to cater to various communication methods, including SOAP, internet sockets, and shared files.

Communications in Jolie are primarily socket-based, with orchestrators waiting for messages on a network port. Senders need to know the recipient's location, including hostname and port, which is specified in Jolie through location definitions. Operation names within the orchestrator can be decoupled from the invoked external operation names, promoting code modularity.

In its syntax, a definition in Jolie establishes a callable procedure resembling a C function body. Jolie also includes a messaging mechanism where the sender notifies the recipient by sending message variables to an identified location. Additionally, Jolie features constructs, such as linkin and linkout, for synchronizing parallel processes, enabling non-deterministic process execution based on received inputs.

Future work for Jolie anticipates the development of a new format for location definitions to fully leverage its communication medium independence. Network sockets are the current standard for communication, but the new format aims to include alternatives like files and internal pipes. Goals also include facilitating operations block interactions with WSDL definitions, utilizing Jolie's object-oriented internal operations and communication core's data protocol independence to interact with various external applications using different protocols.