In lazy functional programming languages, certain syntactic tools are used to fine-tune the default approach of delayed evaluation for greater efficiency. Although the function arguments in these languages are not calculated until absolutely necessary, which lets them handle potentially problematic data, there are performance costs involved. Languages like Haskell offer annotations for data type arguments to trigger their immediate processing. 

Separately, earlier attempts to harness customizable strategies in programming have been made, with Kirchner addressing their potential and challenges. These encompass creating languages and tools for crafting strategies, analyzing strategic rewriting issues like reachability and termination, applying strategies practically across various domains from theorem proving to bioinformatics, and adapting them to current technological demands.