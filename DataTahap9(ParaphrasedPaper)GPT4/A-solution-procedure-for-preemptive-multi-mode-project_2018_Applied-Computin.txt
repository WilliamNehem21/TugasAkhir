Paraphrasing of the academic paper:

Abstract:
Considerable research has been dedicated to studying the multi-mode resource-constrained project scheduling problem (MRCPSP), but the explorations into its preemptive variant are scarce. This study delves into the preemptive multi-mode resource-constrained project scheduling problem (P-MRCPSP) that seeks to minimize total project duration, considering that tasks can switch modes upon resumption post-preemption. The problem is deemed a more realistic evolution of classical MRCPSP. A binary integer programming approach is formulated to represent it. Given its NP-hard complexity, a simulated annealing (SA) algorithm is employed to discover either an optimal or an acceptable solution. Performance is gauged against 480 scenarios, analyzing solution quality and compute time, indicating that the SA method is both potent and viable. Mode-switching notably betters project completion times.

Research contributions are fourfold: The study introduces a binary integer programming model for P-MRCPSP with the aim of minimizing project duration while accounting for resource limitations and task order. This model allows for changing task execution modes after preemption. An effective SA-based meta-heuristic is offered because of the problem's complexity. The utility of this SA method is then validated, and the model's potential for reducing project completion time is examined.

The rest of the paper is structured as follows: Section 2 details the problem, Section 3 describes our algorithmic approach, Section 4 presents computational results, and Section 5 concludes the discussion.

Conventional MRCPSP and P-MRCPSP assume set modes for tasks, which does not reflect scenarios allowing for mode changes during project execution. This paper proposes an SA algorithm to address P-MRCPSP-MC. For SA quality increases, a dynamic heuristic contributes to schedule building, with Lingo 11 providing comparative benchmarks.

SA's origins in statistical mechanics now present it a robust combinatorial optimization tool. SA begins with an initial solution and temperature and iteratively explores neighboring solutions, accepting new solutions based on probability and temperature, gradually refining to a solution. Crucial to SA's success is the cooling schedule, which requires adjusting to the specific problem.

While past studies have probed schedule representation for heuristic construction in RCPSP, Hartmann and Kolisch's work suggests activity-list-based methods outperform others. This study adopts the activity-list approach with a work-resource balance representation in SA.

Parameter selection is vital for SA efficacy. In this study, Taguchi's method tunes the algorithm, with computational experiments determining the stop criterion. Results show SA's high performance with low deviation and swift calculation, compared to Lingo 11 results.

In summary, this paper offers a fresh integer programming model and an SA approach for P-MRCPSP-MC, aimed at minimizing project completion time while accommodating for changing task modes. Tests demonstrate that the SA performs well, offering significant averages in project shortenings. Future work should extrapolate the mode change concept to other MRCPSP extensions.