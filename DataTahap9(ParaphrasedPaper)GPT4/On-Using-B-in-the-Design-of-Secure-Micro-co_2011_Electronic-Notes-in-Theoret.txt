The paper discusses how the disciplined and incremental formal development of safety-critical software is common in industries like rail systems but hasn't been as extensively applied to hardware development. Hardware typically uses formal methods for verification and for gate-level transformations and optimizations. The authors share their experiences in formally developing a macro-cell in a way that could result in the creation of digital circuits free of functional errors. They suggest a workflow to produce circuits that are not only correct by construction but also robust, particularly for secure chips.

The initial phases of development heavily involve writing and analyzing test programs and simulations, relying on the experience of specialized designers. The verification process is not standardized and heavily relies on peer review, due to the lack of tools for verifying specifications written in natural language.

The authors adapted the B formal method for the development of their digital circuits. Traditional microelectronics tools use formal methods, but only after initial code has been written, and without the designer's involvement. The most costly errors are often introduced before coding, during specification. The B method helps to identify and correct errors early in the design process.

The paper describes the methodical refinement of the system model, introducing elements like an automaton to handle exceptions, interrupts, and reset conditions, and a local stack to manage nested interrupts. These refinements are made in steps to manage complexity. The concept of a 'segment' is also incrementally defined, starting as a set of addresses and evolving to include address ranges with start and end points. This approach aids in translating the design into VHDL for synthesis.

The authors also acknowledge that their development approach might not inherently preserve security properties such as confidentiality or integrity, suggesting that additional formal methods should be applied at each step to address these concerns. They reference other works that focus on various security properties.

The paper notes an invariant in their model that only applies to uninterrupted circuits, meaning it assumes state variables are not modified unpredictably. This enables them to prove that under these conditions, an alarm condition will not occur.

Regarding the design's security aspects, they start with a standard algorithm known to have certain desirable security properties against power analysis attacks. The verification of the algorithm uncovers complex situations, leading to recommended improvements. These improvements were validated and accepted by designers based on the effectiveness shown in verification.

In essence, the paper promotes a formal method-based workflow for the development of hardware that aims at creating robust, secure, and error-free digital circuits, recognizing the challenges and intricacies involved, and the additional steps necessary to ensure security concerns are also adequately addressed.