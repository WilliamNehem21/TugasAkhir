The dependency pairs method is a dominant technique for verifying the termination of rewriting systems, essential for most automatic termination tools. It has been extended for use in termination proofs of context-sensitive rewriting systems. An innovative aspect of this method involves using collapsing dependency pairs, where the right-hand side consists solely of a single variable, crucial for accurate termination arguments in this context. However, these pairs tend to create larger cycles in the context-sensitive dependency graph, complicating termination proofs. This paper presents a strategy to alleviate this problem by selectively removing edges from the graph, which streamlines and accelerates termination proofs. Additionally, the paper discusses the application of narrowing dependency pairs to context-sensitive rewriting, a concept initially proposed by Arts and Giesl to enhance termination proof efficiency. This technique allows for the replacement of a dependency pair with a simpler set of pairs, potentially easing the analysis of the dependency graph.

The paper is structured as follows: introductory concepts are covered in Section 2; Section 3 examines the role of hidden symbols in termination proofs; Section 4 explores using these symbols to refine the context-sensitive dependency graph; Section 5 discusses the adaptation of narrowing dependency pairs to the context-sensitive scenario; Section 6 provides experimental evidence supporting the effectiveness of these methods; and Section 7 concludes the discussion.

The authors introduce a method of simplifying the context-sensitive dependency graph by restricting outgoing links from collapsing dependency pairs to those headed by hidden symbolsâ€”specific defined symbols found in non-replacing positions within rules of the term rewriting system. This adjustment significantly boosts the efficiency of dependency graph-based termination proofs. Exploring how narrowing can be applied to context-sensitive dependency pairs reveals its potential to streamline the dependency graph further. By incorporating these techniques into the termination analysis tool mu-term, the authors have demonstrated improved results, both in terms of the number of examples successfully proved to terminate and the reduced time required for these proofs.