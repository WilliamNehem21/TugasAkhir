This paper challenges a common assumption in constructive mathematics that computations used to demonstrate the existence of an object are deterministic. Many proof assistants, like Coq and Nuprl, operate on deterministic computational systems, even though researchers have explored non-deterministic computation within constructivism. 

The paper suggests that non-deterministic computation hasn't been integrated into proof assistants' underlying systems. However, the authors argue that stateful representations can record computations, reconciling non-determinism with the constructive content (cc) principle by memoizing computations in proofs of totality.

The discussion extends to constructive type theory but aims to be relevant to set theory, requiring exploration of type theories that expressively model both. The authors use tripos and topos theories as frameworks to develop models of type/set theory and higher-order logic, disregarding certain complex dependencies for simplicity.

The authors point out that the application's determinism is vital for realizability models to uphold the cc principle. Nevertheless, they illustrate that determinism is not necessary for the realizability interpretation of higher-order logic; instead, it is an historical artifact. They introduce relational combinatory algebras (RCAs), which generalize the concept and demonstrate dramatic implications for constructivism, such that even a simple probabilistic event like a coin flip could invalidate the cc principle.

One intricacy with RCAs is that, unlike deterministic PCAs, they require a termination predicate since the same application might terminate in one execution and not in another. This non-determinism poses challenges for realizing the cc principle, as shown by a contradiction derived from attempting to relate totality realizers for a function with its subrelations in a non-deterministic context.

Finally, the paper notes that its contributions have been mechanically verified, promising formal rigor, and invites readers to engage with the Coq proofs for a detailed understanding while providing an appendix detailing the formal definitions and statements of lemmas and theorems, though not the proofs themselves.