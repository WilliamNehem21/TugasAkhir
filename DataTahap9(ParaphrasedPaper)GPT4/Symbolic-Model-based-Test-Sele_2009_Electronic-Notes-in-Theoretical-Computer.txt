This paper discusses the challenge of selecting test cases to verify if a black-box implementation of a reactive system conforms to its specifications, without seeing its internal structure. Previous approaches for this problem used finite-state models called Labelled Transition Systems (LTS) and were guided by the input-output conformance (ioco) testing theory. The current work extends these methodologies to specifications that have an infinite number of states, represented as automata with variables, to handle more complex systems that include data variables in their design.

In conformance testing, the system's interaction with the environment is examined through test cases to detect faults and build confidence in the system's implementation. Automatization of test generation using formal models enhances both the quality and cost-efficiency of this process. For over a decade, model-based testing using behavioral models has been supporting test generation and providing an oracle for verdict assignment in test cases.

This paper introduces Input/Output Symbolic Transition Systems (IOSTS) as a means to model data within automata. IOSTS models are similar to automata but are enhanced with variables, inputs, and outputs. They are designed to simulate reactive programs without recursion, allowing one to directly derive test cases from the IOSTS model itself. A tool named STG implements the test selection algorithms proposed in this paper.

The authors acknowledge that some existing approaches use symbolic execution or constraint resolution, which can be more precise but are limited to deterministic systems or finite system unfoldings. They propose using an approximate analysis to select abstract test cases that preserve information about non-conformance. These abstract test cases can then be concretized using techniques such as constraint resolution.

The paper outlines the IOSTS model in detail, explaining how variables are used to represent the system's state and how transitions are defined with guards and input/output actions. Conformance testing compares observable behaviors and includes quiescence observations to see if the system's inactive states match those allowed by the specifications.

In selecting test cases offline, a non-deterministic algorithm unfolds the canonical tester to produce test cases. To focus on specific behaviors, test purposes are used to narrow down relevant test scenarios. The test generation method introduced in this paper relies on attaching a defined intention to each test case using an IOSTS observer.

While the paper confirms the theoretical soundness and exhaustiveness of this approach, it also recognizes imperfections in verdict accuracy due to over-approximations, particularly with the inconclusive (inconc) verdicts. The test cases are input-complete; they can handle any input depending on the current state and constraints.

The approach focuses primarily on deterministic specifications due to its simplicity, but nondeterministic specifications could also be considered with some limitations. Future work aims to extend the methodology to incorporate time, recursion, and concurrency in system models. This includes dealing with partial observability and ident-ifying determinizable subclasses that align with practical applications.

Other goals include merging these techniques with coverage-based test selection and exploring more semantically meaningful coverage criteria that support more nuanced conformance testing objectives.