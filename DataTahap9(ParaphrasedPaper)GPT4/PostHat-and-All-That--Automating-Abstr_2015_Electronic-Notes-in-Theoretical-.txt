The paper discusses a computing approach that employs a dual estimation strategy. It keeps track of both a conservative estimate (under-approximation) and a liberal estimate (over-approximation) of the correct result. A key feature of this two-sided (bilateral) algorithm is that it can safely return the liberal estimate if the computation is interrupted due to time constraints. Throughout the computation process, the algorithm dedicates resources to refine the liberal estimate, with the potential for further refinement if more time were available. This type of algorithm is designed to improve its output progressively over time.

In the context of the TSL (Temporal Stream Logic) meta-language, the paper describes an automated extension to TSL expressions and functions to craft sound, yet liberal, transformations (over-approximating transformers). These transformations are utilized by conventional analysis algorithms to produce inductive a-invariants, which are properties that hold across iterations of a process. Yet, due to this method of transformation, there is often a decline in the exactness of the analysis. Consequently, while these analyses are sound, they typically do not yield the most optimal inductive a-invariants possible.