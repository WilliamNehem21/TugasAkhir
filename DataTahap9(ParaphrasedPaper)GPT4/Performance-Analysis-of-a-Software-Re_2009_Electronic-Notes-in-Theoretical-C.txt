In this study, we introduce a method to model mobility and performance at the design stage by transforming a UML 2.0 model into a PEPA (Performance Evaluation Process Algebra) nets model. This allows for the subsequent performance analysis of the modeled system. We apply our approach to assess the performance of a software retrieval service that uses knowledge-driven agents to enable mobile users to select, retrieve, and install software.

The paper is structured as follows: Section 2 provides an overview of the UML diagrams and PEPA nets formalism, and details of the automatic conversion process from UML to PEPA net. Section 3 presents a case study of the software retrieval service, describing the service itself, its UML model, its translation into a PEPA net model, and the ensuing performance analysis. The paper concludes with final remarks and potential future extensions of the research in Section 4.

We clarify the semantics of interaction operators used in our approach. The "alt" operator allows for a choice between behaviors, "par" represents parallel merging of behaviors, and "loop" defines a repeatable interaction fragment. Additionally, we explain the rules regarding token distribution in the model.

In our PEPA net representation, we distinguish between two types of state changes and associate different action types with each. The net includes PEPA contexts at each place, containing static components and cells for storing tokens.

Our case study involves several agents, including four static agents (knowledge engineer, broadcaster, Alfred, software manager) and four mobile agents (integrator, trader, browser, salesman), each playing a role in the software retrieval process. The user computer area has a static agent, Alfred, which manages information storage and data display. The software area has a software manager agent providing the browser agent with software catalogs based on user needs gathered by Alfred.

We further detail the modeling of the software retrieval service by first presenting the UML model, then discussing the generated PEPA net model. The service is modeled using an Interaction Overview Diagram (IOD), translating agents into object types with corresponding behaviors represented through state machine diagrams.

Communication in the system is modeled such that mobile agents travel to specific nodes to interact with static agents. We provide examples of the interactions between these object types and their movements in the system.

The paper notes that while several tools have been developed to support UML 2.0 features, not all support the entire range of UML 2.0 constructs, particularly IODs. Our approach is implemented using the Enterprise Architect tool which supports the necessary features, including IODs and XMI import/export.

Finally, we express interest in addressing issues like design consistency and completeness in future work and remark that existing literature does not focus on IODs which are unique to UML 2.0. We also aim to investigate the complexity of the translation process.