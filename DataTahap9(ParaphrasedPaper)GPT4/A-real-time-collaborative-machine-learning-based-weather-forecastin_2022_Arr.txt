The following are paraphrased versions of multiple academic paper summaries from the given text:

1. David Irwin and colleagues developed CloudCast, a mobile app aimed at providing personalized weather forecasts in the short term. They assessed if the current cloud infrastructure could counteract data and computational delays in weather predictions. The system used a network of collaborative weather sensors and an algorithm for predicting imminent weather events. They noted that forecasts for the immediate 10 minutes were quite precise and that the entire process to deliver a 15-minute forecast to a user took a 2-minute delay. The findings suggested that both commercial and research-oriented cloud platforms are suitable for real-time weather prediction services.

2. Bobby D. Gerardo's research team devised an SMS-based flash flood warning system, which utilized a setup that included an ultrasonic sensor, pulse detector, wireless modem, a microcontroller board, and a solar-powered battery system. Water level and flow rate data were collected, sent to a server, and then used to train a linear regression model for future water flow predictions. This model helped calculate a risk value to determine the thresholds for issuing flood alerts to subscribers.

3. S. G. Totad's study explored real-time weather forecasting through a cloud-based system using IoT devices. They employed DHT11 sensors, an Arduino board, and a Raspberry Pi to collect temperature and humidity data which was uploaded to a public cloud via ThingSpeak. Historical data was used to conduct a correlation analysis and formulate an ARIMA model for future weather prediction. They found that the model provided satisfactory predictions for two years, but the accuracy declined for predictions beyond that timeframe.

4. A study compared a Convolutional Neural Network (CNN) weather forecasting model to other machine learning methods such as SVM, Linear Regression, and Random Forest for severe weather predictions. Based on severe weather data from the National Centers for Environmental Prediction over five years, the CNN model showed a 33.2% improvement in detection of severe convective weather events over other algorithms when assessed using skill scores.

5. The text discusses various technological frameworks and the potential improvements from collaborative efforts in weather forecasting. It also highlights the ease of deployment and scalability offered by the multi-platform applications suggested.

6. To access an API, the jsoup class in Java was employed to open a URL connection and retrieve HTML data that was then parsed into a JSON object for further use.

7. A web application was developed in Eclipse IDE to display real-time weather data charts and offer downloads of historical data. The web app, hosted on IBM Bluemix, interacted with analytics results from cloud or local servers.

8. The k-Nearest Neighbours (KNN) algorithm, a simple machine learning technique using Euclidean distance for regression, is discussed in the context of predicting based on the average of the nearest data points.

9. Collaborative sliding window cross-validation methods were used within the study to gauge the performance of different algorithms, with the observation that machine learning techniques such as MLR had a lower average error compared to deep learning networks like CNN, with the MLR demonstrating superior ability to uncover non-linear relationships in data.

10. The work of Mimboro et al. on an AIoT-based weather monitoring system for oil palm plantations using a Recurrent Neural Network algorithm was acknowledged, as presented at the IEEE 5th International Conference on IT, Systems and Electrical Engineering (ICITISEE) in 2021.