Using the provided syntax, the academic paper discusses how to represent various computational concepts. The "if...fi" construct allows for expressing nondeterminism, which is the ability of a program to make a choice from multiple available options. Infinite nondeterminism is denoted by "x:=?" and signifies that the variable x can take on any arbitrary natural number. The "do...od" loop is used to represent repetition or iteration in the program.

Expressions and boolean expressions are represented by 'e' and 'b', respectively, and it's assumed that the evaluation of any expression does not cause an error under any state. However, errors can be deliberately invoked with an 'abort' command or might occur implicitly when an 'if' construct is not applicable.

In the context of computing the maximal fixed point, as described on page 175, the paper compares this calculation to the function n^2, which is continuous although its continuity hasn't been proven or used in this paper. When this function is applied to a certain example, it demonstrates that stability of approximation can be reached quickly—in just two steps—starting from an empty relation. The calculation is much simpler than the previously mentioned method, but it's suggested that it might be fruitful to conduct a study similar to the one in the paper, which would utilize union and intersection operations as parameters in the analysis.

The paper also contrasts these findings with the typical Smyth ordering where the validity of total correctness formulas is considered. In Smyth ordering, the set of valid total correctness formulas for code segment c1 is always a subset of those for c2 when c1 approximates c2, indicating that this logical characterisation maintains monotonicity. In contrast, with the methods discussed in the paper, this property holds across all cases.