This paper discusses the online chain partitioning problem as first formulated by Kierstead in 1984, which is approached as a game between two entities named Algorithm and Spoiler. Algorithm represents an online algorithm while Spoiler embodies an adversarial figure aiming to complicate the task for Algorithm. The game is played in rounds with Spoiler introducing a new element 'x' into a partially ordered set (poset) and establishing relations between 'x' and existing elements. Algorithm responds by assigning 'x' to one of the chains it is building, and the objective for Algorithm is to use as few chains as possible, a task complicated by the fact that past decisions limit future options.

The central issue in the paper is determining the value of the online chain partitioning problem for posets of width 'w', which is defined as 'cp(w)'. This value represents the number of chains an online algorithm would be forced to use due to the strategy of presenting points by Spoiler. An algorithm's aim is to never utilize more than 'cp(w)' chains. Based on Szemer√©di's argument and Kierstead's findings, bounds for this value have been established.

The paper then explores variations of this problem. For upgrowing posets, where elements are presented in a way that maintains a certain growing order, the value of the game is denoted as 'cpu(w)'. It is stated that the theorem presented fully addresses this version of the problem.

The paper moves on to discuss results specifically pertaining to the First-Fit algorithm, with Kierstead having demonstrated linearity for the upper bound in 1988.

A twist on the original problem is then introduced where Spoiler presents a poset with representations but requires new intervals to be maximal upon their arrival, called the 'upgrowing version' of the game, denoted as 'cpuir(w)'. A strategy is mentioned that allows Algorithm to perform as well as if it could foresee all of Spoiler's future moves (an offline solution).

Another variant is then presented where Spoiler doesn't demonstrate relations up front, and the Algorithm deals with a 2+2-free poset, referred to as the online chain partitioning problem of interval posets. The paper indicates that there are known bounds for the value of this game for posets of width 'w', denoted as 'cpi(w)', which Kierstead and Trotter have studied.

The paper also illustrates the practical application of poset theory in task scheduling, where tasks are modeled as a poset '<' with the understanding that task 'tj' depends on the output from task 'ti' only if 'ti < tj'. An optimal solution finds all jobs assigned to a processor form a chain, which saves time and avoids unnecessary delays. Solutions are represented using poset diagrams, showing how to arrange task executions to minimize the waiting time for task dependencies.