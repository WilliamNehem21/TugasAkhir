To lay the groundwork for discussing the approximate nature of functions, it's important to define functions and their parameters with clarity. When a function f(x1, ..., xk) is only defined for specific variables x1 through xk and yields values within a set X, it falls into a particular category.

The next step is to describe an operation that allows us to replace variables within a function. For instance, in the function f(x,y) = xy, we might replace x with a and y with b, resulting in f(a, b) = ab. Alternatively, by substituting z for both x and y, we would get f(z) = z^2. This operation enables us to either switch variable names or alter the actual function. Though we formally define variables as v={v1, v2, ...}, we will actually use any lowercase letter to represent them.

Definition 3.2 focuses on function algebras. Assume that B is a collection of basic functions and O is a collection of operations. The function algebra FA[B; O] is the smallest set of functions that includes B and is closed under the operations in O. For simplicity, the elements of B or O are often listed in a comma-separated format.

We assume that all sets of functions, including ones formed with function algebras, inherently contain variables and are closed under substitution (where substitution is an operation included in all function algebras). A function algebra may allow two different construction methods for the same function, which emphasizes its syntactic characteristics—a point we will explore further in section 5.

A previous lemma illustrates how approximating an operation can be practical. To demonstrate that one function algebra contains or approximates another, working inductively within that algebra is a straightforward method. Furthermore, for related claims, a similar approach can be adopted. The concept of operation approximation allows us to establish necessary resources for approximation just once, and then apply this knowledge in various settings. This aligns with our broader goal of developing universally applicable tools within the approximation method framework. Later, we will show how to generally approximate composition, which we use for two specific cases within this paper.

Definition 4.1 introduces DP(F)—the discrete part of a class of functions F on R. DP(F) is defined as the class of functions from F that have both domain and range in N, with these functions further restricted to the domain N.

We construct a function algebra with the universe Q, which serves to approximate another function algebra denoted as L (Corollary 4.24). This algebra can then be interpreted into another, FA[N] (Corollary 4.12). Applying the transitivity of approximation relationships, we deduce a theorem. The advantages of this approach are discussed later in the paper.

It's emphasized that the work presented here is mainly a preparation for a theorem in the subsequent section, where we reuse Corollary 4.24. The next section requires proving the reverse approximation (Corollary 5.24), and both approximations contribute to achieving Corollary 5.25. Therefore, the work in this section is extra but relatively straightforward concerning interpretation.

Finally, an important technical lemma addresses the syntactic structure of the function algebra—specifically, its construction trees (see Definition 3.5). The sensitivity of this structure to the exact definition of the function algebra is noted, as different algebras may yield the same function results but possess distinct syntactic properties.
