Cordova and Moh have introduced a novel algorithm named RDD-DBSCAN that improves upon the traditional MapReduce-based DBSCAN clustering method by utilizing Resilient Distributed Datasets (RDDs) to process large-scale data efficiently in memory. They leverage Apache Spark, a platform that implements RDDs, to enable parallel and distributed processing. This approach effectively enhances the speed of computations by caching intermediate data in memory, reducing computational overhead.

Three experiments were conducted to evaluate the performance of the proposed algorithm. The first used a modified 2D road network of North Jutland, Denmark, with elevation data added, comprising 434,874 data points and four attributes. The second and third experiments were performed on synthetic datasets; the second had one million samples with two features, three clusters, and a cluster standard deviation of 0.4, and the third also had one million samples but with 25 features, three clusters, and the same standard deviation of 0.4. 

The development of RDDs, foundational to this work, was previously outlined by Zaharia et al. in their paper "Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing" presented at the 9th USENIX Conference on Networked Systems Design and Implementation in 2012, which provided the basis for RDD-DBSCAN's in-memory processing capabilities.