Automotive controller software components often use C code generated from Simulink/Stateflow (SL/SF) models and follow the cyclic executive model, which schedules tasks in an execution loop composed of reading inputs, computing outputs, and transmitting results. Traditional test generation methods face challenges with this model due to code complexity.

To address this, researchers have adapted techniques involving bounded model checking, solvers, and slicing into an integrated test generation framework using tools Frama-C and CBMC. A specialized slicing module for cyclic executives was introduced, which helps reduce the amount of code that needs to be analyzed and subsequently lowers computation time in test generation. The method was evaluated on industrial powertrain software components, showcasing effectiveness in reducing the complexity of code. Specific code metrics were used to assess complexity.

This framework demonstrated efficient test case generation to reach target states and was successful in industrial applications. The experiments illustrated that slicing can significantly decrease computation time or enable successful test generation in scenarios where searches may otherwise fail. However, certain preprocessing steps by the slicing tool can sometimes increase test generation time if not enough code is removed.

The framework is considered promising for enhancing test generation in the production of embedded systems and could benefit from user knowledge and advanced techniques for identifying and handling unbounded loops. Future work aims to further reduce test case generation times by exploiting shared variables and correlated targets, potentially through abstract interpretation and symbolic execution techniques.