The paper discusses the limitations of the Object Constraint Language (OCL), which is a part of the Unified Modeling Language (UML) standard, used to define class invariants and operation pre/postconditions. OCL lacks precise static and dynamic semantics, prompting research efforts to improve it for the forthcoming UML 2.0.

Section 2 presents an example that uses a simplified UML meta-model to illustrate OCL challenges in defining invariants. Section 3 suggests enhancements to OCL by incorporating additional operators from the PROGRES language and introducing functional abstraction. It also explores issues with semantics of recursive OCL expressions.

Section 4 proposes a visual constraint definition sublanguage to complement OCL, reviewing related research and discussing various approaches to define semantics, especially graphical negation. It also considers the practicality of visually defined constraints, noting the lack of tools for editing, analyzing, and executing them.

The paper recognizes that current OCL standards (version 1.3) lack necessary features like functional abstraction and a transitive closure operator, hindering the definition of complex relationships. The paper concludes by summarizing its proposals and hinting at future research directions.