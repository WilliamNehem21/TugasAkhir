In this paper, we expand the concept of substitution to include pairs made up of a freshness context and a substitution, but with certain exceptions (as detailed in Definition 3.5). We also introduce a revised version of the consistency test algorithm (Algorithm 1) that can handle these pairs with exceptions.

Furthermore, this work explores a more inclusive concept of instantiation, as well as establishes several findings concerning the consistency of pairs that include exceptions. Section 4 demonstrates how nominal unification algorithms can be adapted to address problems involving nominal constraints. In Section 5, we discuss the existing literature in the field, and then we wrap up our findings in Section 6.

The rest of this paper is dedicated to exploring these issues in greater detail. We will begin by precisely defining what constitutes a solution to nominal constraint problems. Our primary objective is to develop a universal model for nominal instantiation that not only builds upon the well-established principles of substitution-based solution instantiation (as defined in Definition 2.8) but also ensures that the property of instantiation closure is maintained.