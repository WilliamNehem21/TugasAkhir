The paper introduces a novel paradigm for querying graphs that allows for the extraction of subgraphs based on their structure, such as trees or chains, which existing query languages based on regular expressions cannot completely satisfy. This approach uses a form of node replacement context-free graph grammars called parsing graph grammars to define subgraphs in a source graph that belong to the language specified by a given graph grammar. The example provided illustrates extracting web pages about Java Swing classes with a specific hierarchical structure from a website. The paper details the definition of graph query language, the process of rewriting steps in a graph, the formal structure of a graph with embedding, and the rules for dynamic edge labeling. The concept of node replacement (NR) grammars is also introduced, including the alphabet of labels, terminal symbols, production rules, and initial nonterminal symbols. Additionally, the paper discusses different types of symbols (constants and variables) in simple graph models and defines the distinction between a data graph and a query graph. It explains how data graphs, query graphs, and general graphs interact during the derivation process and how a data graph can be recognized by a graph grammar. The paper elaborates on mapping pairs and the derivation of query graphs from parsing grammars, as well as the application of mapping pairs to identify subgraphs within data graphs with desired properties. Lastly, it discusses checking properties with FO(COUNT) formulas for data graphs and mapping pairs and describes an extended graph query that pairs a graph grammar with a FO(COUNT) formula to extract answers from a data graph.