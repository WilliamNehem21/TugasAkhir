In traditional authenticated key exchange scenarios, participants are commonly referred to as Alice and Bob, and they coordinate with a trusted server. Each participant shares a long-term key with the server, signified as K_AS for Alice and K_BS for Bob, with K_AB being the shared key between Alice and Bob.

Previously, secure communication required Alice and Bob to have a shared secret key established in advance of key exchange initiation, limiting scalability because all potential communication partners needed to set up shared secrets beforehand. To enhance scalability while utilizing one-time IDs, a new system is suggested, wherein users share a secret key with a trusted server, enabling secure communication with any other user.

The proposed system presumes that each participant (P1 and P2) has a pre-established long-term secret with the server. Each participant (P3 and P4) is also aware of their own Diffie-Hellman public key and its freshness (P5 and P6). They are also in possession of their Diffie-Hellman private key (P7 and P8). The server (P9 and P10) believes that each principal is in control of their Diffie-Hellman public key. Prior to a session, Alice and the server share a one-time ID (P11), and both consider it fresh (P12 and P13), with this freshness also applied to Bob’s nonce (P14).

The logical conclusions from these analyses are that for Bob, goals G1 and G2 are satisfied in line 10 of the protocol, while for the server, they are derived in line 2. Bob's goals G3 to G6 are respectively derived in lines 6, 7, 9 and 10, or a combination of these. For Alice, her goals G1 to G6 mirror Bob's, also meeting in lines 6, 7, 9 and 10 or a combination thereof.

The one-time ID is crucial for security and must possess two particular attributes: it must be usable only once, and it must be impervious to guessing by adversaries who lack key information.

This academic work introduces a scalable, trusted-third-party-based Diffie-Hellman key agreement protocol leveraging one-time IDs for application-layer anonymity. Using SVO logic, the protocol’s ability to meet authentication goals was analyzed. The study also tackled synchronization issues with one-time IDs and presented computation methods for generating these IDs to solve associated challenges.