The paper discusses Instruction List (IL), a programming language for embedded control systems that has minimal support tools and lacks formal operational semantics despite its inclusion in the IEC 61131-3 standard. The authors develop a formal operational semantics for IL and also create an abstract semantics to simulate program behavior for an infinite set of inputs in a single run. Furthermore, they develop an extended framework for abstract interpretation analysis that can estimate program behavior for all possible inputs and execution paths. This framework, implemented in a tool called HOMER, simplifies analysis for control engineers who may not be familiar with formal methods. While the current analyses provide useful approximations, they sometimes over-approximate and lack precision, which the authors aim to address in future works by exploring different abstract domains and developing a tool for more directed abstract simulation.