Optimization-based methods have been suggested for robot localization, focusing on feature-based maps rather than occupancy grid maps. For instance, genetic algorithms have been utilized both for beacon-based maps in indoor environments as well as satellite image geo-maps in outdoor settings, using laser rangefinders. Kwok et al. have highlighted the effectiveness of evolutionary computing techniques, such as genetic algorithms, particle swarm optimization, and ant systems, in feature-based localization under the presence of noise and dynamic conditions. These optimization methods are also pivotal in localizing nodes in wireless sensor networks, a problem dissected by Mao et al.

In contrast, probabilistic methods like Iterative Closest Point (ICP) and probabilistic scan matching use sensor error and a distance metric to update the likelihood of a robot's pose, often necessitating complex computations like ray-casting or dependent on environment-specific tuning when using likelihood fields. These methods achieve alignment by associating points and iteratively transforming data until convergence.

The paper under discussion advocates for distance functions as a representation of two-dimensional environments, providing a richer and more continuous geometry measure than traditional occupancy grids. This method, inspired by KinectFusion, employs a sensor model based on chamfer distance. Unlike methods requiring feature extraction or ray tracing, the sensor model connects sensor readings directly to a distance function map, particularly useful when the robot's initial pose is approximately known.

While previous approaches required data preprocessing like edge filtering, advances in computing the distance transform efficiently, such as algorithms utilizing GPUs, have eased the computational load, enabling real-time applications such as people tracking in surveillance footage.

Solving the robot localization problem involves minimizing a cost function that measures the discrepancy between sensor readings and the map, defined by the sensor model. With this definition, the task becomes an optimization problem.

Tests using dataset 2 from the Intel Research Lab in Seattle, where the environment map was generated using the GMapping algorithm, show that Adaptive Monte Carlo Localization (AMCL) with beam-based likelihood functions is computationally demanding due to ray-casting, though the ROS-provided code may not be optimally efficient.