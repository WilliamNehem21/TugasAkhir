Reynolds' work typically associates a single predicate with each type, but our approach differs by associating multiple predicates to a single type - one for each 'color'. This multiplicity is crucial for properly interpreting nested parametricity as relying on just one predicate leads to inconsistencies. In our logic, these predicates are definable: we can express that a type 'a' satisfies the parametricity predicate linked to type 'a' at a particular color 'i' with the type 'a ei a'.

For any term 'a' and color 'i', we can denote the erasure of color 'i' from 'a' as 'a(i 0)'. This is an inductively defined term that acts as a 'realizer' of 'a', providing a way to concretely interpret the term after the removal of color 'i'.

Different approaches to parametricity in type theory come with various underlying semantic models. For instance, Krishnaswami and Dreyer used a model based on QPer, while Atkey and others suggested one based on reflexive graphs. Our model is distinctive as it is built upon the concept of 'cubes', which are functions from subsets of colors. Bernardy and Moulin initially realized these cubes as syntactical constructs in a calculus, but in this study, we've integrated them into a presheaf structure for sophistication.

We've put forth a new type theory that internalizes parametricity, and our model has allowed us to prove the system's consistency. To complete a type-checker for this theory, the main missing component now is a decision algorithm for the conversion relation. Once that's established, this checker could serve as a fundamental proof assistant for working with parametricity within type theory.