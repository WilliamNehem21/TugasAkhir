This paper addresses the issue of accurately identifying circles within digital images, specifically focusing on methods to determine the circular boundary or segmentation without relying on complex computational geometry or linear programming techniques often used in prior research. It delves into the implementation details, providing pseudo-code for critical aspects of the process.

The paper begins by revisiting the geometrical concepts behind detecting a circle that separates different parts of an image. It introduces an incremental algorithm designed to break down a discrete curve into segments that follow the path of digital circular arcs.

Recognition of Euclidean shapes, such as straight lines and planes, has seen significant advances, with many efficient algorithms available. However, there are still sizable gaps in the techniques for identifying higher-order shapes like conic sections or complex curves.

The paper proposes a relatively straightforward algorithm derived from the concept of duality and the Hough Transform approach. This algorithm can segment an 8-connected curve into digital circular arcs, which enables the computation of local curvature on digital curves.

It states a proposition which suggests that by using duality, the lower envelope of a set of lines can be correlated one-to-one with the vertices of the upper part of the convex hull, created from the dual transform of these lines.

For circle separation problems where a circle divides sets S and T, the convex hull of S can replace S without affecting the problem's solution. The computational cost for this process is low and does not significantly increase the overall complexity.

An additional step involves adding a point T to the convex hull of S and then removing it from set T if it causes the hull to enclose another point from set T. This reduction process can be achieved with an efficient algorithm. A more sophisticated method provided in section 3.1 of the paper effectively pairs set T with set S while maintaining the described properties.

The paper proceeds by demonstrating that constraints can be reduced to a linear number relative to the number of points (n). This reduction is particularly relevant for SCOC discrete curves, which lack inflection points and can, therefore, be addressed by the convex separation algorithm previously described.

When it comes to estimating the curvature of each point on a discrete curve, the inverse of the osculating circle's radius at that point is a conventional measure. The paper leverages the same foundational concept but selects specific characteristic points for defining curvature.

It states that the maximum curvature for a point is determined by the inverse of the radius associated with the closest vertex within a defined context, denoted as ACD. However, the exact points used might not be part of the convex hull, leading to a non-reversible process that remains acceptable for local curvature computation.

Finally, the paper discusses the complexity of the proposed curvature estimation algorithm, noting it could naively be O(n^2). However, by employing discrete tangents that define the longest segment starting from a point, it becomes possible to limit the growth of the curve segments, allowing the complexity of bounding segments to be reduced to O(n).