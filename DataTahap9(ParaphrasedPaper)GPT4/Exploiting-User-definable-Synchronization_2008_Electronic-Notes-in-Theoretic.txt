Parametric Synchronized Hyperedge Replacement (PSHR) is a graph-based formalism that allows individual component behaviors to be synchronized for comprehensive transitions. Unlike traditional models, PSHR offers a customizable synchronization mechanism for users. The authors advocate for a more intuitive and simplified version of PSHR semantics while maintaining its power, which makes it easier to model and comprehend. The paper demonstrates that common synchronization techniques can be adapted within PSHR, simplifying both the modeling process and the resulting models themselves. This method is applied to an airport case study from the FET-GC project AGILE to illustrate its effectiveness.

Graph transformation systems have been explored extensively, with methods ranging from the Unified Modeling Language (UML) to various architectural description languages. Synchronized Hyperedge Replacement (SHR) is chosen as the basis for this study due to its robust mathematical foundation and the ability to visually represent systems as hypergraphs where components are interconnected. In SHR, the actions of components are defined by synchronized production rules.

However, PSHR is known for its expressive capability, the complexity of its formal semantics can be a barrier to understanding. This complexity increases when managing different synchronization models, historically rooted in an algebraic representation of graphs that leads to intricate inference processes. The authors propose semantics that more directly and set-theoretically define possible synchronizations at a node by a given synchronization model (SAM), coupled with an algorithm to construct full transitions.

The paper explains how a SAM can be formally expressed and used within PSHR to model system evolution, applying this framework to an airport case study to demonstrate the advantages of parametric synchronization. The proposed model is simpler than previous models, which relied on a more rigid synchronization method.

No formal theorem is presented to compare the new semantics to the previous one, but an informal discussion is included to highlight differences between the two, addressing the advancements offered by the new approach.

Finally, the airport case study is used to illustrate the application of PSHR. While the case study is not examined in full detail, enough is presented to showcase PSHR's utility in real-world scenarios. For a more comprehensive treatment, readers are referred to other resources.