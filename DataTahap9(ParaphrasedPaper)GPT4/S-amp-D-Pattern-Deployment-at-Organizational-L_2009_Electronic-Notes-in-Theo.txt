The current approaches to integrating security solutions at the organization level remain largely theoretical, as highlighted by Kim et al.'s security engineering methods that lack specificity in implementation. This paper addresses these shortcomings by focusing on software, hardware, human resources, and policy infrastructures, proposing practical guidelines for system enhancement. The guidelines detail implementation patterns to improve security policies, procedures, and their supporting infrastructures. The methodology's effectiveness is demonstrated through a case study involving a remote healthcare system and the deployment of security and design (S&D) patterns.

The paper is organized to introduce the remote healthcare system in Section 2. Section 3 reviews the methodology's background with supporting case study examples. Section 4 delineates the proposed methodology, using the healthcare system for illustration. Section 5 provides a conclusion and suggests future research directions.

The paper particularly concentrates on applying the methodology to emergency scenarios within the healthcare system, where a Body Sensor Network (BSN) and smart home monitor patient activities and send alerts to a medical emergency response center (MERC) to prompt necessary interventions.

Organizational operations often depend on technical media, with human involvement being crucial to the success of these IT systems. The Zachman framework is used to clarify the implementation context of the organizational S&D patterns, but the framework is kept separate from the specific types of infrastructure employed.

The paper indicates that detailed deployment contexts have been identified for software or hardware infrastructures that lead to more precise definitions of S&D solutions. Guidelines offer advice for managing expertise embedded within organizational patterns, especially for policy and human resource infrastructures. They list modifications necessary for system designers to make before implementing patterns, aiming to assist designers and facilitate the reuse of existing infrastructures.

Finally, the paper discusses the importance of adapting the general pattern terminology to the specific system during deployment. Analysts are tasked with mapping the pattern's general terms to their system-specific counterparts. If analysts struggle to establish these links, the pattern instantiation is unsuccessful, and the deployment process stops.