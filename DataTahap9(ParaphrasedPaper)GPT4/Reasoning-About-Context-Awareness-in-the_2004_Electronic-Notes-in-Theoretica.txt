Adaptation in computing, where programs modify behavior based on environmental changes, is an evolving and significant computing trend. Directly applying standard formal models of mobility to specify context-driven actions is challenging as they are designed for mobile, rather than contextual, interactions. Despite this, context-aware applications often reside within mobile settings, and by tailoring a mobility model for context-aware features, we can leverage the structures and reasoning frameworks of mobility models. Our methodology adapts the Mobile UNITY framework to create constructs that enable reasoning about context manipulation and interaction. Our new model—Context UNITY—inherits aspects of Mobile UNITY, such as its notation and proof logic.

The paper introduces Context UNITY, which starts with an overview of current systems and applications, then reviews Mobile UNITY, on which Context UNITY is based. Context UNITY builds on this by establishing a set of formal tools and notations for writing and reasoning about context-aware systems through a detailed example. The authors aim to formally approach context-aware programming, providing a formal syntax and logical reasoning while staying approachable for practical implementation.

Context is defined in this model as info on connected devices, inclusive of both traditional context info and arbitrary data. Context definitions vary per application—hence the significance of an egocentric perspective that allows for personalized contexts which automatically adapt as environments evolve. However, no formal behavioral model for context-aware systems has been established until now.

To illustrate, the paper gives an example involving loader and unloader programs with a mobile cart system. The programs interact in a system specified within the Mobile UNITY framework, now adapted to include context-aware behavior.

The paper describes how non-deterministic assignments are utilized in Context UNITY for dynamic contexts, enabling complex interactions. It further discusses the establishment of connections between programs and their context, and the reduction of Context UNITY programs to Mobile UNITY.

Context UNITY, as initially presented, is admittedly complex but potent in defining context-driven behavior. Future refinements aim to simplify notation and include additional constructs, like variable shadowing. The paper also touches on various transfer semantics like eager and lazy semantics, and suggests more research to provide further nuanced semantics for context relationships.

Finally, the authors acknowledge their research funding by the National Science Foundation and the Office of Naval Research, emphasizing that the opinions, findings, and recommendations of the paper are theirs alone and do not necessarily represent those of the funding agencies.