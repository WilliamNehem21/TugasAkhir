The existing body of research recognizes the effectiveness of distributed systems for analyzing extensive datasets, and within this domain, MapReduce stands out as a key parallel computing model that is widely utilized in both academic and industry circles. Despite its popularity, MapReduce faces challenges with time-intensive join and aggregate operations. Previous solutions have sought to enhance performance by integrating middleware or caching layers with the MapReduce framework. These solutions tend to focus on join strategies and often require alterations to the core of the MapReduce framework.

We introduce an algorithm that operates within the MapReduce framework to efficiently process aggregate queries that include a join component when working with large-scale data. Our proposed method enhances query execution by cutting down on communication costs, reducing the amount of time needed to set up jobs, and minimizing disk input/output operations. Our experimental evaluations demonstrate that our algorithm outperforms existing methods in terms of efficiency.