The paper discusses a method for creating story diagrams that merge data and behavior concepts from UML activity and collaboration diagrams, geared towards reverse engineering processes. It utilizes a GXL schema for diagram representation, which highlights both the control flow and object interactions within a software program. Significant components of the diagram include method invocations, object relationships, and actions represented with nodes, along with link formation and deletion depicted with edges of different colors to showcase dynamic relationships between objects.

The paper describes the process of extracting method-level information from source code to construct story diagrams and elaborates on the challenges faced while developing an adequate GXL schema to represent such diagrams. The authors pinpoint problems with graph layout complexity and the necessity of compound subgraphs that cross subgraph boundaries.

The paper acknowledges ongoing efforts to refine the representation and visualization of story diagrams, including the design of text labels and visual elements like the shapes and colors used in nodes and edges. Ultimately, the goal is to utilize GXL alongside XML markup to provide both a code view and a graph view of the story diagram, and work continues to enhance the story diagram schema to encapsulate higher-level abstractions and handle the graph layout challenges of intricate compound graphs.