In the paper, the authors aim to demonstrate significant findings related to the characteristics of logical formulas, which are crucial for the efficiency of model checking algorithms. They employ the concept of transposition as a strategic approach to efficiently prove properties related to fresh names. However, due to space constraints in the paper, they do not include most of the detailed proofs. Readers interested in the complete proofs and explanations are directed to the full version of the paper. Additionally, the paper proposes an extended definition of transposition applicable specifically to predicates.

The paper also addresses the calculation of formula size, which is determined by considering both free and bound names within the nodes of a graph G, as well as the number of names and name variables in a particular area denoted as 'A'. It is important to note that the names present in the tag set of the formula are excluded from this calculation because they serve primarily for tracking purposes and do not contribute to the formula's size.

A key lemma presented in the paper stipulates that when each term appears only once in a tag set—an assumption consistent with their algorithm—the size of the tag set remains manageable, given that the size of the symbolic transition graph (STG) being considered is finite. This suggests that there are inherent limitations on the tag set's growth, which has implications for the practical application of their model checking algorithm.