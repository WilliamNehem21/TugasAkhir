To address the challenges of inefficiency and slow convergence when searching for global optima in software system reliability optimization, a specialized technique known as the niche genetic algorithm was employed. This approach effectively handled linear programming issues involving numerous variables and constraints. Additionally, the performance of genetic algorithms was enhanced through the introduction of the stochastic tournament model, uniform schema crossover operator, and non-uniform mutation.

Software system reliability optimization, also referred to as the software system reliability allocation problem, aims to identify the most reliable configuration for a software system within given resource limitations to achieve maximum reliability. This task is complex due to numerous local optima, making it arduous to pinpoint the global optimum. While intelligent optimization algorithms have been successful in combinatorial optimization, applying niche genetic algorithms to this particular problem remains uncommon.

The niche genetic algorithm, which is inspired by biological niche techniques, seeks to sustain diverse sub-populations that can simultaneously search through solution space. It mimics the natural evolutionary process of survival of the fittest, evolving a population through selection, crossover, and mutation until arriving at the global optimum.

The effectiveness of an algorithm greatly depends on the encoding method used, as it influences the crossover and mutation operators and convergence speed. Real-coded genetic algorithms, which describe continuous parameter optimization problems accurately without the need for binary encoding and decoding, can significantly boost algorithmic efficiency.

This study used the stochastic tournament model, wherein the fittest individuals within a group proceed to the next generation via competition. Additionally, the uniform schema crossover operator was implemented to increase the variability of offspring and improve local search capabilities within the genetic algorithm. To maintain diversity and prevent premature convergence, a non-uniform mutation was adopted, introducing minor perturbations to gene values.

The research demonstrated that the niche genetic algorithm adeptly resolved reliability optimization problems in multi-module software systems, exhibiting enhanced computational speed and solution quality. Future work will focus on refining encoding methods, genetic operators, and selection strategies. Overall, the optimization of software system reliability through genetic algorithms is a promising area that merits further examination.