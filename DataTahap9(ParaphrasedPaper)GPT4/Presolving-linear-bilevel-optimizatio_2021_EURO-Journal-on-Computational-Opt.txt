Linear bilevel optimization problems are notoriously difficult to solve, being categorized as strongly NP-Hard. Researchers typically take inspiration from mixed-integer optimization when developing algorithms for these problems, leading to the articulation of techniques such as branch-and-bound, cutting planes, and assorted heuristics over the years. Despite this, the literature barely addresses the presolving aspect of these problems, which is a crucial component in state-of-the-art solvers for mixed-integer optimization.

In the paper, the authors explore how to adapt standard presolving techniques from single-level to bilevel optimization. They caution against applying these techniques indiscriminately, as doing so without proper adjustment may not yield correctly presolved bilevel models. From their numerical analysis, it's apparent that while presolving can improve the efficiency of solving certain bilevel problems, its impact is more variable compared to single-level optimization problems. Furthermore, they discover a pressing need for more varied and realistic test instance libraries to advance computational bilevel optimization research.

They introduce presolve techniques specific for linear bilevel problems, and their computational study offers two key observations: presolving can be either advantageous or disadvantageous depending on the instance, and very few instances from their large test set are significantly impacted by these presolving techniques.

The paper also details the independence of irrelevant constraints (IIC) property in the context of bilevel problems, emphasizing the complexity of applying constraints without affecting the follower's problem. The authors explore various presolving approaches, such as bound strengthening and the handling of parallel rows and columns, as well as duality fixing and a specialized optimality-based presolve technique, all within the context of bilevel optimization.

Finally, the authors conclude that successfully adapting presolving methods from single-level to bilevel optimization requires careful consideration due to the inherent differences between the two. They emphasize the potential benefits of presolving in bilevel optimization but also its nuanced effects on the solution process, underscoring the importance of developing and using a richer set of test instances for future research.