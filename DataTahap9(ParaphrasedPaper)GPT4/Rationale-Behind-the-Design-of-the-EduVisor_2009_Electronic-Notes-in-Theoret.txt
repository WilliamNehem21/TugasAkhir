The paper discusses the development of EduVisor, an innovative software visualization tool aimed at improving the learning experience for students new to object-oriented programming. It's designed to integrate with a top-tier Integrated Development Environment (IDE), giving students real-time insights into the architecture of their code during execution. The foundation for EduVisor is a substantial review of relevant literature and more than 25 years of collective experience in teaching a beginner’s computer science course (CS1).

Software development has long been considered a complex challenge, and many novices struggle to make significant progress in initial programming courses. EduVisor seeks to address these challenges by helping students more quickly overcome the initial hurdles of programming, enabling them to debug their code more effectively and sparking their enthusiasm by visualizing their work at the click of a button.

The paper outlines the motivation behind EduVisor’s design, details specific runtime challenges encountered in CS1, and presents a visualization sample from the tool. A comparison with related work and future plans for EduVisor’s development are also discussed.

The shift from Pascal to C/C++ and eventually to Java in the CS1 course at the University of Antwerp demonstrates the evolving nature of programming education. The authors noticed persistent errors from students, often due to trial-and-error approaches and a lack of visual representation of their programs.

EduVisor aims to bridge this gap by providing a visual context for program designs, differentiating between static and dynamic program elements, visualizing object instantiation and lifetime, and demonstrating message passing and variable scope within programs. These visual cues are intended to help students grasp complex concepts more intuitively.

The creators of EduVisor emphasize its significant departure from existing educational visualization tools by presenting the entire runtime state of a program in a single diagram. This includes instances, references, and variable values that are essential for understanding the state and behavior of a program.

Currently, EduVisor is in the alpha phase but is part of the lead author’s PhD project, with plans for further development and the addition of interactive teaching features like quizzes and course materials.

Ultimately, the paper showcases the thought process and design philosophy behind the EduVisor component, drawing on research and teaching experience to address the common runtime issues that undermine student success in CS1. The authors highlight their ongoing validation of these issues and the potential solutions that EduVisor offers, aiming to enhance the educational environment for new programmers.