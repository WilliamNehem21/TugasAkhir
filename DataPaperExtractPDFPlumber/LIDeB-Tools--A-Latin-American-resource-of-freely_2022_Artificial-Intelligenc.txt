Artificial Intelligence in the Life Sciences 2 (2022) 100049
Contents lists available at ScienceDirect
Artificial Intelligence in the Life Sciences
journal homepage: www.elsevier.com/locate/ailsci
LIDeB Tools: A Latin American resource of freely available, open-source
cheminformatics apps
Denis N. Prada Gori, Lucas N. Alberca, Santiago Rodriguez, Juan I. Alice, Manuel A. Llanos,
Carolina L. Bellera, Alan Talevi ∗
Laboratory of Bioactive Compounds Research and Development (LIDeB), Faculty of Exact Sciences, University of La Plata (UNLP), La Plata, Buenos Aires, Argentina
a r t i c l e i n f o a b s t r a c t
Keywords: Cheminformatics is the chemical field that deals with the storage, retrieval, analysis and manipulation of an
Cheminformatics increasing volume of available chemical data, and it plays a fundamental role in the fields of drug discovery,
Open source biology, chemistry, and biochemistry. Open source and freely available cheminformatics tools not only contribute
Web applications
to the generation of public knowledge, but also to reduce the technological gap between high- and low- to middle-
Clustering
income countries. Here, we describe a series of in-house cheminformatics applications developed by our academic
Decoy generation
Decoys
drug discovery team, which are freely available on our website ( https://lideb.biol.unlp.edu.ar/ ) as Web Apps
Druggability prediction and stand-alone versions. These apps include tools for clustering small molecules, decoy generation, druggability
Druggability assessment, classificatory model evaluation, and data standardization and visualization.
1. Introduction small academic research center dependent on the University of La Plata
(UNLP, Argentina) with a focus on drug discovery projects, and a partic-
Cheminformatics describes the use of information technology to han- ular interest in the field of infectious tropical diseases. As part of these,
dle chemical information [1] . The field itself has been integrated with we have developed publicly accessible cheminformatics Web Apps de-
the chemical sciences for many decades. However, the term was coined ployed through the Streamlit framework and standalone source codes.
relatively recently, when the increasing amount of chemical data gen- Here, we provide an overview of these resources, which are freely ac-
erated within the drug discovery field (e.g., due to the implementa- cessible on our website at https://lideb.biol.unlp.edu.ar/ . These include
tion of combinatorial chemistry and high-throughput screening plat- clustering, decoy generation, druggability prediction apps, and other
forms) made the use of chemical information technologies increasingly secondary resources related to chemical data standardization and visu-
mandatory [2] . Although cheminformatics has a wide scope, core tasks alization.
within the cheminformatics field include the management of chemical Several data science and machine learning platforms have been de-
databases and datasets, storage and retrieval of chemical information, veloped thus far, enabling users with limited coding ability to create
structure-property relationships, in silico screening, and the design of pipelines for data exploration, analysis, and mining. Some well-known
combinatorial and focused libraries. examples include KNIME, Pipeline Pilot, and Alteryx. Although they of-
As in other areas related to informatics, many relevant cheminfor- fer free and open-source distributions, most advanced features or third-
matics software were developed under the open-source philosophy. The party applications are only available under commercial licenses, which
open-source paradigm began in the informatics field and is intrinsically sometimes makes them inaccessible to small research units in develop-
related to the notions of collaborative research and public knowledge. ing countries.
It was later partially adopted in other fields, for example, in the phar- All applications within the LIDeB Tools suite were deployed as Web
maceutical sector [ 3 , 4 ], when it was realized how efficient the collab- Apps on the Streamlit platform, so scientists can use them through a
orative model might become in relation to traditional close-doors and user-friendly interface using computational resources allocated to the
market-driven philosophies. The open-source approximation has special cloud. Alternatively, their standalone distributions are written in plain
relevance to bridge technological and scientific gaps between low- and Python, under an Object-Oriented Programming (OOP) paradigm and
high-income countries and to address neglected needs from the poorest using open-source libraries, offering a higher level of customization and
regions of the globe. This is well reflected in our organization: LIDeB code reusability. Moreover, they can easily be plugged into existing
(Laboratory of Bioactive Compounds Research and Development) is a chemoinformatic pipelines.
∗ Corresponding author.
E-mail address: alantalevi@gmail.com (A. Talevi) .
https://doi.org/10.1016/j.ailsci.2022.100049
Received 23 September 2022; Received in revised form 24 November 2022; Accepted 1 December 2022
Available online 2 December 2022
2667-3185/©2022 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY license ( http://creativecommons.org/licenses/by/4.0/ )D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
(K) for each subset and evaluating them using the silhouette score [12] .
The silhouette coefficient or score is a measure of how similar an ele-
ment is to the other elements of its own cluster, compared to its distance
to the elements allocated to other clusters. Assume the data have been
into k clusters. The silhouette value s(i) of a given data point i can be
calculated as b(i)-a(i)/ max {(a(i),b(i)} , where a(i) is the mean distance
between i and all other data points in the same cluster and b(i) is the
smallest mean distance of i to all points in any other cluster. s(i) ranges
from −1 to 1, with a value close to 1 indicating that the cluster to which
i belongs is compact and distant from its closest cluster. The mean s(i)
Fig. 1. A scheme of a drug discovery machine learning campaign, from assess- over all points of a cluster reflects how tightly grouped all points in the
ment of target druggability to retrospective virtual screening for protocol vali- cluster are. The silhouette score is the maximum value of the mean s(i)
dation. Possible steps where our reported open-source tools can be incorporated over all data of the entire dataset.
are shown. The results of the systematic variation of k per step by iRaPCA are
presented in a silhouette vs. K plot for the 100 subsets (an example is
A general workflow of a machine learning-based drug discovery shown in Fig. 2 ). The subset and K pair that delivers the highest silhou-
project is shown in Fig. 1 , which indicates the part of the workflow ette score is typically selected. Other Cluster Validity Indexes (CVIs) are
in which each of our tools might be integrated. also provided: the Dunn Index [13] , Davies–Bouldin (DB) Index [14] and
Cali ń ski-Harabasz (CH) Index [15] .
2. Clustering tools Finally, the iteration step starts with the calculation, for each clus-
ter, of the ratio of the number of molecules in a cluster over the total
Clustering of small molecules implies sorting a collection of chem- molecules in the clustered dataset, followed by a new round of clustering
ical structures into smaller groups (clusters) such that the molecules for those clusters that exceed a user-selected cutoffvalue of this ratio.
within a cluster display a high degree of similarity (within-cluster simi- Once there are no more clusters that exceed this ratio, or the maximum
larity) compared to their similarity to elements allocated to other groups number of rounds defined by the user has been executed, the cluster-
(between-cluster similarity). Ideally, clustering should provide compact ing ends and several output files are generated: Cluster_assignations.csv ,
clusters far away from each other within the relevant chemical space [5] . which compiles all the molecule’s codes and their cluster membership;
A clustering strategy requires a sensible decision regarding the cluster- Cluster_distribution.csv , which specifies the obtained clusters and their
ing algorithm and parameter settings to obtain a good approximation of sizes; Validations.csv , which displays the values of the CVIs for the clus-
an optimal solution. Clusters found using a clustering procedure offer tered dataset plus the CVIs obtained when randomly allocating the
a hypothesis of the possible groups within the data because the ground dataset compounds to an identical number of clusters; and Settings.csv ,
truth (if existent) is generally unknown [6] . which summarizes all the settings used in the run.
LIDeB Tools include two in-house clustering approximations, the it- As a benchmark exercise the clustering performance of this algo-
erative Random subspace Principal Component Analysis (iRaPCA) ap- rithm was tested across 29 diverse datasets extracted from the litera-
proach and Silhouette-Optimized Molecular Clustering (SOMoC), along ture [16] , comparing it with classic clustering techniques: Butina [17] ,
with an implementation of some classical agglomerative clustering al- and agglomerative clustering based on single-, complete-, average-, and
gorithms, Comparative Hierarchical Clustering Algorithms (CHiCA), weighted-linkage [18] (Tanimoto coefficient and Morgan Fingerprints
which allows an interactive exploration of the output dendrograms for of length = 1024 and radius = 2, an ECFP4-like representation, were
an informed choice of the most suitable clustering method and the op- used to characterize the molecules). In the case of Butina, the number
timal level to cut the tree, depending on the user’s needs. of neighbors for each molecule in the datasets was calculated for differ-
ent Tanimoto distance cutofflevels ranging from 0.5 to 0.90, with a step
2.1. iRaPCA size of 0.01. The algorithm, as implemented in RDKit [19] , was applied
to each similarity level of the ranking generated by sorting the molecules
iRaPCA clustering is based on an iterative combination of random according to the number of neighbors. For each Tanimoto level, the sil-
subspace (feature bagging), dimensionality reduction by Principal Com- houette score was calculated and the optimal Tanimoto level, defined as
ponent Analysis (PCA) [7] and the K-means algorithm [8] . The iRaPCA the one that provides the highest silhouette score, was selected. In the
algorithm can be described as a sequential combination of four steps: case of the agglomerative clustering approaches, the single-, complete-,
input and encoding, dimensionality reduction, actual clustering and, option- average-, and weighted-linkage algorithms, as implemented in SciPy
ally, iteration . To adapt iRaPCA to a particular user’s needs, the algo- [20] , were applied over the Tanimoto distance matrix to obtain the
rithm includes customizable hyperparameters. corresponding dendrogram and the distance cutoffvalue providing the
In the input step , the molecules to be clustered should be provided as highest silhouette score was selected. In all the cases, the previously
a .csv file, where each line corresponds to a molecule in SMILES format. mentioned set of CVIs was computed for comparison. The silhouette
After optional standardization employing MolVS [9] , Mordred [10] is scores obtained for the 29 datasets using the five clustering methodolo-
used to compute 1613 molecular descriptors for each molecule. Alter- gies are presented in Fig. 3 . The silhouette values for iRaPCA correspond
natively, users may provide their own pool of molecular descriptors as to the first round of the iterative procedure. It can be observed that the
tab-delimited .txt file. silhouette scores for iRaPCA oscillated between 0.85 - 0.98 (that is, very
Subsequently, the dimensionality reduction step starts with the re- close to the ideal value of 1), much higher than those of the other meth-
moval of descriptors with low information content, and 100 random ods under comparison.
subsets of 200 descriptors are created using a random subspace/feature
bagging approximation [11] , followed by the removal of highly corre- 2.2. SOMoC
lated descriptors within each subset. Importantly, the user may define
a higher number of random subsets in the standalone version of the SOMoC clustering is based on a combination of molecular finger-
script. Subsequently, PCA is conducted on each subset; by default, only printing, dimensionality reduction using the Uniform Manifold Approx-
the first two principal components are considered for the next steps of imation and Projection (UMAP) algorithm [ 21 , 22 ], and clustering with
the procedure. In the final clustering step, the K-means algorithm is ap- the Gaussian Mixture Model (GMM) [ 23 , 24 ]. The general workflow of
plied to the PC space by systematically varying the number of clusters the algorithm is similar to that of iRaPCA in the initial steps of input and
2D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
Fig. 2. Example of silhouette score vs. K plot gener-
ated by iRaPCA, for the default 100 randomly chosen
descriptor subsets.
Fig. 3. Performance comparison of the iRaPCA and SoMOC algorithms versus Butina and several agglomerative hierarchical clustering algorithms across 29 bench-
mark datasets. These were ordered and labeled in the figure according to their size (i.e., by the number of compounds in each dataset).
encoding, dimensionality reduction, and clustering . Its hyperparameters, as clustering step, the GMM algorithm is applied to the molecules in the
in the case of iRaPCA, can also be customized. embedded UMAP space to search for the number of K clusters that max-
In the input step , the molecules are provided again in SMILES nota- imizes the silhouette score. An elbow plot of the silhouette score vs. K
tion as a .csv file, but instead of calculating molecular descriptors, the is presented for visual estimation of the optimal K. The same additional
molecular representations are encoded into EState1 molecular finger- CVIs previously described for iRaPCA are also calculated and the same
prints, calculated by RDKit, with a fixed-length fingerprint containing 79 output files are generated.
features [25] . The UMAP algorithm, a nonlinear dimensionality reduc- To validate SOMoC as a clustering tool, a benchmarking exercise sim-
tion technique based on Riemannian geometry and algebraic topology, ilar to the one used for iRaPCA was performed across the same datasets,
is then applied to reduce the hyperdimensional space of the fingerprints, using Butina and agglomerative clustering algorithms as comparators.
retaining the most informative features of the process. The size of the The SOMoC algorithm displayed Silhouette scores ranging between 0.72
embedded space is determined based on the size of the dataset. In the - 0.99 across the 29 datasets. The results are presented in Fig. 3 .
3D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
Fig. 4. Example of a dendrogram generated by
CHiCA.
2.3. CHiCA
CHiCA implements diverse classical hierarchical agglomerative clus-
tering approaches. Despite exhibiting modest performance in compari-
son to iRaPCA and SOMoC, as shown in Fig. 3 , CHiCA allows the user,
by using interactive graphs, an intuitive and visual choice of the num-
ber of clusters to consider. Molecules are characterized by Morgan fin-
gerprints with user-defined radio and length (by default, 2 and 1024,
respectively) [26] . It is possible to include special, fuzzy features in the
fingerprints, such as hydrogen-bond donors, acceptors, aromatic rings,
halogen atoms, and acidic or basic groups. As in our other clustering
apps, the input molecules are provided in SMILES notation through .csv
files, and a distance matrix is obtained. CHiCA allows the measurement
of the pairwise distance between molecules using different metrics (e.g.,
Jaccard, Euclidean, Cosine) by employing SciPy [20] . The SciPy’s clus-
tering package is then used to perform hierarchical clustering. Different
agglomerative methods are available for this purpose. By default, single-
linkage is used.
The clusters are plotted in an interactive dendrogram ( Fig. 4 ) that
displays the composition of each cluster by drawing the links between
a non-singleton cluster and its children. The top of a link indicates a
cluster and its two legs specify which clusters have been merged, while
the length of the legs reflects the distance between the child clusters.
Fig. 5. Example Distance cutoffvs. Silhouette score vs. Number of Molecules
This dendrogram allows the user to visually select a distance cutofffor
plot.
clustering molecules based on their distribution in the generated clusters
and the number of outliers.
Additionally, an interactive scatter plot of distance vs silhouette Therefore, validation of the virtual screening protocol should realis-
score vs the number of molecules is shown ( Fig. 5 ). This plot allows tically reflect this scenario. In other words, the ability of the virtual
the user to select an optimal cutoff for clustering based on this score screening method to retrieve relatively few known active compounds
or the number of outliers, number of small clusters (defined as clusters from a large chemical library predominantly composed of inactive com-
with more than one molecule and less than 5% of the total molecules pounds should be evaluated. This is often performed through retro-
by) or number of dense clusters (defined as clusters with more than 5% spective screening experiments in which a comparatively small num-
of the total molecules by default). ber of known active compounds are dispersed among a large number of
Once the optimal cutoffhas been identified, CHiCA is re-run with this (proven or putative) inactive compounds. Putative inactive compounds
distance value, generating four output files: Clustering_assignations.csv are also known as decoys, and in essence they are similar to the active
which specifies which molecules have been assigned to which cluster compounds in terms of an array of physicochemical properties, such as
according to the chosen cutoffvalue; Cluster_distribution.csv , which speci- molecular weight (MW), logP (see belong) but topologically dissimilar.
fies the number of obtained clusters and their sizes; Validations.csv which As the molecular topology is key to complementarity with the pharma-
contains the values of the CVIs; and Settings.csv , which contains the se- cological target, it can be assumed that decoys that are topologically
lected parameters in the run. distinct from active compounds will likely be inactive compounds. If
The molecular structures of the group centroid for the most popu- the virtual screening protocol works properly, it is expected that the
lated cluster obtained using iRaPCA, SOMoC and CHiCA for the human known active compounds will be preferentially ranked above decoys.
cannabinoid receptor 1 dataset (Hum_can_rec) are shown in Fig. 6 . Truchon and Bayly showed that, for accurate estimation of enrichment
metrics, the proportion of active compounds in the library that is sub-
3. Decoy generation jected to retrospective screening should not exceed 0.05 [27] . Further-
more, the “saturation effect ” is avoided or at least ameliorated when
Any virtual (or, for the case, wet) screen is confronted with an in- such a proportion is observed. When inactive compounds are scarce,
trinsic class imbalance: the number of active compounds in a chemical known active compounds can be complemented by putative inactive
library is significantly exceeded by the number of inactive compounds. compounds [ 28 , 29 ]. That is, unverified inactive molecules that are cho-
4D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
larly true when the number of active queries increased to hundreds and
has been greatly expedited in DUDE-Z). This led us to develop a similar
approximation available as a standalone script, which we called LIDeB’s
Useful Decoys (LUDe).
3.1. LIDeB’s useful decoys
LUDe retrieves decoys from a curated ChEMBL30 database (cura-
tion details are provided in Supplementary Information). These decoys
are paired with some general physicochemical properties of the query
active compounds, which ensures that the generated decoys are chal-
lenging (i.e., non-trivial) so that enrichment bias [ 35 , 36 ] is avoided.
However, as described later, different filters are subsequently applied
to ensure that the provided decoys are topologically distinct from (and
share no scaffolds with) any of the active compounds; thus the false-
negative bias is also reduced [36] . The general LUDe workflow is illus-
trated in Fig. 7 . Our in-house script requires a .txt file as input with
molecular representations of the query compounds (known active com-
pounds) in SMILES notation. The queries are then standardized using
MolVS [10] , returning the largest organic covalent unit in the molecule
with all atoms replaced with the most abundant isotope for that ele-
ment and their charge removed. Additionally, the ionization state at pH
7.4 is calculated with the appropriate charges using Openbabel [37] .
Once the molecules have been standardized, the following physicochem-
ical descriptors are calculated using the rdkit.Chem package: molecular
weight (MW), log P (LogP), number of rotatable bonds (nRotB), number
of H-bond acceptors (nHAcc), number of H-bond donors (nHDon) and
formal charge (Charge). Morgan fingerprints (with tunable lengths and
radii, by default radius = 2 and length = 1024) and the Murcko Scaffold
are next obtained for each compound, using the rdkit.Chem package for
this purpose.
Afterwards, decoys are sought across different subsets of the curated
ChEMBL database containing 150 K molecules per subset. A physico-
chemical similarity search with established cut-offvalues is carried out
in one randomly selected ChEMBL subset. By default, the retrieved de-
coys will present features in the following range in comparison to their
query: MW ± 20 Daltons, LogP ± 0.5 log units, nRotB ± 1 bond, nHAcc ± 1
bonds, nHDon ± 1 bonds, and Charge ± 1 units, although the tolerance
windows can be narrowed or expanded by the user. If fewer than 400
molecules are recovered in this randomly chosen ChEMBL subset, the
property limits are extended by a factor of 1.5, up to five times. For in-
stance, in the case of MW the window is extended, round by round, to
± 30 Daltons, ± 45 Daltons, etc.
Physicochemical similarities between the queries and the generated
preliminary list of decoys are estimated. For this, the difference between
each known active compound and each decoy in terms of the six pairing
properties is calculated and summarized with a physicochemical similar-
ity score (PSS) ranging from 0 (lowest similarity) to 1 (highest similarity)
[38] . The compounds are then ordered with descending PSS values, and
the top 200 are selected.
Three successive topological similarity filters are applied to these
retrieved decoys to selectmolecules that are topologically less similar to
the query compound. First, the Tanimoto similarity coefficient between
Fig. 6. The figure shows the centroids and the closest and farthest neigh-
bors from the centroids (within the most populated cluster) obtained for the
the query compound and each potential decoy is calculated. By default,
“Hum_can_rec ”dataset using iRaPCA, SOMoC and CHiCA (weighted linkage) only decoys with a maximum similarity coefficient of 0.2 are kept. The
methods. maximum common substructure (MCS) between the query compound
and each surviving decoy is then determined, and the ratio between the
sen on some theoretical basis to assure a rather small probability of mis- number of atoms in the MCS and the total number of atoms in the query
labeling; the Directory of Useful Decoys Enhanced (DUD-E) [30] , with compound (fMCS) is calculated [39] . Only decoys with fMCS below a
a recently release improved version [31] is possibly the most popular user-defined value (by default, 0.5) are retained. The Murcko scaffold
online decoy-generation tool to validate structure-based screening pro- [40] of the query compound is compared with those of the potential
tocols, although some other decoy generators have also been reported, decoys, keeping only those that present scaffolds that are different from
including methods that rely on hard machine learning approaches [32– the query.
34] . Although undoubtedly useful, DUD-E was at times limited by the The previous steps are repeated with another ChEMBL subset until
capacity of its online server to return putative decoys in a short time, a total of 500 potential decoys for each query compound have been
sometimes demanding several days to complete a task (this was particu- recovered or all subsets have been exhausted, whichever happens first.
5D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
Fig. 7. General workflow for LUDe.
Table 1
Number of decoys generated in each step of the LUDe workflow for five active compounds in the FABP4 dataset of DUD-E.
Selected by matching Non- duplicated Pass the cross-check TC
physicochemical Pass the Tc filter Pass the fMCS Pass the decoys per filter against all queries
Query Molecules properties per active filter Framework filter active: submitted
Query 1 800 582 582 582 582 217
Query 2 1000 641 640 640 625 286
Query 3 1000 624 623 623 586 285
Query 4 1000 755 754 754 523 185
Query 5 800 642 622 622 515 182
Tc: Tanimoto coefficient.
After performing the workflow for all query molecules, the molec- new set of decoys was generated using LUDe. The total number of decoys
ular fingerprints of the resulting list of decoys are compared to those obtained for each subset is included in the Supplementary Information
of all query compounds, and only decoys with a Tanimoto similarity (Table S1).
below 0.2 (by default) to any query are retained. This ensures that the The quality of the generated decoy molecules, in terms of the physic-
decoys are not only different from the query they were derived from ochemical matching of decoys and the risk of allowing latent active
but also from any of the known active compounds used to generate compounds in the decoy set (LADS), was determined by the deviation
them. Up to 50 decoys per query compound are retrieved by default, from the optimal embedding score (DOE score) and the assessment of
although this number can also be customized. The following output the Doppelganger score, respectively, as recommended by Vogel et al.
files are generated: Generated_decoys.csv, which contains all the de- [38] . The DOE score was obtained by analyzing the spatial distances
coys in SMILES notation; Decoys_analysis.csv, which provides a table of the molecules in the chemical space defined by the six normalized
containing a summary of the number of molecules that passed each suc- physicochemical properties used to match queries and decoys. Briefly,
cessive filter; and Decoys_setting.csv, containing a summary of all the the distances from each active compound to all remaining active com-
settings used in the run. As an example, Table 1 presents the number pounds and decoys were calculated in the normalized multidimensional
of decoys obtained when using the active compounds included in the space and molecules were sorted in ascending order according to these
Fatty Acid Binding Protein 4 (FABP4) subset from DUD-E as queries for distances. The real class of each molecule (labeled 1 for active com-
LUDe. This dataset contains 47 FABP4 inhibitors. Only five of these have pounds and 0 for decoys) and the obtained distances were later used to
been included in the table, for illustrative purposes. For instance, LUDe build a Receiving Operating Characteristic (ROC) curve for each active
found 800 molecules that were physicochemically similar to query 1. compound, and the average absolute value of the difference between
Among these, 582 passed the three filters that ensure topological dis- the area of these ROC curves and the area of a randomly sorted list of
similarity from the query. Of these, only 217 molecules were dissimilar compounds (0.5) was defined as the DOE score:
to the remaining queries. By default, fifty decoys were then randomly ∑𝑚
selected for query 1, and the same analysis was repeated for every other 𝐷 𝑂𝐸 𝑠𝑐𝑜𝑟𝑒 = 𝑚1 𝐴𝐵𝐶 𝑎𝐷 𝑂 𝐸
query. It is important to emphasize that because 2D similarity methods 𝑎 =1
are used to select decoys for each query (excluding decoys with high where m is the number of queries (active compounds). Optimal embed-
2D similarity to any query), LUDe decoys should not be used to assess ding of active compounds into decoys corresponds to a value of zero,
the performance of in silico screens based on 2D similarity approxima- whereas a value of 0.5 denotes no embedding at all.
tions/molecular fingerprints. This is a general warning for any method Fig. 8 A shows that the DOEs obtained with LUDe decoys are above
that uses a 2D similarity criterion to exclude potential decoys from those obtained with DUD-E decoys for 65% of the 102 targets. Moreover,
the list. 86% of the subsets of decoys generated by our script achieved a DOE
The performance of LUDe was compared with that of DUD-E score below 0.2, whereas this proportion represented 74% of the targets
across 102 target subsets of active compounds and their correspond- for DUD-E decoys.
ing DUD-E-generated decoys, which are available on the DUD-E website In contrast, the Doppelganger score captures the structural similar-
( http://dude.docking.org/subsets ). For each set of active compounds, a ity between actives and their most structurally related decoys. To assess
6D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
Fig. 8. A) DOE scores of the original DUD-E set
(blue) compared with the LUDe generated de-
coys (red) across 102 targets. The targets with
even indices were not labeled on the x-axis ow-
ing to space limitations. B) Mean doppelganger
scores of the original DUD-E set (blue) com-
pared with the LUDe generated decoys (red)
across 102 pharmacological targets. The targets
with even indices are not labeled on the x-axis
owing to space constraints.
this score, FCFP6 fingerprints were generated using RDKit [19] for ev- To develop these algorithms, a protein dataset was compiled from
ery known active compound and decoy, and for each of the 102 phar- ChEMBL [42] , DisProt [43] and DCD [44] . Proteins were labeled “drug-
macological targets; the similarity between each decoy and each ac- gable ”if at least two of the following conditions were met: more than
tive compound (query) was assessed using the Tanimoto coefficient. 100 reported small-molecule modulators with IC50 < 20 μM; more than
The Doppelganger score of a decoy is defined as the maximum value 5% hit rate in reported high-throughput screening campaigns; at least
of the Tanimoto coefficient obtained in this way, across all active com- five publications reporting modulators per year, indexed in Scopus. Oth-
pounds used as queries. For each target, we report the mean Doppel- erwise, the proteins were labeled as “non-druggable ”. Using these crite-
ganger score over all decoys and the maximum structural similarity be- ria, 222 protein sequences were retrieved, of which 111 were considered
tween an active and a decoy. Fig. 8 B shows the mean Doppelganger druggable and 111 were considered non-druggable.
score over all decoys for each of the 102 targets. The Doppelganger Seventy percent of the proteins in each class was sampled for the
score was lower for 85% of the targets for LUDe decoys than for DUD-E training set of the classifiers. The remaining proteins were used as a test
decoys, with an average Doppelganger score across the targets of 0.23 set to validate the generated models externally. To realize this sampling
for LUDe decoys and 0.25 for DUD-E decoys. This possibly reflects the representatively, we used a clustering strategy that combined dimen-
effect of the additional filters implemented in LUDe to ensure topolog- sionality reduction of Zernike descriptors [45] by Principal Component
ical dissimilarity between the decoys and queries (fMCS, Mucko scaf- Analysis (PCA) followed by the application of the k-means clustering
fold). The maximum average Doppelganger score per target was very algorithm.
similar for LUDe and DUD-E (0.36 and 0.37, respectively). This sug- The dataset proteins were then characterized using 147 CTD descrip-
gests that the chance of false-negative decoys tends to be reduced for tors available in PyBioMed [46] , which are independent of the sec-
LUDe. ondary, tertiary, or quaternary structure of the proteins, as they only
require the sequence of the protein as input. The pool of 147 descrip-
4. Druggability prediction tool tors for the training set was subjected to a random subspace approach
generating 1000 subsets of 20 descriptors each. Then, using a Forward
Druggability refers to the ability of a given protein to bind with a Stepwise strategy we generated 1000 linear classifiers with no more
high affinity to small drug-like molecules [41] . Assessing the drugga- than five descriptors each. The robustness of the models and chance of
bility of potential pharmacological targets prior to initiating a target- spurious correlations were assessed using Leave-Group-Out (LGO) cross-
focused drug discovery campaign is crucial. Fast Druggability Assessment validation and randomization tests. LGO cross-validation was performed
(FaDrA) is a druggability prediction web application based on four lin- using randomly stratified subsets composed of eight druggable and eight
ear classifiers that can discriminate druggable from non-druggable tar- non-druggable proteins that were removed from the training set in each
gets from complete proteomes within a few minutes, with acceptable cross-validation round, and the model was regenerated using the re-
accuracy, based only on the protein sequence. maining proteins as training examples. The resulting model was used
7D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
Table 2 include a simple sequence, a few protein sequences, or a complete pro-
Results of the randomization test and the LGO cross-validation for the four best teome. After reading the file, the necessary descriptors for the models
models. are calculated using PyBioMed and the four models are applied to each
Accuracy Accuracy
protein. In addition, the applicability domain is determined. A pie chart
Randomization test LGO is displayed ( Fig. 10 ) showing the percentage of “druggable ”and “non-
Model Accuracy (s.d.) 1 (s.d.) 1 (s.d.) 1 druggable ”proteins, and the percentage of “non-conclusive ”results. Fi-
260 0.820 (0.066) 0.499 (0.150) 0.723 (0.110) nally, a .CSV file is generated that summarizes the predictions for the
361 0.808 (0.069) 0.500 (0.134) 0.712 (0.113) four individual models and the meta-classifier, as well as whether each
424 0.814 (0.068) 0.503 (0.129) 0.758 (0.110) protein sequence belongs to the ADs of the models. For example, the
763 0.801 (0.069) 0.499 (0.128) 0.744 (0.104)
complete proteome of Escherichia coli (Genome assembly ASM584v2)
1 s.d. indicates Standard Deviation. was run in FaDrA. 4298 proteins were loaded of which 1978 (46%) were
predicted as “non-druggable ”, 2084 (48.5%) were predicted as “drug-
Table 3 gable ”, and 236 (5.5%) generated non-conclusive results. Table 5 shows
Performance of the best models in the external validation. the predictions for the first ten proteins in the E. coli proteome.
Model Accuracy (s.d.) 1 Recall (s.d.) 1 Precision (s.d.) 1
260 0.803 (0.066) 0.939 (0.059) 0.744 (0.070) 5. Other tools
361 0.802 (0.070) 0.757 (0.108) 0.839 (0.085)
424 0.818 (0.069) 0.818 (0.095) 0.825 (0.082) In addition to the previously discussed Web Apps, LIDeB Tools also
763 0.803 (0.068) 0.908 (0.072) 0.756 (0.074) include three other secondary tools that employ available packages
1 s.d. stands for Standard Deviation. and algorithms with minor changes and are implemented with a user-
friendly interface. These are Heatmap-Similarity, LIDeB’s Standardiza-
tion Tool (LISTo), and Metrics.
to predict class labels of the removed proteins. The procedure was re- The Heatmap-Similarity Web App builds a heatmap of molecular
peated 1000 times, with each of the training set examples removed at similarities using RDKit. These plots of intermolecular similarity allow
least once. for fast visual inspection of the molecular diversity of chemical datasets.
In contrast, in the randomization test the class label was random- The inputs for the app are two .txt files (which can be identical or dif-
ized across the proteins comprising the training set. The training set ferent), where each line corresponds to a molecule in SMILES. The al-
with the randomized variable was used to train new models, from the gorithm constructs a similarity matrix between two loaded sets of com-
descriptor selection step. This procedure was repeated 1000 times for pounds, computed as a Tanimoto similarity coefficient using Morgan
each descriptor subset. Randomized models are expected to have poor fingerprints with a user-defined radius (from 1 to 3, 2 by default) and
accuracy compared with real models. bit length (1024 by default). The matrix is plotted as a heatmap with
The results of both tests are presented in Table 2 . The results sug- a color scale indicating similarity, and the resulting plots can be down-
gest some degree of overfitting for each classifier, but very low chances loaded as .png files.
of spurious correlation (as seen as the mean accuracy in the random- LISTo is a standardization Web App that helps to automatically stan-
ization test, practically identical to the expected accuracy for random dardize collections of chemical structures that may present different,
classification, i.e., 0.5 for balanced sets). non-homogeneous molecular representations. This simple standardiza-
The equations of the four best models and the definitions of the de- tion is useful for ensuring a homogeneous format of molecules before
scriptors included in them have been incorporated in the Supplementary calculating any conformation-independent molecular descriptor. In this
Information. The predictive power of the selected models was further process each molecule, submitted in a .txt file in SMILES notation, passes
examined by calculating the accuracy, recall and precision over the 66 through a series of standardization steps that are included in MolVS. By
protein sequences that compose the test set ( Table 3 ). default, LISTo retains only the parent fragment of the molecule (the
Finally, the predictions of the four models were combined in a meta- largest organic covalent unit in the molecule), removes all stereochem-
classifier to reduce the number of false positives, that is, proteins that ical information from tetrahedral centers and double bonds, mantains
are predicted to be druggable but are actually non-druggable. The meta- the uncharged version of the fragment parent, replaces atoms with the
classifier considers the predictions of the four individual models and the most abundant isotope, disconnects metals from organic atoms, ap-
assessment of the applicability domain (AD) using the leverage approach plies a series of transformations to correct common drawing errors,
and 3d/n as the cut-offvalue, where d is the number of descriptors in the and removes hydrogen atoms. The Web App also returns the canoni-
corresponding model and n is the number of compounds in the training cal tautomer, which is a unique representation, selected with a scor-
set. Finally, meta-classifier prediction is performed using the decision ing function from all possible tautomers that could be generated from
tree shown in Fig. 9 . a molecule; importantly, the canonical tautomer is not necessarily the
Table 4 compares the performance of each individual classifier, most energetically favorable [47] . A log file with additional information
in terms of accuracy, with that of the meta-classifier. It can be ob- regarding potential problems for specific standardization actions can
served that the meta-classifier obtains the best accuracy within the non- be downloaded. In addition, the standardized molecules can be visual-
druggable class; it is also the scheme that leads to less “non-conclusive ” ized in the Web App through the interactive chemical viewer mols2grid
results. ( https://github.com/cbouy/mols2grid ).
FaDrA allows druggability prediction of complete proteomes within Finally, the Metrics Web App evaluates the performance of clas-
a few minutes. The app receives a “.fasta ”file as input. This file may sificatory models by calculating different metrics implemented in
Table 4
Accuracy by category for each selected model and the meta-classifier in the test set.
Model 260 Model 361 Model 424 Model 763 Meta-classifier
Druggable accuracy 0.848 0.800 0.879 0.933 0.727
Non-druggable accuracy 0.593 0.700 0.643 0.667 0.900
Number of “Non-conclusives ” 9 6 5 8 3
8D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
Fig. 9. Decision tree for meta-classifier druggability assessment. For each protein, the predictions of four individual classifiers are provided along with their respective
AD predictions. Depending on how many predictions are considered valid (i.e., inside the AD), the class assignment follows different criteria.
Fig. 10. Pie chart for FaDrA prediction of the E. coli proteome.
Table 5
Output table for the prediction of the first 10 proteins in E.coli proteome.
Protein ID PREDICT 1 AD 1 PREDICT 2 AD 2 PREDICT 3 AD 3 PREDICT 4 AD 4 CLASSIFICATION
NP_414542.1 Druggable NO Non-druggable NO Non-druggable NO Druggable NO Non-conclusive
NP_414543.1 Druggable YES Druggable YES Druggable YES Druggable YES Druggable
NP_414544.1 Druggable YES Druggable YES Druggable YES Druggable YES Druggable
NP_414545.1 Druggable YES Druggable YES Druggable YES Druggable YES Druggable
NP_414546.1 Non-druggable NO Non-druggable NO Druggable NO Druggable NO Non-conclusive
NP_414547.1 Non-druggable YES Druggable YES Druggable YES Druggable YES Non-druggable
NP_414548.1 Druggable YES Druggable YES Druggable YES Druggable YES Druggable
NP_414549.1 Druggable YES Druggable YES Druggable YES Druggable YES Druggable
NP_414550.1 Druggable YES Druggable YES Druggable YES Non-druggable YES Non-druggable
NP_414551.1 Druggable YES Druggable YES Druggable YES Druggable YES Druggable
scikit-learn [48] . The input is a .txt file with two columns, named “class ” BEDROC for a specific alpha (20 by default) and the EF for a specific
and “score ”, where each line corresponds to a molecule; the “class ”col- top-ranked fraction of the entire set (0.01 by default). The values of al-
umn should indicate the active and the inactive compounds (class 1 and pha and the fraction can be modified by the user and the results will
0 respectively) and the “score ” column the score which was given by be immediately updated in the table. These last metrics are presented
the classification model that was employed. The output includes dif- as a mean value with a standard deviation, sampling without replace-
ferent performance metrics (accuracy, balanced accuracy, F-measure, ment (by default, 100 iterations) 85% of the entire dataset (by default).
precision, recall and Matthews correlation coefficient) and a confusion Additionally, a Positive Predictive Value surface (PPV) rotatable sur-
matrix for the user-selected score threshold to split active and inac- face is generated displaying the interplay between PPV, the Se/Sp ra-
tive compounds (by default is set to 0.5). Moreover, this threshold can tio (sensitivity/specificity ratio associated with a given score threshold
be modified, and in this case the results will be updated immediately. value) across a theoretical range of Ya (yield of actives) ( Fig. 11 b). PPV
Moreover, the ROC and Precision-Recall curves are plotted ( Fig. 11 a) helps estimate the probability that a predicted hit will confirm its activ-
and their areas under the curve are presented in a table along with the ity when subjected to experimental testing. By visual inspection of this
9D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
Fig. 11. a) Example of ROC and PR curves generated by Metrics Web App; b) Examples of PPV surfaces generated by Metrics Web App.
3D plot, or by analyzing the table with the Se, Sp, and PPV values for Data availability
different score cutoffvalues, it is possible to choose an adequate score
threshold, associated with the desired PPV range, to select predicted Have shared the link to my code.
hits in prospective virtual screening experiments [49] . Importantly, the
Se/Sp ratios observed in the ROC curve for each cut-offvalue are used Acknowledgments
to build the graph, assuming that such ratios will remain approximately
the same across different datasets. The authors are funded by UNLP (Incentivos UNLP and Subsidio para
Jóvenes Investigadores UNLP 2019 y 2021) and Agencia Nacional de
6. Conclusions Promoción Científica y Tecnológica (ANPCyT), via grants PICT 2017-
0643 , PICT 2019-1075 , PICT 2019-00984 and PICT-CATI-2021-00073 .
We presented and discussed an array of cheminformatics tools A.T., L.N.A. and C.L.B. are members of the Research Career from the
developed in our academic drug discovery laboratory. These open- Argentinian National Research Council (CONICET, Argentina). The au-
source resources are freely available as online Web Apps ( https://lideb. thors gratefully acknowledge the support of Streamlit.
biol.unlp.edu.ar/ ) and as standalone versions ( https://github.com/
LIDeB/ ). They were developed using publicly available open-source re-
Supplementary materials
sources and internal programming.
The open source/open-software model contributes to the develop-
Supplementary material associated with this article can be found, in
ment of public knowledge and bridges the technological gap between
the online version, at doi: 10.1016/j.ailsci.2022.100049 .
low- to middle-income countries and high-income countries. Although
such a gap exists in practically all fields of science and technology, it
References
is possibly narrower within the informatic community, because of the
persistent efforts of global developers to make valuable resources freely [1] Xu J, Hagler A. Chemoinformatics and drug discovery. Molecules 2002;7(8):566–
available to the public. 600. doi: 10.3390/70800566 .
[2] Leonis G, Melagraki G, Afantitis A. Open source chemoinformatics software includ-
ing KNIME analytics platform. In: Leszczynski J, editor. Handbook of computational
Declaration of Competing Interest
chemistry. Dordrecht: Springer Netherlands; 2016. p. 1–30 .
[3] Bhardwaj A, Scaria V, Raghava GPS, Lynn AM, Chandra N, Banerjee S, Raghunan-
The authors declare that they have no known competing financial danan MV, Pandey V, Taneja B, Yadav J, Dash D, Bhattacharya J, Misra A, Kumar A,
Ramachandran S, Thomas Z, Brahmachari SK. Open source drug discovery–A new
interests or personal relationships that could have appeared to influence
paradigm of collaborative research in tuberculosis drug development. Tuberculosis
the work reported in this paper. 2011;91(5):479–86. doi: 10.1016/j.tube.2011.06.004 .
10D.N.P. Gori, L.N. Alberca, S. Rodriguez et al. Artificial Intelligence in the Life Sciences 2 (2022) 100049
[4] Årdal C, Røttingen J-A. Open source drug discovery in practice: a case study. PLoS [29] Kaplan AL, Strachan RT, Braz JM, Craik V, Slocum S, Mangano T, Amabo V,
Negl Trop Dis 2012;6(9):e1827. doi: 10.1371/journal.pntd.0001827 . O’Donnell H, Lak P, Basbaum AI, Roth BL, Shoichet BK. Structure-based de-
[5] Tan P-N, Steinbach M, Kumar V. Introduction to data mining. 1st editor. USA: Ad- sign of a chemical probe set for the 5-HT5A serotonin receptor. J Med Chem
dison-Wesley Longman Inc; 2005 . 2022;65(5):4201–17. doi: 10.1021/acs.jmedchem.1c02031 .
[6] Rivera-Borroto OM, Marrero-Ponce Y, García-de la Vega JM, Grau-Ábalo RC. Com- [30] Mysinger MM, Carchia M, Irwin JJ, Shoichet BK. Directory of useful decoys, en-
parison of combinatorial clustering methods on pharmacological data sets repre- hanced (DUD-E): better ligands and decoys for better benchmarking. J Med Chem
sented by machine learning-selected real molecular descriptors. J Chem Inf Model 2012;55(14):6582–94. doi: 10.1021/jm300687e .
2011;51:3036–49. doi: 10.1021/ci2000083 . [31] Stein RM, Yang Y, Balius TE, O’Meara MJ, Lyu J, Young J, Tang K, Shoichet BK,
[7] Jolliffe I. Principal component analysis. 2nd editor. New York: Springer-Verlag; Irwin JJ. Property-unmatched decoys in docking benchmarks. J Chem Inf Model
2002 . 2021;61(2):699–714. doi: 10.1021/acs.jcim.0c00598 .
[8] Lloyd S. Least squares quantization in PCM. IEEE Trans Inf Theory 1982;28:129–37. [32] Imrie F, Bradley AR, Deane CM. Generating property-matched decoy molecules us-
doi: 10.1109/TIT.1982.1056489 . ing deep learning. Bioinformatics 2021;37(15):2134–41. doi: 10.1093/bioinformat-
[9] M. Swain, MolVS:molecule Validation and Standardization, https://molvs. ics/btab080 .
readthedocs.io/en/latest , 2019 (accessed July 2022). [33] Wang L, Pang X, Li Y, Zhang Z, Tan W. RADER: a RApid DEcoy Retriever to facili-
[10] Moriwaki H, Tian Y-S, Kawashita N, Takagi T. Mordred: a molecular descriptor cal- tate decoy based assessment of virtual screening. Bioinformatics 2017;33(8):1235–7.
culator. J Cheminformatics 2018;10:4. doi: 10.1186/s13321-018-0258-y . doi: 10.1093/bioinformatics/btw783 .
[11] Sutton C, Sindelar M, McCallum A. Feature bagging: preventing weight undertrain- [34] Cereto-Massagué A, Guasch L, Valls C, Mulero M, Pujadas G, Garcia-Vallvé S.
ing in structured discriminative learning. CIIR Tech Rep IR-402 2005:1–7 . DecoyFinder: an easy-to-use python GUI application for building target-specific
[12] Rousseeuw PJ. Silhouettes: a graphical aid to the interpretation and valida- decoy sets. Bioinformatics 2012;28(12):1661–2. doi: 10.1093/bioinformatics/
tion of cluster analysis. J Comput Appl Math 1987;20:53–65. doi: 10.1016/ bts249 .
0377-0427(87)90125-7 . [35] Nicholls A. What do we know and when do we know it? J Comput Aided Mol Des
[13] Dunn JC. Well-Separated Clusters and Optimal Fuzzy Partitions. J Cybern 2008;22:239–55. doi: 10.1007/s10822-008-9170-2 .
1974;4:95–104. doi: 10.1080/01969727408546059 . [36] Irwin JJ. Community benchmarks for virtual screening. J Comput Aided Mol Des
[14] Davies DL, Bouldin DW. A Cluster Separation Measure. IEEE Trans Pattern Anal 2008;22:193–9. doi: 10.1007/s10822-008-9189-4 .
Mach Intell 1979;1(2):224–7. doi: 10.1109/TPAMI.1979.4766909 . [37] O’Boyle NM, Banck M, James CA, Morley C, Vandermeersch T, Hutchi-
[15] Calinski T, Harabasz J. A dendrite method for cluster analysis. Commun Statist son GR. Open babel: an open chemical toolbox. J Cheminform 2011;3:33.
1974;3:1–27. doi: 10.1080/03610927408827101 . doi: 10.1186/1758-2946-3-33 .
[16] Cortes-Ciriano I. Benchmarking the predictive power of ligand efficiency indices in [38] Vogel SM, Bauer MR, Boeckler FM. DEKOIS: demanding evaluation kits for objective
QSAR. J Chem Inf Model 2016;56:1576–87. doi: 10.1021/acs.jcim.6b00136 . in silico screening - a versatile tool for benchmarking docking programs and scoring
[17] Butina D. Unsupervised data base clustering based on daylight’s fingerprint and Tan- functions. J Chem Inf Model 2011;51(10):2650–65. doi: 10.1021/ci2001549 .
imoto similarity: a fast and automated way to cluster small and large data sets. J [39] Yang Y, Chen H, Nilsson I, Muresan S, Engkvist O. Investigation of the rela-
Chem Inf Comput Sci 1999;39:747–50. doi: 10.1021/ci9803381 . tionship between topology and selectivity for druglike molecules. J Med Chem
[18] Greenacre M, Primicerio P. Multivariate analysis of ecological data. BBVA Founda- 2010;53(21):7709–14. doi: 10.1021/jm1008456 .
tion; 2013 . [40] Bemis GW, Murcko MA. The properties of known drugs. 1. Molecular frameworks.
[19] Rational Discovery LLC, RDKit: open-Source Cheminformatics and Machine J Med Chem 1996;39:2887–93. doi: 10.1021/jm9602928 .
Learning Software, Open-Source Cheminformatics and Machine Learning, [41] Hopkins AL, Groom CR. Target analysis: a priori assessment of druggability. Small
http://www.rdkit.org , 2006, (accessed June 2022). molecule — protein interactions. ernst schering research foundation workshop.
[20] Virtanen P, Gommers R, Oliphant TE, Haberland M, Reddy T, et al. SciPy 1.0: funda- Waldmann H, Koppitz M, editors, Berlin, Heidelberg: Springer; 2003. vol 42.
mental algorithms for scientific computing in Python. Nat Methods 2020;17:261–72. doi: 10.1007/978-3-662-05314-0_2 .
doi: 10.1038/s41592-019-0686-2 . [42] Gaulton A, Hersey A, Nowotka M, Bento AP, Chambers J, Mendez D, Mutowo P,
[21] McInnes L, Healy J, Melville J. UMAP: uniform manifold approximation and projec- Atkinson F, Bellis LJ, Cibrián-Uhalte E, Davies M, Dedman N, Karlsson A, Magar-
tion. J Open Source Software 2018;3(29):861. doi: 10.21105/joss.00861 . iños MP, Overington JP, Papadatos G, Smit I, Leach AR. The ChEMBL database in
[22] Allaoui M, Kherfi ML, Cheriet A. Considerably improving clustering algorithms 2017. Nucleic Acids Res 2017;45(D1):D945–54. doi: 10.1093/nar/gkw1074 .
using UMAP dimensionality reduction technique: a comparative study. In: El [43] Hatos A, Hajdu-Soltész B, Monzon AM, Palopoli N, Álvarez L, Aykac-Fas B, Bassot C,
Moataz A, Mammass D, Mansouri A, Nouboud F, editors. Image Signal Pro- Benítez GI, Bevilacqua M, Chasapi A, Chemes L, Davey NE, Davidovi ćR, Dunker AK,
cess. Cham, Germany: Springer International Publishing; 2020. p. 317–25. ISBN: Elofsson A, Gobeill J, Foutel N, Sudha G, Guharoy M, Horvath T, Piovesan D. DisProt:
978-3-030-51935-3 . intrinsic protein disorder annotation in 2020. Nucleic Acids Res 2020;48(D1):D269–
[23] Reynolds D. Gaussian Mixture Models. In: Li SZ, Jain A, editors. Encyclope- 76. doi: 10.1093/nar/gkz975 .
dia of biometrics. Boston, MA: Springer US; 2009. p. 659–63. doi: 10.1007/ [44] Schmidtke P, Barril X. Understanding and predicting druggability. A high-
978-0-387-73003-5_196 . throughput method for detection of drug binding sites. J Med Chem
[24] Evangelidis GD, Kounades-Bastian D, Horaud R, Psarakis EZ. A generative model for 2010;53(15):5858–67. doi: 10.1021/jm100574m .
the joint registration of multiple point sets. In: Comput. Vis. –ECCV 2014. Lecture [45] Sael L, Li B, La D, Fang Y, Ramani K, Rustamov R, Kihara D. Fast protein tertiary
Notes in Computer Science, 8695. Cham, Germany: Springer International Publish- structure retrieval based on global surface shape similarity. Proteins 2008;72:1259–
ing; 2014. p. 109–22. doi: 10.1007/978-3-319-10584-0_8 . 73. doi: 10.1002/prot.22030 .
[25] Hall LH, Kier LB. The Electrotopological State: an Atom Index for QSAR. J Chem Inf [46] Dong J, Yao ZJ, Zhang L, Luo F, Lin Q, Lu AP, Chen AF, Cao DSJ. PyBioMed: a python
Comput Sci 1995;35:1039–45. doi: 10.1021/ci00028a014 . library for various molecular representations of chemicals, proteins and DNAs and
[26] Morgan HL. The generation of a unique machine description for chemical their interactions. Cheminform 2018;10:16. doi: 10.1186/s13321-018-0270-2 .
structures —a technique developed at chemical abstracts service. J Chem Doc [47] Sitzmann M, Ihlenfeldt WD, Nicklaus MC. Tautomerism in large databases. J Comput
1965;5:107–13. doi: 10.1021/c160017a018 . Aided Mol Des 2010;24:521–51. doi: 10.1007/s10822-010-9346-4 .
[27] Truchon JF, Bayly CI. Evaluating virtual screening methods: good and bad met- [48] Pedregosa F, Varoquaux G, Gramfort A, Michel V, Thirion B, Grisel O, Blon-
rics for the “early recognition ”problem. J Chem Inf Model 2007;47(2):488–508. del M, Prettenhofer P, Weiss R, Dubourg V, Vanderplas J, Passos A, Cournapeau D,
doi: 10.1021/ci600426e . Brucher M, Perrot M, Duchesnay É. Scikit-learn: machine Learning in Python. J Mach
[28] Li D, Jiang K, Teng D, Wu Z, Li W, Tang Y, Wang R, Liu G. Discovery of Learn Res 2011;12:2825–30. doi: 10.5555/1953048.2078195 .
New Estrogen-related receptor 𝛼 agonists via a combination strategy based on [49] Alberca LN, Chuguransky SR, Álvarez CL, Talevi A, Salas-Sarduy E. In silico guided
shape screening and ensemble docking. J Chem Inf Model 2022;62(3):486–97. drug repurposing: discovery of new competitive and non-competitive inhibitors of
doi: 10.1021/acs.jcim.1c00662 . Falcipain-2. Front Chem 2019;7:534. doi: 10.3389/fchem.2019.00534 .
11