Available online at www.sciencedirect.com
ScienceDirect

 AASRI Procedia   9  ( 2014 )  51 – 56 

2014

4 AASRI C

onference o

on Circuit an

nd Signal P

Processing (

CSP 2014) 

Design an
D

nd Imple

ementati
two FI

ion of SO
IR Filter

ORIGA-
r on FPG

-optimiz
GA 

ed Powe

ers-of-

Abhijit Cha
A

andraa*, Su

udipta Chat

ttopadhyay

yb, Beetan G

Ghoshc 

aDep

partment of Elect
bDe
cDepartm

tronics & Telecom
epartment of Elec
ment of Electroni

mmunication Eng
ctronics & Teleco
cs & Communica

gineering, Indian 
ommunication Eng
ation Engineering

Institute of Engin
gineering, Jadavp
g, National Institu

neering Science a
pur University, K
ute of Technology

and Technology, S
Kolkata, India 
y, Durgapur, Indi

ia

Shibpur, India

Abst

tract

With
of  la
resea
by  u
conn
hardw
estab

h the introductio
ate.  In  addition
archers in recen
using  an  evolut
nection  to  this, 
ware  complexit
blished by comp

on of sophistica
n  to  this,  desig
nt past. In this a
tionary  comput
this  work  ma
ty  when implem
paring its hardw

ated algorithms
gn  of  hardwar
article, an attem
tation,  called  S
akes  one  comp
mented  on  an F
ware cost with m

s, the field of si
re  efficient  dig
mpt has been m
Self-organizing 
parative  study 
FPGA  chip.  Fin
many of the stat

ignal processing
gital  systems  h
made to realize h
Random  Imm
amongst  vario
nally,  supremac
te-of-the-art po

g has experienc
has  grown  suff
hardware friend
migrants  Geneti
ous  multiplier-l
cy of  the  propo
wers-of-two FI

ced enormous d
ficient  interest 
dly powers-of-t
c  Algorithm  (S
less  FIR  filters
osed design  ha
IR filters.  

diversification 
amongst  the 
two FIR filter 
SORIGA).  In 
s  in  terms  of 
s  firmly been 

© 2014 The Authors. Published by Elsevier B. V. This is an open access article under the CC BY-NC-ND license 
© 20
lsevier B.V. 
pta Chattopadh
(http://creativecommons.org/licenses/by-nc-nd/3.0/).
Sele
earch Institute 
nder responsib
Peer-review under responsibility of Scientific Committee of American Applied Science Research Institute

014 Abhijit Ch
ection and/or p

handra, Sudip
peer review un

hyay and Beet
bility of Amer

tan Ghosh. Pu
rican Applied 

ublished by El
Science Rese

Keyw
organ

words: Finite impu
nizing Random Im

ulse response (FI
mmigrants Geneti

R) filter; Field Pr
ic Algorithm (SO

rogrammable Gat
ORIGA). 

te Array (FPGA)

, hardware cost, m

multiplier-less fil

ter, Self-

* 
Corresponding au
E-mail address: a
 E

uthor. Abhijit Ch
abhijit922@yahoo

handra Tel.: +9133
o.co.in 

326684561. 

2212-6716 © 2014 The Authors. Published by Elsevier B. V. This is an open access article under the CC BY-NC-ND license 
(http://creativecommons.org/licenses/by-nc-nd/3.0/).
Peer-review under responsibility of Scientific Committee of American Applied Science Research Institute
doi: 10.1016/j.aasri.2014.09.010 

 
 
 
 
 
52  

 Abhijit Chandra et al.  /  AASRI Procedia   9  ( 2014 )  51 – 56 

1. Introduction 

Implementation of a general purpose multiplier in an FIR or IIR structure by means of Very Large Scale  
Integration  (VLSI)  technique  is  becoming  a  very  complicated  and  costlier  task  to  be  performed.  This 
problem  may  be  solved  by  considering  multiplication  operation  as  repeated  addition  and  hence  substituting 
the filter coefficients as sequence of shifts and additions. These multiplier-less filters are less power hungry 
and  require  less  hardware  blocks  for  its  implementation  [1-2].  In  connection  to  this,  SPT  representation  of 
filter coefficients is very much popular where the effect of multiplier is substituted by means of adders and 
delay elements only [3-8]. 

Several algorithms have been proposed so far in the literature where each of which deals with the powers-
of-two design of FIR filter. These include traditional techniques like mixed integer linear programming [9], 
polynomial  time  algorithm  [10],  discrete  semi-infinite  linear  programming  [11],  branch  &  bound  technique 
[12] and so on. Recently, the domain of circuit and system design has been noticeably influenced by means of 
a  variety  of  intelligent  optimization  techniques  of  current  interest  like  Genetic  Algorithm  (GA)  [13], 
Orthogonal Genetic Algorithm (OGA) [14], and Differential Evolution (DE) [15-16] and so on. 

In  this  communication,  we  have  employed  Self-organizing  Random  Immigrants  Genetic  Algorithm 
(SORIGA) for the design of multiplier-less low-pass FIR filters. Designed filter has been implemented on real 
time hardware and the requirement of resulting hardware blocks like digital gates, latches, buffers and so on 
has been calculated using XILINX Design Suite 12.3 software.   

2. Design Strategy 

2.1. Theoretical background of multiplier-less FIR filter 

System  function (cid:1834)(cid:4666)(cid:1878)(cid:4667) and  the  corresponding  transfer  function (cid:1834)(cid:4666)(cid:1857)(cid:3037)(cid:3104)(cid:4667)(cid:3)of  any  causal  FIR  filter  of  length 

(cid:1838)(cid:3)with impulse response (cid:1860)(cid:4666)(cid:1863)(cid:4667) can simply be written in accordance with the following equations [1-2]: 

(cid:1834)(cid:4666)(cid:1878)(cid:4667) (cid:3404) (cid:963)

(cid:3013)(cid:2879)(cid:2869)
(cid:3038)(cid:2880)(cid:2868)

(cid:1860)(cid:4666)(cid:1863)(cid:4667)(cid:1878)(cid:2879)(cid:3038)

                                                                                                                               (1) 

(cid:1834)(cid:4666)(cid:1857)(cid:3037)(cid:3104)(cid:4667) (cid:3404) (cid:963)

(cid:3013)(cid:2879)(cid:2869)
(cid:3038)(cid:2880)(cid:2868)

(cid:1860)(cid:4666)(cid:1863)(cid:4667)(cid:1857)(cid:2879)(cid:3037)(cid:3104)(cid:3038)

                                                                                                                       (2) 

Filters,  in  which  multiplication  operation  is  carried  out  by  means  of  shifting  and  addition,  will  be 

characterized by its impulse response as outlined below [2]: 

(cid:1860)(cid:4666)(cid:1863)(cid:4667) (cid:3404) (cid:963)

(cid:959)(cid:2879)(cid:2869)
(cid:3040)(cid:2880)(cid:2868)

(cid:1854)(cid:3040)(cid:3038)(cid:484) (cid:884)(cid:2879)(cid:3040)

(cid:3)(cid:3)(cid:1482)(cid:1863) (cid:3404) (cid:882)(cid:481)(cid:883)(cid:481)(cid:884)(cid:481) (cid:485) (cid:484) (cid:484) (cid:481) (cid:1838) (cid:3398) (cid:883)                                                                                      (3) 

For  binary  representation  scheme, (cid:1854)(cid:3040)(cid:3038) may  assume  a  value  from  the  set (cid:2415) (cid:3404) (cid:4668)(cid:882)(cid:481) (cid:883)(cid:4669) and  (cid:507)  signifies  the 
precision of an individual coefficient and formally known as word length of the filter coefficient. Response of 
such a filter due to an excitation (cid:1876)(cid:4666)(cid:1866)(cid:4667) is given by  

(cid:1877)(cid:4666)(cid:1866)(cid:4667) (cid:3404) (cid:963)

(cid:3013)(cid:2879)(cid:2869)
(cid:3038)(cid:2880)(cid:2868)

(cid:1860)(cid:4666)(cid:1863)(cid:4667)(cid:484) (cid:1876)(cid:4666)(cid:1866) (cid:3398) (cid:1863)(cid:4667)

(cid:3)(cid:3)(cid:3)(cid:1482)(cid:1866)                                                                                                             (4) 

In  order  to  compute  the  output  of  this  filter  at  any  instant (cid:1866)(cid:482)(cid:3) at  most (cid:1838)  multiplications  and (cid:4666)(cid:1838) (cid:3398) (cid:883)(cid:4667) 

additions are required. Substituting (3) into (4), we get 

(cid:1877)(cid:4666)(cid:1866)(cid:4667) (cid:3404) (cid:963)

(cid:3013)(cid:2879)(cid:2869)
(cid:3038)(cid:2880)(cid:2868)

(cid:963)

(cid:959)(cid:2879)(cid:2869)
(cid:3040)(cid:2880)(cid:2868)

(cid:1854)(cid:3040)(cid:3038)(cid:484) (cid:884)(cid:2879)(cid:3040)(cid:484) (cid:1876)(cid:4666)(cid:1866) (cid:3398) (cid:1863)(cid:4667)

                                                                                                    (5) 

 Abhijit Chandra et al.  /  AASRI Procedia   9  ( 2014 )  51 – 56 

53

The  parameter (cid:1854)(cid:3040)(cid:3038) does  not  put  any  overheads  as  far  as  the  computational  or  hardware  complexity  is 
concerned since, for every (cid:1863) and (cid:1865), it keeps the term (cid:884)(cid:2879)(cid:3040)(cid:484) (cid:1876)(cid:4666)(cid:1866) (cid:3398) (cid:1863)(cid:4667) intact or make it zero depending upon its 
assignment over the binary space. The term (cid:884)(cid:2879)(cid:3040), when multiplied with (cid:1876)(cid:4666)(cid:1866) (cid:3398) (cid:1863)(cid:4667), causes the multiplier to get 
shifted  right  by (cid:1865) bits.  For  an  input  word  length  of (cid:1849),  allowable  maximum  word  length  of  the  product 
(cid:884)(cid:2879)(cid:3040)(cid:484) (cid:1876)(cid:4666)(cid:1866) (cid:3398) (cid:1863)(cid:4667) thus becomes (cid:4666)(cid:1849) (cid:3397) (cid:959)(cid:4667). As a matter of fact, resulting complexity from the architecture of full-
adder is proportionately related to(cid:3)(cid:4666)(cid:1849) (cid:3397) (cid:959)(cid:4667) in accordance with equation (5). 

2.2. Design of powers-of-two FIR filter using SORIGA 

SORIGA  [17-18]  has  been  judiciously  employed  in  this  work  for  the  synthesis  of  FIR  tap  coefficients 
which are encoded in the form of sum of signed powers-of-two. In connection to this, any arbitrary coefficient 
(cid:1860)(cid:4666)(cid:1863)(cid:4667)may be represented by means of a binary row vector as shown below: 

(cid:1860)(cid:4666)(cid:1863)(cid:4667) (cid:3404) (cid:3427)(cid:1854)(cid:2868)(cid:481)(cid:3038)(cid:3)(cid:3)(cid:1854)(cid:2869)(cid:481)(cid:3038)(cid:3)(cid:3)(cid:1854)(cid:2870)(cid:481)(cid:3038)(cid:3)(cid:3)(cid:1854)(cid:2871)(cid:481)(cid:3038)(cid:3)(cid:3)(cid:1854)(cid:2872)(cid:481)(cid:3038) (cid:485) (cid:484) (cid:484) (cid:1854)(cid:4666)(cid:959)(cid:2879)(cid:2869)(cid:4667)(cid:481)(cid:3038)(cid:3431)(cid:3)(cid:1482)(cid:1863) (cid:3404) (cid:882)(cid:481)(cid:883)(cid:481)(cid:884)(cid:481) (cid:485) (cid:484) (cid:484) (cid:481) (cid:1838) (cid:3398) (cid:883)                                                    (6) 

In order to synthesize linear phase low-pass FIR filter, tap coefficients are chosen to be symmetric around 
its central coefficient. Proposed scheme has accumulated all such (cid:1729)(cid:1838) (cid:884)(cid:932) (cid:1730) different binary vectors into a single 
row  vector  of  length (cid:2278) (cid:3404) (cid:1729)(cid:1838) (cid:884)(cid:932) (cid:1730)(cid:484) (cid:959) which  has  been  regarded  as  a  single  chromosome (cid:2268) in  the  process  of 
evolutionary  computation.  Being  a  population-based  algorithm,  our  design  strategy  generates  (cid:1334)  such 
chromosomes  randomly  of  length (cid:2278) which  form  the  pool  of  potential  solution.  Based  upon  the  fitness  of 
individual chromosome, subsequent genetic operations like selection, cross-over and mutation are carried out 
subsequently in accordance with the steps of SORIGA. This has been symbolically outlined as follows: 

(cid:2268)(cid:3020) (cid:3404) (cid:2381)(cid:4668)(cid:1666) (cid:2268)(cid:3036)(cid:4669)

(cid:1334)
(cid:3036)(cid:2880)(cid:2869)

                                                                                                                                       (7) 

(cid:2268)(cid:3004) (cid:3404) (cid:1345)(cid:4668)(cid:1666) (cid:2268)(cid:3036)

(cid:1334)(cid:3252)
(cid:3036)(cid:2880)(cid:2869)

(cid:3020)(cid:4669)

                                                                                                                                       (8) 

(cid:2268)(cid:3014) (cid:3404) (cid:2376)(cid:4668)(cid:2268)(cid:3036)

(cid:3004)(cid:4669)(cid:3)(cid:1482)(cid:1861) (cid:3404) (cid:883)(cid:481)(cid:884)(cid:481)(cid:885)(cid:481) (cid:485) (cid:484) (cid:484) (cid:481) (cid:1334)(cid:3014)                                                                                                           (9) 

Where,  the  operations  of  selection,  cross-over  and  mutation  are  symbolized  by (cid:2381)(cid:481) (cid:1345)(cid:3)(cid:1853)(cid:1866)(cid:1856)(cid:3)(cid:2376)(cid:3)respectively. 
Parameter (cid:1334)(cid:3004)  and (cid:1334)(cid:3014)(cid:3)identify  the  total  number  of  chromosomes  allowed  to  take  part  in  the  operation  of 
cross-over and mutation respectively.  

Selection of competent chromosomes from the pool of (cid:1334) such members is executed on the basis of their 
individual  fitness  which  is  considered  to  be  the  degree  of  proximity  with  the  ideal  response.  Proposed 
algorithm  calculates  this  fitness  as  an  inverse  of  the  maximum  difference  between  the  designed  and  ideal 
frequency  response  of  the  low-pass  filter  and  makes  an  attempt  to  minimize  this  difference  to  a  significant 
extent. In this connection, maximum difference over the entire frequency band of interest has been regarded 
as the cost function of the individual chromosome. 

3. Results and Analysis 

This  section  demonstrates  the  outcome  of  the  proposed  algorithm  analytically.  Since  the  design 
incorporates evolutionary algorithm, convergence characteristics of our proposition has been depicted in Fig. 
1 below which exhibits the variation of averaged cost function with the number of iterations for three different 
values of cross-over probability. Size of population has been considered as 100 in the entire analysis. 

 
54  

 Abhijit Chandra et al.  /  AASRI Procedia   9  ( 2014 )  51 – 56 

Fig. 1: Convergence characteristics of the proposed scheme 

In  order  to  establish  the  supremacy  of  the  proposed  design,  frequency  response  of  SORIGA-optimized 
multiplier-less low-pass FIR filter of order 35 has been compared with few such state-of-the-art filters in Fig. 
2 below.                                               

Fig. 2: Comparison in terms of frequency response amongst various multiplier-less low-pass FIR filters 

It can be well apprehended from the above comparison that the proposed filter yields more attenuation in 
transition and stop-band region of frequency characteristics.  As for example, at a frequency of 0.65 rad/pi, 
SORIGA-optimized filter produces an attenuation of about 193.9 dB while the filters designed in [6], [7], [8] 
and [15] yields approximately 151.6 dB, 180.3 dB, 157.1 dB and 120.6 dB attenuation respectively. 

Subsequent part of this section elaborately describes the requirement of different hardware blocks used to 
realize  the  powers-of-two  filter  on  an  FPGA  chip.  Quite  a  few  recent  algorithms,  nurturing  the  concept  of 
multiplier-less  FIR  filter  design,  have  also  been  considered  into  our  analysis  and  the  resulting  hardware 
elements have been listed in Table 1 below. Since the filters designed by means of different algorithms are of 

 
 
 
 
 Abhijit Chandra et al.  /  AASRI Procedia   9  ( 2014 )  51 – 56 

55

different length; required number of hardware blocks per unit length of the filter has also been included for 
fair comparison. Word length of input signal has been taken as 8 in the entire analysis. 

Table 1 Comparison in terms of hardware elements amongst different multiplier-less FIR filters 

Name of the hardware block 

Algorithms

Samueli [3]
Chen [4]
Yao [5]
Jheng [6]
Xu [7]
Feng [8]
Chandra[15]
Proposed

2-input OR 

2-input AND 

Total 

672 
1012 
1395 
1016 
580 
871 
530 
425 

Per  
unit 
length 
26.88 
36.143 
49.821 
35.034 
20.714 
25.618 
18.276 
11.806 

Total 

763 
1134 
465 
508 
290 
1163 
531 
487 

Per  
unit 
length 
30.52 
40.5 
16.607
17.517
10.357
34.206
18.31 
13.528

Total 

2-input XOR 
Per 
unit 
length
26.88
36.143
48.393
35.034
20.714
39.882
12.138
10.5 

672 
1012 
1355 
1016 
580 
1356 
352 
378 

Flip flop 

I/O buffer 

Per 
unit 
length
7.36 
8.571
7.714
8 
4.25 
8.382
2.241
5.111

Total 

125 
151 
145 
153 
93 
138 
128 
139 

Per 
unit 
length 
5 
5.393 
5.179 
5.276 
3.321 
4.059 
4.414 
3.861 

Total

184
240
216
232
119
285
65 
184

It  can  be  unambiguously  observed  from  Table  1  that  the  proposed  architecture  outperforms  most  of  the 
state-of-the-art  multiplier-less  FIR  filters  by  a  large  margin  in  terms  of  the  hardware  blocks.  However, 
performance  of  the  proposed  SORIGA-optimized  filter  is  slightly  inferior  to  that  of  [7]  in  terms  of  2-input 
AND, flip-flop and I/O buffer counts. Architecture of the proposed filter as obtained using XILINX Design 
Suite 12.3 has been depicted in Fig. 3 below. 

Fig. 3: RTL schematic of the proposed multiplier-less FIR filter realized on FPGA 

4. Conclusion 

This article deals with design of a multiplier-less low-pass FIR filter has been carried out by means of a 
recently  proposed  evolutionary  optimization  algorithm,  called  Self-organizing  Random  Immigrants  Genetic 
Algorithm  (SORIGA).  Effectiveness  of  the  optimization  technique  has  been  evaluated  in  terms  of  its 
convergence  speed.  Moreover,  the  supremacy  of  the  proposed  design  has  been  established  in  terms  of 
frequency  response  of  the  filter.  Furthermore,  tap  coefficients  of  the  designed  filter  have  been  encoded  as 
sums of powers-of-two and implemented on a real time hardware chip using XILINX Design Suite 12.3. It 

 
 
 
 
56  

 Abhijit Chandra et al.  /  AASRI Procedia   9  ( 2014 )  51 – 56 

has been observed that the proposed architecture is superior to other existing design methodologies as far as 
hardware  complexity  of  the  design  is  concerned.  Performance  of  the  solution  may  further  be  improved  by 
proper modification of the fitness function of the optimization process as a future scope of this work.   

References 

[1] Mitra S. K.  Digital Signal Processing: A Computer–based Approach, 2nd ed. McGraw Hill; 2001. 
[2] Proakis J. G. Digital Signal Processing: Principles, Algorithms and Applications, Prentice Hall; 1997. 
[3] Samueli H. An Improved Search Algorithm for the Design of Multiplier-less FIR Filters with Power-of 
Two Coefficients.  IEEE Trans. on Circuits and Systems 1989:36:1044-1047. 
[4] Chen C. and Willson A. N. A Trellis Search Algorithm for the Design of FIR Filters with Signed-Powers-
of-Two Coefficients. IEEE Trans. on Circuits and Systems-II: Analog and Digital Signal Processing 
1999:46:1:29-39. 
[5] Yao, C. Y. A Study of SPT-Term Distribution of CSD Numbers and Its Application for Designing Fixed-
point Linear Phase FIR Filters. Proc. 2001 IEEE International Symposium for Circuits and Systems 2001: 
2:301-304.  
[6] Jheng, K., Jou, S., and Wu, A. A Design Flow for Multiplierless Linear-Phase FIR Filters: from System 
Specification to Verilog Code. Proc. 2004 IEEE International Symposium on Circuits and Systems, 2004: 5 
293-296.  
[7] Xu, F., Chang, C. H., and Jong, C. C. Design of Low-Complexity FIR Filters Based on Signed-Powers-of-
Two Coefficients with Reusable Common Subexpressions. IEEE Transactions on Computer Aided Design of 
Integrated Circuits and Systems 2007: 26: 10: 1898-1907.  
[8] Feng, Z. G., and Teo, K. L.: A Discrete Filled Function Method for the Design of FIR Filters with Signed-
Powers-of-Two Coefficients. IEEE Transactions on Signal Processing 2008: 56:1:134-139.  
[9] Lim Y. C. and Parker S. R.  FIR Filter Design over a Discrete Powers-of-Two Coefficient Space. IEEE 
Trans. on Acoustic, Speech, Signal Processing 1983:31:3:583-591. 
[10] Li D., Song J., and Lim Y. C. A Polynomial-Time Algorithm for Designing Digital Filters with Power-
of-Two Coefficients, in Proc. 1993 IEEE International. Symposium for Circuits and Systems 1993:1:84-87. 
[11] Ito R. and Hirabayashi R. Design of FIR Filter with Discrete Coefficients Based on Semi-Infinite Linear 
Programming Method. Pacific Journal of Optimization 2007:3:1:73-86. 
[12] Yan T. Y. and Yao K.A Multiplication-free Solution for Linear Minimum Mean-square Estimation and 
Equalization using the Branch-and –bound Principle. IEEE Trans. on Information Theory 1980:26:316-326. 
[13] Gentili P., Piazza F., and Uncini A. Efficient Genetic Algorithm Design for Power-of-two FIR Filters, in 
proc. of IEEE International. Symposium on Circuits and Systems 1995:2:1268-1271.  
[14] Ahmad S. U. and Antoniou A. Cascade-form Multiplierless FIR Filter Design Using Orthogonal Genetic 
Algorithm, in Proc. 2006 IEEE International Symposium on Signal Processing and Information Technology 
2006:932-937. 
[15] Chandra A. and Chattopadhyay S. A Novel Approach for Coefficient Quantization of Low-pass Finite 
Impulse Response Filter using Differential Evolution Algorithm. Signal Image and Video Processing 2012:1-
15. DOI: 10.1007/s11760-012-0359-4. 
[16] Karaboga N. and Cetinkaya B. Design of Digital FIR Filters using Differential Evolution Algorithm. 
Circuits Systems and Signal Processing 2006:25:5:649-660. 
[17] Tinos R. and Yang, S. Self-organizing Random Immigrants Genetic Algorithm for Dynamic 
Optimization Problems. Genetic Programming and Evolvable Machines, 2007:8:3:255-286. 
[18] Bak P.  How Nature Works: The Science of Self-organized Criticality. Oxford University Press, 1997. 

