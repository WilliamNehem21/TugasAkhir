the language consists of formulas at two levels. the formulas at the first level, classical formulas, enable reasoning about propositional symbols. the formulas at the second level, probabilistic state formulas, enable reasoning about probabilistic structures. there are also probability terms used in probabilistic state formulas to denote real numbers. the syntax of the language, expressed using bnf notation, is as follows.



proof. the result follows from the fact that eppl logic present here is a sublanguage of that presented in, for which the corresponding axiomatisation is proved to be sound and weakly complete. hence, for further details look at.



structure is particularly interesting for two reasons. firstly, it captures the idea, which arises in the study of probabilistic transition systems, that the state space should be described as a distribution of classical states[30,14,9]. secondly, it is a step towards reasoning about quantum systems, since in such systems a state is described as a probabilistic ensemble of pure quantum states(cf. mixed states, density operators). we will explore both aspects in section 4 by presenting two detailed examples.



the syntax of epctl can be easily obtained from the syntax of eppl. the idea is that at the level of probabilistic state formulas, we also introduce the usual ctl modalities. for the sake of clarity, we recall the definition of classical formulas and probability terms.



example 3.1 consider again the russian roulette variant from example 2.1 together with some temporal primitives. first, we will like to state that the bullet can not be shot before the outcome of the coin is heads, which can be expressed as a[(( b)= 0)u(( h)> 0)]. suppose that the gambler is always playing this game alone, clearly the probability of killing himself tends asymptotically to 1, we can



it is well known that a slightly better algorithm can be obtained if eg is taken as a basic modality instead of af, but we refrain from doing so here. although the algorithm is exponential in the worst case, it assumes that a probability distribution over valuations is encoded as a vector of probabilities. clearly, for particular relevant cases, there are much more efficient and compact encodings; we are currently investigating which probability distributions can be encoded efficiently.



