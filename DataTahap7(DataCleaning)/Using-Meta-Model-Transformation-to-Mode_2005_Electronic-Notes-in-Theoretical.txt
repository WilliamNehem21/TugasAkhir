understanding how software systems evolve is useful from different perspectives: reverse engineering, empirical studies etc.. for an effective understanding we need an explicit meta-model. we introduce hismo, a meta-model which is centered around the notion of history and we show how we can obtain it from a snapshot meta-model. based on our experience in developing the hismo reverse engineering system, we show how we can transform a snapshot meta-model in a history meta-model.



various approaches have been proposed to analyze different aspects of software evolution[1,2,3,4,8,12,13,14,17,18,19,20,21]. each of these approaches typically focuses on only some traits of software evolution(e.g., which parts are changed the most, what kind of changes happened in a particular part etc.), and do not rely on explicit meta models. in such conditions, is it is difficult to understand what the models exactly refer to. the lack of explicit meta-model makes it difficult to compare and integrate tools even when they provide similar yet different or complementary results.



the authors have already built the case for an explicit meta-model centered around the notion of history. the name of the proposed meta-model is hismo. we implemented hismo in a tool called van which is built on top of the moose reengineering environment. we use hismo for characterizing the evolution of software and we validated it in a number of occasions for reverse engineering purposes[9,10,11,16].



however, the concept of history is by no means dependent on famix and the approach can be applied to other meta-models as well. in other words from a conceptual view hismo could be seen as a meta-model transformation transforming a snapshot meta-model into an history meta-model. this paper investigates this idea by considering the problem of evolution analysis from a model driven(reverse) engineering perspective.



