the biochemical paradigm is well-suited for modelling autonomous systems and new programming languages are emerging from this approach. however, in order to validate such programs, we need to define precisely their semantics and to provide verification techniques. in this paper, we consider a higher-order biochemical calculus that models the structure of system states and its dynamics thanks to rewriting abstractions, namely rules and strategies. we extend this calculus with a runtime verification technique in order to perform automatic discovery of property satisfaction failure. the property specification language is a subclass of ltl safety and liveness properties.



in we proposed the visual structure of port graph, as well as port graph rewrite rules and a rewriting relation on port graphs for modelling complex systems with dynamical topology, whose components interact in a concurrent and distributed manner. nodes with ports represent components(or objects), while edges correspond to interactions(or communications). then port graph rewrite rules are used for modelling the system evolution by creating new nodes and connections among them at specific points(ports), breaking connections, merging, splitting, or deleting nodes, or performing any combination of these operations. by instantiating the structure of the objects in the abstract biochemical calculus with port graphs, we obtained the port graph calculus and we showed its capabilities of modelling autonomous systems and biochemical networks in[1,4]. an implementation of the port graph calculus is provided by the porgy environment.



at this stage, our aim is to improve the confidence in biochemical models of autonomous systems by ensuring that the current execution is consistent with the expected properties of the system and by detecting violations of safety properties in order to recover from problematic situations. runtime verification fits well in this context as a verification technique that increases confidence in the correctness of the system behaviour with respect to its formal specification. we have already proposed a method for verifying invariant properties of biochemical program. an invariant property is encoded as a special rule in the biochemical program modelling the system and such rule is dynamically checked at each execution step. we obtained a kind of runtime verification technique which allows the running program to detect its own structural failures.



the paper is organised as follows. in the next section, we give an overview of the abstract biochemical calculus, syntax and semantics. section 3 discusses the kripke structure associated to a biochemical program and the set of temporal formulae we consider. in section 4, we formalise runtime verification in this context and extend the calculus to perform simultaneously computation and verification steps. further perspectives are drawn in section 5.



consider a biochemical program p describing the library loaning service from examples 2.1 consisting of: the library of the maths department with 6 statistics textbooks and 6 maths students, the library of the cs department with 3 statistics textbooks and 6 cs students, and the strategies given in example 2.4. we guard



in sect. 4.4 we only gave a glimpse of how to define strategies encoding ltl formulae built using two temporal operators. based on these ideas, we can synthesise a methodology or, even better, an automatic procedure which takes as input an ltl formula built using at most two temporal operators and produce the encoding strategy. a challenge will be then to encode even more complex ltl formulae.



for future work we plan to implement the runtime verification technique described in this paper in the porgy system, an environment for visual modelling of complex systems through graphs and graph rewriting rules. porgy is still under development but already provides tools to visualise traces of rewriting, and a strategy language has been designed in particular to guide the construction of the derivation tree. we envisage applications to wireless sensor networks and biochemical signalling pathways to accompany their formal model development by analysing random executions and critical properties.



