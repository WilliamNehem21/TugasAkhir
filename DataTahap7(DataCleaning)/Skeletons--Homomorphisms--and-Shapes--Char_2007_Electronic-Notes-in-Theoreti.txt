in this paper we develop a framework, based on strand spaces, for reasoning about cryptographic protocols and characterizing their executions. we define skeletons, homomorphisms, and shapes. skeletons model partial information about regular(honest) behavior in an execution of a cryptographic protocol. a homomorphism between skeletons is an information-preserving map. much protocol analysis may be regarded as an exploration of the properties of the category of skeletons and homomorphisms. a set of skeletons can characterize all runs of the protocol; the smallest such set is the set of shapes. this approach is a foundation for mechanizing protocol analysis.



in this paper, we will present a framework, based on strand spaces, for analyzing protocols and characterizing their executions. while a generalized notion of our characterizations can capture both authentication and secrecy properties, we focus here on a simpler notion that captures authentication properties exclusively. we will discuss the applicability to secrecy elsewhere. in practice, any algorithm for constructing characterizations must reason about both secrecy and authentication. as motivation for this framework, consider a protocol analyst presented with some initial assumptions about a protocol run. often this is the experience of a single participant and some secrecy and freshness assumptions. the analyst can then repeatedly apply inference rules such as the authentication tests in order



at any point in the analysis, the analyst possesses partial information about the structure of possible protocol runs. we will represent this partial information in structures we will call skeletons. we will also define a notion of homomorphism between skeletons; homomorphisms are information-preserving maps. thus, much of protocol analysis can be expressed in terms of skeletons and homomorphisms between them.



we discuss the actual algorithms used to construct these characterizations in. in the present paper, we define the underlying framework for the algorithms. given a set of initial assumptions(an initial skeleton), we will define how a set of protocol runs can characterize all possible runs. furthermore, we will show that there is a minimum such characterization: the set of shapes. they are the minimal, essentially different executions possible for the protocol.



in the ensuing discussion we will use the term regular strand to refer to a run of some role of the protocol. likewise we will use regular node to refer to a send or receive event occuring on a regular strand. we also use regular behavior to refer to all regular nodes in a particular run of the protocol as well as their causal ordering. we will also use the notation term(n) to refer to the message sent or received on node n.



terms in a are freely built from atoms using concatenation and encryption. the concatenation of t0 and t1 is written t0, t1. encryption takes a term t and an atomic key k, and yields a term written as{|t|}k. instead of general substitutions, we use replacements for simplicity. replacements have only atoms in their range:



we saw that the iso reject protocol has two shapes, one corresponding to the intended run and another corresponding to the attack. the needham-schoederlowe[7,6] protocol has only one shape, corresponding to the intended run. this holds for nsl whether we take the point of view of a responder b, asking what global behavior must have occurred if b has had a local run of the protocol, or whether we start from a local run of an originator a. in either case, the other party must have had a matching run. a, however, can never be sure that the last message it sends was received by b, as a is no longer expecting to receive any further messages. uniqueness of shape is perhaps not surprising for as strong a protocol as needham-schroeder-lowe.



due to the existence of an infinite set of homomorphisms realizing any preskeleton a, it is useful to find a small subset of those that characterizes all the runs. the notion of characterization is catered to an intuitive understanding of what it means for a protocol run to be an extension of another protocol run. here we capture one notion of extension that we have, in our experience, found to be the most natural and useful.



clearly the set of all realizing homomorphisms for a is a characterization for a. however, we seek a characterization as small as possible: a minimal characterization, under some criterion of size(number of nodes, total size of messages... etc). we will show later that there is a single characterization that is a unique minimum for all these definitions of size simultaneously.



in cases where the set of shapes is finite, the shapes for a preskeleton a form a succint representation of all protocol runs compatible with a. in most protocols we have studied, we have found experimentally that any starting preskeleton yields a finite set of shapes. however, it would be useful to identify a subclass of protocols for which this is guaranteed. we expect that a subclass of protocols similar to those defined in and has this property.



tree of preskeletons with the shapes at the leaves. these shapes are annotated with secrecy information. the algorithm reasons about secrecy by trying to construct a shape that discloses a value. further analysis of the properties of this algorithm will be the subject of future work.



