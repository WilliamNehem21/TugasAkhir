the transformations in this paper will be written in great, a language for specifying graph transformation rules. great belongs to the class of practical graph transformation systems such as agg, progres and fujaba. it uses uml and ocl to specify the domains of the transformation.



graph transformation systems such as great allow users to transform models of one meta-model to models of another meta-model using a collection of pattern matching rules. however, it is not certain whether the output of the transformation preserves the semantics of the source model that we intend to analyze. important semantic information may easily be lost or misinterpreted in a complex transformation, due to errors in the graph rewriting rules or in the processing of the transformation. we need a method to verify that the semantics that we are interested in analyzing are indeed preserved across the transformation.



convert statechart models into eha models. create promela models from the eha models, which can be verified using the spin model checker. our approach will be useful in these instances, to provide a certificate that the intermediate formats truly preserve the property we wish to verify using them. an interesting research problem is whether our approach can be used to check whether the generated promela model(which is code in plain text) truly represents the eha model it was generated from.



