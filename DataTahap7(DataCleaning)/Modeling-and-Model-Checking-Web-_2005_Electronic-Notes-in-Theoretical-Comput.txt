we give an overview on web services and the web service technology stack. we then show how to build petri net models of web services formulated in the specification language bpel4ws. we define an abstract correctness criterion for these models and study the automated verification according to this criterion. finally, we relate correctness of web service models to the model checking problem for alternating temporal logics.



service-oriented architectures are a new paradigm in the development of communicating computational systems which are used in business organization. today, more and more administrative and organizational tasks such as procurement, document handling, business transactions and management aspects are transferred to fully automated systems or at least supported by computing systems. web service technologies are expected to fundamentally change the way such systems are constructed and how internal and external systems will interact.



ent patterns interact properly(e.g., stop leads to stopped, initial leads to final or failed, linked activities are executed in correct order, and so on). the whole state space consisted of 9991 states. on the machine used, lola can handle tens of millions of states. furthermore, lola offers several state-of-the-art state space reduction techniques, including partial order reduction[24,15,18], the symmetry method[10,22,18], and the sweep-line method. while the



symmetry method was not applicable in this example, joint application of partial order reduction and the sweep-line method lead to substantial reduction, that, however, depends on the particular property. the best reduction, achieved when checking for termination, boiled the state space down to 1286 states. at this time, we cannot extrapolate these measures to larger examples. nevertheless, we could show that there are chances for successful verification of larger processes. in particular, standard reduction techniques seem to work well on the generated petri nets. furthermore, we have additional ideas for further state space reduction. for instance, we are investigating the possibility to replace certain patterns by simpler patterns, when the property to be verified does not concern the pattern, or when static program analysis on the bpel source code provides additional information(e.g., impossibility of errors in inner activities).



for more theoretical issues related to petri net models of web services, it is convienient to study simpler models. for this purpose, we proposed workflow modules. this concept allows us to study questions about well-behaviour of a service, such as usability, composability, and abstraction.



central usability is the question whether a module can be controlled by a single partner that accesses all ports of the module. we characterize successfully controlling partners and show the existence of a universal strategy, i.e. a partner that embeds all successfully controlling partners.



it turns out that at least two different scenarios can be distinguished. in the first scenario, we have a set of partners that know how the remaining partner act. that is, they may know the algorithms according to which the other partners run. they do not, however, know the states of the remaining



in a distributed system, each global state is composed of several sub-states, one for each distributed component. often, a player can observe and influence only particular sub-states. for example, the environment e of a web service w can observe only the outputs and influence the inputs of w. while e can choose its own state and outputs according to some strategy, it has no knowledge or control of the internal state of w.



currently, we are implementing an automated translation from bpel4ws to petri nets, giving as access to larger examples. we are developing state space reduction techniques applicable to the decision procedure for central and distributed usability. ultimately, we want to build up an integrated modeling, verification, and testing environment for web services.



on the theoretical side, we are investigating generalizations of our usability criteria to cyclic web services. this would enable us to verify a larger class of web services. furthermore, we are developing methods for the automated generation of test cases from models of bpel specifications. finally, we are exploring the capabilities of alternating logics for the specification of relevant correctness criteria in the context of web service technology.



a. ichikawa and k. hiraishi. analysis and control of discrete-event systems represented as petri nets. in p. varaiya and b. kurzhanski, editors, discrete event systems: models and applications, iiasa conference, soprpon hungary, august 3-7, 1987, number 103 in lecture notes in control and information sciences, pages 115134. springerverlag, 1988.



