i present a heuristic based in tabu search, in order to generate feasible solutions for solving the prizecollecting rural postman problem. this problem was recently defined and is a generalization of other arc routing problems. the numerical results from a series of computational experiments with various types of instances show the good behavior of the proposed algorithm in comparison with previous works.



when perform a service to a edge not only incurs a cost but a profit is received. the cost is to traverse the edge. the profit is due to the service provided to the edge. in a cycle is taken into account the cost of traversing all edges of the same. is possible that a edge is traversed more than once. only when an edge is traversed for the first time in a route, a reward is earned. the objective the prpp is to find a route that begin and finish in the deposit. the objective the prpp is to find a route that begin and ending in the deposit, such that maximizes the total profit to serve the edges, less the the cost of traverse them.



there are potential practical applications for the prpp. applications of arc routing problems trying to minimize costs. it was decided that the service demand is exactly in some places. because the goal is not to decide which edges will be served, is to determine the least cost to traverse them. with the rural postman problem can be modeled more complex practical problems. a company that wants to maximize profits, can decide that the demand of a edge will not be served, unless this provided a benefit for the company. an example where this principle is applied, is in the collection of recycling bins by private companies. another example is the mail service managed by private companies. companies may choose the districts to which they will serve. because of the success that has been obtained by applying the tabu search to several arps[23,12,11,2,19,1,10,8,7] this metaheuristic is chosen as the basis of algorithmic solution for the prpp.



i developed an algorithm based on tabu search to solve the prpp. this algorithm has two phases. in the first phase generates two solutions feasible for prpp by two constructive algorithms. these algorithms are called union of connected components and successive elimination of connected components. the second phase is the application of a algorithm of tabu search that tries to improve the initials solutions.



solution which will iterate in the tabu search. the solution of the algorithm 1 union of connected components can be used later in the tabu search in case we need to diversify the search. in line 6 begins the iteration of the algorithm.



for the first time. in lines 20 and 21 edges are obtained that are associated with the properties of prpp, which are known as dominance 2 and preprocessing 1. the idea with the edges of edgesdominance2 is to try to promote their inclusion in the feasible solution, because if one edge r belongs to the optimal solution is likely that some of adjacent edges also belong to the optimal solution. due to this we see that the cost of these edges in the function 2 is 0. the purpose of having the edges of edgespreprocessing1 is try to avoid having to include these edges in the feasible solution, as shown in the function 2. in lines 26-33 is observed what makes the algorithm in case you have a number iterations without finding a better global solution. the first time there will be a diversification of the search in a completely different state space, which is obtained by continuing with a tabu search feasible solution generated randomly. in case of falling back into this situation will make a intensification of the search by choosing as current solution, the solution algorithm



of problems. the heuristic of, just find a better solution than the tabu search in the problems g64 and g100. the tabu search get the optimal solution in 12 of the 15 types of problems, which is very satisfactory. the computation time of the tabu search was higher in small instances and much lower in larger problems. this is because in the tabu search generates two initial solutions, which is expensive in time. however we consider that the computational effort of the tabu search is good if we see time total spent by both heuristics.



