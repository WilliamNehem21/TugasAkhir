in d. garlan lists convincing arguments for the use of formal techniques architecture description languages. in a survey(in german) over the use of formal techniques for the description of software architectures is given. exemplarily stated there are: process algebras are used for various architecture description languages, the component itself. sara is an early architecture description language using petri nets for the description of the operational behavior. in[9,10] dualistic petri nets are proposed. these describe the architecture using abstract representations of parallel process objects. in zcl is based on z a set-theoretic specification language. z schemes are used to describe the architecture structure as well as the dynamic changes. community and cool are architecture description languages that are founded on graph transformations. but in cool no explicit component specification is given.



but there are only a few other approaches with the aim to combine componentbased architectures and formal specification techniques in order to have a continuous formal technique. those examine only a particular specification technique in contrast to our generic approach. e.g. uses the integrated formal specification technique korrigan to specify components and their composition. community[8,19] is a prototype language for architectural modeling that is founded on graph transformations.



the multiple extension defined below expresses the possibility to apply a set of transformations to a larger context within a single transformation. it differs from the parallel extension used in and by allowing given transformations with the same codomain only, and it contains the extension defined above as a special case. in general, this construction is not available for all families of embeddings and corresponding transformations. intuitively, such families allow multiple extension, if the boundary of all embeddings is preserved i.e. the transformations do not delete or rewrite parts that are needed to maintain a well-formed specification, and all overlappings with respect to the embeddings are transformed uniquely.



whenever we have two connections crossing the same level of a given component architecture, we also offer a parallel composition, which constructs the result of two compositions within a single step. this is the case in the theorems 3.8 and 3.9.



elementary transition systems are a special notion of petri nets, allowing only arcs and place weights of arity one. we use the algebraic notion of petri nets as given in and extend it by the initial marking. this enables us to use a set based representation of the pre and post functions of the transitions of the nets.



embeddings are injective morphisms. the following notion of transformation of elementary nets is an adaption of the substitution morphisms of place/transition nets in. these morphisms replace transitions of the original net by whole subnets in the target net and map places injectively. again, the markings are preserved and reflected. more precisely, a substitution morphism s=(sp, st):



moreover, we introduce the concurrent application of composition steps, called parallel composition. based on that we prove the result of two overlapping composition steps to be independent of the construction ordering. this induces that the given reduction semantics of architectures is unique. the generic concept is instantiated to the sample specification technique of elementary nets which is also used for the small web browser suite in order clarify the main ideas.



