causality is closely related to a model of time. a fundamental question concerns the model of time. basically there are two essentially different models of time, discrete(digital) time and continuous(analog) time. a first critical question for system models has to do with time:



for input/output information processing devices there is a crucial notion of causality. certain output depends causally on certain input. causality indicates dependencies between the actions of information exchange of a system. so far interface behaviors are nothing but relations represented by set valued functions. in the following we introduce and discuss the notion of causality for interface behaviors.



interface behaviors generate their output and consume their input in a time frame. this time frame is useful to characterize causality between input and output. output that depends causally on certain input cannot be generated before this input has been received.



nevertheless, proper timing permits instantaneous reaction: the output at time t may depend on the input at time t. this may lead into problems with causality if we consider in addition delay free feedback loops. to avoid these problems we strengthen the concept of proper time flow to the notion of causality.



if we do not have the full notion of causality in the interface abstraction of a component we cannot determine which events will definitely happen, which events will happen in reaction to those and which will not take place due to causality properties. then it may become impossible to exclude behaviors the represent so-called causal loops and therefore are operationally impossible. in particular, the dead lock properties cannot be deduced correctly from the interface abstraction of system components.



to make for a component the time scale coarser by the factor n is a form of abstraction. this coarsening may introduce some kind of nondeterminism and underspecification due to the coarser time scale. in particular we are interested in the problem of loosing causality information by such a time coarsening.



a special case is to get rid of all time information. if the output of a component is depending on the timing of the input a behavior generated by full time abstraction shows a lot of nondeterminism. however, if the output produced does not depend on the timing of the input messages but only on their values and the order in which they arrive behavior generated by full time abstraction will rather be more deterministic. however causality information may be lost that way.



strong causality has a number of advantages since it makes the reasoning about systems more concrete and simpler. in particular, it is easy to treat feedback loops by fixpoints for strongly causal behaviors since time guardedness guarantees for instance unique fixpoints for deterministic functions. in other words, for strong causality all fixpoints are causal.



