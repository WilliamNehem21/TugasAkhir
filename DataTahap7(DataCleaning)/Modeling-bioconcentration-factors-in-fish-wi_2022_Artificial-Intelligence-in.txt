the bioconcentration factor (bcf) represents the tendency of a chemical to accumulate in organic tissues or living animals - typically fish. it is defined as the ratio between the concentration in the organism and the concentration in the surrounding water phase at steady-state conditions in the laboratory [1]. oftentimes, this ratio is normalized to a fixed lipid content (5%) of the test organism. common test species are fathead minnow, bluegill sunfish, or rainbow trout.



experimental bcf data for model training was taken from grisoni et al. [4]. they compiled bcf values for 1056 compounds by merging three datasets, which had been used for the development of bcf qsar models, and 45 compounds with special metabolism or known kow- bcf relationships (e.g., pyrethroids, organophosphorus compounds, perfluorinated and polychlorinated compounds). in terms of chemi-



to build the external test set, we searched for bcf values in the ppdb [31] (as of 08-03-2022) that were neither part of our training dataset nor part of the meylan model [6,7] training set. only entries with an assigned quality level of 4 or 5 were kept, which means the endpoints have been reviewed and curated by the ppdb providers and were used for regulatory purposes in the majority of the cases. to main- tain feasibility with our modelling approach, we excluded molecules containing metal atoms and stereoisomers with more than 0.8 log units difference in bcf between the isomers. furthermore, we cross-checked the reliability of the data based on original study reports or public list of endpoints. this led to the correction of flufenoxuron, spirodiclofen, metaflumizone, camphechlor and removal of aldicarb, vinclozolin, 1- dodecanol, and acrylonitrile from the set. however, we could not check ca. one third of the molecules because the data origin was not referenced precisely. in total, the final curated test set contains 80 molecules.



[13] to 512 dimensional descriptors without any further pre-processing by cddd. note that this circumvents the applicability domain restric- tions imposed by the cddd pipeline (logp -5 to 7; molecular weight 12 to 600 g/mol; 3 to 50 heavy atoms) and affected around 3% of the molecules from our datasets. for a discussion of the impact of this de- cision, see subsection applicability domain. nine molecules had to be excluded from the training set at this stage, because they contain sn, which is not part of the cddd vocabulary.



all our cross-validation routines were conducted on these cluster splits, for both single-task and multitask models. for training processes involving both hyperparameter optimizations and model selections, nested cross-validation [34] was employed to avoid optimistic biases when evaluating model performances. nested cross-validation uses the data effectively to create a series of data splitting (training, validation and test). simple leave-one-cluster-out cross-validation was used when only tuning hyperparameters for fixed model structures.



support vector regressor (svr), random forest (rf), and xgboost were trained on the bcf data using the cddd embeddings as input fea- tures. nested cluster cross-validation was employed to perform hyper- parameter optimizations and model selection. our cross-validated train- ing results showed that the cddd descriptors work best in combination with svr, as previously reported [13]. the optimal svr has radial basis 0.005. in addition, early stopping was employed to avoid overfitting, where the patience and epoch number are finetuned during optimiza- tion. all hyperparameter values specified in the text were obtained by optimizing the loss function on an extensive hyperparameter grid. the training scripts and all optimal hyperparameters can be found in the supporting information.



to explain our bcf model, we borrowed ideas from post-hoc pertur- bation methods, feature ablation and occlusion [44,45]. the aim is to establish a gradient-free method for assessing the importance of indi- vidual smiles characters. in general, such methods replace the original input features with a baseline value to create a perturbed input. it is expected that the more important a feature is, the greater the change in



from the models tested, only vega read-across was able to outper- form our xbcf model, but only when considering molecules inside the applicability domain, i.e. when very similar molecules exist in the train- ing set. this restricted the applicability to 102 out of 184 molecules. our xbcf model on the other hand, was evaluated on the full set of molecules. moreover, the loco evaluation process involves a certain degree of extrapolation, which means the model is useful even for new chemical classes.



the cross-validation results due to higher similarity to the training set. for the other models, the external test set is a more demanding task compared to the training data and many models fail to properly predict these molecules. some of the models even struggle to outperform the linear logd model, which might indicate overfitting. the generally infe- rior performance can have several reasons. first, the data we collected, although carefully checked, might have undergone a less rigorous cura- tion than the training set, which had been checked and used in multiple works already. therefore the experimental bcf values might be slightly



with these goals in mind, we introduce two input perturbation meth- ods to obtain signed atom-level sensitivity scores. together with smart visualizations, these methods allow inspecting the model predictions for each input molecule of interest. because they are gradient-free, the methods can be widely applied, independently of the downstream mod- eling algorithm used.



the resulting sensitivity scores are context-dependent, as opposed to rule-based systems which would assign the same meaning to a particular substructure in all molecules, regardless of the context. the context of course refers to the input smiles, such that different smiles notations lead to small variations in the sensitivity scores. we provide examples based on randomized smiles in the supporting information that show the qualitative stability of the explanations.



very high values to several terminal atoms with a double bond and clos- ing brackets, which appear in non-terminal positions in the smiles string (see e.g., triallylamine example). removal of these characters would lead to the formal introduction of new bonds between remote parts of the molecule, and thus a more drastic change to the molecule than removal of a single atom.



overall, we consider the character substitution method slightly more useful for users who want to focus on the visualization of the molecu- lar structures, because of its robustness with respect to symmetry. the character deletion method can provide additional insights for terminal atoms, brackets, or other characters that have pronounced importance due to their particular position in the smiles string. in the following sections, we focus on the character substitution method.



by training, many organic chemists are used to think in terms of func- tional groups to derive conceptual models and explain molecular proper- ties. not surprisingly, there is a large variety of qsar approaches in the literature building on functional groups or substructure contributions, e.g., classical group contribution methods, atom-centered fragments, fingerprints, and many more [56]. an ideal explainable ai framework for molecular property prediction would assign attributions to both in- dividual atoms and larger substructures. we were curious whether our data-driven approach could be used to explore effects of functional groups, keeping in mind that our sensitivity scores are conceptually different from additive contributions. for this analysis, we summed up the sensitivity scores for a set of common functional groups (including bracket and bond characters) for the molecules in our bcf training set.



we compare these group sensitivity scores to the correction factors of the kowwin model [7,36] as a typical representative for group con- tribution models. kowwin predicts logkow as a linear combination of group contributions, i.e., fitted parameters for a set of pre-defined atoms and functional groups. additionally, we compared the qsarpy modula- tors [57] that were derived from differences in measured logkow upon addition or removal of molecular fragments. when multiple modulators matched the kowwin description we selected only the most general definition.



approach, where both lipophilicity (logd) and bcf are predicted simul- taneously. based on a rigorous evaluation, we show that our model is more accurate than previously published models, and generalizes well on unknown regions of the chemical space. it is purely data-driven and therefore independent from expert-crafted rules or the definition of functional groups. more importantly, we provide smiles token sensitiv- ity scores which serve as local explanations for each prediction. this new explanation method relies on smiles token substitutions or deletions, and can be applied to downstream models based on cddd descriptors or other string-based models learning directly from smiles strings. we hope that together with a robust prediction model, the explainability layer will increase the value and trustworthiness of the predictions. it allows users to poke inside the inner workings of the model and could help with molecular design and mechanistic understanding of processes involved in bioaccumulation. we discussed various examples to spot-



light important perks of the explanation methods, and to give guidance for their interpretation. we could show that the two methods highlight, how the prediction changes upon changing (substitution approach) or removing (deletion approach) a character from the input smiles. we emphasize that this approach provides useful means to understand the predictions of the model based on its internal representation. how- ever, the sensitivity scores should not be confused with incremental contribution factors that sum up to the total prediction for the molecule.



we share the logbcf training and test sets along with the associated logd values (measured or predicted), cluster splits, and bcf predictions. the logd training set is a proprietary in-house dataset and cannot be shared. we provide the sensitivity scores as a json file that can be used with xsmiles. the python code repository to calculate sensitivity scores is available via



