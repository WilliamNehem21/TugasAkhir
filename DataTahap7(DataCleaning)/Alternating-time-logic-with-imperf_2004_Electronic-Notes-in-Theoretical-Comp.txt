we study here a variant of the alternating-time temporal logic(atl) where each agent has a given memory. we show that it is an interesting compromise, rather realistic but with a reasonable complexity. in contrast, most models with perfect recall and imperfect information have an undecidable model-checking problem.



with incomplete information,many authors assume perfect recall[7,10], i.e. that each agent can use the complete history of its information. for practical reasons, we propose here to consider also imperfect recall: the memory of each agent is described explicitly. this does not necessarily mean that what the



a banker b at his desk d knows the code c of the safe in the vault v. a robber r wants to open the safe o. he can threaten b with his gun. when threatened t, b is paralysed by fear and tells the code. r can dial any number on the safe when in the vault. r can try to open the safe when in the vault, but it will only open if the last dialled number n is the code s; otherwise the vault door closes, jailing r.



we represent the fact that b knows the code by a private variable containing the code. if we use atl with complete information, all variables are accessible to all agents: thus the robber has a simple strategy to open the safe, since he can go in the vault and type the code that he(magically) reads from the brain of the banker. this strategy is synthesized easily by an atl model-checker, but it looks unrealistic.



thus, we propose here to include in the model an explicit description of the memory of the agents. we can select two types of solutions for this example: if the robber is modelled as absent-minded, i.e. has not enough memory to store the code, he will not be able to open the safe, since he would have forgotten the code while going to the vault. if he has enough memory, the the perfect recall strategy also applies here.



example 2.1 for our robber example, for each code c consider the strategy of going in the vault and typing code c. this strategy is successful when the code is indeed c. for each state q, we would thus have a successful strategy for the robber with the definition of.



pnp[3, thm 6.2]. the polynomial part of pnp can on course be integrated in the np choice of the imperfect recall strategy. we must call this for every cooperation subformula(at most n times, in p) yielding a pnp np algorithm.



formula using former variables zj,and locally quantified variable xi, yi. we assume that all variables are distinct. let xi={x1i,..., xnii}, yi={y1i,..., ymii}. we encode valuations very directly as paths in a game with two players{x, y}.



cates have an f prepended. the zj are directly replaced by their definition. these replacements might make the textual form of the formula exponential in size, but fortunately the complexity actually depends on the size with subformula shared(the dag form), which is still polynomial.



a characteristic of np-complete problems is that, although finding a solution(a strategy, here) is difficult in some cases, it is easy in other cases and it is always easy to check a solution. model-checking atlir is no exception to this. we thus provide here heuristic ways to construct ir strategies for atlir.



we have studied various possibilities for the model of agents: perfect or imperfect information, and perfect or imperfect recall. although adding perfection yields more powerful agents, as expected, perfect information make the model-checking problems easier while perfect recall makes them more difficult. imperfect information and recall seems a reasonable compromise, with realistic modelling powers and decidable problems.



knowledge: the knowledge of agents plays an essential role in this paper, yet is never explicit in the logics we consider here. adding an explicit knowledge operator seems useful, but what should be its meaning? additional knowledge can be brought by the strategy used by the cooperating agents, but depends on which strategy is used. it seems thus necessary have a logic where strategies are explicit.



