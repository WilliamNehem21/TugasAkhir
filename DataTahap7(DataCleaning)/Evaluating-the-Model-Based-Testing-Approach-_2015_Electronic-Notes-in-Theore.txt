due to the expansion in the number and diversity of mobile device users, the study of new testing approaches is essential to reduce the occurrence of faults and thereby ensure a better quality of mobile applications. according to muccini et al., the mobile context has characteristics that directly influence the testing activity, such as connectivity, limited resources, autonomy, user interface, context awareness, adaptation, new operating systems and programming languages, diversity of settings, and touch screen.



in this context, one of the techniques that can be applied to the testing activity to ensure software quality is model-based testing(mbt). according to utting and legeard, mbt allows the automatic generation of test cases through a model built based on the expected behavior of software under test(sut). mbt is an approach that has several advantages reported in the literature, such as the automatic test case generation, fault detection effectiveness, and reduction in time and cost for testing.



finally, test execution is the application of the test cases in the sut, brought after the transformation performed in the previous step. following the execution, results are analyzed and corrective actions taken. an automatic check may be performed if the test model specifies both input and output values.



despite research in software testing, the rise of technologies and platforms fosters the creation of new research topics. among them, there is an exponential increase in mobile devices used not only for entertainment but also in critical areas, such as health, financial, and industrial. muccini et al. mention the need for specialized approaches to create tests for mobile applications, taking into account characteristics that directly influence the testing activity highlighting connectivity, limited resources, autonomy, user interface, context awareness, adaptation, new operating systems and languages programming, diversity of settings, and touch screen devices. as a result, the testing of mobile applications introduces new challenges that must be overcome and have been addressed in scientific and technical research in the areas of software engineering and mobility. these works can be divided into two lines.



in the second line, researchers investigate faults characteristic of mobile applications and new testing strategies are proposed based on this knowledge. maji et al. evaluate the reported failures in symbian and android platforms resulting in a detailed analysis of found faults, corrections made,and a comparison between the two operating systems.



yang et al. propose a testing technique to identify and quantify causes to faults related to excessive waiting time for certain events in android applications. to do so, the authors relied on artificial insertion of delay instructions in typical problematic operations.



amalfitano et al. state that the mobile application test-driven user interface has been increasingly explored and automation tools have been proposed. however, they conclude that the use of these supporting tools is not appropriate for developers and testers with little experience. the paper presents an approach based on mbt and finite state machines called mobiguitar which provides resources for the generation of test cases from the analysis of the graphical interface of an android application. the mobiguitar tool was used in four open source applications and resulted in the generation and execution of 7,711 test cases and ten new faults detected.



at this stage the 15 people involved were divided into three groups with five members each. thus, we obtained three test models with different perspectives. groups 1 and 2 were composed by the undergraduate students and group 3 was composed by developers.



we can apply the test cases implemented with robotium platform directly in the sut after the concretization phase. therefore, an android virtual device(avd) was set up to simulate the environment in which the mobile application is installed and tested. an avd is an emulator of the android operating system and the main tool used in mobile application testing to provide a rich set of features also found in physical devices. it also enables combinations of settings as screens with different sizes and qualities, memory size, and storage. an avd was created with version



the study presented in this paper was conducted to evaluate the applicability of mbt in the context of mobility. the results provided relevant evidence to the outlined issues and can be used to motivate future work. however, the study presents threats discussed as follows that make it impossible to generalize the results to other scenarios.



the choice of mbt techniques and tools is also a possible threat. there is no consensus in the literature on a single technique or tool that characterizes the mbt approach. so a question is whether the choices of technique and tools are representative or not. however, the technique and the tools have been applied in other contexts and is not complicated to realize that the testing process adopted follows the steps described in the mbt literature.



in this section, we discuss the major threats of the study. other experimental studies are needed to reduce the limitations identified. however, this paper presents results that motivate further research on the topic. the main motivational factors are: the potential of automation, cost reduction, and the ability to detect faults as well as the good acceptance by groups of professionals and students.



advantages, such as automatic generation of test cases, fault detection capability, improved test quality, reduced time and cost for testing, and evolution of test models. some challenges were also noted with emphasis on the test modeling difficulties, tests concretization particularities in the context of mobility, and the need for expertise in specific tools. the experimental study provides some initial evidences that mbt along with esg modeling technique can be used as a systematic approach to test android applications.



further research can be conducted in the emerging field of automated tests in mobile applications. an initiative is to simplify and provide a partial or complete generation of concrete test cases. in future work, other experimental studies could be performed to analyze the fault detection capabilities, as well as time and cost when compared with manual testing. specifically, we plan to evaluate the number of detected faults, the time to design and run tests, the effort to learn a supporting tool(like robotium), and so on.



