we shall only outline the main points of the process that one goes through to give a proof-theoretical justifications of the logical laws. this process is dealt with with in more detail and with more care by, in particular, michael dummett and dag prawitz(see, for example,[5,6,15]). the process we use differs slightly from that described by dummett.



in this section we outline a proof that chr is a relevant logic in the sense of anderson and belnap. to prove this we simply assign a distinct number to each variable which occurs in any proof object in a chr proof. we then replace each proof object with the set of numbers that occur in it. by a simple notion that relevant proof is captured by strict computation. the system we have produced is clear and simple. the proof rules are natural to use, as we have shown in examples. we have outlined how this logic relates to other relevant logics. because we have developed this logic as a type theory, there is a natural computer science interpretation of propositions in this logic as



