the rest of this paper is organized as follows; section 2 presents the related work. the proposed hash function is presented in section 3. section 4 contains the security analysis of mnf-256. the performance analysis of mnf-256 is presented in section 5. the paper is concluded in section 6.



which leads to 2k colliding messages after only k trials of the collision search. if a hash function has an iterative structure, the attack can be always maintained. the actual complexity, however, depends on the size of the internal state.



256 and ripemd-320 respectively. in 1998, md4 was completely broken by dobbertin. in 2004, a team of researchers led by wang, announced collisions in md5 as well as collisions in other hash functions including md4, ripemd, and haval-128. in 2005, they presented attacks against sha-0 and sha-1.



the bit variance test consists of measuring the impact on the digest bits by changing input message bits. bits of an input message are changed and the corresponding message digests(for each changed input) are calculated. finally from all the digests produced, the probability pi for each digest bit to take on the value of 1 and 0 is measured. if pi(1)= pi(0)= 1/2, for all digest bits i 1 6 i 6 n, where n is the digest length, then the hash function under consideration has attained maximum performance in terms of the bit variance test. therefore, the bit variance test actually measures the uniformity of each bit of the digest. since it is computationally difficult to consider all input message bit changes, we have evaluated the results for only up to 513 files and found the following results:



in order to hide message redundancy, shannon introduced diffusion and confusion. diffusion means spreading out of the influence of a single plaintext bit so as to hide the statistical structure of the plaintext. confusion means the use of transformations that complicate dependence of the statistics of ciphertext on the statistics of plaintext. they are two general principles to guide the design of practical cipher, including hash function. for the hash value in binary format, each bit is only 1 or 0. so the ideal diffusion effect should be that any tiny changes in initial conditions lead to the 50% changing probability of each bit.



we have performed the following diffusion and confusion test. a message is randomly chosen and hash value is generated, then a bit in the message is randomly selected and toggled and a new hash value is generated. two hash values are compared with each other and the number of changed bit is counted as bi.



