the paper is structured as follows. in section 2, we recall the role-based trust management framework. in section 3 we show its flexible extension with weights and the corresponding evaluations algorithm. we then show the prototype implementation on mobile devices in section 4. example of credentials, policy statements and some performance evaluation are given in section 5. finally, section 6 contains our conclusions and future work.



elements. the credential issuer is a and the role membership includes all entities from the external r2 role issued by the p principal where p is a member of r1 of the default principal a. the dimension of a.r should be no less than that of p.r2



as previously disclosed, the use of a shared vocabulary constitutes a critical point in those systems which represent the rights as attributes, such as the grid environment. to delegate permissions on resources, all the principals involved in the chain need to use consistent terminology to specify resource permissions and delegation conditions. if some of them use incompatible schemes, their credentials cannot be meaningfully combined and some intended permissions cannot be granted. the definition of a role is meaningful only if all the parts involved are allowed to access the role structure and possibly the permissions granted to it. an adsd defines a vocabulary which implements this structure using standard data type or defining new ones, this document has to be public. this grants rt to have a strongly typed credentials and policies. a credential which uses a role term needs to refer the particular adsd which defines the role name and all its data types.



rtml defines a set of credential/accessrule definition, each containing a headroleterm and a body. different kinds of definitions contain different elements as the body part. we adopt an abstract syntax in describing these definitions; r represents the headroleterm, r1 and r2 represents other role terms, we assume a as the credential issuer while b and d represent generic issuers.



as already expressed in 2.3.2, credential and accessrule documents have the same structure. the main difference consists that the issuer value is not present in the accessrule document; it defines a policy and the issuer of these rules is the policy issuer itself. furthermore the signature element is missed too, the issuer does not need to verify its policy.



this section outlines the ongoing implementation of the rt with trust weights on mobile devices supported j2me platform and cldc1.1/midp2.0 profiles. the extended version of the prototype was initially implemented as a part of the authorization framework for grid services. the prototype was modified due to minimize of the size of the final application and taking into account j2me limitations. java language was chosen for its suitability in developing and testing mobile applications. moreover, several simulation environments are freely available(e.g. netbeans), and a wide set of mobile devices like smartphones and pdas are able to execute midlets.



tegrity all credentials were digitally signed. the xml digital signature standard 4 with some extensions(rfc-4050) was used for credentials signing. cryptographic algorithms for j2me were imported from bouncy castle project 5. the signature was kept into the signature value tag of xml encoded credential representation. public key of the credential holder was settled at keyinfo tag. xerces-jme 6, xalanjme 7, bc-jme and signit-mobile-xml packages prepared the input to rtml-parser by verifying the credentials signature and expiration time, extracting the related xml code, and saving credentials in a local keystore holding access rules and protected by the password.



in this paper, we have introduced implementation of rt framework on mobile devices. trust weights were embedded into the rt credentials to supply certain reputation and recommendation models. we presented the algorithm to compute weights and ran some experiments to test the prototype performance. obtained results showed that credentials verification and validation were the most time consuming comparing to credentials and access rules parsing and evaluation.



we plan to reduce time expenses by using light cryptographic signing algorithms and developing an adoptive caching model for credentials verification and validation. finally, we concern about a complex case study expressing benefits of rt with weights. we suspect a grid scenario to examine interoperability of rt framework deployed on various devices.



