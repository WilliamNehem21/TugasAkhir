considered as a threat for information systems, for several reasons. the first obvious reason is of course a security issue, as covert channels can be used to pass information secretly. covert channels can also be an economical threat. they can be used to transmit information(very often at a low rate) using an existing system without paying for the service provided. furthermore, they are often based on an obfuscated use of resources or functionalities, which heavily impacts the performances of a system.



non-interference violation. several approaches to non-interference have been proposed, through typing(a system contains an interference if it cannot be correctly typed), or using process algebra. very often, non-interference approaches classify data and processes of a system according to two security levels, high and low. high-level processes can access any data in the system and communicate with all other high processes, while low-level processes are not allowed to read information from the high level, either directly or indirectly.



at this stage, the relation between games and covert channel may not appear clearly. let us try to gather some ideas that will be used hereafter to define covert channel strategies. nodes of hmscs will be considered as vertices of an arena. the tricky point is to associate vertices to a player and to define winning strategies in the so defined game. covert channel users can be considered as player 1 in this game, and the rest of the protocol as player information, the protocol should never reach a sink node. hence, sink nodes in a hmsc will be associated to player 1. second, winning plays for player 0(the protocol) will be plays in which information transmission is impossible for player 1.



can be transmitted. for the simple cycle-based strategy described section 3, data encoding was possible if different choices had different observable consequences. as we are now defining more elaborated strategies, we have to define the possibility of passing data in a more general way.



now that zones where data transmission is possible are identified, let us compute the winning zones for a hmsc. for the sending instance, winning zones are zones where data transmission is possible without losing control of the channel, and for the protocol, winning zones are zones from which infinite data transmission is impossible. obviously, sink nodes are winning zones for the protocol. in a similar way, all connected components controlled by the protocol are also winning for this player. finally, a zone that is not entirely controlled by the protocol but does not allow for data transmission is also a winning zone for the protocol. the 0-attractor of these 3 cases is also a winning subset for the protocol(where 0 is the player representing the protocol).



step 7 and 8 will then add cc8,1 to y as it conforms to case 2, and cc8,2 to x(case4). similarly, cc2 will be added to y and cc1 to x. the algorithm terminates with x={1, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16} and y={2, 3, 4, 13, 15}.



a strategy f that leads from any node to an encoding node, and from an encoding node to another encoding node. as the number of encoding nodes is finite, any play that conforms to this strategy passes infinitely often through a set of encoding nodes. note however that this strategy f is not necessarily maximal.



this proves point i) of proposition. let us now prove point ii). adding any transition from a state s= v1... vk.y where y is an encoding node to another state s'v'... v'.y' to a winning strategy f does not create silent cycles, as all



note that maximal winning strategies are not unique. note also that this proof just establishes the existence of a maximal winning strategy, but does not provides the most efficient algorithm to compute such strategy. in fact, to solve our problem, a strategy only have to remember the set of visited states, and not their order of appearance, which lets us suppose that the problem can be solved as the research of a positional strategy on an automata of size n.2n instead of the usual n.!n for muller games.



theorem 6.2 let h be a hmsc, and ah be the associated arena. let y be the winning set computed on ah, and win(y) be the winning conditions included in y. let f be a strategy for y, win(y) and tfy be the transducer associated to y and f. if tfy is functional, then there exists an interpretation



ambiguous transducers do not mean that covert information passing is impossible, but rather that the channel contains noise. a study to compute noisy covert channels capacity using information theory is currently undergone. the main difficulty to compute capacities and rates is that in the asynchronous systems depicted by our scenarios, all encodings are not performed in constant time. note that to build an efficient strategy, one does not need to remember the order between visited nodes, but only the visited nodes since the last visit of an encoding node. this lets us suppose that a more efficient strategy may be found.



