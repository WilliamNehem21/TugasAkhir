the internet brings us great benefit for work, studying, life and entertainment etc. ideally speaking, you can get accessed to anyplace that is willing to provide information for you. however, for some reasons, such case is not always true. we can tolerate that the website with bad content such as sex and violence are banned for the common good of society, but it may be a big pity that some websites with academic disputations are banned so not reachable only for political reason. moreover, one path may be broken down resulting in some websites not available to certain people, but actually they can still visit the



the p2p work style bring huge advantages to the system. first of all, the internet is more accessible for the users. those banned websites to certain people for political or technical reasons may now be available to them. only if the websites have links with nodes in the system, there is hope that they can be visited hence make useful information be shared by more people. secondly, no central node which is responsible for the authentication or data transferring of all nodes exists in the system, hence avoid the bottleneck. the maintenance of central server always costs heavy economical and technical load and affects the performance of the system when large data in running. thirdly, all the nodes in the system are of the same importance and function, hence have good robust for no of the broken down of single node can cause disasters to the system. even no disaster happens, when more than one path exists, the nodes can find a better way to enjoy better performance.



as to the problem that how the nodes join the system, currently popular p2p software does not put up an effective way. a common way as bittorrent adopts is to let all nodes join in the system only if they wish. they do not care whether a certain node is honest or malicious in the beginning. they put up sets of methods to evaluate and stimulate the behaviors of nodes sometimes the stimulation is too weak to make sense, and



and on the other hand, for the nodes within the system, when they want to demand some service, they may not know the better choice. the ones with the highest evaluation in the system do not necessarily mean the best service provider for every node. they may even been not available to some of them.



here, the trustp2pnet which we proposed is proxy working in the application layer overlaid above the physical networks of internet. it is consist up with the nodes and their available parts of the internet. when a node wants to visit some place inaccessible for him, he pack the destination in the datagram and sent to the nodes who might reach the destination. when another node receives the datagram, he picks up the destination and transfers the data for the original node.



the trustp2pnet and its p2p work style bring huge advantages to the system. first of all, the internet is more accessible for the users. those banned websites to certain people for political or technical reasons may now be available to them. only if the websites have links with nodes in the system, there is hope that they can be visited hence make useful information be shared by more people. secondly, no central node which is responsible for the authentication or data transferring of all nodes exists in the system, hence avoid the bottleneck. the maintenance of central server always costs heavy economical and technical load and affects the performance of the system when large data in running. thirdly, all the nodes in the system are of the same importance and function, hence have good robust for no of the broken down of single node can cause disasters to the system. even no disaster happens, when more than one path exists, the nodes can find a better way to enjoy better performance.



the area of trust and reputation in p2p systems has been a hot subject.however, so far away they do not have favorable mechanisms. most of their solutions are based on an accumulative credit system. they don not refuse any peers, honest or malicious, to join in the system, but confine their behaviors according to their score. this way necessarily causes delay between malicious nodes. moreover, such mechanism often deploys a center server to record and update the credit score of the peers. it introduce more risk of attacks on the center server for the malicious peers want to rise their scores to gain more service. if the system is totally distributed, they may have to conquer many of the other peers to realize their aim, however now they only have to attack one server. compared with the huge benefits they may gain, such energy is worth.



in order to overcome such disadvantages listed above, we proposed the trust system based on social networks. we suppose that people can always trust their friends who they know well, and can rely on their opinions of unknown people. experientially people always believe in themselves better than others, but when they have no idea of something, the knowledge from their friends is better than just guessing out of all reason. the initial users of the system are always honest until malicious peers join in to generate the unfairness. and when people in system find malicious peers they are willing to inform their friends to erase them. based on these common senses we proposed our model as follows.



we apply the formula into the trustp2pnet project and design the trustp2pnet system which is an application overlay of the physical networks. it is constructed by thenodes and their accessible parts of the internet. every peer in the systemis a proxy which voluntarilyrelay the traffic of pass through it. each node of trustp2pnet is composed of 4subsystems: the functional-module, the calculation-engine,the friends-list and the evaluation-engine. where, thefunctional-module is used fortransferring traffic, registering andother functions. our policy model for admission control is implemented inthe calculation engine.when a new node comes, the calculate engine is responsible to calculate its trust value and reflect to the friend list to record, and when the node interact with some new node, as the functional module offers or demands the service, the evaluate engine estimate the recommendation and record in order for further calculation for the calculate engine.



