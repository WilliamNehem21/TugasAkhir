merging is the process whereby two sorted lists of elements are combined to create a single sorted list. originally, most sorting was done on large database systems using a technique known as merging. merging is used because it easily allows a compromise between expensive internal random access memory(ram) and external magnetic mediums where the cost of ram is an important factor. originally, merging is an external method for combining two or more sorted lists to create a single sorted list on an external medium.



proof 1. the algorithm consists of a series of two phase episodes. the first phase of each episode produces a set of sorted sub-arrays, while the second phase merges the sorted subarrays. the elements of the input array are placed in subarrays in an ordered fashion. two elements with same value are placed either in the same sub-array, where the element comes first in the input array is placed first in that sub-array. if the two elements are placed in two different sub-arrays, then the sub-array that contains the first element should have lower order than the other sub-array that contains the second element. the m-way-merge technique merges the sorted subarrays in order to produce the sorted array. before each of the followed episodes, the sorted elements are placed in order in the m sub-arrays. in the followed episodes, the two phases are identical to those of the first episode. h



external memory sorting performance is often limited by i/ o performance. disk i/o bandwidth is significantly lower than main memory bandwidth. therefore, it is important to minimize the amount of data written to and read from disks. large files can not fit in ram. in the proposed implementation, the input file is sorted in two passes. each pass reads and writes to the disk.



