exists in the service of essentially declarative ends. a key claim i will be making in this paper is that the reason the current paradigm works at all is that systems implemented in this way approximate a much simpler, declarative model of interactive computation. experienced software designers rely tacitly on something like this declarative model in order to make decisions about what counts as reasonable behaviour. indeed, rather than being ill-suited to interaction, as is sometimes assumed, perhaps because of the somewhat arcane feel of techniques such as monads



i propose therefore that the best way to address the impedance mismatch between algorithmic languages and interactive systems is not to wallow in the tarpit of imperative languages, but to lift declarative languages into a computational model which supports interaction directly. the aim of this paper is to set out the conceptual foundations of such a model, which i shall refer to as the declarative interaction model. no new results are presented; instead the paper attempts to provide the philosophical framework and motivation for further research. future work will formalise various aspects of the model.



