the bi-objective spanning tree(bist) is an np-hard extension of the minimum spanning tree(mst) problem. the bist models situations in which two conflicting objectives need to be optimized simultaneously. the bist has been studied in the literature and several heuristic algorithms were proposed for it, most of them evolutionary techniques. the transgenetic algorithms are among these evolutionary techniques which were successfully applied to the bist. however, a priori defined parameters can limit the search mechanisms used within the algorithm. in this study, we propose a new transgenetic algorithm for the bist in which the decision about the search mechanisms used along its execution is automatically made. an analysis of the results of computational experiments carried on 165 benchmark instances showed that the algorithm proposed in this study produces good approximation sets concerning two different quality indicators.



the transgenetic algorithm proposed by, called tlp, is an effective approach for the bist. the tlp was compared to a state-of-art algorithm proposed by and produced high quality results. transgenetic algorithms are evolutionary approaches that simulate natural mechanisms of horizontal gene transfer and endosymbiosis. the metaphor is based on the exchange of genetic material between a host cell and a population of endosymbionts by the action of agents which are called transgenetic agents. basically, a transgenetic algorithm maintains a population of solutions(endosymbionts), a repository of information to be used along the search(host cell), and transgenetic agents. the latter manipulates the endosymbionts, modifying the solutions. there are different classes of transgenetic agents and some of them use information from the repository. the tlp uses two types of transgenetic agents: plasmids and transposons. they are described in section



is selected from the restricted candidate list, with uniform probability, to build a tree. during the generation of endosymbionts with the rmcprim method, repeated endosymbionts are not accepted and dominated spanning trees are accepted with probability 60%. these restrictions do not apply when the population is generated with the randomwalk. the latter builds a tree iteratively selecting, with uniform probability a random edge that connects a node already included in the tree with a node not yet included.



the transgenetic agents are the tools to modify the solutions in the search performed by a transgenetic algorithm. many transgenetic agents may exist, some of them directed to diversify and others to intensify the search. this section presents a transgenetic algorithm with automatic control of the decision of which agent is selected to manipulate an endosymbiont from the current population. procedure tma shows the general pseudo-code of the algorithm proposed in this study.



the method used to create the initial population of the tma is the one used by the tlp, described in section 2. there are 7 plasmids and 3 transposons implemented in the tma. their success rates are set to 0, initially(line 4).



we compared the tma to the tlp and to a classic successful genetic algorithm for bi-objective problems named non-dominated sorting genetic algorithm(nsga-ii) proposed by. the initial population p of the nsga-ii was created by the same method described in section 2. solutions were encoded by the list of edges data structure. every iteration, an offspring population, p, such that



the friedman test was applied to verify significant differences among the solutions produced by the algorithms tested. the holm posthoc test was used to detect specific differences between the tma and the other algorithms. the significance level was 0.05.



bility for the algorithm to choose plasmids or transposons in the first iteration, we set the level parameter to 0.5. the external archive used in the tma was limited to 300 solutions and was updated with the adaptive grid technique as proposed by. the crossover and mutation rates of the nsga-ii algorithm were tuned with the irace and are, respectively, 0.97 and 0.04. the population size adopted for the nsga-ii was 150, as the tlp and the tma.



for most cases where the tma ranked better, the holm posthoc test indicated significant differences. the exceptions for the hv indicator were: groups 1 and 5 of correlated instances, group 2 of anti-correlated instances and groups 1, 2, and 3 of concave instances. these exceptions concern the tlp. the exceptions for the igd indicator concerning the tlp were: group 5 of correlated instances and groups 1, 2, and 3 of concave instances. only one exception was observed for the igd indicator concerning the nsga-ii algorithm, group 1 of anti-correlated instances and groups 1, 2, and 3 of concave instances.



by the number of successful manipulations divided by the total number of manipulations performed by that transgenetic agent. in average, for the correlated and concave instances, the plasmids that use the m2 manipulation method, e.g., plm4 and plm7, contributed more to the search. the plm2 also made a significant contribution to the correlated instances. all plasmids contributed to the search concerning the anti-correlated class. the newremtransp and swaptransp presented similar success rates and were the most effective.



the region of a given solution is made automatically and based on successful applications of the specific agents. the tma was compared to an effective transgenetic algorithm in which the selection of the transgenetic agents depend on user-defined parameters and to the nsga-ii. the computational experiment comprised 165 benchmark instances divided into three classes. the analysis of the solutions produced by each algorithm was based on two quality indicators that measure different features of the approximation sets and statistical tests. we also analyzed the processing times. the results of the algorithm proposed in this study were superior both regarding solution quality and processing time. in future works, the algorithm will be extended to many-objective problems.



