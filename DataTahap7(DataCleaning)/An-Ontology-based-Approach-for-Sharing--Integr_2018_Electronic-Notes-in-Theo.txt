ontologies and semantic web are powerful mechanisms for representing knowledge and encoding its meaning. they can be used to model and represent the knowledge found in several sources, such as the knowledge generated and stored in akm tools, in order to enable its integration, exploration, recovering, and exploitation as a reusing asset. this paper describes a preliminary ontology-based approach named sak-sir, which is based on iso/iec/ieee 42010 standard, for integrating, sharing, and retrieving knowledge from different sak sources. then, as a proof of concept, we apply the approach for sharing, integrating, and retrieving knowledge on the knowledge provided from an akm tool the authors have developed in previous works(traced). a scenario of knowledge retrieving is developed regarding that traced metamodel includes concepts for supporting the capture of the complete evolution of a software architecture design process(sadp).



the paper is organized as follows. background on ontologies and semantic web technologies, and the iso/iec/ieee 42010 is given in section 2. in section 3, the possible sources of sak are identified and characterized, and the sak-sir approach is introduced. in section 4, we apply the approach integrating the akm metamodel and repository of traced tool,, and retrieving sak from historical sa projects. section 5 discusses related word. section 6 presents the conclusions.



ontology-based techniques have gained acceptance as a means for tagging and performing semantic searches. additionally, ontologies can be used to provide a common understanding for different terminologies and make the knowledge available for future use. in a previous paper, we have taken the first step to construct an ontology for software architecture knowledge(sakonto), which include concepts, relations, and constraints to represent knowledge from several categories: i) general knowledge, ii) context knowledge, iii) design knowledge, and iv) reasoning knowledge. by definition, an ontology is an explicit formal specification of the



the most widely known akm tools so far have an associated repository to store and manage ak. in fact, one of the key differentiating factors among the akm tools is the data model of the corresponding repository. such data models define the architectural constructs and their relationships with each other, and thus represent architecture design knowledge that is used or generated during software architecture design and analysis. a data model can help organizations to define and obtain data on various aspects of their architectural assets and design rationale during the software architecture process.



depending on the knowledge source, the techniques and mechanisms applied in this stage vary. in the case of textual documents(ks-t1 and ks-t2), this stage comprises a series of extraction techniques based on natural language processing(nlp), and the identification of terms and attributes, which has to be performed using sophisticated tools. parsing of web pages can be used also. some annotations or tagging mechanisms are also necessary in order to add the semantic. for these types of knowledge sources, a specific domain ontology should be created. the objective for defining an ontology is twofold: to identify terms(or individuals) and their relationships in the documents(text files); and to make possible the integration of these knowledge sources with available knowledge residing in other ontologies. the last activity should be done as part of sak integration stage.



l1) iso/iec/ieee 42010 standard ontology layer. the iso/iec/ieee 42010 standard ontology constitutes a basis for describing all the concepts included in the sak ontology network. therefore, all the networked metamodel and domain ontologies inherit the same foundational concepts and relations, which is essential for ontology integration.



l3) software architecture domain layer. this layer, which is built on l1 and l2 layers, includes the concepts that are specific from sa domains. a domain comprises a set of concepts, regarding the building block types and their possible relations to be employed in a sa project for describing a software architecture. a domain also can include the definition of generic design decisions, like design patterns and styles.



it should be noted, that the sak-sir approach it is not fully computersupported, since human intervention is necessary. at integration stage, the role of an ontology engineer or expert is crucial to guaranty quality and expressiveness of the knowledge model. for example, regarding the integration of knowledge from a ks-t3 source, the ontology engineer(with the help of the architects of the involved organizations) should identify the concepts defined in the metamodel of the akm tool that wants to integrate. thus, these concepts have to be defined as an extension of concepts in the ieee 42010 standard ontology(st prefix). for example, let us consider that the akm tool metamodel ontology(akm prefix) includes a specific type of view for describing detailed decisions using a template fashion. then, the class akm:detaileddecisionviewtype has to be defined as subclass of the st:architectureviewtype, as well as the necessary data properties, annotation properties and object properties that involve that concept, and other concepts related to this kind of view that are not defined in the ontology yet.



a query editor should assist the users in the queries definition. complex inferences about the sak knowledge available can be made by means of a reasoner to generate non-explicit knowledge. additionally, a set of predefined sparql queries can be available for being executed as services, which would achieve interoperability among different akm tools.



in this work, the sak-sir approach was presented. it aims at integrating heterogeneous knowledge sources, and providing knowledge retrieving and semantic reasoning capabilities, thus making possible sharing sak among several organizations or individuals. iso/iec/ieee 42010 standard ontology was used as the basis for defining a sak ontology network. the approach was validated with the integration of the metamodel of traced tool in the sak ontology network. the resulting ontology was populated with knowledge from the projects of traced repository. the concepts, relations, and instances included enable the representation of knowledge about the evolution of the sadp, while keeping compliance with the standard.



