there are plenty of established methods and algorithms for solving problems of type(1). these are usually implemented using floating-point approximation of real numbers. these implementations have inherent inaccuracies, mainly due to round-off and truncation errors, which may be tolerated when small errors do not incur significant costs. a tighter control over errors may be obtained through error analysis in limited cases.



a more general alternative is offered by validated numerics, where results are obtained with absolute guarantees of correctness. interval arithmetic provides a foundation for many available validated numerics. there are many efficient interval based validated numerics for problem(1) available in the literature, including efficient high-order taylor based methods, e. g.,[2,27,30]. in fact, it is well known that, by assuming the field f to be analytic, the solution to ivp(1) may be obtained in polynomial time by using a taylor model, which is in contrast to the pspace-completeness of ivp solving without analyticity assumption.



remark 3.8 while the first-order operators of definition 3.1 provide piece-wise affine enclosures of the solution, the operator of definition 3.7 provides piece-wise quadratic enclosures of the solution. indeed, in special cases, if the solution is a polynomial of degree(at most) 2, then by applying the operator of definition 3.7, one may obtain the exact solution. for instance, let y=(y1, y2), and consider the rather simple ivp:



remark 4.1 note that we have assumed mj> 0, as introduced in(3). this will help us avoid division by zero in some of our analyses in the current section. the case mj= 0 arises only when the vector field f is constant, in which case the ivp(1) may be solved trivially using symbolic computations.



in this article, a domain-theoretic framework has been adopted within which soundness and completeness results have been obtained, together with explicit upper bounds on the rate of convergence. a further useful feature of the domain-theoretic framework is that the algorithms may be directly implemented, with the convergence results retained, and with accuracies limited only by the time and space(i. e., memory) resources available. this should be contrasted with: methods based on traditional interval libraries, which use fixed-precision floatingpoint numbers as end-points. these methods can guarantee soundness, but not completeness, even theoretically. the reason is that the precision of the endpoints are limited by the bit size used in the underlying architecture(e. g., 32 bits, 64 bits, etc.).



we presented a domain-theoretic framework for solving ivps using the second-order euler method. the soundness and completeness results were obtained, together with some upper bounds on the algebraic complexity of the method. although we focused on the second-order euler method, in the light of corollary 2.14, extension to any n-th order is possible.



