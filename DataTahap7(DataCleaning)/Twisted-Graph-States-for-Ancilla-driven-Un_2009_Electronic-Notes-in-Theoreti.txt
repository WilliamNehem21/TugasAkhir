we introduce a new paradigm for quantum computing called ancilla-driven quantum computation(adqc) which combines aspects both of the quantum circuit and the one-way model to overcome challenging issues in building large-scale quantum computers. instead of directly manipulating each qubit to perform universal quantum logic gates or measurements, adqc uses a fixed two-qubit interaction to couple the memory register of a quantum computer to an ancilla qubit. by measuring the ancilla, the measurement-induced back-action on the system performs the desired logical operations.



the underlying mathematical model is based on a new entanglement resource called twisted graph states generated from non-commuting operators, leading to a surprisingly powerful structure for parallel computation compared to graph states obtained from commuting generators.. the adqc model is formalised in an algebraic framework similar to the measurement calculus. furthermore, we present the notion of causal flow for twisted graph states, based on the stabiliser formalism, to characterise the determinism.



focus of the current paper, leads to the introduction of a new multi-partite entanglement resource. only recently has it been demonstrated that a very restricted class of multi-partite entangled states are useful for universal deterministic mbqc[7,8]. however a full characterisation of such states remains an open problem which this paper aims to make progress upon.



we present a formal operational semantics for adqc patterns as a probabilistic labelled transition system, similar to. besides quantum states, one needs a classical state recording the outcomes of the successive measurements one does in a pattern. if we let u stand for the finite set of qubits that are still active(i.e. not yet measured) and w stands for the set of qubits that have been measured(i.e. they are now just classical bits recording the measurement outcomes), it is natural to define the computation state space as:



the usual convention has it that when one does a measurement the resulting state is renormalised and the probabilities are associated with the transition. we do not adhere to this convention here, instead we leave the states unnormalized. the reason for this choice of convention is that this way, the probability of reaching a given state can be read off its norm, and the overall treatment is simpler.



we now present the denotational semantics of adqc patterns. if n is the number of measurements then the run may follow 2n different branches. each branch is associated with a unique binary string n of length n, representing the classical outcomes of the measurements along that branch, and a unique branch map an representing the linear transformation from hs to hs along that branch. this map



it is then easy to prove that each pattern realizes a completely positive trace preserving(cptp) map and if a pattern is strongly deterministic(see appendix), then it realizes a unitary embedding. hence the denotational semantics of a pattern is a cptp-map. it is also compositional, as the following theorem shows.



proof. recall that two patterns p1, p2 may be combined by composition provided p1 has as many system qubits as p2. suppose this is the case, and suppose further that p1 and p2 respectively realise some cptp-maps t1 and t2. we need to show that the composite pattern p2p1 realizes t2t1. indeed, the two diagrams representing branches in p1 and p2:



it is important to emphasise the main difference between ancilla-driven and mbqc which is the interaction command eij versus eij. in order to achieve the desirable features of not directly measuring system qubits and having a fixed interaction, we had to give up the simple operator eij which is the generating operator of the open graph state. 4 as we show in the appendix, for any standard pattern in mbqc we can write its underlying open graph state with qubits representing the nodes and eij the edges of the graph. then remarkably only from the geometry of this graph we can obtain the dependency structures to guarantee a deterministic computation in mbqc. in other words the simple graph representation for the global operation defining pattern allows one to determine dynamic properties directly from the static structure. can we still obtain similar properties for our new model? despite the non-commutativity of eij the answer is yes. in the next section we define the twisted graph state which is the underlying geometry of a given ancilla-driven pattern obtained from standardisation and we present how one can directly construct the dependency structure from their geometry.



to complete the definition of the pattern it remains to decide which angles will be used to measure ancilla qubits and, most importantly if one is interested in determinism, which dependent corrections will be applied. conversely, any ancilla-driven pattern has a unique underlying open twisted graph state obtained by forgetting measurements and corrections where the colour of the edges is given by the most partial order of the eij commands which respects the non-commuting order. recall that two eij commands commute if and only if they act on disjoint set of qubits. note that the depth of this partial order is the true depth of the preparation of the state.



it is interesting to note that the flow definition for a graph state was based on the geometry of the underlying graph, whereas in a twisted graph state it is based on the edge colouring order. indeed, as mentioned before, different edge colourings lead to different twisted graph states and hence different flow constructions. roughly speaking, the edge colouring plays the role of geometry for the twisted graph states.



adqc presents significant advantages over gbqc for particular physical implementations. by isolating the system memory from measurement and state preparation, the physical layout of a quantum computer can be optimised. potentially decoherent read-out mechanisms can be located away from the memory. since only a fixed two-qubit unitary gate has to be implemented between memory and ancilla qubits, this simplifies considerably the construction, characterisation, control and operation of the computer. control line clutter can be reduced, due to relaxing the need to implement single qubit rotations and measurement on the memory, simplifying the architecture of the computer as well as minimising the possibility of cross-talk. the choice of physical qubits for memory and ancilla can also be optimised. memory qubits can be chosen for long coherence times at the expense of being static, whilst ancilla qubit can be chosen for mobility, and ease of initialisation and measurement. natural candidate systems consist of an array of static qubits addressed by flying



a system which may prove particularly amenable to our model is one based on. here, the nuclear spin of a single dopant atom in isotopically pure silicon plays the role of a memory qubit which can be controllably coupled via the hyperfine interaction to an electron spin which acts as an ancilla qubit. nuclear spins can be very well isolated from the environment, as well as the state preparation and measurement areas. electrons can be rapidly transported around the computer using charge transport via adiabatic passage(ctap), this avoids the issue of swapping nuclear spin states, as in the original kane proposal, which can lead to a reduction in fault tolerance. an issue here is making sure that the interaction between electron and nuclear spins is of the correct form as to allow conditional unitary dynamics 5. a controlled-z+ swap gate can be achieved by using the method presented in with only the heisenberg interaction between ancilla and system and local operations on the ancilla itself.



more generally, it is interesting to expand the set of resource states universal for quantum computation[7,8]. different interactions may lead to different classes of states, together with their own measurement calculus. we can envisage connecting the resource states for universal mbqc with physical interactions which generate them, and hence the type of correlations which are induced. from the adqc embedding, we can trace the roles of measurement-induced back-action and the non-local character of the generating interaction.



ancilla-driven quantum computation presents a new way of performing universal quantum computing. aside from potential advantages for quantum computer construction and operation, it leads to a new set of universal quantum computational resources, the twisted graph state, based upon a non-commuting generating interaction. the measurement calculus has been developed to encompass this new model and even greater parallelism compared to conventional mbqc may be possible. despite the non-commuting nature of the generating interaction for twisted-graph states, the graphical structure still encodes the dynamics(dependancy structure) of the computation. a strong possibility is that adqc could further improve the parallelism of mbqc. by further studying adqc and its generalisations, further insight into this question could be achieved.



where k represent the qubits acted upon by command a, and are distinct from i and j. standardisation allow us to present graphically the global operation of a pattern. we define an open graph state(g, i, o) to consist of an undirected graph g together with two subsets of nodes i and o, called inputs and outputs. we write



