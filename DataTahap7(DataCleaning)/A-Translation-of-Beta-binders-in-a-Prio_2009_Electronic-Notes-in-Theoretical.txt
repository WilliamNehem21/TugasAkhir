a translation of beta-binders in pi@ is presented. beta-binders is a bio-inspired formalism that allows the modelling of processes wrapped into boundaries. no notion of enclosing compartment can instead be found in pi@, a dialect of the pi-calculus where actions are associated with a priority value driving their execution and where channel names can have a composite structure.



the rest of the paper is organized as follows. we first review the source and the target languages of the translation(sec. 2 and sec. 3, respectively). the actual mapping is then defined in sec. 4, together with the results about the operational correspondence between beta-binders processes and their encodings. the paper ends with some concluding remarks in section 5.



the reduction relation describing the operational semantics of beta-binders is defined by the axioms and rules collected in tab. 2. this is actually a subset of the beta-binders transition system. the complete semantics of the language also provides ways to join boxes together and to split a box in two. this is achieved by introducing specific axioms that can be applied when some desired conditions are satisfied. joining and splitting activities, however, are purely semantic affairs. they have no syntactic counterpart in the language, i.e. they do not correspond to any primitive or operator. as such, joining and splitting do not seem to naturally belong to the domain of a compilation process.



the complete definition of the translation is reported in tab. 4. in what follows, the encoding is described in an incremental way, by focussing on the most relevant design choices step by step, up to refining the presentation into the definition shown in tab. 4.



(the missing portion of(2) will be illustrated later on.) above, the shared private name g can be thought of as an identifier of the box. it is used to form@-names exploited in the implementation of global communications. orthogonally,



the execution of r, i.e. either at the end of a protocol session or when possible hiding-unhiding activities are over. analogously, if the binder is initially hidden, then the corresponding handler bh becomes available only after the execution of an unhide directive.



theorem 4.3 below states that any reduction of[b] may either lead to a rollback, or to the encoding of a beta-binders process reachable from b in one single step. in both cases the result holds up to structural congruence. notice, however, that in case of rollback the garbage collection axiom is superfluous.



