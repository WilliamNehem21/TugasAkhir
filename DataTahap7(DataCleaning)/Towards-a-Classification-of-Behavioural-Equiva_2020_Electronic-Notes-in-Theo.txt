we focused on a class of systems called feller-dynkin processes for which a good mathematical theory exists. these systems are markov processes defined on continuous state spaces and with continuous time evolution. such systems encompass brownian motion and its many variants.



we showed that cospans of fd-homomorphisms and bisimulations correspond to one another. in particular, if r is a bisimulation, the quotient by r yields a fdhomomorphism(which is not a homeomorphism if r is non trivial). this is quite different from group of symmetries that identify symmetries of the system.



it is common in discrete time to consider several actions. everything that was exposed in this paper can easily be adapted to accommodate several actions. however, we will not mention actions in this section either for the sake of readability.



we are going to study two cases. in the first case, we are able to test if there is an even or odd number of customers that have arrived. in the second case, we are able to test if there are more customers than a critical value.



remark 6.11 this situation may look a lot like the deterministic or brownian drift with parity as the atomic proposition. however, there is one key difference here: we are preventing the set of translations by an even number to be a group of symmetries by only allowing positive numbers. these translations are however fd-homomorphisms. proving that there is no greater group of symmetries than symmetry: assume x rj y. whatever move(c, t) spoiler does when duplicator says(x, y) is also a valid move from(y, x). duplicator can then play as he would have from(x, y) and if he had a winning strategy then, it is also a winning strategy now. this means that y rj x.



transitivity: assume x rj y and y rj z. now consider the game when duplicator starts by saying(x, z). spoiler then says(c, t) such that pt(x, c)/= pt(z, c). in this case, pt(x, c)/= pt(y, c) or pt(y, c)/= pt(z, c)(or both). duplicator then picks one of those situation(or if only one of them is true, he picks this one) and replies what he would have replied in the game starting with the corresponding start:(x, y) or(y, z). since duplicator had a winning strategy in both game, he has one here. hence x rj z.



