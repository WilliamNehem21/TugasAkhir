usage control is a generalization of access control that also addresses how data is handled after it is released. controlling the future usage of data includes controlling the future distribution of data. the evolution of policies upon re-distribution must hence be defined. intuitively, clients should only strengthen policies associated with a data item when they re-distribute it. we provide a role-based re-distribution model for usage control that encompasses strengthening both rights and duties. by introducing orderings for events and parameter values we show how both rights and duties can be strengthened with the traditional abstraction of trace inclusion.



the definition of events in the z language is shown below. eventname, paramname, and paramvalue define basic types for event names, parameter names, and parameter values, respectively. in z, such definitions are made by listing the types in square brackets. all such basic types are disjoint. ebnf-style definitions are also possible.



rights. we start by assuming that a subject can only strengthen policies upon re-distribution of a data item. for now, we will only consider rights, as done in access control. duties are considered below. intuitively, one would argue that upon re-distribution, rights can only be decreased. in formal terms, the set of traces that satisfy the original policy must become smaller, or, logically speaking, the formula that corresponds to the new policy must imply the old policy.



consider an event name play with one parameter for video quality. video quality, vq, ranges from 0 to 100. one example event is(play,{(obj, mova),(vq, 75)}), indicating that mova is played with 75% video quality(throughout the paper, we assume that the maximum value is 100). a policy specifying that mova may only be played with this restricted quality is given by permitonlyparam({75}, vq, play,{(obj, mova)}). now, intuitively, the data provider is unlikely to object to any consumer playing the movie at a quality below 75%. in other words, the intended policy is probably permitonlyparam({0,..., 75}, vq, play,{(obj, mova)}). note that the second policy can intuitively be refined to a policy which allows less quality, while the first policy cannot. similarly, let us assume a policy



note that there is a noteworthy asymmetry. restricting rights can, in principle, also mean to increase the lower bound. the interpretation is then that consumers are restricted in their freedom to choose, even though in the example of increasing the minimum quality, this may appear odd. in other words, one can argue that and academics(these potential receivers are specified below). customers can play a movie, back it up for fast recovery, and re-distribute it under specific conditions. reporters may play a movie up to three times. academics can play and edit a movie. furthermore they can send it to other academics.



other work on delegation policies and models[15,2] was published. this is similar to the work discussed above. several authors[5,11,10] discuss the problem of delegation in distributed system. however, they sketch problems rather than solutions. if solutions are discussed, these are very application specific.



