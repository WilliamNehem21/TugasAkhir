making built environments smart by using public displays, location sensors and mobile devices is becoming increasingly feasible in a range of environments. such environments have the potential to modify the behaviour and experience of their inhabitants. they provide information and services to support the various roles and activities of the people within these environments. the development of such systems presents interesting human and system engineering challenges.



there are a variety of ways that usability can be explored in ubiquitous computing systems. analysis may use scenarios aimed at capturing typical or extreme situations. it may use personas aimed at challenging designer assumptions about who might be using the system. when the user engages with the system, the effects of the interaction both personally in terms of personal devices, and publically in terms of shared displays in the built environment, should be transparent and intuitive. the system should not take the initiative away from the user in a controlling way. informal analysis techniques such as cognitive walkthrough, co-operative evaluation or heuristic evaluation can provide useful early feedback of some aspects of the design. however new and challenging characteristics are of particular relevance in these systems:



a range of formal models can be developed capturing different characteristics of ubiquitous systems that can be explored either through simulation or through property checking. this can happen prior to implementing a system and therefore provide the means to explore, relatively cheaply, alternative design options. two key concerns in the modelling process are to identify relevant properties and to capture aspects relating to the deployment of information, scheduling of activities, and issues of location.



public displays, mobile devices and sensors. interaction between user and activity may be impacted unexpectedly by location, the current status of the task at hand and other external effects generated by the ubiquitous environment. it may be affected by other users carrying out different tasks. a similar analysis focussed on timing issues, in particular the timeliness and relevance to person and location of message delivery, using the uppaal model checking tool. in most previous research in formal methods in interactive systems models are used to explore the interaction between user and device. for example these models are used to characterise and analyse mode confusion problems, see for example. it may also be appropriate to explore the way in which information in the environment provides resources for the user as they carry out their activities in the style discussed by. to illustrate the analysis of whole built environments and implicit action an example is used based on a dynamic signage system installed at lancaster university. alternative designs and properties of the system are explored. the models and properties incorporate simple user assumptions.



the gaudi system is designed to help people find their way in a complex built environment such as a large office building. static signage and directories are replaced with dynamic situated displays. the user interface of the implemented system consists of two parts. the interface provided by gaudi shows labelled photographs of all the office owners as well as the meeting rooms in the building on a large touchscreen. a visitor can touch the photograph or name of the person she wants to visit. this will initiate navigation support. situated displays are arranged throughout the building(similar to the interactive doorplates described in). when a visitor selects the person they wish to visit on the large touchscreen, all the displays in the building will show arrows that point towards their office. together they indicate the path a visitor needs to follow. gaudi will continue to show these arrows either until the visitor touches the display at her target location, or until a time out period has expired. gaudi, in its original form, may be considered to be calm technology:



the model makes further assumptions about how the visitor responds to possible collisions. in the event that movement would cause collision, hitting a wall, then the co-ordinate that would have been updated is unchanged and the other co-ordinate is updated in the same direction(if the x co-ordinate was to be incremented then the y co-ordinate would be incremented and so on). this policy works in the present case because sensor/ displays are located in the corners and therefore a visitor always eventually reaches a location where there is a display.



each of these assumptions may be questioned. they capture hypotheses about how people might behave in the smart environment. for example if a stochastic model like prism were used instead further assumptions might be made about how the visitor remembers the direction with a given probability and in so doing estimates of likely error behaviour could be explored.



the model provides a basis for exploring properties. these properties could be identified through a process such as the one described for eliciting snapshot experiences. they may be automatically checked against the model. this process of property checking may generate traces that would form the basis for further scenarios. hence for example the version of these models that were used for checking properties included specific timing information. this was to ensure that the system would not dwell endlessly at a particular state. the following properties have been checked.



be satisfied but may be unproblematic from a usability point of view. alternative models that make different assumptions about visitor dwell time will enable the exploration of counter-examples where visitors might spend longer than expected reading displays and travelling between locations. these counter-examples to properties may be used as the basis for scenarios.



harrison, m., c. kray, z. sun and h. zhang, factoring user experience into the design of ambient and mobile systems, in: g. van de veer, p. palanque and j. wesson, editors, engineering interactive systems, 2007, accepted for publication, springer lecture notes in computer science.



