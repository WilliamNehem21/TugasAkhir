this paper is structured as follows: we first provide a brief introduction to the restart method on the application level. we then dicuss aspects of the evaluation of restart strategies in service-oriented systems. sections 4 and 5 introduce the sfera framework. application of the framework is illustrated in section 6. section 7 concludes the paper.



restart addresses faults that manifest in the completion-time behaviour of tasks. in a service-oriented system, many common faults such as system failures, network faults, or system overload result in higher completion times, including an infinite completion time in the case of a failure. in evaluating restart in soa systems we therefore focus on completion times. restart algorithms may be evaluated at various levels of detail, including measurements in test-beds, simulation, and analytical approaches.



in the measurement-based approach, one first implements a testbed comprising clients, servers, and restart algorithms, and then measures completion times with and without restart. tools for automatic testbed generation such as puppet and genesis can be employed in setting up a testbed. with this approach, realistic system completion times and timeouts can be collected. the experiments are limited by available hardware and by long runtime.



a framework for simulation models of service-oriented architectures was presented in. the framework combines an extended version of process chains to describe the components of soa and quantitative specifications at higher levels. the aim of the framework is to be able to simulate soa system architecture and the network connecting independent services in detail. the framework in focusses on precise modelling of systems implementing low-level details. while restart may be evaluated using this framework, scalability to large numbers of clients is limited by the highly-detailed approach.



sources collect completion times either as raw data files or as statistics using the objects provided by omnet++. the data is written to one output file per client, which enables later investigation of the data using external scripts. for performance reasons, sfera does not utilise the built-in data storage and analysis facilities of omnet++.



the testbed was composed of four web services with real functionality providing a combined service. different services accomplish diverse tasks and occupy different resources. individual services were deployed separately on dedicated machines, connected by a wired network. two experiments were conductedwith and without injected packet-loss between the client and the testbed service. because completion times are measured in a realistic system, they build a solid basis for the evaluation of system times.



completion times were then approximated with acyclic phase-type distributions using the phfit phase-type fitting tool. the output of phfit is a distribution which is an accurate model of the distribution of the collected completion times. this model was used in our evaluation as models for the service-times in work servers.



simulates one parallel client. the workflow is combined from three work servers. first, two servers using service times without faults are called in parallel. once the administrative module receives answers from both parallel work servers, the next work server is called. this work server represents a faulty service and uses a model of service times from a testbed with packet loss. we ran simulations using the fixed intervals, jacobson karn, and qest restart algorithms. appropriate parameters for the restart algorithms were estimated based on the completion times from the testbed: the timeout for the fixed intervals algorithm was set around the mean of the observed completion times. the parameters for the histogram for qest were adjusted based on empirical quantiles and variance. the jacobson/karn algorithm was set to its default values.



the next step of the experiment is to evaluate statistical properties of the experiments with restart for both experiments. first we analyse the empirical mean of completion times through all scenarios. we see the mean as an indicator for the impact of restart algorithms on the other statistical measures.



