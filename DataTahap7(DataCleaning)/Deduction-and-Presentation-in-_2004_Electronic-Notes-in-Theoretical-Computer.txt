we describe the deductive and proof presentation capabilities of a rule-based system implemented in mathematica. the system can compute proof objects, which are internal representations of deduction derivations which respect a specification given by the user. it can also visualize such deductions in human readable format, at various levels of detail. the presentation of the computed proof objects is done in a natural-language style which is derived and simplified for our needs from the proof presentation styles of theorema.



very good support for symbolic and numeric computations. another reason is that rule-based programming, as envisioned by us, could be used efficiently to implement provers, solvers, and simplifiers which could, then, be integrated in the theorema framework. since theorema is implemented in mathematica, a mathematica implementation of a powerful rule-based system may become a convenient programming tool for theorema developers.



when prohibit is given a list of symbols{f1,..., fn}, the selection process will ignore the subexpressions of the expressions with the outermost symbol being one of f1,..., fn. the default value of prohibit is{}, i.e., any subexpression might be selected and rewriting can be performed everywhere.



maxdepth the purpose of this option is to avoid infinite computations determined by infinitely long branches in the search space for a derivation. its default value is 10000. when tracestyle has a different value than"none", the value of maxdepth determines the maximum depth of the partial d-tree that is encoded in the proof object which will be created.



