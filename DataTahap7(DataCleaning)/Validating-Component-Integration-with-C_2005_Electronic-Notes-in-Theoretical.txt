,. these formal methods are typically used for describing properties of invariance, precedence amongst events, periodicity, liveness and safety conditions, etc. for this purpose, several temporal logics have been used, or timed state machine, petri nets, etc. when the system under specification is not trivial its specification needs to be performed by decomposing the problems in smaller segments or components devoted to solve specific identified sub-problems, with the aim of obtain the whole system for composition.



the approach proposed in this paper is based on tilco(temporal logic with compositional operators) and its compositional version called c-tilco. please note that c in tilco acronym is referred to the composition of temporal constraints. tilco presents a uniform model for time from past to future and unique operators for stating facts and events along the time axis, together with extended temporal operators(tilco-x) and process communication support(c-tilco). the process communication of c-tilco allows to specify a complex system by decomposing it in several processes and it allows to model inter-process communication between them. tilco language can be directly executed, such executability consists in using the specification as an implementation of the real-time system, thus allowing(in each time instant) the on-line generation of system outputs on the basis of current inputs(including those concerning communication) and internal state. in this sense, tilco-executor, presented in, can execute a fragment of tilco specifications.



in c-tilco many instances of the same process component specification can be arranged in the global architecture. processes can have some parameters and every instance has its own distinct values. the communication among processes is based on a csp like typed synchronous input/output ports connected through channels. the connection is 1:1, each output port is connected to at most one input port and vice-versa.



the system is realized in terms of communication nodes; over each one a higher level communication interface is typically connected. these nodes perform only simple data communication and protocol management. the token is considered as boolean and it is transmitted over a dedicated channel. the message is treated as a structured type that includes the origin and the destination node id.



in these formulas, a failed attempt of communication on a broken channel is recovered using the backup ring; if both channels are broken the node cannot communicate anymore. two different predicates can determine the ready state after a successful transmission(readyfort okena, readyfort okenb) on one of the available channels. it has to be noticed that a broken channel will freeze the port on the send state, waiting forever for the remote synchronization.



the synchronization between the connected ports n1.sendt oken and n2.rect oken activates n2.transmitt oken; the broken channel condition enables the trasmission of the token on the n2.sendt okenback port. the connected port n1.rect okenback, which was waiting for a synchronization can propagate the token in the backup ring.



