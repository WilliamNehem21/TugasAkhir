the instantiations of meta-variables and constraints on the meta-variables cause dependencies among goals that share these meta-variables. take, e.g., two goals j and j' that both contain a meta-variable mv. now assume that multi first creates a partial proof plan for j and binds mv in such a way that j' cannot be proved anymore. the default backtracking in multi would remove j'. however, the actual problem is not j' but the selection of an appropriate instantiation for mv. that is, part of the subplan for j has to be removed to introduce another subplan that instantiates mv differently. this approach corresponds to the general meta-reasoning pattern:



since the knowledge engineering for proof planning is pretty difficult, the number of mathematical domains and problems successfully tackled by proof planning so far is growing only slowly. however, if not quantitatively then at least qualitatively, there is striking evidence for the need to meta-reason about failures in mathematics since the identified meta-reasoning patterns rely upon common techniques in mathematics. as evidence for this statement consider that failure reasoning in the proof planner clam(see related work in section 7) also exploits failures to guide the introduction of case-splits in a similar way but in a completely different mathematical domain, i.e., proving theorems by mathematical induction.



proof planning process. they represent heuristics suggesting how to handle a failure that occurs in conjunction with a pattern of partially successful steps. the meta-reasoning patterns do not only circumvent failures, they hold the key to the construction of a solution proof plan.



the described failure reasoning and the repair modifications are possible since multi does not enforce a pre-defined systematic backtracking. rather, when a failure occurs, then strategic control rules in which our heuristics are declaratively encoded can analyze the failure and can dynamically guide promising refinements and modifications of the proof plan. all the metareasoning patterns are generally applicable rather than over-specific as shown in the experiments(see section 6). further meta-reasoning that exploits the flexible control in multi is discussed in.



in minor technical issues but also in their conceptual design. critics are a method-like entity directly bound to failing preconditions of a particular method. moreover, part of a critic is a patch of the failure, which is a special procedure that changes the proof plan. in contrast, failure reasoning in multi is conducted by declarative and separate control rules. these control rules are not associated with a particular method but rather test for particular situations that can occur during the proof planning process(independent of the strategy or method that caused the situation). the control rules can reason about the current proof plan and about other information such as the history. the patch of a failure is not implemented into special procedures but is carried out by methods and strategies whose application is suggested by the control rules.



related to the unblocking of desirable steps in multi is the control reasoning in elaborate blackboard systems, e.g., see and. when a highly desirable knowledge source is not applicable, then reasoning on the failure can suggest the invocation of knowledge sources that unblock the desired knowledge source.



