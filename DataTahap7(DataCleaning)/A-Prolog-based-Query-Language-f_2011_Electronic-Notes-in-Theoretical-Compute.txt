in this paper we investigate how to use logic programming(in particular, prolog) as query language against owl resources. our query language will be able to retrieve data and meta-data about a given owl based ontology. with this aim, firstly, we study how to define a query language based on a fragment of description logic, then we show how to encode the defined query language into prolog by means of logic rules and finally, we identify prolog goals which correspond to queries.



the semantic web framework[11,13] proposes that web data represented by hmtl and xml have to be enriched by means of meta-data, in which modeling is mainly achieved by means of the resource description framework(rdf) and the web ontology language(owl). rdf and owl are proposals of the w3c consortium 3 for ontology modeling. owl is syntactically layered on rdf whose underlying model is based on triples. the rdf in which a richer vocabulary allows to express new relationships. owl offers more complex relationships than rdf(s) between entities including means to limit the properties of classes with respect to the number and type, means to infer that items with various properties are members of a particular class and a well-defined model of property inheritance. owl is based on the socalled description logic(dl), which is a family of logics(i.e. fragments) with different expressivity power. most of fragments of description logic are



subsets or variants of c2, the subset of first-order logic(fol) extended with counting quantifiers, with formulas without function symbols and maximum two variables, which is known to be decidable. description logic can therefore also be understood as an attempt to address the major drawbacks of using fol for knowledge representation and inference, and also the syntax of dl allows a variable-free notation. the most prominent fragment of dl is sroiq which is the basis of the new standarized owl 2. owl 2 semantics has been defined in, in which a direct semantics is defined based on description logic, and in a rdf-based semantics is provided.



in this paper we investigate how to use logic programming(in particular, prolog) as query language against owl resources. our query language will be able to retrieve data and meta-data about a given owl based ontology. with this aim, firstly, we study how to define a query language based on a fragment of description logic, then we show how to encode the defined query language into prolog by means of logic rules and finally, we identify prolog goals which correspond to queries.



basically, our work goes towards the use of logic programming as query language for the semantic web. it follows our previous research line about the use of logic programming for the handling of web data. in particular, we have studied the encoding in logic programming of the xml query language xpath in[2,1], and the encoding in logic programming of the xml query language xquery in[3,5], studying extensions of xquery for the handling of rdf and owl in[4,7,6]. in this framework, we would like to study how owl querying and reasoning can be achieved by means of logic programming in order to be integrated with the proposal of the implementation of xquery in logic programming.



and the abox(assertional box). the tbox describes concept(and role) hierarchies(i.e., relations between concepts and roles) while the abox contains relations between individuals, concepts and roles. therefore we can see the tbox as the meta-data description, and the abox as the description about data.



in this context, we can distinguish between(1) reasoning tasks and(2) querying tasks from a given ontology. in both cases, a certain inference procedure should be present in order to deduce new relationships from a given ontology. the most typical(1) reasoning tasks, with regard to a given ontology, include:(a) instance checking, that is, whether a particular individual is a member of a given concept,(b) relation checking, that is, whether two individuals hold a given role,(c) subsumption, that is, whether a concept is a subset of another concept,(d) concept consistency, that is, consistency of the concept relationships, and(e) a more general case of consistency checking is ontology consistency in which the problem is to decide whether a given ontology has a model. however, one can be also interested in(2) querying tasks such as:(a) instance retrieval, which means to retrieve all the individuals of a given concept entailed by the ontology, and(b) property fillers retrieval which means to retrieve all the individuals which are related to a given individual with respect to a given role.





the structure of the paper is as follows. section 2 will present the fragment of dl of our proposal. section 3 will define the query language proposed from the fragment. section 4 will describe the encoding of the query language in prolog. finally, section 5 will conclude and present future work.



our inference calculus can be used for proving a given description logic formula of the selected fragment from an ontology of the same fragment. our inference calculus can be used for inferring all the entailments from a given ontology. the idea is to apply the rules up to a fix point is reached. in addition, we have designed the inference calculus in order to be implemented in logic programming, in particular, in prolog. it forces to limit the inference capabilities of our system. the inference calculus only handles the user-defined dl complex formulas(i.e. those included in the tbox). for instance, we



in this section we will define the query language based on description logic. such query language will introduce variables in dl formulas in order to express the values to be retrieved in the query result. in addition, our query language can handle conjunctions of dl formulas. we will use variable names starting with lower-case letters to distinguish them from non-variables.



as in the case of the data and meta-data definition language, the query language is restricted to a fragment of dl in order to be encoded in logic programming(i.e. in prolog). assuming that variable names start with lower case letters, queries are formulas like:



in this paper we have proposed a query language for owl based on prolog. the query language is able to query about data and meta-data of a given ontology. as future work, we would like to extend our approach to richer fragments of dl and owl.



