proof. since by lemma 3.9, there is a non-deterministic pspace algorithm for the problem being considered, we can apply the well known theorem of savitch to conclude that there is a deterministic algorithm that solves the problem in pspace.



now, we will prove that the reachability problem in petri nets with s-variants is pspace-hard. cheng, esparza and palsberg gave a reduction from the problem of satisfiability of quantified boolean formulas(qbf-sat) to the reachability problem in 1-safe nets. we will use the same reduction and prove that the resulting net has s-variants. this will give us the necessary hardness proof.



intuitively, ng starts with one token in g in, indicating that testing of g has started. a token in x is t(resp. x is f) indicates that variable x is assigned to true(resp. false). when ng finishes testing g(using many other places and transitions not mentioned here), it puts a token in g t(resp. g f) to indicate that g is true(resp. false). we refer the reader to the original paper for further details. the following result shows that ng has s-variants.



proof. we first check if each transition is progressive. this can be done by formulating a linear programming problem that checks whether a transition is part of some semi-positive t-invariant and then testing its feasibility with rational data. with n transitions, n such tests need to be done. then, we check if removing progressive transitions makes n structurally bounded. this can again be reduced to checking feasibility of a linear programming problem with rational data. clearly, all the above operations can be done in polynomial time.



v0 fires once to get a token in q0. transition t0 can now fire n times to put 2n tokens in p0. transition w0 can now fire once to put a token in s0. transition u0 can now fire 2n times to put 2n tokens in c0. transition x0 can now fire once to put a token in e0. thus, n0 began with one token in b0 and ended with one token in e0, and in the process, number of tokens in c0 was doubled.



to establish that ni is partially bounded, we need to prove that number of firings of non-progressive transitions is bounded by a function of number of firings of progressive transitions and input size. in what follows, the set of places{p0, c0,..., ci} plays an important role. for convenience of notation, let ci={p0, c0,..., ci} and



every firing of v0, w0 or x0 needs one token to be added to b0. only transitions that can add tokens to b0 are x1 and r1. every firing of x1 or r1 needs one token to be added to d1. t1 is the only transition that can add tokens to d1 and t1 can fire at most(nl+ k)i times by proposition b.5. hence, v0, w0 and x0 can fire at most(nl+ k)i times.



