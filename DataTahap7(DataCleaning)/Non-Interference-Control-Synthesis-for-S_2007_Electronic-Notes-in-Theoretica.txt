in this paper, the problem of synthesizing controllers that ensures non interference for multilevel security dense timed discrete event systems modeled by an extension of timed automata, is addressed for the first time. we first discuss a notion of non interference for dense real-time systems that refines notions existing in the literature and investigate decidability issues raised by the verification problem for dense time properties. we then prove the decidability of the problem of synthesis of the timed controller for some of these timed non interference properties, providing so a symbolic method to synthesize a controller that ensures them.



non interference. nowadays computing environments allow users to employ programs that are sent or fetched from different sites to achieve their goal, either in private or in an organization. such programs may be run as a code to do simple calculation task or as interactive communicating programs doing io operations or communications. sometimes they deal with secret information such as a private data of a user or as classified data of an organization. similar situations may occur in any computing environments where multiple users share common computing resources. one of the basic concerns in such context is to ensure programs not to leak sensitive data to a third party, either maliciously or inadvertently. this is one of the key aspects of the security concerns, that is often called secrecy. the information flow analysis addresses this concern by clarifying conditions when a flow of information in a program is safe(i.e. high-level information never flows into low-level channels). these conditions named non interference properties, capture any causal dependency between high-level actions and low-level behavior. their characterization has appeared rapidly out of the scope of the safety-liveness classification of system properties achieved by the system verification community during the last twenty five years. also, in recent years, verification of information flow security has become an emergent field of research in computer science with a success story in its application to the analysis of cryptographic protocols where numerous uniform and concise characterizations of information flow security properties(e.g. confidentiality, authentication, non-repudiation or anonymity) in terms of non-interference have been proposed.



timed non interference verification problem. the growing importance of verification for real-time systems, leads naturally to the next question of whether proof techniques developed in the untimed setting can be generalized for timed systems in order to be able to capture, besides the logical information flows, also the time dependent interference, e.g. timing covert channel. some untimed bisimulation-based non interference properties for information flow studied in have been reformulated in in a discrete time setting. in, some state-based and trace-based non interference properties have been introduced in a dense time setting using timed automata.



controller that ensures these properties. finally, an example(section 5) is given to illustrate this method for the cosimulation-based timed non interference property. in the next section we give a short presentation of the notion of timed automata used in this paper.



in this section we recall the definitions of timed automata(section 2.2) and some of their constructors. but first, some preliminaries about timed transition systems and their behavior are given in section 2.1 in order to express semantics of timed automata.



in this section we define and propose solutions for some timed non-interference control problem. we prove the decidability of control problems of timed-stnni and timed-csnni by giving algorithms for the synthesis of controller guaranteeing these two properties. as well as the safety control problem for timed automata, the tts solution given by the algorithm can be both interpreted as the system in closed-loop and the controller. for all these problems, the controller that forbids any controllable actions is a solution but not necessarily the most permissive.



remark 4.10 unfolding of a over a' has the same discrete structure as a' but extended with the behavior of a. this timed automaton will be then used to isolate states that are timed-csnni and compute the controller ensuring the timed-csnni property.



timed non interference control synthesis with partial observability. depending on the nature of the plant, the non-controllable actions could be observable(full observability) or only a proper subset(partial observability) may be observable by the controller. in the timed setting, partial observability assumption applies not only to uncontrollable actions but also to the clocks of the security system.



