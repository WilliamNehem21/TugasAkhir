we propose a petri net model of handshake protocols. these are asynchronous communication protocols which enforce several properties such as absence of transmission interference and insensitivity from delays of propagation on wires. we introduce the notion of handshake petri net, a petri net with a specific external interface. we show that the set of observable quiescent traces generated by such a net captures the properties defining a handshake protocol. conversely we show that for any handshake protocol we can construct a corresponding net. we also study different subclasses of the model. many examples are provided.



the asynchronous style of computation is characterized by several subunits acting locally, independently of each other, as opposed to the synchronous style, where a central clock disciplines everything. working with asynchronous systems, there are a few situations one would like to avoid. one is transmission interference which may occur when two consecutive messages are sent over the same channel, with the risk of clashing into one another. another one is computation interference, where a message is delivered to an unready receiver[9,16].



this led us to look for other kinds of models. a graphical representation is probably the most natural choice for dealing with asynchronous circuits: in graphs as in circuits, composition is easy when everything else works properly. several works have taken a similar perspective(,,...). in particular dan ghica developed a language for asynchronous hardware design by taking inspiration from the geometry of interaction and handshake circuits. however his goal was to improve previous hardware design languages[15,3] and not to capture all handshake behaviors.



the model we present in this paper is based on petri nets. petri nets are widely used as models of asynchrony, and are close to the context in which the handshake communication protocol originated. however, the properties of delayinsensitivity and absence of transmission interference had not yet been formalized under a graphical representation. we call our model handshake petri nets. we show that handshake petri nets capture precisely the handshake protocol, in the sense that the behavior of every net is a handshake language and that every handshake language is the behavior of some net.



in section 2 we define the notion of handshake language as set of traces(taking inspiration from and). in section 3 we introduce handshake petri nets and some of their subclasses. we put a special emphasis on deterministic behaviors, as well as on those nondeterministic behaviors which cannot be expressed as sums of deterministic components. finally, in section 4 we provide an interpretation of handshake petri nets into handshake languages and we prove the correctness and completeness of this interpretation. completeness of deterministic handshake petri nets with respect to deterministic handshake languages will follow as a corollary.



we assume some basic knowledge on petri nets, which we will use in their standard graphical representation. throughout the paper we will consider petri nets in their unsafe version, where places are allowed to contain several tokens at the same time. this is not just for convenience. unsafe nets are necessary to carry out our construction. we also stress that the nets we consider are in general not finite, in the sense that they may have infinitely many places and/or transitions.



marked graphs are significant as they allow to identify places with communication channels and in turn to represent all and only circuits which can be built out of channel, synchronization and fork operations. moreover they have a special historical importance for the handshake protocol. we call handshake marked graph a handshake petri net which is also a marked graph.



marked graphs express only deterministic behaviors but not all deterministic behaviors are captured by marked graphs. as far as we know, no structural characterization of determinism in petri nets exists in the literature. we propose a definition that completely characterizes determinism in the context of handshake nets.



also, the graphical representation may drive the definition of a more standard notion of syntax in the form of a process calculus. van berkel already proposed the handshake process calculus(see also). however their goal was not to capture all possible handshake behaviors and a complete process calculus of handshake circuits is still wanted.



further directions include a deeper analysis of data-exchange, as in this paper we focused especially on data-less communications. it would also be interesting to exploit those subclasses which allow finite representations of a given subset of handshake languages, as we tried to hint in section 3.1.



the second definition is less significant, but still useful. let h be an hpn and t and t' two distinct external transitions of h. we call t' the complement of t, and viceversa, when t and t' belong to the same port.



hl(h) is receptive. handshake db nets are unsafe, that means that places may contain an unlimited number of tokens. so, every time an input transition is enabled to fire it can. note also that the enabling of an input transition depends only on the alternation with its complement output transition. then hl(h) is receptive.



