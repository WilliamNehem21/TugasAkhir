and compare them to known objects. dl can perform all ml tasks from classification to clustering. also, ml can only perform a few of the dl tasks. this is due to the needless feature extraction in the dl, while the ml needs to perform feature extraction on the data at the preprocessing step before feeding the model. feature extraction is a step that a domain expert usually does to select or derive an informative and non-redundant set of values from being used for the model. dl is used for image compression using different algorithms. the most widely used algorithm is the convolutional neural network (cnn) which represents the features of the image at different scales and by using pooling layers, which summarize the features of each image region. however, the image compressed and decompressed using a cnn model is found to be blurry due to loss of information during the compression (encoding) process.



this research paper uses a stacked autoencoders (sae) deep learn- ing model and a content-based image filter to compress the image. sae is a feed-forward-based type of nn, where the output is the same as the input. it consists of an encoder, a decoder, and a loss function. in the training phase, sae transforms the bits into an encoded (compressed) format with fewer bits called latent-space representation (code) using the encoder and then reconstructs it into a lossy image using the decoder with the same shape. in the testing phase, the code alone is used in the decoder model to be reconstructed, as the weights and underlying functions (activation functions) are kept in the trained model. the model is trained using back propagation (bp) algorithm. bp is a supervised algorithm that tunes and enhances the output by adjusting the hyperparameters. on the another hand, a content-based image filter is used to enhance the quality of the reconstructed image generated using the sae decoder.



furthermore, this research adds an image classifier to the proposed compression technique to choose the ae that serves that particular image class. the proposed image compression algorithm reduces data size by removing redundant and excessive information. this process reduces the cost of storing and transmitting images, especially over low-bandwidth networks. the main objective of the proposed approach is to considerably increase the compression ratio beyond the exist- ing compression algorithms, such as linear lossy data compression (e.g., jpeg), along with an image classifier to identify the class of new images that need compression.



the rest of the paper is structured as follows: section 2 presents the literature review of image compression. dl algorithms are analyzed, showing the early techniques of image compression till the recent techniques that employed dl. the proposed methodology, including background on the base method used and the complete architecture of the image classifier, compression, and decompression algorithms, are given in section 3. the experimental results and discussion of the results obtained are provided in section 4. finally, section 5 concludes the research findings and offers possible future directions.



the variational autoencoder vae is another type of ae used for image compression. vae uses the mean and variance as input of latent space distributions and has been shown to perform better than simple autoencoders. many researchers employed vae for image compres- sion using nonlinear transforms and uniform quantization techniques. for example, zhou et al. used vae with the challenge on learned image compression (clic) dataset for training the model [21]. the model was enormous and complex due to multiple training parameters. similarly, chen et al. proposed a vae-based architecture for high- resolution image compression, which utilized a non-local attention module to improve the training process, but at the cost of increased model complexity [22]. in [23], the authors proposed a vae for im- age compression, and in [24], vae was used to compress images and achieve a 4.10 bits per pixel rate, but with a complex model architecture.



to enhance the quality of the reconstructed image, an additional step called the residual enhancement vector (rev) is introduced. by adding the rev, the decompression phase aims to achieve a recon- structed image that is as close as possible to the original image in terms of visual quality and details. this approach helps to enhance the overall performance of the compression/decompression algorithm.



the resulting rev from the compression process is the same size as the original image. in order to reduce the rev size in memory, it was transformed and binarized to have a smaller range of numbers by elimi- nating values with the least density. the following steps are to binarize rev to have a minimum size and then enhance the compression rate.



proposed model has a 23.62% better ssim score than the jpeg-encoded images and a 3.38 db better psnr score. experiment 4 showed that the proposed model has a 25.18% better ssim score than the jpeg-encoded images and a 4.48 db better psnr score which is the best result.



iments since it is the closest image size to the compressed size of the proposed model. images decoded using the proposed model are visually better than the jpeg encoded in all four experiments. no enhancement was needed since it was already good enough with high ssim and psnr scores.



1.05 db better psnr score than the jpeg-encoded images. experiment 7 showed that the enhanced image has almost the same ssim score and almost the same psnr score as the jpeg-encoded images. experiment 8 showed that the jpeg encoded image is only 0.74% better ssim score than the enhanced image with less than 0.8% of cr, which is the best cr score for grayscale images. the enhanced image has a 0.16 db better psnr score than the jpeg-encoded images.



same cr and a 0.21 db less psnr score than the jpeg-encoded image. experiment 11 showed that the enhanced image has only a 9.95% less ssim score and a 2.67 db less psnr score than the jpeg-encoded images. experiment 12 showed that enhanced images have a 10.02%



