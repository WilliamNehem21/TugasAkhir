logical frameworks have enjoyed wide adoption as meta-languages for describing deductive systems. while the techniques for representing object languages in logical frameworks are relatively well understood, languages and techniques for meta-programming with them are much less so. this paper presents work in progress on a programming language called rogue-sigma-pi(rsp), in which general programs can be written for soundly manipulating objects represented in the edinburgh logical framework(lf). the manipulation is sound in the sense that, in the absence of runtime errors, any putative lf object produced by a well-typed rsp program is guaranteed to type check in lf. an important contribution is an approach for soundly combining imperative features with higher-order abstract syntax. the focus of the paper is on demonstrating rsp through representative lf meta-programs.



to write an imperative version of this function, which caches intermediate results. caching intermediate results is a simple but highly effective optimization in automated reasoning systems. in the case of the deduction theorem, we will cache intermediate proofs using an attribute dedthm cached. since the type of the cached



