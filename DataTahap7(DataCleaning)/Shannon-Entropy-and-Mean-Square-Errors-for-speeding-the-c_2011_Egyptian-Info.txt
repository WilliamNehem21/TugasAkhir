abstract improving the efficiency and convergence rate of the multilayer backpropagation neural network algorithms is an active area of research. the last years have witnessed an increasing attention to entropy based criteria in adaptive systems. several principles were proposed based on the maximization or minimization of entropic cost functions. one way of entropy criteria in learning systems is to minimize the entropy of the error between two variables: typically one is the output of the learning system and the other is the target. in this paper, improving the efficiency and convergence rate of multilayer backpropagation(bp) neural networks was proposed. the usual mean square error(mse) minimization principle is substituted by the minimization of shannon entropy(se) of the differences between the multilayer perceptions output and the desired target. these two cost functions are studied, analyzed and tested with two different activation functions namely, the cauchy and the hyperbolic tangent activation functions. the comparative approach indicates that the degree of convergence using shannon entropy cost function is higher than its counterpart using mse and that mse speeds the convergence than shannon entropy.



approach it can solve the large-scale problem efficiently and optimal solution can be obtained. the advantage of neural networks lies in the following theoretical aspects. first, neural networks are data driven self-adaptive methods in that they can adjust themselves to the data without any explicit specification of functional or distributional form for the underlying model. second, they are universal functional approximators in that neural networks can approximate any function with arbitrary accuracy. third, neural networks are nonlinear models, which makes them flexible in modeling real world complex relationships. finally, neural networks are able to estimate the posterior probabilities, which provides the basis for establishing classification rule and performing statistical analysis.



usually error backpropagation for neural network learning is made using mse as the cost function. during the learning process, the ann goes through stages in which the reduction of the error can be extremely slow. these periods of stagnation can influence learning times. in order to resolve this problem, the mse are replaced by entropy error function[23,8,24]. simulation results using this error function shows a better network performance with a shorter stagnation period. accordingly, our purpose is the use of the minimization of the error entropy instead of the mse as a cost function for classification purposes. let the error e(j)= t(j) y(j) represent the difference between the target t of the j output neuron and its output y, at a given time t. the mse of the variable e(j) can be replaced by its eem counterpart.



the rest of the paper is organized as follows. related work is outlined in section 2. section 3 introduces the multilayer backpropagation neural networks. section 4 introduces the mean square error. shannon entropy was discussed and analyzed in section 5. simulated results were discussed in section 6 for shannon entropy and in section 7 for mean square error. section 8 compares shannon entropy and mse. finally conclusions are outlined in section 9.



are used for controlling the weight adjustment along the descent direction and for dampening oscillations. however, the convergence rate of the bp algorithm is relatively slow, especially for networks with more than one hidden layer. the reason for this is the saturation behavior of the activation function used for the hidden and output layers. since the output of a unit exists in the saturation area, the corresponding descent gradient takes a very small value, even if the output error is large, leading to very little progress in the weight adjustment. the backpropagation algorithm may be described with the following three steps, which have to be applied several times in an iteration.



layer with output y and a target variable(class membership for each example in the dataset), t. for each example we measure the error using e(n)= t(n) y(n), n= 1, 2,..., n where n is the total number of examples. we only consider the twoclass problem; thus we set t{ 1, 1}. the proposed backpropagation algorithm does not use expression(17) directly



