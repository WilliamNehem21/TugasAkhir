the unconditional trs obtained from a ctrs r by omitting the conditions in its rewrite rules is denoted by ru. note that(f, ru) is an unconditional trs in the usual sense provided that(f, r) is a 2-ctrs. this is not true for 3-ctrss because rules of type 3 may contain variables on the right-hand sides of rules which do not occur on the corresponding left-hand side. for a ctrs r, notions like left-linearity and constructor term are defined via the system ru. since these properties solely depend on the left-hand sides of the system ru, they are well-defined even if ru is not a trs in the usual sense.



p. moreover, if p/= q, then we say that p is strictly below q or q is strictly above p. two positions p and q are independent or disjoint, denoted by p q, if neither one is below the other.



the restrictions imposed in lemma 2.8 are really necessary as counterexamples in[5,20] show. analogously to lemma 2.4, the preceding parallel moves lemma can be extended to almost orthogonal systems and one may allow infeasible conditional critical pairs. hence it follows that the ctrs from example 2.6 is level-confluent.



for reasons of efficiency, term rewriting is usually implemented by term graph rewriting. in term rewriting, expressions are represented as terms, whereas in term graph rewriting these are represented as directed graphs. unlike terms, graphs allow a sharing of common subexpressions. in term graph rewriting expressions are evaluated by rule-based graph transformations. here we will only consider directed acyclic graphs.



the subterm t is copied. if t is a large term, then this operation can be very costly in terms of space and time. moreover, after this reduction step the value(normal form) of t has to be computed twice unless t is already in normal form. therefore, this reduction step duplicates the work that is necessary to evaluate t. the usual



in the resulting directed acyclic graph, the subterm t is shared. an evaluation of t in the directed acyclic graph corresponds to a parallel evaluation of the two occurrences of t in the term t+ t. thus representing expression as graphs instead of terms saves both time and space. investigations of term graph rewriting include[19,4,18,10,11,1,14,15,2,17]. it has been shown by kurihara and ohuchi that directed acyclic graphs can be represented by well-marked terms; thus graph transformations can be modeled by rewriting well-marked terms. we first recapitulate some basic notions. most of them stem from.



