3 in graph theoretical terminology, a product of two graphs would be called a bigraph, since it has two sets of edges. more generally, in graph theory, graph-like structures with multiple sets of edges are called multi-graphs. in the context of modal logics and kripke semantics, this notational difference is often lost and all these structures are called simply labeled graphs.



in this work, we introduce a new property called h-v intransitivity that, together with the previous ones, form a necessary and sufficient condition for a finite and connected graph to be a product. the proof of the necessity of these properties is fairly simple and is done directly, without the need to assume that the graph is finite or connected. on the other hand, the proof of the sufficiency is done in two steps. first, we prove that if a finite and connected graph satisfies the five properties stated above, then its horizontal and vertical components must satisfy a particular isomorphism. then, we show that if a finite and connected graph satisfies h-v intransitivity and its components satisfy this particular isomorphism, then the graph is a product.



products of graphs and multi-graphs in general come up naturally as an extension of ordinary kripke semantics to multi-dimensional modal logics. presents a good textbook discussion of multi-dimensional modal logics and provides many examples of products of modal logics, where the semantics is built using products of graphs. as an example of a concrete application of multi-dimensional modal logics with products of graphs, in and, a multi-dimensional modal logic is used to express properties of distributed systems. this logic uses the transitive closure of a product of modal logics.



the paper is organized as follows. in section 2, we introduce the definition of a product of graphs and present four properties related to this definition: left and right commutativity and the church-rosser and reverse church-rosser properties. we also introduce a new property called h-v intransitivity. in section 3, we present the concept of graph decompositions and use it to prove that the five properties presented in the previous section form a necessary and sufficient condition for a finite and connected graph to be a product. section 4 shows that the property of h-v intransitivity is not modally definable and that no necessary and sufficient condition for a graph to be a product can be modally definable. in section 5, we extend the modal language of the previous section to a hybrid language and show



thus, when we need to test whether a graph satisfies h-v intransitivity, we just need to verify the first condition in definition 2.2. on the other hand, when we know that a graph satisfies h-v intransitivity, we may use any one of the three conditions according to our needs.



the problem of graph decomposition consists of, given a graph, to determine whether this graph can be decomposed in a product of two non-trivial graphs. a graph is said to be trivial if it has only one vertex and no edges. every graph can be described as a product of itself with a trivial graph. in this work, we consider a restricted version of this problem.



now, suppose that g does not satisfy h-v intransitivity. then, we have vertices x, y and z, such that x/= y, y/= z, there is an undirected ev-path from x to y and an undirected eh-path from y to z and x= z. as g is a product, x=(x1, x2), y=(y1, y2) and z=(z1, z2). then, as there is an undirected ev-path from x to y, then x1= y1. also, as there is an undirected eh-path from y to z, y2= z2. as x= z, then z1= x1= y1 and x2= z2= y2, which implies that the three vertices are the same, contradicting the fact that x/= y and y/= z.



now, to show that each horizontal component contains l vertices, where l is the number of vertical components, and each vertical component contains k vertices, where k is the number of horizontal components, we proceed by a double induction on k and l. start with k= l= 1. every graph in this case must have only one vertex. since we have only one component of each kind, if we had two distinct vertices u and w in the graph, we would have to have both an undirected eh-path and an undirected ev-path between u and w, contradicting h-v intransitivity. the only edges that this graph may have are horizontal and vertical loops. it is important to notice that the addition or deletion of loops does not change the number of components. in this basic case, the proposition is true.



neighbor to gi. besides that, we have an isomorphism between these components. this means that this horizontal component also contains n vertices and each one of these vertices is contained in a distinct vertical component. thus, the proposition is true.



in this section, we show that the property of h-v intransitivity is not modally definable. in fact, we also show that no condition that is necessary and sufficient for a graph to be a product can be modally definable. even tough we restricted ourselves to finite and connected graphs in the previous section, this restriction is not necessary for the undefinability results presented in this section.



below is a basic theorem about modal definability that is going to be used to prove our results. its proof for a language that contains only one modality can be found at. it is not difficult to extend that proof to a language that contains a family of modalities, each with its accessibility relation.



5. it is not difficult to see that the first and third graphs are products while the second is not. by corollary 4.7, since neither the property of being a product nor the property of not being a product are preserved under bounded morphic images, they are not modally definable.



as was shown in the previous section, a basic modal language does not have enough expressive power to describe the properties that we want. in order to achieve our goal, we need a language that is more expressive. in this section we describe a simple hybrid language and then use it to define h-v intransitivity.



the expressive power and computational complexity of a hybrid extension of a given modal logic usually lie between the ones of the original modal logic and the ones of first-order logic. this, however, depends on which operators, besides the nominals, are added to build the hybrid logic. with the addition of state-variables and quantifiers, it is possible to achieve full first-order expressivity and complexity(undecidability). for a general introduction to hybrid logics, and can be consulted.



it is known that left and right commutativity and the church-rosser and reverse church-rosser properties are necessary conditions for a graph(frame) to be a nontrivial(cartesian) product of two other graphs, but their conjunction is not a sufficient condition. we introduce a new property called h-v intransitivity, that, together with the former ones, form a necessary and sufficient condition for a finite and connected graph to be a product. the proof of the necessity of these properties is fairly simple and is done directly, without the need to assume that the graph is finite or connected. on the other hand, the proof of the sufficiency is done in two steps. first, we prove that if a finite and connected graph satisfies the five properties stated above, then its horizontal and vertical components must satisfy a



the limits to the expressive power of basic modal languages are well known. we show that the property of h-v intransitivity is not modally definable. we also show that no condition that is necessary and sufficient for a graph to be a product can be modally definable. extending our language to a hybrid language, we are then able to express h-v intransitivity.



and can be consulted). since many graph properties, such as reflexivity, irreflexivity, transitivity, intransitivity, symmetry, asymmetry and antisymmetry( presents other examples), can be expressed by pure formulas, if we can extend this result on hybrid completeness proofs to products of logics, then we would be able to automatically prove completeness for a large number of products of logics through a single completeness proof. some preliminary work on hybrid axiomatization of products of logics is presented in the last chapter of.



