spatial messaging is a term that defines the virtual publication of data in physical places. generally, anyone in the neighborhood of such a publication point gets the message. frameworks allowing the users to publish freely spatial messages already exist. however, the experiences realized with volunteers showed that there is only little interest in posting such notes. to our view, the main reason is that there are currently no trust and security mechanisms that inform about the trustworthiness of the messages, thus preventing any serious application. filling this gap will promote the success of spatial messaging and the growing success of localization and mobile techniques will provide a good support for this concept. this paper describes the spatial messaging services that we are in the process to deploy with our new spatial messaging framework, which includes trust and security mechanisms.



there are many reasons to believe that spatial messaging will become a wide spread concept in a nearby future. today, people use the connection capabilities of their mobile phone mostly in one way, to download information. but in the same way that people passed from television to internet, the next generation of user will probably become active and publish information. if we remember how fast the computer power and the communication capabilities of these devices improve, and the fact that there are today more modern mobile phones(with internet connection) than desktop computers in the world, we can easily paint a glorious future for mobile technology. this assertion can be confirmed by the growing interest for location awareness. the success of mobile mappy, a service that allows you to download maps on your mobile phone as well as pois(points of interest) wherever you are, is an indicator of this growing interest. and mobile mappy is not alone. there are more and more applications or internet services for mobile users that provide maps and other information related to your current position.



activecampus explorer goes a step further by displaying also where other users are. every user holds a pda and its location is determined by comparing the signal strength of different wireless access points. thus, the system knows the position of all its users, and communicates this information to the all of them that are close together. like e-graffiti and geonotes, it is also possible to tag objects.



in the scenarios depicted in the introduction, the author chooses who will be able to read the posted message. we are not going to discuss if it is a good idea to allow publications for a restricted audience, since anyway we cannot avoid it. indeed, an author can always encrypt the content of his message with a key k and then encrypt k with the public keys of each addressee. the question is more how we are going to handle this issue, or what tools a spatial messaging system should provide for that. with no tools then encrypted messages will be visible for everyone(even if the content itself cannot be understood), so everyone can see who published this message and can add comments to it. with supplied tools the system could hide the messages for unwanted addressees. which solution is better? do the



trust is a very complex concept. even if it is part of everyday life, different people give different definitions of what trust is. this observation is even strongly accentuated when we try to explain how to build a trust relation between machines, or between humans and machines.



any user can obtain anonymously all the vtags in his neighborhood just by queering the server. to become a member, and therefore be able to review vtags(add comments to an existing vtag) or be able to create new vtags, a user has to register. the registration process allows you to choose a pseudonym and returns a key pair that will be used each time to reconnect to the server. the registration process is done so that it is impossible, even for the server, to make a link between a pseudonym and the corresponding real-life identity. the process guarantees also that each pseudonym is unique, so that it can be used as a unique identifier.



the first rule explains by itself why we need pseudonyms. it is simply the only way to stay anonymous(there is no way to link a message to a real-life identity) and still have a way to be uniquely identified. the second rule avoids a sybil attack, where a user would create many different virtual identities in order to subvert the system. to get a pseudonym, a user must own a digital certificate, like the ones supplied by verisign or by some country id cards(for example belgium). we use the blind signature algorithm, which allows a signer, e.g., the server, to digitally sign information without seeing it(we do not detail how we use this algorithm due to space limitation).



has to be unique. if two members choose the same pseudonym at the same time, one of them must be able to change it. and remember, the members certificates are blindly signed, so it is impossible for the server to avoid to sign twice the same pseudonym. the server discovers a new pseudonym only the first time that the corresponding member reviews a vtag or creates a new one. publishing a list of all the existing pseudonyms is not a solution either, since the laps of time between the creation of a new certificate and its first utilization can be arbitrarily long. note that the fact that the server signs two certificates with the same pseudonyms is not really a security problem, since each pseudonym is linked to a public key, and that during a connection initialization the user will have to prove that he is the owner of the corresponding private key. the process of changing a pseudonym must respect the following rules:



: it allows allows a prover(the entity that wants to prove something, e.g., alice) to prove to a verifier(the entity that challenges the prover) that he owns a secret key, without giving any information about the key itself. if the challenge is ok, alice chooses a new pseudonym, creates a pair of asymmetric keys, and makes a member certificate with the pseudonym and the public key.



this section presents how we contextualize and format tags in the geovtag framework. a vtag is divided into three parts. the first part is written by the server. it contains trust information that can be read by the user in order to determine how reliable this vtag is. the second part is the one written by the author of the vtag. it contains geographical coordinates and the content of the vtag itself. the third part is written by reviewers. every member can indicates how much he agrees with the content of the vtag and add information if needed.



we propose a standard way to represent vtags, based on xml. one reason is to make the system interoperable. for example, we can imagine a tourist that comes to our country. he sees on a flyer the url of a vtag server supplying useful information in his mother tongue, like information about places he is visiting, or what people with the same cultural background than him think about the different neighboring restaurants. if the potential user seems interested by this service, he will probably accept to add the url at his server list, but it is much more unlikely that he accepts to add new software on his mobile phone for each new service. that way we propose a standard way to represent vtags so that a single application can display all the vtags around.



this paper started by giving a global presentation of spatial messaging. in the related work, we saw that this concept is currently far from widely accepted, and that users are not very interested in publishing virtual messages attached to physical places. we believe however that adding trust and security will completely change the deal. as mentioned earlier, the problem with applications like e-graffiti or geonotes is that they are not very useful if they are easily compromised. the system and its messages must be trustworthy, even if the real-life identity of its author is hidden.



we have implemented the first version of the geovtag framework and we are now focusing validation and evaluation. we have built a simulator that can be used to define a large virtual community of users(including malevolent ones), observe how trust relationships are built, and make sure that a person who behaves honestly receives in counterpart trustworthy information. however, our main validation target is to successfully deploy our trust model specifically designed for spatial messaging on a large-scale in real-life settings.



