the remainder of this paper is structured as follows. section 2 discusses how to get promela code according to the semantics of uml 2.0 interactions. in section 3, the mechanism for v&v using source/destination and send/receive events is presented. in section 4, we present a scenario applying our approach, as well as experimental results. section 5 briefly presents details about the tool implementing the v&v mechanism. in section 6, we present the related work. finally, we conclude with some remarks and directions for future work in section 7.



using spin to verify the properties described previously, we found that only the first property is satisfied. the model checker was able to provide a counterexample for each of the other properties. in the following, we present the failing trace related to the verification of each property.



as opportunities for future work, two main problems could be addressed. first, there is a substantial gap between natural language and properties written formal logics. the use of graphical notations, as proposed in, macro language and patterns in properties specification should be considered as an important improvement on model checkers based tools to bring them to the industry level. second, many security aspects are not usually encapsulated in only one type of diagram. normally they are scattered in various diagrams of different kinds. an inter-diagram analysis might provide results that are much more consistent in the assessment of uml models.



