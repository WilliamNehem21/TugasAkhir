we propose a obfuscation dataset ermds that solves the problem of evaluating the robustness of lbmds by generating malwares with diverse features. when designing this dataset, we created three types of obfuscation spaces, corresponding to binary obfuscation, source code obfuscation, and packing obfuscation. each obfuscation space has multiple obfuscation techniques, each with different parameters. the obfuscation techniques in these three obfuscation spaces can be used in combination and can be reused. this enables us to theoretically obtain an infinite number of obfuscation combinations, thereby creating malwares with a diverse range of features that have not been captured by lb-mds.





however, as the number and complexity of malware threats escalate, conventional signature-based detection methods are losing efficacy. to confront this challenge, commercial antivirus software providers are increasingly embracing machine learning techniques for malware detection[6,7]. by integrating machine learning algorithms into their software, these vendors can elevate the accuracy of their detection capabilities and keep pace with new and emerging threats.



to address the robustness evaluation problem of lb-mds, we propose the ermds dataset. unlike prior methods, ermds aims to provide a more realistic evaluation of model performance by including a wide array of model-agnostic adversarial examples. these examples are designed to capture various failure modes of modern models, instead of exclusively focusing on worst-case scenarios. when designing this dataset, we created three types of obfuscation spaces, corresponding to binary-level obfuscation, source code-level obfuscation, and packing obfuscation. each obfuscation space has multiple obfuscation techniques, each with different parameters. the obfuscation techniques in these three obfuscation spaces can be used in combination and can be reused. this enables us to theoretically obtain an infinite number of obfuscation combinations, thereby creating malwares with a diverse range of features that have not been captured by lb-mds.



ways to enhance the robustness of malware detectors. we believe that the ermds dataset and the proposed methods to improve the robustness of malware detectors will be valuable resources for future research in developing more effective and resilient mds. by enhancing the robustness of these systems, we can better protect users and organizations from the constantly evolving threat of malware and other cyber attacks.



or benign, the malware samples in these datasets are sourced from detection websites such as virustotal. the malicious samples in these pe malware datasets are relatively outdated and may not represent the latest features of malicious samples. additionally, the sample features in these datasets can be recognized by lb-mds and therefore cannot be used to evaluate the robustness of lb-mds.



in contrast, the bodmas dataset, released in 2020, contains 70,000 malware samples collected from 2019 to 2020 and 50,000 benign files. unlike the previous two datasets, the malware samples in bodmas are labeled with the specific type of malware they belong to, such as ransomware, trojan, or backdoor. this dataset is primarily intended to facilitate lb-mds in identifying the malware type to which a sample belongs. hence, it is also not appropriate for evaluating the robustness of lb-mds.



data obfuscation techniques involve splitting or merging program data to hinder attackers from analyzing data in the program. for instance, variable splitting splits variables in the program, such as arrays, into multiple sub-arrays. before accessing the array, the sub-arrays are combined to reform the original array.



solution for q2. for problem two, since the obfuscation combinations we generate are theoretically infinite, each combination applied to a malware produces a variant of the original malware. therefore, ermds can theoretically produce an infinite number of variants for each malicious sample, ensuring that each sample has multiple adversarial samples with different features.



as the majority of current datasets for malware analysis only contain samples from the period between 2017 and 2020, including the most recently released bodms, there is a risk that these datasets may not accurately reflect recent malware behaviors. to address this issue, we intend to release a new malware dataset that covers samples from january to december 2022. our initial dataset contains 10,000 malware samples, 5000 benign samples, and 300 benign samples with source codes, totaling 15,300 samples. we collected the malware samples from virusshare, ensuring that they were collected between january 1, 2022, and december 30, 2022. the benign samples were collected from github and source forge.



were not chosen to minimize the accuracy drop of lb-mds. instead, the ermds dataset was designed to provide a more realistic evaluation of model performance by incorporating a diverse set of model-agnostic adversarial examples. these examples aim to capture various failure modes of modern models, rather than focusing solely on worst-case scenarios. in the parameters section of the appendix, we provide a set of optimal parameters that can minimize the accuracy drop of lb-mds. after filtering out some malware that could not be processed, we obtained a total of 86,685 malicious and 30,455 benign samples for the ermds-x dataset. we extracted the features from pe files using the lief project and followed the same format as ember,



as a result of the absence of source code in malware, we limited the application of source-level obfuscation to benign programs that have source code. it is possible to achieve better accuracy reduction through source-level obfuscation if there is enough source code available for malware. although this presents a drawback of ermds-x, our experiments have demonstrated that ermds-x is sufficient for evaluating the robustness of mds. other researchers can readily expand the source-level obfuscation dataset by providing malware with source code.



additionally, we present the quality threshold of lb-mds on these four datasets, including the quality threshold of lb-mds and commercial antivirus software. the quality threshold of lb-mds is determined by averaging the accuracy of two lb-mds models, namely malconv and ember, selected during our experiments. the quality threshold of commercial antivirus software is determined by averaging the accuracy of six commercial antivirus software programs chosen during our experiments.



comprehensive comparison of two lb-mds models and six commercial antivirus software is presented based on their detection performance on both the ermds-x and clean datasets. the clean dataset is a collection of original data containing both malwares and benign programs. notably, malconv exhibits a significantly lower accuracy of only 78.57% on the clean dataset in comparison to ember and the six commercial antivirus software, which all have an accuracy of over 85%. our analysis suggests that this decrease in accuracy is due to the outdated dataset used by the malconv model during training, which failed to capture the latest features of malwares. in addition, research



the performance of the lb-mds models and commercial antivirus software on the ermds-x dataset demonstrates an accuracy range of 56.17% to 78.83%, with an average accuracy of 62.47%. this lower accuracy is attributed to the different types of adversarial examples present in the ermds-x dataset, which aims to provide a more realistic evaluation of model performance by including a broad range of model-agnostic adversarial examples. these adversarial examples are designed to capture various failure modes of modern models, rather than focusing solely on worst-case scenarios. thus, the performance of the lb-mds models on the ermds-x dataset did not decrease to the lowest level, but an accuracy of 62.47% is still a relatively low value, demonstrating the ability of ermds-x to evaluate the robustness of existing lb-mds models.



software is malicious or benign. even with random guessing, there is a 50% probability of correctly guessing. the accuracy of these systems on the ermds-x dataset is 62.47%, which is only 12.47% higher than random guessing. thus, ermds-x can be used to evaluate the



ember is an open-source lb-mds. it utilizes lief to extract features from both malicious software and benign programs. these features are then used by a lightgbm model to determine whether a program is malicious or not. we utilized the model provided by mlsec 2019 as our target for the attack.



malconv, in contrast to ember, directly uses the binary byte stream of malicious software as training data. based on this byte stream, it determines whether a program is malicious. we employed the model provided by mlsec 2019 as our target for the attack.



exhibit an accuracy of over 90% for detecting samples from both sorel and bodmas datasets. in contrast to section 5.3, the accuracy of commercial antivirus software for ermds-x ranges from 56.31% to 72.83%. although the lb-mds models attain an accuracy of over 80% for detecting samples from both sorel and bodmas datasets, their accuracy for ermds-x is only 56.17% and 68.53%, respectively. this implies that ermds-x can assess the robustness of mds, whereas other datasets like sorel and bodmas cannot significantly impact the accuracy of mds.



our findings indicate that while binary obfuscation techniques exhibits a certain level of effectiveness against commercial antivirus software, it is not entirely successful in defeating it. this is mainly because commercial antivirus software uses multiple features to determine whether a program is malicious or benign. binary obfuscation techniques have limited ability to modify the code and data of a program, such as being unable to modify the api calls feature of a program, leading to suboptimal performance in terms of adversarial effectiveness against commercial antivirus software.



to ensure fairness, we evaluated the quality of adversarial examples generated by the pos using the same dataset(dataset-v) as in the bos evaluation. for each malicious sample in dataset-v, we applied obfuscation techniques from the pos iteratively until an effective adversarial example was produced. we used the obfuscation methods from the pos to attack malconv, ember, and six commercial antivirus software. to ensure experimental accuracy, each experiment was repeated five times to obtain the average results.



in this section, we will discuss methods to enhance the robustness of lb-mds and analyze the current state of software obfuscation and malware detection. as previously demonstrated, commercial antivirus software exhibits poor performance in detecting packed malware due to encryption, which eliminates the feature and renders feature-based methods ineffective. however, packing can be utilized to protect intellectual property or important data, and simply labeling programs containing unpacking code as malware is not a practical solution. packed malware necessitates decryption before regular execution, and the decrypted code and data of the malicious program are in plaintext in memory, enabling commercial antivirus software to detect malicious features using feature-based methods. therefore, we suggest that antivirus software should primarily employ dynamic detection methods when determining whether a program is malicious or benign, as static detection cannot acquire the features of packed programs.



this paper presents a obfuscation dataset ermds that solves the problem of evaluating the robustness of lb-mds. to evaluate the ability of the ermds obfuscation dataset, we used the obfuscation spaces to generate an instance of the obfuscation dataset called ermds-x. we then used this dataset to evaluate two lb-mds models and six commercial antivirus softwares. through experimentation, we found that ermds-x can reduce the accuracy of lb-mds by an average of 20%, and reduce the accuracy of commercial antivirus software by an average of 32%. finally, we analyzed the reasons for the decrease in accuracy for each lb-mds and commercial antivirus software, and provided suggestions for improving robustness.



/uture work. comprehensively evaluating the robustness of mds is a challenging task. in this paper, we primarily employ three types of obfuscation space to assess the performance of existing mds under adversarial attacks. the study confirms that obfuscation techniques can be used to evaluate the robustness of mds. however, the generation of adversarial samples is not limited to obfuscation techniques alone. for instance, in deepmal, adversarial instructions were inserted into malware, allowing the generated adversarial samples to evade detection by cnn-based mds. such techniques can effectively capture the vulnerability of lb-mds since small modifications to malware can deceive lb-mds. therefore, in future work, we will incorporate such adversarial attack techniques as an essential approach to generate more diverse samples in the embdr dataset and continuously enhance its richness.



of the code, the malicious software would not execute because the checksum would have changed. 2) malware 2 and 3 had a more complex pe format compared to malware 1, with a large.rsrc resource section. existing obfuscation tools such as malfox could not correctly parse this section when processing malware 2 and 3, causing it to not execute correctly.



