rapid business expansion of various companies has placed growing demand on office desktops recent decades. however, improper evaluation of system performance and inexplicit awareness of practical use conditions often hamper the efforts to make a consummate selection among multiple alternatives. from the perspective of end users, to optimize the evaluation process of desktop performance in centralized procurement, we present cpsmark+, a coherent benchmark system that evaluates office desktop performance based on simulated user experience. specifically, cpsmark+ includes scenario-oriented workloads portraying representative user behaviors modeled from the cooperative workflow in modern office routines, and flexibly adapted metrics properly reflecting end-user experience according to different task types. the contrast experiment between state-of-the-art benchmarks demonstrates high sensitivity of cpsmark+ to various hardware components, e.g., cpu, and high repeatability with a coefficient of variation less than 3%. in a practical case study, we also demonstrate the effectiveness of cpsmark+ in simulating user experience of tested computer systems under modern office-oriented scenarios for improving the quality of office desktop performance evaluation in centralized procurement.



sysmark 2018 adopts real-world third-party software as workloads to evaluate overall computer performance and is widely applied in commercial markets. usage scenarios are modeled in the form of subjectively grouped job nature like productivity and creativity, which cannot describe cooperation across tasks in a common workflow. in terms of the workloads, most of them are designed to be cpu-intensive and place little pressure on gpu and storage system, making the evaluation insensitive to graphics and i/o performance that might be cared by end users in daily use. further, system responsiveness and program start-up are isolated and measured by specific applications, thus weakening the realistic reference value of benchmarking results.



researchers and consumers used to compare the performance of diverse computer systems by merely inspecting their hardware specifications. latency and throughput used to be typical metrics that served us well in computer performance evaluation, since only the size and the content of input data could affect the processing speed of applications at that time. for the sake of performance evaluation, better hardware always led to higher throughput and lower latency so that computer architecture was merely an inorganic combination of individual components.



methodology. finally, it is not possible to consummately reflect user experience of computer products with any individual benchmark, because the possible over-specific design will cause the benchmark over-fitting and makes it less applicable for wider use. therefore, the trade-off between pertinence and universality of benchmarks is also pivotal.



researchers have been theoretically exploring the art of building a consummate benchmark[19,20]. kistowski et al. assert that all standardized benchmarks are subject to a group of universal criteria, e.g., relevance, repeatability, fairness, and verifiability, which are proved to be necessary. however, in each domain, the criteria are expected to include additional features specific to individual benchmark, depending on its goal, intended usage scenario or other considerations. the essence of benchmarking office computer performance under daily working scenarios for centralized procurement is to properly evaluate computer systems from a perspective of user experience and describe system performance according to specific purchase demand.



applications and software manipulations should be scenariooriented to reflect real user behaviors. particularly, in centralized procurement, end users can hardly have significant influence on the purchase decision made by authorities, hence the workloads should be closely correlated to behaviors or intended usage that are of interest to end customers in many aspects, e.g., the workload characterization and the input data set.





the execution of an automatic setup program. likewise, each workload runs independently in the form of complete software, the corresponding application is not merged into the mcp and only receives instructions synchronously from the background of tested computer systems. such design reduces the influence of the mcp on system performance and enables a clear view of workload conditions provided by logs.



application(ca) and comprehensive calculation(cc), which can be optionally selected and run independently during the test. each of them has a series of workloads executed in a specific order. in this section, we will introduce design and characterization of the workloads within each module in detail.



for each workload, the input data set is chosen to functionally reproduce the resources or materials that might be used by end users in modern office scenarios. specifically, we select raw digital contents or semi-finished project files that are mainly non-structured data such as texts, images, videos, webpages, and other application-specific files, e.g., 3dsmax scene files.



make a vertical poster. separate target area from the source material and design the layout of layers. in new layers, set titles and captions, add a logo, and adjust its size, coordinates, and transparency. combine all layers, virtualize the background and merge them into a large picture.



second, the perception of user experience is nonlinear and difficult to quantify. in terms of human interaction, humans cannot perceive faster response time beneath a certain threshold, hence further acceleration of the task will not bring better user experience. for example, a frame rate that exceeds the support of a monitor will no longer improve the user experience of a graphics task, while in this case the program execution could be accelerated by a better gpu.



in terms of the workloads in the usage scenarios of document manipulation(winrar excluded) and internet service, basic operating units are numerous and densely distributed with lightweight resource consumption. some intervals of them consist of events irrelevant to the evaluation of user experience e.g., temporary retention of screen display, timer interference, which will have an adverse influence on the effectiveness of workloads if they are included in the metric.



benchmark implementation has a great impact on the test results of the designed metric. there are two primary approaches to automate the execution of workloads, i.e., ui-level and api-level[25,26]. some benchmarks leverage automated scripts like autoit to initiate and navigate applications by simulating mouse clicks or keystrokes. the duration of each task is measured when the completion of the task is detected by application-specific methods. such an approach mimics practical human interaction at ui level, nevertheless, it instead impedes the accurate reflection of user experience for performance evaluation. although the estimation of user experience is somewhat subjective, it should be highly relevant to how well computer systems react to or execute the instructions of real end users, however, which might be distorted by a contradictory combination of simulated user behaviors and computer-based metrics.



we choose independent apis or invoke them from application communication standards, e.g., component object model, to automatically control the execution of each workload. in this case, launching of applications, loading of input files, and basic operating units are implemented through a set of functions, methods, and procedures contained in selected apis or standards. compared to the ui-level implementation, our decision to choose api-level implementation provides some tangible benefits as follows: ations are finished, an md5 check is performed towards the generated output. finally, after a five-second countdown, if there is no user input to interrupt the test, i.e., mouse clicks on the pause button, the mcp will proceed for the next workload until the entire benchmark is completed.



concretely, for each module, we sum the tested metric of each included workload executed on the tested computer system and compare it with the sum of workload metrics tested on the baseline platform. we calculate the ratio value of these two sums and round it to the nearest integer. in this case, a higher score indicates better performance. to benchmarks and do not have built-in functions to precisely measure these metrics, which as well makes it impossible to compare the sensitivity and the repeatability of them at a finer granularity, e.g., the level of workload performance. in addition, sensitivity and repeatability are the universal metrics for comparing different benchmarks, even if they possess diverse construction methodologies and usages.



method, the weight of the ca/cc module is not predefined by domain experts from the bid evaluation committee, instead it is assigned as the average value of the survey results from the real end users of both departments. the weights of the ca/cc module for the tendering batches of 2a and 2b turn out to be 0.71/0.29 and 0.12/0.88, respectively.



place any items related to system performance in the original technical section, i.e., all the items except for the monitor item. the weight of the monitor item and the weights of the commercial and the price sections remain constant. to maintain a total score of 100 points, the benchmark



for each tendering batch, i.e., 1a, 2a, 1b, and 2b, we randomly invited 20 end users from the corresponding group of their department to independently rate the user experience of the desktop computers purchased in this tendering batch. the questionnaires adopted for rating the user experience are similar as csat. for each desktop computer, the total score for each metric of the user experience is the weighted sum over the metric ratings for all the items.



curement, since pricier bids generally tend to deliver better system performance, which will cause a much higher budget. to this end, we also consider the average quotation for the winning bids from each tendering batch, which is 5316/5562 cny and 6465/6948 cny for the tendering batches of 1a/2a and 1b/2b, with an increase of 4.63% and 7.47%, respectively. note that in this paper, charges for other services, e.g., logistics and insurance, are excluded from the average quotation. apparently, the higher average quotation of the winning bids leads to more significant increase of user experience ratings. this result demonstrates that the new bid evaluation method based



by the new bid evaluation method also improves by varying degrees. for example, in terms of heavy workloads, the average ratings for efficiency and smoothness of mysql increase by 22.95% and 26.56%, respectively. the similar trend of user experience improvement is also observed with respect to more lightweight workloads, e.g., power bi,



our work provides a general idea to design computer benchmarks used in other usage scenarios and helps further explore the benefits of introducing benchmark scores in traditional bid evaluation methods for centralized procurement of office desktops. in the future, we will focus on designing parallel workloads that contain more complex interactions and involving other metrics, e.g., battery life or energy efficiency.



