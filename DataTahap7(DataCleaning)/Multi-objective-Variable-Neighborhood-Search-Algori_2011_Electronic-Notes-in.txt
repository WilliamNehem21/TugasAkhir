a multi-objective vns(movns) algorithm proposed in the literature. the performance of the algorithms is tested on a set of medium and larger instances of the problem. the computational results show that the proposed algorithms outperform the original movns algorithm in terms of solution quality. a statistical analysis is conducted in order to analyze the performance of the proposed methods.



the single machine scheduling problem(smsp) has been extensively investigated during the last decades. most of the contributions consider a single optimization criterion, although in practice the decision maker often faces several(usually conflicting) criteria. the main criteria to be considered are the minimization of the maximum completion time(i.e. makespan), the minimization of the total production time or flow time and the minimization of the total tardiness. the use of these objectives is well-justified in practice, as makespan minimization implies



in the literature, the smsp with earliness and tardiness penalties are studied by various authors from a single-objective point of view. most of the works consider distinct or common due dates. lee and choi study the problem considering distinct due dates. they present an optimal algorithm, with polynomial complexity, to determine the optimal completion time for each job in a schedule determined by a genetic algorithm(ga). this optimal algorithm is used because may be interesting anticipate a job, even paying a penalty, if the penalty is shorter than the penalty generated by the tardiness. in distinct due dates are also considered and a hybrid heuristic which combines local search heuristics and ga is used. in, and, the problem is studied considering common due dates. these authors propose different heuristics, such as, tabu search, ga, variable neighborhood search(vns) and recovering beam search.



the most used methods for solving multi-objective combinatorial optimization problems are metaheuristics. metaheuristic methods were originally conceived for single-objective optimization and the success achieved in their application to a very large number of problems has stimulated researchers to extend them to multi-objective combinatorial optimization problems. applications of the vns metaheuristic for multi-objective optimization are scarce. to the best of our knowledge, the first multi-objective vns(movns) algorithm was proposed by geiger. in, the movns was applied to solve the permutation flow shop scheduling problem minimizing different combinations of criteria. the movns of geiger was used to solve other multi-objective problems in and.



we propose two algorithms based on vns metaheuristic to solve the bi-objective smsp. vns is a stochastic local search method that is based on the systematic change of the neighborhood during the search. the proposed algorithms are based on the algorithm developed by geiger. we include an intensification procedure based on constructing non-dominated solutions according to information taken on non-dominated partial solutions rather than evaluating complete solutions generated in the neighborhood of existing solutions. simulation results and comparisons demonstrate the effectiveness, efficiency, and robustness of the proposed algorithms. the remainder of this paper is organized as follows. the multi-objective problem definition is described in section 2. section 3 provides a detailed description of the movns algorithms. results of computational experiments to evaluate the performance of the proposed algorithms are reported in section 4. finally, section point z= f(s) in the objective space. as the relevant optimality criteria are often of conflicting nature, usually there is not a single solution s optimizing all components of f(s) at once. optimality in multi-objective optimization problems is therefore understood in the sense of pareto-optimality, and the resolution of multiobjective optimization problems lies in the identification of all elements belonging to the pareto or efficient set, containing all alternatives s which are not dominated by any other alternative sj. to properly compare two solutions in a multi-objective optimization problem, some definitions are needed. without loss of generality we assume the minimization of the optimality criteria fi,i= 1,..., r.



in this paper we propose an improvement phase, called of intensification, for the movns1 algorithm. from a non-dominated neighbor solution s, new nondominated solutions are constructed by the intensification procedure. this procedure is based on two typical approaches used in multi-objective optimization: scalarizing functions and pareto dominance. the first approach is based on the optimization of different weighted utility functions. to select the best solution, we use the weighted linear utility function fw= w1f1+ w2f2, where the weights w1 and w2 are randomly generated such that w1+ w2= 1. due to the randomness of weights, searching direction can be enriched, and non-dominated solutions with good diversity can be obtained. in the pareto dominance approach, only non-dominated solutions are analyzed.



local search methods usually are based on neighborhood search. these methods begin with a solution s, and generate a neighborhood of this solution. such neighborhood contains similar solutions, obtained by applying simple changes(single moves) on the current solution s.



the movns algorithms star with a base solution s select randomly from the current set of non-dominated solutions(d). the selected solutions are marked as visited and it will be excluded from the selection of the base one. if all members in the set d are marked as visited before reaching the stopping criterion of the algorithm, then all marks will be reset and the selection procedure can start over again.



in this paper we propose two intensification procedures to improve a non-dominated solution selected randomly from set da(set of non-dominated solutions obtained in local search). these procedures are based on a partial enumeration heuristic proposed by. the first intensification procedure, intensification1, is based on the optimization of different weighted utility functions(fw= w1f1+ w2f2). the second intensification procedure, intensification2, is based on the pareto dominance approach.



the three algorithms were coded in c++ and executed on an intel core quad with a 2.4ghz and 2.0 of ram. the algorithms were run with the same stopping criterion(stoppingcriterion) based on an amount of cpu time. this time is giving by 3n seconds(n= number of jobs) and it depends on the size of the considered instance. in this way, we assign more time to larger instances that are obviously more time consuming to solve. stopping criteria based on cpu times are widely used for performance comparison of heuristic algorithms.



the parameter d used in the intensification procedures was tuned experimentally. the movns3 algorithm was run using different values for this parameter. the set of values tested was{2, 4, 6, 8}. the computational tests showed that the movns3 algorithm generates the best results with d= 6. due to lack of space, these results are not presented. the same value of the parameter d was used in the algorithm movns2.



and movns3, respectively. since for the addressed problem the optimal pareto front for each instance is not known, a reference set, constituted by gathering all non-dominated solutions obtained by the three tested algorithms, is used. the reference set(the best known pareto front) is denoted by ref. the performance of an algorithm is then measured in terms of the quality of the solutions obtained by this algorithm with respect to the solutions in ref. in this paper, three measures are used: cardinal measure, distance metric and hypervolume indicator.



in this work was applied the movns algorithm of geiger to solve the single machine scheduling problem with distinct due windows. two criteria are simultaneously minimized, the total earliness/tardiness penalties and the total flow time. we proposed two new versions of the movns algorithm, named movns2 and movns3. our algorithms use an intensification procedure based on a partial enumeration heuristic. it should be noted that by using the intensification procedure has improved the solution quality significantly.



