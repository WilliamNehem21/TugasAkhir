after having introduced the motivation and context, the remainder of this paper is divided into the following sections. section 2 introduces ontologies and domain knowledge represen- tations. section 3 reviews the state of the art in ontology-based database information retrieval. section 4 discusses our findings in relation to ontology-based information retrieval. section 5 reviews the state of the art database schema to ontology schema transformation and ontology-to-database mapping approaches in terms of loss of data and semantics, structural mapping and domain knowledge applicability. section 6 provides a discussion and highlights a possibility of combining database-to-ontology transformation and ontology-to-database mappings approaches for relational query formulation. finally, section 7 outlines the future challenges and possible research directions towards using ontologies for information retrieval from information and big data management systems.



database information retrieval is the search for information in databases. the need for effective methods to automate information retrieval has grown in importance because of the significant increase in the amount of both structured and unstructured infor- mation embodied in information sources. over the years, many visual information retrieval approaches came into existence which aim to reduce the end users effort while interacting with data- bases. these approaches intend to extract information from data- bases using visual tools. such approaches include form-based [17], query by example (qbe) [18] or query by template (qbt) [19] etc. these approaches work for basic relational database queries, primarily because tabular structure of the database fits well with the tabular skeletons used in query interfaces. however, such approaches do not help in semantic data retrieval nor do they provide any query formulation support to generate complex queries.



to overcome the shortcomings identified above, further imple- mentation improvements were advocated. one example is quick (universal interface with conceptual knowledge) [18] that focuses on automating query formulation by exploiting er conceptual schema design knowledge. unfortunately, in the real world the er model has been used primarily for database design and they often do not store domain knowledge. therefore, the er based query formulation approaches cannot provide a reliable method to depend on its comprehensiveness in expressing low-level query constraints. more recently, several ontology languages with prop- erly specified semantics have been developed. several ontology- based approaches have been reported in the literature that can provide intelligent query formulation services for relational data- bases. such approaches are reviewed in the following sections.



ontoqf [25], visage [26], smartch [27], semantic-based [28] and many others). in most of these ontology based visual query formu- lation systems, the search queries are performed using an ontology browser that visualises the ontology as a tree. the actual search is done via concept selection through a visual tree or through key- words annotated by the visual ontology concepts.



the system presented in [32] provides interactive database query generation through non-directed graphs supporting natural languages. the ontology language used in this system is based on the rdf structure. in order to construct queries, query terms are suggested to a user in a natural language from a predefined vocab- ulary. in a report of the eu translational research and patient safety in europe (transform) [33], a query and data extraction workbench has been presented. the transform query formula- tion workbench software tool provides interfaces to author, store and deploy queries of clinical data in order to identify subjects for clinical studies. moreover, transform query formulation workbench enables users to define criteria groups flexibly, whilst catering for complex queries with combinations of operators.



the work carried out in the european tones project [44] pro- vides relational database access through ontologies. in this approach, data access is enabled by defining links between ontol- ogy concepts and relational data. this ontology-to-database map- ping mechanism enables a designer to link a data source to an owl-lite ontology. while defining mappings, the designer needs to take into account that an ad-hoc identifier should denote each concept instance so that instance values cannot be confused with data items in the data source. queries are formulated by consulting ontology-to-database mapping rules, but this rule derivation pro- cess is carried out manually by ontology and database experts [44]. another ontology-based information linking approach with similar techniques, but for query refinement purposes, is presented in [45,46]. this approach stores concepts from a data source as part of the ontology and links actual data with ontology concepts. the query answers are improved by using the semantic knowledge expressed in an ontology. database queries are transformed by using is-a, part-of and sync-of relationships between ontology concepts.



query refinement approaches include both query rewriting and expansion operations. using these approaches end-users are pro- vided interaction with candidate expansion terms based on con- cept hierarchies which stem naturally from the developed domain ontologies and associated ontological schema. this section discusses these ontology-based query refinement techniques that have been introduced over the past few years such as thesaurus ontology navigation [49,50], ambiguity-driven [51,52], information-need driven [53] etc.



query expansion implementations (e.g. [49,50]) use thesaurus ontology navigation for query expansion. these approaches use the wordnet ontology ( for query expansion and adapt basic keyword search mechanisms using key- words, which are identified in the ontology for a matching concept. another approach based on this thesaurus ontology navigation approach is the knowledge sifter [29]. knowledge sifter is a scale- able agent-based system that supports access to heterogeneous information sources and relies on the agents technology for query refinement. in this approach, a user query formulation agent sup- ports user query specification to access multiple ontologies using an integrated conceptual model expressed in the owl. this user query formulation agent also consults the ontology agent to refine or to generalise a query based on the semantics provided by the ontology.



(2) information linking approaches; and (3) query refinement approaches. ontology based visual or interactive database query formulation systems use visual representations to express the search criteria. most of these systems are based on the rdf struc- ture and support the specialisation or generalisation of the base or filler ontology concepts in order to build database specific queries interactively. however, it may be concluded that much of this work has been (e.g., [57,21,29] etc.) towards interactive query genera- tion through nondirected graphs. other approaches (e.g.,



[44,46,58,48] etc.) store all data from a data-source as part of the ontology (as ontology instances) or link it directly to ontology con- cepts. but, often it is not practically feasible to store all data as part of a certain domain ontology, especially for systems with large amounts of data. data that are stored as part of the ontology often need to be loaded in memory to perform the select query opera- tions. moreover, this may become both a complex and time con- suming activity to directly link all database instances to associated ontological concepts. furthermore, it appears that a lim- ited number of query formulation approaches reviewed in the lit- erature review build on the assertion capabilities of ontologies. thus, it can clearly be deduced that these approaches need to be extended to include further details, such as what needs to be included in the ontology from database along with the domain knowledge needed to initiate the query formulation process, to enable ontology-based query formulation based on the ontology semantic and assertion capabilities.



mapping situations arising from low similarity between ontology and database models [62]. the mapping definitions generated by r2o are not intended to be generated manually, and therefore they cannot be read or updated without using its specific gui. such an ontology-to-database mapping approach is not sufficient to be used for ontology creation for query formulation.



in [77] a three phased approach to extract ontology from a rela- tional database is presented. in the first phase, ontology tbox is written using relational schema by generating classes from both referenced and referencing columns. here, the referencing column is defined as a subclass of the one related to the referenced column. in the second phase, abox is written using db values, and in the final phase, reasoning is performed to extend the ontology.



umn is represented as a datatype property accompanied by a max- imum cardinality of one, unless it is a foreign key. the column con- straint unique is represented as an inverse functional property. similarly, not null is represented as a minimum cardinality of one. a primary key is represented as both an inverse functional property and a minimum cardinality of one. finally, a row is repre- sented as an ontology instance.



ontologies allow an interaction between data held in different formats and can potentially be used as the basis to guide and val- idate models of particular domains. for example, a considerable amount of work has been reported which aims to transform ontologies to conceptual data models (expressed, for example, in uml or in er) in [98,99,72]. this section reviews the key relevant and mature ontology-to-database mapping approaches.



the transformation from a given domain ontology to a correspond- ing conceptual schema. another approach to building ontologies from relational databases using reverse engineering is presented in [72]. unlike rdb2ont [85] and rdb2onto [71], this approach does not directly transform a relational database into an ontology; rather it uses an entity relationship model to reverse engineer a domain ontology. in this approach, owl-dl is used as an ontology representation language and er for data modelling. the graph transformation language, as in [100], is used for node and edge addition into an er model. the node addition operation is used to introduce new objects into the er model and the edge addition operation to build relationships between er objects.



most of the existing approaches are based on using single domain ontology for generating relational database queries. using such approach, database domain metadata and semantics can be transformed into a domain ontology schema with domain knowl- edge added as concept restrictions. it is possible to adapt the same approach for multiple databases that are geographically dis- tributed, but conceptually related with respect to a common sub- ject area; for example, a database that manages patients treatment records and another that manages patients family history, where the domain-subject is patients. in such cases, an integrated ontology needs to be developed to capture the common as well as the differ- ent domain metadata and related semantics of the underlying dis- tributed databases. moreover, the existing query formulation frameworks should be extended to develop an approach to inte- grate related domain knowledge in order to obtain a unified domain ontology that captures all of the domain concepts.



moreover, in the past the focus has been on visual or interactive query formulation, information linking and query refinement approaches. most of these ontology based visual or interactive database query formulation systems either use visual representa- tions to express the search criteria or they are based on the ontol- ogy structure and support the specialisation or generalisation of ontology concepts in order to build database specific queries inter- actively. other approaches store all data from a data-source as part of the ontology or link it to ontology concepts. however, it appeared that, with the exception of few approaches, there is still a lack of knowledge-driven query formulation approaches that build on the assertion capabilities of owl-dl such as owl-2. moreover, there is a need to extend the existence approaches to answer the questions like: what needs to be included in the ontology from database along with the domain knowledge needed to initiate the query formulation process, to enable ontology-based query formula- tion based on the owl-dl semantic and assertion capabilities. plus how such domain knowledge can be automatically evolved and extended within the existing domain ontology? furthermore, this work may be extended to further domains; and in particular, for enhancing the searching capabilities of massively loaded informa- tion management systems such as national statistical survey portals and context-aware environments that mobile devices are part of.



as per the literature review presented in this paper, it also appeared that currently there is very limited tool support available for the direct specification and manipulation of ontology domain knowledge for query formulation. in most of the presented sys- tems; domain experts, with the help of knowledge engineers express domain knowledge in terms of ontology statements that include the definition of property constraints for concepts and individuals. in this way, whenever related knowledge about real world concepts change or when new knowledge is added into the domain ontology, the related ontology file is reloaded into the ontology server. in order to enable domain experts to directly specify and manipulate domain knowledge, it would be an inter- esting future work to empower the ontology knowledge compo- nent of such systems with tool support for the direct (on the fly) specification and manipulation of related domain knowledge in the ontology server. however, leaving ontology knowledge specifi- cations completely for domain experts, who usually do not have description logic experience, may end-up in defining inconsistent domain knowledge specifications from real world knowledge, and hence this needs to be controlled.



