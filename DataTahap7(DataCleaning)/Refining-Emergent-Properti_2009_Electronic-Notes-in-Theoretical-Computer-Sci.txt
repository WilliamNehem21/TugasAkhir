the ongoing decrease in size and cost of microprocessors and storage devices is leading to the development of increasingly distributed and decentralised systems. components of such systems have limited access or often no access to global information and must operate on local information gained via interaction with neighbouring components. often these systems exhibit emergent behaviour: global behaviour that is not determined by the behaviours of the constituents when considered in isolation.



reluctance to adopt formal methods when engineering such systems has arisen partly from their similarities with complex systems. the research on complex systems, however, has focussed on the modelling of existing systems(both natural and man-made, e.g., the internet), and the prediction of their global properties. when we model an existing system, unknown discontinuities in behaviour may not be modelled, and hence proof techniques may not be successful in uncovering emergent behaviour. furthermore, it is claimed that some complex systems exhibit strong emergence(e.g., the mind) and therefore, by definition, proofs of how their behaviour arises cannot be constructed.



many different patterns can be formed in the game of life including dynamic patterns such as the glider which translates itself across the grid. polack and stepney argue that an abstract specification of the movement of a glider cannot be refined to the rules of the game of life shown above. their justification is that when an implementation exhibits emergence, the specification and implementation(and even the languages in which they are expressed) must be too disparate.



to provide a simple illustration of our approach, we begin in section 2 with the specification and refinement of dynamic patterns, including a glider, in a onedimensional game of life. to show that in making that simplification we have not inadvertently brought together the two levels of abstraction, in section 3 we provide a specification and refinement of the glider in the full two-dimensional game of life. the approach is the same, only the complexity of the detail is increased. we conclude with a discussion of related work relating to the question of refining emergent properties in section 4.



we use time t to specify desired behaviour, but use cells updated by transition rules(i.e., cellular automata) for implementations. refinement reasoning leads us from one to the other. the following notation suffices to describe the simple temporal behaviours we are concerned with here.



how does this extend to other systems with emergent behaviour? gruner has shown that generalised cellular automata(gca) where cells may have differing numbers of neighbours, and more states than just on and off, can be used to model mobile agent systems. while our current approach could be extended for gca, we could also look to the wealth of experience, and formal techniques, for systolic algorithms. a systolic algorithm relies on steadily-moving data being at the right place at the right time. hence, such techniques could inform an approach to the temporal behaviour of gca.



