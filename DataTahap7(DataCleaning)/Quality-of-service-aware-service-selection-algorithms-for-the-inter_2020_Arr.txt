bouzary et al. [25] presented a comprehensive survey of service se- lection and composition in cloud manufacturing. they classified six categories comprising objective functions, selection criteria, algorithm types, correlation awareness, mapping approaches, and dynamic composition. they did not consider the service selection problem in the iot environment or ensuring qos based on the iot architecture. they only investigated some of the traditional qos parameters comprising cost, response time, reliability, and availability. in addition, they did not discuss any of the evaluation metrics used to evaluate the performance of the proposed state-of-the-art approaches.



hamzei et al. [27] conducted a systematic survey of sc-aware methods based on qos factors proposed in the iot environment. they divided the methods into four main categories comprising framework-based, model-based, service-oriented architecture (soa), representational state transfer (rest)ful-based, and heuristic-based ap- proaches. they discussed the benefits and drawbacks of the state-of-the-art approaches and defined six qos factors to examine for the sc approaches, i.e., scalability, execution time, cost, reliability, avail- ability, and response time, but they did not consider the qos factors based on the iot architecture. in addition, they did not define the methods that can be used to design and evaluate service selection algo- rithms (ssas).



asghari et al. [29] conducted a systematic review of sc approaches in the iot based on seven main categories: sc approaches, platforms selected, tools employed, measurement environments used to evaluate sc, qos factors, current algorithms supported by the sc, and future challenges of sc. in particular, they considered the functional behavior of sc and non-functional aspects of qos in the iot in sc approaches. they investigated most of the qos factors in the iot system but without referring to the iot architecture. the benefits and drawbacks of the state-of-the-art approaches were discussed and some weaknesses were identified. a useful classification was provided for service selection in iot but the methods that must be used to design ssas were not discussed. in addition, they did not provide a complete review of the qos factors, such as qos in the network layer, and they only discussed one qos factor in the sensor layer (energy). however, they discussed the languages and verification tools employed to measure the performance of the existing approaches. detailed descriptions were not provided of the methods used



aoudia et al. [30] reviewed the existing sc approaches for iot based on three groups of criteria. first, they considered the dynamic compo- sition and adaptation of the proposed solutions, including the optimi- zation method used, its description, the deployment areas, the techniques used, and whether they were applied online or offline. second, they assessed the protection and security protocols, distribution and decen- tralization, automatic identification and resolution of failure and inter- action problems, and independence and extensibility. third, they considered the results obtained performance of the service representa- tions, standards and protocols used, models employed, and the optimi- zation of the composition. they investigated the essential points of the selection problem but did not explain them in detail, such as declaring the dynamic composition without defining other composition types. moreover, they presented the techniques employed but without discus- sing the differences between them. in addition, they did not discuss the different factors that affect traditional qos or qos in the iot environment.



dongre et al. [31] investigated the qos parameters applied for service composition and selection by considering nine qos parameters in the application layer: execution time, response time, availability, reliability, throughput, cost, price, reputation, and latency. however, they did not discuss technique or methods used to solve the selection problem.



the remainder of this paper is organized as follows. in section 2, we discuss the background and present necessary definitions. the proposed state-of-the-art classification method is presented in section 3. in section 4, we discuss solutions for designing ssa and analyze the design solu- tions. in section 5, we explain the solutions for implementing ssa and analyze the proposed solutions. in section 6, we consider the perfor- mance evaluations proposed for ssa solutions. the results and future research directions are presented in section 7. we give our conclusions in section 8. in section 9, we outline research limitations and provide recommendations.



dynamic service selection: the services are selected during the run- time. thus, the service components can be determined and replaced during the runtime, thereby allowing the consideration of changes that can occur in the in-service components and better alternative services may be offered for the composite services [33,36]. dynamic service se- lection is considered a more challenging task than static service selection because critical issues must be addressed, such as time limits, service correctness, and transactional support.



the classification proposed for the qos architecture by li et al. [40] meets the needs of the iot environment and allows the qos to be opti- mized in different iot layers. the architecture considers three iot layers comprising the sensor layer, network layer, and application layer. the traditional qos attributes are integrated with other essential character- istics of the iot architecture (e.g., cost of network deployment, infor- mation accuracy, energy consumption, and coverage). the traditional qos classification is not applicable to the heterogeneity and complexity of the iot architecture.



simulation is the most widely used method. computer simulation in- volves mathematical modeling on a computer using simulation software in order to predict the behavior of a physical system or the real world. computer simulation is a useful tool for mathematically modeling many natural systems, e.g., in computational physics, chemistry, manufacturing, biology, and human systems such as psychology, eco- nomics, health care, and engineering.



the other method employed involves using a prototype. a prototype is an early stage model or a sample of a specific product built to test processes and concepts. in general, a prototype is designed to evaluate a new design of a product and to enhance precision for system users. a prototype is used in various contexts, including semantics, electronics, design, and software programming [46]. the difference between a simulation and prototype [47] is that a simulation is an analytical process representing a real working system, whereas a prototype is a real physical object that provides specifications for the actual system.



second, we consider two basic concepts related to the implementa- tion of ssas. based on the qos layer, it is necessary to define the layer where the ssa will be applied in the qos architecture [40]. moreover, the algorithm type can be divided into heuristics, meta-heuristics, hyper-heuristics, and other algorithms (non-heuristic algorithms).



many methods have been proposed to solve the qos-aware selection problem in the iot environment. we identified these solutions based on the three qos layers introduced for the iot architecture by li. et al. [40], i.e., the sensor layer, network layer, and application layer. for each layer, we classified the implementations of the methods according to four optimization algorithms comprising heuristics, meta-heuristics, hyper-- heuristics, and non-heuristic algorithms. moreover, we considered the traditional qos factors optimized in each proposed solution.



alsaryrah et al. [18] aimed to select an appropriate set of smart ob- jects by considering the traditional qos and the energy consumed to form a service. they divided their objectives into minimizing the traditional qos (execution time, network latency, and cost) and reducing the energy consumption by the combined service, i.e., by maximizing the battery lifetime for the sensors. they proposed a bi-objective shortest path optimization (bi-spo) algorithm with four pruning techniques comprising pruning by the cycle, nadir point, efficient set, and label.



parameters obtained from sensors on factory floors. they aimed to reduce and balance the energy consumption in the iot by proposing a heuristic and opportunistic link selection algorithm (hola) to maintain the energy efficiency in the iot sensors by opportunistically transporting the iot sensor data to smart devices. these intelligent devices had mul- tiple radio links (3g/4g lte, wi-fi, and bluetooth) to transmit the received data to the cloud by using hola to select the best radio link based on the quality preserved by the services level agreements and the energy cost of the relationship.



wsn-based iot network into a small network, where each was called a cluster head. by using a meta-heuristic algorithm to optimize the network communication, the clustering method could divide the wsn into a small, reliable, and manageable network with efficient data transmission. the proposed algorithm used five parameters comprising the distance, energy, delay, network load, and temperature of the iot devices. to efficiently select the cluster heads, a novel method was proposed by combining the gravitational search algorithm (gsa) with the artificial bee colony (abc) algorithm.



abinaya et al. [16] also aimed to minimize the energy, time, and loss of packets during the transfer of data among nodes when selecting and combining services. they aimed to increase the energy efficiency, time utilization, and throughput without any loss of data or reduction in the packet delivery ratio. they proposed a meta-heuristic algorithm (aco) to find the shortest path between the nodes using the network routing protocol approach. the algorithm clustered the data nodes before then transferring data between the nodes with low power consumption.



khan et al. [61] proposed a qos-aware secured communication approach for iot-based networks called qos-iot. the sybil attack detection mechanism was used for identifying sybil nodes during multi-hop communication. to ensure the fair and efficient utilization of the available bandwidth, an optimal contention window (cw) was selected for qos provisioning. the optimal cw size was selected by using the binary exponential back-off mechanism. the performance of qos-iot was evaluated based on measurements of sybil attack detection, fairness, throughput, and buffer utilization.



reducing the search space for service discovery. the latest subjective assessment obtained from user feedback concerning the user context similarity was used to estimate the qos in a similar environment. a subjective evaluation was conducted by calculating four factors: privacy, reliability, availability, and response time. three objective attributes comprising the availability, response time, and calculation speed were determined by obtaining a score for each service. the service with the highest score was selected.



gao et al. [51] conducted global optimization for event scs by using a meta-heuristic method based on ga but without the need to consider all possible combinations. the non-functional attributes were represented by qos properties for the latency, price, energy consumption, bandwidth consumption, availability, completeness, accuracy, and security.



anas et al. [50] aimed to simulate human thinking when making a decision about multiple choices and using data collected from iot sen- sors. they considered an example of a human making a decision while driving when faced with two paths that lead to the same place but with different trade-offs in terms of the time, distance, or cost. their frame- work collected data to help systems to select their future path. the main problem was how to capture and use human heuristic information. the final solution reduced the total time and obtained more accurate results. they used the heuristic-iot framework for enhancing heuristic search algorithms and collecting data from iot sensors. they implemented their framework with a ga using data regarding the habits and behavior of drivers collected from sensors deployed in taxis to solve the travelling salesman problem (tsp) with hidden edge costs. the proposed frame- work used heuristic information to generate smarter initial solutions for the ga to solve the tsp instead of generating it randomly.



on the cloud manufacturing side, huang et al. [5] focused on solving the mops for cloud sc optimal selection (cscos) while considering non-functional qos factors. they determined four parameters comprising the cost, execution time, energy consumption, and reliability. non-functional attributes were considered for three types of cloud ser- vices: manufacturing software, hardware, and human resource services. they introduced a new chaos control optimal algorithm (ccoa) to solve the cscos problem in large-scale solution spaces.



abu-safe et al. [62] proposed a service selection model that ranked services based on end user feedback and the reputation value. the likert scale was employed as a user-friendly method for acquiring feedback from end users. an improved-pso was used to select the optimal service from ranked services. two quality groups used to calculate the qos factors comprised the business quality group (bqg), i.e., reputation and execution price, and the system quality group (sqg), i.e., reliability, availability, and response time.



jatoth et al. [60] introduced a meta-heuristic model using an adaptive genotype evolution-based ga (agega). they balanced the qos param- eters and connectivity constraints to perform sc in a cloud environment. the discrete uniform rank distribution (durd) and discrete uniform service rank distribution (dusrd) were proposed to determine the ser- vice fitness and sc fitness, respectively, thereby allowing services to be pruned from the non-optimal solutions and reduce the search space. the specific qos parameters employed were not defined. however, they used a synthetic data set with qos parameters such as accessibility, cost, availability, throughput, response time, security, integrity, and reliability.



yuan et al. [56] proposed a dynamic approach by used a fuzzy logic technique and cultural ga to adapt the global qos constraints. the global qos constraints were decomposed into near-optimal local qos con- straints, before independently selecting a service component for each abstract service. they aimed to satisfy five qos factors comprising the price, response time, availability, throughput, and successful execution rate.



hosseinzadeh et al. [57] combined a machine learning method with a meta-heuristic algorithm in a hybrid ann-pso algorithm. they aimed to improve the execution time and reachability rate for a service selection model in cloud-edge computing. a labeled transition system was pro- posed based on a verification approach to check the correctness of the proposed model. three qos factors were considered comprising the response time, availability, and prices.



location and geographic location, and neural collaborative filtering (ncf) is applied as a neural network model to learn the in-depth latent features. ncf utilizes local features such as similar users or similar ser- vices with historical qos values and global elements comprising user latent vectors and latent service vectors. ncf then combines the contextual information with the historical qos values to perform both the prediction and selection processes.



jatoth et al. [60] also aggregated the application layer and network layer with a meta-heuristic model using agega, where they balanced the qos parameters and connectivity constraints to perform sc in a cloud environment. durd and dusrd were applied to determine the service fitness and the sc fitness, respectively, thereby allowing services to be pruned from the non-optimal solutions to reduce the search space. however, they did not define the specific qos parameters used in their study, although they described the use of a synthetic data set containing qos parameters, such as accessibility, cost, availability, throughput, response time, security, integrity, and reliability.



singh et al. [63] introduced a framework based on multi-criteria decision making for directing the selection process. the framework aggregated the sensor, network, and application layers, and they com- bined two multi-criteria decision making methods comprising the ana- lytic hierarchy process (ahp) and topsis. ahp was used to calculate the weights for the qos criteria and topsis ranked the service providers. they describe a qos parameter based on three iot components, i.e., things, communication entity, and computing entity. nine qos parame- ters were considered: operating temperature range, resolution, accuracy, delay, jitter, pricing, availability, throughput, and response time.



most previous studies used simulations to evaluate the performance of their proposed algorithms and they conducted comparisons with other ssas in the same environment. in addition, prototypes were constructed in other studies to evaluate the performance of their proposed algo- rithms. in some cases, simulations and prototype were combined in the evaluations. in the following, we discuss the three methods used to evaluate the state-of-the-art algorithms.



liu et al. [11] developed cea by integrating ga and pso. they conducted simulations and generated a data set at different scales based on real scenarios. they showed that cea was a highly efficient search approach with greater stability and more rapid convergence compared with canonical pso (cpso) and the improved discrete immune algorithm based on cpso (idipso). they recommended extending the experiments to greater scales.



reddy et al. [17] assessed the performance of the gsa and abc al- gorithm based on the trends in the network sustainability of live iot nodes in the network and by evaluating its convergence compared with pso, ga, abc, and gso. the results demonstrated that their approach performed better than the other methods at cluster head selection for iot devices.



shukla et al. [55] presented cbssms to link iot services with appropriate sensors. they conducted comparisons with existing collo- cation distance algorithms based on the random mapping of services on any iot device, where they tested linear, random, and star fbp networks. the results showed that the cbssms algorithm reduced the latency and energy consumption between devices compared with the collocation distance algorithms [20].



elhosenya et al. [22] conducted a comparative study based on the execution time, system efficiency, and data processing speed. they evaluated the effectiveness of their model against ga, pso, and ppso. the results showed that the proposed model improved the total imple- mentation time by 50%. moreover, the efficiency of the system at real-time data recovery improved significantly by 5.2%.



lin et al. evaluated their moea/d approach based on a sensor se- lection problem [39]. they showed that increasing the problem size led to an increase in the energy consumption, energy balancing, energy harvesting services, and pollution level, but it did not affect the qos. they generated their data set.



li et al. [9] simulated their pso method and showed that it was more efficient than using gas. pso optimized different fitness parameters and maximized the availability or reliability while maintaining a low cost and response time. they considered a real-world scenario involving the transport of furniture among countries by combining five web services related to shipping cargo services. they applied their method to a pre- viously reported data set (mao data set) of qos values. the feasibility of applying pso was confirmed by implementing the simulation program in



yuan et al. [56] evaluated the performance of a fuzzy logic technique and cultural ga by comparing it with a qos constraints decomposition (qcd)approach based on cultural ga and an integer programming (ip)-based approach. the experimental results showed that using the fuzzy logic technique and cultural ga was appropriate in terms of the adaptability and scalability to the environment, as well as satisfying the user preferences and increasing the number of candidate services. they used the quality web service (qws) data set containing 2508 real web services with 10 qos attributes factors [64]. also they randomly gener- ated other data set according to qws (rqws) using the eclipse pro- gramming tool. they recommended increasing the number of fuzzy sets and formulating more appropriate fuzzy rules, before applying their approach in a distributed environment where a group of distributed qos registries maintain the qos values.



the hybrid ann-pso algorithm obtained better fitness values compared with pso, ga, and psoga [57]. they evaluated their method based on simulations using the c# language as an integrated develop- ment environment (ide) and the pat model checker was employed to prove the correctness of the proposed algorithm. they employed qws data set containing 2500 web services. they recommended using deep learning methods to avoid the space explosion problem in the sc model. satisfactory experiments were conducted based on real-world ws- dream data sets by gao et al. [58]. the prediction performance was evaluated using the root mean squared error and mean absolute error. the experimental results verified the effectiveness of the proposed ncf and context-aware ncf (cncf) frameworks compared with well-known qos prediction methods comprising user-based pcc (upcc), item-based pcc (ipcc), web service recommender (wsrec), and location-based factorization machine (lbfm). they recommended implementing work-based models in the qos prediction task, such as a recurrent neural network and convolutional neural network, and studying the time factor



sun et al. [6] evaluated three heuristic algorithms (aco, ga, and pso) by building prototypes to calculate the fitness, minimum, and dif- ference in the residual energy for smart devices. the results showed that pso performed better than ga and aco at the optimization problem.



methods based on ga, i.e., ga, orthogonal ga (oga), adaptive genetic programming (agp), and transactional ga (tga). the experimental results showed that agega obtained better fitness values within a lower execution time. they used qws as the data set of qos parameters and randomly generated some of the qos parameters and their corresponding values. they recommended considering multiple service connectivity constraints and multiple qos parameters in future research, as well as developing an efficient approach for various parallel data processing platforms.



dhondge et al. [7] validated hola based on simulation studies and designed a hola iot sensor prototype with adriano. in practical ex- periments, they measured the energy consumption of the hola iot sensors in different operational scenarios and communication settings. in particular, they compared the energy consumption of hola and the vanilla system, and showed that hola could reduce the energy consumed in iot sensors by reducing the internal communication in the iot device. the time consumption with hola was better compared with the vanilla system. they recommended detecting the maximal energy efficiency that satisfies the sla agreement and evaluating hola using different smartphone densities in the future.



in the future, we recommend reviewing more ssa solutions by increasing the research scope. in this review, we focused mainly on heuristic, meta-heuristic, and hyper-heuristic algorithms, and thus we recommend studying other types of optimization algorithms. in addition, we recommend the construction of an appropriate qos data set for the iot environment.



