suffix arrays were proposed in order to solve string processing problems using less space than st s. however, the information of suffix arrays correspond only to leaves of st s in lexicographical order. nevertheless, suffix arrays can be enhanced with longest common prefix information(lcp), which implicitly encodes the topology of the associated st. hence, a suffix array can replace entirely a st if provided with lcp information and navigational operations over it.



in order to evaluate the proposed implementation, experiments were performed with two indices. the first one is based on a uncompressed suffix array provided by and uncompressed lcp information calculated with the method from. the second index is a cst proposed by the succinct data structures group(suds) from the university of helsinki, which is based on.



the paper is organized as follows. all necessary basic concepts are given in section 2; compressed suffix arrays and lcp are presented in section 3 and then, in section 4, compressed suffix trees are introduzed. then, in sections 5 and 6 related work and experimental results are presented, before concluding and presenting future work in section 7.



still in the ambit of suffix arrays, kasai et. al proposed a o(n) method to compute the lcp information. abouelhoda et.al showed many applications that have arisen from the suffix array data structure and lcp information. the same authors, in another work, showed that every problem solvable with the help of a suffix tree is also solvable by replacing suffix trees by enhanced suffix arrays with the same time complexity. later, puglisi et. al introduced a taxonomy for the suffix arrays construction algorithms algorithms.



despite of being an important resource, the building time is not crucial for applications for which the index needs to be built only once. a typical example is the problem of mapping fragments of dna to a reference genome. in this application, the index for the genome needs to be built only once in order to map several billions of fragments.



