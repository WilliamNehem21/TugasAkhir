the rest of the paper is structured as follows. section 2 contains a brief description of cls and stochastic cls. section 3 gives an overview of maude and real-time maude and describe the translation of stochastic cls into the latter. section 4 shows the analysis of some examples and of a model of the lactose operon regulation in e.coli. section 5 concludes the paper with an overview of related work.



stochastic cls is the extension of cls with stochastic rates associated with the application of rewrite rules. more precisely, rewrite rules in stochastic cls are enriched with a rate constant that is multiplied, in the semantics, by the number of different occurrences of instantiations of the left hand side of the rule in the term to which the rule is applied. this corresponds to what usually done in chemical kinetics, where the rate of occurrence of a chemical reaction is computed by multiplying the kinetic constant of the reaction by the number of possible combinations of reactants. rather than giving the(quite complex) definition of the semantics of stochastic cls, we will directly show, in the following, how we compute the rate of application of a stochastic cls rule in a maude specification.



in module scls we define data structures needed by the simulation algorithm. the term that models the state of the system is incorporated within class clsterm. we also define another class, admin, that records all variables in the algorithm. we define the scls module as follows:



the operators lotka and adm represent objects instantiated from classes clsterm and admin. the operator reactionnum represents the number of reaction channels m. the occ function is used to define the propensity of each reaction. the rules initialise1 to initialise100 perform two things: calculating the cumulative propensity acum using function sum(which is defined in module scls), and initialising the random number generator with 100 distinct numbers. it models nondeterminism in the system by allowing the simulation to run in 100 different behaviours.



the first way to analyse reactions using our approach is to run a simulation of their maude model. maude has no features to visualise the result of a simulation. therefore we try to plot charts representing simulation results, and compare our chart to similar charts from previous works(see).



the above simulation shows that within 1/10 time units(e.g. after 0.0999 time units) the lotka reactions will stop because the next tick rule execution will increase time so that it is greater than the time limit(1/10 time units). using attribute a, we can calculate the number of molecules of each reactant that are present at the end of the simulation.



by using the search command, we can check all possible behaviours of the system. we have defined 100 rules to initialise the random number generator with 100 distinct random numbers. this allows maude engine to explore a state space with 100 different behaviours. although this approach cannot cover all possible behaviours of the system, it yields a significant sample of behaviours. the following example shows the use of a search command initialised with 4 molecules of s1 and 4 molecules of s2, and limited to the first 10 states where no more occurrences of s2 are available in the system.



another interesting search command is the find earliest command, which searches for the earliest time when a given state is reached. the following example shows that the earliest time s2 vanishes from a system initialised with 4 molecules of s1 and 4 molecules of s2 occurs within 3/50 time units(e.g. after 0.0563 time units).



we give two examples of model-checking for lotka reactions with 4 molecules of s1 and 4 molecules of s2 as initial states. the first example shows that s2 will eventually vanish from the system in 1 time unit. the second example shows that the amount of s2 will become eventually less than the amount of s1 in the system in 1 time unit.



we translate the stochastic cls model into maude and analyse it. the simulation runs quite fast and produces similar behaviour as the result in the work by barbuti, carvagna, maggiolo-schettini, milazzo and pardini. our intention in this paper is to show that we can also perform not only chart-based analysis, but can also perform analysis on some logical properties of the system. we show that by analysing two properties of this case study.



the first property is related with the amount of enzymes(beta galactosidase and lactose permease) in the absence of lactose in the environment. the amount of such enzymes(in number of molecules) should always below some limit. here we show that our model satisfies this property, with 20 as the limit. we use the maude search command to check whether there is a state where the number of beta galactosidase or lactose permease is greater than 20. the maude engine shows no solution as the answer, which means that there is no such state.



the second property is related with the amount of of enzymes beta galactosidase and lactose permease in the presence of lactose. we want to show that with the presence of lactose, the number of such enzymes will eventually be greater than 20. now we use the maude model check command to verify this property. the result shows that this property holds in our system.



we have proposed an approach to study stochastic cls specifications of biological systems by making use of real-time maude. our approach can be used to analyse a biological system not only by observing the chart representing the simulation result, but also by means of logical formulae. we show the applicability of our approach by verifying two properties of the lac operon model.



for our future work, we are interested to explore more about probabilistic model checking. in this paper we analyse properties that can only have boolean values. it will be interesting to extend the language to support answering queries with numeric values, such as probability of an event occur in a period of time. currently only queries related with time can be answered, for instance finding the earliest time an event occurs.



muffy calder, stephen gilmore, and jane hillston. modelling the influence of rkip on the erk signalling pathway using the stochastic process algebra pepa. in anna ingolfsdottir and hanne riis nielson, editors, proceedings of the bioconcur workshop on concurrent models in molecular biology, august 2004.



