this study presents a performance evaluation of the deployment of partitioned workflows over hybrid clouds taking into account the cost of transfer data delay. this paper extends previous work on the cost of security in cloud computing based on the multi-level security model. this research aims to provide performance predictions of different deployment options in public and private clouds in terms of the computation and communication costs. the markovian process algebra pepa is used to evaluate the models behaviour under different scenarios.



this paper is structured as follows. in section 2, some background and related work have been reviewed. then, we describe briefly the multi-level security model in section 3. after that, the communications cost pepa model is presented in section 4. this is followed by the illustration and discussion of the experimental results in section 5. the paper is concluded in section 6 and outline some further works.



despite the important features that are associated with the use of federated clouds, for example significantly decreasing the cost of computational support, security breaches can arise through the flow of data between private and public clouds. a methodology for making the access control matrices dynamic is presented by, where workflows are modelled using petri net and security policies for read and write access have been taken into consideration. furthermore, in the bell-lapadula security conditions, i.e. no read up and no write down, are used to assign different security levels for a formal model specified by means of petri nets. our approach has some similarity to these approaches[9,10] in using a multi-level security model and formal modelling and analysing workflows. however, these approaches are more concentrated on the security aspects such as control access rather than investigating the performance cost of security in cloud computing.



where for both options n= 15 to 2000, m1= 5 to 25 and m2= 5 to 25. also the cooperation set l={readdata, anonymise, analyse, writeresult}. also, we have used four assumptions for the data transfer delay(d= 0.001, 0.01, 0.1, 1), with is because the behaviour of option 4 model is limited by the overhead of the analyse action, as it has a comparatively slow rate. obviously, the consideration of the data transfer cost is shown that option 4 will be a valuable choice as same as the option 1 public. however, the cost of designing and creating data center for example, and the computational cost will be significantly higher than the option 1. hence, even with the use of a small rate for the transferdata action in option 1, it is still offering a good performance and it is more cost effective when the number of workflow instances and servers are relatively small.



in this section, the behaviour of option 1 will be examined further by means of comparing the low rate and the high rate of the data transfer delay. here we consider two extreme values of the range of communication costs. the aim is to find out how the communication cost will impact the performance of option 1. the comparison will include two sets of experiments using ode analysis, where the system has 20 workflows and then 2000 workflows respectively.



in this paper, we have presented a methodology for investigating the cost of data transfer delay on the cloud computing using the markovian process algebra pepa. we have extended our previous work with the intention to examine the communication costs of two different security deployment options on public and private clouds. we have considered the communications cost through adding some network delays between actions being undertaken in different public and private deployments. although, the presented model is simple, it can still provide insight into the behaviour of the system.



the comparison between option 1(public) and option 4(private), has shown that at a small scale system the performance of option 4 is identical to the option 1, specifically, by the use of relatively high rate for the transferdata action in option 1; which means that the latter option is still cost effective. nevertheless, for a larger scale system if we used a slow rate in the option 1 the results have illustrated that option 4 is offering better performance, due to the data transfer cost that overloaded the option 1. increasing the rate of data transfer in option 1 has noticeably risen the performance and presented behaviour which is similar to the option 4. the obtained outcomes have shown that the models are able to provide a prediction of the steady state for the given systems while considering different rates for the communication.



however, there are clearly some limitations, for example the presented work has not been validated against real implementation, which would clearly be beneficial. as stated, we have not considered data transfer delay cost to be subject to network contention, which may be the case when there are simultaneous large data transfers between domains. modelling such behaviour would show a bigger impact on the data transfer when there is a mixed use of public and private clouds and may lead to alternative workflows being more attractive, for example using compression on large data sets.



