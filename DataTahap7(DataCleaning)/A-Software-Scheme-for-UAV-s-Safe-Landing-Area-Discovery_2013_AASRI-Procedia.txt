this paper proposes a software processing scheme for small-sized uav in its landing area discovery using its single onboard camera and machine learning algorithms. the two-stage processing procedure was proposed. in first stage a similarity based textured area identification method was adopted to find the possible landing areas. afterwards, in second stage, these results were refined and evaluated by using some machine learning algorithms. the uav can then take use of these results as its emergency landing target options. the software scheme we designed implemented the whole process but still allow the developers to embed their own algorithms to make better results. our preliminary research has disclosed that this software and application are useful and can provide great convenience and efficiency.



some work has been previously done on the vision based autonomous landing site localization/ recognition during the past years. to narrow the results, only those with single onboard camera are taken into account. among them there were 3 different ways have been attempted to settle this problem.



the second method is to locate the landing point by calculating the geographic features of the land. it uses a mathematical model to describe the mapping between actual land plane and the plane in the image captured by camera. given two photos on the same land area taken on two different positions, it can be computed that the surface of the area is a plane or not.



the third method is to classify the terrain by texture features first, then calculate the depth data by optical flow. by texture classification, the area under capture can be marked with safe/unsafe tag, and the depth information can further help to find the hazards during this process. there are also some researchers using the second method to calculate the geometric features.



step 2 is used to fast locating all possible landing areas in initial image(s). it is necessary because to run dedicated, elaborate algorithms to get the best landing spot on the whole image directly is time-consuming and, sometimes, difficult. an image contains so much information, retrieving each individual content in it is still a challenge in machine vision. for example, an image composed by road, meadow, trees, and river is very typical in uav captured images, but to get all such information the image need to be processed again and again by different algorithms using multi-templates, and it is time-consuming. if we can get some possible sub-images, and run these algorithms it would be faster.



step 3 is a huge complicated process in itself. it is used to evaluate each possible landing areas generated in step 2 and sort them with possibilities for good landing choice, that is, the degree of confidence as the result is a good choice. the output of step 3 should be a sorted list, and the head of the list would be recommended landing site for uav during this period of time. so, the key problem is how to assign points to these landing site candidates.



it is implemented as follows.(1) randomly locate a point in the image.(2) generate a square taken the point as the center point; the size of the square is pre-defined.(3) calculate the texture features.(4) grow the square, and then calculate the texture features again.(5) compare the two set of features, and calculate the likeness.(6) if the value of likeness is bigger than a predefined value, go to step(4).(7) stop and take the last square as the result.



the software was implemented using opencv and c language on an mac pro laptop. it can process the video frame at 40 fps and give results after 4 continuous effective frames. however, the finding of possible landing areas is not definite because the classifier may reject all the candidates, and give no output.



this paper introduced a work about the autonomous landing area identification for a vision based uav, including its idea, working principle, procedures and implementation. the main part of it is to find a proper software scheme, which can integrate everything together into a whole program, and applicable to different machine learning algorithms. currently a naive bayes classifier has been tried to calculate the landing area as the output, however there may be other machine learning methods to achieve this, such as fuzzy logic or artificial neural network, which are possible a better methods.



