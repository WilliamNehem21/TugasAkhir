biological processes are highly complex systems of which our understanding is vague at best. decades of experimentation to understand biological pathways in cells and recent advances in genomics have led to a wealth of information but only in a very fragmented form. in this paper, we investigate the use of formal languages for describing biological pathways. currently, biological pathways are conveyed through prose or graph-like diagrams with loose semantics. the ambiguity and informality of such representations can make their interpretation error-prone. the use of formal languages in describing pathways would oblige the modeler to make important assumptions explicit, allow him to directly run simulations based on the



we present pml through some example models of biological systems in sec. 2, followed by a full presentation of pml and its semantics in sec. 3. then, we give a model of cotranslational translocation on the endoplasmic reticulum(er) membrane to demonstrate the composability of pml in sec. 4. finally, we discuss the benefits of pml and future work in sec. 5.



we must explicitly declare in which compartment its binding sites are exposed. in this case, its bind a site is exposed to the cytosol compartment. we also give the bind a rule in cyterbridge an explicit name cytertrans. explicit names can be added to any rule for clarity, and they are necessary in the more general case where there are multiple rules for a single binding site. any molecule binding on the bind a site of a cyterbridge molecule(in this case, mola) will be transported from the cytosol compartment to the er compartment, as indicated with the declaration to er in the cytertrans rule. our compartment syntax admits a clean separation between molecule behavior and compartment membership and allows for simple modeling of compartment changes through bridges.



pml to corepml. corepml has the following properties: all rules have explicit rule names, there is at most one create declaration in each domain or group and appears first, and there are no compartment or bridge constructs. any well-formed pml model can be transformed to satisfy the first two properties in a straightforward manner. for the last property, a model output from this translation must satisfy the following two conditions:(1) two molecules initially in different compartments must not be able to interact with each other;(2) an interaction between a molecule m and a bridge must respect the compartment change declaration in the bridge; after the interaction, m can interact with molecules in the target compartment and cannot interact with molecules in the source compartment. together, these properties imply that at any time, molecules in different compartments cannot interact.



satisfying property 2 is slightly more complicated. first, for each non-bridge domain that can change compartments, we add rules to allow it to interact appropriately in any compartment where it may eventually reside(how this is determined is discussed further in the extended version). for mola, the possible compartments are cytosol, its initial compartment, and er, its compartment after interacting with the cyterbridge domain on the bind a site. we then add the necessary rules for that domain to interact in all of those compartments. for the mola cytosol domain, we need to add a rule so that it can interact in the er domain(line 3). we must also create new rule sets for the new compartment(e.g. init er). in general, any set of rules can be named with this declaration.



finally, we must add rules to domains to properly handle the actual compartment change. for each compartment change site s in bridge b, we rename s to a fresh name s b. in our example, we rename the bind a cytosol site in cyterbridge(already renamed once to satisfy property 1) to bind a cyterbridge. we make a copy of the rule for the compartment change site as previously named, change the name to match the new compartment change site, and change the righthand site of the rule to refer to binding sites and domains(if any are spawned) for the new compartment. for example, in mola cytosol, we add the bind a cyterbridge rule(line 4). now, when a mola cytosol domain interacts with the cyterbridge domain, it activates its bind a er site, indicating its compartment change from cytosol to er.



as acknowledged in regev and shapiro, their use of private channels to represent shared membership in a compartment has a number of drawbacks. in recent work, regev et al. propose a biologically-motivated variant of the ambient calculus to handle better compartments. an interesting difference is that while we use the compartment construct for membrane compartments but retain the use of private sites for complexing, they choose to express both using ambients. the introduction of the compartment construct is based largely on the desire to explicitly separate these two notions. also, their formalism seems to express better compartment merging and splitting in addition to transport between compartments. it may be possible to adapt and extend pml to use the bioambient calculus as the underlying machine model.



for a put rule, we send on the channel corresponding to the site and enable the next set of sites. also, any instantiations are translated. as noted above, the rules that describe binding reactions on sites can be recursive and can be translated by using replication. rather than distinguishing between recursive and non-recursive rules, we translate each rule uniformly, treating rules, in essence, as unrestricted(non-linear) function definitions and function calls.



