logop is a coordination model extending linda by allowing a single coordination operation to dynamically address a multiplicity of possibly distributed tuple spaces. the design of logop raises relevant issues that are of general interest in the fields of coordination and distributed systems engineering. in particular, the design of an infrastructure that supports the enactment of coordination laws involving a multiplicity of physically distributed tuple spaces demands a careful treatment of the aspects related to synchrony, atomicity, locality of interactions, and global interpretation of coordination rules.



in this article we study logop, a coordination model extending basic linda by adding the ability to invoke coordination primitives involving more than one tuple space at a time. by this feature, coordination rules are no longer restricted to the context of a single tuple space, but can be defined on-the-fly by transiently forming extended scopes of visibility, obtained by joining the scope of different and possibly distributed tuple spaces altogether. however, the importance of this new model does not only reside in this enhanced expressiveness and flexibility. relevant issues related to governing interactions in distributed systems are explicitly raised by the design of logop, which are of general interest in the fields of coordination and of distributed systems engineering. in particular, the very idea of expressing a coordination law involving physically distributed tuple spaces demands a careful treatment of the aspects related to synchrony, atomicity, locality of interactions, and global interpretation of coordination rules. indeed, these issues are crucial in the more general context where the infrastructure is made of a distributed coordination space, populated by mutually interacting coordination abstrac-



linda is without a doubt not only the first, but also the most successful coordination model: its main asset is the balance that it achieves between simplicity and expressiveness. simplicity is guaranteed thanks to a limited set of primitives, while expressiveness is obtained as these few primitives can be used to model a vast collection of communication and synchronisation patterns. despite its expressiveness, linda has been traditionally used as a core model for a number of extensions tackling issues raised by modern applications, featuring for instance programmable behaviour(respect), transactions and expiring tuples(javaspaces), prolog-like features(shared prolog), scalability(swarmlinda) and mobility(lime) to mention but a few.



the xor operator is similar to or, but in this case the tuple can be inserted, read, or withdrawn from one and only one tuple space in the specified list. this operator is useful when the client must be guaranteed that no more than one tuple is actually retrieved or removed from the tuple spaces specified in the list. another level of non-determinism is also added here since the tuple space from which the tuple will be retrieved is not previously known.



finally, the and operator allows processes to consider all tuple spaces in a list. the use of and with an out allows processes to store a tuple in a list of tuple spaces in just one step. contrast this with the linda case where if n tuple spaces are involved in the operation, the out primitive would have to be executed n times. in the case of the blocking primitives in and rd, the semantics of and is such that the process will block if one or more tuple spaces in the list fail to contain a tuple matching the template given in the primitive.



to account for this issue. in this framework, a coordinated system is explicitly modelled as divided into a coordinated space, where entities subject to coordination(i.e. processes) live, an interaction space, where communication events occur reflecting the dynamics of coordination, and a coordination space, where coordination media(e.g. tuple spaces) live and interact to provide the coordination service. in particular, instead of considering a coordination model as a language with coordination primitives, this new framework views coordination as an interactive service provided by some coordination media. by focusing on the interactive behaviour of coordination media, this



