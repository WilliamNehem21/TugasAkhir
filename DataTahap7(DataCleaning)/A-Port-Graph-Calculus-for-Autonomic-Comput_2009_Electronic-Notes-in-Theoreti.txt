from our previous work on biochemical applications, the structure of port graph(or multigraph with ports) and a rewriting calculus have proved to be well-suited formalisms for modeling interactions between proteins. then port graphs have been proposed as a formal model for distributed resources and grid infrastructures, where each resource is modeled by a node with ports. the lack of global information and the autonomous and distributed behavior of components are modeled by a multiset of port graphs and rewrite rules which are applied locally, concurrently, and non-deterministically. some computations take place wherever it is possible and in parallel, while others may be controlled by strategies.



this approach also provides a formal framework to reason about computations and to verify useful properties. we show how structural properties of a modeled system can be expressed as strategies and checked for satisfiability at each step of the computation. this provides a way to ensure invariant properties of a system. this work is a contribution to the formal specification and verification of adaptive systems and to theoretical foundations of autonomic computing.



the paper is structured as follows. section 2 defines the notions of port graphs, port graph rewrite rules and port graph rewriting, illustrating them by molecular graph rewriting in a biological model. then section 3 presents an abstract rewriting calculus inspired by biochemical transformations in which molecules are collections of structured objects, rules and more general abstractions. an interaction taking place between an abstraction and a molecule is a step of the calculus. introducing application and failure allows the definition of more general forms of abstractions called strategies to express control on rule application in the same formalism. section 4 extends the formal framework to verify structural properties of systems. we show how properties of a modeled system can be expressed as strategies and checked for satisfiability at each step of the computation. this provides a way to ensure invariant properties of a system. further research perspectives are given in the conclusion. all proofs of the results presented in this paper can be found in.



port graphs are a particular class of graphs, where nodes have explicit connection points called ports with the edges attached to specific ports of nodes. this graph structure is inspired by the molecular complexes formed in protein-protein interactions in a biochemical network: a protein is characterized by a collection of small patches on its surface, called functional domains or sites, and two proteins can bind on such sites. then a protein with its collection of sites is modeled by a node with ports, and a bond between two proteins by an edge in a port graph.



the behavior of a protein is given by its functional domains that determine which other protein it can bind to or interact with. these domains are usually abstracted as sites that can be bound or free, visible or hidden. a protein is characterized by the collection of interaction sites on its surface. proteins can connect at specific sites by low energy bounds forming molecular complexes. a biochemical system is represented as a discrete system consisting of interacting components which gives rise to structural and behavioral transformation of the components and of the system as a whole. such a system is dynamic, has an emergent behavior, is highly concurrent and non-deterministic.



we represent a protein as an empty box having the identifier placed at the exterior and the sites as small points on the surface of the box. for proteins the ports are called sites and the edges bonds. graphically, the state of a site is represented as a filled circle for bound, an empty circle for free, and a slashed circle for hidden.



for each port p in l, to which corresponds a non-empty set of ports{p1,..., pn} in r, the arrow node has a unique port r and the incident edges(p, r) and(r, pi), for all i= 1,..., n;



example 2.5 port graphs provide a modeling formalism for molecular complexes by restricting the connectivity of a port(called site in the biological model) to at most one other port; we call such restricted port graphs molecular graphs. for a given biological model, we can extract a p-signature by associating to each protein name its site names.



a molecular graph rewrite rule is a port graph rewrite rule where the leftand right-hand sides are molecular graphs. a molecular graph rewrite system is a finite set of molecular graph rewrite rules. actually a molecular graph rewrite rule is not a molecular graph, but a port graph, since the arrow node does not satisfy the constraint of the maximum one incidence degree for its ports.



a natural extension of the chemical metaphor is to enrich it with a biological flavor by providing the molecules with a particular structure and with association(complexation) and dissociation(decomplexation) capabilities. in living cells, molecules like nucleic acids, proteins, lipids, carbohydrates can combine based on their structural properties to form more complex entities. biochemistry as science focuses heavily on the role, function, and structure of such molecules. adding association and dissociation capabilities for molecules represents an essential feature for passing from a minimal chemical model to a biochemical one.



at this level of definition of the calculus, a strategy(and in particular a rule) is consumed by a non-failing interaction with a molecule m. one advantage is that, since we work with multisets, a strategy can be given a multiplicity, and each interaction between the strategy and a molecule m consumes one occurrence of the strategy. this permits controlling the maximum number of times an interaction can take place.



the main original contributions of this paper are first to provide an abstract biochemical calculus to model systems evolving according to initial rules and strategies, that may in turn create new rules according to generated states; second, to show how to slightly extend the syntax in order to embed in the same calculus the verification of invariant properties of the system. when the objects of the calculus are instantiated by port graphs, we get an expressive representation of adaptive systems with interacting components, strongly inspired by biological systems. we hope that this work contributes to the theoretical understanding of autonomic computing.



