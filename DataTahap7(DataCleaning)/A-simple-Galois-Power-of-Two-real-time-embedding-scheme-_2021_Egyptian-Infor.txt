this paper describes how a simple novel galois power-of-two(gpow2) real-time embedding scheme is used to improve the performance and accuracy of downstream nlp tasks. gpow2 computes embeddings live on the fly(real time) in the context of target nlp tasks without the need for tabulated preembeddings. one excellent feature of the method is the ability to capture multilevel embeddings in the same pass. it simultaneously computes character, word and sentence embeddings on the fly. gpow2 has been derived in the context of attempts to improve the performance of the swam arabic morphological engine, which is a multipurpose tool that supports segmentation, classification, pos tagging, spell checking, word embeddings, sematic search, among other tasks. swam is a pattern-oriented algorithm that relies on morphological patterns and pos tagging to perform nlp tasks. the paper demonstrates how gpow2 led to improvements in the accuracy of pos tagging and pattern matching, and accordingly the performance of the whole engine. the accuracy for pattern prediction is 99.47% and is 98.80% for pos tagging.



distributional semantics and word embedding techniques[27,25,26] are currently the norm in performing deep learning nlp tasks of any kind. although these techniques may be traced back to the work of bengio et al., they only became popular and attracted attention after the surprising success of the word to vector(word2vec) approach proposed by mikolov[27,25,26]. following the success of the word2vec approach, many other superior approaches have been proposed, including elmo, umlfit and bert, which capitalized on the power of bidirectional lstm models, transfer learning, transformer and attention techniques.



the power of gpow2 is illustrated by applying the method to a real-life problem in arabic morphology. the swam morphological engine grew over the years from a simple morphological analyzer to a multipurpose linguistic tool that addresses spelling correction, sematic search, sentence embedding, plus many other tasks. the algorithm is pattern-oriented and applies a traditional probabilistic language model to capture the contexts of words and morphemes. the main problem of the algorithm is that it is relatively slow due to the exhaustive search process for the appropriate pattern. replacing traditional probabilistic language models with gpow2 to predict word patterns and pos tags substantially improved the performance and accuracy of swam.



the paper is organized as follows: section 2 below states the main problem. the literature review is given in section 3. section 4 introduces the novel galois power of two(gpow2) reversible text transformation and demonstrates how it works. section 5 describes how gpow2 embeddings are directly integrated in neural models that predict nlp targets. the neural model is described in detail in this section. results of experimentation and findings are given in section 6. section 7 provides a detailed example illustrating how the model works. section 8 shows how the proposed neural model substantially improves the performance of traditional swam. conclusions and recommendations are presented in the final section.



although the results and findings of bengio et al. were very interesting, research in the area stagnated for some time, presumably due to the lack of appropriate computational power at the time. the next milestone in the evolution of word embeddings is the work of collobert and weston who developed a unified multitask neural model, which simultaneously performs multiple nlp tasks, based on the distributional feature vectors computed using a deep learning model, similar to the one developed by bengio et al.



the third and, by far, the most important milestone in the evolution of word embeddings is the work of mikolov et al. who developed the word to vector(word2vec) approach to compute distributional word representations. the main difference between the word2vec and the previous approaches is the use of shallow neural models to learn the vectors, which made it feasible to train the model on large corpora in a short time. another difference is the use of a symmetric context window around the focus word.



the word2vec approach comes in two flavors: continuous bag of words(cbow) and skip-gram. in the cbow version, a semisupervised neural network is used to compute the embedding vector for a given word. in the skip-gram version, the skip-gram model is used to predict the neighbors of a given word.



the work of mikolov has also been extended to cover sentence embedding[26,27], document embedding[28,30,22], and character embedding. this made it possible to incorporate the technology into many applications and production settings. a good example is the fast-text system that integrates character embedding with word embeddings.



altowayan and tao used word embeddings for arabic sentiment analysis. they started by compiling a large arabic corpus from various sources, based on which they computed word embedding vectors for both standard and dialectic arabic. the resulting distributional word representations have then been used to train binary sentiment classifiers to determine subjectivity and sentiment. the main motivation of the authors was to avoid manual feature engineering, which is a difficult time-consuming task. they reported that their results are slightly better than the traditional approaches based on handcrafted features.



the transformation is based on the simple idea that words and strings may be viewed as integers in a number system whose radix r is a power of two. the characters used to form words and strings are the digits of this number system. the radix r should be large enough to accommodate all characters used to form words and strings. in the current version of gpow2, the value of r is 64(26), which accommodates up to 64 characters. based on this assumption, each word or string of length m is represented as a polynomial:



a special case of galois finite fields are galois prime fields referred to as gf(p). a galois prime field is a finite field with a prime number of elements, i.e. m= p, for some prime p(implying n= 1 in the above relation). in gf(p) every nonzero element has an inverse and arithmetic is done modulo p.



galois fields have been successfully used in cryptography and communication channel coding. it appears from our initial experiments that galois finite fields will have some impact in the areas of text encoding and text processing. the main attraction is that we can define two operations+ and* corresponding to two abelian groups. one of the implications of galois finite fields is the possibility of using modular arithmetic to perform embedding operations for sentences and large documents.



because the radix is a power of 2, the transformation preserves the positions and order of characters in the binary representation of the word. in case of r= 64, each character is represented by six bits. this feature is the main enabler for superimposed character-word embedding.



as expected, replacing the exhaustive search component in the original swam with a neuro predictor reduced the execution time by 93.11% while maintaining the same level of accuracy. both versions of swam were applied to analyze the full qac set. it took



a simple novel galois power of two(gpow2) scheme for simultaneously computing real time character, word and sentence embeddings has been introduced. the gpow2 embedding approach is based on a simple power of two transformation that preserves the positions of characters and words in the resulting transformation of a sentence or document. this interesting feature made it possible to design parallel embedding graphs of varying complexity and depth.



to demonstrate the power of gpow2, the method has been applied to solve a real life arabic morphological problem related to the performance of the swam linguistic tool. swam is a pattern-oriented tool that performs a variety of tasks from segmentation to semantic search. gpow2 improved the time performance of swam by more than 90% while maintaining the high accuracy of the engine.



the test accuracies of gpow2 predictions are 99.24% for arabic morphological patterns and 98.80% for pos tags respectively. these results beat the swam gold standard results obtained for the same data set and are much higher than predictions produced by alshgar(2012). more work is needed to extend and improve the emerging gpow2 model in different directions and apply it to other types of tasks.



elaffendi ma. the generative power of arabic morphology and implications: a case for pattern orientation in arabic corpus annotation and a proposed pattern ontology. in: alenezi m, qureshi b(eds.), 5th int symp. data mining applications. advances in intelligent systems and computing, vol. 753. springer, cham, 2018.



