we use a special operational semantics which helps us in predicting quantitative measures on systems describing cryptographic protocols: we also consider a possible attacker. the transitions of the system carry enhanced labels. we assign rates to transitions by only looking at these labels. we then map transition systems to markov chains and evaluate performance of systems, using standard tools.



actually, the attacker is a principal that does not play fair. according to the traditional dolev-yao model, the attacker is supposed to have control over the communication network. it is therefore able to monitor the traffic and intercept a message, to create a new message, using parts of old ones, to inject new messages and to substitute its messages for legitimate ones. these actions can be easily modeled in a process algebraic framework.



the starting point of our approach is the narration of a specific protocol and of a documented attack to it. we detail the narration in the process algebra lysa, that makes it possible to specify the behaviour of both the legitimate participants and of the attacker in terms of processes running in parallel. the quantitative analysis applied on this specification gives us an estimate of the effort made by the attacker in this particular case.



the algorithm relies on a secret key k shared between a mobile station(ms), e.g. a laptop with a wireless card, and an access point(ap), i.e. a base station. this key, exchanged apart, is used to protect the body of a transmitted message m. on the net it will pass the corresponding ciphertext{m}k, together with the initialization vector v, as described below. to encrypt the message m, the sender proceeds as follows: poor packet integrity: the integrity checksum field used by wep is implemented as a crc-32 checksum. crc is designed to detect random errors in a message, but it cannot prevent attacks. therefore message integrity cannot be completely guaranteed: an encrypted message can be modified, without disrupting its checksum.



a couple of attacks follow that exploit the above vulnerabilities. it happens that neither involves disclosing the key. the first is an attack to the wlan authentication protocol, a challenge-response protocol used by a mobile station to associate with an access point to authenticate itself.



note that we do not fix the actual cost function: we only propose for it a possible set of parameters that reflect some features of a somewhat idealized architecture and of a particular cryptosystem. although very abstract, this suffices to make our point. a precise instantiation comes with the refinement steps from specification to implementations as soon as actual parameters become available.



actually, the rate q(ti, tj) at which a system changes from behaving like process ti to behaving like tj is the sum of the single rates of all the possible transitions from ti to tj. note that q(ti, tj) coincides with the off-diagonal element qij of the generator matrix of the ctmc, namely q. recall that a ctmc can be seen as a directed graph and that its matrix q(apart from its diagonal) represents its adjacency matrix. hence, hereafter we will use indistinguishably ctmc and its corresponding q to denote a markov chain. more formally, the entries of the generator matrix q are defined as able to produce the same bit string that can be obtained by encrypting with the proper key, just by xor-ing the collected information. actually, we treat an abstraction of this action, i.e. we neither introduce an explicit construct for the xor operation and nor we explicitly handle rc4(v, k). to illustrate this level of abstraction, we mimick the usual induction rules used to show the capabilities of the dolev-yao attacker, in terms of its knowledge k.



