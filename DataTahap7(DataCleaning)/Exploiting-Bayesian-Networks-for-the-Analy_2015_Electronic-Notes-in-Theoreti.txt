the growing need to find proper countermeasures able to protect critical infrastructures from threats has addressed the definition of quantitative methodologies for risk assessment. one of the most difficult aspects in this topic is the evaluation of the effects of attacks. attacks trees represent one of the most used formalisms in the modeling of attack scenarios: notwithstanding some extensions have been proposed to enrich the expressiveness of the original formalism, some effort should be spent on their analyzability. this paper defines a transformational approach that translates attack trees into bayesian networks. the proposed approach can cope with different attack trees extensions; moreover, it allows the quantitative evaluation of combined attacks modelled as a set of attack trees.



has to be performed by experts that have enough knowledge of the details of the system, or at least part of it. this activity is traditionally conducted by a top-down or bottom-up approach, e.g., respectively, if an exploitation has occurred and if an investigation needs to be conducted using logs, or if the risk of having exploitation because of a combination of known phenomena has to be evaluated, starting from its potential elementary causes. research in automatic support of experts during design, evaluate and run-time monitoring phases is growing; in particular, in the field of security-related event correlation, first methdologies have been presented[7,6] aiming at the definition of decision support system architectures.



this expert-driven analysis has supported qualitative or semi-quantitative risk management processes: such activity may strongly benefit from quantitative approaches as already done in safety analysis. the advantages of having quantitative risk assessment are the possibility to assess the quality of the proposed protection solutions and to allow cost-benefit trades. in other words, this analysis may be oriented not only to find out the interrelations and the dependencies, searching for potential logical implications, but it can also find out the conditioned probabilities of complex events by the probabilities of more elementary events and their relations. this is to get quantitative measures of the risks that the system can face because of hostile behaviors.



the resolution method is based on the exploitation of wide-spread combinatorial probabilistic modeling formalisms, namely bayesian networks(bns). the method stems from the specification of separated ats for each attack by domain experts and involves their automatic composition into a single, comprehensive bn model that encompasses all joined effects. the translation into a formalism with a greater solving power than bns, allows us to propose a unifying at extension where some of the most interesting extensions proposed by the scientific literature are included. the method is applied by a tool that performs the automatic translation of separated ats into a bn model and solves it by means of freely available supporting



the first publications introducing ats are[21,22]. in these publications the author proposes ats as a convenient means of representing attacks and to support the systematic analysis of their causes. ats have been created in the field of computer security, but their applicability is not restricted to this field: an application to homeland security can be found in, in which a variant of ats is used to evaluate resource allocation with respect to attacks, while in an application to industrial systems is presented. ats can be applied whenever a risk that is connected to a variety of action chains or combinations have to be analyzed, to obtain a general schema of how that risk is generated. to give an idea of the benefits that can result from the application of quantitative or qualitative ats analysis, consider the case in which a group would aim to exploit an environmental accident to produce a terrorist attack, by tampering a distributed monitoring system, used by the authorities to keep polluting agents under control and avoid risks against the population of the area 4. ats are flexible enough to represent conventional computer security attacks, such as the ones that can be applied to the computer based remote control system, or sensory loss, or completely different threats such as actions based on the corruption of sensed data by a physical intervention on the sensing nodes(such as artificial isolation from the pollution agents), using a single common framework.



a sound presentation of foundations of ats is given in, in which ats are formally defined and described, and a very abstract and general semantics is given to the operators that combine the actions. an example of qualitative applications of ats, with a comparison with another technique, can be found in[19,15], while an example of quantitative application can be found in. the definition of quantitative semantics in ats is open to alternatives, and presents a proposal, together with an interesting bibliographical section about the problem. some extensions can also be found in the literature(e.g. see[28,18]).



ats show some apparent similarity with the more widely known fault trees(fts), used to evaluate the contribution of faulty components on a system. although they share some basic principles(at the point that there has been some interesting attempt to integrate them, like in), the two techniques are different in many aspects on both conceptual and practical issues. a first example is given by the common effects of event combinations: while different faults that can jointly lead to a higher level fault are generally invariant with respect to their temporal order, the various actions that compose a single attack must generally be successfully performed in a given order, thus introducing some order. a second aspect is the semantic difference between the fault event and the action: a fault happens, while the action is intentionally taken by the attacker, that can thus decide how to enact a



assuming that a formalization of ats is given, the problem of solving at models is discussed: the focus of this section is on the solution process that aims to provide quantitative results. the approach relies on transformational techniques as a mean to generate a more analyzable model for a more usable one. the process can be considered as composed by four steps in pipeline: system analysis, model synthesis, model evaluation and results evaluation.



over, this new phase is also exploited to implement the integrations introduced in this paper to basic ats and to adapt the synthesized model to the chosen solver, decoupling the representation of the model, implemented by ats, from the implementation of the model, that is given in a form that is suited for the chosen solver. this decoupling allows the use of alternative tools in the model solution phase, based on formalisms that are not necessarily dependent from ats, nor trivially related: this can be exploited to transparently switch to a more powerful solver for ats once available, or to resort to more flexible solvers that use more general formalisms(as shown in this paper using bns), to leverage some characteristic that the new formalism may have and ats do not, or to integrate the process in wider design processes. all these operations can be designed and organized to be performed automatically, by means of a proper software components, to isolate the actors of the process from the complexity of this phase and to make it transparent to the process.



bayesian networks are a proper formalism for our purposes since they can improve ats by eliminating the constraint of having a tree structure. the graph nature of a bn model allows the presence of common ancestors and the merging of different ats. notwithstanding they have not the expressive power of state-based formalisms as petri nets(pns), it allows other interesting features such as multivalued nodes and arbitrary functions in the nodes(with respect to fault trees). bns are also much easier to solve then pns since they can be analyzed by means of efficient combinatorial algorithms instead of time consuming state space construction techniques: with respect to fault trees, the complexity of the solution algorithms is slight greater.



model-to-model(m2m) transformations aim at changing source models into other models, also expressed in different formalisms. the main motivation is that the new model enables analyses to be performed that are not feasible in the previous formalism. notwithstanding model transformations can be implemented by general purpose languages such as c and java, there are a lot of languages specific for model transformation(e.g. atlas transformation language, query view transformation, etc.). such languages usually contain both declarative and imperative parts: nevertheless, they encourage the use of declarative style in specifying transformations.



trains makes it physically impossible to examine each container, where dangerous materials could have been hidden. if there is a security breach in the port authorities, this causes a breach also to the railway system. another major vulnerability comes from unauthorized access to train schedule databases. such archives contain schedules for shipment of sensitive materials: the knowledge of this information can lead to focused attacks that can target hazardous materials in sections where checks are less tight, dramatically increasing the effects of a usually less harmful action. a fourth criticality is connected to the commercial implications of train transportation especially for passenger trains. for train companies not to loose business in favor of other means of transportation, security checks must be reduced at minimum. together with high predictability due to the fixed train schedule, this poses a threat to the infrastructure itself. a final problem is that usually railroad security is not the responsibility of a single agency, but it is shared among several authorities. the separation of roles increases the probability of security gaps, since every agency might think that some other institution should have already covered a particular problem. on the contrary, if a particular point is covered by more than one agency, this brings to a waste of funds that could be used on securing other vulnerabilities.



if we then focus on the possible attacks that can be aimed at railways, they could be grouped into three main groups. the first type of attack is the destruction of trains or railways themselves. as an effect, this attack type could also target the vicinity of the railways. bombs on the railway or on the train itself can be an implementation of this type of attack. as outlined above, targeting trains transporting hazardous materials can increase the effect of this type of attack. another way of performing this attack is by derailing a targeted train, for example by attacking a bridge just before the train crosses it, or by placing large vehicles on railroad crossings.



i.e. all the leaf nodes of the bio-chemical threats sat represent an active attack, the maritime security and network security sats are not affected(and thus their attack likelihood is zero) while the railroad security sat is affected since its explosion intermediate node is related to the explosion intermediate node of the bio-chemical threats sat. different choices of enable elementary attacks allow other analyses, according to the desired goals of the evaluation.



this paper defines a translational method for the automatic generation of a bn from a set of ats. the approach is motivated by the necessity of having a process and a formalism able to provide a quantitative evaluation of the likelihood of success of attacks even if in case of combined attacks with mutual and non-trivial influences between them. the approach is applied on a railway case study where influences between attacks aimed to hit trains and attacks aimed to hit facilities are studied, modeled by means of attack trees and then analyzed by means of existing analysis tools on the generated bn model.



