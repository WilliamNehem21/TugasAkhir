an on-the-fly symmetry reduction technique that exploits the lexicographic order on metarepresentations of maude terms, and a technique that uses auxiliary data to verify strong properties that are not directly expressible in propositional temporal logic are presented. both are implemented by simple transformations of rewrite theories. they are applied in the verification of a strong-consistency property of a client-server protocol, a simplification of the chain-replication protocol.



a built-in total order on metarepresentations of terms, and permits the manipulation of these metarepresentations. the technique presented constructs the least element of the orbit of a state with respect to the lexicographic order on metarepresentations of terms. since the technique transforms the specification, space reductions are obtained in execution, searches and model checking of the specification.



section 2 introduces maude preliminaries, in particular those related to objectbased specifications. the specification of the simplication of the chain-replication protocol is presented in section 3. next, section 4 discusses the on-the-fly symmetry reduction technique and its application to the protocol. section 5 motivates and describes a technique that uses auxiliary data to verify the strong-consistency property this protocol should satisfy. conclusions follow in section 6.



the size of the state space was determined using the search command, which is part of the maude system and allows one to explore the state space in a variety of ways(see). through arguments and various forms, it may return all states(for finite state spaces), or all states satisfying some property, or the first n states it finds, for a specified n. the result of the command includes the number of states examined in obtaining the result.



many distributed systems include identical components. thus, if one such component reaches a particular state in one of the possible behaviors of the system, an identical component would reach the same state in a similar behavior. this section first presents mathematical preliminaries for exploiting symmetry.(for a more complete presentation see.) then it describes how to implement on-the-fly symmetry reduction for system with identical components.



to determine this consider the effect of permuting indices on each of the rules of the specification. a close examination of all the rules of the client-server protocol shows that whether a rule is enabled is independent of the values of indices. thus, for the client-server protocol all permutations on indices induce permutations on states that are automorphisms.



the term< p, m, n>, where m< n, represents a partially defined permutation of a set of(metarepresentations of) indices{i1,..., in}, or alternatively the set of all permutations that extend p. thus, the set of all permutations on{i1,..., in} is represented by< emptypermutation, 0, n>.



furthermore, the general definition may have to be specialized for specifications in which the same term that represents an index in some context is not an index in another. in the specification of the client-server protocol nonzero naturals are used to identify the clients, but naturals are used as counters to symbolically represent values. so a term that is a counter should be unchanged by permutations.



here the permutation? q is applied to the index i, but not to the counter k. the permutation? q might be further defined as it encounters i. as noted above, if q(j) is defined for some index j, then p[ q, i](j)= q(j), and so p[ q,' val[i, k]](j)= q(j).



in fact, the property the client-server protocol should satisfy in all states is concerned not only with the eventual value the client will receive, but also with the value it currently has. thus, the form of the property is more complex than the one described above, and remains not directly expressible in linear temporal logic. so we transform the specification of section 3 to be able to verify this property.



a general on-the-fly symmetry reduction technique was presented. it exploits the lexicographic order on metarepresentations of terms to construct a representative of the orbit of a state by a single traversal of the metarepresentation of the state. the technique is implemented by a simple transformation of a specification. this means that state-space reductions, and concomitant time and memory reductions, are effected in executing, searching and model checking a maude specification.



a technique that uses auxiliary data to allow the verification of strong and complex properties that are not directly expressible in propositional linear temporal logic. the ability to verify these properties comes at the price of a larger state space. the combination of both techniques allowed the verification of a strong-consistency property for several instantiations of a simplification of the chain-replication protocol.



