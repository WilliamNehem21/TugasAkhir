model checking and temporal logics are boolean. the answer to the model checking question does a system satisfy a property? is either true or false, and properties expressed in temporal logics are defined over boolean propositions. while this classic approach is enough to specify and verify boolean temporal properties, it does not allow to reason about quantitative aspects of systems. some quantitative extensions of temporal logics has been already proposed, especially in the context of probabilistic systems. they allow to answer questions like with which probability does a system satisfy a property?



a similar situation exists in the domain of constraint satisfaction problems. there, classical problems consider boolean constraints only: either a constraint is present or it is not. some csp problems, however, cannot be properly formulated using this crisp interpretation of constraints. several approaches exist to remedy this, which basically associate non-boolean values to constraints, like probabilities, costs and sets. such constraints are called soft constraints and the corresponding problems are soft csp, like fuzzy csp, probabilistic csp, weighted csp, among others.



called additive and multiplicative operations. the basic idea is that the domain is used to represent the values associated to constraints(boolean, probabilities, etc.), the additive operation is used to project constraints and the multiplicative operation is used to combine constraints. the framework captures most of the common soft csp problems, such that the results stated for the framework can be applied to concrete instances. such results can be often employed effectively on the particular instance or can be used, for example, as hints for the applicability of special solution methods for a concrete instance. more interestingly, c-semiring constraint methods have a unique advantage when problems with multiple criteria or multiple metrics must be tackled. in



bandwidth, delay and jitter are typical examples of network qos properties, while application-level qos includes, among others, price and access rights. in most cases, the implicit algebraic structure is a c-semiring. as a matter of fact, c-semirings has been used in kaos, a calculus for programmable qos, as a formalism for representing qos properties of wan applications.



this paper is structured as follows. section 2 gives the necessary background on c-semirings and transition systems. the next section describes syntax and semantics of the extended logics, and presents some theoretical results. section 4 is on the computation of our logics and section 5 illustrates various applications of our framework. the last section concludes the paper and outlines current and future work. an appendix following the bibliography contains proofs of some lemmas and theorems.



set f is used to represent additional functions over the domain of the concrete c-semiring being considered other than the additive and the multiplicative operations. for example, if the c-semiring under consideration is the boolean one, then one can include boolean negation as a function of f in order to be able to define all possible boolean functions 3. in an optimization c-semiring, one might want to include other arithmetic functions like arithmetic multiplication or division. in sum, the choice of f determines the set of all functions that can be represented.



