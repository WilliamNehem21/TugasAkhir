Abstract The ability to control data and information through the Internet can be challenging. Pre- liminary analysis showed that some tampering and forgery may occur to some words of the Quran in the electronic versions that span the Internet. Such small modifications may not be noticed by public audience. The holy book of Quran includes a unique feature in that its worldwide copies are all identical. The 114 chapters (Suras) and all their verses and words are preserved in the exact form. As such, we designed and evaluated a model and a tool to evaluate the integrity of the word- ing in the e-versions of the Quran through generating a Meta data related to all words in the Quran preserving the counts and locations. Such Meta data can be used in the same way hash algorithms are used in security to check the integrity of a disk and its data files where any small change in the data will result in a different hash value. We conducted several experiments to evaluate the different parameters and challenges that can impact the automatic authentication process of Quranic verses based on information retrieval and hashing algorithms.

is no control on the type, nature or details of information uploaded to the web by any user. Accordingly, credibility and accuracy are the foremost concerns when reading informa- tion from the web. Credibility can be linked to the website, hosting the information, author of uploaded data and the type of data or information itself. For example, in social networks or even news websites the same story can be told in exactly opposite versions given by two different websites or authors.

and digital signatures. Document control is related to permis- sions before and after publishing the document online. Docu- ment control then is needed to be dynamically applied in a manner that document can be tracked even after publishing it online. Integrity is about making sure that the document is not altered by any unauthorized person and hence is authenti- cated. In digital signatures, signed documents should be veri- fied by the people who signed it (i.e. non-repudiation).

Nowadays, many multilingual copies of the holy Quran are available online. The holy Quran is originally written in Arabic language. The exact wording and statements in Quran verses are identical for all Arabic versions of the Quran.1 However, one problem with translation is that it may change, intention- ally or unintentionally the meaning of some verses when trans- lated to another language. This is a general problem when dealing with translation. On the other hand, for the same lan- guage, it is possible that the same verse be written in different words due to intentional fraud or due to language translation issues.

The identity and integrity of the data must be periodically and systematically verified through mechanisms such as Secure Hash Standard (SHS) and Secure Hash Algorithm (SHA) [1]. Quran verses can be considered plagiarized or unauthenticated even for one letter change. Hence, hash algorithms are good option as such algorithms are very sensitive even for a very small change in data or documents.

It should be mentioned that in this research we are not focusing on encryption but rather integrity checking. The prob- lem is that in our scenario for Quranic documents online, the relation between information providers and readers is not a typical e-commerce one-to-one relation in which typical hash or encryption algorithms can be sent to the known receiver or customer. Accordingly, private keys intended for a particular receiver will not be applicable in our scenario where the tool is expected to check quickly through the Internet that Quranic documents are authentic and do not contain tampering.

The rest of the paper is organized as follows: Section 2 dis- cusses the related work to this research field followed by a dis- cussion of the adopted methodology in Section 3. Section 4 discusses the developed authentication system, while the exper- iments are presented and discussed in Section 5. Section 6 pre- sents the conclusion and future work.

Papers that tried to detect Diacritics proposed morpholog- ical rules to do that. Known patterns and an initial training set are used to match subject word for one of the morphological rules. Hidden Markov Model (HMM) is used where the hid- den states are the possible diacritized selections of the words. In Arabic text, Diacritic marks can be challenging whether they exist or not in the Arabic text. If they exist, the challenge will be to read or parse them correctly especially as they need extra resources in addition to typical letters parsing in all other languages. On the other hand, Diacritic marks are necessary to Arabic words to clarify words and statements from ambiguity.

Sbbah and Selamat [9] have developed a framework for Quranic verses authenticity detection in online forum. They used a numerical approach to detect Quran quotes. The numerical approach calculates the diacritical ratio (DR) of each word in the text. Their authentication system depends on defining the weights of Quranic letters and diacritics and calculate the identifiers of distinctive Quranic words.

The details of developing the authentication system are dis- cussed in more detail in Section 4. The goal of this research is to design a search engine or authentication system that is able to retrieve results based on a search query. A customized Quran search engine or information retrieval system should focus on parsing and indexing Quran verses from all over the web. For proposed program search user interface and queries will then represent verses or part of verses.

We have conducted an experiment to evaluate the top websites that are used to search for Quranic verses. This is based on the popular search engine Google. We built a customized crawler to search through Google for Quran verses one by one from the first to the last verse. For each verse, we collected informa- tion related to the approximate number of index pages in Goo- gle for the verse. This represents the approximate number for web or Internet links that include the queried verse. The devel- oped crawler uses Quran verses as search queries. Results are retrieved from embedded information in search web pages. Meta data related to the retrieved web pages are collected and saved in a dataset. Google ranks retrieved results based on its popularity page rank algorithm.

In order to deal with the verses having Harakat and Tash- keel, we have considered two versions of the Quran: one that considers Harakat or Tashkeel and one that does not. Quran indexed in the web can be with or without Tashkeel. In many cases, search engines and their queries can be sensitive to these symbols that are unique in Arabic language; hence a search for verse that does not include Tashkeel in the query may not retrieve results for verses that include Tashkeel symbols.

1, SHA-256, SHA-384, SHA-512, Tiger, and Whirlpool gave different values for the verses with and without Tashkeels. We repeated the process several times and noticed that all hashing algorithms for all evaluated verses show different hash values comparing with and without Harakat or Tashkeel. We noticed however, that different implementations for the same hashing algorithm may give different hash values for the same text. As such, the system should use the same algorithm imple- mentation for initial and consecutive authentications or verifi- cations. This is what we have done in developing the authentication system where we used the MD5 hashing algo- rithm for hashing purposes.

This simple experiment showed that if we want to check correctness or authenticity of verses with Tashkeel and exact form, hashing algorithms can be used. However, if we want to stem those parts, hashing algorithms will not be then effec- tive unless those additions are stemmed from all verses. In the second experiment and in order to check whether same hash functions can produce same hash codes, we tried different implementations for the same hashing algorithm and check hash values for several verses. We believe that verse should be the standard unit to measure with. Sizes of smaller or larger than a verse can have several issues and challenges specially related to false alarms.

This experiment shows that not all hashing functions are identical or should always produce same hash values for same text. Nonetheless, this is not due to reliability issue with hash- ing algorithms. Rather, it has to do with the detail implemen- tation of the hashing algorithm. Hashing values for the same algorithm implementation for the same text should always pro- duce same hash values.

We have used our authentication system to check one of the online copies of the Holy Quran available in one of the Arabic websites that index Arabic books and documents (The compre- hensive library: http://shamela.ws/), and we noticed that there are records of some Quranic distortion in some verses. The risk is that such versions may be exposed to non-Muslims or Mus- lims who have little experience of the exact wording of Quran verses.

Hash values are randomly generated. Hence one difference may result in a completely different hash. Hence the idea is not to see how much the text is far from the actual text. The idea is to come up with a Boolean decision: Version is iden- tical relative to the original authenticated copy or not.

While we only conducted the current experiments on Quran verses, we believe that same process and tasks can be applied to evaluate Hadeeths as well. The case of Quranic verses can be considered easier as Quranic verses are literally identical even in the different Quran readings (with some few and minor exceptions). However, for the case of Hadeeths, some Hadeeths are mentioned in different wordings where this needs to be considered in the authentication evaluation process.

