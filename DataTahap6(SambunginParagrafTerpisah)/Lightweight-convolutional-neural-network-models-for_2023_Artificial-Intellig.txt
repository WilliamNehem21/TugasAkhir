Cotton (Gossypium hirsutum L.) is an important cash crop for the farmers of developed as well as developing countries and is presently harvested using machines like stripper or spindle pickers in developed countries and manually in developing countries (Bakhsh et al., 2017). Hand-picking of cotton bolls has certain advantages like better preser- vation of fiber characteristics, less trash content, and high harvesting ef- ficiency but causes health hazards due to pesticide residues (Bakhsh et al., 2016, 2017; Memon et al., 2019), as well as it is a time- consuming and labor-intensive job. In the wake of a reduction in agri- cultural workers as well as an increase in agricultural labor costs in near future (Mehta et al., 2019), mechanical harvesting of cotton is nec- essary. But currently, cotton harvesting machines are the non-selective type which has many drawbacks as compared to manual hand picking. For instance, three times increase in trash content (Shukla et al., 2017) productivity and lesser field losses, a high recognition rate with minimal errors as well as lower harvesting time is imperative. At present, the ac- curacy of cotton segmentation using a convolutional neural network is below 80.0% (Li et al., 2016, 2017), therefore, this study aimed to de- velop light-weight convolutional neural network (CNN) models which will be able to segment the cotton bolls with higher accuracy, minimal errors and comparatively a lower inference time. The performance of developed models were evaluated in terms of intersection over union, F1-score, accuracy, precision, and recall values. For a comprehensive evaluation, the performance of developed models was also compared with the cotton segmentation results obtained using existing state-of- the-art networks.

The rest of the paper is organized as follows. In Section 2, image dataset preparation, the methodology followed for CNN model develop- ment, their training, and quality criteria used for performance evalua- tion of CNN models is presented. The results obtained by the trained models to segment cotton bolls are presented in Section 3. In the end, Section 4 concludes the findings of this study.

This section describes the image acquisition, labeling, pre- processing, and augmentation process. This section further describes the process followed for the development of three new architectures of CNNs. The training procedure of developed architectures is discussed along with the explanation of criteria matrices used in this study for the performance evaluation of developed CNN models.

A non-linear activation function was applied after each convolutional layer, with the purpose to extract non-linear features from computed feature maps as well as increasing the accuracy of pro- posed convolutional networks (Jarrett et al., 2009). In the present study, the ReLU activation function proposed by Nair and Hinton (2010) was used as it leads to faster convergence (Glorot et al., 2011; Krizhevsky et al., 2012) and do not suffer from vanishing gradient problems.

In the last layer of each model, the soft-max activation function was used. During the training process of convolutional neural networks, at first, initial weights need to be provided to each layer after which these weights will be updated iteratively during the backpropagation process. This process of generation of initial weights according to the dimensions of layers is called weight initialization which is a vital opera- tion for the network convergence (Kumar, 2017) as too-large or too-small weights initialization may lead to exploding and vanishing gradients issues, respectively (Bengio et al., 1994) during the training of the convolutional network. As in the present study, the ReLU activa- tion function was used in neural layers, hence, as recommended by He et al. (2015), weights were initialized using He initialization for the cus- tom proposed models. All models proposed in this study, are essentially comprised of encoder and decoder parts.

A python-based open-source deep learning application program- ming interface named Keras v2.4.0 (Chollet, 2015) with an open- source python library called TensorFlow v2.6.1 (TensorFlow Developers, 2021) as its backend was used in this study to build the pro- posed models. Google Colaboratory (Google Colaboratory, 2021), an on- line cloud-based Jupyter notebook environment, was used to train dropout rate increased from 0% to 40%, the mean- IoU value decreased by 31.60%, 14.32%, and 26.85% for model 1, model 2, and model 3, respectively. In addition, to mean-IoU values, cotton-IoU (Intersection- over-Union), F1-score, and pixel accuracy values also decreased significantly when dropout rates increased. Our analysis in this study shows that the dropout layer present in a fully convolutional neural network is ineffective and may decrease its overall performance.

The reason for the failure of the dropout technique is that the pro- posed models are fully conventional neural networks and cotton field images have strong spatial correlation and hence the extracted feature maps too. As feature maps activations are spatially correlated, therefore, despite the dropping-off of some random activations' units from feature maps, information still flows through the convolutional layers and the fully convolutional neural network shows no positive effect of dropout on its performance. Similar observations were also mentioned by Ghiasi et al. (2018) and Tompson et al. (2015) in their respective studies.

the 1.78% and 6.04% reduction in cotton-IoU score against 11.9% and 13.2% reduction in inference time. A comparison between model 3 with no reduction in filters and a 20% reduction in the number of filters shows that the cotton-IoU score decreased by 0.84% against a 10.53%

which has the highest number of trainable parameters among proposed models, achieved a mean-IoU of 94.65% which is just 1.89%, 1.72%, 1.75%, and 0.74% lesser than the values achieved using ResNet18, InceptionV3, EfficientNet-B1, and VGG19 networks, respectively, while the number of trainable parameters in these networks is higher by many folds.

