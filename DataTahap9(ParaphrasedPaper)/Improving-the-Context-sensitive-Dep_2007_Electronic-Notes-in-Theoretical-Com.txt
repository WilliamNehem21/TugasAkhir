The dependency pairs method is a widely utilized technique for demonstrating the termination of rewriting and plays a central role in automatic termination provers. Recently, efforts have been made to adapt this method for proving the termination of context-sensitive rewriting. A new and crucial aspect of this adaptation involves the use of collapsing dependency pairs, wherein a single variable appears in the right-hand side, in order to establish a correct framework in this context. However, it has been observed that dependency pairs act as a binding component in the context-sensitive dependency graph, leading to larger cycles and consequently making some termination proofs more challenging. This paper presents a method to effectively mitigate this effect by removing certain arcs from the graph, thus facilitating quicker and easier proofs. Additionally, the introduction of narrowing dependency pairs is proposed to streamline the treatment of the context-sensitive dependency graph. The practicality of these new techniques is demonstrated through benchmarking.

For a given term rewriting system (TRS), a restricted form of rewriting, referred to as context-sensitive rewriting (CSR), is obtained. The task of proving the termination of CSR is an intriguing problem with various applications in the domains of term rewriting and programming languages.

Narrowing dependency pairs, originally introduced by Arts and Giesl to enhance the efficiency of the dependency pairs technique in termination proofs, is further investigated. In essence, under specific conditions, a dependency pair can be substituted with a set of pairs, which may simplify or restructure the dependency graph and consequently streamline the termination proof. This technique is also explored in the context of the context-sensitive dependency graph.

Following preliminary definitions in section 2, section 3 introduces the concept of hidden symbols and examines their properties in the context of proving the termination of CSR. Section 4 demonstrates how hidden symbols can be utilized to enhance the context-sensitive dependency graph. Section 5 adapts the technique of narrowing dependency pairs to context-sensitive dependency pairs, while Section 6 presents an experimental evaluation of the proposed techniques. Finally, Section 7 provides a conclusion.

A simplification of the context-sensitive dependency graph is introduced by restricting the outgoing links of collapsing dependency pairs to dependency pairs headed by so-called hidden symbols. Hidden symbols are defined as symbols occurring in non-replacing positions in the right-hand sides of rules in the TRS. This refinement significantly enhances the performance of termination proofs based on the proposed dependency graph. The investigation of narrowing context-sensitive dependency pairs is also highlighted as a technique which can aid in simplifying or restructuring the dependency graph, leading to a more straightforward proof of termination. Moreover, the practical implementation of these refinements in the context-sensitive dependency graph for proving the termination of CSR has been carried out as part of the termination tool mu-term, yielding promising results in terms of successfully proven examples and efficient proof generation.