More than three decades ago, the ethernet protocol was developed with the goal of providing a flexible, cost-effective, and user-friendly networking solution. However, advancements in technology and the growing number of hosts in networks have brought to light the vulnerabilities of ethernet, with scalability being a major issue. This vulnerability is due to a lack of authentication in the Address Resolution Protocol (ARP), making it susceptible to exploitation by attackers. Recent studies have revealed security weaknesses in ARP, such as ARP spoofing and ARP storm. To address these issues, this paper introduces a secure mechanism that effectively suppresses broadcast traffic while safeguarding the Software Defined Networking (SDN) network from ARP-based attacks. The proposed solution integrates concepts from recent studies and introduces a novel multistage security algorithm that evaluates incoming ARP packets at three security stages based on source IP address, source MAC address, and destination IP address. The aim is to improve network performance by minimizing ARP broadcast traffic and providing protection from ARP-based attacks to the SDN controller and all network hosts, specifically within Ethernet networks.

One approach to address ARP broadcast traffic suppression in Ethernet networks is through the use of SDN architecture. Network information can be gathered by monitoring ARP and DHCP packets using OpenFlow switches, running discovery protocols such as Link Layer Discovery Protocol (LLDP), or other means, enabling the controller to gain knowledge of all devices within its network.

A multistage security algorithm is proposed for the detection and mitigation of ARP-based attacks, employing three checks to identify and counteract ARP-based attacks. ARP-based attacks, such as ARP storm or ARP spoofing, may occur together or independently, with attackers attempting to manipulate ARP packet information to execute the attacks.

In contrast, certain Cisco devices, through the Dynamic ARP Inspection (DAI), categorize device interfaces as trusted interfaces (TI) and untrusted interfaces (UI). Untrusted interfaces have an incoming ARP packet rate default limit of 15 packets per second (pps), and if exceeded, the interface is automatically shut down.

During ARP storm attacks, attackers inundate the network with numerous ARP packets. Attackers pay little attention to the content of the ARP packets, focusing instead on the volume of ARP packets sent. Two scenarios simulating ARP storm attacks with varying ARP packet rates are discussed in further sections, as a specific value cannot universally define an ARP storm attack.

Performance metrics such as CPU consumption generated by the proposed solution are captured using the 'top' command-line tool in Linux. The Ryu SDN controller is chosen as the centralized controller for the proposed solution. Additionally, the Scapy Python library, which supports a wide range of protocols for sending and receiving packets, is utilized to generate ARP-based attacks with multiple scenarios.