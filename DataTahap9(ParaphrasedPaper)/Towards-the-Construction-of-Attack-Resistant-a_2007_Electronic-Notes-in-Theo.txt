The distribution of content typically utilizes one of three primary delivery techniques: client-server-unicast, network multicast, or application layer multicast (ALM). The client-server system architecture is easy to implement and is currently the most widely used method, but it is not scalable over a large number of clients and has a single point of failure, i.e., the server or cluster of servers. Network layer multicast is more scalable due to data replication in routers, but it is not widely deployed due to issues such as billing and lack of scalability over the number of multicast groups.

Application layer multicast, also known as overlay streaming, leverages edge network resources and introduces a different load balancing scheme. It is resistant to node failure and attacks due to its self-organization. In contrast to single-source systems, multi-source systems in ALM receive different parts of the content from different nodes, increasing stability. Peer-to-peer systems have also shown resilience to failures and organized interference.

It is easier to create topologies resistant to random node failure, but achieving attack resilience is more challenging. Strategies like quick fallback and creating topologies with many leaf nodes and a small number of forwarding nodes can achieve high resilience to node failure. Probabilistic resilient multicast (PRM) is a derivative of ALM that implements a randomized forwarding scheme and retransmission of lost packets, introducing redundancy and lowering susceptibility to node failure.

In ALM, topologies of connections between neighboring nodes are created as the content is routed from the source through the system, resulting in special instances of graphs. Multi-source systems create a network of disjoint multicast trees, which can be represented and used as a system model.

Additionally, in ALM, nodes can be connected to multiple relaying parents, creating multiple trees. The resulting topology can be a directed acyclic graph or a network with cycles, each with different possibilities for achieving stability. However, strict division of stripes can lead to deadlocks, and efforts are being made to balance the importance of nodes and to prevent such deadlocks.

To evaluate the algorithm and routing decisions, simulations of the system were conducted using OMNeT++, and metrics such as mean node connectivity and fraction of received packets after node removal were used to measure resistance. The topologies were analyzed to identify deadlocks and unexpected behavior, and efforts are underway to modify the algorithm to prevent such deadlocks and improve the stability of the system under attack.