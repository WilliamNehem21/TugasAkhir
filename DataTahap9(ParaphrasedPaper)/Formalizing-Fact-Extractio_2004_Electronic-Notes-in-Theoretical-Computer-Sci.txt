Reverse engineering often involves utilizing fact extraction to convert source programs into factbases, which are subsequently utilized to analyze specific aspects of the program, such as its architecture or any anomalous structures. However, fact extraction is typically informally defined and can be incomplete or inconsistent. This paper argues that formalizing the specification of fact extraction can be advantageous for the reverse engineering community.

A formal specification can provide a clear and reliable standard for those who use, develop, or validate a fact extractor. The paper outlines how a formal specification for extracted facts can be derived from the grammar of the source language, thus elucidating the relationship between the code and its corresponding extracted facts. Furthermore, the paper presents the authors' experience with formalizing a version of the datrix schema, which is a description of the form of the data in the form of entities, attributes, and relationships.

The paper emphasizes that specifying the form of the factbase using a context-free grammar is particularly beneficial when dealing with fact extractors that parse source code according to a context-free grammar. The authors also note that using an abstract syntax tree (AST) as the internal representation of parsed source programs can be advantageous, and their approach involves transforming the AST into an abstract semantic graph (ASG) to represent the factbase.

The paper also discusses the need to create reversible transformations, which can be useful for recovering the source code from the factbase, especially when the target schema contains sufficient information to reconstruct the source program. Additionally, the authors mention the use of an "oracle" program to distinguish names from types, and the potential compatibility of their approach with existing tools such as TXL, a rule-based language for transforming context-free languages.

In conclusion, the paper presents a comprehensive formalization approach for fact extraction, emphasizing the importance of careful consideration of the concrete grammar of the source language in order to achieve a complete and consistent specification. The authors also highlight the potential for their approach to serve as a prototype for fact extractors and as a tool for verifying both the specification and the actual fact extractors.