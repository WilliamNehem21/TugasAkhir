Numerous established methods and algorithms exist for solving problems of type (1) through the use of floating-point approximation of real numbers. However, these implementations are prone to inherent inaccuracies, predominantly stemming from round-off and truncation errors, which can be tolerated in cases where small errors do not result in significant costs. A more precise control over errors can be achieved through error analysis in limited scenarios.

An alternative approach is validated numerics, which ensures results with absolute guarantees of correctness. Interval arithmetic serves as the basis for many available validated numerics, with efficient interval-based methods such as high-order Taylor-based methods being documented in the literature. Notably, it is well-established that assuming the field 'f' to be analytic allows for obtaining the solution to the initial value problem (IVP) of type (1) in polynomial time using a Taylor model, which is in contrast to the complexity of IVP solving without the analyticity assumption.

Remark 3.8 highlights that the first-order operators of definition 3.1 provide piece-wise affine enclosures of the solution, while the operator of definition 3.7 provides piece-wise quadratic enclosures. In special cases, if the solution is a polynomial of degree at most 2, the operator of definition 3.7 can yield the exact solution. For example, when considering the relatively simple IVP with y=(y1, y2).

In the context of this paper, a domain-theoretic framework has been employed to yield soundness and completeness results, along with explicit upper bounds on the rate of convergence. Additionally, this framework enables the direct implementation of algorithms while retaining convergence results, with accuracies limited solely by the available time and space resources. This stands in contrast to methods based on traditional interval libraries, which employ fixed-precision floating-point numbers as endpoints. While these methods can guarantee soundness, they do not ensure completeness even theoretically due to the limited precision of the endpoints dictated by the bit size used in the underlying architecture (e.g., 32 bits, 64 bits, etc.).

The article presents a domain-theoretic framework for solving IVPs using the second-order Euler method, along with the acquisition of soundness and completeness results and upper bounds on the algebraic complexity of the method. Although the focus is on the second-order Euler method, the extension to any nth order is feasible according to Corollary 2.14.