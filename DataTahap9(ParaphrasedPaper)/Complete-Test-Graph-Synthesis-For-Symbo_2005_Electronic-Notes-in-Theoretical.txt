This paper focuses on the development of a method for synthesizing test cases for symbolic real-time systems, where the specification of the implementation under test (IUT) includes variables and timing constraints. The proposed method integrates and extends two existing test methods: one for synthesizing test cases for non-symbolic real-time systems and another for synthesizing test cases for non-real-time symbolic systems.

The main objective of the study is to address the synthesis phase of conformance testing, which involves generating test cases from the specification and then executing them on the IUT. Additionally, the paper proposes a test architecture for the execution phase.

The proposed method builds on previous works related to testing symbolic systems, which involves handling variables and parameters in the system specification. The paper introduces a transformation called set-exp, which converts a timed I/O symbolic automaton (TIOSA) into a finite state automaton by introducing actions to represent the setting and expiring of clocks.

Moreover, the paper presents a theorem that demonstrates the equivalence between the original TIOSA and the transformed automaton set-exp(TIOSA), provided that the additional actions added by set-exp do not affect the system behavior in a significant way. The method is designed to be applicable to systems with timing constraints and symbolic parameters, aiming to simplify the treatment of the real-time aspect into one step.

The paper concludes by highlighting the potential applicability of the proposed method to real-world examples, based on the success of similar testing methods in developing software tools. However, the authors acknowledge the need to demonstrate the effectiveness of the method with practical case studies.