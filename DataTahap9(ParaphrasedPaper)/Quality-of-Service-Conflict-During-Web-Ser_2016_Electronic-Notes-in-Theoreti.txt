In recent years, web service technology has become widely used for building service-oriented architecture (SOA) applications. Web services rely on protocols and standards such as SOAP (Simple Object Access Protocol), WSDL (Web Services Description Language), and UDDI (Universal Description, Discovery, and Integration). They are distributed components that are self-contained, discoverable, reusable, composable, and have a transparent location, which impacts their performance and accuracy. This study focuses on monitoring a web service delivering clinical results using two different monitors generated from the FlexMonitorWS tool. The study compares quality values in three scenarios: in isolation, in parallel with another monitor, and in parallel with fault injection, and presents a statistical comparison of the results to demonstrate the level of quality degradation and significant differences between them.

The paper is structured as follows: Section 2 introduces underlying concepts about SOA, monitoring tools, and the FlexMonitorWS tool. Section 3 discusses quality of service conflicts and why they occur. Section 4 reports a case study in which a conflict scenario is evaluated, and finally, Section 5 presents the conclusions and future work.

Monitoring tools are systems that capture, collect, filter, and analyze information from a software system at runtime. In web services, monitoring tools are used for several purposes, including improving the process of web service selection and discovering, implementing self-healing techniques, and detecting violations in service-level agreements and quality metrics.

Different monitoring methods have varying degrees of intrusive effects on web services. Multiple monitors inserted in the target system can make the code difficult to understand and maintain, and the interceptor mechanism can lead to a decrease in performance due to shared resources. However, the agent approach to monitoring has fewer intrusive effects.

The DCTR system is a web service-based system developed in a clinical laboratory to deliver clinical test results to patients. The web services were developed using the Java language and JAX-WS API. The system offers several features encapsulated as web services, and for this study, the "patientservice" was selected due to its frequent use by clinical staff.

The aim of this case study is to identify potential quality conflicts between performance and accuracy during web service monitoring, with a conflict defined as a degradation in quality for one or both quality attributes. The study also aims to discover the negative effects of monitoring tools on the quality of service as the main cause of the conflict. Two operations in the "patientservice," "getpatientname()" and "getpatients()," were selected for the study.

Accuracy measures the level of accurate results provided by a web service and is concerned with the correctness of the service response. Monitoring tools are important for identifying quality and functional changes in a web service but can also have intrusive effects on its quality. When monitoring a web service, it is important to identify the monitoring target, what needs to be monitored, how to monitor it, how often to monitor it, and how to notify the monitoring results.