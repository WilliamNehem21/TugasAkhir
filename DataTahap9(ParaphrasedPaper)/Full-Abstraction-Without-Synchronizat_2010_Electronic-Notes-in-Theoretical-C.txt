The mutual exclusion problem involves identifying code sections that enable two threads to share a single-use resource without conflict. It has been established that shared memory, with atomic reads and writes, can solve this problem without requiring additional synchronization primitives. A typical solution involves two sections of code, known as entry and exit protocols, which each process can use to enter and exit their designated critical sections.

To begin, we aim to prove the left-to-right implication of theorem 4.5, for which a definability result must be established. It is important to recall that for any complete play s, it is feasible to construct a pa-term such that the corresponding strategy is the minimum saturated strategy containing s. However, this property does not hold for ia||-terms, as will be demonstrated in the next section where a closure property of strategies corresponding to ia||-terms will be identified. As a result, a weakened result for ia|| (lemma 5.2) will be proven instead.