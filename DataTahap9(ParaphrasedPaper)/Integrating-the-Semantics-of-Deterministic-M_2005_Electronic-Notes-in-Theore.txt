Because there are various participant categories involved in the creation and application of communication systems, it is crucial to employ different representation methods for the event and state perspectives. Additionally, in order to ensure that all participants have access to the necessary information, the representation methods must be sufficiently robust. To maintain coherence between the perspectives and reason about the entire system, both representation methods must share the same semantics. Event-driven representation schemes incorporate formal semantics such as traces and labeled transition systems (LTS), while for state-driven programming languages, analysts may need to utilize a system capable of executing the features. The document describes the events that must be initiated by the subscriber (l) and other features (r), as well as the predicates that need to be satisfied. The post-condition indicates the new status of the subscriber, as well as the events that are initiated, following the execution of the document.