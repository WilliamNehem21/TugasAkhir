We establish a mathematical framework for the graph-based structures that underlie various popular diagrammatic notations used in specifying, modeling, and programming computing systems. By focusing on hypergraphs and higraphs, we define a locally ordered category graph (C) of graphs within a locally ordered category C, and equip it with a symmetric monoidal closed structure. Additionally, we generalize two operations on higraphs and their variants, which are relevant to computing applications, within this framework.

The hierarchical organization of edges in higraphs is leveraged in practical applications to succinctly define complex reactive systems. To elucidate the significance of higher-level edges, we introduce a completion operation on higraphs. This operation is demonstrated to be a specific instance of the right adjoint to the inclusion of graph (C) into graphopl (C), where the latter contains oplax natural transformations as arrows. We also prove a theorem specifying the conditions for the existence of such right adjoints.

Our interest in this work originates from the use of higraphs in statecharts. Directly visualizing specifications of complex reactive systems in terms of transition systems becomes unfeasible due to the large number of involved states. Statecharts address this challenge by enabling the modeling of reactive systems in terms of identifiable concurrent subsystems.

Even in the case when C = set, there is no corresponding result for the cartesian closed structure of graph (C) because the left adjoint does not preserve the unit - in other words, it does not map 1 to the terminal object of graph, as the latter contains an edge.

In presenting our theorem, we find it convenient to utilize some aspects of the theory of 2-categories, specifically related to finite limits. We particularly need to employ the concept of an oplax limit of a map and thus recollect it here.

For graphs in bsup, Example 5.6 of the theorem provides the anticipated generalization of the zoom-out operation on graphs in poset, taking the extra structure provided by binary sups into account. However, zoom-outs do not extend to graphs in rel, or the category of posets and the relations between their underlying sets, as the terminal object is the empty set (poset).

Our objective is to systematically construct comprehensive structures capable of effectively capturing realistic diagrammatic notations. Currently, we are working on developing such a model for a wide range of statecharts, encompassing the features present in higraphs and hypergraphs. This work sets the abstract groundwork for our approach, which involves studying various graph notions and their combinations.