The real-time maude 2.1 is an expansion of the full maude 2.1, which provides support for the formal specification and analysis of real-time and hybrid systems. It facilitates symbolic simulation, search, and model checking analysis for a wide variety of systems. This paper offers an introduction to the tool and outlines its semantic underpinnings.

Previous research explored the use of rewriting logic as a semantic framework for real-time and hybrid systems, leading to the development of a prototype real-time maude tool. The prototype demonstrated the execution and analysis of real-time system specifications that were beyond the scope of known real-time decision procedures.

The implementation of real-time maude 2.1, along with its efficient built-in support for search and LTL model checking, built upon a solid foundation provided by full maude 2.1. This enabled the simplification of real-time and hybrid system specifications and the development of a well-documented and efficient tool: real-time maude 2.1.

The inclusion of eager and lazy rewrite rules in earlier versions of real-time maude aimed to model urgency by prioritizing the application of eager rules over lazy tick rules. However, real-time maude 2.1 no longer explicitly supports the definition of eager and lazy rules, as the use of frozen operators in rewriting logic eliminates the need for such explicit support.

The paper also discusses time-deterministic and time-nondeterministic tick rules and their implications for model checking. It explains how the tool can verify formulas in the context of time-bounded model checking, taking into account discrete time domains and the execution of specifications. The paper concludes with examples of commands used to simulate behaviors and verify system properties within real-time maude 2.1.