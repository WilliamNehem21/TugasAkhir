The exchange of events between system abstractions, as formally defined in section 2, does not typically involve verification of temporal properties by most computer engineers. This is despite the fact that these diagrams can express the intended behavior guiding important design decisions. The challenge lies in the limited support provided by traditional verification and validation tools, particularly in the early stages when only partial information is available. The question then arises: how can we rigorously verify the temporal properties of these intuitive diagrams?

Section 2 introduces an extension of basic Message Sequence Charts (MSCs) to specify timing constraints. However, the analysis of race conditions in MSCs, which refers to violations of the intended event ordering due to their actual semantics, is conducted independently from the analysis of timing conflicts. This approach has led to the development of tool analyzers, such as the UBET tool, which implements a rich set of features of basic MSCs in compliance with the ITU specification. Unfortunately, UBET and other popular tools do not fully address this issue.

A tuple x=(a1,..., an) is considered a solution if the assignment(x1= a1,..., xn= an) does not violate any constraint. A value v is deemed feasible for a variable xi if there exists a solution in which xi= v. The set of all feasible values of a variable is referred to as the minimal domain. These concepts are crucial in addressing the complexities of verifying temporal properties in intuitive diagrams.

While it is recognized that finding solutions for these problems is NP-hard, the basic Time Labeled MSC does not represent metric temporal constraints as disjunctions, but rather as single metric intervals between events. A network of binary metric temporal constraints in which all the constraints specify a single metric interval is termed as a Simple Temporal Problem (STP) in the literature.

To abstract the visual order graph of a basic Time Labeled MSC with only their metric time labels, a metric constraint graph is created, where the variables are the events of the corresponding MSC. Metric temporal relationships are denoted by the metric time labels. Additionally, the paper defines the Metric Interval Calculus Network (MICN) to facilitate reasoning about the metric temporal information conveyed in a basic Time Labeled MSC.

Section 2 also discusses the management of Time Labeled MSC composition (multiple MSCs) through high-level MSCs, which are used to describe more complex behaviors. The paper acknowledges the contribution of Henry Kautz for making the MATS code available for the experiments and allowing modifications to it.