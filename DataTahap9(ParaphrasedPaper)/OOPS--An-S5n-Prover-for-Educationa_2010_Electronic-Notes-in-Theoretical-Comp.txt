One aspect that makes oops particularly appealing for educational purposes is its graphical user interface (GUI), which allows students to input formulas in an intuitive format and save and load files easily. Additionally, lotrec, mspass, and the logics workbench also provide GUI-based access.

Moreover, the implementation of oops has been demonstrated to be both sound and complete for s5n, and it corresponds to the formal description of the proof method as outlined in section 2.2 of the same work. However, it has been found that the algorithm used by oops operates in exponential time in the worst case, whereas satisfiability for s5n is known to be PSPACE-complete. Nonetheless, we believe that the educational functionality offered by oops (see section 3) compensates for this drawback. Furthermore, the implementation of these features is not reliant on the specific proof algorithm used. Therefore, as future work, the current algorithm may be substituted with one that is in PSPACE.

Furthermore, the language allows for the input of variables as placeholders for either sub-formulas or agent identities, which is particularly useful in the definition of rules and allows for the creation of template formulas that can be instantiated in different ways through substitution.

In addition, the paper outlines the reasons for integrating oops with Lua and briefly describes how oops can be utilized through its Lua interface. All oops methods are encapsulated in the oops namespace, and the primary mode of interaction with oops through Lua is the theory concept, which represents a collection of formulas. The paper provides an example code for creating a theory and adding a formula to it.

Finally, the paper addresses the issues with existing proof tools related to platform dependence, aging dependencies, lack of maintenance, and difficult installation procedures. oops addresses these problems by being implemented in pure Java, which allows it to run on any operating system with a Java virtual machine. Additionally, oops is distributed as a zip file that includes all necessary dependencies, requiring no installation other than extracting the zip file and running the resulting oops.jar file, making it platform independent and easy to run.