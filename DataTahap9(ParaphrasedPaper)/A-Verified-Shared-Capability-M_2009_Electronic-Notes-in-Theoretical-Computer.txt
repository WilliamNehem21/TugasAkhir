This paper introduces an advanced access control model for the sel4 microkernel and extends an earlier formalization by Elkaduwe et al. The model incorporates non-determinism, explicit sharing of capability storage, and a delete operation for entities. The authors formally demonstrate that this new model can enforce system-wide security policies and authority confinement. By explicitly treating sharing in the abstract access control model, the refinement proof towards the sel4 implementation is notably simplified. The paper claims that this is the first machine-checked access control model to incorporate explicit sharing of authority.

The authors face challenges in proving refinement between the access control model and the operational specification due to the complexity introduced by features present in sel4 and other capability systems, such as non-determinism, entity deletion, and sharing of capability storage. They emphasize that explicitly modeling sharing and accounting for it during security analysis simplifies the process and benefits implementors of security monitors.

The paper also discusses the implications of shared capability storage on security analysis and presents a formal model of shared capability storage along with a security analysis. It highlights the importance of considering both de-jure rights conferred by capabilities and de-facto rights that involve the indirect flow of information through authorized channels. Moreover, the authors address the concept of isolation and compare it to non-interference proposed by Rushby, highlighting the differences and their focus in this formal model.

Overall, the paper aims to provide a comprehensive formal model and security analysis of shared capability storage while addressing the inherent complexities associated with implementing access control in the sel4 microkernel.