To ensure that the checking phase does not remove unused objects, we encountered another issue where the current rule may continue indefinitely without generating its output objects, even when input objects a and c are present, creating divergence. After verifying the presence of c, it is important to give precedence to the second alternative of the choice to ensure that the rule completes its operation if some object a is present. This type of precedence can be achieved through prioritized choice.

Furthermore, the encoding remains entirely modular and does not differentiate between catalysts and common objects; this distinction is only relevant before compile time for verifying the correctness of p system rules. The rationale for the increased priority will be clarified in the following section.