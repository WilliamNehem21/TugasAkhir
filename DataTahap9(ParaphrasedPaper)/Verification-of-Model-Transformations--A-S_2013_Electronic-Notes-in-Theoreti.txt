This academic paper explores the concept of model-driven engineering (MDE) in software development, where models are used to represent different views of the system being built. The paper emphasizes the importance of verifying models and model transformations to ensure the quality and reliability of products developed using the MDE paradigm. It presents a comprehensive review of the literature on the verification of model transformations, analyzing different components involved in the process. Furthermore, the paper introduces a problem-based approach to exemplify the aspects that can be verified in a model transformation and discusses the need for an integrated environment to address the diverse verification requirements.

The paper is structured as follows: it describes the review process and provides a quick introduction to model transformations and a running example. It then explores the different aspects of a transformation that need to be verified and reviews how these aspects are addressed in existing literature. The paper uses the running example to exemplify verification properties and concludes with some remarks and future work guidelines.

The authors followed a specific criterion for including papers in the review, analyzing their titles, abstracts, and keywords to determine whether they addressed the initial question of interest. Papers in both English and Spanish were considered, and the initial set of papers was refined by reading their full texts.

The paper also discusses the nature of models and the relationships between different types of models, metamodels, and metametamodels within the MDE ecosystem. It describes model-to-model transformations and their various characteristics, including bidirectional capabilities, multiple source and target models, rule application strategies, and differences in metamodel conformance.

Furthermore, the paper classifies the properties of interest that need to be addressed in the verification of model transformations into language-related and transformation-related properties. It discusses the computational and modeling nature of transformations as well as the challenges of ensuring properties such as total and deterministic behavior, preservation of execution semantics, and syntactic completeness.

The paper also delves into various verification strategies, including theorem proving, model checking, testing, static analysis, and the satisfaction of properties by construction. It highlights the difficulties in proving certain properties due to undecidable problems and proposes transformation contracts and dedicated tools as alternative verification approaches.

The conclusion emphasizes the need for diverse strategies for specifying and verifying model transformations, particularly when dealing with bidirectional and multi-model transformations. It also discusses the parallelism between MDE-built systems and traditional software systems and underscores the need for heterogeneous multi-logic specifications to address different aspects of systems. The paper suggests using institutions to represent metamodels, transformations, and properties in different logics, with the support of heterogeneous toolsets like Hets.

Overall, the paper provides a comprehensive overview of the state of the art in the verification of model transformations within the MDE paradigm and highlights the challenges and potential strategies for addressing verification requirements in this context.