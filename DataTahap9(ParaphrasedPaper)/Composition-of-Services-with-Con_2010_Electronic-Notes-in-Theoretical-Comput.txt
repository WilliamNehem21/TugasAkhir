Several recent studies have focused on employing finite automata-based models to tackle issues related to web services composition. In papers [18] and [17], the authors suggest a model that formally defines web services compositions expressed in BPEL through state transition systems featuring communicating and internal (unobservable) actions. This model was further enhanced in [ ,] by incorporating a knowledge base and in [ ] through the use of a theory. These methodologies were implemented in practical applications detailed in [24,12,11]. Additionally, in papers [1] and [21], web services are defined using PWL-S documents and modeled through guarded finite automata. A comparable approach is discussed in [ ], where web services are defined in BPEL. Furthermore, the authors in [ ] utilize input/output automata to model web services interfaces described in BPEL, OWL-S, and WSDL.