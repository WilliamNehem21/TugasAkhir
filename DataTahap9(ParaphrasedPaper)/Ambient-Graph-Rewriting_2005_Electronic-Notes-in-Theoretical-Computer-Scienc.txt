The paper presents a unified semantic framework for the calculus of mobile ambients, utilizing a graph rewrite system called synchronized hyperedge replacement (SHR) to model process interaction in a network environment. The framework integrates model checking techniques into the development of distributed programs and serves as a tool for designing and analyzing distributed systems. In particular, the paper introduces a slender version of SHR based on a single rule of parallel composition, reducing mathematical complexity while maintaining expressive power. The proposed version of SHR is used to encode both mobile ambients and distributed CCS (DCCS), and it is shown that these encodings are bisimulations.

Case studies are presented to demonstrate the encoding of mobile ambients and DCCS using the proposed version of SHR, with both models adopting a common recursive graph architecture called ambient graphs. The paper also discusses the graphical representation of local processes and location managers in DCCS, as well as the transition process performed by parent ambients in mobile ambients.

Furthermore, the paper describes the use of a visual SHR editor for designing system architectures graphically and translating them back into the original calculus. The editor interfaces with the Murphi rule generator, enabling a seamless cycle from system implementation to testing and back.