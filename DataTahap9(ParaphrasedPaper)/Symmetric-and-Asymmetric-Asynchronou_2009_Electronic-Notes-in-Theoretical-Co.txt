This paper explores various types of systems characterized by different asynchronous interaction patterns with the goal of achieving distributability, which refers to the ability to execute a system in spatially distributed locations that do not share a common clock. The system model employed in this study is based on petri nets. The detailed representation of concurrent systems and their component interactions in petri nets is the primary reason for selecting this model. Unlike an interleaving-based concurrency model where the system's representation does not explicitly exhibit synchronous or asynchronous interaction, a petri net provides enough detail to discern the presence of synchronous communication. This feature enables the examination of asynchronous communication without delving into the realm of composition operators.

When modeling a distributed system using petri nets, the inherent synchronous interaction concept in petri nets may pose challenges. To address this, the paper introduces a method of modeling asynchronous interaction by introducing silent transitions between transitions and their preplaces. The resulting net class is characterized, and the relationship between this class and other net classes is explored. The paper also introduces asymmetrically asynchronous transformations and provides upper and lower bounds for the resulting net class, relating it to other net classes. The study focuses on 1-safe net systems and partitions the set of transitions into observable and silent ones to represent unobservable behavior.

The paper discusses the firing rules for transitions in petri nets, emphasizing the avoidance of placing multiple tokens in the same place. Various assumptions regarding asynchronous interaction between transitions and their preplaces are examined, with a focus on the insertion of silent transitions to represent the time taken for the removal of tokens by transitions. The paper also explores free choice nets and their structural characteristics, which enable the implementation of systems asynchronously.

Furthermore, the paper introduces three different interaction patterns for asynchronous implementation of petri nets: fully asynchronous, symmetrically asynchronous, and asymmetrically asynchronous, achieved by inserting silent transitions according to the respective pattern. The pattern for asymmetric asynchrony is described as parametric. The paper also references previous work by Wolfgang Reisig, who introduced a class of systems utilizing buffers and developed a decision procedure for determining the liveness of the complete system.