There are various methods available for designing and implementing software systems, ranging from fully formal methods such as formal specification languages and refinement processes to entirely informal methods like jotting down design ideas on paper. The challenge lies in integrating user-centered design methods with formal methods to fully realize their benefits. This paper introduces a method for capturing the intentions behind informal design artifacts in a formal environment, and demonstrates several applications of this approach.

Separating the design and implementation of a graphical user interface (GUI) from the underlying system behavior is a common and practical approach. The development of user interface management systems (UIMS) based on this separation, exemplified by the Seeheim model, allows for different design techniques and approaches.

The paper introduces a formal way of describing informal design artifacts, called the presentation model, and provides examples of its use within a formal design context. It also demonstrates how this model can be extended with finite state machines to explore both the static and dynamic meanings of the designs.

Incorporating user-centered design processes within a formal software engineering context presents challenges due to the intentionally informal nature of the artifacts produced. The aim is to involve actual users in the design process, and the artifacts generated during such processes include whiteboard design sessions, textual narrative descriptions, task analysis models, user descriptions, and paper-based prototypes.

The integration of different languages and models within formal methods is a common practice, with the goal of leveraging the strengths of different methods as appropriate. This paper explores the integration of formal methods in GUI design, focusing on incorporating user-centered design methodologies into a formal process.

The presentation model is a formal model that describes informal design artifacts in terms of the widgets of the design and captures their meaning. It acts as a bridge between the informal design and the formal design process, enabling the formalization of the intended design.

The paper also presents an example of how the presentation model can be used to include the design of the UI in a formal refinement process. It emphasizes the importance of maintaining consistency throughout different parts of the interface and discusses the challenges of capturing dynamic changes in the UI using the presentation model.

To address the limitations of the static view provided by the presentation model, the paper proposes combining it with finite state machines to create a presentation and interaction model (PIM). This approach allows for the formalization of dynamic properties of the UI design.