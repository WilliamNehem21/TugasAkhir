The paper presents a denotational semantics for the UML 2.0 standard, focusing on control flow and data flow while omitting hierarchy, expansion nodes, and exception handling. The formalization helps identify areas where the standard constructs are challenging to formalize and demonstrates how the formal analysis can be utilized. The UML 2.0 has undergone significant improvements compared to UML 1.5, particularly with a reengineered metamodel that is cleaner, more complete, and more coherent in an object-oriented manner. The paper also introduces formal semantics for UML 2.0 activity diagrams using colored Petri nets, encompassing control flow, concurrency, and data flow, but excluding procedure call, exception handling, and expansion regions. The formalization enables the application of standard analysis techniques and tools for the verification and validation of UML activities. The preservation of the activity diagram's structure in the resulting Petri net facilitates easy mapping between activities and corresponding Petri nets, enabling visualization of activity executions. Additionally, the formal semantics have helped to identify several shortcomings in the UML 2.0 standard. Although efforts are underway to implement a tool supporting industrial case studies and to automate analysis techniques, the lack of true UML 2.0 tools is currently impeding progress. Nonetheless, the official adoption of the UML 2.0 standard is expected to alleviate this issue.