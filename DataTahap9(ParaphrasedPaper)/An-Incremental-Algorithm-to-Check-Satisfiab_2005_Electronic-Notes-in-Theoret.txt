The improvement of efficient SAT solvers in the past decade has significantly contributed to the success of BMC. These modern SAT solvers surpass the traditional DPLL procedure in various aspects, with particular focus on conflict analysis and clause recording. When a conflicting assignment is identified, it is scrutinized to identify a conflicting subset, from which a conflict-learned clause, also known as a conflict clause, is created and added to the SAT instance to prevent the exploration of fruitless areas of the search space. However, not all conflict clauses are retained; many SAT solvers periodically discard ineffective ones.

The paper discusses the applications of conflict analysis and clause recording in the context of BMC, where v represents the set of current state variables, w represents the set of combinational variables, i(v) represents the initial state predicate, and t(v, w, v') represents the transition relation. Furthermore, it presents techniques to identify objective-independent clauses and discusses the utility of conflict clauses dependent on the primary objective.

The first unique implication point (UIP) approach is discussed, which involves identifying a cut in the implication graph that separates the conflict node from the roots of the graph to obtain a conflict clause. Additionally, the paper outlines a method to identify conflict clauses solely based on the circuit structure and introduces a semantic criterion applied to small clauses that have failed the syntactic check based on dependency on the objective.

The paper also describes a distillation process to refine conflict clauses under the new objective, and discusses the advantages of this semantic approach, including the potential production of additional clauses and the improvement of the quality of conflict clauses. It also outlines the implementation of the clause forwarding techniques in the Circus framework and presents experimental results comparing non-incremental SAT to incremental SAT.

In the experimental setup, the paper outlines the creation of BMC instances for specific LTL properties from the Vis benchmark suite and the application of BDD sweeping to remove redundancy. The maximum number of literals of a clause that undergoes distillation is specified, and the number of forwarded objective-independent and objective-dependent clauses from distillation is discussed.