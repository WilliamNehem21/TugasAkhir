The distributed clean, abbreviated as d-clean, is a parallel system designed to coordinate functional programming tasks on a cluster using a high-level coordination language that is parameterized by functional programming computation nodes. This coordination model is flexible and can work with computations implemented in various programming languages. The d-box language, based on petri nets, serves as an intermediate level language in the d-clean system. Boxes, which calculate functions wrapped into nodes of the distributed computation graph, are compiled into clean programs and communicate via channels following established protocols for input and output channels. The coordination primitives determine the dataflow of the result on specified output channels, and their signature is inferred based on the type of the embedded clean expressions. The d-clean system emphasizes the evaluation and coordination of separate clean programs running on different computers in a cluster. It also utilizes distributed skeleton applications on clusters, a feature not covered in existing literature on parallel and distributed computations in clean. Furthermore, the system incorporates two coordination languages for dataflow manipulations on different layers of the distributed environment using middleware services.