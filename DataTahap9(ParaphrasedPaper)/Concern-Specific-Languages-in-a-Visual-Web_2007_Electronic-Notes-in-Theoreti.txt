This paper introduces a visual service creation environment (SCE) for web services, which facilitates the creation of composite web services and the modularization of crosscutting concerns. The SCE introduces two main concepts: services and composition templates. Composition templates provide abstract descriptions of reusable compositions with placeholders for services, which are verified for compatibility when mapped onto a composition template. The SCE also supports the modularization of crosscutting concerns using the AOP language "Padus" and several concern-specific languages. Aspects can be visually deployed onto target composition templates or services, triggering the weaving process.

Web services have gained popularity for integrating existing software in new environments, and basic web services can be composed to create more advanced functionality. Traditionally, manual glue-code was used to compose web services, but it became clear that dedicated workflow languages are more suitable for this purpose. The paper outlines the motivation for the SCE and presents its architecture, support for concern-specific languages, GUI, service composition, verification, deployment, and execution.

The SCE includes a repository of composition templates specified in WS-BPEL, where templates are instantiated by filling in placeholders with different services. The SCE also supports the modularization of crosscutting concerns through the "Padus" language, which introduces aspects and aspect deployments. Aspects are reusable descriptions of crosscutting concerns that contain pointcuts and advice, and the "Padus" technology employs a static weaver to process target WS-BPEL processes and generate new WS-BPEL processes containing the specified advice code.

The paper introduces "Kala," a concern-specific language for expressing data serializability in distributed environments, and discusses the design of concern-specific languages (CSLs) built on "Padus." The billing CSL is presented as an example, providing separate modules for different billing types and defining when billing should occur and what should be charged.

The paper also discusses the limitations of the current support for integrating concern-specific languages and visualizing pointcuts, and highlights the need for a more comprehensive solution based on existing work. Overall, the paper serves as an introduction to a high-level service creation environment for composing web services, emphasizing support for modularizing crosscutting concerns and concern-specific languages.