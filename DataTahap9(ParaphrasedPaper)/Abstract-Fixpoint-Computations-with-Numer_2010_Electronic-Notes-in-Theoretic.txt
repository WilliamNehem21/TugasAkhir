The paper is structured as follows: Section 2 demonstrates the application of acceleration methods to expedite fixpoint computation using a simple example. In Section 3, the theoretical foundation of the work is revisited, and the main theoretical contribution is presented in Section 4. Section 5 details early experiments conducted on various floating-point programs, illustrating the benefits of the approach, while Sections 6 and 7 discuss related works and future prospects.

In this section, we integrate acceleration methods with abstract fixpoint computation, aiming to minimize interference with the conventional iterative scheme. This approach enables seamless implementation with minimal adjustments in existing static analyzers.

Prior research in abstract interpretation-focused static analysis has primarily concentrated on defining new abstract domains or refining existing ones, with less emphasis on the abstract fixpoint computation. Early work by Cousot and Cousot explored diverse methods for defining widening operators, while Bourdoncle introduced different iteration strategies to reduce over-approximation induced by widening. These methods complement our technique, as elucidated in Section 4, where acceleration is advised to coincide with the control points chosen for widening and does not supplant standard widening due to the lack of guaranteed fixpoint computation termination. Nevertheless, acceleration methods substantially enhance widening by dynamically and autonomously identifying optimal thresholds.

Gopan and Reps incorporated the concept of conducting parallel computations of main iterates and a guide to indicate their trajectories within their guided static analysis framework. Their work aims to enhance the precision of fixpoint computation by generating a pilot value that navigates the state space using a restricted iteration function. Once the pilot value stabilizes, it is employed to accelerate the main iterates. In a similar vein, this pilot value corresponds to the value yi of Algorithm 1, but we refrain from modifying the iteration function, unlike in their approach.

The authors express gratitude to X. Allamigeon and E. Goubault for their valuable discussions and insightful advice, as well as to S. Zennou for her technical assistance with the analyzer based on Newspeak. The authors also extend their thanks to the anonymous reviewers for their helpful comments and suggestions.