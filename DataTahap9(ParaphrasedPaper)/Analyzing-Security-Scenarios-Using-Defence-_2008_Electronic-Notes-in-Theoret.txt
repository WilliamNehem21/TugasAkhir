This academic paper introduces the concept of cp-defence trees enriched with conditional preferences, leading to the creation of a new structure termed cp-defence tree. The paper explores the transformation of a cp-defence tree with preferences among attacks and countermeasures into an answer set optimization (aso) program. The aso program combines the programs associated with each branch of a cp-defence tree to represent the overall scenario. An implementation is described that selects the optimal set of countermeasures to mitigate vulnerabilities by computing the optimal answer set of the corresponding aso program.

The paper discusses the modeling of preferences among countermeasures and the dependencies between attacks and countermeasures using an answer set optimization (aso) program. The syntactic composition of the branch is achieved through the and and or composition of aso programs, ensuring that the semantics align with the intended meaning. The resulting aso program semantics provides ordered answer sets representing the sequences of countermeasures to be adopted. To address ordered attacks, a corresponding rank (meta-preferences) is introduced among the preference rules of an aso program. The use of ranked aso programs resolves the issue of cycles and prioritizes the adoption of countermeasures covering the most dangerous attacks.

The paper also presents the definition of a new order, denoted as (dx, >x), over the set dx representing sets of countermeasures covering all attacks. The order defines preferences among sets of countermeasures based on the existence of a permutation.

The paper highlights the use of aso programs to represent cp-defence trees and reason about them, emphasizing the use of preference rules to express preference relations among combinations of atoms and the introduction of a preference order among these rules. The aso semantics provide a straightforward way to model cp-defence trees and are able to express preferences over countermeasures with respect to attacks. Additionally, the aso approach resolves cycles in complex cp-nets, which the earlier approach using cp-nets struggled to handle. The proposed methodology is tested with a realistic example and implemented using the cpdt-solver.

The paper also considers an alternative approach using cr-prolog, a knowledge representation language based on answer set semantics enhanced with consistency-restoring rules (cr-rules). While both cr-prolog and aso implementation can be used for the discussed goal, the paper favors the latter due to the ability to specify a preference order among cr-rules but not among atoms in cr-prolog.