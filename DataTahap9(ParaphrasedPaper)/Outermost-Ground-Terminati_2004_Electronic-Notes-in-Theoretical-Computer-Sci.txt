We present a novel semi-automatic inductive approach for demonstrating the termination of outermost rewriting on ground term algebras. Our method leverages an abstraction mechanism to schematize the normalization of subterms and narrowing to schematize reductions on ground terms. Unlike existing methods, our approach does not necessitate a pre-defined induction ordering but rather derives it as a solution to constraints introduced during the proof. Notably, our method is applicable to systems that do not terminate under standard or lazy strategies.

In the context of term rewriting systems and query evaluation, the need for specific tools to prove termination under particular reduction strategies is evident. While existing results are scarce in this domain, the demand for such tools remains substantial. Notably, current methods are limited to the innermost strategy, context-sensitive rewriting, and general local strategies.

Our termination proof method for outermost rewriting on ground terms relies on explicit induction on the termination property. The crux of this approach involves utilizing induction on the termination property to establish that any given term terminates, i.e., there are no infinite derivation chains originating from that term. We rely on a noetherian ordering on terms to support the induction principle. This differs from traditional induction proofs, as we do not need to define the ordering upfront; instead, we incrementally verify the satisfiability of ordering constraints along the termination proof. By harnessing the power of induction, the resulting constraints are often straightforward to solve.

Our method is semi-automatic, capable of succeeding in establishing outermost termination of a given term rewriting system or, alternatively, stopping with failure or divergence, in which case no conclusion can be drawn about termination. Constraint solving can be managed internally or delegated to the user or external automatic constraint solvers.

The proof process involves simulating derivation trees using proof trees and harnesses the concepts of narrowing and abstraction to represent outermost rewriting possibilities and the normalization of subterms, respectively. Each node in the proof tree represents a current term with variables and a set of ground substitutions captured by a constraint resulting from the successive unifiers used for narrowing. Notably, the abstracting step establishes that every ground instance of a term's outermost termination, with failure to abstract leading to another narrowing step.

In conclusion, our method achieves success when the strategy terminates due to the exhaustion of applicable rules and when all terminal states of proof trees have an empty set of terms. The strategy may also stop with failure when rules do not apply to states with non-empty sets of terms, or it may not terminate if an infinite number of rule applications occur on a reference term. In these latter cases, no conclusion can be drawn about termination.

To automate our proof principle, we need to ensure that ordering constraints are satisfied. In many examples, satisfying ordering constraints is straightforward, as they only express the subterm property. In cases where additional support is required, an ordering constraint solver, such as CIME, can be utilized.

Reference:
M. Clavel, S. Eker, P. Lincoln, and J. Meseguer. "Principles of Maude." In J. Meseguer (Ed.), Proceedings of the 1st International Workshop on Rewriting Logic and Its Applications, Volume 5 of Electronic Notes in Theoretical Computer Science, Asilomar, Pacific Grove, CA, USA, September 1996. North Holland.