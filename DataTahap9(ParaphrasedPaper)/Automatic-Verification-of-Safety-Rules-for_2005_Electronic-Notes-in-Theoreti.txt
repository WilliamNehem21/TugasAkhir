This paper discusses an initiative to evaluate the practicality of employing model checking for the software that regulates a portion of an operational subway system. Due to the potential complexity of the software and the need to partition a subway track into segments, each with its own unique safety-related controller, the company developing the controller has established a verification and validation (V&V) process involving inspection and testing at defined phases to mitigate the risk of delivering an error-prone implementation.

The authors advocate for the implementation of an automated verification process for such development for several reasons. Firstly, addressing software errors becomes increasingly costly as a project advances, and employing model checking soon after the software is ready for inspection could help identify errors early, resulting in cost savings. Secondly, automatic verification could enhance the quality of the final product by uncovering subtle errors that might otherwise go undetected. Thirdly, the verification activities outlined could potentially reduce the amount of manual effort required compared to other development activities. Finally, much of the work done for the initial software release could be reused in subsequent releases.

The paper also discusses research on the automatic verification of railway control software, noting that model checking and formalism-based techniques have been applied to address this kind of problem. The subsequent sections of the paper describe the system to be verified, formalisms related to bounded model checking (BMC) and the use of induction proofs, experimentation and results, comparison with other approaches, and concluding remarks.

The authors discuss the challenges associated with the state explosion problem in model checking and examine various model checking techniques, highlighting the advantages of bounded model checking (BMC) over unbounded model checking.

The paper provides examples of track-circuit characteristics and the traversal of speed-codes by transmitters. It also presents discussions on the verification of safety rules associated with the observable behavior of the track and the application of inductive proof schemes to verify these rules.

The authors then compare their experimental results with those reported in the literature and conclude that an automatic verification process based on model checking, as described in the paper, seems feasible for the specific kind of subway control software examined.