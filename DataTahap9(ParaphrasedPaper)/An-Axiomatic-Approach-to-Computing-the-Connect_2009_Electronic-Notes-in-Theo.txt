This paper introduces a consolidated, axiomatic methodology for demonstrating lower bounds for the k-set agreement problem in both synchronous and asynchronous message-passing models. The proof involves creating a set of attainable states, establishing the high connectivity of these states, and subsequently invoking a well-established topological result indicating that high connectivity precludes set agreement. The set of attainable states is constructed iteratively using a defined round operator, and the proof of connectivity is an inductive argument based on this iterative construction and the basic properties of the round operator.

The study of set agreement, particularly consensus, has been explored in synchronous and asynchronous models of computation, typically in separate contexts. Previous proofs for these models seemed to have little in common, as evidenced by the organization of a prominent textbook in the field, where the first section focuses on synchronous systems and the second on asynchronous systems. Recent research has begun to unveil shared features and structures in both models. However, these findings primarily exist in the form of transformations between models or proofs with similar structures in both models. This paper describes an abstract model that encompasses both models, identifying essential properties necessary to establish consensus impossibility results. Transitioning from consensus to set agreement entails a significant leap in complexity, as it involves dealing with higher-dimensional topology instead of just graphs, as established by previous papers. This paper's contribution lies in presenting a novel axiomatic approach where set consensus impossibility proofs can be uniformly derived for both synchronous and asynchronous models.

The set of attainable states may change from round to round. In each round, non-faulty processors broadcast their states to all processors, including the faulty ones, while each faulty processor broadcasts its state to a subset of the processors and may omit sending to others. Processors never crash. It can be demonstrated that lower bounds for k-set agreement in this omission failure model extend to the standard asynchronous crash-failure model.

Given a simplex "s" and a set "v," the pseudosphere "p(s, v)" is defined as the set of labelings of "s" with elements of "v" (termed a pseudosphere due to its topological properties akin to those of a sphere). The face "s" is denoted as the base simplex of the pseudosphere, and for a simplex "t" of a pseudosphere "p(s, v)," the base simplex "s" of the pseudosphere is defined as "base(t)."

The input complex for k-set agreement is "p(s, v)," the pseudosphere where each vertex is labeled with an input from a set "v", where |v| > k. The set of all reachable states of a protocol "p" with initial states "p(s, v)" is termed the protocol complex "c = c(p(s, v))." The fundamental connection between k-set agreement and connectivity is expressed in a theorem.

The interpretation of simplicial operators varies across models. In the synchronous message-passing model, "l" represents the number of processors that can crash in each round, while in the asynchronous model, "l" signifies the number of processors that remain partially silent in each round.

The notation "qkql(s)" denotes the composition of "qk" and "ql" applied to "s," "qr(s)" represents the "r"-fold composition of "ql" applied to "s," and "qr(s)" denotes the simplicial complex induced by the set "qr(s)" (i.e., closed under containment).

Changes in the round operators can occur from round to round. Faulty processors do not crash but may omit sending messages. In each round, all non-faulty processors transmit their states to all the processors, including the faulty ones, while the faulty processors send messages to an arbitrary subset of processors, possibly none.

The difference between the synchronous and asynchronous round operators lies in the fact that every pseudosphere has the same base simplex "s" in the definition of the asynchronous operator. It is notable that "s" and every simplex in "Al(s)" have the same dimension. With the asynchronous round operator, every processor in "s" (not just those labeling a face "f" of "s") is labeled with states that include all non-faulty processors and some subset of faulty processors.