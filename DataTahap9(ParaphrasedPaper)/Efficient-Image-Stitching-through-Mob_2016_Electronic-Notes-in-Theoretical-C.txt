The act of capturing photographs has become a ubiquitous feature of mobile devices. The quality of camera technology in mobile phones has significantly improved in recent years, allowing users to not only document cherished moments but also scan documents. In scenarios where a single image does not suffice to capture the entire scene, multiple images may be taken and subsequently stitched together to create a panoramic or composite view. This process, commonly referred to as image stitching, has a long history in computer vision and has found application in creating panoramic views, image stabilization, and combining satellite images for navigation.

This paper outlines two main categories of methods for automatic image stitching: direct and feature-based methods. Direct methods involve using all image data to minimize pixel-to-pixel dissimilarities, while feature-based methods entail extracting and matching features from the images to automatically detect correlations in overlapping areas. The paper proposes a prototype for an image stitching application that utilizes mobile offloading, employing a simple feature-based approach in five distinct steps: feature-point detection, description, matching, homography estimation, and warping and projection. The focus is on reducing the complexity of image stitching for execution on mobile devices, although the implementation does not cover certain post-processing elements such as blending or feathering.

To effectively stitch images, different methods for finding corresponding points and matching features are explored. In addition, the paper delves into strategies for optimizing the image stitching process, including reducing data transmission time and memory usage. The results of experiments conducted to test various offloading methods suggest that sending computational tasks to a powerful remote server, rather than executing them solely on the mobile device, leads to improved total execution time. Moreover, the paper highlights the potential for further enhancements, such as dynamic selection of offloading methods based on network speed and image characteristics, as well as the integration of local restart methods.

In conclusion, the paper discusses the benefits and tradeoffs associated with different offloading methods for image stitching, emphasizing the value of leveraging remote resources to enhance the overall execution time and user experience. It also points out areas for future development and improvement, including the potential for parallelization and the integration of additional post-processing techniques to refine the stitching results.