The increasing complexity of hardware and software systems has heightened the need for reliability and correctness, particularly in high-integrity and safety-critical domains. A promising approach to achieving these goals involves the use of formal specification and verification. However, due to the extensive range of possible scenarios resulting from the concurrent interaction of various components, tool support becomes crucial. This paper focuses on enhancing tool support for refinement model checking using the process algebra CSP and its automatic tool FDR.

The use of CSP and FDR for formal verification has gained popularity in both academia and industry due to the high level of automation it offers compared to other formal verification techniques. However, users often face challenges in writing appropriate CSP for FDR, which often involves abstractions towards bounded models. The lack of comprehensive guidance on this issue motivates the development of tools to aid users in generating more efficient CSP code and diagnosing execution errors.

The paper introduces a new interface, the FDR Explorer API, which extends existing user interface APIs and provides enhanced control over debugging information and investigation of the LTS data structure used to represent compiled CSP specifications. This interface enables users to explore witness information at different points of the LTS and consider more space-efficient representations of CSP processes, features not available in the original FDR interfaces. The API also facilitates integration with visualisation tools for CSP, paving the way for bidirectional translation between graph notation and CSP specifications for refinement checks.

In summary, the paper presents a significant contribution by addressing the need for improved tool support in formal verification through the development of the FDR Explorer API, which provides advanced capabilities for investigating and optimizing CSP specifications and their refinement checks.