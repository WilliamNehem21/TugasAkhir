India's economy is heavily reliant on the agricultural sector, which accounts for 16% of the country's gross domestic product (GDP) and 10% of total exports. Approximately 75% of the population in India depends directly or indirectly on agriculture. Therefore, the production of disease-free, high-quality crops is crucial for the growth of the nation's economy.

Convolutional neural networks (CNNs) and convolutional autoencoders (CAEs) are deep learning techniques commonly used in computer vision applications due to their effectiveness in processing image data. While CNNs are employed for classifying input images, CAEs are utilized for efficiently reducing the dimensionality of images.

This paper proposes a new hybrid model for automatic plant disease detection based on CAE and CNN with fewer training parameters compared to existing state-of-the-art systems. The use of CAE in the proposed model reduces the number of training parameters, and it has not been previously introduced in any existing research. The hybrid model is tested for detecting bacterial spot disease in peach plants caused by Xanthomonas campestris and can be extended to detect other plant diseases.

The paper is divided into four sections: the second section discusses various state-of-the-art systems for automatic plant disease detection, the third section describes the material and methods used to design the proposed hybrid model, the fourth section presents the results of using the model to detect bacterial spot disease in peach plants, and the fifth section concludes the paper.

Padding is employed to expand the input matrix for the convolution operation, ensuring that the size of the input matrix does not decrease after the operation and that elements on the edges and corners are utilized. Two types of padding, namely valid padding and same padding, are discussed, and their functions are explained.

The paper also discusses the structure of the decoding network, the calculation of the reconstruction loss, and the training of the autoencoder using the backpropagation algorithm to minimize the reconstruction loss.

The experiments detailed in the paper were performed using the Jupyter notebook, an integrated development environment for the Python programming language. The train_test_split function of the scikit-learn API of Python was used to create the training and testing datasets, and the Keras API was utilized to create and train the model.

The proposed model has two main use cases: it can be used for automatic plant disease detection on low-computational power systems and smartphones, reducing latency and providing data privacy to farmers.