We employed the use of the proof assistant Abella for this task due to our familiarity with the tool. The present encoding does not rely on any exclusive features of Abella, and as such, it can be replicated in any other proof assistant that supports induction. Furthermore, we have implemented a multiset library and some of the meta-theorems with proofs in Coq.

In the first case, we are left with the obligation plus z z z, which is easily proven by the first clause of plus. In the second case, we arrive at x = s x1, where x1 is a new variable for which we know is_nat x1. Our goal is now plus(s x1) z(s x1), which can be unfolded using the second clause of plus to reduce it to plus x1 z x1. Hence, we are tasked with proving plus x1 z x1 from the assumption is_nat x1.

The annotation "@" indicates that the size of the instance is such that every annotated instance is strictly smaller. Unfolding the assumption is_nat x@ reduces its size strictly, such that in the case of its second definitional clause, a new assumption is_nat x1* (where x = s x1) is obtained. This can then be utilized with the induction hypothesis to derive plus x1 z x1, which concludes the proof.

In this instance, we aim to induct using the lexicographic ordering of the sizes of is_nat x and is_nat y, wherein the inductive hypothesis may be used if the size of is_nat x is strictly smaller, stays the same, and the size of is_nat y is strictly smaller. In Abella, this is expressed using the following invocation: where... in each case there exists k, is_nat k /\ ack x y k. The hypothesis ih1 indicates that is_nat x* is strictly smaller than is_nat x@, a concept already encountered. On the other hand, the hypothesis ih2 refers to is_nat y**, which is strictly smaller than is_nat y@@. This hypothesis also includes an assumption is_nat y*.

The proof of plus_is involves a straightforward induction on plus x y z. It should be noted that more is_nat conjuncts could have been added in the bodies of the definitional clauses, although the above choice suffices. We have chosen to modify the natural definitional clauses as minimally as possible to yield the necessary inversion lemmas.