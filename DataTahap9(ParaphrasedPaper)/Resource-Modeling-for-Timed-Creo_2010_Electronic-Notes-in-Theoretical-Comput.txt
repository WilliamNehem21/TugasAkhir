This paper discusses the semantics of an extended version of the Creol modeling language, which incorporates timing and resource constraints. Creol is an object-oriented modeling language that is particularly suitable for modeling distributed systems, but its original computation model assumes infinite memory and parallelism within objects. The paper presents an extension to Creol that introduces the concept of resource constraints, along with a method for quantitatively evaluating the impact of these constraints on a given model. The paper also explores the potential implications of introducing resource constraints on message delivery semantics and provides a case study on modeling a biomedical sensor network.

The paper is structured as follows: Section 2 provides an overview of the key features of the Creol language for modeling distributed systems, while Section 3 explains the alterations made to the Creol semantics and interpreter to accommodate resource constraints. Section 4 presents an extended example and shares insights gained from incorporating resource constraints into a larger case study. Section 5 reviews related work in this area, and Section 6 concludes the paper.

The base Creol language involves objects executing their own control threads, which interleave active and reactive behaviors. Method calls, including self-calls, create new processes within the called object, with at most one active process per object, providing exclusive access to the object's attributes. The paper also outlines a recent Creol extension for real-time constraints, which includes a global clock accessible to all objects, allowing the specification of time-related properties in a shift-invariant manner.

Furthermore, the implementation approach for adapting the semantics and execution engine of Creol to accommodate resource constraints is discussed, addressing the need to model operating constraints of real systems, particularly for small embedded systems. The section also describes the modeling of a sensor network as a case study, which demonstrates the applicability of the proposed approach in the context of the Credo project.

The paper emphasizes the relevance of modeling bounded computing resources, particularly in the context of micro-controllers with limited call depth and memory constraints. The work also highlights the value of expressing resource constraints at the modeling level and validating the model through simulation, as well as providing a unified approach to modeling call stack depth and restricted parallelism.

Ultimately, the paper contributes to the modeling of systems at a lower level of abstraction using the Creol language, offering insights into the modeling of resource constraints in distributed embedded systems and addressing gaps in related work on timing aspects of wireless sensors and resource constraints.