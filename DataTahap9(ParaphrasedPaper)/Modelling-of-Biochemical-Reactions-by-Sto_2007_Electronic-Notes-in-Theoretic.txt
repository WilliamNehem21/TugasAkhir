Lately, techniques used for formally describing systems, such as process algebras and petri nets, which originally came from the field of computer science, have been employed in the modeling of intricate biological systems. These approaches provide a way to logically reason about molecular networks in a modular manner, allowing for models to remain open and enable incremental modifications. Various methods are available to represent models at different levels of abstraction, thereby reducing their size, albeit potentially at the cost of losing some information. The semantics of these techniques automatically generate corresponding low-level descriptions, such as transition systems, and high-level language representations enable the direct application of stochastic simulation techniques. Furthermore, high-level languages offer the potential to harness the regular structure of biological systems during analysis.

In process calculi, a conventional approach for decomposing a network of biochemical reactions into components involves representing each molecule as a process that acts as a finite state machine, describing the possible behaviors and conformations of the molecule. For instance, an enzyme molecule could be in a free state, capable of binding to a specific substrate molecule, or in a bound state within a complex that can dissociate. Additionally, the molecule can degenerate, resulting in its state machine reaching a deadlock state. Interactions between molecules are modeled through parallel synchronization of processes or through the use of channels for process communication. Information about the current population of a species is indirectly encoded, leading to challenges in quantitative analysis, particularly when considering reaction rates that determine the speed of reactions and depend on substrate populations.

The paper is structured as follows. Section 2 provides some preliminary definitions related to the tensor product, while section 3 formally describes the underlying model. The SAN representation is derived in section 4, and finally, section 5 concludes the paper and outlines directions for further research.

The system transitions from one state to another through a set of transitions that are associated with events, i.e., chemical reactions. The temporal interaction among large numbers of molecules is of interest for understanding the functional activity of the network. Following common chemical kinetics, each transition is associated with a rate with units of reciprocal time, leading to a representation in terms of a continuous-time Markov chain (CTMC), a stochastic process with a discrete state space where the future evolution of the process depends only on the current state (and not on the process history or the current time instant).

The generator matrix Q for a network of biochemical reactions is typically sparse, as each state has at most a limited number of transitions. All row sums are zero, and the negative exit rates appear on the main diagonal. This representation lends itself to a mathematical treatment in terms of matrix operations, which is advantageous for the implementation of analysis algorithms and the definition of composition operations that correspond to operators of a specific matrix algebra (as discussed in section 4).

A Stochastic Automata Network (SAN) comprises individual stochastic automata operating more or less independently of each other. The approach involves constructing an automaton for each chemical species to track the number of corresponding molecules. The rates at which each automaton increments its counter are localized, constituting the multiplicative factor contributed by the corresponding species to the overall reaction rate.

In the context of CTMCs, the generator matrix Q of the underlying model can be expressed based on a set of reactions and associated chemical species. The SAN framework ensures a modular design process similar to that provided by process calculi. The discrete quantities of interest, i.e., the respective populations of chemical species, can be directly extracted from the local states of the automata. The transition matrix of the underlying stochastic model is not explicitly generated but is implicitly represented as a Kronecker product of (smaller) component matrices. The appeal of this framework lies in maintaining a compact representation, even as the number of states of the underlying model grows, and in reflecting the structure of the network of biochemical reactions in the SAN description.

Various numerical and simulative analysis algorithms exist for solving SANs. Of particular interest are techniques that utilize decision diagrams, capitalizing on the sparsity of the component matrices for systems considered in this paper. As part of future research, case studies are planned using tools that support Kronecker-based representations to analyze gene expression and cell signaling.