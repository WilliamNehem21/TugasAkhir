The paper describes an approach to identifying and explaining defects like dead and false optional features in software product lines. The proposed method uses an ontological rule-based approach to analyze feature models and explain the causes of defects in natural language, aiming to help modelers correct these defects. The paper includes a preliminary evaluation of the proposed approach on 31 feature models, demonstrating its effectiveness, accuracy, and scalability to handle feature models with up to 150 features.

Software product lines (SPL) consist of related software systems with common and variable functions, and the paper highlights the benefits of software product line engineering practices, such as reduced time to market, increased asset reuse, and improved software quality. Feature models (FMs) are commonly used to represent the combinations of features that software products can have within an SPL. However, creating feature models that accurately represent the intended domain is challenging, and defects may be unintentionally introduced during the construction of feature models.

The paper identifies dead and false optional features as two types of defects related to the semantics of feature models. Dead features are those that cannot appear in any product of the product line, while false optional features are declared as optional but appear in all products. The paper suggests that addressing these defects is crucial for effective feature model verification methods in an industry context.

To achieve this goal, the paper proposes an ontological rule-based approach to analyze feature models and identify dead and false optional features, as well as their causes. The approach formalizes rules based on experience and uses ontology classes and properties to represent the feature model meta-model. The paper also describes the implementation details and evaluation of the approach, as well as a comparison with related research in the field.

The proposed approach is illustrated using a feature model ontology and an explanation framework to identify dead and false optional features in feature models and provide explanations for these defects in natural language. The framework utilizes rules to detect these features and uses an explanation generator to fill in the corresponding explanations based on the identified causes.

The paper also discusses the implementation details of the approach, including the use of a transformer component to populate the feature model ontology with information from the analyzed feature model. The proposed approach is evaluated through manual testing, and the results indicate that the approach is effective in identifying dead and false optional features without generating false positives.

The paper compares the proposed approach with an existing automated method for identifying and explaining defects in feature models. The comparison highlights the strengths and limitations of both approaches and emphasizes the innovative aspects of the proposed rule-based approach, particularly its ability to provide natural language explanations for defects and its extensibility for future improvements.

In conclusion, the paper presents an ontological rule-based approach for analyzing dead and false optional features in feature models and providing explanations for these defects in natural language. The approach is seen as an innovative alternative to existing methods and holds potential for future extensions to address additional cases of defects in feature models.