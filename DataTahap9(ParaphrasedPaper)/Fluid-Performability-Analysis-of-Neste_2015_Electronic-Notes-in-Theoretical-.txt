The concept of entity description through an automaton is a structural hierarchical nesting, not a mere abstraction to conceal details, as seen in UML state machines. Due to the organizational complexity of such systems, predicting their behavior can be challenging, necessitating a thorough investigation of their performance and reliability prior to deployment. When formally reasoning about these systems using reactive models based on discrete state-space representation, the problem size grows rapidly with the number of components, rendering the analysis impractical in reality.

Previous efforts to model hierarchically organized software systems using nested Markov models have encountered substantial computational costs due to layering and large multiplicities. Some techniques, such as using symmetries to exploit Markov chain properties, have been attempted, but have not fully addressed the issue. For example, a hierarchical model expressing specific classes of stochastic Petri nets and queueing networks has been proposed by Buchholz, limited only to two levels of nesting. Similarly, Lanus and Trivedi have explored a class of hierarchical Markov models capable of partitioning the states of automata to construct a reduced model preserving steady-state reward measures, yet the size of the continuous-time Markov chain state space remains dependent, potentially growing exponentially in the worst-case scenario based on the number of reduced automata.

The paper elaborates on a Markov model of systems of systems, supported by a simple example illustrating the main definitions. It discusses the fluid approximation, presents the result of ordinary differential equation (ODE) symmetry reduction, and employs a case study of a performability model for a hierarchical distributed computing system to provide extensive numerical validation, considering the accuracy of the fluid approximation and its computational advantage over stochastic analysis. Finally, the paper concludes by summarizing the findings.

The structure of a system of systems model is described, where a prototype agent is outlined for each type of agent within each level of the hierarchy. These agent classes are then instantiated to specify the number of agent instances for each class in the system. The hierarchy is organized into a tree with nodes, which describe the hierarchical organization of the classes. Events specify which automata are affected by synchronization and their speed but do not detail the actions of their child nodes, which is captured by the causal map defining how the transition of a parent automaton impacts its child automata.

Directions for future work are outlined, including the potential applicability of the model to biological processes, the extension of lumpability to higher-order moment approximations, and the investigation of convergence results for nested automata models by studying scaling of replica sizes to reduce approximation error.