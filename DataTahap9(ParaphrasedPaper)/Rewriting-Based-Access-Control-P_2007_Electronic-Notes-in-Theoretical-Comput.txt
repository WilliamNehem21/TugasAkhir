Term rewriting has established itself as a paradigm for specifying and prototyping systems, and has been found to be valuable in fields such as theorem proving, program transformation, and algebraic specification. Its formal background enables rapid prototyping and verification of various systems in practical scenarios. In the context of computer security, term rewriting has proven successful in aiding reasoning about certain aspects of security, particularly in the verification of security protocols.

Certain foundational access control models rely on modified versions of the access control matrix. For instance, in military security policies, confidentiality levels are added to subjects and objects. The fixed security policy dictates that a subject cannot write to an object with a lower security level, nor read from objects with higher security levels, following a "no reads-up, no writes-down" approach. Although the access control matrix supports several formalizations of access control policies, it is not suitable for capturing more dynamic policies that depend on factors such as time, location, and other attributes of the policy environment.

In a specific example pertaining to a medical application, a signature is utilized to represent a patient, with the patient's details organized in a particular order. A suggestion is made for a refinement discipline for policy specification, wherein verification steps for essential properties are undertaken prior to enforcing a policy. The desired properties for rewriting-based policies are then discussed in the subsequent section.

It is important to note that policy combination may lead to issues, as termination is not a modular property. Consequently, combining the sets of rules of two terminating term rewriting systems may not necessarily result in a terminating system. While there are favorable outcomes related to combining term rewriting systems, these typically assume that the signatures of the composed systems are disjoint. Further exploration into the modularity of various properties of term rewriting systems is available in a survey.

Taking the consistency problem under policy composition as an example, it is acknowledged that access control policies based on logics can maintain this property by limiting the form of the rules. Conversely, rewriting-based approaches can benefit from established results concerning the modularity of the confluence property. Furthermore, certain necessary conditions under which the termination of term rewriting systems is preserved are known, making rewriting an attractive approach for declaratively defining policies.

The paper has introduced a formalization for access control policies using term rewriting, resulting in a language that can express rules capturing dynamic policy conditions, offering a flexible means of encoding authorizations. Specifications of access control policies written according to this proposal can facilitate the rapid prototyping of policies, given the availability of efficient implementations of term rewriting systems. Additionally, the established correspondence between the properties of policies, such as consistency, and those of term rewriting systems allows for reasoning about key access control policy properties.