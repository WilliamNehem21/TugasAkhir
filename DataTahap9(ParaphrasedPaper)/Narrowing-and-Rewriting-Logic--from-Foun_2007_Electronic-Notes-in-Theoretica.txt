Narrowing is a technique that differs from traditional rewriting by unifying at non-variable positions. The essential concept behind this approach is to represent the transition relation between terms symbolically as a narrowing relation between terms. Specifically, narrowing involves instantiating the variables in a term using a b-unifier to enable rewriting modulo b with a given rule and a term position.

The narrowing relation on terms can be extended to reachability goals by narrowing only the left-hand sides of the goals, while the right-hand sides accumulate substitutions. The objective is to iteratively narrow the left-hand sides until each left-hand side unifies with the corresponding right-hand side. The composition of the unifier with all the substitutions generated (in reverse order) provides a solution to the goal.

While this general procedure offers weak completeness, effective narrowing strategies are needed to reduce the search space by expanding only relevant parts of the narrowing tree. This issue is discussed in section 6.2.

A backward narrowing strategy is defined to discard any protocol state in which the intruder needs to learn a term in the grammar l, as this would result in a useless backward search path. Further details are provided in section 7.1.

Verification of many security protocol properties can be formulated as solving reachability problems. For example, verifying the secrecy property of a protocol involves checking whether the protocol can reach a state where an intruder has discovered a data item meant to be a secret. In this section, we demonstrate how the strong completeness of narrowing for topmost rewrite theories, combined with the grammar-based strategy explained in section 6.2.2, can be utilized to create a generic and complete procedure for analyzing such security properties based on algebraic properties of the cryptographic functions.

Moreover, a specialized program can be derived from the resultants using a mapping from terms to terms to simplify the resulting program. This work has implications for practical applications, as efficient narrowing strategies such as natural narrowing can mitigate combinatorial explosions, a significant concern in practical applications. Additionally, this approach is more broadly applicable to rewrite theories with non-functional semantics, an area where previous techniques have not been extensively applied. Finally, the use of this approach can lead to smaller and more effective specialized programs.

The example below illustrates how partially evaluating programs using more effective narrowing strategies can result in smaller and more effective specialized programs, as demonstrated recently using the needed narrowing strategy. This suggests that any narrowing strategy performing better than others can yield better specialized programs, subject to certain restrictions not discussed here.