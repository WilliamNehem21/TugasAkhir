This paper discusses online scheduling algorithms for jobs with deadlines on a single processor, focusing on the performance guarantee of the earliest-deadline-first strategy (EDF) in relation to other strategies. The authors examine the potential for improving the competitiveness of online algorithms by providing additional resources or a faster processor. They investigate recent advances that have demonstrated the potential for achieving competitiveness better than the standard 1-competitive algorithms, particularly in the context of EDF with additional resources.

The study evaluates online scheduling algorithms for jobs with deadlines on a processor that allows preemption. The authors measure the performance of these algorithms by the total work or value of jobs completed by their deadlines. They note that, traditionally, no online scheduling algorithm can be 1-competitive unless the system is underloaded. Recent research, however, has shown that with a faster processor or extra resources, some online algorithms can significantly improve their competitiveness or even achieve 1-competitive performance.

The paper delves into the concept of competitiveness and explores how resource augmentation or extra-resource analysis can enhance the performance guarantee of online schedulers. It reviews previous studies that have demonstrated improved competitiveness with a moderately faster processor and shows examples of algorithms that achieve 1-competitiveness with additional resources. The authors also discuss the concept of aggressiveness, where an algorithm is considered c-aggressive if it is c-competitive, and they explore the potential for achieving higher degrees of aggressiveness.

The paper provides an analysis of the EDF strategy, both with and without admission control. It explains how these strategies work and examines their performance in scheduling jobs with deadlines. The authors present the concept of aggressiveness in the context of EDF with admission control, and they propose an algorithm that decides at release time. The paper concludes by highlighting open problems related to aggressiveness and expressing an interest in further study, particularly in the context of multiprocessor scheduling.