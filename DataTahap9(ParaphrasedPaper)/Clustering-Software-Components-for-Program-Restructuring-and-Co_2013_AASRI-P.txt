The practice of component-based software development has gained significant practical importance in the field of software engineering, drawing attention from both researchers and industry professionals. An important goal for researchers is to find efficient methods for software reuse, and one way of achieving this is through clustering, which involves grouping similar components together to reduce the search space and retrieval time. In this study, we propose a new approach for clustering documents, text files, or software components using a novel similarity function called the hybrid XOR function. By applying this function, we construct a similarity matrix for a given set of documents or components, and then design an algorithm for clustering based on this matrix. Unlike other clustering algorithms that predefine the count of clusters, our algorithm dynamically forms clusters based on the input similarity matrix. The output of our approach is a set of highly cohesive pattern groups or documents, and it can be used for document clustering or software component clustering with simple computational logic and efficient processing.

The resulting clusters can be used for decision-making in selecting software components or patterns. One important characteristic of clustering is that patterns within the same cluster share common properties, while those in different clusters are dissimilar. In the context of software engineering, components within the same cluster exhibit high cohesion and low coupling.

Clustering algorithms can be unsupervised or supervised, with unsupervised clustering treating partitions as unlabeled patterns or components, while supervised clustering algorithms label the patterns for classification. A new method called maximum capturing is proposed for document clustering, which includes constructing document clusters and assigning cluster topics to reduce search complexity when necessary for component retrieval.

We also propose a procedure for forming clusters by finding the cell with the maximum value in the similarity matrix at each step and grouping the corresponding document pairs to form clusters. Additionally, if document pairs (i, j) and (j, k) are in different clusters, a new cluster containing elements (i, j, k) is formed.

We would like to express our gratitude to the anonymous reviewers and especially to Dr. C. V. Gururao for his valuable suggestions and support throughout this work. We would also like to thank Mr. V. Sreekanth, Senior Technical Lead, Business Intelligence and Warehousing Architect at IBM, Bangalore, for his cooperation in carrying out this work.

C. Srinivas holds a master's degree in computer science and engineering from JNTU, Hyderabad. He is currently working as an associate professor in the CSE department at Kakatiya Institute of Technology and Sciences, Warangal, and is a research scholar at Kakatiya University under the guidance of Dr. C. V. Gururao. With over 15 years of teaching experience, he has presented papers at numerous national and international conferences and workshops. His areas of interest include software reuse and cloud computing.