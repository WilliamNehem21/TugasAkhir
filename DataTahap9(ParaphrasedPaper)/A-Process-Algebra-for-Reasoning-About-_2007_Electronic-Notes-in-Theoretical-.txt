In general, security protocols involve multiple agents working in parallel, each performing computations with information (limited by polynomial-time on the security parameter) and exchanging it with other agents. When considering quantum processes, computations are limited by quantum polynomial time and the exchanged information is supported by qubits. This paper addresses the challenge of defining quantum security properties using a quantum polynomial-time process algebra, which draws inspiration from previous work [13, 9].

The non-cloning theorem prohibits the exact copying of quantum information without prior knowledge of its state. As a result, certain design considerations need to be made in the process algebra to determine which agent possesses a qubit in order to retrieve specific pieces of information. To address this, a fixed set of agents is defined, and the qubits are partitioned among them.

It is important to note that all commands mentioned in the paper are deterministic, with the exception of the "measure" command. According to the measurement postulates of quantum mechanics, when a quantum system is measured, the outcome is stochastic, and the state evolves accordingly. However, it is specified that only measurements over the computational basis are considered, although this is not limiting as any other qubit measurement can be achieved by applying a unitary transformation before measuring the qubit over the computational basis.

The paper introduces the concept of a quantum polynomial machine, defined as a triple (c, q, o), where c is a qram command, q is a polynomial that bounds the steps, and o is a positive output polynomial. The set of all these triples is denoted by qpm.

A successful approach for defining secure concurrent cryptographic tasks is through process emulation. In this context, a process realizes a cryptographic task if and only if it emulates an ideal process known to realize such a task. The paper elaborates on the notion of emulation for the quantum process calculus defined in the previous section.

The concept of emulation with respect to a set of real adversaries and ideal adversaries is discussed, where an ideal adversary is one that cannot corrupt i, and a real adversary is any local process for agent a. This property asserts that a real adversary (a: a) cannot distinguish the information leaked by p||(a: a) from the information leaked by the well-behaved process i||(a: b) for some ideal adversary (a: b), indicating that p||(a: a) is also well-behaved.

The paper explains that any interactive proof system should fulfill two properties: completeness, which ensures that the verifier is convinced with probability one if the assertion the prover wants to make is true, and soundness, which ensures that the verifier cannot be convinced of a false assertion up to a negligible probability.

Furthermore, a process (p: s) models a quantum zero-knowledge strategy if, from the verifier's perspective, it is impossible to distinguish the final result of the interaction with (p: s) from the interaction with the 0 process. The paper concludes by emphasizing that quantum zero-knowledge is compositional, which is a clear corollary of theorem 3.2.

The contributions of the paper are several. Firstly, it introduces a process algebra for specifying and reasoning about (quantum) security protocols. To restrict the computation power of the agents to quantum polynomial-time, the logarithm cost quantum random access machine is introduced and incorporated into the process language. Due to the unique aspects of quantum information, qubits are assumed to be partitioned among agents, and the (quantum) computation of an agent is limited to its own qubits.