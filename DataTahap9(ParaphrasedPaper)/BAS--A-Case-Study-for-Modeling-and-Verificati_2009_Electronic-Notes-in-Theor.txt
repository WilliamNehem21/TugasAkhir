The paper employs OCL expressions at the model level to represent the pre/post condition constraints of certain methods, particularly by adding OCL expressions as constraints to the transitions of a statechart. Using the assertion verification of SPIN, OCL constraints can be validated. The subsequent sections of the paper are outlined as follows: Section 2 presents an overview of the TMDA framework and describes key concepts for consistency verification. Section 3 illustrates the process of model construction, verification, simulation, and code generation in model-driven development through a case study. Additionally, it demonstrates the application of a rigorous modeling approach to practical software development. Section 4 summarizes the work and outlines potential future research directions.

The framework's characteristics are generic and expandable, allowing integration with various model checkers such as SPIN, FDR, and SMV for diverse verification needs. In TMDA, SPIN is chosen as the model checking engine due to its maturity and widespread usage.

The paper introduces a partial function "att" as att: c~(attrn~t), where c.a: t denotes att(c)(a) = t, with "a" being an attribute of "c" and "t" as the attribute's type. Furthermore, "attv(c)" is used to denote the set {a: t| att(c)(a) = t} comprising all attributes of "c."

Additionally, the paper presents mathematical expressions defining variables and functions such as k1, k2, msgij, and gij, aiming to provide clarity on the message-related concepts discussed in the context of the given system.

The authors express their gratitude to the reviewers for their thorough assessment and insightful commentary, which facilitated the enhancement of the paper. The work is partly supported by grants from the National Key Research Program of Dependable Software Theory (Grant No. 90718014), National High Tech Research 863 Program of China (Grant No. 2006AA01Z165), and the National Natural Science Foundation of China (Grant No. 60673114 and No. 60603037).