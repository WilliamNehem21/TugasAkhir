The field of abstract algebra is founded on robust mathematical principles and offers a concise notation that enables straightforward manipulation of symbols as opposed to cumbersome model-theoretic reasoning. Abstract algebra has been demonstrated as an effective tool for reasoning in various contexts, such as in the early application of Kleene algebra with tests by Kozen for proving loop transformation rules, and more recent uses of probabilistic Kleene algebra for protocol verification by McIver, Cohen, and Morgan, and refinement algebras for program reasoning in a total-correctness environment by Solin and von Wright.

In this paper, we introduce an abstract algebra for reasoning about probabilistic programs. This algebra elevates the concrete-algebraic approach to probabilistic programs, similar to the approach taken by Solin and von Wright for non-probabilistic programs, offering a clearer notation and enabling the reuse of results across different models with sound axiomatization. Additionally, the algebra facilitates automation.

We deliberately exclude a probabilistic choice operator from our algebra, as we observe that many complex transformation rules for probabilistic systems, including the data refinement rules derived in section 6, can be specified and verified without directly addressing probabilistic choices. This design choice aims to maintain the elegance and simplicity of the framework without unduly limiting its applicability.

Furthermore, we incorporate guards and assertions into the refinement algebra to model conditions and predicates in the context of probabilistic programs, without compromising the abstraction's simplicity. We also define operators to determine program enablement, certain failure, and absence of certain failure, drawing analogies to similar operators in relational algebra.

We illustrate the application of the abstract-algebraic method by using the algebra to reason about action systems, particularly for proving data refinement rules of probabilistic action systems. We also discuss modifications and generalizations of certain axioms, emphasizing the inclusion of weak iteration and the absence of conjunctivity as an axiom due to branching behavior in programs.

Finally, we demonstrate that our abstract algebra supports total correctness reasoning and includes a strong iteration operator, enabling the establishment of data refinement rules for probabilistic action systems. We conclude by suggesting potential future directions for this research, such as introducing angelic choice into the algebra and exploring the abstract treatment of probabilistic choice, as well as applying the algebra to more complex case studies.