We define the density of a language s in a language l as the asymptotic probability that a randomly chosen word of length n from l belongs to s. There are languages for which densities do not exist, but we demonstrate that it is decidable to check whether one regular language has a density in another regular language.

Our method for computing conditional densities relies on generating functions, which are complex functions of a complex variable. A function is rational if it is a quotient of polynomials with integral coefficients. We utilize a well-known proposition to assess the dominating root of a generating function for a regular language, expressed in the first order language over the field of complex numbers.

Using the aforementioned methods, we are able to address the cases presented in propositions 3.1, 4.1, and 5.1, as well as the cases (i) and (ii) from section 6. In case (iii) from section 6, we compare partial limits to determine whether the language s has a density in l, presenting a procedure for this comparison.

We consider languages to be represented by deterministic finite automata (DFAs). The procedure described can be enhanced to verify the validity of a first order formula in the ordered field of real numbers, with the best-known algorithms for this problem operating in double exponential time. However, simpler methods, such as the Sturm series, can solve simple cases in polynomial time, except for cases where l has many poles of maximal multiplicity on the radius of convergence.

We have demonstrated that the problem of whether one regular language has a positive density in another regular language is decidable and can be solved in double exponential time, provided that the languages are represented by DFAs. The computational complexity is determined by the complexity of the general procedure of quantifier elimination in the ordered field of real numbers. Although the formulae produced by the algorithm in this paper have a special form, it seems unlikely that a better complexity bound can be obtained, and we anticipate that the problem cannot be solved in polynomial time in general.