The use of probabilistic programming has become increasingly popular as a formal method for representing randomness and uncertainty. While there has been extensive research into designing semantic models for probabilistic programs, this is a technically challenging task. Specific complexities arise when attempting to account for unstructured control flow, general recursion, and nondeterminism in such models. In this paper, we introduce a denotational-semantics framework that addresses these issues and allows for different handling of nondeterminism. The framework is designed to support both probabilistic and nondeterministic choices, and it is based on control-flow hyper-graphs. The semantics are defined using an algebraic approach, allowing for different instantiations as long as certain algebraic properties hold. We present a formalization of nondeterminism based on powerdomains over sub-probability kernels, and demonstrate its application in the context of static analysis of probabilistic programs. Furthermore, we discuss the challenge of developing a denotational semantics for higher-order probabilistic programming, particularly in the context of functional programming languages that can express higher-order functions, and outline directions for future research in this area. Additionally, we outline our plans for further development of the semantics framework, including incorporating continuous distributions and higher-order functions, exploring different models of nondeterminism, and establishing formal reasoning techniques based on the denotational semantics.