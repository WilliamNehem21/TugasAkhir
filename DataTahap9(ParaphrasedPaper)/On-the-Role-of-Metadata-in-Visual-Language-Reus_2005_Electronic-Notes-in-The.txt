This academic paper discusses the usefulness of collecting metadata on a family of programs for purposes such as generating statistical data, re-engineering, and reuse. The paper presents an industrial case involving the use of a project library to store visual programs and a database to store metadata on these programs, specifically focusing on the function block language (FBL) used in Metso automation for writing automation control programs. Various program analysis techniques and re-engineering activities are applied to study the FBL programs, with metadata playing a crucial role in providing advanced program analysis support.

The paper emphasizes the importance of metadata in supporting maintenance activities and discusses metadata-driven program analysis techniques used for maintaining visual programs. It outlines the nature and use of the FBL language and the evolution of the language over the years. The paper also delves into the role of the visual notation of FBL in manipulating visual information and supporting visual interaction, as well as the application of reverse engineering and visualization techniques in studying FBL programs in detail.

Furthermore, the paper highlights the role of metadata in supporting program analysis techniques and describes various metadata statistics collected on FBL usage over the years. It also introduces the concept of templates in FBL to enable reusability and discusses the benefits of using metadata to support program analysis activities. The paper concludes by discussing the potential improvements in metadata-driven program analysis techniques, particularly in relation to FBL meta-models and semantic information.

In summary, the paper provides insights into the significance of metadata in program analysis, re-engineering, and reuse of visual FBL programs, offering valuable information for practitioners and researchers in the field of software development and maintenance.