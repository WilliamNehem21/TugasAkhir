In this paper, we propose a non-uniform static analysis method to identify the term-substitution property in processes specified in the spi calculus. This property plays a crucial role in defining security breaches such as secrecy and authenticity. Our analysis approach is denotational and preserves compositionality, making it suitable for implementation in functional programming.

We consider cryptographic operations as the processes' value-processing behavior and highlight the significance of term-passing and term-processing behaviors in detecting security breaches. Term substitutions occur during communications, successful decryption, signature verification, and tuple splitting. Security implications arise when a process with a low secrecy level obtains high-level data or a high trust level process obtains low-level data, leading to information leakage and authenticity breach, respectively.