This research paper demonstrates that it is indeed possible to provide a complete proof for asm refinement, despite the fact that established methods such as adding history information and using the powerset construction are not applicable in this context due to the consideration of infinite runs and termination in asm refinement. The paper introduces a novel approach to achieving completeness by shifting all nondeterminism of the concrete system to the initial state, effectively transforming the nondeterministic choices made during the run into predictable decisions. This transformation can be carried out at both the semantic and syntactic levels, and it ensures that the refinement between the resulting asm and an abstract one can always be verified using a forward simulation.

Prior to presenting the completeness proof, the paper provides an overview of the fundamental concepts underlying asm refinement, including the definition of transition systems as the semantics of asms, the use of dynamic logic for expressing proof obligations, and the criteria for refinement correctness and generalized forward simulation. The paper also discusses the application of higher-order wp-calculus in KIV for simplifying the characterization of operators and the definition of asm refinement, addressing the challenge of combining abstract programs with predicate logic formulas.

Moreover, the paper outlines the specific proof condition for asm refinement, which involves establishing the relationship between initial and final states and determining the possibility of constructing commuting diagrams to satisfy certain criteria. The construction of moving all nondeterminism to the initial state is explained, and it is highlighted that this approach enables the establishment of a generalized forward simulation between the abstract and concrete systems.

The paper also emphasizes the practical implications of the proposed approach, noting that while the semantic construction of moving all nondeterminism to the initial state involves recording the details of future states in the initial state, this level of detail is unnecessary in practice. Instead, the outcomes of nondeterministic choices can be recorded using additional dynamic functions through a purely syntactic transformation, as asms explicitly specify nondeterminism with a choose construct.

In conclusion, the paper presents a comprehensive completeness proof for asm refinement, demonstrating that generalized forward simulation, coupled with the strategic shifting of nondeterminism to the initial state, suffices to establish the correctness of any asm refinement. This approach represents a departure from traditional completeness proofs that focus on adding history information and proving the existence of a backward simulation, and it addresses the unique requirements and challenges associated with asm refinement.