The use of active documents, considered as the next evolution in document technologies, may present a solution to the inherent issues in traditional information distribution methods. The Minerva framework is designed to function as both a testing environment and a foundational system for these active document models and applications. One of the unique features of Minerva is its combination of component-oriented plugin mechanism, flexible and extensible user interactions, and platform independence. Minerva documents are structured based on non-linear ordering of information, incorporating persistency, consistency, a role concept, stateful information, and a high level of flexibility through component technologies developed during the easycomp project.

Over the past two decades, advancements in computer technology have significantly influenced the emerging information society and have become an integral part of everyday life. The increasing computing capabilities have allowed for the realization of visionary ideas proposed by individuals such as Vannevar Bush, Douglas Engelbart, and Ted Nelson. The advent of the World Wide Web, introduced by Tim Berners Lee in the early 1990s, brought about a radical shift in information retrieval and usage, laying the foundation for dynamic information systems. Future systems are expected to build upon these principles to offer comprehensive solutions for the challenges posed by existing snapshot systems. The realm of active documents is constantly evolving, emphasizing the urgent need for the development of modular and extensible frameworks to support the rapid prototyping of new concepts and techniques.

The paper is organized as follows: Section 2 provides an overview of past and current active document technology and traces the evolution of active documents alongside the progress of computer technology. It highlights the existing disparity between user needs for flexible and platform-independent documents and the capabilities offered by contemporary document frameworks, despite their component-oriented nature. Section 3 identifies key concepts that can help bridge these gaps, while Section 4 introduces the Minerva framework in detail and demonstrates how the identified general concepts are practically implemented. The focus is on non-linearity and stateful document presentation, along with the techniques used to enable documents to access distributed functionality. Lastly, the paper draws preliminary conclusions from experiences with the framework and offers insights into future applications and extension stages.

Component technology has long been recognized as pivotal in general software development processes, although only a fraction of this ingenuity has been directed towards active documents. As a result, state-of-the-art component models remain overly generalized and detached from higher-order concepts that could effectively structure such systems. Nonetheless, component technology is crucial for the development of flexible and extensible active document frameworks.

The integration of computer-based documents has given rise to a new document type known as the hyper document or the polymorphic document. Polymorphic documents are characterized by their stateful representation, wherein the data itself and its presentation are interdependent. The concept of stateful document presentation is closely linked to polymorphism, and statefulness implies persistency. Multiple levels of statefulness are possible, including maintaining multiple states for every user and document or establishing a 1:1 relation between users and documents.

The amalgamation of various technologies results in a heterogeneous and complex landscape, making the creation of cross-platform documents challenging. The dynamic nature of this domain underscores the need for document management systems to accommodate arbitrary data types. A component-based approach, where components serve as building blocks for the construction of active documents, emerges as a promising solution to this issue.

Merely establishing explicit links between individual components or connections between components and specific parts of the text is insufficient to address the aforementioned challenges. The paper argues for the design of a robust extension to the rudimentary concept of environment awareness, suggesting that powerful frameworks should be devised to support these endeavors.

Theoretical concepts of active document technology have not been explored with the same depth as commercially available off-the-shelf approaches (COTS). Given the dynamic nature of this domain, a comprehensive reference implementation is not currently practical. Instead, a framework that consolidates common functionalities in a platform-independent manner is crucial for rapid progress. Notably, there are limited frameworks that can serve this purpose, making Minerva's role in providing a test environment for future active document application development indispensable.

Rather than defining each possible pathway through the web of information explicitly, the Minerva framework adopts an approach based on implicit path definitions using entry and exit conditions. Documents consist of an arbitrary number of pages, serving as building blocks for non-linear navigation. Each page is associated with individual entry and exit conditions, determining access and navigation in a dynamic manner.

The concept of component consistency forms the basis of polymorphic documents. By establishing a two-valued consistency, components can propagate information to the surrounding shell, such as the embedding page or the encompassing document. This mechanism enables the realization of sophisticated polymorphic documents, where the consistency state of a component influences the display of content based on user interactions.

User-defined component consistency constraints can be utilized for logical grouping of components, allowing for complex interaction patterns. For instance, a master component's consistency can be contingent on the agreement among multiple slave components, resulting in a consolidated view without listing all individual components.

Components are capable of displaying their data at the point of insertion within the text. To address the limitation of displaying data at a single location, Minerva introduces the multi-view concept, akin to the functionality observed in OpenDoc, enabling components to be associated with a user-defined number of additional views.

Due to the polymorphic behavior of Minerva documents, characterized by session-awareness and non-linearity, the framework provides mechanisms to differentiate between different document users or sessions. Session data is serialized, allowing for the restoration of the document state and facilitating feedback loops between users and the author. This feature supports various scenarios, such as role allocation in a teacher-student setting and the association of annotations with specific text fragments.

In summary, the Minerva framework serves as a robust foundation for active document development, providing a component-oriented document model through an extensible plugin mechanism. The framework enables the creation of documents resembling webs of components, with a specific focus on applications in e-learning. There are plans to integrate the Minerva framework and active documents more closely into undergraduate education, leveraging existing lecture materials converted into active documents for students' use.