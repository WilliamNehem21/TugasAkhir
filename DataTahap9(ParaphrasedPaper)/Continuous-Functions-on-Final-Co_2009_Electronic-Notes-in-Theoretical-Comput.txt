One way to define a set is through induction-recursion, in which a set is defined inductively while simultaneously defining a function on that set, typically a set-valued function, which may be referenced in the inductive clauses. This results in an initial algebra for an endofunctor on a category of families, constituting an induction-recursive definition of a family of sets rather than a simple inductive definition followed by a recursive definition of sets. The use of the second component of the operand family in the definition of the first component of the output family distinguishes this type of definition. For a more detailed exploration of the principles behind induction-recursion, consult the works by Dybjer, Setzer, and their associated references.

The constructors and their corresponding decoding functions are outlined as follows:

Additionally, final coalgebras of indexed containers impose a type of sort constraint on infinite terms with type identifiers as indices. Our approach to composition shares similarities with cut-elimination, albeit without the presence of a sort structure. When a sort structure is introduced, further investigation into this connection can be pursued. There may also be potential links to continuous cut-elimination, continuous normalization, and the repetition rule of Mints. Further insights may be gained in this regard.