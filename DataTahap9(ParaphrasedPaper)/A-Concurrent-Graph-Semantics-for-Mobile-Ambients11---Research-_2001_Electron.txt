An additional benefit of expressing the reduction semantics of mobile ambients using graph rewriting is the availability of a well-established concurrent semantics. This concurrent semantics extends the concurrent semantics of petri nets and allows for the derivation of graph processes, event structures, and prime algebraic domains from graph transformation systems. The concurrent semantics imposes a limit on the amount of inherent parallelism in the reductions and enables the derivation of causality links between reduction steps, aiding in the understanding of a process's behavior, particularly in relation to security and non-interference.

The set of sorts "sm" comprises the elements "sp" and "sa." The term "sp" alludes to processes, as the elements of this sort can be viewed as processes reached by a transition. The other sort, "sa," evokes "ambient," and its elements correspond to names in the calculus.

In this paper, we begin by revisiting the fundamental concepts of the double-pushout (dpo) approach to graph rewriting, as detailed in [9,10], and introducing a mild augmentation of its well-established process semantics. We then establish a graph rewriting system "ym" for representing the reduction semantics of mobile ambients. Finally, we examine the concurrent characteristics of the rewriting system "ym," as captured by the process semantics. We argue that these concurrent features enhance the analysis of the causal dependencies among the potential reductions performed by a mobile ambient process, as compared to the original interleaving semantics.