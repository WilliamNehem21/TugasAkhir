To support post-run analysis, fallout stores a variety of logs and other artifacts locally on the central server for inspection after completing the test run. This is the standard approach for examining metrics and benchmark data obtained from manual test runs. In the case of automated test analysis, fallout transfers the archived metrics to a central grafana server for further analysis using tools such as Hunter, a statistical significance detection tool that employs change point detection. Artifact checkers are used by fallout to examine the logs for specific error or warning messages, and the test run is marked as failed if any are found. Additionally, artifact checkers are utilized for post-processing files, such as the hdrtool artifact checker which combines HDR files from multiple clients to generate aggregated metrics.

During a failed test run, the history of operations is provided to checkers as an argument so that they can perform various checks. There is no limit to the number of checkers that can be included in a fallout test, and the test will only pass if all checkers pass.

After executing one or more benchmarks on a cluster, multiple tools are employed to display benchmark and operating system metrics. Fallout includes a built-in method for displaying client-side benchmark metrics within the web UI, but a broader range of metrics, such as Apache Cassandra and OS metrics, are usually collected. A central grafana server, referred to as the history server, is used to present all historical metrics accumulated during test runs.

Adelphi is an open-source QA tool that operates on top of Kubernetes, enabling users to conduct data integrity and performance tests on Apache Cassandra. Packaged as a Helm chart, Adelphi offers a limited number of benchmarks and testing tools for comparing two clusters. While Adelphi manages test execution, it does not provide capabilities for creating and terminating the underlying Kubernetes clusters or presenting benchmark and test results for analysis.

Fallout operates on Google Cloud Platform, Amazon EC2, Microsoft Azure, and an internal OpenStack-based private cloud. Due to the preexistence of Ctool at the time of Fallout's creation, Fallout was built with a highly modular architecture and relies on other tools and components to fulfill certain tasks, whereas the corresponding functionality for DSI is integrated into the service. Furthermore, to the best of the authors' knowledge, DSI does not offer an API for other tools to invoke.