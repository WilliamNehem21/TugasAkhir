The concept of separation of concerns, addressing different aspects of software systems, is increasingly important in modern software engineering, spanning both programming and design/specification levels. Mixed specification languages, such as SDL, value-passing process algebras, and Korrigan, have emerged to handle multiple aspects of systems. It has been observed that these languages share many features, but specific theories, such as symbolic transition systems, still need to be studied for various families of mixed specification languages. In this paper, a logic with an expressive temporal gluing mechanism is proposed to provide an abstract denotational semantics for mixed specification languages. This logic enables reasoning about mixed specifications at a high level, without being specific to a particular model or language. Additionally, the paper presents a refinement theory for mixed specification languages, treating the logic as an institution and providing benefits for common refinement theories. The paper also outlines future research directions, including studying symbolic models and developing a generic framework for integrating formal datatypes within state diagrams.