The remaining sections of this paper are organized as follows: Section 2 describes the concepts of programs, models, and safety properties that are utilized. Section 3 demonstrates how two-player games can be employed to disprove safety properties without executing the typical tasks mentioned previously. Section 4 provides an illustrative example of disproof. Section 5 demonstrates how our approach enables the easy integration of essential information when it is accessible. Finally, Section 6 wraps up the paper and discusses related research.

The aforementioned example is only effective due to our differentiation of "f" and "p" nodes, as well as the utilization of distinct rules for each. If "p" were to govern the selection of "n," they could compel "n" to be equal to zero, thus preventing the occurrence of an error. Additionally, this example exemplifies the approach we aim to take in dealing with nondeterminism, which is crucial for guaranteeing that the program is tested across all inputs. Instead of employing atomic nondeterministic statements like "havoc(e.g.)," we propose encoding them using small control flow graphs consisting of choice edges and deterministic statements, and then analyzing them with over-approximation in the same manner as the rest of the program. The game structure will handle the task of ensuring that all potential choices are explored.