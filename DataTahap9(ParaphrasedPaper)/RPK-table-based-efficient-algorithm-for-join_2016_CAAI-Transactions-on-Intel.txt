The utilization of distributed systems for analyzing large-scale datasets has demonstrated significant effectiveness. Within this context, MapReduce, a prominent parallel computing framework in distributed systems, has received extensive attention and utilization within both academic and industrial settings. Despite its widespread adoption, the execution of join and aggregate operations in MapReduce is often time-consuming, leading to performance issues. Several existing optimization approaches address these challenges by introducing middleware or cache structures to the MapReduce framework, specifically targeting join strategies, necessitating modifications to the core framework. In contrast, our proposed algorithm offers a more general solution that enhances the efficiency of join-aggregate operations.


We introduce an algorithm designed for MapReduce to process aggregate queries involving join operations on large-scale data. Our approach focuses on enhancing query execution performance by reducing communication overhead, minimizing job setup time, and decreasing disk I/O operations. Experimental results validate that our algorithm outperforms existing approaches, demonstrating superior performance in query execution.