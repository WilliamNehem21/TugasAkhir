One advantage of a well-organized system is the reduction of its overall complexity, which leads to increased dependability. Dependability, in this context, refers to the system's ability to provide a service that can be trusted. The process of system structuring can occur at various stages of development or at different levels of abstraction. Considering dependability at the architectural level has become more important due to the complexity of emerging applications and the trend of integrating trustworthy systems from existing untrustworthy components, such as off-the-shelf components and legacy systems. An issue with using existing components is the inability to change or access their internal designs and implementations. Thus, the assessment of correct service delivery must come from the components' interfaces and interactions rather than their internal designs or implementations. This necessitates the early consideration of dependability concerns at the architectural level. From a software engineering perspective, focusing on dependability at the architectural level requires accepting faults rather than solely avoiding them, leading to the need for new notations, methods, and techniques to support reasoning about faults at this level. The provision of fault tolerance relies on redundancy, which can be implicit (e.g., exception handling for error recovery) or explicit (e.g., n-version programming and recovery blocks). Identifying injection points for faults, as per the proposed approach, relies on structural and behavioral dependencies among architectural elements. Architectural abstractions can facilitate the development of fault-tolerant software systems by enabling analysis of error propagation, detection, handling, and fault management. A rigorous development approach has been defined for the formal specification, verification, and validation of software architectures, based on two distinct architectural abstractions: the idealized fault-tolerant architectural element (IFTE) and the halt-on-failure architectural element (HOFE).