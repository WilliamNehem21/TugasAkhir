In section 2, we formally introduce the ILP formulations MWLCP-CP and MWLCP-SC. Sections 3 and 4 outline the key components of our branch-and-price algorithm, including the methods for solving LP relaxations, generating columns, and performing node branching. Section 5 presents the results of computational experiments that assess the performance of our algorithm on random instances of varying sizes and types. Finally, in section 6, we draw conclusions based on our findings.

Since our column generation process is integrated into a branch-and-price framework, the subproblems we must solve for each node of the branch-and-bound tree should correspond to new instances of the MWLCP. To achieve this, we need to develop a robust branching rule. In the following section, we introduce such a rule, adapting the one initially proposed in and used for the GCP.

Instances with 50 and 60 vertices can be resolved within a few minutes. Similar behavior is observed when increasing the number of vertices to 70 and considering an edge probability of 0.5 or 0.75 (medium to high density). In contrast, instances with edge probabilities of 0.25 (low density) are occasionally more challenging to solve, except when the membership-to-list probability is high.

Regarding CPLEX-CF, we observe that it solves half of the instances within the time limit (202 out of 405). One disadvantage of this formulation is the weak lower bound provided by the value of the LP relaxation. In fact, the LP relaxations of BP-SC are, on average, 174% larger than those from CPLEX-CF, and this gap is accentuated as the size of the instance grows in any parameter (n, p, c, or q). The peak is reached on instances with n= 70, p= 0.75, c= 1.5, and q= 0.75, where the LP relaxations of BP-SC are 604% larger.