The academic paper on demonic refinement algebra spans almost two pages, and the proof search involved and the complexity of the axioms used are significant. To maintain readability, the paper does not present all input/output files and complete machine proofs; instead, they are accessible on a website.

Furthermore, the paper excludes the predicate transformer model underlying the refinement calculus of Back and von Wright, stating that only universally conjunctive or disjunctive predicate transformers satisfy the Kleene algebra axioms. In this context, universal conjunctivity (disjunctivity) refers to the distributivity of multiplication over arbitrary infima (suprema), which implies distributivity over the empty infimum (supremum) and yields the right zero axiom. On the other hand, positively conjunctive (disjunctive) predicate transformers, which only distribute over non-empty infima (suprema), do not satisfy the right zero axiom but are suitable models for demonically nondeterministic programs under the standard weakest precondition semantics.

The paper also discusses the relationship between demonic refinement algebra and the predicate transformer model with infinite iteration, highlighting that the former does not capture the relational semantics due to the inclusion of the right zero axiom, which results in the collapse of strong iteration to finite iteration. However, it mentions that all theorems of demonic refinement algebra that do not involve strong iterations are also theorems of Kleene algebra.

The section introduces a toolkit of fundamental refinement laws in the context of demonic refinement algebra and explains their importance in proving more complex refinement laws or analyzing concrete refinements of programs and software systems. It further emphasizes that these abstract laws can often replace the lower-level induction or coinduction axioms of Kleene algebra or demonic refinement algebra in computations.

The paper also outlines a process for automatically verifying a basic refinement calculus that supports various tasks, including the development and analysis of concrete refinements of programs and software systems.

In conclusion, the paper discusses the potential extension of demonic refinement algebras to encompass downward simulations, which are necessary in data refinement, and expresses gratitude to Mark Schaefer for providing computing resources and to the referee for their valuable input.