Historically, the verification of planning domains has often involved translating the planning domain into a suitable formalism for model checking. This allows for the direct verification of the domain or the generation of test cases, with some exceptions where planning techniques are used for test generation. The latter differs from the approach presented here as it considers different coverage conditions and does not generate tests from flight rules (i.e., temporal specifications). Several issues still need to be addressed, such as the lack of a methodology for translating nested temporal operators into planning goals, although we have not encountered nested temporal operators in the analyzed flight rules. We are actively working on this matter and developing a software tool to automate the methodology. Specifically, we are creating a parser that translates temporal patterns encoding flight rules into LTL trap formulae using the definitions in Section 2.2, and then into NDDL code. The proposed methodology for computing test cases with UFC coverage guarantees would provide an improvement over current testing methodologies, as test cases for Europa 2 are currently generated manually and without coverage guarantees. This approach could be further refined to benefit plan developers, as outlined in the subsequent section where we discuss how test execution can be automated by translating temporal formulas. This process could be repeated for all flight rules in the specification for various scenarios.