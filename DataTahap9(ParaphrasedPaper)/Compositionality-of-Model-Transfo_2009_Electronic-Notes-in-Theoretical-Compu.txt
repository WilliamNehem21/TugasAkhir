The paper discusses the use of model transformations in various contexts, including code and platform-specific model generation, as well as in denotational semantics definition, such as using process algebras as semantics for visual modeling languages. It proposes a formal definition of compositionality for mappings from typed graphs to semantic domains and presents conditions for ensuring compositionality for simple graph transformations and graph transformations with negative application conditions. The concepts of confluence, critical pair analysis, and termination criteria are also discussed. Additionally, the paper outlines a case study of compositional model transformations and provides a proof based on the basic compositionality theorem. The paper is organized into sections that cover related approaches, the formal introduction of compositionality, conditions for compositionality, a case study, and a conclusion. It also addresses the need for defining sets of contexts and graphs to ensure separability. The concepts are illustrated using examples from UML models and the CSP abstract syntax.