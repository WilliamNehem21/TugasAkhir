The primary contribution of this paper is the introduction of an algorithm to detect performance anomalies and pinpoint bottlenecks in distributed applications using software-defined networking (SDN). The proposed method employs real-time monitoring of both application and network infrastructure performance without requiring prior knowledge of the running application or the need for application instrumentation. The SDN controller retrieves data from various network switches and computes performance metrics for application response time, throughput, session numbers per application tier, as well as network packet loss, delay, and available bandwidth per network link.

The algorithm uses a multi-class support vector machine (SVM) to identify the root cause of bottlenecks, distinguishing between network problems (packet loss, delay, or bandwidth) and end-host problems. It enables selective monitoring of switch ports related to application traffic to minimize data collection and speed up the identification process. Additionally, the algorithm alerts the administrator about the source of the bottleneck to facilitate corrective action.

The paper is structured as follows: Section 2 provides an overview of SDN technology and application performance detection methods, while Section 3 reviews previous work on anomaly detection in distributed applications. Section 4 details the design of the proposed algorithm, and Section 5 discusses and analyzes the simulation results. The paper concludes in Section 6.

The paper emphasizes the importance of SDN in managing network resources, separating the control plane from the data plane. Traditional network architecture makes traffic decisions using destination IP and MAC addresses, while SDN centrally manages network devices and traffic flow using packet header information.

To monitor applications using network traffic, the paper categorizes methods into passive and active monitoring. Passive monitoring methods observe traffic without impacting network performance but require multiple monitoring points. Active approaches involve injecting or modifying packets to monitor performance, which can affect measurement accuracy and network overload.

The paper discusses various prior models and methods for anomaly detection, flow classification, and network monitoring using SDN. It also describes proposed methods for resilient monitoring, flow measurement, and recovery from link failure, as well as the use of SVM for anomaly detection and bottleneck identification.

The paper suggests that future work could include expanding the monitored metrics of data center infrastructure and focusing on end-host parameters, as well as testing the proposed solution on big data processing applications like the MapReduce framework and incorporating additional machine learning models for comparison.