The paper presents a lower bound for the flattening problem for statecharts, demonstrating that common flattening algorithms become unmanageable when signal communication is not allowed in the target language. This particularly impacts flattening-based strategies for automatic model-based program synthesis.

The paper is structured as follows: Section 2 introduces hierarchical and flat statecharts, defines flattening, and formulates the main claim, which is then proven and discussed in Section 3. Section 4 discusses related work and remaining open problems, while the paper concludes in Section 5.

While many target languages in practical settings allow signal communication, flattening algorithms may not be able to utilize it for various reasons. For example, excessive use of signal communication makes symbolic model checking more difficult, rendering signal-based flattening inefficient for model-checking tools. The practical utility of the lower bound presented in Theorem 2.3 lies in its explanation of the expected succinctness in such applications. In fact, the theorem elucidates the reason for explosion in previous works. Although the algorithms mentioned in those works target languages with signal communication, they do not use signals in the flattening process.

The study finds that utilizing their algorithm to flatten a hierarchical transition could result in an exponential growth of the model in terms of structure depth, in line with observations by David et al. Drusinsky and Harel discuss the succinctness of cooperative concurrency without considering the influence of hierarchy, while our result delves into a new aspect of the statecharts succinctness space. Alur et al. analyze the impact of hierarchy on model checking and succinctness but do not address the relationship between concurrent hierarchical models and flat models in our sense. Their results cannot directly ascertain the difficulty of flattening, and they also utilize subhierarchy sharing, which is not widely supported by tools.

The paper formally defines flattening as a translation of hierarchical statecharts into a set of synchronized mealy machines without signal communication while preserving semantics. The presented subexponential but superpolynomial lower bound sheds light on this problem and its applicability for various dialects, including UML statecharts. It is demonstrated that hierarchy and concurrency jointly contribute to the increased difficulty of the problem. The proof includes a general technique for translating results for statecharts over arbitrary alphabets to statecharts over binary alphabets.