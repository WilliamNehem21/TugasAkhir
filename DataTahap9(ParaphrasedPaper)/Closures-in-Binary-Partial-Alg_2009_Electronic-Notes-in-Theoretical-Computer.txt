The paper presents two methods for computing closures in binary partial algebras (BPAs). The first method is a fibonacci-style approach for closures in associative BPAs, while the second method is a multistage procedure for closures in associative, commutative, and idempotent BPAs. The implications of these procedures in various areas such as resolution theorem proving, graph-theoretic algorithms, formal languages, and formal concept analysis are discussed. It is highlighted that the multistage procedure, when applied to formal concept analysis, results in a new algorithm that outperforms leading algorithms for computing concept sets.

The multistage approach is described as an intuitive but non-trivial procedure, which computes closures in noncumulative steps, ultimately leading to a partition of the closure. Each stage generates elements with ranks within a specific range, thereby reducing redundant operations. This approach yielded a more efficient algorithm for formal concept analysis compared to existing methods.

The paper is structured as follows: Section 2 reviews the concept of binary partial algebras, as well as the notions of rank and closure and their interplay. Section 3 outlines problems in resolution theorem proving, graph-theoretic algorithms, formal languages, and formal concept analysis in BPAs. Section 4 introduces two basic approaches for computing closures in BPAs, namely the fibonacci-style approach for associative BPAs and the multistage approach for associative, commutative, and idempotent BPAs. Section 5 briefly revisits the topic of resolution using BPA, and concluding remarks are provided at the end.

The paper emphasizes the role of binary partial algebras as a framework for studying algorithmic problems in computer science. It also makes a case for further development of properties for BPAs to be applied to specific topics such as graph algorithms, and the reapplication of existing efficient procedures to a different setting under the framework of BPAs.