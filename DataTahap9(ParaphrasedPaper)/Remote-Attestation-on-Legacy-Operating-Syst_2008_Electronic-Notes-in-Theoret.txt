This study received support from various sources, including government research initiatives, European Commission programs, a Ph.D. grant, and others. The aim of the research was to ensure that only authorized, unaltered client applications could access a service, and to enable an authorized entity to verify if client software was running unaltered on an untrusted remote platform. However, establishing a trusted execution environment on an untrusted platform has been a significant research challenge, as an adversary with complete control over the platform has the ability to manipulate its input and output traffic. This makes it difficult for a verifier to confirm communication with a specific environment on an untrusted platform and to ensure that software is running within that environment. Previous solutions, such as genuinity tests, have proven inadequate in practice.

To address these challenges, this paper proposes a remote code integrity verification system based on both trusted computing platform-based attestation and purely software-based attestation techniques. Specifically, the paper focuses on leveraging TPM-enabled computers, without requiring heavily adapted operating systems, to enhance the reliability of attestation systems.

The paper discusses the components of a trusted platform and describes the role of the TPM in measuring the initial platform state and establishing a chain of trust from the Core Root of Trust for Measurement (CRTM) to the operating system. It also addresses the need for measuring the integrity of privileged code loaded by the operating system and discusses the use of microkernels or hypervisors in combination with virtualization to achieve both security and backward compatibility.

The study also presents techniques to detect memory copy attacks, such as measuring the execution time of verification functions and using self-modifying code. It acknowledges potential vulnerabilities, such as proxy attacks, and proposes strategies to address these weaknesses. Additionally, the paper discusses the limitations of commercially available operating systems in providing trusted computing support and outlines the challenges of purely software-based attestation schemes for legacy platforms.

The proposed mixed solution combines software-based attestation techniques with limited support from trusted platform modules to provide a practical and flexible approach to remotely verifying software integrity. The study acknowledges the need for further improvement, particularly in detecting hardware attacks and addressing proxy attacks, and proposes modifications to achieve these enhancements.