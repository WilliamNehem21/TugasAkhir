This research paper discusses the use of UML class diagrams as graphical representations of the static aspects of B specifications. The diagrams are intended to aid stakeholders who are unfamiliar with the B method, such as customers or certification authorities, in understanding the specification. The paper outlines rules for deriving a preliminary class diagram from a B specification and explores the consistency of the identified concepts from an object-oriented perspective using formal concept analysis. The technique proposed involves incrementally adding operations to the formal specification, which in turn leads to the evolution of the class diagram.

To address the gap between formal and graphical specifications, various research teams have proposed integration approaches, such as providing graphical syntax to existing notations or designing industrial languages that incorporate formal concepts. Efforts have been made to establish connections between UML and formal methods, including translations from annotated UML diagrams to formal methods. This paper, however, explores the reverse approach, using graphical notations, such as UML diagrams, to document formal developments, particularly for applications based on formal methods that require acceptance by independent certification authorities.

The paper also delves into tools that represent the behavior of specifications, starting with the derivation of a visual representation of the behavior of a given B specification. It describes the use of finite labeled transition systems (LTS) to represent the behavior, which can be further utilized for verifying temporal logic properties. The paper also discusses the extraction of structural information from existing formal specifications to facilitate understanding and maintenance, drawing parallels with program comprehension techniques in the software maintenance community.

Furthermore, the paper explores the overlap of concepts between UML class diagrams and B, such as encapsulation of operations and variables, as well as associations, in order to automatically translate B specifications into UML class diagrams. It identifies a set of class candidates and discusses the evaluation of their pertinence, emphasizing the relationship between B operations and the preliminary class diagram.

Overall, the paper presents a two-step approach to constructing a class diagram from a B specification, involving the systematic transformation of the specification and the identification of pertinent concepts. It emphasizes the potential of graphical representations to make formal developments more intuitive and readable, particularly for stakeholders who are not experts in formal methods. Case studies comparing this approach with existing ones have shown promising results.