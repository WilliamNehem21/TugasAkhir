The spatial arrangement of peptide substrates plays a crucial role in predicting potential interactions with their molecular targets. Research on molecular docking of peptides has made strides in addressing the challenge of predicting the bound conformations of these highly flexible molecular entities. Various computational approaches have been developed to address this issue, including step-by-step peptide docking strategies that can help resolve flexibility issues while still being able to predict energy-favorable conformations associated with potential biological activities. These complex conformations can be sampled using techniques such as molecular dynamics (MD), where amino acid force field parameters are employed to study peptides and their interactions. Additionally, other tools are available to forecast the likely structural conformation of peptides in comparison to experimental techniques.

Today, combining physics-based approaches with machine learning models has proven to be beneficial in reducing the computational burden of running extensive simulations and enhancing the predictive performance of classical methods with existing curated data. For instance, novel methods have emerged to expedite quantum chemical calculations using models trained with pre-calculated parameters. In the context of MD, efforts have been made to extract descriptors from trajectories and integrate them with additional chemical data from molecular entities. One such example is the Molecular Dynamics Fingerprints Package (MDFP), which computes a set of molecular fingerprints by deriving average energy terms and observables from MD simulations, such as solvent accessible surface area, dipole moments, radius of gyration, and the evolution of hydrogen bonds. These techniques have been applied to predict free energies of solvation for small molecules and to conduct binding studies involving proteins. The protocol can be adapted to include peptides as ligands for virtual screening studies.

The main code includes two scripts: one using bash command lines and another written in Python, which extract these descriptors. The vectors per complex are stored as pickled objects in a folder, which can later be read by machine learning models. Additionally, an example of a protein-peptide MD trajectory is provided in the code repository to reproduce the results.