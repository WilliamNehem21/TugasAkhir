The paper outlines the architecture of costa, a static analyzer based on abstract interpretation, designed to study the cost and termination behavior of Java bytecode programs. Cost analysis involves statically estimating resource consumption at runtime, while termination analysis aims to prove that a program terminates for every possible input.

Costa offers a command-line interface for standalone execution, with various switches to control analyzer options. It also supports the implementation of other interfaces, facilitating user interaction and data collection.

Additionally, Costa provides a web interface for users to experiment with the system using predefined examples or by uploading their own Java programs, either as source code or bytecode. The web interface allows for customization of Costa's behavior through a wide range of options.

The paper presents an example of using Costa's cost model to estimate the number of calls to a specific method. In this example, an upper bound on the number of calls to the "send" method is obtained, and it is demonstrated that the execution of certain methods always terminates by identifying a "ranking function."

Furthermore, the paper highlights the challenge of bounding the cost of calls to the "factorial" method due to unknown values at analysis time. However, it is still possible to prove that the execution of the methods always terminates by finding a "ranking function." More detailed information on Costa's approach to termination analysis is provided in the paper.