This paper examines multilevel security, a specific type of mandatory access control security policy in which entities are assigned a security level (typically high or low), and information can only flow from a lower level to a higher one. The policy enforces two access rules: "no read up," which prevents low-level entities from accessing information from high-level entities, and "no write down," which prevents high-level entities from leaking information to low-level entities. However, these controls may not always be sufficient to prevent indirect information leakage, such as through system side-effects, such as a shared resource among security levels.

The paper focuses on information flow security in the context of mobile systems, where code can move between security levels, complicating the task of identifying potential information leaks. For example, confidential data may be accessed by an authorized agent who then exposes it to unexpected attacks while moving around. Furthermore, the code itself may be confidential and not permitted to be read or executed by lower security levels.

The paper introduces a verification process to assess the possibility of confidential information escaping a security boundary. It presents a simple syntactic property and demonstrates, using control flow analysis, that this property is sufficient to imply the absence of unwanted information flows.

The paper uses the concept of "ambients" to demonstrate direct information flows, showing how high-level data can move outside security boundaries, making it vulnerable and potentially accessible to unauthorized parties. In distributed and mobile systems, it is impractical to assume a single boundary containing all confidential information. Instead, the paper proposes a model with separate boundary ambients for different sites, allowing the movement of confidential data between boundaries.

The paper also introduces a filter mechanism that effectively adheres to multilevel security rules by only entering boundaries and never transporting high-level data outside security boundaries. However, the control flow analysis reveals a potential attack scenario, but the paper argues that this is not feasible in practice due to the specific execution context. The analysis's lack of precision in this case is attributed to its failure to capture the fact that high-level data enters an ambient only after crossing a boundary and cannot return.