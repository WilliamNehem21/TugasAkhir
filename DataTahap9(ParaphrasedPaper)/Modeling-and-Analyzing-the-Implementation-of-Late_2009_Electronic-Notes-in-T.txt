As the importance of globally asynchronous and locally synchronous (GALS) based system-on-chip (SoC) designs continues to grow, there has been a proposal and utilization of a specific case of GALS where global clocking is maintained, but interconnect delays spanning multiple clock cycles are tolerated. In some instances, these designs, known as latency-insensitive protocol (LIP) based SoC integrations, are also applicable in scenarios where global clocking is not present. However, these protocols are complex, and validating that they function correctly in accordance with the system specification requires verification. Typically, the system specification is initially globally clocked with negligible interconnect delays, allowing for it to be first implemented as a synchronous design using traditional tools. Then, GALS or LIP refinements are applied to tolerate multi-cycle interconnect delays or fully asynchronous interconnect communication. To verify that such refinements maintain correctness, researchers have previously employed model checking. This paper presents a static analysis-based framework for such verification, utilizing the Polychrony framework and associated semantic analysis techniques in the form of endo-isochrony. We demonstrate the use of this framework to show that various LIP protocols preserve correctness with respect to their fully synchronous specifications. We believe that designers can verify LIP implementations with optimized enhancements more easily using our framework compared to using model checking techniques.

Our framework, which is based on the Polychrony framework, involves the analysis of various properties of a signal program using formal structures such as SDFG and CH. In the analysis of LIP-based systems, the given LIP is first modeled using the signal syntax, which is then transformed to obtain its SDFG and CH. Subsequently, endo-isochrony is verified based on the obtained SDFG and CH and their respective composition. We provide a case study of modeling and analyzing a Phase Elastic Buffer (PEB) to illustrate the flow and validate the proposed framework. Notably, our framework differs from other verification techniques for GALS in that it utilizes static analysis, making it an efficient technique. Additionally, this work introduces the concept of Polychrony to real hardware level LIP-based SoC communication.

Another important aspect of our framework is to synthesize the clock relations using the formal structure CH. In a given CH, any child node's clock is a down-sample of its ancestors, and all synchronized clocks are grouped as one node in CH. We illustrate the algorithm for constructing CH for a given signal process. We emphasize that a well-formed hierarchy results from avoiding contradicting clock inclusions, as explained through an example in Section 5. SDFG and CH are used to check communication correctness between interconnected processes.

Endochrony and isochrony are properties that ensure the correct operation of synchronous processes in an asynchronous environment. While formal definitions and proofs of endochrony and isochrony can be found elsewhere, in this paper, we focus on their application for GALS and their verification, which forms the foundation for our framework.

We extend our gratitude to Kenneth Stevens (University of Utah), Mathew W. Heath (Intel Corp.), Marly E. Roncken (Intel Corp.), Jean-Pierre Talpin (INRIA), and Dimitrou Potop (INRIA) for their valuable discussions regarding this work. This work was partially supported by NSF fund CCF0702316 and SRC task 1818.