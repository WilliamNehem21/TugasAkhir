Proving the correctness of GGCS relating to the original specification of UML is not feasible due to the informal nature of most constraints in the original definition of sequence diagrams. However, the formal definition addresses some of the problems in the original definition, as outlined in section 3.4. The explicit model transformation in subsection 3.2 demonstrates a close correspondence to UML as defined by MOF. Multiplicities and constraints are already adhered to and argued at the corresponding rules.

The two rules allow for multiple inheritance without cycles, in line with the acyclic structure required by the constraint for classifiers in the UML specification. This example serves to illustrate how our graph grammar generates well-formed instances, as discussed in subsection 2.2. All identified issues are resolved in the graph grammar, which required the modification of OCL constraints, connections, and nodes in the meta-model to ensure accurate coverage of diagram information.

In the next phase, the grammar will be expanded to provide sufficient editing rules for automatically generating a syntax-directed editor. The Tiger project is developing an Eclipse plug-in that allows for the definition of a graph grammar, the connection of abstract syntax with concrete layout information, and the generation of a syntax-directed editor as a new Eclipse plug-in. This editor can be used for modeling in the common concrete syntax while automatically generating precise, structured abstract syntax.