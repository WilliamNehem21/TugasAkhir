The paper primarily focuses on the modeling and verification of time-sensitive security protocols in a model with constraints on horn logic. It discusses the consolidation of the protocol model on horn logic with time constraints to facilitate the modeling and verification of time-sensitive security protocols. The paper is organized as follows: Section 2 introduces the process calculus used to formally and naturally describe security protocols. Section 3 discusses the extended model using horn logic with time constraints, translation of a protocol from the process calculus to the horn logic, and verification on the horn logic with time constraints. Section 4 delves into the characteristics of constraints in the model and provides a method to determine if there is a solution for the constraints. Section 5 analyzes the Denning-Sacco protocol in detail, and Section 6 concludes the future work.

The model of roles in security protocols is presented as a group of logical rules. Encrypted data is represented as a term encrypt(x, y), which is abbreviated to {x}y, where y is a term denoting a key shared between two parties, and x is a term. The parameter d represents network delay. The translation of a process is a set of horn clauses with constraints enabling the proof that it sends certain messages or executes certain events within the constraints. The conditions are kept in list c, and the rule may fire when they are satisfiable. The paper also presents the concept of derivation sub-tree as related to the extended horn logic model of a security protocol.

The analysis reveals that there are no issues in verifying time-sensitive security protocols in a horn logic model. However, it is important to determine whether the constraints system has a solution. The paper discusses the difficulty in determining the solution for the constraints system and highlights the challenges in solving linear constraints when there are symbolic arguments present. The paper concludes with acknowledgments to individuals who contributed to the work.

To maintain brevity, this paper does not introduce the verification on horn logic as presented in [1, 3, 4].