Dividing the idempotents has an interesting impact. Specifically, the total maps within the split category align with the complexity order, c. For instance, when c equals p, the total maps in the split category are precisely the polynomially timed maps.

It is surprising that there exists a direct relationship between complexity, as concretely defined, and partiality. The obtained polynomially timed maps are distinct from the PTIME maps established by complexity theorists. The category of timed sets encompasses all possible timings for partial maps between sets, regardless of whether they can be realized by a machine. To obtain classical PTIME maps, it is necessary to connect these concepts with computability; a PTIME map must also be computable by a machine.

These findings, detailed in the final section, are built upon established results from complexity theory and a fundamental understanding of Turing categories. A similar approach can be employed to derive models of Turing categories representing other low complexity classes such as elementary and primitive recursive. Additionally, these techniques can be applied to scenarios where space is considered as the resource, as demonstrated by a brief discussion on logspace computations, which also organize themselves into a Turing category. Finally, the potential for interpreting complexity hierarchy problems as inquiries about functors between these Turing categories is illustrated.

In Section 5, the formal steps for tset(m)/c are undertaken. While these steps are routine in the abstract, their realization in this case is noteworthy. This enables the construction of a restriction category whose total maps are precisely those with timings bounded by the complexity order c, thus establishing a direct link between complexity and partiality.

The proof of Proposition 3.1 consists of demonstrating that it is a restriction category, cartesian, distributive, and discrete. The verification of its status as a restriction category is straightforward; for instance, it is proven that the additive assumption is required. It is noted that categories of timed sets often have multiple traces, illustrating that a category can have more than one trace and that there may be a choice of iteration when discussing iteration.

Proposition 5.1 states that when c is additive, split(tset(m)/c) is a discrete distributive restriction category, within which the total maps are precisely those whose time complexity lies within c. Moreover, if tset(m)/c has joins, ranges, or iteration, then so does split(tset(m)/c).

The paper's objective was to provide tangible models of computability, as exemplified in Turing categories, in which the total maps fall within a specific functional complexity class such as PTIME and logspace. The constructions presented accomplish this objective and closely resemble the standard approach in complexity theory, suggesting a direct mapping of the results of complexity theory into categorical facts.