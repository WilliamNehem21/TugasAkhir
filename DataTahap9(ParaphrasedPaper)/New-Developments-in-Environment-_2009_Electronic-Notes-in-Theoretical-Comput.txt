Thus, environmental machines can be categorized based on the evaluation strategy they employ (e.g., call-by-name, call-by-value), the type of reduction carried out (e.g., weak reduction, strong reduction), and the manner in which they associate environments with terms. For example, in the context a la Mach (CAM) and the Kyoto a Mach (KAM), environments are linked to sub-terms of the term undergoing evaluation, providing information about the terms that should replace the free variables within the sub-term. Later, we will introduce machines that utilize a single environment instead of associating environments with sub-terms, differentiating this new class from the former.

We begin by introducing two weak machines with local environments that utilize variable names instead of the traditional approach using De Bruijn indices. These machines are variations of the KAM and CAM, employing Lisp-like associative lists to represent environments. While the KAM machine is typically presented using De Bruijn indices, methods employing names and maps have also been utilized (refer to, for instance, [16,3]). Since we use names, it is possible to have duplicate entries for keys in the list. However, keys occurring earlier in the list take precedence over those occurring later in the list. In this manner, maps can be implemented in a non-destructive manner.

Moving on to the definition of operational semantics, to evaluate a closed, linear term, we commence with a linear closure (t, a) where a is empty, and make use of an array to store the substitutions as they are generated. Values are closures in which the term is an abstraction.