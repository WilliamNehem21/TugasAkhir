The current methods for analyzing the reachability of linear hybrid automata are not efficient for practical problem sizes. As an alternative to developing a tool that checks all paths of a linear hybrid automaton, we propose an approach that focuses on efficiently checking one path at a time. This approach utilizes symbolic execution of paths and can be used by design engineers to verify important paths, thereby increasing confidence in the system's correctness. Unlike simple testing, each path in our framework represents a dense set of possible system trajectories. This paper introduces linear programming-based techniques for the development of an efficient path-oriented tool for bounded reachability analysis of linear hybrid systems.

The paper is structured as follows: Section 2 outlines the class of linear hybrid automata considered in this work. In Section 3, we use linear programming to present our solution for path-oriented bounded reachability analysis of linear hybrid automata. Section 4 discusses techniques to reduce the size of the linear programs corresponding to the paths being checked. The tool prototype and case studies are described in Section 5, and the conclusion is presented in the final section.

We propose a technique for decomposing the linear program corresponding to a path check into smaller linear programs, allowing for recursive decomposition until the technique can no longer be applied.

Comparing our tool with PHAVer, we find that PHAVer fails to produce a result after 20 hours when k=40, while our tool can provide a result within a tolerable duration even when k=150. This is potentially due to the exponential algorithm complexity of PHAVer, which arises from performing expensive polyhedra computation. 

We would like to acknowledge Professor Edmund M. Clarke and the anonymous reviewers for their valuable comments and suggestions. The first and third authors are supported by the National Natural Science Foundation of China (No. 60425204, No. 60233020), the National Grand Fundamental Research 973 Program of China (No. 2002CB312001), and by the Jiangsu Province Research Foundation (No. BK2004080). The second author acknowledges the support of a graduate fellowship from the Computer Science Department at Carnegie Mellon.