The paper discusses the use of action systems to model parallel and reactive systems and introduces an automatic approach for verifying action system refinements using standard CTL model checking. It proposes encoding simulation conditions as simulation machines and associated CTL properties, allowing for automatic verification using a CTL model checker. The paper provides an overview of action systems, action system refinement, and CTL as well as presents a case study to illustrate the approach. The authors also discuss the potential extension of their work to cover backward simulation and address limitations related to system types and size.

The need for tools to support refinement is widely acknowledged, with traditional support relying on interactive theorem provers. However, recent advances in automatic verification technologies, including model checking, have shown promise in enabling fully automatic approaches to verifying refinements. The paper adopts a similar approach for action system refinement and demonstrates how simulation proof obligations can be encoded in a standard model checker. By encoding simulation conditions as kripke structures together with CTL properties, the paper effectively streamlines the verification process, avoiding the need to build the entire state space of both systems in most cases. The authors also discuss the encoding of actions and the use of simulation machines to simplify the verification of simulation conditions. The paper concludes with a discussion on potential extensions of the work to cover backward simulation and address limitations related to system types and size.