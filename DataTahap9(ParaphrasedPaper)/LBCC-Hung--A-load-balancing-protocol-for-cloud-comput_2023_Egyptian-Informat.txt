K.I. Arif introduced the effective load balancing algorithm with deadline constraint (ELBAD), which prioritizes tasks based on their deadlines and assigns them to the fastest virtual machines available. The algorithm categorizes virtual machines as underloaded, loaded, or overloaded, and redistributes tasks as necessary to balance the workload. ELBAD was compared with other algorithms including FCFS, SJF, Min-Min, and EDF, demonstrating superior efficiency in minimizing makespan and maximizing resource utilization.

Another approach called EDLBHA, a distributed dynamic load balancing method, was proposed to identify underutilized resources in the cloud in the shortest possible time. It dynamically partitions the cloud and assesses the load, queue length, and processing time of each partition to determine its status as idle, normal, or overloaded. Simulation results showed improved energy utilization, waiting time, response time, and turnaround time compared to existing load balancing algorithms.

S. Jeyalaksshmi et al. presented a modified round robin and honeybee algorithm to achieve effective load balancing in virtual machines based on their status. This algorithm assigns weights to virtual machines based on their computing power, and uses the honeybee influenced load balancing algorithm to prioritize tasks. Experimental results illustrated that the proposed algorithm accelerated the reaction and loading time of the data center.

K.R. Remesh et al. proposed modifying the bee colony algorithm to balance the load across virtual machines in the cloud. Tasks with the lowest priority were migrated from overloaded to underloaded virtual machines, using honeybees' foraging behavior to achieve load balance. The proposed algorithm minimized makespan and the number of migrations, resulting in better quality of service to end users.

A. Pradhan et al. utilized the particle swarm optimization (PSO) algorithm to address load balancing and task scheduling in cloud computing, introducing a protocol named Load Balancing Modified PSO (LBMPSO). The proposed protocol outperformed existing techniques using PSO in terms of makespan and resource utilization, based on simulation results.

A. Rath et al. developed a self-adaptive salp swarm optimization algorithm to achieve load balancing in cloud computing. The algorithm integrated a sigmoid transfer function and a task fitness function to minimize makespan, response time, degree of imbalance, and maximize VM utilization. Comparative analysis with other metaheuristic approaches demonstrated the superiority of the proposed algorithm in terms of performance metrics.

Additionally, an evaluation was conducted on the proposed load balancing technique (LBCCHUNG) using simulations, comparing its performance with two well-known methods, Min-Min and FCFS. The evaluation measured and analyzed the performance metrics, simulation parameters, and obtained simulation results.

Overall, these techniques aim to distribute tasks efficiently among virtual machines while minimizing makespan and maximizing resource utilization in cloud computing environments.