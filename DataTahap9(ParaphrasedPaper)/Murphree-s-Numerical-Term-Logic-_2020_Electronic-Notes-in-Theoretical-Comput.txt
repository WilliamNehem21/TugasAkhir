In addition to the two general forms, we need to consider two specific scenarios. To begin with, let's examine each fundamental form. In the case of form 1, set n = m = 0, and for form 2, set n = 0 and m = 1. Consequently, ntl corresponds with tfl, resulting in the generation of closed complete trees in tfl. For the recursive scenario, set n = k and m = j. This substitution results in a legitimate inference in ntl, as all the conditions for a valid inference in ntl are maintained. Assuming that each form is also valid in ntl for n = k + 1 and m = j + 1, where k, j > 0, then the trees would appear as follows:
