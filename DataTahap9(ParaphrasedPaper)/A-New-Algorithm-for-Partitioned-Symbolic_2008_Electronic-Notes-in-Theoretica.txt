Binary decision diagrams (BDDs) and their multi-terminal extensions have proven to be valuable in the quantitative verification of systems. Various methods have been proposed to derive symbolic state graph representations from high-level model descriptions, with compositionality being essential for the efficiency of the approaches. Consequently, the symbolic composition schemes play a crucial role in the efficiency of the symbolic state graph generation process. Reachability analysis at the level of symbolic structures is a resource-intensive step in the generation of symbolic state graphs. In this paper, a new operator for zero-suppressed BDDs and their multi-terminal extensions is presented for performing symbolic reachability analysis. This algorithm not only replaces standard BDD-based schemes but also renders symbolic composition, as found in contemporary symbolic model checkers such as PRISM and CASPA, obsolete.

The paper provides a detailed overview of techniques related to symbolic reachability analysis and the computation of relational products using BDDs for representing transition relations. It also presents algorithms for computing relational products using BDDs and zero-suppressed BDDs. Similar to these contributions, the new algorithm in this paper combines conjunction and existential quantification into a single algorithm. However, it differs in its state graph generation method, leading to a different algorithm. The paper emphasizes the use of high-level modeling methods for describing systems and assumes compositionally constructed transition relations. The presented algorithm eliminates the need for inserting identity structures on sub-model-independent state variables before combining individual transition relations and executing a symbolic reachability analysis, thus making this unnecessary.

Section 2 introduces the basic setting and decision diagrams, while Section 3 introduces the new symbolic reachability algorithm. The practical feasibility of the algorithm is investigated in Section 4 using standard benchmarking models, and the paper concludes in Section 5.

In shared BDD environments, ZDD nodes lose their uniqueness when the represented functions are defined on different sets of input variables. To address this issue, previous work introduced the concept of partially shared ZDDs (PZDDs) and algorithms for manipulating them. The basic idea of this approach involves iterating over the input variables of the operand PZDDs, which allows for assigning specific semantics to each visited but skipped variable on the current path. The paper discusses some of the most important algorithms related to PZDDs and their application.

The symbolic representation of a (submodel/partition-) local transition function only takes input variables that are in the dependency set of the activities encapsulated in the respective submodel or partition. The paper explains the behavior of the algorithm in recursion based on different types of variables and provides guidelines for effectively handling the nodes in the context of BDDs and standard multi-terminal binary decision diagrams.

Overall, the paper presents a new operator for zero-suppressed BDDs and their multi-terminal extensions, introducing a novel algorithm for performing symbolic reachability analysis. The practical feasibility of the algorithm is demonstrated using standard benchmarking models, and the paper concludes by summarizing its contributions.