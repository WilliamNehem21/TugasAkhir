Process calculi are a widely-used tool for describing interactive systems. The progress of a process within a closed system is governed by a reduction system (RS). Additionally, each process can be viewed as a state within a labeled transition system (LTS), which captures its interaction with the environment, effectively treating the process as an open system. The double pushout approach (DPO) can model both closed and open systems, with reduction steps corresponding to DPO rewrites and interactions with the environment represented as transitions labeled by a borrowed context, which constitutes a part of the environment. The DPO approach offers the advantage of distinguishing between concurrent and necessarily interleaved events in a closed system. This paper aims to extend this advantage to open systems by providing LTSs with labels that describe concurrent interactions with the environment. One of the initial approaches to derive an LTS from a given RS is presented. 

The objective of this paper is to develop bisimulation congruences that honor concurrency. We discuss the preliminary steps taken in this research direction, which involve saturating a given set of productions with all parallel productions and then applying the borrowed context method to generate a bisimulation congruence that respects concurrency. In particular, the approach involves replacing coproducts, which are simply pushouts from the empty graph in graphs, with pushouts, in order to make the theory of double pushouts available for adhesive categories. The process of replacing coproducts with pushouts will be elaborated in the following definition.