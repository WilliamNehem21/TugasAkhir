dm and er-LEAP have proposed various approaches involving the utilization of suitable data structures to effectively generate simulation events. For instance, the optimized dm technique makes use of a dependency graph to prevent the unnecessary recalculation of rates.

We have implemented the k-skip method as described in the original paper to conduct comparative analysis. The chosen error parameter for k-skip is 0.01, the smallest value used in the initial study. Additionally, we have identified certain computational issues overlooked in the original work, particularly stemming from the use of a single random number to produce an entire trajectory.

In Section 2, we introduce fundamental concepts utilized throughout our research. Theoretical details are presented in Sections 3 and 4, while Section 5 addresses implementation issues. A comprehensive presentation of our experimental results can be found in Section 6, followed by a summary of the conclusions in Section 7.

An advantageous aspect of our approach is the capability to provide estimates for the duration of all transitions within a trajectory, in contrast to the gamma sampling used in k-skip, which only produces the total duration of k transitions. Although both methods utilize a single random number to determine trajectory duration, k-skip is expected to boast superior performance. Nevertheless, our method produces detailed trajectories akin to the original Markov chain.

The efficiency of our algorithm stems from its ability to generate fewer random numbers. Notably, we have developed our algorithm in Java by utilizing several open-source libraries, which include implementations of Mersenne Twister (MT) from Apache Commons, CERN Colt, James II, and SSJ. These implementations yield double precision numbers with a 53-bit mantissa.

We have simulated two biochemical models comprising 7 reactions and 6 species using both the optimized dm technique, k-skip, and the time-step simulation (TSS) method. As the implementations of k-skip and TSS are based on the optimized dm technique, any efficiency comparisons involve the optimized dm as a baseline.

The results obtained using Scientific Linux 6 suggest that TSS is approximately 15-20% faster than the optimized dm. Additionally, we observed that using p=1 is not significantly faster than TSS using p=0.1 for the geometric distribution, indicating that there is no substantial benefit in using a value for p greater than 0.1 in terms of efficiency.

When comparing the running times of k-skip and TSS, we find that k-skip is notably more efficient due to its method of determining the total duration of k events by sampling from a gamma distribution, while our method determines the duration of each individual event. It is important to note that the speedups observed for k-skip are smaller than those reported in prior research due to the use of the more efficient MT random number generator. Consequently, based on this discrepancy, the results for k-skip align with those reported in the original work.

Through the simulation of two biochemical models, we assessed the efficiency and accuracy of our method. The experimental results demonstrate that our approach is approximately 15-20% faster than the optimized dm, with negligible errors. The k-skip method, a similar approach, was found to be more efficient but in some cases less accurate. Therefore, TSS can be considered as an alternative to k-skip in situations where the latter may be unsuitable.