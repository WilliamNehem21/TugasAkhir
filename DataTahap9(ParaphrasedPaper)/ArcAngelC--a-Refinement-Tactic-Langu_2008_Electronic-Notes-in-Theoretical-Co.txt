The paper introduces the concept of the Circus language as a means of defining both data and behavioral aspects of concurrent systems, utilizing a combination of Z and CSP. While the refinement theory and calculus of the Circus language are unique, the paper notes that the application of refinements can be cumbersome due to their length and repetitiveness. The authors have identified useful strategies to address these challenges and have developed a language called Arcangelc to define refinement tactics.

The paper emphasizes the scarcity of formal semantics and support for a refinement calculus for concurrent systems in existing tactic languages. It then presents Arcangelc and its application in formalizing a refinement strategy for verifying Ada implementations of control systems. The strategy is demonstrated using specific tactics and is proven effective in the verification of a simple controller.

The final sections of the paper discuss the scope and proof obligations of refinement laws, introduce basic tactics for law application, and describe the use of strategies for applying individual tactics to parts of a Circus program. The paper also includes examples of applying tactics in the context of control systems, as well as discussing future work in mechanizing algebraic laws for reasoning about Arcangelc tactics within the context of Circus programs.