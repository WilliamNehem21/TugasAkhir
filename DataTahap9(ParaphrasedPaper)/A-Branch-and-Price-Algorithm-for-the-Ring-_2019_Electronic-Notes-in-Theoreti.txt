The ring-tree facility location problem expands upon the capacitated ring-tree problem by incorporating additional costs and capacity constraints for facilities. This problem is relevant in the strategic planning of bi-level telecommunication networks. In this study, we explore an extended integer programming formulation for the problem and various strategies to address the NP-hardness of the pricing problem encountered in a branch-and-price algorithm used for its resolution. Computational experiments demonstrate that heuristics and relaxation techniques enhance the performance of the branch-and-price algorithm.

In order to tackle the NP-hardness of the pricing problem, we introduce a relaxation that permits some repetition of vertices within the ring-trees. This relaxation draws inspiration from the concepts of ng-routes and q-arbs, which have proven effective in addressing variants of vehicle routing problems. Additionally, we introduce a primal heuristic for populating the initial basis and a heuristic for the pricing problem. The paper is structured as follows: Section 2 provides a formal problem description, relevant definitions, and notation; Section 3 outlines our algorithmic approaches, including primal heuristics, heuristics, and relaxations for the pricing problem; the methods are evaluated on instances from existing literature, and the computational results are presented in Section 4. Finally, we offer conclusions and considerations for future work in Section 5.

Rather than striving to find the ring-tree with the minimum reduced cost, our focus shifts towards a relaxation for the pricing problem that allows for certain vertex repetitions. This approach involves combining successful relaxations such as ng-route and qarb, which were previously applied to the capacitated vehicle routing problem and the capacitated minimum spanning tree problem, respectively. This combined relaxation approach has also yielded positive results in the context of the capacitated ring-tree problem.

The usage of the relaxed pricing problem had a minimal impact on the initial lower bound quality, only decreasing it by 3%, whereas the Mixed Capacity Formulation (MCF) resulted in a significantly lower lower bound, around 32% worse. Based on these findings, we chose to evaluate the performance of three implementations (MCF+, SPFR+, and SPFR*) in solving large instances (|V| = 51). It was observed that MCF+ was unable to solve any instances to optimality, while SPFR+ achieved a 3.3% success rate. Both approaches could compute a final duality gap for nearly all instances; however, the final duality gap reached by MCF+ was around 45%, on average, while SPFR+ reached around 14%.