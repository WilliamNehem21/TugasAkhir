In this study, we investigate an algorithmic problem related to gene regulatory networks, specifically focusing on the counting of fixed points in boolean networks. Our attention is centered on monomial networks, and we establish that even in this restricted case, the counting of fixed points is #P-complete.

This research is connected to the work of R. Laubenbacher and his students. Laubenbacher identified boolean networks as finite dynamical systems over a finite vector space, noting that the functions mapping from a finite vector space to the corresponding fields of scalars are all polynomials. Moreover, Laubenbacher and his students examined boolean networks with transition functions that are polynomials satisfying additional constraints. For instance, Hernandez-Toledo studied linear networks (boolean networks with transition functions as linear functions), while Colon-Reyes explored boolean networks with transition functions as monomials. Our contribution demonstrates that the counting of fixed points in monomial networks is #P-complete, and we achieve this by establishing a parsimonious reduction from the counting of antichains in partial orders to the aforementioned problem.

The paper is organized into three sections. In the first section, we present the fundamentals of boolean networks, delve into the conjectures put forth by Kauffman, and define the algorithmic problem we address in this paper: counting fixed points in boolean networks. The second section involves an examination of the counting of fixed points in the context of monomial networks, demonstrating that this restricted problem is #P-complete, and we also establish the #P-completeness of further restrictions. These later findings indicate the presence of a phase transition in the tractability of the problem, wherein linearity in boolean networks implies tractability, whereas nonlinearity implies intractability. Lastly, in the third section, we present extensive concluding remarks and propose future research directions related to a classic counting problem formulated by R. Dedekind in 1897.

Furthermore, we discuss the problem of finding orders containing at least one antichain. It is evident that the problem DA is trivial—any poset contains at least one antichain (any subset of size 1 is an antichain). The class #P represents counting problems that can be solved using a polynomial time counting Turing machine. We can associate with DA, as with any NP problem, a counting problem in #P. Let #DA denote the counting problem consisting of computing the number of antichains contained in a given input poset. Interestingly, the problem #DA is significantly more challenging than the problem DA—#DA is #P-complete, implying it is NP-hard and also hard for the polynomial hierarchy.