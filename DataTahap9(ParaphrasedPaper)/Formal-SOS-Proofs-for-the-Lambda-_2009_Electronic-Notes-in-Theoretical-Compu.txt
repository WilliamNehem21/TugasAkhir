The paper is structured as follows: in section 2, definitions are provided for terms and substitutions, along with an explanation of strong structural induction principles that incorporate the standard variable convention. Section 3 outlines the types and the typing judgement for terms, while section 4 introduces the big-step evaluation relation for terms. In section 5, the paper demonstrates the proof of the termination property for the evaluation relation.

In the subsequent discussion, the need arises to introduce the concept of simultaneous substitution, which is represented as finite lists of (name, trm) pairs. This choice is motivated by the ease of handling finite structures in nominal Isabelle, as opposed to infinite ones (where a possibly infinite representation of substitutions would be partial maps from name to trm). Additionally, defining functions by recursion over lists is typically simpler than recursion over sets within the context of nominal Isabelle. Utilizing the list representation, the paper presents a definition for simultaneous substitution.

Before defining a typing judgement, it is necessary to establish what typing contexts entail. The paper adopts the use of lists of (name, ty) pairs for typing contexts, as it is more convenient to work with finite structures in nominal Isabelle, as opposed to infinite ones (where using sets of (name, ty) pairs would lead to the inconvenience of potentially infinitely large typing contexts). While using lists necessitates distinguishing the order in which variables are associated with types, this choice is anticipated to cause only minor issues in the proofs.

The proof of the lemma is non-trivial, and the paper notes that the automated proof search tools of Isabelle are unlikely to be of significant assistance in finding this proof. To establish the proof, a stronger result must first be proven, and the paper leverages the well-known technique of logical relations for this purpose. Specifically, the paper introduces a logical relation called "valuation," which is defined as sets of terms.

The proof of the lemma entails a routine case distinction on the extended typing context and simultaneous substitution. Subsequently, the paper presents theorem 5.1, where the termination property is proven not only for closed expressions but also for arbitrary typable terms.

The formalization presented in the paper draws inspiration from Adam Chlipala, who conveyed some challenges related to the problems on the POPLmark list. The authors express their gratitude to Nick Benton for outlining the proof for the termination property described in section 5.