The paper begins by introducing syntactical nets as a means of representing the syntax of a language of terms with binders. Syntactical nets are essentially syntax trees with additional backpointers that link bound variables to their respective binding constructors. This class of nets is then defined as the result of a translation function from terms to interaction nets.

The section concludes with a discussion on the representation of recursion. Within the definition of token-passing nets, there is flexibility for handling recursive constructs. This can be achieved either through computation rules that reintroduce a syntactic symbol in the right-hand side, or through canonical rules. The former approach is suitable for recursion patterns such as iterators or recursors, which involve pattern-matching on their argument. The latter approach is further explored in the following section to encode a general binding recursion operator.