This academic paper introduces the jsynopsys tool, which applies the concept of scenario-based testing from B machines. It involves describing execution scenarios as regular expressions over the system's operations, along with intermediate system states that need to be reached as the scenario unfolds. The tool utilizes the bz-testing-tools engine, originally designed for symbolic animation and boundary test generation from B machines. A notable advantage of the scenario-based testing technique is the complete abstraction of operation parameter values, which are instantiated at the conclusion of the scenario through constraint solving methods.

The paper also discusses model-based testing, where a formal model describing the system's behavior is used to generate test cases and establish a conformance verdict. Different techniques may be employed to compute test cases, depending on the type of model. In the case of behavioral specifications, the authors propose utilizing a constraint solver to animate the model and enumerate resulting test cases through a native backtracking mechanism.

Furthermore, the paper describes the principles and key features of the jsynopsys tool, which is a graphical user interface written in Java and equipped with a dedicated Prolog constraint solver. The tool has been successfully applied to practical case studies, such as modeling a POSIX-compliant file system.

Additionally, the paper presents the principle of symbolic animation, which involves decomposing B machine operations into behaviors and using a constraint solver to explore the possible combinations of behaviors through backtracking mechanisms. The Prolog animation engine of bz-testing-tools is utilized for this purpose.

The authors also compare their approach with an automated scenario generation technique for real-time reactive systems, which defines system behavior using a set of events and relies on an attributed event grammar to specify event traces.

Overall, the paper introduces the jsynopsys tool and its application of scenario-based testing from B machines, demonstrating its effectiveness through practical case studies and comparing it with other approaches in the field.