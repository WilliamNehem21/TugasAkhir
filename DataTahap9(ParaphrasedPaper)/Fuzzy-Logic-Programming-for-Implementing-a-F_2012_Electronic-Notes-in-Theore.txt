The xpath language enables users to specify the names of nodes (i.e., tags) and attributes to be included in the XML tree, along with boolean conditions regarding the content of nodes and attributes. The querying mechanism of xpath is based on boolean logic, with retrieved nodes matching the path of the XML tree. Consequently, users must be familiar with the XML schema to create queries. However, the XML schema may not always be accessible to users, and even when available, XML documents with the same schema can vary significantly in structure. For example, in the case of XML documents containing the curriculum vitae of a group of individuals, the structure may differ in terms of the inclusion and organization of information such as studies, jobs, and training.

The need for xpath to be more flexible has led to recent extensions of the xpath language. Notable extensions include those introduced by authors [8] and [9], which incorporate fuzzy constraints such as "close" and "similar" for node content, as well as "below" and "near" for path structure. Additionally, these authors have explored the concept of "deep-similar" for tree matching. To provide ranked answers, these approaches adopt a fuzzy set theory-based approach where each answer is associated with a numeric value representing its retrieval status value (RSV). In another work, the authors proposed a satisfaction degree for xpath expressions by assigning a degree of importance to xpath nodes and investigating methods for computing the best "k" answers. In both cases, users are allowed to specify in the query the degree to which the answers will be penalized.

The paper is structured as follows: Section 2 presents the authors' fuzzy extension of xpath, and Section 3 covers MALP and the FLOPER environment, along with a description of the integration of fuzzy xpath and MALP. Section 4 discusses implementation issues, and finally, Section 5 concludes with plans for future work.