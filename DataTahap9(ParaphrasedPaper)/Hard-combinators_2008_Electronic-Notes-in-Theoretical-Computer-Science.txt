The distinction between the principal port and the auxiliary ports is crucial because the process of rewriting or interaction can only be applied to cuts. Specifically, the left component of an interaction rule is comprised of two cells connected by their principal ports, and interaction involves relabeling cells and altering the orientation of the principal ports, essentially causing the cell to turn. In summary, an interaction rule can be visualized as follows:

According to the definition provided earlier, an invariant net is a combination of a net and a partition of its free ports, and there may be multiple invariant nets corresponding to a single net. However, we also use the term "invariant" to describe a net for which such a partition exists.

In the uniform subsystem, we have established constants, pipes, duplication, and addition. It may be questioned whether it is feasible to define product within this subsystem. The likely answer is negative. This is because the plus operation (binary xor) is less powerful than binary addition, which calculates both the sum and carry. Further, it can be demonstrated that it is impossible to construct a universal uniform system.

Similarly, we can define invariant nets with multiple inputs and outputs for vectorial Boolean functions with numerous inputs. Moreover, these invariant nets can be utilized to create the corresponding functions on binary words. To achieve this, the nets "split" and "merge" can be combined to construct parallel/serial adaptors of a certain kind.

The system we propose appears to be a strong contender for a universal hard system. However, this work represents only an initial stride in the realm of hard interaction nets, as numerous fundamental questions and potential applications remain open for further exploration.