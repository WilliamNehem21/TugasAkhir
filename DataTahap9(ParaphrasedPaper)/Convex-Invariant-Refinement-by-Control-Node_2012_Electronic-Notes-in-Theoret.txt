We conducted experiments using the PIPS source-to-source compiler and the ASPIC abstract interpretation tool, utilizing 71 test cases previously published by Gonnord, Gulwani, Halbwachs, Jeannet, et al. The number of invariants identified by these tools increased from 28 to 69 for PIPS and from 44 to 62 for ASPIC when our heuristics were employed as a preprocessing step. This optimization technique resulted in only a marginal increase in the total execution time of PIPS, rising from 76 to 103 seconds, demonstrating the practical value of our approach.

An alternative method involves computing state transformers, or transfer functions, instead of state predicates. Each program command, whether elementary or compound statements or procedure calls, is approximated by an affine transformer. This approach offers a modular analysis and helps limit analysis times. Affine transformers are frequently used as they strike a good balance between accuracy and efficiency.

We propose addressing the control graph restructuring issue. In Section 4, we introduce a general control node splitting algorithm and discuss its application to refine invariants found by convex analysis. The results of our experiments are presented in Section 5, while related work is discussed in Section 6.

We also introduce a simple algorithm for splitting control nodes to refine a program's control flow graph over a partition of the set of variable valuations (Section 4.1). Theorems are provided regarding the invariants of created control nodes and to ensure that the restructuring does not alter the program's behavior (Section 4.2).

Future work will focus on improving the performance of the restructuring process, particularly by designing better partition strategies to handle a wider range of transition systems and addressing the complexity introduced by our current heuristics.