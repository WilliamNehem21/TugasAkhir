The analysis of resource consumption in embedded systems is a significant challenge in the industry due to the increasing number of components that can be integrated into a single chip. This paper addresses this challenge by developing simple models of embedded systems and automating the analysis of their timing and memory access costs. We use priced timed automata to build a basic model and evaluate various resource consumption scenarios. Although the experiments are conducted on small and basic models, we demonstrate the potential of using priced timed automata and UPPAAL CORA as a model checking tool for reasoning about resource consumption in embedded systems.

Several frameworks exist for modeling and analyzing hardware-software systems. For instance, ARTS is a simulation framework that assists designers in analyzing designs prior to implementation. However, ARTS does not explore the full state space and cannot guarantee properties. Our work is inspired by ARTS, and we experiment with priced timed automata to model simple components with associated costs, using UPPAAL CORA for automated reasoning about these costs. UPPAAL CORA, a member of the UPPAAL family, supports simulation and verification via model checking. Other related work includes modeling multiprocessor system on chips (MPSoC) using UPPAAL and optimization work on task graph scheduling using UPPAAL CORA.

The remainder of the paper is organized as follows: the next section introduces a simple embedded system and the scenarios to be analyzed. Section 3 provides a brief overview of priced timed automata. Section 4 presents our formal model for systems. Section 5 discusses the experiments and formal analysis of the scenarios, and the final section concludes the study.

Regarding memory usage, we observe that local memory is cheaper to use than external memory. Therefore, task execution is less costly if the data for a task already exists in the local memory. Our goal is to schedule tasks in a cost-effective manner that meets their deadlines. Thus, the optimal scheduling strategy depends on data dependencies among tasks rather than simply following the earliest deadline first approach.

In terms of cost optimization, our objective is to find the most cost-effective use of resources, considering criteria such as waiting time, running time, and memory usage. We utilize UPPAAL CORA to determine the optimal schedule based on given cost criteria. Our main objective is to demonstrate the applicability of priced timed automata for modeling embedded systems, and UPPAAL CORA for design space exploration.

In our experiments, we use the assignment "next t=scheduleedf()" to indicate the transition on which the operating system would make a scheduling decision. However, for finding the optimal schedule, we remove this assignment to allow for a non-deterministic choice of any ready task as its scheduling decision. We utilize the best-trace generator to extract the optimal schedule.

We conduct experiments where we focus on waiting time and memory accesses, as well as optimization over the scheduling of the three tasks to produce a unique schedule that minimizes the costs. The system definition for these experiments is provided. In our experimental setup, verification on our model takes about 1 second without optimization, and about 25 seconds with optimization by UPPAAL CORA, using a 2 GHz Pentium 4 machine with 512 MB of RAM.