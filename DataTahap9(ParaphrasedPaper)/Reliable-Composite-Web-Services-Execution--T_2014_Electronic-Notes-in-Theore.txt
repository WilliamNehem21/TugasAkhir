During the execution of a composite web service (CWS), various faults may lead to failures in the web services (WS). Several strategies, such as WS retry, WS substitution, compensation, roll-back, and replication, can be utilized to address these failures. Each strategy may have different effects on the quality of service (QoS) of the CWS under different execution scenarios. Therefore, it is important to establish a dynamic fault-tolerant strategy that takes into consideration environmental and execution information to appropriately determine the optimal recovery strategy. This paper presents a preliminary study aimed at analyzing the impact of various recovery strategies on the total execution time of the CWS in different scenarios. Experimental results demonstrate that recovery strategies exhibit different behaviors under different conditions, highlighting the need for a model to dynamically select the most suitable recovery strategy based on context information and its impact on the QoS when a failure occurs.

In order to ensure fault tolerance in CWS, it is essential to handle failures that may occur in WS, either by ending the entire composite service or leaving the execution in a safe state. This is particularly important in open-world applications operating in dynamic and untrusted environments, where maintaining system consistency in the presence of failures is crucial.

Numerous methods have been proposed for implementing fault-tolerant CWS execution, including consideration of transactional properties of component web services to ensure the classical ACID (all-or-nothing) properties in composite web services. Backward recovery involves undoing the work performed prior to a failure and returning to the initial consistent state, whereas forward recovery attempts to repair the failure and continue execution. However, both approaches have their limitations, as backward recovery may not deliver the desired answers to user queries and requires synchronous logging, while forward recovery may lead to long waiting times for users to receive a response.

The paper presents an analysis of the impact of different recovery strategies on the total execution time of CWS in various scenarios, focusing on backward, forward, and replication recovery techniques. The study aims to pave the way for the development of a model for dynamically selecting the optimal recovery strategy based on execution state, context information, and impact on QoS.

The paper is organized as follows. Section 2 briefly outlines the key concepts of fault tolerance in CWS. Section 3 characterizes the CWS and its environment in terms of execution time as the basis for the study. Section 4 presents the experimental study, while Section 5 discusses relevant related works. Finally, Section 6 concludes the paper and outlines future work.