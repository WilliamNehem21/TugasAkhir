The verification process may be hindered when the size of the LTS is too large to be constructed on a single machine. In such cases, distributed computing infrastructures, such as clusters and grids, can be utilized to significantly increase the available memory. The CADP verification toolbox leverages this capability by offering tools for distributed verification, including Distributor and BCG Merge. These tools enable the construction of a partitioned LTS, which involves splitting it into several fragments stored in separate files (potentially on different machines), as well as converting it into a monolithic LTS stored in a single file. To enhance verification capabilities, it can be advantageous to work with a partitioned LTS instead of constructing a monolithic one.

The CADP toolbox utilizes the BCG (Binary Coded Graphs) file format and its associated software libraries to represent LTSs. BCG files store the states, labels, and transitions of an LTS using binary encoding and compression techniques, enabling efficient manipulation and representation. These files can be manipulated using existing CADP tools or custom tools developed with CADP libraries.

When working with distributed verification tools and LTSs stored on multiple machines, a single BCG file is no longer sufficient. To address this, the Partitioned BCG Graph (PBG) format has been developed. The PBG format is designed for distributed verification and implements the theoretical concept of partitioned LTS, providing unified access to an LTS distributed over a set of remote machines. It gathers a collection of BCG fragments, which can be stored in separate directories on remote machines or on a shared file system. The PBG format facilitates the management of the distributed LTS, ensuring consistency and providing tools for inspection and analysis.

The PBG Info tool is designed for inspecting PBG files and offers functionalities such as consistency checking, calculating the size of the corresponding LTS, displaying the list of labels, and concatenating remote log files for analysis.

A new tool called PBG Open has been developed as an open/Caesar-compliant compiler for the PBG format. PBG Open has the advantage of leveraging the memory of multiple machines to handle the transition relation of a partitioned LTS, enabling the exploration of large partitioned LTSs that may not be feasible with other tool combinations.

The initialization phase involves normalizing the transition labels of the fragments by assigning unique label numbers across all workers. This is necessary to avoid performance overhead and ensure consistency in label numbering across fragments.

Overall, these distributed verification tools have been integrated into the CADP toolbox to manipulate partitioned LTSs represented as PBG files. Experimental studies have been conducted on a large-scale grid involving several geographically distributed clusters to evaluate the performance and scalability of the PBG machinery with hundreds of workers.