The third section of our analysis paper discusses the related work, focusing on the comparison of SAT-based methods with more traditional BDD-based methods. It reviews recent research that aims to integrate these two approaches and examines works closely relevant to our approach.

Gupta et al. conducted BDD-based reachability analysis using a SAT procedure within symbolic image computation, which they termed "BDDs at SAT Leaves." They utilized BDDs to represent state sets and a CNF formula to represent the transition relation. The symbolic image of a state set was calculated through an exhaustive SAT search of all solutions within the space of primary input, present, and next state variables. However, instead of using SAT to enumerate each solution down to a leaf, the image shifted to BDD-based computations at certain intermediate points within the SAT decision tree. This trade-off was made to balance the space complexity of BDDs and the time complexity of full SAT enumeration. This approach essentially represents SAT as providing a disjunctive decomposition for image computation into sub-problems, each of which is handled symbolically using BDDs. Furthermore, Cabodi et al. proposed BDD pre-processing through over-approximate reachability to improve SAT performance. They demonstrated how to translate over-approximate state sets from BDDs to CNF.

Another work by Gupta et al. explored the use of over-approximate reachability analysis to constrain the BMC search and extended it to induction-based unbounded verification, leveraging over-approximate information as an additional non-redundant constraint.

We also introduced an approach to partition a verification task between a BDD and a SAT engine, where we initially performed the task with BDDs and concluded it through a SAT solver working on the solution space left uncovered by BDD preprocessing. This method allowed for the computation or refutation of counterexamples partially within the BDD domain and partially within the SAT domain.

The subsequent sections of our paper discuss how BDD-based target enlargement can be considered in terms of task partitioning between BDD and SAT tools. We also present specific optimizations for SAT searches, BDD preprocessing for target enlargement, and the overall verification algorithm.

The proposed enlarged start (target) state set represents a set of states for which a path from the start to the target exists. The BDD-based computation of these sets is discussed in detail in the following sections.

We also examine how a given BMC problem with target enlargement can be solved with a shorter bound, and similar formulations can be applied to unbounded model checking. We then discuss the benefits and implications of over-approximate and under-approximate reachability in formal verification, focusing on the partitioning and guided search paradigms and strategies to handle BDD explosion.

Additionally, we describe a dynamic sub-setting technique within the inner loop of a BDD-based traversal to efficiently manage variable selection and control bdd size and support size. This technique allows for both sub-setting and super-setting of BDDs and involves variable quantification to minimize the impact on the number of represented state sets.

Finally, we outline our verification procedure, which involves BDD-based computations of enlarged sets followed by SAT verification iterating over BMC and inductive steps. The industrial designs used for evaluation purposes are also discussed, including the IBM formal verification benchmark library, comprising 75 circuits in BLIF format, each with a unique output formula indicating the property to check.