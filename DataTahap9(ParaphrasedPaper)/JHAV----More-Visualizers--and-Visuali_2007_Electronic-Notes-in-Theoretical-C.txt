It is noteworthy that creating visualizations does not always require students to code the algorithm. Tools such as Animal and Alvis provide visualization designers with modeling features that are well-suited for algorithm visualization. These tools enable users to create conceptual movies illustrating the algorithm without having to write the code for it.

The information and pseudo-code windows are HTML interfaces that allow visualization designers to create static or dynamically generated content to explain the significance of the algorithm's graphical rendering. The information window is used for higher-level conceptual explanations, while the pseudo-code window can display a pseudo-code description of the algorithm with highlighted lines relevant to the currently displayed image.

Input generators gather input data from students, if the visualization supports dynamic input. This input data can be used to drive the visualization, allowing students to see how their dataset influences the displayed images.

The server application manages available algorithms and generates visualization scripts for the client to display. In a typical session, a student launches the client application, which lists available algorithms tailored to the subject being studied. The visualization engines are part of the client distribution.

Animation mode is a feature of visualizer objects capable of delivering visualizations as smoothly animated motion pictures, as opposed to slide shows consisting of discrete snapshots. Slide show mode is the default, but some visualizers, such as Animal and AnimalScript, offer richer animation capabilities, while GAIGS-ML operates in slide show mode.