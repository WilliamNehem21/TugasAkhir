The traditional approach to interacting with an interactive prover involves linear processing, where commands are presented sequentially and the corresponding portion of the proof document is locked to prevent further editing until the command is processed. The document-centric view proposed by Aspinall et al. allows users to edit a proof document in a manner similar to pen-and-paper proof editing, with the prover used for document consistency verification. However, the underlying processing of proof commands remains linear in this approach.

To address these limitations, this paper proposes an asynchronous processing model for proof documents, which enables more flexible and efficient use of processing resources. Unlike the traditional linear model, which is rigid and focused solely on the mechanics of proving, the proposed model emphasizes direct manipulation of familiar objects and aims to improve usability. The paper introduces a state model for commands that delegates the processing order entirely to the prover, allowing for asynchronous processing and a corresponding communication protocol between interface and prover.

The new model uses ownership semantics to manage shared commands between the prover and interface processes, allowing each component to manipulate the commands based on internal considerations. The paper also describes a protocol for transferring ownership and defines different states for commands, along with transitions and informational messages to inform the user about the progress of proving.

Furthermore, the paper presents a software architecture for the user interface that supports asynchronous proof processing and compares the proposed approach to related work. The paper discusses the implications of the new model on the software design of both the user interface and prover, as well as the benefits of abstracting over the concrete implementation to allow compatibility with other provers.

Overall, the paper provides a detailed proposal for an asynchronous model for processing proof documents and outlines its potential impact on improving the usability and efficiency of interactive provers.