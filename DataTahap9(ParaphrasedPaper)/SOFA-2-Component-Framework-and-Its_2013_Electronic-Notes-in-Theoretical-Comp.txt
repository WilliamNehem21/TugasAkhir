Component-based software engineering (CBSE) is a widely utilized approach for developing various applications, aiming to manage development complexity through the use of well-defined building blocks known as components, which play a role in all phases of application development. These components, along with other essential development assets such as modeling and deployment tools, as well as the execution environment, are typically specified by a framework referred to as a component framework.

One such component framework, SOFA2, facilitates application development by offering hierarchical components and a range of advanced features, including behavior specification and verification, dynamic architectures, UML-based design, and transparent distribution through automatically generated software connectors. Unlike other hierarchical component systems, SOFA2 supports the entire lifecycle of a component, from the design phase to execution and maintenance.

To enable connections between components, software connectors are employed. During design, these connectors are mere links with associated communication styles and Effective Function Points (EFPs). However, at deployment and runtime, the connectors are realized by an automatically generated infrastructure that mediates communication, reflecting the properties and distribution of the components.

Within the common runtime environment, the concept of a SOFANode is defined, comprising a dedicated component repository and multiple component containers known as deployment docks, which are located on physical deployment nodes such as computers or virtual machines. Each deployment dock provides the necessary infrastructure for deploying, launching, and executing components, and may also offer additional capabilities and services, such as OSGi services, persistence, and transaction management. The runtime infrastructure also includes technical elements such as a deployment dock registry, which oversees running docks, and a global connector manager, which manages inter-dock connections and transparent distribution.

SOFA IDE supports the assembly of components based on UML design, where the top-level composite component "pingpong" serves as an assembly template filled by specific realizations of sub-components. The complete assignment is specified by an assembly descriptor.