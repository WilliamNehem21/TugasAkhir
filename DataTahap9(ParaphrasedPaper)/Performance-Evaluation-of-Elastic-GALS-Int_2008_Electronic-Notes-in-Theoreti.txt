This paper examines a design that evaluates the performance of a new elastic protocol implemented in a network fabric, as well as the overheads associated with integrating clocked synchronization using a GALS (Globally-Asynchronous Locally-Synchronous) protocol. The findings indicate that the new network fabric can achieve nearly 100% link utilization and meet real-time constraints even under full network saturation. The study compares three synchronization interfaces and suggests that asynchronous interface logic can be almost as efficient as a fully synchronous system, while clocked synchronization protocols may introduce significant overhead.

Elastic systems, akin to clocked systems, consist of modules and channels, but employ elastic communication channels with control wires for implementing a handshake between sender and receiver. The paper discusses a protocol similar to the synchronous elastic flow (SELF) channel protocol.

The study evaluates three main components: 1) a new elastic protocol applied to the network fabric, 2) a clocked synchronizer with synchronous buffering, and 3) a novel fast synchronizer with asynchronous buffering. The findings reveal that the fully synchronous interface requires no buffers, while simple linear flow-through fifos with four data words of buffering are used for the other interfaces.

The network fabric design targets include a non-redundant network topology, absence of multi-word packets, employment of high throughput network routers and buffers, and realization of both clocked and asynchronous implementations. These design choices lead to a fabric with low latency, high throughput, and static worst-case latency for all transmissions assuming sufficient buffering is present in the network interfaces.

The study utilizes two fifo designs, a clocked design, and an asynchronous design. Both designs use simple four-deep linear shift fifos. The asynchronous fifo design is advantageous due to the quick propagation of data from the tail to the head of the fifo, as compared to the clocked design that takes four full clock cycles for data propagation.

The paper reports that the circuit was built using a simple digital university of Utah static library, with additional custom cells designed for the project. The simulation results are based on modelsim simulations of the extracted netlist of the circuit sent for fabrication, using a unit delay model as the custom gates were not characterized for timing.