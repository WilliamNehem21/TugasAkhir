This paper introduces a monad of random choice for domains that overcomes the main limitations of the probabilistic powerdomain. Although it is uncertain whether any cartesian closed category of domains is closed under the probabilistic powerdomain, the cartesian closed category BCD is closed under this monad of random choice. Additionally, there is no distributive law between the probabilistic powerdomain and any of the nondeterministic powerdomains, but there is a distributive law between the monad of random choice and the lower powerdomain. To facilitate working with the convex powerdomain, an adaptation to the monad of random choice is made, resulting in the closure of the cartesian closed categories RB and FS under this construction. Furthermore, a distributive law is established between this monad and the convex powerdomain within these categories. This work is influenced by the uniform continuous random variables of Goubault-Larrecq and Varacca, which do not form a monad. The paper also offers a rationale for this model and revises the definition of the Kleisli extension of Goubault-Larrecq and Varacca to make it monotone, addressing the issue with their original definition.

Building upon this research, Mislove utilized an indexed valuation model to define a monad of finite random variables, demonstrating that the cartesian closed categories RB and FS are closed under this construction. Subsequently, Goubault-Larrecq and Varacca proposed a model of continuous random variables over the cartesian closed category BCD, which did not form a monad in this category. The described model in this paper is based on these continuous random variables, particularly the uniform continuous random variables. In this construction, the computation is permitted to take different branches based on the flips of an unbiased coin.

The paper also outlines three specific cartesian closed categories of domains: BCD, RB, and FS, characterized by Jung as the maximal cartesian closed categories of domains. Descriptions of these categories are provided, emphasizing that the morphisms in each category are the Scott-continuous maps.

The significance of randomized computation arose when Rabin introduced a randomized algorithm for finding the nearest pair in a set of n points. Notably, the paper recounts the development of algorithms by Solovay, Strassen, and Rabin for determining if a number is prime, which run in polynomial time with a small error probability. These algorithms preceded the AKS primality test, the first known deterministic algorithm for recognizing prime numbers in polynomial time, by over 20 years.

The work presented in this paper is motivated by a model of uniform continuous random variables first suggested by Goubault-Larrecq and Varacca. The paper elaborates on the model of random variables, highlighting the separation of random choices from the domain itself and drawing comparisons between the probabilistic powerdomain and the model described in the paper.

In addition, the paper discusses the constructed monad in the category BCD and addresses the limitations of the nondeterministic powerdomains in that category. It also points out the challenges of maintaining the monad within the categories RB and FS. The paper proposes a way to overcome these challenges by defining functions on the Scott closure or lower set of antichains, thus avoiding the need for infima to project down to smaller trees.

Furthermore, the paper elucidates the concept of using random variables as oracles to generate elements within a given range, while also detailing the construction of an oracle that gives one bit at a time in the context of the above definition for application. It emphasizes the use of the kleisli extension and the concurrent operation it mirrors.

The paper concludes by presenting two monads for randomized computation in cartesian closed categories of domains, providing computational motivation for their structure and illustrating the differences between the constructed monad and the probabilistic powerdomain. The potential for further research concerning these monads is noted, and the author expresses gratitude to those who contributed to the development of this work.

Lastly, the paper acknowledges the support of the AFOSR and the contributions of Michael Mislove, Jean Goubault-Larrecq, and Dana Scott to the preparation of this work. It also highlights the use of the monad in developing a programming language and formal verification using Isabelle, as well as the implementation of the Miller-Rabin algorithm within this language.