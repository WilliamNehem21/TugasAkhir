The study examines brane calculi, which involve operations such as pino, exo, phago, mate, drip, and bud within membranes containing embedded proteins, formalized within the context of process calculi. A key distinction from membrane computing is that in brane calculi, system evolution occurs on the membranes rather than within the delimited compartments (regions). The computational power of various brane calculi operations, including phago and exo, has been explored, with systems using these operations shown to achieve universality. These operations have been represented within the framework of membrane computing and analyzed using formal language theory tools.

In membrane computing, a membrane is depicted as a pair of square brackets ([]), with each membrane associated with a multiset denoted as []u over a specific alphabet v. This marking u is indicative of the proteins or objects within the membrane's content, which may consist of proteins, membranes, or a combination of both.

The study first investigates ppp systems using the non-cooperative versions of the pino and drip rules, revealing limited system power, as the sets of vectors generated are strictly contained within the parikh images of context-free languages. Subsequently, ppp systems utilizing only pino and drip rules are explored, resulting in an increased system power, with the ability to generate at least the family of parikh images of languages produced by programmed grammars without appearance checking.