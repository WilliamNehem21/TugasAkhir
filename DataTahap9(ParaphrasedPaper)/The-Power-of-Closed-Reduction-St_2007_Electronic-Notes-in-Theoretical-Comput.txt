The paper demonstrates in section 4 that all primitive recursive functions can be encoded in linear system ln and linear system ln, and in section 5, it is shown that system ln extends beyond this class of functions. The paper concludes in section 6.

These systems correspond to closed function (cf) and closed argument (ca). Various variants of these systems lead to calculi with different properties, with explicit substitution being a feature in these systems.

A sketch of the proof is provided, employing structural induction on t to demonstrate that reduction maintains the variable constraints on terms. It is noted that the only reduction rules that replicate or delete terms are the rules for iterators, which either replicate or delete the iterated function. However, due to the requirement that the iterated function must be closed when constructing the term iter t u v, reducing an iterator will either replicate or delete a closed term. This results in the preservation of the set of free variables, and the obtained term is valid.