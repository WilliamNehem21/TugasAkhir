Nominal unification, a problem with a solution consisting of freshness contexts and substitutions, has efficient algorithms for computation [18, 12, 11]. When dealing with nominal unification modulo commutativity (denoted as c), the problem involves commutative function symbols in the terms' signatures, requiring consideration during the unification process.

Section 2 covers basic concepts and notations, while Section 3 discusses the expansion of simplification rules for nominal c-unification with protected variables and the adaptation of formalizations for termination, soundness, and completeness. Section 4 introduces the nominal c-matching algorithm and examines the formalization of its termination, soundness, and completeness properties. Finally, Section 5 provides a conclusion for the paper.

Remark 4.4 specifies that the set of protected variables of a c-matching problem remains unchanged during derivations, and this set is denoted as "x" for simplicity in the following results.