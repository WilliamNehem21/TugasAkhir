The simple abstract data types defined in section 2.1 can be interpreted in various ways informally. Their operations may be undefined beyond their preconditions, or they may be restricted beyond the preconditions. Furthermore, the behavior within the precondition may be fully correct, meaning the operation will terminate in one of the post-states designated by the relation, or it may be partially correct, meaning the operation might terminate and, if it does, it will terminate in one of the post-states indicated by the relation.

Next, we address data types with explicitly lifted operations. In this case, we only consider relational semantics that result from a specific lifting of the operations of a simple abstract data type, which is an instance of formalizations of either must or may terminate as described in section 2.1.

The well-known result by Hoare, He, and Saunders, stating that forward and backward simulation are sound and jointly complete, applies to the data types with lifted state. However, as emphasized by Boiten and Derrick, the property of joint completeness does not hold for what we refer to as operation-lifted data types with the must-terminate interpretation. It should be noted that this result fails due to the constraints on which operations are valid in the abstract data type, making it difficult to compute chains of simulation between operation-lifted data types that refine each other. To restore the completeness property, it is necessary to relax this restriction.

Clause (ii) represents the preservation of the pre-condition or an applicability condition, while clause (iii) is the strengthening of the post-condition or a correctness condition. With data types featuring lifted operations (defined in 2.3 and 2.4), both logical and relational styles of simulation are the same. However, when utilizing data types over lifted state, it is important to note that there are data types that are not data types with lifted operations. It becomes apparent when using definition 3.4 that it is not equivalent to using definition 3.9 on a data type over lifted state.