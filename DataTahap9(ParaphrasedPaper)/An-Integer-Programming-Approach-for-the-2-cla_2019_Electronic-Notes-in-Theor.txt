The mixed integer programming formulation discussed in the paper involves binary variables to represent the allocation of points to groups and continuous variables to represent the hyperplanes separating different groups. However, the paper investigates a formulation that only utilizes the binary variables, which determine the selected points and can be extended to handle multiple groups straightforwardly.

It is stated that the optimal value of the model is nonnegative, with the parameter "m" being a large positive number. This is deduced from a classical result applied to the mixed integer programming formulation for the 2-class classification problem. As the model is a linear programming formulation, it can be efficiently solved, making the feasibility check practically advantageous.

It is important to note that the feasibility of the linear programming model is not contingent on the specific value of "m." Even if "m" is small, the problem remains feasible, although some solutions may be lost. However, small values of "m" often yield mathematically meaningless solutions. Therefore, setting "m" to a value significantly larger than the data points' encapsulating box size generally yields good quality solutions.

The initial model comprises the z-variables without any constraints, and lazy constraints are added dynamically following the procedure outlined in section 3. The paper compares this implementation with the same algorithm that incorporates cuts using the integer-programming-based separation procedures described in section 4. The algorithm is implemented in Java, utilizing Cplex 12.8 as the linear programming solver for the linear relaxations and feasibility checks, and the mixed integer programming solver for the separation problems.