Numerous numeric abstract domains have been described in the literature for the purpose of identifying relationships among numeric variables in imperative programs. These abstract domains vary based on the structure and quantity of constraints on program variables that can be represented. The interval, octagon, and polyhedra abstract domains are among the most commonly utilized numeric domains.

In terms of expressive power, polyhedra > octagon > interval and polyhedra > parallelotopes > interval. Octagons and parallelotopes are considered incomparable. A more expressive domain is theoretically capable of more accurately tracking the values of program variables during program execution. When comparing two analyses conducted using domains a and b with a > b, one would expect the analysis using a to identify more constraints or more precise bounds than the analysis using b. However, the expressiveness of a domain does not provide the complete picture, as other factors such as abstract operators and widening can also influence the analysis results.

Widening h79 retains all the constraints of the polyhedra in the previous iteration, under the condition that the constraint is satisfied by all the points in the polyhedra of the current iteration. Widening bhrz03 improves on the standard widening by integrating four different heuristic techniques derived from upper bound operators. Both widening methods can lead to loss of precision, resulting in less accurate analyses than what can be achieved with the simpler interval domain.

From a theoretical standpoint, the computational complexity, in terms of space and time, of the abstract operators can be easily studied. Operations on intervals are typically linear in the number of variables, while operations on octagons and parallelotopes are at most cubic on the number of variables. Polyhedra have a worst-case exponential complexity in terms of the number of variables.

However, understanding the behavior of each abstract operator alone does not provide a complete understanding of the performance of a domain in a real analysis. Predicting the behavior of polyhedra is particularly challenging due to the varying cost of operations depending on the complexity of the polyhedra found during the analysis. Consequently, there are instances where polyhedra are faster than octagons and instances where they are much slower.

In this paper, the focus is on comparing the precision of analyses using the same algorithm but different domains. However, direct comparison of the analysis results is not conducted due to the likelihood of encountering many cases of incomparable results. Instead, the precision of the analysis is evaluated primarily on the interval constraints as they are considered more easily applicable and can be explicitly represented in all the domains. A comparison on octagonal constraints is also included for completeness, but is deemed less relevant than the comparison on interval constraints.

Benchmarks were performed using the jandom static analyzer on the alice benchmarks. The test-suite comprises a total of 108 linear transition systems with 326 locations, including 161 loop heads. A classical two-phase analysis is performed for each model, consisting of an ascending chain with widening and a descending chain with narrowing. Various widening and narrowing delay values were experimented with to evaluate their impact on the precision of the analyses.

In summary, this paper compares the precision of analyses using different domains and evaluates the impact of widening and narrowing on the analysis results. It also provides insights into the computational complexity of abstract operators and their practical performance in real analysis scenarios.