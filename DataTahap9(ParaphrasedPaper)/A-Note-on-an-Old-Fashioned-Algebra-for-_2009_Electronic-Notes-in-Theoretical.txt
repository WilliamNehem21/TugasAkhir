The note is structured as follows. Section 2 provides an overview of typed graphs with interfaces, while section 3 does the same for dgs-monoidal categories and explains their relationship with graphs with discrete interfaces. Section 4 discusses discrete and disconnected graphs, while section 5 presents initial findings on disconnected dpo rewriting. Finally, section 6 concludes the note and offers additional references.

Nodes are identified by their type, and nodes in the input and output interfaces are distinguished by encircling them with dotted or solid circles, respectively. Edges are represented as boxes with an entering tentacle (from the source) and a leaving tentacle (to the target).

For instance, in graph f1, there are four nodes and four edges. The node labeled x is an input node, while z is an output node. The edges are labeled by boxing their type, with the two edges in f1 labeled f having an outgoing tentacle to the node labeled z and an incoming tentacle from two different nodes, both labeled y.

It is worth noting that d(p) can perform more direct derivations than p. However, the former class can be appropriately constrained, such as by considering only those derivations obtained via the natural pushout complement. For further details, readers are referred to [7, section 3].

Graphs with interfaces are useful in the context of graph rewriting as they enable an inductive presentation of the direct derivations obtained through the dpo approach while maintaining all its concurrency features. The issue of concurrency is discussed in detail in section 5, whereas section 6 directs readers to related works and especially to the study of disconnected graphs, which forms the basis for the reformulation and generalization presented in this paper.