In this academic paper, the authors explore the integration of SitDRM (Secure Information Technology Digital Rights Management) and Trusted Computing (TC), and the use of TC to implement a secure terminal. They present a prototype implementation of a secure terminal and discuss the challenges encountered during the software development process. Additionally, they describe the integration of the prototype terminal into the complete SitDRM enterprise system.

A key objective outlined in the paper is to prevent data exposure and ensure that sensitive data is not leaked to unauthorized processes. It is emphasized that sensitive data must be kept unencrypted in memory when being accessed or utilized, and this memory must be managed in a secure manner similar to the management of encryption keys.

The paper discusses how data can be protected by encrypting it with a unique content key, and any license granting rights to access the data contains the content key encrypted by the public key of the terminal. It is suggested that if licenses are only issued to verified genuine terminals, the data and content encryption key remain accessible only to trusted terminals.

The authors also delve into the role of Trusted Platform Module (TPM) in protecting data and controlling the existence and movement of secret keys and unencrypted data in a SitDRM data user terminal. They aim to utilize TPM as a trusted input/output channel between the SitDRM software and output devices, albeit acknowledging the limitations of using TPM as a cryptographic processor in this context.

The paper describes a client software interface that enables users to connect to a server, download licenses or digital items, and exercise granted permissions. The client software heavily utilizes TPM and is illustrated to deliver a significant portion of the TPM implementation.

However, the paper highlights some limitations of the prototype, such as the absence of secure memory due to the development platform lacking a trusted operating system and support for isolating process memory spaces. To address this, the SitDRM enterprise system is proposed as a solution using a role-based access control model and a public key infrastructure for verifying the public keys of users and roles.

Furthermore, the paper discusses the creation of TPM keys with specified types and emphasizes the importance of considering encoding methods when creating keys to avoid unexpected behavior. It also points out the absence of credentials and PKI distribution for integrity reporting, which could lead to potential trust issues when verifying trusted terminals.

In summary, the paper presents an in-depth exploration of the integration of SitDRM and Trusted Computing, the implementation of a prototype secure terminal, and the associated challenges and considerations for ensuring data protection and integrity in SitDRM enterprise systems.