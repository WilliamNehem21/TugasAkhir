We propose a framework for analyzing access control policies that is designed to simplify the specification and verification tasks for security administrators. Our focus is on policies within the category-based access control model, which has been demonstrated to encompass many well-known access control models such as mac, dac, and rbac. By using a graphical representation of category-based policies, we demonstrate how responses to typical administrator queries can be automatically computed, and how properties of access control policies can be assessed.

Access control systems are utilized to safeguard resources against unauthorized use. At its core, an access control policy delineates the actions that each user is permitted to take with regard to each resource, with each pair of resource and action constituting a permission.

Currently, there are various access control models and languages for specifying access control policies in use. One widely used model is the ANSI hierarchical Role-Based Access Control (H-RBAC) model, where users are assigned to roles and each role is assigned a set of permissions. More flexible models, such as the distributed category-based access control model, have also been explored.

The remaining sections of the paper are organized as follows: Section 2 revisits the category-based access control model, Section 3 examines emergency policies, Section 4 introduces a graph-based framework for representing and analyzing category-based policies, and Section 5 describes its implementation using a Ruby application for policy visualization and analysis. Section 6 discusses related work, and Section 7 outlines conclusions drawn from the study and suggests avenues for further research.

We propose an axiomatization of distributed category-based access control for specifying federative policies, which are obtained as a composition of individual access control policies. In a federation, each member possesses its own access control policy and contributes to the definition of a global access control policy. We extend the operational semantics of the distributed model by using distributed term rewrite systems (DTRS), which are term rewrite systems partitioned into modules, each associated with a unique identifier, and annotated with site identifiers informative of their origin.

We commence by establishing a method for representing policies through graphs, which offer advantages over textual representations in terms of understanding and analysis. We explore the challenge of formalizing the global authorization policy and discuss strategies for combining policies graphically. We highlight the dynamic nature of relations within the model and the significance of the ld function for transitioning to future policy states.

We also address the computation of the minimum unique graph corresponding to a policy and seek to minimize the number of changes needed to achieve a desired set of permissions for a given set of principals. Our primary goal is to provide a framework for analyzing policy updates, particularly in emergency scenarios, to enable security administrators to identify policy changes swiftly.

We aim to combine normal policy graphs with emergency policy graphs using appropriate composition operators, such as union with priority to grant, to represent policy scenarios involving emergencies. An aspect of graph representation involves determining the color and connections of entities as a means of visualization, with the aim of facilitating the identification of policy flaws.

Finally, we propose the utilization of rewriting systems for specifying policies to establish security properties and reasoning about policy properties, building on the extensive theory of rewriting. Our work offers a new perspective on category-based access control for distributed environments, employing labeled graphs and accommodating concepts such as times, events, and histories not typically included in traditional access control models. We also propose the integration of tools for automatically checking the consistency and totality of access control policies.