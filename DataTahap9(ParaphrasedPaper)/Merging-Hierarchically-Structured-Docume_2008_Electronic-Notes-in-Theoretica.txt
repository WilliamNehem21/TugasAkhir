The data aspect of a workflow management system focuses on the transfer of business documents between different tasks. A complex workflow system may comprise multiple subsystems distributed across a computer network, which can concurrently update partial views of the document. A merge operation is required to consolidate these different updates into a coherent global document. This article proposes a more straightforward merge operation for documents with finite lifetimes and no need to erase information, unlike existing strategies that involve conflicts arising from erasing or restructuring operations.

The document is represented as a hierarchical-structured tree with attributes, describing the physical appearance of the document. The legal structures are defined by a context-free grammar and constraints on attributes, but for the purposes of this article, only the structural aspects are considered, independent of semantic issues. The document may exist in multiple copies in different parts of the system and be manipulated asynchronously by independent actors using domain-specific interfaces. Each actor operates on a distinct partial view of the document, and a specific view is defined by a subset of grammatical symbols relevant to the corresponding domain of expertise.

To merge partial views, the article introduces a binary merge operator that can be iteratively applied to the set of partial views. The merge operation may not always produce a unique document and can result in an infinite set of documents. The set of legal documents associated with a partial view is characterized as a regular set of trees, and merging partial views involves computing the intersection of the corresponding regular sets of trees using a synchronization operation on coalgebras.

The article presents a coinductive data structure to represent potentially infinite sets of trees, called arenas. The emptiness of a finitely-presented arena can be decided, and each arena represents the set of trees conforming to specific patterns. An algorithm is provided to decide the emptiness of a finitely-presented arena, which involves applying a function to the pruning of the arena and accumulating the set of states encountered along the path.

Additionally, the article discusses the adaptation of the expansion algorithm and the synchronization operator for document manipulations in workflow systems. It proposes a bottom-up approach to coordinate the grammatical structures associated with specific activities in the workflow and synthesize control to ensure unambiguous merging of partial views of a global document.

Furthermore, the article explores the relationship between the expansion algorithm and functional parser combinators, as well as its potential connection to program inversion. It also considers the use of web services and attribute grammars to address the problem of performing queries on partial views during merge operations, allowing information to flow between activities operating on different views of a document.