In order to develop systems with soft constraints, it is necessary to have languages that can express probability distributions governing the delays encountered during the evolution of the system. Examples of such languages include pepa and the stochastic pi calculus, which capture stochastic temporal behavior. The operational semantics of these languages are defined in terms of labelled probabilistic transition systems, which represent continuous-time stochastic processes, often in the form of continuous-time Markov stochastic processes.

When extending loops with a deterministic delay operation, we generate semantic models known as categories of m-timed stochastic relations (tsrelm), which expand upon the category srel of stochastic relations commonly used to provide semantics to probabilistic languages of while loops. These categories establish a connection between probabilistic choice and stochastic temporal behavior by demonstrating that both can be derived from a primitive operation that allows for sampling probability distributions.

The standard language for while loops, known as islwhile or imp, requires a monad that imposes sufficient structure on its kleisli category to support iteration. Following the approach of Manes and Arbib, this entails that the kleisli category should be partially additive. Intuitively, a loop represents the limit of the finite unrollings of its body, and partial additivity captures this limiting process through an infinite summation operator on hom-sets.

Partially additive categories, such as the category par of sets with partial functions and the category cpo of complete partial orders and continuous functions, provide familiar examples. In these categories, partial additivity enables the summation of families of elements under specified conditions, thereby facilitating the interpretation of loops.

While deterministic delays are too simplistic to capture complex time behavior in systems, a more expressive language should be capable of representing the stochastic duration of complex computations by sampling delays from probability distributions. The introduction of a language with probabilistic delays and deterministic state behavior precedes a transition to a fully probabilistic language in the subsequent section.

The model interprets time delay using values in the monoid m, and composition is defined in terms of relating input x to output c through a series of delays, with probabilities associated with each step summed to determine the overall probability.

Various frameworks, including queueing systems, stochastic automata, generalised stochastic Petri nets, and generalised semi-markov processes, are available to describe and model stochastic temporal behavior. Our approach shares similarities with stochastic automata and can be viewed as a partial reformulation of stochastic automata within a categorical setting, offering a direct transition semantics.

The search for languages to express stochastic temporal behavior stemmed from the need to construct finite and compositional models for studying such behavior in systems with soft constraints. Stochastic process calculi, with their support for concurrency and compositionality, have been widely used for this purpose. The operational semantics of these languages involve annotated reduction semantics that record the rate of reaction, which corresponds to the introduced time delays. The use of exponential distributions to model delays is common in stochastic process calculi, and the resulting reduction semantics yield continuous-time Markov processes, enabling efficient reasoning about the processes expressed in these calculi.

In conclusion, there is a need to explore the relationship between the denotational models proposed in this work and the operational models used in the stochastic process calculus literature, with the aim of applying our categories or their variants to provide semantics to stochastic process calculi. This research is ongoing, and we hope to report on its findings in the near future.