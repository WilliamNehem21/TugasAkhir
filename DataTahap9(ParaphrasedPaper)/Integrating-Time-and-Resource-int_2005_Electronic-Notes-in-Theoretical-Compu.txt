This paper introduces a formal model for analyzing resource allocation and scheduling in real-time systems, extending the concurrent refinement language circus by integrating continuous time and resource information. The model accounts for resource constraints and enables accurate determination of temporal properties. Furthermore, the paper applies the model to the problem of partitioning in co-design and demonstrates how partitioned programs maintain the behavior specified correctly.

The timing behavior of real-time systems is influenced by both process synchronization and the availability of system resources. While numerous timed models have been proposed for designing and verifying real-time systems, many of these models assume the availability of unbounded resources, which does not align with the reality of real-time systems.

The models presented in this paper are based on the circus specification language, which combines features of CSP and Z, and has a formal semantics rooted in the unifying theories of programming (UTP). These models incorporate time information for reasoning about real-time programs and integrate resource information for analyzing resource allocation in real-time systems. The paper also introduces healthiness conditions for ensuring correct behavior of the continuous time model when time is integrated into circus.

The paper also outlines two resource models based on the time model and explores their relationships. Additionally, it presents an example from the co-design field to illustrate the application of these models in verifying program correctness. The paper concludes with a discussion on future work, including the development of refinement laws based on the presented models and the creation of a proof-assistant tool.

In the future, the paper aims to develop a set of refinement laws based on the presented models to facilitate program development and automate the verification process for real-time systems.