In recent times, there has been a shift in user preferences for computing due to advancements in mobile computing technologies. Numerous reports and studies have emphasized the significance of mobile cloud computing (MCC) and its impact on both mobile clients and enterprises. For instance, a study by ABI Research predicted that over 240 million businesses would utilize cloud services through mobile devices by 2015, driving MCC revenue to $5.2 billion. Additionally, there has been a rapid increase in the use of smartphones across various domains such as enterprise, information systems management, gaming, e-learning, entertainment, and healthcare. Despite the widespread predictions that mobile devices will dominate future computing, they are still constrained by factors such as battery life, processor capabilities, and memory capacity. However, modern mobile devices now possess ample resources including fast processors, large memory, and high-resolution screens.

The paper is structured as follows: Section 2 provides an explanation of essential background concepts and terminology related to MCC, the concept of MCC, and computation offloading. Section 3 discusses offloading approaches, while Section 4 compares different offloading frameworks and their key issues. Section 5 highlights general challenges in computation offloading for MCC, and Section 6 offers a summary and points to future work.

Cloud computing (CC) offers clients access to diverse applications as services via the internet. Examples of public CC services include Windows Azure and Amazon Web Services (AWS). Windows Azure is a flexible cloud platform that provides various services for developing, deploying, and running web applications and services in cloud data centers, while AWS offers infrastructure and software as a service models, allowing users to utilize virtualized resources in cloud data centers.

The process of computation offloading involves crucial steps such as application partitioning, offloading decision, and execution on the remote server. Partitioning divides applications into offloadable and non-offloadable components, while the offloading decision determines whether to execute components remotely based on the current context. There are two types of offloading frameworks: static, where all steps are performed at design time, and dynamic, where at least the final decision for offloading is made at runtime.

Various existing offloading frameworks, such as Odin, MAUI, and Cuckoo, apply distinct approaches to offload tasks to remote cloud servers. However, none of these frameworks utilize container technology, such as Linux containers (LXC), which is gaining attention as a lightweight alternative to full machine virtualization. Standardizing offloading frameworks for different smartphone platforms remains a challenging issue in the MCC field due to the diversity and heterogeneity of smartphone architectures and operating systems.

The available offloading frameworks have limitations, including lack of standard architectures, and a need for automation. Addressing these limitations is crucial to developing efficient and seamless offloading processes. Overall, the paper presents existing frameworks for computation offloading and examines the challenges still faced in the domain of MCC.