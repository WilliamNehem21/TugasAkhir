Today's society and economy heavily depend on interconnected systems for communication, finance, energy distribution, and transportation, which are increasingly reliant on networked information systems. This interdependence has led to vulnerabilities, with notable instances of exploitation. Designing and implementing secure systems within an open network is a challenging task, as most vulnerabilities stem from implementation flaws. It is essential to have confidence in the protection of security-critical systems against potential attacks.

To execute a cash-based load transaction, the cardholder inserts their card and money into the designated slots of the load device and enters a PIN to load the cash onto the card. The cardholder only interacts with the load device display and not directly with the card. A Load Secure Application Module (LSAM) is utilized for cryptographic and control processing, residing within the load device or the load acquirer host. The load acquirer maintains a transaction log and the LSAM communicates with the card issuer through the load host application. The security of the load protocol between the card, LSAM, and card issuer is crucial to prevent unauthorized protocol initiation and ensure secure communication of the amount to be loaded.

The protocol participants include the card, LSAM, and issuer, each associated with a logging class (clog, llog, and ilog, respectively) for recording transaction data.

We aim to formalize security conditions for testing using a model-based approach, focusing on ensuring security for the load acquirer. According to the Common Electronic Purse Specifications (CEPS), the values mln and rln in the creditforload message to the card serve as a guarantee for the load acquirer to pay the specified amount to the issuer. The security condition is formally defined to address this.

In classical specification-based testing, the primary focus is on the system's normal behavior, such as computing the correct result for specific inputs. However, when considering security aspects, the emphasis shifts to ensuring that the system behaves securely even when under attack. Therefore, in testing, it is necessary to assume that system components may act maliciously.