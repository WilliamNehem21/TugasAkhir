is a conservative extension of the standard one. we contrast the existing fair testing[3,19] with those that naturally arise by imposing weak and strong fairness as defined by costa and stirling. this comparison provides the expressiveness of the various fair testing-based semantics and emphasizes the discriminating power of the one already proposed in the literature.



the proposed labeling technique allows to define weak and strong fair computations. at the top of them we introduce must testing semantics, to obtain the so-called weak-fair must semantics and strong-fair must semantics. these two fair testing semantics are compared with an existing one in the literaturethe fair testing[3,19]that does not need any labeling of actions. we present a comparison between fair testing and weak and strong-fair must semantics as well as with standard must testing. this comparison emphasizes the expressiveness of the different fair testing semantics, especially for what it concerns fair testing. we show interesting side-effects when the must testing is imposed over weak and strong-fair computations. in particular, any strong-fair computation is weak-fair too, while it turns out that the weak-fair must semantics is strictly finer than the strong-fair must one.



vestigate why strong and weak fairness notions are not enough to characterize fair testing semantics. as usual, section 8 gathers several related work and section 9 contains a few concluding remarks and further work. all of the proofs omitted in the body of the paper are in the appendixes.



a strong fair computation is a maximal computation such that no label is live infinitely often, i.e. no label can become live, lose its liveness, become live again, etc. forever. formally, strong fairness imposes that for every label there is some point beyond which it never becomes live. any finite computation is strong fair because all the actions, corresponding to live labels, are performed, and the computation stops when there is no reduction at all. some useful results follow: i.e. there exists some observer o that distinguishes p and q w.r.t. both sfmust and wfmust. however, if we only consider transitions out of the terms p and q, they are even strong bisimilar. it follows that(p| o) e(q| o) are strong bisimilar, for every observer o. we conclude that a fair testing definition can not distinguish p and q.



