An adaptive Cuckoo search algorithm for optimisation
M. Marelia,⇑, B. Twalab
aDepartment of Electrical and Electronics Engineering, University of Johannesburg, PO Box 542, Auckland Park 2006, South Africa
bInstitute of Intelligent Systems, Department of Electrical and Electronics Engineering University of Johannesburg, PO Box 542, Auckland Park 2006 , South Africa
article info
Article history:Received 18 May 2017Revised 30 August 2017Accepted 3 September 2017Available online 6 September 2017Keywords:Cuckoo searchOptimisationRandom walkLévy distributionPareto distributionTest functionsabstract
Cuckoo search is one of many nature-inspired algorithms used extensively to solve optimisation prob-lems in different ﬁelds of engineering. It is a very effective in solving global optimisation because it is ableto maintain balance between local and global random walks using switching parameter. The switchingparameter for the original Cuckoo search algorithm is ﬁxed at 25% and not enough studies have beendone to assess the impact of dynamic switching parameter on the performance of Cuckoo search algo-rithm. This paper’s contribution is the development of three new Cuckoo search algorithms based ondynamically increasing switching parameters. The three new Cuckoo search algorithms are validatedon ten mathematical test functions and their results compared to those of Cuckoo search algorithms withconstant and dynamically decreasing switching parameters respectively. Finally, the simulations in thisstudy indicate that, the Cuckoo search algorithm with exponentially increasing switching parameter out-performed the other Cuckoo search algorithms./C2112017 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University. This is anopen access article under the CC BY-NC-ND license ( http://creativecommons.org/licenses/by-nc-nd/4.0/ ).Contents1. Introduction . . ....................................................................................................... 1 0 72. Cuckoo search. ....................................................................................................... 1 0 82.1. Cuckoo breeding behaviour . . . . . . . . . . . . . . ......................................................................... 1 0 8 2.2. Lévy flights . . . . . . . . . . . ......................................................................................... 1 0 8 2.3. Cuckoo search algorithm ......................................................................................... 1 0 8 2.4. Some Cuckoo search algorithm improvements . . . . . . . . . . . . . . . . . . ...................................................... 1 0 9 2.4.1. Step size improvements . . . . . .............................................................................. 1 0 9 2.4.2. Other improvements . . . . . . . .............................................................................. 1 0 9 3. Proposed Cuckoo search . . . . . . . . . . . . ................................................................................... 1 0 9 4. Results and discussions . . . . . . . . . . . . . ................................................................................... 1 1 0 4.1. Simulation setup . . . . . . . ......................................................................................... 1 1 0 4.2. Characteristics of test functions . . . . . . . . . . . ......................................................................... 1 1 4 4.3. Simulations results and discussions. . . . . . . . ......................................................................... 1 1 4 5. Conclusions. . . ....................................................................................................... 1 1 4Acknowledgements . . . . . . . . . . . . . . . . ................................................................................... 1 1 4 References . . . ....................................................................................................... 1 1 4
1. IntroductionOptimisation plays an important role in solving different engi-neering problems. The goal of optimisation process is to determine
http://dx.doi.org/10.1016/j.aci.2017.09.0012210-8327//C2112017 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University.This is an open access article under the CC BY-NC-ND license ( http://creativecommons.org/licenses/by-nc-nd/4.0/ ).⇑Corresponding author.E-mail addresses:mmareli@hotmail.com(M. Mareli),btwala@uj.ac.za(B. Twala). Peer review under responsibility of King Saud University.
Production and hosting by ElsevierApplied Computing and Informatics 14 (2018) 107–115
Contents lists available atScienceDirect
Applied Computing and Informatics
journal homepage: www.sciencedirect.com
either a maximum or a minimum value of the problem beingsolved, generally known as the objective function [1]. These prob- lems include but not limited to systems design, electricity networkoperation, electricity generation, wireless communications routingand minimisation of energy losses during electricity transmission.Proper validations of optimisation algorithms require assessmentof computational time and convergence rate in addition to theaccuracy to determine the minimum or maximum values [2–8]. Some researchers have innovated optimisation algorithmsbased on nature observations, these algorithms are known asnature-inspired algorithms. In[9]a bat-inspired algorithm was developed based on echolocation to sense distance between a batand its surroundings. Particle swarm optimisation (PSO) was inno-vated after observing behaviour of ﬁsh and birds schooling [10]. Differential evolution (DE) algorithm was created by Storm andPrince[11]based on population evolution using mutation, cross-over and selection operations. Ant and bee algorithms were devel-oped based on the foraging behaviour of ants and bees that usepheromone as a chemical messenger and the concentration ofpheromone is regarded as indication of quality solutions to theproblem being solved[12]. Simulated annealing (SA) is based onthe characteristics of the metal annealing process [13]. Cuckoo search (CS) algorithm is also a nature-inspired algo-rithm, based on brood reproductive strategy of cuckoo birds toincrease their population[14]. However, CS is more effective thanother nature-inspired algorithms. In fact, DE, SA and PSO are spe-cial cases of CS algorithm, hence it is no surprising why CS algo-rithm outperforms them[14].I n[15]CS algorithm outperformed DE algorithm in terms of convergence speed to reach optimumsolution. In addition, CS algorithm was reported as being morecomputationally efﬁcient than the PSO [16]. Baskan[17]used CS algorithm to minimise trafﬁc congestion byimproving the performance of transportation road networks. Theobjective function was deﬁned as a total of travel time andinvested cost of 16 link capacity expansions. Cuckoo search pro-duced best results when compared to other methods found inthe literature. In[18]CS algorithm was used to maintain fault leveland the voltage ﬂuctuations within acceptable level, thus minimisereal power losses in a smart grid.The aim of this paper, is to develop and assess the performanceof Cuckoo search algorithms with increasing switching parameterbetween local and global random walks as the number of iterationincreases. The ﬁrst CS algorithm has linearly increasing switchingparameter. The second CS algorithm implements exponentiallyincreasing switching parameter, and the third CS algorithm usesincreasing power switching parameter.The rest of this paper is organised as follows: Section 2dis- cusses the Cuckoo bird’s breeding behaviour, Lévy ﬂights and CSalgorithm and some of CS algorithm improvements carried outby other scholars to make CS algorithm even more effective. Threenew CS algorithms are proposed in Section 3. Simulation results and their interpretations are discussed in Section 4. Finally, the paper conclusions are presented in Section 5.2. Cuckoo search2.1. Cuckoo breeding behaviourCuckoos are a family of birds with unique reproductive strategymore aggressive compared to other bird’s species. Some of cuckoobird’s species like Ani and Guira lay eggs in communal nests; how-ever, they may remove others’ eggs to increase the hatching prob-ability of their own eggs. Other species use brood parasitismmethod of laying their eggs in the nests of other birds or host nests[19].The parasitic cuckoos are good in sporting nests where eggshave just been laid and their timing of laying eggs is very precise.They lay one egg in the host nest which will normally hatchquicker than the other eggs. When this happens, the foreign cuckoowould remove the non-hatched eggs from the nest by pushing theeggs out of the nest. This behaviour is aimed at reducing the prob-
ability of the legitimate eggs from hatching. Furthermore, the for-eign cuckoo chick can gain access to more food by mimicking thecall of the host chicks. There are times when the host cuckoo dis-covers that one of the eggs is foreign. In that case the cuckoo eithergets rid of the egg or abandon the nest altogether and moves tobuild a new nest somewhere else[19].2.2. Lévy ﬂightsLévy ﬂights are random walks whose directions are random andtheir step lengths are derived from the Lévy distribution. TheseLévy ﬂights are performed by animals and insects and it is charac-terised by series of straight ﬂights followed by sudden 90
degree turns. Compared to normal random walks, Lévy ﬂights are moreefﬁcient in exploring large–scale search areas. That is mainly dueto Lévy ﬂights variances increases much faster than that of the nor-mal random walk. Lévy ﬂights can reduce the number of optimisa-tion algorithms iterations by about 4 orders compared to normalrandom walk[14].2.3. Cuckoo search algorithmCuckoo search algorithm is a nature-inspired algorithm devel-oped based on reproduction of cuckoo birds [14]. While working with CS algorithms, it is important to associate potential solutionswith cuckoo eggs. Cuckoos normally lay their fertilised eggs inother cuckoos’ nests with the hope of their off-springs being raisedby proxy parents. There are times when the cuckoos discover thatthe eggs in their nests do not belong to them, in those cases the for-eign eggs are either thrown out of the nests or the whole nests areabandoned. The CS optimisation algorithm is basically based on thefollowing three rules:/C15Each cuckoo selects a nest randomly and lays one egg in it./C15The best nests with high quality of eggs will be carried over tothe next generation./C15For a ﬁxed number of nests, a host cuckoo can discover a foreignegg with a probabilityp
aє[0,1]. In this case, the host cuckoo caneither throw the egg away or abandon the nest and build a newone somewhere else.The last rule can be approximated by replacing a fraction p
aof the n host nests with new nests (with new random solutions).The quality or ﬁtness of a solution can simply be proportional tothe value of the objective function. From the implementation pointof view, the representation that is followed is that each egg in a
Table 1Local and Global random walk parameters.
Parameter Descriptionx
tiand xtk Current positions selected by random permutation.
a Positive step size scaling factor.x
tþ1i Next position.s Step size./C10Entry-wise product of two vectors.H Heavy-side function.p
a Used to switch between local and global random walks.
e Random number from uniform distribution.Lðs;kÞLévy distribution, used to deﬁne the step size of random walk108 M. Mareli, B. Twala / Applied Computing and Informatics 14 (2018) 107–115nest represents a solution, and each cuckoo can lay only one egg(thus representing one solution). We can safely make no deferencebetween an egg, a nest or a cuckoo. The aim is to use the new andpotentially better solution (cuckoo egg) to replace a bad solution inthe nest.Cuckoo search algorithm is very effective for global optimisa-tion problems since it maintains a balance between local randomwalk and the global random walk. The balance between local andglobal random walks is controlled by a switching parameterp
a/C15½0;1/C138. The local and global random walks are deﬁned by Eqs.(1) and (2), respectively. Their parameters are deﬁned in Table 1.
xtþ1i¼xtiþas/C10Hðpa/C0eÞ/C10xtj/C0xtk/C16/C17ð1Þx
tþ1i¼xtiþaLðs;kÞð 2Þ
The basic steps of the Cuckoo search algorithm based on threerules can be summarised as pseudo code shown in Fig. 1.2.4. Some Cuckoo search algorithm improvements2.4.1. Step size improvementsThis section discusses research studies done to improve the efﬁ-ciency of Cuckoo search, these studies apply different probabilitydistributions to determine the Cuckoo search random walk stepsizes.The ﬁrst study was done by Zheng and Zhou [20], they used Gauss distribution instead of original Lévy distribution to deter-mine the random walk step size. When applied to ﬁnd global min-imum values of 6 mathematics test functions, the Gauss CSperformed better than the Lévy CS for all cases. Furthermore, theGauss and Lévy CS algorithms were used to solve engineeringdesign optimisation problem. The results further conﬁrmed thatGauss CS is better than the Lévy CS in terms of higher convergencerate and the average generation was reduced from 20.15 to 13.95for Gauss CS.The rapid growing rate of documentation in the Internet spaceposed some challenges especially in the documentation retrievalsprocess. Zaw and Mon[21], solved this web document clusteringby using a Gauss based CS algorithm. The algorithm was testedon 3 clusters and 300 documents. The results conﬁrmed that GaussCS algorithm outperformed Lévy CS algorithm. More speciﬁcally,the convergence rate of Gauss CS and Lévy CS are 120 and 160 iter-ations, respectively. The quality of clustering was determined by acombination of Precision and Recall, called F-measure where highF-measure indicated high accuracy. The Gauss CS algorithm andLévy CS algorithm produced F-measure of 0.626 and 0.619,respectively.Ho et al.[22]proposed CS algorithm using Gaussian and Cauchydistributions and applied them to solve economic emission loaddispatch problem with multiple fuel options. The new versions ofCS algorithms resulted in fewer parameters, fewer equations andshorter computational processes when compared to Lévy CS. Inaddition, the Gauss CS performed better than the Cauchy CS algo-rithm. The application of Gauss CS and Cauchy CS to short termhydrothermal scheduling with reservoir volume constraint wasdone by Nguyen et al.[23]. In this study, however, Lévy CS pro-duced the best results with lowest minimum compared to Gaussand Cauchy CS algorithms. Furthermore, the Gauss CS algorithmaverage time was 1.47% more than the Lévy CS algorithm averagetime. While the Cauchy CS algorithm average time was 4.83% morethan that of Lévy CS algorithm.Roy et al. managed to improve CS by using Gamma distributioninstead of original Lévy distribution. When tested on 6 mathemat-ical test functions, the Gamma based CS proved to be more accu-rate and efﬁcient than the Lévy CS algorithm [24]. The best performance was recorded for the Ackley test function for 1000iterations where Lévy and Gamma CS algorithms produced averageminimum valves of 1.0923exp (/C015) and 2.22507exp (/C0308), respectively.2.4.2. Other improvementsIn the original cuckoo search algorithm, switching parameterbetween local and global random walks is keep constant at 0.25as Cuckoo search algorithm searches for global minima. There islimited research studies in CS algorithm efﬁciency improvementby dynamically changing the value of switching parameter. In[25]the value of switching parameter was linearly decreased asCS algorithm was searching for global minimum value of the testfunction. Another CS improvement was achieved by selecting suit-able nest by using sorting function instead on permutation func-tion[26].3. Proposed Cuckoo searchIn the previous Section2, CS efﬁciency improvements wereaccomplished by determining the CS random step size using otherprobability distribution functions other than the original Lévy dis-tribution. In this section three CS algorithms are proposed based ondynamic increasing switching parameter as the number of CS iter-ations increases. The new CS algorithms are deﬁned as per Eqs. (3)– (5)and their parameters are summarised in Table 2.Objective function  (), =( 1, 2……. )
Generate initial population of n host nests (i = 1, 2...n) While(t < Max Generation) or (stop criteria)Get a cuckoo (say i) randomly by Lévy distribution;Evaluate its quality/fitness 
;Choose a nest among n (say j) randomly;Evaluate its quality/fitness 
;If(
> )Replace j by the new solution;EndA fraction of (
) of worse nests are abandoned andnew ones are built at new locations via Lévy flights;Keep the best solutions (or nests with quality solutions);Rank the solutions and find the current best;End whilePost processing
Fig. 1.Lévy based Cuckoo search pseudo code for a global optimisation.
Table 2Dynamic Switching parameter deﬁnition.
Parameter Descriptionp
aCi Switching parameter for the current iteration. p
aMax Maximum value of switching parameter. C
i Current iteration. T
i Set total number of iteration. Exp Mathematical exponential functionM. Mareli, B. Twala / Applied Computing and Informatics 14 (2018) 107–115 109The ﬁrst proposed CS algorithm uses switching parameterwhose value is linearly increased as the number of CS iterationsincreases. The switching parameter is deﬁned by Eq. (3).
paCi¼ðpaMaxÞ/C3ðC i=TiÞð 3Þ
Eq.(4)corresponds to switching parameter that is exponen-tially increased as iterations increases.
paCi¼ðpaMaxÞ/C3ExpðC i=TiÞð 4Þ
Eq.(5)represents switching parameter that is increased in apower of three as iterations increases.
paCi¼ðpaMaxÞ/C3ðC i=TiÞ3ð5Þ
4. Results and discussions4.1. Simulation setupFive Cuckoo search algorithms tabulated in Table 3were inves- tigated in MATLAB version 7.10.0.499 (R201a). The test environ-ment was FUJITSU laptop with the following speciﬁcations; RAMof 3.0 GB, CPU is Intel Celeron 900@2.2 Ghz and 32 bit windows7 home Basic operating system.The number of nests, n was set to 25 for all CS algorithms sinceany number between 15 and 40 is sufﬁcient for most optimisationTable 3Different Cuckoo search algorithms based on changing switching parameter.
CuckoosearchDescriptionCSCo This Cuckoo search uses constant switching parameter.CSLD Cuckoo search using linear decreasing switching parameter.CSLI Cuckoo search using linear increasing switching parameter.CSEI Cuckoo search using exponential increasing switchingparameter.CSPI Cuckoo search using power increasing switching parameter.
Table 4Test functions modality and global minimum values.
Function Modality Global minimum value ReferencesAckley Multimodal 0 [29] Griewank Multimodal 0 [27] Bohachevsky Multimodal 0 [14] De Jong Unimodal 0 [30] Matyas Unimodal 0 [14] Zakharov Unimodal 0 [14] Goldstein-Prices Multimodal 3 [14] Rosenbrock Unimodal 0 [31] Easom Unimodal /C01[14] Michalewicz Multimodal /C09.66[32]
Table 5CSCo results.
Test Function Global minimum valueAckley 1.10E-07Griewank 1.47E-06Bohachevsky 0De Jong 1.31E-17Matyas 6.60E-42Zakharov 9.79E-10Goldstein-Prices 3Rosenbrock 8.12E-01Easom /C01 Michalewicz /C07.82Table 6CSLD results.
Test Function Global minimum valueAckley 9.67E-08Griewank 1.97E-06Bohachevsky 0De Jong 6.44E-18Matyas 6.75E-46Zakharov 2.90E-12Goldstein-Prices 3Rosenbrock 1.31E-01Easom /C01 Michalewicz /C07.39
Table 7CSLI results.
Test Function Minimum valueAckley 3.35E-08Griewank 3.72E-08Bohachevsky 0De Jong 7.26E-18Matyas 1.22E-46Zakharov 1.17–13Goldstein-Prices 3Rosenbrock 1.97E-01Easom /C01 Michalewicz /C07.01
Table 8CSEI results.
Test Function Minimum valueAckley 5.94E-07Griewank 2.83E-07Bohachevsky 0De Jong 5.83E-17Matyas 1.04E-33Zakharov 1.69E-07Goldstein-Prices 3Rosenbrock 2.19Easom /C01 Michalewicz /C08.87
Table 9CSPI results.
Test Function Minimum valueAckley 2.55E-08Griewank 1.13E-07Bohachevsky 0De Jong 5.90E-18Matyas 6.75E-50Zakharov 4.00E-16Goldstein-Prices 3Rosenbrock 5.58E-01Easom /C01 Michalewicz /C06.93
Table 1095% Conﬁdence Interval (CI).
CS CI CI LengthCSCo/C02.48495 <m< 1.48495 3.9699 CSLD/C02.401378 <m< 1.349378 3.750756 CSLI/C02.279265 <m< 1.316665 3.59593 CSEI/C02.695006 <m< 1.81006 4.505066 CSPI/C02.2280448 <m< 1.3540448 3.5820896110 M. Mareli, B. Twala / Applied Computing and Informatics 14 (2018) 107–11520 40 60 80 100 120 140 160 180 200 220012345678
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 2.Cuckoo search algorithms average convergences for Ackley function.
50 100 150 200 250 30000.10.20.30.40.50.60.70.80.9
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 3.Cuckoo search algorithms average convergences for Griewank function.
0 5 10 15 20012345
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 4.Cuckoo search algorithms average convergences for Bohachevsky function.M. Mareli, B. Twala / Applied Computing and Informatics 14 (2018) 107–115 111problems[27]. The step size scaling factor was set to 0.01 while thetotal of iterations was 1000 and the value of p
aMax was 0.25. Due to the stochastic nature of CS algorithms, the start pointsfor the algorithms are not the same and the paths followed are alsodifferent. To address these differences, each CS algorithm was runtwenty times for each of the ten test functions and the results weresaved in Microsoft excel ﬁle. Using Microsoft Excel, statistical anal-ysis was performed to determine mean, standard deviation. Then0 10 20 30 40 50 60 70 80 90051015202530354045
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 5.Cuckoo search algorithms average convergences for De Jong function.
-5 0 5 10 15 20 2500.020.040.060.080.1
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 6.Cuckoo search algorithms average convergences for Matyas function.
-10 0 10 20 30 40 50 60 70 80 90020406080100120140160180200
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 7.Cuckoo search algorithms average convergences for Zakharov function.112 M. Mareli, B. Twala / Applied Computing and Informatics 14 (2018) 107–1150 5 10 15 20 25 30 35 40 45 5000.511.522.53x104
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 8.Cuckoo search algorithms average convergences for Rosenbrock function.
-5 0 5 10 15 20 25 30050100150200250300350400
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 9.Cuckoo search algorithms average convergences for Goldstein-Prices function.
-5 0 5 10 15 20 25 30-1-0.9-0.8-0.7-0.6-0.5-0.4-0.3-0.2-0.1
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 10.Cuckoo search algorithms average convergences for Easom function.M. Mareli, B. Twala / Applied Computing and Informatics 14 (2018) 107–115 11395% conﬁdence interval (CI) for each CS algorithm was determinedand the CS algorithm with larger CI is deemed as more efﬁcientthan the one with smaller CI interval.4.2. Characteristics of test functionsThe benchmark test functions used to validate the performanceof each CS are tabulated inTable 4. Test functions modality is deﬁned as the number of peaks encountered in the function land-scape. These peaks can negatively impact the optimisation processwhen the optimisation algorithm gets trapped in the peaks [28]. Some test functions are unimodal while others are multimodal.4.3. Simulations results and discussionsThe obtained global minimum values for each of CS algorithmtested are tabulated inTables 5–9. The corresponding 95% conﬁ-dence intervals were calculated and tabulated in Table 10. FromTable 10, the CSEI has the longest conﬁdence interval(4.505066) as per CI Length column. That means that CSEI is moreeffective in ﬁnding global minimum values of the sample to testfunctions used. The second most effective algorithm is CSCo withconﬁdence interval of 3.9699, the original CS with constant switch-ing parameter. The least effective algorithm is CSLI with lowestconﬁdence interval of 3.59593.Cuckoo search convergence results depicted in Figs. 2–11. Some iteration axis have been resized to reveal details.The convergence results forFigs. 2–11are summarised in Table 10. This is more of an indication as to how different CS algo-rithms converge to the global minimal point for each test functionused (seeTable 11).5. ConclusionsThis paper introduced nature-inspired optimisation algorithmsand highlighted that CS algorithm is a more general and efﬁcientalgorithm when compared to PSO, DE and SA. Then some studiescarried out to improve the CS efﬁciency were reviewed. It wasfound that most CS efﬁciency improvements were based on apply-ing different probability distribution functions (Cauchy, Gauss andGamma) to determine the random walk step sizes. The contribu-tion of this paper is the investigation of dynamically increasingswitching parameter in CS algorithms performance. Three CS algo-rithms using linear, exponential and power increasing switchingparameters were developed and tested against the constant andlinearly decreasing CS algorithms. The CS using exponentialincreasing (CSEI) switching parameter was found to be more efﬁ-cient than other CS algorithms.AcknowledgementsThis work is supported by the Institute for Intelligent Systemsat the University of Johannesburg in South Africa. We are verythankful of Prof Xin-She Yang for providing demo CS algorithmin the book Nature-Inspired Optimisation Algorithms. We wouldlike to thank also anonymous reviewers for their valuablecomments.References
[1]S. Noureddine, An optimization approach for the satisﬁability problem, Appl.Comput. Inform. 11 (1) (2015) 47–59
. [2]
E. Belic, N. Lukac, K. Dezelak, B. Zalik, G. Stumberger, GPU-based onlineoptimization of low voltage distribution network operation, IEEE Trans. SmartGrid 8 (3) (2017) 1460–1468
. [3]
A. Koppel, B.M. Sadler, A. Ribeiro, Proximity without consensus in onlinemultiagent optimization, IEEE Trans. Signal Process. 65 (12) (2017) 3062–3077
.[4] A. Platonov, Information theory and optimization of analog feedbackcommunication systems, in: 2016 IEEE International Black Sea Conference onCommunicatios and Networking, 2016.[5]
M. Tang, L. Gao, H. Pang, J. Huang, L. Sun, Optimizations and economics ofcrowdsourced mobile streaming, Fog Comput. Netw. (2017) 21–27
. [6]
S. Das, J.R. Doppa, P.P. Pande, K. Chakrabarty, Design-space exploration andoptimization of an energy-efﬁcient and reliable 3-D small-world network-on-chip, IEEE Trans. Comp.-Aided Des. Integr. Circ. Syst. 36 (5) (2017) 719–732
. [7]
Z. Yan, J. Fan, J. Wang, A collective neurodynamic approach to constrainedglobal optimization, IEEE Trans. Neural Learn. Syst. 28 (5) (2017) 1206–1215
.0 100 200 300 400 500 600 700 800 900 1000-9-8-7-6-5-4-3-2-1
IterationFunction valueCSCo
CSLD
CSLI
CSEI
CSPI
Fig. 11.Cuckoo search algorithms average convergences for Michalewicz function.
Table 11CS convergence.
CS Version Plot Number of leadingCSLI 3, 6 and 10 3CSEI 4, 9 and 11 3CSCo 5 and 8 2CSPI 7 1CSLD 2 1114 M. Mareli, B. Twala / Applied Computing and Informatics 14 (2018) 107–115[8]A.R. Parkinson, R.J. Balling, J.D. Hedengren, Optimization Methods forEngineering Design: Applications and Theory, ﬁfth ed., Brigham YoungUniversity, 2013
.[9]
X.S. Yang, A new metaheuristic bat-inspired algorithm, in: J.R. Gonzalez, D.A.Pelta, C. Cruz, G. Terrazas, N. Krasnogor (Eds.), Nature Inspired CooperativeStrategies for Optimization (NICSO 2010), vol. 284, Springer, Berlin, 2010, pp.65–74
.[10]
D.P. Rini, S.M. Shamsuddin, S.S. Yuhaniz, Particle swarm optimization:technique, system and challanges, Int. J. Comput. Appl. 14 (1) (2011) 19–27
. [11]
R. Storm, K. Prince, Differential evolution – a simple and efﬁcient heuristic forglobal optimization over continuous spaces, J. Global Optim. 11 (4) (1997)341–359
.[12]
M. Kefayat, A.L. Ara, S.N. Niaki, A hybrid of ant colony optimization andartiﬁcial bee colony algorithm for probabilistic optimial placement and sizingof distributed energy resources, Energy Convers. Manage. 92 (2015) 149–161
. [13]
S. Kirkpatric, C.D. Gelatt, M.P. Vecchi, Optimization by simulated annealing,Science 220 (4598) (1983) 670–680
. [14]
X.-S. Yang, Nature-Inspired Optimization Algorithms, ﬁrst ed., Elsevier,London, 2014
.[15] M.I. Solihin, M.F. Zanil, Performance comparison of Cuckoo search anddifferential evolution algorithm for constrained optimization, in: IntrnationalEnginering Research and Innovation Symposium (IRIS), vol. 160(1), 2016, pp.1–7.[16] M.A. Adnan, M.A. Razzaque, A comparative study of particle swarmoptimization and Cuckoo search techniques through problem – speciﬁcdistance function, in: 2013 International Conference on Information andCommunication Technology (ICoICT), Bandung, Indonesia, 2013.[17]
O. Baskan, Determining optimal link capacity expansions in road networksusing Cuckoo search algorithm with Levy ﬂights, J. Appl. Math. 2013 (2013) 1–11
.[18]
W. Buaklee, K. Hongesombut, Optimal DG allocation in a smart distributiongrid using Cuckoo search algorithm, ECTI Trans. Electr. Eng. Electron. Commun.11 (2) (2013) 16–22
.[19]
X.S. Yang, S. Deb, Engeering optimization by Cuckoo search, Int. J. Math.Modell. Neumeric Opt. 1 (4) (2010) 330–343
. [20]
H. Zheng, Y. Zhou, A novel cuckoo search algorithm based on Gaussdistribution, J. Comput. Inf. Syst. 8 (10) (2012) 4193–4200
.[21]M.M. Zaw, E.E. Mon, Web document clustring using Gauss distribution basedcuckoo search clustring algorithm, Int. J. Sci. Eng. Technol. Res. 3 (13) (2014)2945–2949
.[22]
S.D. Ho, V.S. Vo, T.M. Le, T.T. Nguyen, Economic emission load dispatch withmultiple fuel optings using cuckoo search algorithm with Gaussian andCauchy distributions, Int. J. Energy, Inf. Commun. 5 (5) (2014) 39–54
. [23]
T.T. Nguyen, D.N. Vo, B.H. Dinh, Cuckoo search algorithm using differentdistributions for short term hydrothermal scheduling with reservoir volumeconstraint, Int. J. Electr. Eng. Inf. 8 (1) (2016) 76–92
. [24] S. Roy, A. Mallick, S.S. Chowdhury, S. Roy, A novel approach on cuckoo searchalgorithm using Gamma distribution,” in: Second International Conference onElectronics and Communication Systems, 2015.[25]
S.I. Tusiy, N. Shawkat, M.A. Ahmed, B. Panday, N. Sakib, Comparative analysison improved Cuckoo search algorithm and artiﬁcial Bee colony algorithm oncontinouos optimization problems, Int. J. Adv. Res. Artif. Intell. 4 (2) (2015) 14–19
.[26] M. Tuba, M. Subotic, N. Stanarevic, Modiﬁed Cucko search algorithm forunconstrained optimization problems,” in: Proceedings of the EuropeanComputing Conference, 2011.[27]
X.-S. Yang, Test Problems in Optimization, in Engineering Optimization: AnIntroduction with Metaheuristic Applications, John Wiley & Sons, 2010
. [28]
M. Jamil, X.S. Yang, A literature survey of banchmark functions for globaloptimization problems, Int. J. Math. Model. Numer. Opt. 4 (2) (2013) 150–194
. [29]
J.M. Dieterich, B. Hartke, Empirical review of standard benchmark functionsusing evolutionary glabal optimization, Appl. Math. 3 (10) (2012) 1552–1564
. [30]
N.A. Al-Madi, A.T. Khader, De Jong’s sphere model test for a Social-BasedGenetic Algorithm (SBGA), Int. J. Comp. Sci. Netw. Security (IJCSNS) 8 (3)(2008) 179–185
.[31] N. Chase, M. Rademacher, E. Goodman, R. Averill and R. Siodhu, 2016. [Online].Available:http://www.yumpu.com/en/document/view/46603781/a-benchmark-study-of-optimization-search-algorithms-red-cedar-/7 . (Accessed 04 November 2016).[32] M. Molga, C. Smutnicki, ‘‘Robert Marks,” Robert Marks, 2005. [Online].Available:http://www.robertmarks.orgClassespapers . (Accessed 29 April 2017).M. Mareli, B. Twala / Applied Computing and Informatics 14 (2018) 107–115 115