Original Article
CAMeOnto: Context awareness meta ontology modeling
Jose Aguilar⇑, Marxjhony Jerez, Taniana Rodríguez
CEMISID, Dpto. de Computación, Facultad de Ingeniería, Universidad de Los Andes, Mérida, Venezuela
article info
Article history:Received 12 May 2017Revised 17 July 2017Accepted 13 August 2017Available online 22 August 2017Keywords:Context-awarenessOntologiesMeta ontologiesContext modelingabstract
In order to model a context and adapt it to any domain, it is necessary an ontology that captures genericconcepts to a higher level. The context model must provide mechanisms to extend the speciﬁc informa-tion of a context in a hierarchical manner. In this paper, we propose CAMeOnto, an ontology with thesecharacteristics, based on the principles of 5Ws: who, when, what, where and why. CAMeOnto is used byCARMiCLOC, a reﬂective middleware for context-aware applications, and is instantiated in several casestudies, in order to test how CAMeOnto works correctly and can reason to infer information about thecontext./C2112017 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University. This is anopen access article under the CC BY-NC-ND license ( http://creativecommons.org/licenses/by-nc-nd/4.0/ ).
1. IntroductionIn a smart environment, users want to be automatically pro-vided with services. For that, it is required an appropriate contex-tual information: user’s situation, location, time, devices existing inthe environment, among other things. Nowadays, there are severaldomains where it is required the modeling of the context, such as:Internet of Things (IoT), Internet of Everything (IoE), Virtual Reality(VR), Recommendation Systems, and Intelligent Transport Net-works like Vehicular Ad hoc NETworks (VANET).Different challenges exist in the area of the Context Awareness.For example, in Intelligent Transport Systems (ITS) a VANET com-ponent requires the identiﬁcation of effective context information[1]. In VR, IoT and IoE the main challenges are the privacy and thelacks of modeling of social issues[2,3]. The use of ontologies for expressing context is advantageousbecause they can express the different characteristics of the con-text. Examples of context aware modeling based on Ontology arepresented in[4,5], which present the emergent concept ‘‘SemanticWeb of Things” (SWoT)[6,7]. SWoT is the combination of ﬁve ele-ments: human (such as users, service providers), machines (suchas computer), physical things (such as sensors or devices), abstractthings (such as data, information or services), and the workingenvironment (such as the Ad hoc network, the Sensor Network,or the Web).In[8]was presented CARMiCLOC, a reﬂective middleware forcontext-aware applications in the cloud, which offers various ser-vices for context-aware systems, among which is found the model-ing. The context modeling is proposed using ontologies, because itis a technique that gains force as a standard, due to its semanticexpressiveness and interoperability [8]. In this way, in this work we propose the modeling of the context ontology of CARMiCLOC.Our ontology must be used by the services of CARMiCLOC torepresent the context, to reason about it, to be shared, among otherthings, without the use of sophisticated tools and processes. Thisontology is called CAMeOnto, which is an ontology that allowsthe modeling of the context, so that it can be used by the set of ser-vices of CARMiCLOC in order to allow the autonomy of the context-aware applications, so that they can discover it, analyze it, andbased on it, make decisions. Our ontology provides a simple con-text modeling based on the 5Ws (who, when, what, where andwhy), with sufﬁcient information about the context to reasonand learn from it.The organization of the paper is the following: Section 2pre- sents the relative works to this research, Section 3presents the theoretical aspects, the Section4presents CAMeOnto, and ﬁnally,the Section5presents the results and the conclusions.
http://dx.doi.org/10.1016/j.aci.2017.08.0012210-8327//C2112017 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University.This is an open access article under the CC BY-NC-ND license ( http://creativecommons.org/licenses/by-nc-nd/4.0/ ).⇑Corresponding author at: EPN & UTP, Ecuador.E-mail addresses:aguilar@ula.ve(J. Aguilar),marxjhony@ula.ve(M. Jerez), taniana@ula.ve(T. Rodríguez).Peer review under responsibility of King Saud University.
Production and hosting by ElsevierApplied Computing and Informatics 14 (2018) 202–213
Contents lists available atScienceDirect
Applied Computing and Informatics
journal homepage: www.sciencedirect.com
2. Relative worksIn this section, we will present the state of the art related to theContext Aware Computing and the Context modeling.In[9], Alegre presents an investigation about the context-awaresystems and their applications, and illustrates how the systemsunderstand the situations, provide services and adaptive theirfunctionalities for very speciﬁc needs. Alegre presents differentaspects related to the state of the art of Context-Awareness Sys-tems (CASs), for example: 1) the methodologies used for the devel-opment of CASs, 2) the challenges and techniques to constructCASs, 3) and the conceptualization of CASs. It also presents thedirections and challenges that should be considered in the futureresearches regarding context-aware computing. Especially, in theEngineering of the context aware systems, he deﬁnes the followinginvestigations: principles of design of the Human-Computer Inter-action, Architectural Patterns, Paradigms of programming,methodological supports, among others.With respect to the Context modeling, Perera exposes in [10] that there is not a standard for context modeling. In [9,10], Alegre and Perera, respectively, show the most common techniques usedfor context modeling. Alegre exposes that each technique has someadvantage. For example, the ontology-based modeling allows thesemantic reasoning, the expressiveness in the context representa-tion, a strong validation, context sharing and the independentutilization.There are several works that have developed the modeling ofcontext through ontologies[11,12,19]. The use of ontology allows, according to[11,4]: 1) the reasoning using a very well deﬁneddeclarative semantic, 2) the knowledge sharing in dynamic sys-tems and, 3) the interoperability. In [11], Guermah implements a framework of context-aware services. Guermah propose an ontol-ogy, called CONON (CONtext ONtology), which has two levels. Theﬁrst level is the services platform, with the general representationof the context; and the second level is extensible and allows addingother speciﬁc ontologies. Finally, the framework allows the adapta-tion of services based on the WSMO (Web Service Modeling Ontol-ogy)[13]. They deﬁne the next set of classes: user, activity, service,device, and environment.In[14], Skillen shows a user-centered ontology, and describesan ontological modeling of the user proﬁle for the customizationof context-aware applications, deﬁning a method for capturingand representing user proﬁles for changing environments. Theclasses that he deﬁnes are: user, time, context, activity and loca-tion. In[12], Naqvi presents a mobile context awarenessapproach in a cloud, and an ontology where its main entitiesare the user, the platform and the service that is instantiated.It is deployed on a middleware that is deﬁned as a Platformas a Service (PaaS).In[5], Zhongu et al. present a Meta Context Ontology Model(MCOnt), where the context is divided in three categories: theinternal context (it describes the user personal information, prefer-ences and emotional states, provided directly from the user), theexternal context (it is the user-physical and environmental con-text) and the boundary context (it represents the informationrelated to users’ task-related activities and services). They use athree layer hierarchical approach to describe this meta-ontologyin[4]. The MCOnt have three advantages: 1. Ontologies can bepragmatically organized in a modular manner, the modularityfacilitates the maintaining and updating of the context ontologymodel. 2. The multi-dimensional submodels strengthen thesemantic integrity of the whole context ontology model. 3. Eachpart of the internal model in MCOnt is a higher concept abstractionfor a generic context. Nevertheless, this work lacks of the deﬁnitionof the relation between user situation and the services.In general, the models that have been presented in the previousworks are for speciﬁc domains, and are not oriented to be devel-oped as services. These ontologies have not been deﬁned for anenvironment on which services can be executed about the context,for applications that require it. In particular, the ontology proposedin this article allows the autonomous behavior of context-awareapplications, such that they can reason about the context, discoverthe context, among other things. In this sense, it is a general ontol-ogy, which allows the modeling of any environment. Our ontologyis of general domain, to be used by CARMiCLOC [8,17], which is part of its knowledge base, in a way that can be used as a knowl-edge service.3. Theoretical framework3.1. Context-aware system (CAS)In this section, we present several deﬁnitions:Context:
Dey expresses that for the computation [15]: ‘‘Context is any information that can be used to characterize the situation ofan entity. An entity is a person, place or object that is consideredrelevant to the interaction between a user and an application.”Context Aware:According to Dey, a context-aware system‘‘provides relevant information and/or services to the user, wherethe relevance depends on the user’s tasks”.Interaction with a Context Awareness System: it can be deﬁned in the executions and conﬁgurations. The execution refersto the actions/behaviors of the system in a speciﬁc situation (e.g.silence the phone when someone is sleeping). The second refersto the adjustment of actions/behaviors that the system may have.These interactions can be active or passive.Context Information Life Cycle:Contexts have a life cycle, which deﬁnes where data are generated and where are consumed.In this life cycle, context awareness can be seen as a service, calledby some authors as Context-as-a-Service (CXaaS) (see Fig. 1)[9]:/C15Acquisition of context. The techniques used to acquire the con-text can be varied, based on who is responsible, the frequency,the source, the process of acquisition, the type of sensor, amongother things./C15Context Modeling. The context modeling is also widely referredto as context representation. Context models can be static ordynamic. In addition, they may have several states [2]: ready, running, suspending, resuming, expired, and terminated. Thereare different modeling techniques which are described in [1].
Fig. 1.Context life cycle[9].J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213 203/C15Reasoning of the Context. The reasoning of the Context can bedeﬁned as a method to deduce new knowledge from the con-text. It can also be deﬁned as a process for deriving high-levelcontexts from a set of contexts. The reasoning requires to solvetwo characteristics of the context: the imperfection (i.e., it isunknown, ambiguous, imprecise or erroneous) and theuncertainty./C15Distribution of the Context. The two methods used for contextdistribution are: a) by inquiry. The user requests the context,such that the context management system answers to thatquery. b) by Subscription, also called publication.3.2. CARMiCLOCCARMiCLOC is a context-aware reﬂective middleware, based onthe autonomic computing. In general, CARMiCLOC provides accu-rate services that are required for the management of the contextlife cycle based on the classical model of autonomic computing,which consist in a MAPE-K loop[28], with a set of services for Monitoring the context, a set of services for Analyzing the context,a set of services to plan actions on the Context-Aware Applications,and a set of services to execute these actions, but these servicesrequire a knowledge database (K) that is presented in this workas an ontology (seeFig. 2).Speciﬁcally, CARMiCLOC incorporates seven services for thecontext management, the services can be provided internally (I)(required by the same CARMiCLOC services) or called indepen-dently from external services (E). CARMiCLOC Services may be con-sumed by Context-aware Applications and Not Context-AwareApplications.Table 1shows the services provided by CARMiCLOC.Fig. 2shows the MAPE architecture of CARMiCLOC. At the bot-tom ofFig. 2is the Middleware Base level, where the contextand sensors are deployed. The context is discovered using theSe1 service (M), which ﬁlters and preconﬁgures the data. The Se2Service creates the model of context (A), which is stored in theKnowledge base (K) that will be accessed by the MAPE cycle. Se3Service allows the reasoning over K, in order to infer informationabout the context (P). The rest of the services (Se4, Se5, Se7, Se8)are speciﬁc services about the quality, security, among otherthings, of the context, offered by CARMiCLOC.One important aspect of CARMiCLOC is that it allows the con-text switching using the services that it has implemented. Whensomething changes in the base level, the Se1, Se3 and Se2 serviceswork together to produce the new context. Particularly, the con-text modeling service (Se2) is one of the most important becauseit allows the maintenance of context information and can createnew models based on new contexts acquired.4. Meta-ontology for the context awarenessFor the modeling of context, there are several techniques, how-ever, what takes more value and is being positioned as a standardis the Ontology-Based Context Modeling. The design of our ontol-ogy is based on the 5Ws (who, when, what, where and why), whichare considered in six contextual classes presented below.
Fig. 2.CARMiCLOC MAPE architecture.Table 1CARMiCLOC services.
ID Service offered Intern/externDescriptionSE
1Contextacquisition/preconﬁgurationI, E (B) Service in charge of the aggregation andﬁltering of data, the discovery andannotation of the context SE
2Context modeling I, E Service in charge of knowledge management (Model), data storage,context sharing and conﬁguration at runtime SE
3Context reasoning I, E Service in charge of management and inference of knowledge, eventmanagement and data fusion SE
4ContextdistributionE(A) Service in charge of the dissemination ofthe context and services SE
5Quality of context(QoC)I, E(B) Service in charge of the validation andresolution of the conﬂicts of the context SE
6Context security I Service in charge of the security and privacy of the user, application and data SE
7Context servicemanagement Service in charge of the management ofservices of the context204 J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213To develop our ontology, we are used the Neon methodology[18], which is a methodology to build ontologies based on thereutilization and the dynamic evolution of ontology networks. Par-ticularly, CAMeOnto is based on the CONON [11]and MAOnt[5] ontologies. In speciﬁc, we propose a hierarchy of ontologies similarto the proposition in[5](seeFig. 3).In a context model, the context information must be deﬁned interms of attributes, characteristics, context relationships, contextquality attributes, among other things. A simple and completeapproach is the one used in[9], which contains the four W’s thatanswer the questions Who? (Who is the user?), What? (What Iam doing?), Where? (Where is my location?), and When? (Whenhas happened?). Also, in the mobile applications, it is importantto know who carry out the action and with whom, and the rela-tionships between the environment and the services that are exe-cuted or that could be called[9]. All of them deﬁnes the ‘‘Why” thatin CAMeOnto is added to express the motivation to do the ‘‘what”.In[5], the context is categorized in three: internal context,external context and boundary context. We are going to use thesame approach. In speciﬁc, our context ontology is characterizedby two hierarchical levels (seeFig. 7). The ﬁrst one is a general and independent domain ontology, and the second one allowsthe addition of speciﬁc domain context ontologies. The ﬁrst levelis divided in three groups, inspired into the proposition in [5]. These groups have six contextual classes, which are:/C15User:information about the user’s proﬁle, situation, and prefer-ences (internal context)./C15Activity:describes the different sets of activities that can bedeveloped in the context (external context)/C15Time:describes the notion of time in the context, which can beused to deﬁne the chronological situations in the context (exter-nal context)./C15Device:describes the device of software and hardware in thecontext (external context)/C15Services:Describes the characteristics of the service required bythe user, Quality of Service (boundary context)/C15Location:describes the location of the context, its indoor andoutdoor space, and the property of the environment (externalcontext).Our ontology follows the 5Ws (who, when, what, where andwhy) because the ‘‘user” class deﬁnes who, the ‘‘time” class deﬁneswhen, the ‘‘location” class deﬁnes where, the ‘‘services” classdeﬁnes the what, and with the ‘‘device” and ‘‘activity” classes isdeﬁned the why.Fig. 4gives an example of instantiation of ourontology using our six classes, with information that could bedescribed in each one. For example, in the ‘‘location” could bedescribed the environment, which could have as attributes thetemperature and illumination.The relationships between the classes in our multidimensionalmodels is shown inFig. 5. The relationship between the user andits role in a domain, makes possible to ﬁnd the why of an activity:the motivation. To complete the description of the motivation, it isrequired the relationship between the user and the devices, andthe user/role and a given activity (see Fig. 5). The relationships of our ontology allow describing the context:the environment has a location, and devices that provide servicesaccording to their speciﬁc description. Also, the devices are usedby the users at this location, whom have roles in the activities car-ried out in the environment in a given moment. Now, we specifyeach class of our ontology.4.1. User modelIn a context aware, the context information is used to respondand adapt to users’ behaviors. In[20]is shown an ontology to rep-
resent and capture the user proﬁles within a changing environ-ment. The user model is a subclass of the context. We use thisuser proﬁle ontology mixed with the ontology proposed in [5]. The user model is shown inFig. 6. The user has a user proﬁle, aschedule, and a role. The user proﬁle describes the user’s personalinformation, the user schedule deﬁnes the events which he/shereacts, and the role deﬁnes the responsibility of a user in a givenmoment.According toFig. 6, the user proﬁle describes the user’s personalinformation, such as his/her name, social safety number, and pref-erences. Also, it can be included an extension of user proﬁles foreach domain will include, for example, health proﬁle, professionalproﬁle, sporty proﬁle. A series of user-related events compose theuser schedule, where each event contains one or more activities,and each activity contains one or more tasks. The role class indi-cates the current state in which the user’s action is situated, suchas professor, student or guest. Therein, the role class mainly repre-sents the lawful situation set of a user or an agent, which can bebeforehand deﬁned.
Fig. 3.Hierarchical design of a context ontology [5].J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213 205Fig. 4.Hierarchy of our context ontology.
Fig. 5.Relationships between our classes.
Fig. 6.User model.206 J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–2134.2. Activity modelWe based our model in[21,23], where they present an ActivityOntology. The activity model deﬁnes he different features and abil-ities than are required in an activity. The activity model has thenext subclasses: Domain of the Activity that describes all the rela-tive to the domain where the activity is involved, the events gener-ated or used during the activity, and the social and individualactivities executed in it (seeFig. 7).Fig. 7shows an instantiation of the Activity Model, where thedomain activity is related to ‘‘Gym Domain”, the role performedby the user is ‘‘Training for the Marathon”, and the User proﬁle is‘‘Sport-proﬁle”.4.3. Time modelThe time model is the representation about how the time isimmersed in the context awareness. This model is shown inFig. 8, and it’s based on the ‘‘Time” Ontology proposed in [22].4.4. Device modelThe device model is shown inFig. 9. A device has a proﬁle (its characteristics) and current status (running, fault, etc.), and canbe of software or hardware4.5. Service modelThe service model is shown inFig. 10. A service is deﬁned by a type (e.g. a web service), and has a proﬁle (it deﬁnes its character-istics). Additionally, the service can have a quality of service (QoS)to offer.4.6. Location modelThe location model is shown inFig. 11, and describes the site where is the environment. The location describes its outdoor andindoor components, its position, among other things.After all the key classes have been deﬁned within the ontology,speciﬁc object and data properties are deﬁned in these classes,which are shown inTable 2. These properties are used to relateone class to another via objects, or specify relations via datatypes.They have an important role to relate key concepts and to infernew information. For example, the ‘‘Userproﬁle” class could con-tain a property ‘‘hasUserProﬁle”, in order to determine the stateof a user’s proﬁle, and this could be linked to the ‘‘DomainActivity”class. Therefore, this could determine that a user has a particularactivity, such as ‘‘marathon training”, and so, infer that there arekilometers to run today.In this way, the relationships between different users can bemodeled, and our middleware can learn to adapt to different userpatterns.Fig. 12presents an example of the hierarchical view ofthe classes of our ontology, their object properties and datatypeproperties, displayed in Protégé.5. Case studiesTo test the ontology described in section IV, we are going toconsider several case studies.5.1. Smart classroomThis ﬁrst case is the Smart Classroom presented in [16], which has a middleware to support an Intelligence Learning Environment,
Fig. 8.Time model.
Fig. 7.Activity model.J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213 207called IECL[24,25]. The instantiation of the case study is shown inFig. 13.Now, we describe the instantiation of our ontology in this casestudy. The main classes are:/C15Users: students, professors, guests./C15Location: the place where is the smart classroom, and condi-tions (temperature, light, etc.)./C15Activity: Course/C15Time: the date of the course./C15Device: the different resources in the smart classroom (RDF sen-sors, smart-board, book, repository database, etc.)./C15Services: Describes the characteristics of the services providedin the smart classroom, such as the prediction of the results ofthe students, among others. The set of services has been pro-posed in[29].InTable 3is shown an example of the instantiation ofCAMeOnto for the Smart classroom.Event class can have different instantiations. For example, sup-pose the next instantiation of this class:Event (Notify Users): This event can notify to users by email,twitter, etc., according to the user proﬁles and environmentdevices, e.g., the beginning of the course. Table 4shows an example of the instances of the classes for this event, which can use therules of inference of our ontology.The rules for the ‘‘NotifyUser” event are the following,in the case that the course starts at 8am on the day that it isinvoked.1.Person(?p) ^ isEnrolled(?p, ?c) ^ Courser(?c) ^startTime(?c, 8) -> NotifyUsers(?p)2.Person(?p) ^ isTutorCourse(?p, ?c) ^ Courser(?c) ^startTime(?c, 8) -> NotifyUsers(?p)These rules are described using SWRL (Semantic Web Rule Lan-guage), which is a language for the Semantic Web that can be usedto express the rules[27]. Once the rules are executed, we suppose,
Fig. 9.Device model.
Fig. 10.Service model.208 J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213for example, that two students and the tutor are notiﬁed, as isshown inFig. 14.Therefore, NotifyUsers is a subclass of event, and it has notiﬁedStudent1 according to rule 1, which deﬁnes that the student is aperson and is enrolled in course 1 that begins the class at 8am,as is shown inFig. 15.Also, for the preparation of the class, different activities can becarried out. For example, the room lights must be on (see event inFig. 16).The following rule is executed:Courser(?c) ^ startTime(?c, 8) ^ Room(?r) ^IsDictatedIn(?c, ?r) -> turnLights(?r, true)Similar rules must be executed for the air on. Once the lightsand air conditioning are turned on, the ‘‘EnviromentRoomOk”event is triggered (seeFig. 17).In this case, the following rule is fulﬁlled:Courser(?c) ^ startTime(?c, 8) ^ Room(?r) ^ turn-Lights(?r, true) ^ turnOnAire(?r, true) ^ roomTem-perature(?r, ?temp) ^ swrlb:greaterThan(?temp, 21) ^swrlb:lessThan(?temp, 23) -> RoomEnviromentOK(?r)Therefore, the classroom 123 meets all the conditions of theenvironment to start the class. Similar rules are designed for allthe devices, resources, etc., required to start the class.Once veriﬁed all the conditions of the environment, etc., thesmart classroom starts with the authentication of the users. Also,our ontology can be used to authenticate the students, guestsand teachers. If the STUDENT X is authorized to access the class,then he/she can obtain the learning resources, books, etc. of theclass. The ontology can use the next rules triggered by the ‘‘Stu-dentMaterial” event.
Fig. 11.Location model.
Fig. 12.CAMeOnto classes, object properties and datatype properties.Table 2Description of the object and DataType properties in CAMeOnto.
object property descriptionhasUserProﬁel (isuserProﬁleOf) Every user has one user proﬁlehasActivity Every user perform some activity at one point hasSituation Every user has a situationhasEvent Every schedule has an eventhasLocation Every user has a locationData property descriptionhasName Every user has a nametimeInstant Every event has a timeInstanttimeInterval (timeStart,timeEnd) Every schedule has a timeIntervalAddress Every location has an addressJ. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213 209With the following rule, the book resource is activated for thestudents who are enrolled in the coursePerson(?p) ^ isEnrolled(?p, ?c) ^ Courser(?c) ^startTime(?c, 8) -> bookResource(?c, true),Similar rules are also deﬁned for each one of the resources inthe smart classroom.5.2. Surgery roomNow, suppose we are going to instantiate our ontology in a sur-gery. It is an elaborate process in progressive stages. The ‘‘Periop-erative” term generally refers to the three phases of surgery,namely preoperative, intraoperative, and postoperative. A Contextawareness perioperative system can be modelled using CAMeOnto.Fig. 18shows the system architecture presented in [23]. Table 5shows how the elements of the perioperative processare introduced in CAMeOnto.Now, we can describe the different situations in this environ-ment using CAMeOntoSituation 1. Locate the surgery room where the patient will beoperated.In this case, the patient information will be displayed on thecomputer screen that is on the door of the operation, using the nextrule:
Fig. 13.Smart class instantiation.
Table 3Example of instantiation.
CAMeOnto Smart classroomUser Guests, students, professorsEvent Master courseLocation (Indoor) Conference roomLocation Temperature, illuminationTime: TimeInterval timeStart, timeEndDomainActivity Programming course ontology (didactics resources, etc.)DidacticsResources Books, video repositoryHardwareDevice RFID sensors, desktop, smart screen
Table 4Notify users.
CAMeOnto Smart classroomUser Guests, students, professorsEvent Notify usersTime Start timeDomain activity Programming course
Fig. 14.‘‘Notify User” Event on Protégé.210 J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213Fig. 15.Explanation of the Student 1 in the ‘‘NotifyUser” event.
Fig. 16.‘‘TurnLight true” event.
Fig. 17.The rule about the room is OK.
Fig. 18.System architecture of a surgery room [23].J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213 211Patient(?p) ^ SurgeryRoom(?sr) ^ Doctor(?d) ^reserveSurgeryRoom(?d,?sr) ^ isPatient (?p,?d) ^operationType(?p,”heart opertation”) ^ startSurgery (?sr,8) -> UserProfile(?p).Situation 2. The patient is in a critical situation in the operationIf the patient has a temperature greater than 40 degrees, thenthe condition of the patient is critical. In this case, it will triggerthe ‘‘PatientCondicion” event, to see the condition of the patient.The next rule is applied:Parient(?p)^hasTemperature(?p,?t)^swrl:greaterThan(?t,40)->PatientCondition(?p,critica)In this way, the system searches for which drug should beapplied according to the patient’s health proﬁle, and indicateswhich medication should be applied to the patient.5.3. Semantic workplace learning frameworkIn this section, we present an additional test for CAMeOnto. Inthis case, we model the S-WOLF (Semantic Workplace LearningFramework) framework proposed in [26], which exploits semantic technologies to model, represent and share knowledge withinorganizations. This framework allows the description of a widerange of workplace learning experiences in an organization. In thissubsection, we present the instantiation of CAMeOnto in this casestudy.Fig. 19presents the core ontology of S-WOLF, and Table 6pre- sents how S-WOLF is mapped using CAMeOnto, such that eachconcept in S-WOLF is introduced in CAMeOnto. Particularly, the‘‘user”, ‘‘location”, ‘‘activity” and ‘‘services” classes of CAMeOntocan be used to model S-WOLF. The ‘‘Time” and the details aboutthe ‘‘environment” classes of CAMeOnto are not considered inthe S-WOLF ontology but can be considered if is required later.In this case, we have shown how can be used our ontology tomodel a speciﬁc context.Table 5Surgery room instance.
CAMeOnto Operational roomUser Staff (Nurses, MD), patient Patient: Health Proﬁle (history medicine Allergy ...) Event Hearth surgeryLocation (Indoor) Operation room 2Location (Outdoor) John Hospital 1234 Av. Richmond, ... Environment Temperature, illuminationTime: TimeInterval timeStart, timeendDomain activity Heath: surgery Room: medical equipment, medicine pharmacy list, specialist medical, list .... HardwareDevices RFID sensors, life monitors
Fig.19. SWOLF. Ontology based model.
Table 6S-WOLF modeled with CAMeOnto.
CAMeOnto S-wolfUser Employee: role participantActivity LearningDomain LearningTime It is not deﬁned in S-WOLFLocation OrganizationEnvironment It is not deﬁned in S-WOLFService Learning serviceExternal context System used in an organization212 J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–2136. ConclusionsIn this article, we have proposed a Meta ontology for the con-text modeling, called CAMeOnto. It is a general ontology, withoutbeing biased to a single application domain. We have tested in dif-ferent contexts, for example, in the context of a smart classroom orin a Surgery Room, and in each case our ontology can model thecontext. We were able to create the relationships between theactivity domains, the situation the user is going through, amongother things.This meta-ontology describes the main components of knowl-edge to be considered in a CAS, which can be extended with thespeciﬁc information about the domain of application in its secondlevel. Our ontology allows the modeling of the context based onthe 5Ws, using a set of models for each dimension. In this way,we describe the main details of a context.In future works, we are going to test the creation and integra-tion of domain-speciﬁc ontologies, in order to observe how theproposed ontology could be adapted in real time. Also, CARMiCLOChas a set of services (S21 and Se2) to automatically populate ourontology, in order to avoid a human-based population process ofthe knowledge base. Currently, we are working on the implemen-tation of these services using an approach that analyses theexchanges of messages in an environment using DPI (Deep PacketInspection) techniques, in order to discover information of the con-text in order to instantiate CAMEOnto.In the case studies, the Pellet reasoner is used, nevertheless it isjust a test. In future works, we are going to evaluate the perfor-mance of CAMEOnto into a real environment with large data.Finally, other important work is to test the context switching withCARMiCLOC based on its services, in a way to update CAMEOntowith the new information of the context in realtime.AcknowledgmentsDr. Aguilar has been partially funded by the Prometheus Projectof the Ministry of Higher Education, Science, Technology and Inno-vation of the Republic of Ecuador.References
[1]H. Vahdat-Nejad, A. Ramazani, T. Mohammadi, W. Mansoor, A survey oncontext-aware vehicular network applications, Vehicular Commun. 3 (2016)43–57
.[2]
J. Grubert, T. Langlotz, S. Zollmann, H. Regenbrecht, Towards pervasiveaugmented reality: Context-awareness in augmented reality, IEEE Trans.Visual Comput. Graphics 23 (6) (2017) 1706–1724
. [3] E. de Matos, L.A. Amaral, F. Hessel, Context-aware systems: technologies andchallenges in internet of everything environments, in: J. Batalla, G. Mastorakis,C. Mavromoustakis, E. Pallis (Eds.), Beyond the Internet of Things, Springer,2017, pp. 1–25.[4]
X.H. Wang, D.Q. Zhang, T. Gu, H.K. Pung, Ontology based context modeling andreasoning using OWL, Proceedings of the Second IEEE Annual Conference onPervasive Computing and Communications (2004) 18–22
. [5]
L. Zhong-Jun, L. Guan-Yu, P. Ying, A method of meta-context ontologymodeling and uncertainty reasoning in SWoT, Proceedings of InternationalConference on Cyber-Enabled Distributed Computing and KnowledgeDiscovery (2016) 128–135
.[6]A. Jara, A. Olivieri, Y. Bocchi, M. Jung, W. Kastner, A. Skarmeta, Semantic web ofthings: an analysis of the application semantics for the iot moving towards theIoT convergence, Int. J. Web Grid Serv. 10 (2–3) (2014) 244–272
. [7]
J. Ye, S. Dasiopoulou, G. Stevenson, G. Meditskos, E. Kontopoulos, I.Kompatsiaris, S. Dobson, Semantic web technologies in pervasive computing:A survey and research roadmap, Pervasive Mobile Comput. 23 (2015) 1–25
. [8] J. Aguilar, M. Jerez, E. Exposito, T. Villemur, CARMiCLOC: Context awarenessmiddleware in cloud computing, in: In Proceedings of LatinAmerican Computing Conference, 2015, pp. 1–10.[9]
U. Alegre, C. Augusto, T. Clark, Engineering context-aware systems andapplications: a survey, J. Syst. Softw. 117 (2016) 55–83
. [10]
C. Perera, A. Zaslavsky, P. Christen, D. Georgakopoulos, Context awarecomputing for the internet of things: a survey, IEEE Commun. SurveysTutorials 16 (1) (2014) 414–454
. [11]
H. Guermah, T. Fissaa, H. Haﬁddi, M. Nassar, A. Kriouile, An ontology orientedarchitecture for context aware services adaptation, Int. J. Comput. Sci. 11 (2)(2014)
.[12] M. Zaigham, N. NayyabZia, P. Davy, B. Yolande, Cloud computing: a mobilecontext-awareness perspective, Cloud Computing: Computer Communicationsand Networks, Springer, 2013, pp. 155–175.[13]
K.L. Skillen, L. Chen, C.D. Nugent, M.P. Donnelly, W. Burns, I. Solheim,Ontological user proﬁle modeling for context-aware applicationpersonalization, Ubiquitous Computing and Ambient Intelligence, Springer,2012, pp. 261–268
.[14]
D. Fensel, H. Lausen, A. Polleres, J. de Bruijn, M. Stollberg, D. Roman, J.Domingue, Enabling Semantic Web Services: The Web Service ModelingOntology, ﬁrst ed., Springer, 2010
. [15]
A. Dey, Understanding and using context, Personal Ubiquitous Comput. 5 (1)(2001) 4–7
.[16]
P. Valdiviezo, J. Aguilar, J. Cordero, M. Sánchez, Conceptual design of a smartclassroom based on multiagent systems, Proceedings on the InternationalConference on Artiﬁcial Intelligence (ICAI) (2015) 471–475
. [17]
J. Aguilar, M. Jerez, M. Mendonça, M. Sánchez, Emergencia ontológica basadaen análisis de contexto, como servicio para ambientes inteligentes, DYNA 84(2017) 28–37
.[18]
M. Suárez-Figueroa, A. Gómez-Pérez, M. Fernández-López, The NeOnmethodology for ontology engineering, in: Ontology Engineering in aNetworked World, Springer, 2012, pp. 9–34
. [19]
C. Emmanouilidis, R.A. Koutsiamanis, A. Tasidou, Mobile guides: Taxonomy ofarchitectures, context awareness, technologies and applications, J. NetworkComput. Appl. 36 (1) (2013) 103–125
. [20]
K. Skillen, L. Chen, C. Nugent, M. Donnelly, W. Burns, I. Solheim, Ontologicaluser proﬁle modeling for context-aware application personalization, in:Proceedings International Conference on Ubiquitous Computing andAmbient Intelligence, Springer, 2012, pp. 261–268
. [21]
D. Riboni, C. Bettini, Context-aware activity recognition through a combinationof ontological and statistical reasoning, in: Proceeding InternationalConference on Ubiquitous Intelligence and Computing, Springer, 2009, pp.39–53
.[22] OWL Time Ontologyhttps://www.w3.org/TR/owl-time/ #toc. [23]
S. Agarwal, A. Joshi, T. Finin, Y. Yesha, T. Ganous, A pervasive computingsystem for the operating room of the future, Mobile Networks Appl. 12 (2–3)(2007) 215–228
.[24]
M. Sánchez, J. Aguilar, J. Cordero, P. Valdiviezo, Basic features of a reﬂectivemiddleware for intelligent learning environment in the cloud (IECL),Proceeding of the Asia-Paciﬁc Conference on Computer Aided SystemEngineering (APCASE). (2015) 1–5
. [25]
M. Sánchez, J. Aguilar, J. Cordero, P. Valdiviezo, A smart learning environmentbased on cloud learning, Int. J. Adv. Inf. Sci. Technol. 39 (39) (2015) 39–52
. [26]
M. Gaeta, V. Loia, F. Orciuoli, P. Ritrovato, S-WOLF: Semantic workplacelearning framework, IEEE Trans. Syst., Man, Cybernetics: Syst. 45 (1) (2015)56–72
.[27]https://www.w3.org/Submission/SWRL/ . [28]
J. Vizcarrondo, J. Aguilar, E. Exposito, A. Subias, MAPE-K as a service-orientedarchitecture, IEEE Latinoamerica Trans. 15 (6) (2017) 1163–1175
. [29]
J. Aguilar, J. Cordero, L. Barba, M. Sanchez, P. Valdiviezo, L. Chamba, Learninganalytics tasks as services in smart classroom, Universal Access Inf. Soc. J.(2017)
.J. Aguilar et al. / Applied Computing and Informatics 14 (2018) 202–213 213