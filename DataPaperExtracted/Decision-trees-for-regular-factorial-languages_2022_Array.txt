Array 15 (2022) 100203
Available online 8 June 2022
2590-0056/© 2022 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license ( http://creativecommons.org/licenses/by-
nc-nd/4.0/ ).
Contents lists available at ScienceDirect
Array
journal homepage: www.elsevier.com/locate/array
Decision trees for regular factorial languages
Mikhail Moshkov
Computer, Electrical and Mathematical Sciences and Engineering Division and Computational Bioscience Research Center, King Abdullah University of Science and
Technology (KAUST), Thuwal 23955-6900, Saudi Arabia
A R T I C L E I N F O
Keywords:
Regular factorial language
Recognition problem
Membership problem
Deterministic decision tree
Nondeterministic decision treeA B S T R A C T
In this paper, we study arbitrary regular factorial languages over a finite alphabet 𝛴. For the set of words
𝐿(𝑛)of the length 𝑛belonging to a regular factorial language 𝐿, we investigate the depth of decision trees
solving the recognition and the membership problems deterministically and nondeterministically. In the case of
recognition problem, for a given word from 𝐿(𝑛), we should recognize it using queries each of which, for some
𝑖∈ {1,…,𝑛}, returns the 𝑖th letter of the word. In the case of membership problem, for a given word over the
alphabet𝛴of the length 𝑛, we should recognize if it belongs to the set 𝐿(𝑛)using the same queries. For a given
problem and type of trees, instead of the minimum depth ℎ(𝑛)of a decision tree of the considered type solving
the problem for 𝐿(𝑛), we study the smoothed minimum depth 𝐻(𝑛) = max{ℎ(𝑚) ∶𝑚≤𝑛}. With the growth
of𝑛, the smoothed minimum depth of decision trees solving the problem of recognition deterministically is
either bounded from above by a constant, or grows as a logarithm, or linearly. For other cases (decision trees
solving the problem of recognition nondeterministically, and decision trees solving the membership problem
deterministically and nondeterministically), with the growth of 𝑛, the smoothed minimum depth of decision
trees is either bounded from above by a constant or grows linearly. As corollaries of the obtained results, we
study joint behavior of smoothed minimum depths of decision trees for the considered four cases and describe
five complexity classes of regular factorial languages. We also investigate the class of regular factorial languages
over the alphabet {0,1}each of which is given by one forbidden word.
1. Introduction
In this paper, we study arbitrary regular factorial languages over a
finite alphabet 𝛴. A factorial language satisfies the following condition:
if a word𝑤1𝑢𝑤2belongs to the language, then the word 𝑢also belongs
to it. For the set of words 𝐿(𝑛)of the length 𝑛belonging to a regular
factorial language 𝐿, we investigate the depth of decision trees solving
the recognition and the membership problems deterministically and
nondeterministically. In the case of recognition problem, for a given
word from 𝐿(𝑛), we should recognize it using queries each of which,
for some𝑖∈ {1,…,𝑛}, returns the 𝑖th letter of the word. In the case
of membership problem, for a given word over the alphabet 𝛴of the
length𝑛, we should recognize if it belongs to 𝐿(𝑛)using the same
queries.
For a given problem (problem of recognition or membership prob-
lem) and type of trees (solving the problem deterministically or non-
deterministically), instead of the minimum depth ℎ(𝑛)of a decision
tree of the considered type solving the problem for 𝐿(𝑛), we study the
smoothed minimum depth 𝐻(𝑛) = max{ℎ(𝑚) ∶𝑚≤𝑛}.
For an arbitrary regular factorial language, with the growth of 𝑛,
the smoothed minimum depth of decision trees solving the problem
of recognition deterministically is either bounded from above by a
E-mail address: mikhail.moshkov@kaust.edu.sa .constant, or grows as a logarithm, or linearly. These results follow
immediately from more general, obtained in [ 1] for arbitrary regular
languages.
For other cases (decision trees solving the problem of recognition
nondeterministically, and decision trees solving the membership prob-
lem deterministically and nondeterministically), with the growth of
𝑛, the smoothed minimum depth of decision trees is either bounded
from above by a constant, or grows linearly. In the conference pa-
per [ 2], a classification of arbitrary regular languages depending on
the smoothed minimum depth of decision trees solving the problem of
recognition nondeterministically was announced without proofs. In the
present paper, we consider simpler classification for regular factorial
languages with full proof. Results related to the decision trees solving
the membership problem are new.
As corollaries of the obtained results, we study joint behavior of
smoothed minimum depths of decision trees for the considered four
cases and describe five complexity classes of regular factorial lan-
guages. We also investigate the class of regular factorial languages over
the alphabet 𝐸= {0,1}each of which is given by one forbidden word.
A well-known approach to evaluate complexity of an infinite lan-
guage𝐿over a finite alphabet 𝛴is to study its so-called combinatorial
https://doi.org/10.1016/j.array.2022.100203
Received 7 January 2022; Received in revised form 2 June 2022; Accepted 3 June 2022Array 15 (2022) 100203
2M. Moshkov
complexity (known also as counting function) 𝑓𝐿(𝑛)that is the number
of words of the length 𝑛in𝐿[3,4]. The present paper proposes
additional ways to evaluate the complexity of the language 𝐿based on
the study how the depth of decision trees solving the recognition and
the membership problems deterministically and nondeterministically
depends on the length of words. This way is more complicated, but
can give more detailed classification of languages. To show this, we
compare languages generated by diagrams 𝐼3and𝐼4depicted in Figs. 5
and 6. For both languages, the counting function grows linearly. For
the first language, the minimum depth of decision trees solving the
problem of recognition deterministically grows as a logarithm, but for
the second language, the minimum depth of decision trees solving the
problem of recognition deterministically grows linearly.
We should mention a recent paper [5] in which similar results were
obtained for languages over the alphabet 𝐸that are subword-closed:
if a word𝑤1𝑢1𝑤2⋯𝑤𝑚𝑢𝑚𝑤𝑚+1belongs to the language, then the word
𝑢1⋯𝑢𝑚also belongs to it.
It is clear that each subword-closed language is a factorial language.
Moreover, each subword-closed language over a finite alphabet is a
regular language [6]. One can show that the language 𝐿(00) over
the alphabet 𝐸given by one forbidden word 00is a regular factorial
language, which is not subword-closed. Therefore the class of subword-
closed languages over the alphabet 𝐸is a proper subclass of the class
of regular factorial languages over the alphabet 𝐸.
The main difference between the present paper and [5] is that,
in the latter paper, we do not assume that the subword-closed lan-
guages are given by deterministic finite automata. Instead of this, we
describe simple criteria (based on the presence in the language of
words of special types) for the behavior of the minimum depths of
decision trees solving the problem of recognition deterministically and
nondeterministically. Differently formulated criteria for the behavior of
the minimum depth of decision trees solving the recognition problem
require very different proofs. One more difference is that in [5] we
directly consider the minimum depth of decision trees.
The rest of the paper is organized as follows. In Section 2, we
consider main notions, in Section 3 – main results, and in Section 4
– two corollaries of these results.
2. Main notions
In this section, we discuss the notions related to regular facto-
rial languages and decision trees solving problems of recognition and
membership for these languages.
2.1. Regular factorial languages
Let𝜔= {0,1,2,…}be the set of nonnegative integers and 𝛴be a
finite alphabet with at least two letters. By 𝛴∗, we denote the set of all
finite words over the alphabet 𝛴, including the empty word 𝜆. A word
𝑤∈𝛴∗is called a factor of a word 𝑢∈𝛴∗if𝑢=𝑣1𝑤𝑣2and𝑣1,𝑣2∈𝛴∗.
A language 𝐿 ⊆ 𝛴∗is called factorial if it contains all factors of its
words. A word 𝑤∈𝛴∗is called a minimal forbidden word for 𝐿if
𝑤∉𝐿and all proper factors of 𝑤belong to𝐿. We denote by 𝑀𝐹(𝐿)
the language of minimal forbidden words for 𝐿. It is known [7] that
a factorial language 𝐿is regular if and only if the language 𝑀𝐹(𝐿)is
regular. In particular, a factorial language 𝐿with a finite set of minimal
forbidden words 𝑀𝐹(𝐿)is regular. In this paper, we study arbitrary
nonempty regular factorial languages.
It is well known that each regular language can be represented by
a deterministic finite automaton (DFA) [8]. As in [8], we will consider
not only complete DFA with total transition function but also partial
DFA with partial transition function. Such DFA can be represented by
its transition diagram (diagram for short) [9].
A diagram over the alphabet 𝛴is a triple𝐼= (𝐺,𝑞0,𝑄), where𝐺
is a finite directed graph, possibly with multiple edges and loops, in
which each edge is labeled with a letter from 𝛴and edges leaving eachnode are labeled with pairwise different letters, 𝑞0is a node of 𝐺called
starting, and 𝑄is a nonempty set of the graph 𝐺nodes called final.
A path of the diagram 𝐼is an arbitrary sequence 𝜉=𝑣1,𝑑1,…,𝑣𝑚,
𝑑𝑚,𝑣𝑚+1of nodes and edges of 𝐺such that the edge 𝑑𝑖leaves the node
𝑣𝑖and enters the node 𝑣𝑖+1for𝑖= 1,…,𝑚. We now define a word 𝑤(𝜉)
from𝛴∗in the following way: if 𝑚= 0, then𝑤(𝜉) =𝜆. Let𝑚 > 0
and let𝛿𝑗be the letter attached to the edge 𝑑𝑗,𝑗= 1,…,𝑚. Then
𝑤(𝜉) =𝛿1⋯𝛿𝑚. We say that the path 𝜉generates the word 𝑤(𝜉). Note
that different paths which start in the same node generate different
words.
We denote by 𝛯(𝐼)the set of all paths of the diagram 𝐼each of
which starts in the node 𝑞0and finishes in a node from 𝑄. Let
𝐿𝐼= {𝑤(𝜉) ∶𝜉∈𝛯(𝐼)}.
We say that the diagram 𝐼generates the language 𝐿𝐼. It is well known
that𝐿𝐼is a regular language.
The diagram 𝐼is called complete over the alphabet 𝛴if exactly
|𝛴|edges leave each node of 𝐺. Note that these edges are labeled
with pairwise different letters from 𝛴. Such diagram corresponds to
a complete DFA [8]. The diagram 𝐼is called reduced if, for each node
of𝐺, there exists a path from 𝛯(𝐼), which contains this node. Such
diagram corresponds to a reduced DFA [8]. It is known [8] that, for
each regular language over the alphabet 𝛴, there exists a complete over
the alphabet 𝛴diagram, which generates this language. Therefore, for
each nonempty regular language, there exists a reduced diagram, which
generates this language.
Let𝐿be a regular factorial language and 𝐼= (𝐺,𝑞0,𝑄)be a
reduced diagram that generates the language 𝐿. Since the language 𝐿is
factorial, we can assume additionally that each node of the graph 𝐺is
final — it will not change the language generated by 𝐼since with each
word the language 𝐿contains each prefix of this word. The diagram
𝐼will be called f-reduced if it is reduced and each node of the graph
𝐺is final. Further we will assume that a considered regular factorial
language𝐿is nonempty and it is given by an f-reduced diagram, which
generates this language.
We will not consider nondeterministic finite automata (NFA) to rep-
resent regular factorial languages since the study of NFA is essentially
more complicated task.
2.2. Decision trees for recognition and membership problems
Let𝐿be a regular factorial language over the alphabet 𝛴. For
any natural 𝑛, denote𝐿(𝑛) =𝐿∩𝛴𝑛, where𝛴𝑛is the set of words
over the alphabet 𝛴, which length is equal to 𝑛. We consider two
problems related to the set 𝐿(𝑛). The problem of recognition: for a
given word from 𝐿(𝑛), we should recognize it using attributes (queries)
𝑙𝑛
1,…,𝑙𝑛
𝑛, where𝑙𝑛
𝑖,𝑖∈ {1,…,𝑛}, is a function from 𝛴𝑛to𝛴such that
𝑙𝑛
𝑖(𝑎1⋯𝑎𝑛) =𝑎𝑖for any word 𝑎1⋯𝑎𝑛∈𝛴𝑛. The problem of membership:
for a given word from 𝛴𝑛, we should recognize if this word belongs to
the set𝐿(𝑛)using the same attributes. To solve these problems, we use
decision trees over 𝐿(𝑛).
A decision tree over 𝐿(𝑛)is a marked finite directed tree with root,
which has the following properties:
•The root and the edges leaving the root are not labeled.
•Each node, which is not the root nor terminal node, is labeled
with an attribute from the set {𝑙𝑛
1,…,𝑙𝑛
𝑛}.
•Each edge leaving a node, which is not a root, is labeled with a
letter from the alphabet 𝛴.
A decision tree over 𝐿(𝑛)is called deterministic if it satisfies the
following conditions:
•Exactly one edge leaves the root.
•For any node, which is not the root nor terminal node, the edges
leaving this node are labeled with pairwise different letters.Array 15 (2022) 100203
3M. Moshkov
Fig. 1. Decision trees that solve the problem of recognition for the set of words
{100,010,001} deterministically and nondeterministically.
Let𝛤be a decision tree over 𝐿(𝑛). A complete path in 𝛤is any
sequence𝜉=𝑣0,𝑒0,…,𝑣𝑚,𝑒𝑚,𝑣𝑚+1of nodes and edges of 𝛤such that
𝑣0is the root, 𝑣𝑚+1is a terminal node, and 𝑣𝑖is the initial and 𝑣𝑖+1is
the terminal node of the edge 𝑒𝑖for𝑖= 0,…,𝑚. We define a subset
𝛴(𝑛,𝜉)of the set𝛴𝑛in the following way: if 𝑚= 0, then𝛴(𝑛,𝜉) =𝛴𝑛.
Let𝑚 > 0, the attribute 𝑙𝑛
𝑖𝑗be attached to the node 𝑣𝑗, and𝑏𝑗be the
letter attached to the edge 𝑒𝑗,𝑗= 1,…,𝑚. Then
𝛴(𝑛,𝜉) = {𝑎1⋯𝑎𝑛∈𝛴𝑛∶𝑎𝑖1=𝑏1,…,𝑎𝑖𝑚=𝑏𝑚}.
Let𝐿(𝑛)≠∅. We say that a decision tree 𝛤over𝐿(𝑛)solves the
problem of recognition for 𝐿(𝑛)nondeterministically if 𝛤satisfies the
following conditions:
•Each terminal node of 𝛤is labeled with a word from 𝐿(𝑛).
•For any word 𝑤∈𝐿(𝑛), there exists a complete path 𝜉in the tree
𝛤such that𝑤∈𝛴(𝑛,𝜉).
•For any word 𝑤∈𝐿(𝑛)and for any complete path 𝜉in the tree𝛤
such that𝑤∈𝛴(𝑛,𝜉), the terminal node of the path 𝜉is labeled
with the word 𝑤.
We say that a decision tree 𝛤over𝐿(𝑛)solves the problem of recog-
nition for𝐿(𝑛)deterministically if 𝛤is a deterministic decision tree,
which solves the problem of recognition for 𝐿(𝑛)nondeterministically.
Examples of decision trees illustrating the considered notions are
presented in Fig. 1.
We say that a decision tree 𝛤over𝐿(𝑛)solves the problem of
membership for 𝐿(𝑛)nondeterministically if 𝛤satisfies the following
conditions:
•Each terminal node of 𝛤is labeled with a number from the set
{0,1}.
•For any word 𝑤∈𝛴𝑛, there exists a complete path 𝜉in the tree
𝛤such that𝑤∈𝛴(𝑛,𝜉).
•For any word 𝑤∈𝛴𝑛and for any complete path 𝜉in the tree 𝛤
such that𝑤∈𝛴(𝑛,𝜉), the terminal node of the path 𝜉is labeled
with the number 1if𝑤∈𝐿(𝑛)and with the number 0, otherwise.
We say that a decision tree 𝛤over𝐿(𝑛)solves the problem of mem-
bership for 𝐿(𝑛)deterministically if 𝛤is a deterministic decision tree
which solves the problem of membership for 𝐿(𝑛)nondeterministically.
Let𝛤be a decision tree over 𝐿(𝑛). We denote by ℎ(𝛤)the maximum
number of nodes in a complete path in 𝛤that are not the root nor
terminal node. The value ℎ(𝛤)is called the depth of the decision tree
𝛤.
We denote by ℎ𝑟𝑎
𝐿(𝑛)(ℎ𝑟𝑑
𝐿(𝑛)) the minimum depth of a decision tree
over𝐿(𝑛), which solves the problem of recognition for 𝐿(𝑛)nonde-
terministically (deterministically). If 𝐿(𝑛) = ∅ , thenℎ𝑟𝑎
𝐿(𝑛) =ℎ𝑟𝑑
𝐿(𝑛) =
0.
We denote by ℎ𝑚𝑎
𝐿(𝑛)(ℎ𝑚𝑑
𝐿(𝑛)) the minimum depth of a decision
tree over𝐿(𝑛), which solves the problem of membership for 𝐿(𝑛)
nondeterministically (deterministically). If 𝐿(𝑛) = ∅ , thenℎ𝑚𝑎
𝐿(𝑛) =
ℎ𝑚𝑑
𝐿(𝑛) = 0.3. Bounds on decision tree depth
Let𝐿be a nonempty factorial regular language. In this section,
we consider the behavior of four functions 𝐻𝑟𝑎
𝐿,𝐻𝑟𝑑
𝐿,𝐻𝑚𝑎
𝐿, and𝐻𝑚𝑑
𝐿
defined on the set 𝜔⧵{0}and with values from 𝜔. For any natural 𝑛,
𝐻𝑟𝑎
𝐿(𝑛) = max{ℎ𝑟𝑎
𝐿(𝑚) ∶ 1≤𝑚≤𝑛},
𝐻𝑟𝑑
𝐿(𝑛) = max{ℎ𝑟𝑑
𝐿(𝑚) ∶ 1≤𝑚≤𝑛},
𝐻𝑚𝑎
𝐿(𝑛) = max{ℎ𝑚𝑎
𝐿(𝑚) ∶ 1≤𝑚≤𝑛},
𝐻𝑚𝑑
𝐿(𝑛) = max{ℎ𝑚𝑑
𝐿(𝑚) ∶ 1≤𝑚≤𝑛}.
For any pair 𝑏𝑐∈ {𝑟𝑎,𝑟𝑑,𝑚𝑎,𝑚𝑑 }, the function 𝐻𝑏𝑐
𝐿(𝑛)is a smoothed
analog of the function ℎ𝑏𝑐
𝐿(𝑛).
3.1. Decision trees solving recognition problem deterministically
Let𝐼= (𝐺,𝑞0,𝑄)be a f-reduced diagram over the alphabet 𝛴. A
path of the diagram 𝐼is called a cycle of the diagram 𝐼if there is at
least one edge in this path, and the first node of this path is equal to
the last node of this path. A cycle of the diagram 𝐼is called elementary
if nodes of this cycle, with the exception of the last node, are pairwise
different.
The diagram 𝐼is called simple if every two different elementary
cycles of the diagram 𝐼do not have common nodes. Let 𝐼be a simple
diagram and 𝜉be a path of the diagram 𝐼. The number of different
elementary cycles of the diagram 𝐼, which have common nodes with
𝜉, is denoted by 𝑐𝑙(𝜉)and is called the cyclic length of the path 𝜉. The
value
𝑐𝑙(𝐼) = max{𝑐𝑙(𝜉) ∶𝜉∈𝛯(𝐼)}
is called the cyclic length of the diagram 𝐼.
Let𝐼be a simple diagram, 𝐶be an elementary cycle of the diagram
𝐼, and𝑣be a node of the cycle 𝐶. Beginning with the node 𝑣, the cycle
𝐶generates an infinite periodic word over the alphabet 𝛴. This word
will be denoted by 𝑊(𝐼,𝐶,𝑣 ). We denote by 𝑟(𝐼,𝐶,𝑣 )the minimum
period of the word 𝑊(𝐼,𝐶,𝑣 ). The diagram 𝐼is called dependent if
there exist two different elementary cycles 𝐶1and𝐶2of the diagram
𝐼, nodes𝑣1and𝑣2of the cycles 𝐶1and𝐶2, respectively, and a path 𝜋
of the diagram 𝐼from𝑣1to𝑣2, which satisfy the following conditions:
𝑊(𝐼,𝐶1,𝑣1) =𝑊(𝐼,𝐶2,𝑣2)and the length of the path 𝜋is a number di-
visible by𝑟(𝐼,𝐶1,𝑣1). If the diagram 𝐼is not dependent, then it is called
independent. Next theorem follows immediately from Theorem 2.1 [1],
which is a similar statement that holds for all regular languages.
Theorem 1. Let𝐿be a nonempty regular factorial language over the
alphabet𝛴and𝐼be a f-reduced diagram, which generates the language 𝐿.
Then the following statements hold:
(a) If𝐼is an independent simple diagram and 𝑐𝑙(𝐼)≤1, then𝐻𝑟𝑑
𝐿(𝑛) =
𝑂(1).
(b) If𝐼is an independent simple diagram and 𝑐𝑙(𝐼)≥2, then𝐻𝑟𝑑
𝐿(𝑛) =
𝛩(log𝑛).
(c) If𝐼is not independent simple diagram, then 𝐻𝑟𝑑
𝐿(𝑛) =𝛩(𝑛).
3.2. Decision trees solving recognition problem nondeterministically
Let𝐿be a nonempty regular factorial language over the alphabet
𝛴. For any natural 𝑛, we define a parameter 𝑇𝐿(𝑛)of the language 𝐿.
If𝐿(𝑛) = ∅ , then𝑇𝐿(𝑛) = 0 . Let𝐿(𝑛)≠∅,𝑤=𝑎1⋯𝑎𝑛∈𝐿(𝑛), and
𝐽 ⊆ {1,…,𝑛}. Denote𝐿(𝑤,𝐽) = {𝑏1⋯𝑏𝑛∈𝐿(𝑛) ∶𝑏𝑗=𝑎𝑗,𝑗∈𝐽}
(if𝐽= ∅, then𝐿(𝑤,𝐽) =𝐿(𝑛)) and𝑀𝐿(𝑛,𝑤) = min{ |𝐽|∶𝐽 ⊆
{1,…,𝑛},|𝐿(𝑤,𝐽)|= 1}. Then
𝑇𝐿(𝑛) = max{𝑀𝐿(𝑛,𝑤) ∶𝑤∈𝐿(𝑛)}.
Note that, for any word 𝑤∈𝐿(𝑛),𝑀𝐿(𝑛,𝑤)is the minimum number of
letters of the word 𝑤, which allow us to distinguish it from all other
words belonging to 𝐿(𝑛).Array 15 (2022) 100203
4M. Moshkov
Lemma 2. Let𝐿be a nonempty regular factorial language over the
alphabet𝛴. Thenℎ𝑟𝑎
𝐿(𝑛) =𝑇𝐿(𝑛)for any natural 𝑛.
Proof. First, we prove that ℎ𝑟𝑎
𝐿(𝑛)≥𝑇𝐿(𝑛). Let𝛤be a decision tree over
𝐿(𝑛), which solves the problem of recognition for 𝐿(𝑛)nondeterministi-
cally and for which ℎ(𝛤) =ℎ𝑟𝑎
𝐿(𝑛). Let𝑤be a word from 𝐿(𝑛)for which
𝑇𝐿(𝑛) =𝑀𝐿(𝑛,𝑤). Then the decision tree 𝛤contains a complete path 𝜉
such that𝑤∈𝛴(𝑛,𝜉)and the terminal node of the path 𝜉is labeled with
the word𝑤. It is clear that 𝛴(𝑛,𝜉) ∩𝐿(𝑛) = {𝑤}. Let𝜉contain𝑚nodes
that are not the root nor terminal node and 𝑙𝑛
𝑖1,…,𝑙𝑛
𝑖𝑚be attributes
attached to these nodes. Denote 𝐽= {𝑖1,…,𝑖𝑚}. Then𝐿(𝑤,𝐽) = {𝑤}.
Therefore𝑚≥𝑀𝐿(𝑛,𝑤) =𝑇𝐿(𝑛). It is clear that ℎ(𝛤)≥𝑚. Thus,
ℎ𝑟𝑎
𝐿(𝑛) =ℎ(𝛤)≥𝑚≥𝑀𝐿(𝑛,𝑤) =𝑇𝐿(𝑛).
We now prove that ℎ𝑟𝑎
𝐿(𝑛)≤𝑇𝐿(𝑛). One can show that, for each
𝑤∈𝐿(𝑛), we can construct a complete path 𝜉𝑤, which satisfies the
following conditions: the number of nodes in 𝜉𝑤that are not the root
nor terminal node is equal to 𝑀𝐿(𝑛,𝑤),𝛴(𝑛,𝜉𝑤) ∩𝐿(𝑛) = {𝑤}, and the
terminal node of 𝜉𝑤is labeled with the word 𝑤. If we merge roots of all
paths𝜉𝑤,𝑤∈𝐿(𝑛), we obtain a decision tree, which solves the problem
of recognition for 𝐿(𝑛)nondeterministically and which depth is equal
to𝑇𝐿(𝑛). Thus,ℎ𝑟𝑎
𝐿(𝑛)≤𝑇𝐿(𝑛)andℎ𝑟𝑎
𝐿(𝑛) =𝑇𝐿(𝑛).□
Theorem 3. Let𝐿be a nonempty regular factorial language over the
alphabet𝛴and𝐼= (𝐺,𝑞0,𝑄)be a f-reduced diagram, which generates the
language𝐿. Then the following statements hold:
(a) If𝐼is an independent simple diagram, then 𝐻𝑟𝑎
𝐿(𝑛) =𝑂(1).
(b) If𝐼is not independent simple diagram, then 𝐻𝑟𝑎
𝐿(𝑛) =𝛩(𝑛).
Proof. (a) Let𝐼be an independent simple diagram and 𝑐𝑙(𝐼)≤1. By
Theorem 1, 𝐻𝑟𝑑
𝐿(𝑛) =𝑂(1). It is clear that 𝐻𝑟𝑎
𝐿(𝑛)≤𝐻𝑟𝑑
𝐿(𝑛). Therefore
𝐻𝑟𝑎
𝐿(𝑛) =𝑂(1).
Let𝐼be an independent simple diagram and 𝑐𝑙(𝐼)≥2. Let𝑛be a
natural number. If 𝐿(𝑛) = ∅, then𝑇𝐿(𝑛) = 0. Let𝐿(𝑛)≠∅. Denote by 𝑑
the number of nodes in the graph 𝐺. In the proof of Lemma 4.5 [1], it
was proved that 𝑀𝐿(𝑛,𝑤)≤𝑑(4𝑑+ 1)for any word 𝑤∈𝐿(𝑛). Therefore
𝑇𝐿(𝑛)≤𝑑(4𝑑+ 1). Thus, by Lemma 2, ℎ𝑟𝑎
𝐿(𝑛)≤𝑑(4𝑑+ 1)for any natural
𝑛and𝐻𝑟𝑎
𝐿(𝑛) =𝑂(1).
(b) Let𝐼be not simple diagram and 𝐶1,𝐶2be different elementary
cycles of the diagram 𝐼, which have a common node 𝑣. Since𝐼is a
f-reduced diagram, it contains a path 𝜉from the node 𝑞0to the node
𝑣, and𝑣is a final node. Let the length of the path 𝜉be equal to 𝑎,
the length of the cycle 𝐶1be equal to 𝑏, and the length of the cycle
𝐶2be equal to 𝑐. Let𝛼be the word generated by the path 𝜉,𝛽be the
word generated by a path from 𝑣to𝑣obtained by the passage 𝑐times
along the cycle 𝐶1, and𝛾be the word generated by a path from 𝑣to𝑣
obtained by the passage 𝑏times along the cycle 𝐶2. The words 𝛽and𝛾
are different and they have the same length 𝑏𝑐.
Consider the sequence of numbers 𝑛𝑖=𝑎+𝑖𝑏𝑐,𝑖= 1,2,…. Let
𝑖∈𝜔⧵{0}. The set𝐿(𝑛𝑖)contains the word 𝛼𝛾𝑖and the words 𝛼𝛾𝑗𝛽𝛾𝑖−𝑗−1
for𝑗= 0,…,𝑖− 1. It is easy to show that 𝑀𝐿(𝑛𝑖,𝛼𝛾𝑖)≥𝑖: to distinguish
the word𝛼𝛾𝑖from the words 𝛼𝛾𝑗𝛽𝛾𝑖−𝑗−1,𝑗= 0,…,𝑖− 1, we need to use
at least one letter from each of 𝑖words𝛾appearing in 𝛼𝛾𝑖. Therefore
𝑇𝐿(𝑛𝑖)≥𝑖and, by Lemma 2, ℎ𝑟𝑎
𝐿(𝑛𝑖)≥𝑖= (𝑛𝑖−𝑎)∕(𝑏𝑐). Let𝑛≥𝑛1
and let𝑖be the maximum natural number such that 𝑛≥𝑛𝑖. Evidently,
𝑛−𝑛𝑖≤𝑏𝑐. Hence𝐻𝑟𝑎
𝐿(𝑛)≥ℎ𝑟𝑎
𝐿(𝑛𝑖)≥(𝑛−𝑏𝑐−𝑎)∕(𝑏𝑐). Therefore
𝐻𝑟𝑎
𝐿(𝑛)≥𝑛∕(2𝑏𝑐)for large enough 𝑛. The inequality 𝐻𝑟𝑎
𝐿(𝑛)≤𝑛is
obvious. Thus, 𝐻𝑟𝑎
𝐿(𝑛) =𝛩(𝑛).
Let𝐼be a dependent simple diagram. Then there exist two different
elementary cycles 𝐶1and𝐶2of the diagram 𝐼, nodes𝑣1and𝑣2of the
cycles𝐶1and𝐶2, respectively, and a path 𝜋of the diagram 𝐼from𝑣1to
𝑣2, which satisfy the following conditions: 𝑊(𝐼,𝐶1,𝑣1) =𝑊(𝐼,𝐶2,𝑣2)
and the length of the path 𝜋is a number divisible by 𝑟(𝐼,𝐶1,𝑣1). Let us
remind that, for 𝑖= 1,2,𝑊(𝐼,𝐶𝑖,𝑣𝑖)is the infinite periodic word over
the alphabet 𝛴generated by the cycle 𝐶𝑖beginning with the node 𝑣𝑖,
and𝑟(𝐼,𝐶1,𝑣1)is the minimum period of the word 𝑊(𝐼,𝐶1,𝑣1). Since
Fig. 2. Diagram𝐼0.
𝐼is a f-reduced diagram, it contains a path 𝜉from the node 𝑞0to the
node𝑣1, and all nodes of the graph 𝐺are final. Let the path 𝜉generate
the word𝛼of the length 𝑎. Denote𝑟=𝑟(𝐼,𝐶1,𝑣1). Let the length of the
cycle𝐶1be equal to 𝑏𝑟, the length of the path 𝜋be equal to 𝑐𝑟, and
the path𝜋generate the word 𝛽. Denote by 𝛾the prefix of the length 𝑟
of the word 𝑊(𝐼,𝐶1,𝑣1). We now define two words of the length 𝑟𝑏𝑐:
𝑢=𝛾𝑏𝑐and𝑤=𝛽𝛾𝑐(𝑏−1). It is clear that 𝑢≠𝑤.
Consider the sequence of numbers 𝑛𝑖=𝑎+𝑖𝑟𝑏𝑐,𝑖= 1,2,…. Let
𝑖∈𝜔⧵{0}. The set𝐿(𝑛𝑖)contains the word 𝛼𝑢𝑖and the words 𝛼𝑢𝑗𝑤𝑢𝑖−𝑗−1
for𝑗= 0,…,𝑖− 1. It is easy to show that 𝑀𝐿(𝑛,𝛼𝑢𝑖)≥𝑖: to distinguish
the word𝛼𝑢𝑖from the words 𝛼𝑢𝑗𝑤𝑢𝑖−𝑗−1,𝑗= 0,…,𝑖− 1, we need to use
at least one letter from each of 𝑖words𝑢appearing in 𝛼𝑢𝑖. Therefore
𝑇𝐿(𝑛𝑖)≥𝑖and, by Lemma 2, ℎ𝑟𝑎
𝐿(𝑛𝑖)≥𝑖= (𝑛𝑖−𝑎)∕(𝑟𝑏𝑐). Let𝑛≥𝑛1
and let𝑖be the maximum natural number such that 𝑛≥𝑛𝑖. Evidently,
𝑛−𝑛𝑖≤𝑟𝑏𝑐. Hence𝐻𝑟𝑎
𝐿(𝑛)≥ℎ𝑟𝑎
𝐿(𝑛𝑖)≥(𝑛−𝑟𝑏𝑐−𝑎)∕(𝑟𝑏𝑐). Therefore
𝐻𝑟𝑎
𝐿(𝑛)≥𝑛∕(2𝑟𝑏𝑐)for large enough 𝑛. The inequality 𝐻𝑟𝑎
𝐿(𝑛)≤𝑛is
obvious. Thus, 𝐻𝑟𝑎
𝐿(𝑛) =𝛩(𝑛).□
Note that in general case (when we consider not only factorial
languages) the classification of reduced diagrams depending on the
minimum depth of decision trees solving the problem of recognition
nondeterministically is more complicated [2]. In particular, there exists
a dependent simple reduced diagram 𝐼0(see Fig. 2) with the starting
node labeled with the symbol +and the unique final node labeled with
the symbol ∗that generates the regular language 𝐿0= {0𝑖10𝑗∶𝑖,𝑗∈𝜔}
over the alphabet {0,1}, which is not factorial and for which 𝐻𝑟𝑎
𝐿0(𝑛) =
𝑂(1).
3.3. Decision trees solving membership problem
For a regular factorial language 𝐿, the notation |𝐿|= ∞means that
𝐿is an infinite language, and the notation |𝐿|<∞means that 𝐿is a
finite language.
Theorem 4. Let𝐿be a regular factorial language over the alphabet 𝛴.
(a) If |𝐿|= ∞ and𝐿≠𝛴∗, then𝐻𝑚𝑑
𝐿(𝑛) =𝛩(𝑛)and𝐻𝑚𝑎
𝐿(𝑛) =𝛩(𝑛).
(b) If |𝐿|<∞or𝐿=𝛴∗, then𝐻𝑚𝑑
𝐿(𝑛) =𝑂(1)and𝐻𝑚𝑎
𝐿(𝑛) =𝑂(1).
Proof. It is clear that ℎ𝑚𝑎
𝐿(𝑛)≤ℎ𝑚𝑑
𝐿(𝑛)for any natural 𝑛.
(a) Let |𝐿|= ∞,𝐿≠𝛴∗, and𝑤0be a word with the minimum length
from𝛴∗⧵𝐿. Denote by 𝑡the length of 𝑤0. Since |𝐿|= ∞,𝐿(𝑛)≠∅for
any natural 𝑛. Let𝑛be a natural number such that 𝑛 > 𝑡 and𝛤be a
decision tree over 𝐿(𝑛)that solves the problem of membership for 𝐿(𝑛)
nondeterministically and has the minimum depth. Let 𝑤∈𝐿(𝑛)and𝜉
be a complete path in 𝛤such that𝑤∈𝛴(𝑛,𝜉). Then the terminal node
of𝜉is labeled with the number 1. Beginning with the first letter, we
divide the word 𝑤into ⌊𝑛∕𝑡⌋blocks with 𝑡letters in each and the suffix
of the length 𝑛−𝑡⌊𝑛∕𝑡⌋. Let us assume that the number of nodes labeled
with attributes in 𝜉is less than ⌊𝑛∕𝑡⌋. Then there is a block such that
queries (attributes) attached to nodes of 𝜉does not ask about letters
from the block. We replace this block in the word 𝑤with the word
𝑤0and denote by 𝑤′the obtained word. It is clear that 𝑤′∉𝐿and
𝑤′∈𝛴(𝑛,𝜉), but this is impossible since the terminal node of the path
𝜉is labeled with the number 1. Therefore the depth of 𝛤is greater
than or equal to ⌊𝑛∕𝑡⌋. Thus,ℎ𝑚𝑎
𝐿(𝑛)≥⌊𝑛∕𝑡⌋. It is easy to construct a
decision tree over 𝐿(𝑛)that solves the problem of membership for 𝐿(𝑛)
deterministically and has the depth equals to 𝑛. Therefore ℎ𝑚𝑑
𝐿(𝑛)≤𝑛.
Thus,𝐻𝑚𝑑
𝐿(𝑛) =𝛩(𝑛)and𝐻𝑚𝑎
𝐿(𝑛) =𝛩(𝑛).Array 15 (2022) 100203
5M. Moshkov
Table 1
Complexity classes 1,…,5.
𝐼is independent 𝑐𝑙(𝐼)𝐿𝐼𝐻𝑟𝑑
𝐿𝐼𝐻𝑟𝑎
𝐿𝐼𝐻𝑚𝑑
𝐿𝐼𝐻𝑚𝑎
𝐿𝐼
simple diagram
1 Yes = 0 𝑂(1)𝑂(1)𝑂(1)𝑂(1)
2 Yes = 1 𝑂(1)𝑂(1)𝛩(𝑛)𝛩(𝑛)
3 Yes ≥2 𝛩(log𝑛)𝑂(1)𝛩(𝑛)𝛩(𝑛)
4 No ≠𝛴∗𝛩(𝑛)𝛩(𝑛)𝛩(𝑛)𝛩(𝑛)
5 No =𝛴∗𝛩(𝑛)𝛩(𝑛)𝑂(1)𝑂(1)
(b) Let |𝐿|<∞. Then there exists natural 𝑚such that𝐿(𝑛) = ∅ for
any natural 𝑛≥𝑚. Therefore, for each natural 𝑛≥𝑚,ℎ𝑚𝑑
𝐿(𝑛) = 0 and
ℎ𝑚𝑎
𝐿(𝑛) = 0. Thus,𝐻𝑚𝑑
𝐿(𝑛) =𝑂(1)and𝐻𝑚𝑎
𝐿(𝑛) =𝑂(1).
Let𝐿=𝛴∗,𝑛be a natural number, and 𝛤be a decision tree over
𝐿(𝑛), which consists of the root, a terminal node labeled with 1, and an
edge that leaves the root and enters the terminal node. One can show
that𝛤solves the problem of membership for 𝐿(𝑛)deterministically and
has the depth equals to 0. Therefore ℎ𝑚𝑑
𝐿(𝑛) = 0 andℎ𝑚𝑎
𝐿(𝑛) = 0 . Thus,
𝐻𝑚𝑑
𝐿(𝑛) =𝑂(1)and𝐻𝑚𝑎
𝐿(𝑛) =𝑂(1).□
4. Corollaries
In this section, we consider two corollaries of Theorems 1, 3, and 4.
4.1. Joint behavior of functions 𝐻𝑟𝑎
𝐿,𝐻𝑟𝑑
𝐿,𝐻𝑚𝑎
𝐿, and𝐻𝑚𝑑
𝐿
In this section, we assume that each regular factorial language over
the alphabet 𝛴is given by a f-reduced diagram 𝐼, which generates the
considered language denoted by 𝐿𝐼. To study all possible types of joint
behavior of functions 𝐻𝑟𝑑
𝐿𝐼,𝐻𝑟𝑎
𝐿𝐼,𝐻𝑚𝑑
𝐿𝐼, and𝐻𝑚𝑎
𝐿𝐼, we consider five classes
of regular factorial languages 1,…,5described in the columns 2–4
of Table 1. In particular, 1consists of all regular factorial languages
𝐿𝐼for which the diagram 𝐼is an independent simple diagram and
𝑐𝑙(𝐼) = 0 . It is easy to show that the complexity classes 1,…,5are
pairwise disjoint, and each regular factorial language 𝐿𝐼belongs to one
of these classes. The behavior of functions 𝐻𝑟𝑑
𝐿𝐼,𝐻𝑟𝑎
𝐿𝐼,𝐻𝑚𝑑
𝐿𝐼, and𝐻𝑚𝑎
𝐿𝐼for languages from these classes is described in the last four columns
of Table 1. For each class, the results considered in Table 1 for the
functions𝐻𝑟𝑑
𝐿𝐼and𝐻𝑟𝑎
𝐿𝐼follow directly from Theorems 1 and 3.
We now consider the behavior of the functions 𝐻𝑚𝑑
𝐿𝐼and𝐻𝑚𝑎
𝐿𝐼for
each of the classes 1,…,5. Let𝐼= (𝐺,𝑞0,𝑄)be a f-reduced diagram
over the alphabet 𝛴, which generates a regular factorial language.
Let𝐿𝐼∈1. Since𝑐𝑙(𝐼) = 0,𝐺is a directed acyclic graph, and the
language𝐿𝐼is finite. Using Theorem 4 we obtain 𝐻𝑚𝑑
𝐿𝐼(𝑛) =𝑂(1)and
𝐻𝑚𝑎
𝐿𝐼(𝑛) =𝑂(1).
Let𝐿𝐼∈2. Since𝑐𝑙(𝐼) = 1 ,𝐺is a graph containing a cycle, and
the language 𝐿𝐼is infinite. By Lemma 4.2 [1], |𝐿𝐼(𝑛)|=𝑂(1). Therefore
𝐿𝐼≠𝛴∗. Using Theorem 4 we obtain 𝐻𝑚𝑑
𝐿𝐼(𝑛) =𝛩(𝑛)and𝐻𝑚𝑎
𝐿𝐼(𝑛) =𝛩(𝑛).
Let𝐿𝐼∈3. Since𝑐𝑙(𝐼)≥2,𝐺is a graph containing a cycle, and the
language𝐿𝐼is infinite. By Lemma 4.2 [1], |𝐿𝐼(𝑛)|=𝑂(𝑛𝑐𝑙(𝐼)). Therefore
𝐿𝐼≠𝛴∗. Using Theorem 4 we obtain 𝐻𝑚𝑑
𝐿𝐼(𝑛) =𝛩(𝑛)and𝐻𝑚𝑎
𝐿𝐼(𝑛) =𝛩(𝑛).
Let𝐿𝐼∈4. Since𝐼is not an independent simple diagram, 𝐺is a
graph containing a cycle, and the language 𝐿𝐼is infinite. We know that
𝐿𝐼≠𝛴∗. Using Theorem 4 we obtain 𝐻𝑚𝑑
𝐿𝐼(𝑛) =𝛩(𝑛)and𝐻𝑚𝑎
𝐿𝐼(𝑛) =𝛩(𝑛).
Let𝐿𝐼∈5. Then𝐿𝐼=𝛴∗. Using Theorem 4 we obtain 𝐻𝑚𝑑
𝐿𝐼(𝑛) =
𝑂(1)and𝐻𝑚𝑎
𝐿𝐼(𝑛) =𝑂(1).
We now show that the classes 1,…,5are nonempty. For simplic-
ity, we assume that 𝛴=𝐸, where𝐸= {0,1}. It is easy to generalize
the considered examples to the case of an arbitrary finite alphabet 𝛴
with at least two letters. In the examples of diagrams, the starting node
is labeled with the symbol +, and all nodes are final.
Denote by 𝐼1the diagram over the alphabet 𝐸depicted in Fig. 3.
One can show that 𝐼1is an independent simple f-reduced diagram and
𝑐𝑙(𝐼1) = 0. This diagram generates the language 𝐿𝐼1= {𝜆,0}, which is
factorial. Therefore 𝐿𝐼1∈1.
Fig. 3. Diagram𝐼1.
Fig. 4. Diagram𝐼2.
Fig. 5. Diagram𝐼3.
Fig. 6. Diagram𝐼4.
Fig. 7. Diagram𝐼5.
Denote by 𝐼2the diagram over the alphabet 𝐸depicted in Fig. 4.
One can show that 𝐼2is an independent simple f-reduced diagram and
𝑐𝑙(𝐼2) = 1 . This diagram generates the language 𝐿𝐼2= {0𝑖∶𝑖∈𝜔},
which is factorial. Therefore 𝐿𝐼2∈2.
Denote by 𝐼3the diagram over the alphabet 𝐸depicted in Fig. 5.
One can show that 𝐼3is an independent simple f-reduced diagram and
𝑐𝑙(𝐼1) = 2. This diagram generates the language 𝐿𝐼3= {0𝑖1𝑗∶𝑖,𝑗∈𝜔},
which is factorial. Therefore 𝐿𝐼3∈3.
Denote by 𝐼4the diagram over the alphabet 𝐸depicted in Fig. 6.
One can show that 𝐼4is a dependent simple f-reduced diagram generat-
ing the language 𝐿𝐼4= {0𝑖1𝑗0𝑘∶𝑖,𝑘∈𝜔,𝑗∈ {0,1}}, which is factorial.
It is clear that 𝐿𝐼4≠𝐸∗. Therefore 𝐿𝐼4∈4.
Denote by 𝐼5the diagram over the alphabet 𝐸depicted in Fig. 7.
One can show that 𝐼5is a f-reduced diagram that is not simple. This
diagram generates the language 𝐿𝐼5=𝐸∗, which is factorial. It is clear
that𝐿𝐼5=𝐸∗. Therefore 𝐿𝐼5∈5.
A regular factorial language 𝐿can have different f-reduced dia-
grams, which generate it. However, for each of such diagrams 𝐼, the
language𝐿𝐼=𝐿will belong to the same complexity class. Let us
assume the contrary: there exist a regular factorial language 𝐿and
two f-reduced diagrams 𝐼1and𝐼2, which generate it and for which
languages𝐿𝐼1and𝐿𝐼2belong to different complexity classes. Then,
for some pair 𝑏𝑐∈ {𝑟𝑑,𝑟𝑎,𝑚𝑑,𝑚𝑎 }, the functions 𝐻𝑏𝑐
𝐿𝐼1and𝐻𝑏𝑐
𝐿𝐼2have
different behavior, but this is impossible since 𝐻𝑏𝑐
𝐿𝐼1(𝑛) =𝐻𝑏𝑐
𝐿𝐼2(𝑛)for
any natural 𝑛.Array 15 (2022) 100203
6M. Moshkov
Fig. 8. Diagram𝐼(0).
4.2. Languages over alphabet {0,1}given by one forbidden word
Let𝐸= {0,1},𝛼∈𝐸∗, and𝛼≠𝜆. We denote by 𝐿(𝛼)the
language over the alphabet 𝐸, which consists of all words from 𝐸∗that
do not contain 𝛼as a factor. This is a regular factorial language with
𝑀𝐹(𝐿(𝛼)) = {𝛼}. The following theorem indicates for each nonempty
word𝛼∈𝐸∗the complexity class 𝑖to which the language 𝐿(𝛼)
belongs.
Theorem 5. Let𝛼∈𝐸∗and𝛼≠𝜆.
(a) If𝛼∈ {0,1}, then𝐿(𝛼) ∈2.
(b) If𝛼∈ {01,10}, then𝐿(𝛼) ∈3.
(c) If𝛼∉ {0,1,01,10}, then𝐿(𝛼) ∈4.
We now describe a f-reduced diagram 𝐼(𝛼)that generates the lan-
guage𝐿(𝛼)for a nonempty word 𝛼∈𝐸∗. Let𝛼=𝑎1⋯𝑎𝑛,𝛼0=𝜆, and
𝛼𝑖=𝑎1⋯𝑎𝑖for𝑖= 1,…,𝑛− 1. The set𝑃(𝛼) = {𝛼0,𝛼1,…,𝛼𝑛−1}is the
set of all proper prefixes of the word 𝛼. Then𝐼(𝛼) = (𝐺,𝑞0,𝑄), where
the set of nodes of the graph 𝐺is equal to𝑃(𝛼),𝑞0=𝛼0, and𝑄=𝑃(𝛼).
For𝑖= 0,…,𝑛− 2, an edge leaves the node 𝛼𝑖and enters the node 𝛼𝑖+1.
This edge is labeled with the letter 𝑎𝑖+1. For𝑖= 0,…,𝑛− 1, an edge
leaves the node 𝛼𝑖and enters the node 𝛼𝑗∈𝑃(𝛼)such that𝛼𝑗is the
longest suffix of the word 𝛼𝑖̄ 𝑎𝑖+1, wherē 𝑎𝑖+1= 0if𝑎𝑖+1= 1and̄ 𝑎𝑖+1= 1
if𝑎𝑖+1= 0. This edge is labeled with the letter ̄ 𝑎𝑖+1. It is easy to show
that𝐼(𝛼)is a f-reduced diagram over the alphabet 𝐸. From Theorem
10 [7] it follows that the diagram 𝐼(𝛼)generates the language 𝐿(𝛼).
Let𝛼∈𝐸∗⧵{𝜆}and𝛼=𝑎1⋯𝑎𝑛. We denote by ̄ 𝛼the word̄ 𝑎1⋯̄ 𝑎𝑛.
It is easy to prove the following statement.
Lemma 6. Let𝛼∈𝐸∗and𝛼≠𝜆. Then𝐻𝑏𝑐
𝐿(̄ 𝛼)(𝑛) =𝐻𝑏𝑐
𝐿(𝛼)(𝑛)for any pair
𝑏𝑐∈ {𝑟𝑑,𝑟𝑎,𝑚𝑑,𝑚𝑎 }and any natural 𝑛.
Lemma 7. Let𝛼∈𝐸∗⧵{𝜆},𝛽∈𝐸∗, and𝐿(𝛼) ∈4. Then𝐿(𝛼𝛽) ∈4.
Proof. Since𝐿(𝛼) ∈4,𝐻𝑟𝑑
𝐿(𝛼)(𝑛) =𝛩(𝑛)and𝐻𝑟𝑎
𝐿(𝛼)(𝑛) =𝛩(𝑛). One can
show that𝐿(𝛼)⊆𝐿(𝛼𝛽). Using this fact it is not difficult to prove that
𝐻𝑟𝑑
𝐿(𝛼)(𝑛)≤𝐻𝑟𝑑
𝐿(𝛼𝛽)(𝑛)and𝐻𝑟𝑎
𝐿(𝛼)(𝑛)≤𝐻𝑟𝑎
𝐿(𝛼𝛽)(𝑛)for any natural 𝑛. From
here and from Theorems 1 and 3 it follows that 𝐻𝑟𝑑
𝐿(𝛼𝛽)(𝑛) =𝛩(𝑛)and
𝐻𝑟𝑎
𝐿(𝛼𝛽)(𝑛) =𝛩(𝑛).
Since𝛼𝛽∉𝐿(𝛼𝛽),𝐿(𝛼𝛽)≠𝐸∗. The diagram 𝐼(𝛼𝛽)contains at least
one circle formed by the edge that leaves and enters the node 𝜆and
is labeled with the letter ̄ 𝑎1, where𝑎1is the first letter of the word
𝛼. Therefore the language 𝐿(𝛼𝛽)is infinite. By Theorem 4, 𝐻𝑚𝑑
𝐿(𝛼𝛽)(𝑛) =
𝛩(𝑛)and𝐻𝑚𝑎
𝐿(𝛼𝛽)(𝑛) =𝛩(𝑛). Thus,𝐿(𝛼𝛽) ∈4.□
Proof of Theorem 5. In each figure depicting a diagram 𝐼(𝛼),𝛼∈
𝐸∗⧵{𝜆}, we label each node with a corresponding prefix of the word
𝛼.
(a) The diagram 𝐼(0)is depicted in Fig. 8. This is an independent
simple f-reduced diagram with 𝑐𝑙(𝐼(0)) = 1 . Therefore 𝐿(0) ∈ 2. By
Lemma 6,𝐿(1) ∈2.
(b) The diagram 𝐼(01)is depicted in Fig. 9. This is an independent
simple f-reduced diagram with 𝑐𝑙(𝐼(01)) = 2 . Therefore 𝐿(01) ∈ 3. By
Lemma 6,𝐿(10) ∈ 3.
Fig. 9. Diagram𝐼(01).
Fig. 10. Diagram𝐼(00).
Fig. 11. Diagram𝐼(010).
Fig. 12. Diagram𝐼(011).
(c) The diagram 𝐼(00)is depicted in Fig. 10. This is not a simple
diagram. It is clear that 𝐿(00)≠𝐸∗. Therefore 𝐿(00) ∈ 4. By Lemma 6,
𝐿(11) ∈ 4. Using Lemma 7 we obtain 𝐿(000),𝐿(001),𝐿(110),𝐿(111) ∈
4.
The diagram 𝐼(010) is depicted in Fig. 11. This is not a simple
diagram. It is clear that 𝐿(010) ≠𝐸∗. Therefore 𝐿(010) ∈ 4. By
Lemma 6,𝐿(101) ∈ 4.
The diagram 𝐼(011) is depicted in Fig. 12. This is not a simple
diagram. It is clear that 𝐿(011) ≠𝐸∗. Therefore 𝐿(011) ∈ 4. By
Lemma 6,𝐿(100) ∈ 4.
We proved that, for any word 𝛼∈𝐸∗of the length three, 𝐿(𝛼) ∈4.
Using Lemma 7 we obtain that, for any word 𝛼∈𝐸∗of the length
greater than or equal to four, 𝐿(𝛼) ∈4.□
Declaration of competing interest
The authors declare that they have no known competing finan-
cial interests or personal relationships that could have appeared to
influence the work reported in this paper.
Acknowledgments
Research reported in this publication was supported by King Abdul-
lah University of Science and Technology (KAUST), Saudi Arabia. TheArray 15 (2022) 100203
7M. Moshkov
author is grateful to the anonymous reviewers for useful remarks and
suggestions.
References
[1] Moshkov M. Decision trees for regular language word recognition. Fund Inform
2000;41(4):449–61.
[2] Moshkov M. Complexity of deterministic and nondeterministic decision trees
for regular language word recognition. In: Bozapalidis S, editor. Proceedings of
the 3rd international conference developments in language theory, DLT 1997,
Thessaloniki, Greece, July 20–23, 1997. Aristotle University of Thessaloniki; 1997,
p. 343–9.
[3] D’Alessandro F, Intrigila B, Varricchio S. On the structure of the counting function
of sparse context-free languages. Theoret Comput Sci 2006;356(1–2):104–17.[4] Shur AM. Combinatorial complexity of regular languages. In: Hirsch EA,
Razborov AA, Semenov AL, Slissenko A, editors. Computer science - theory and
applications, third international computer science symposium in Russia, CSR 2008,
Moscow, Russia, June 7-12, 2008, proceedings. Lecture notes in computer science,
vol. 5010, Springer; 2008, p. 289–301.
[5] Moshkov M. Decision trees for binary subword-closed languages. 2022, CoRR,
arXiv:2201.01493.
[6] Haines LH. On free monoids partially ordered by embedding. J Combin Theory
1969;6:94–8.
[7] Crochemore M, Mignosi F, Restivo A. Automata and forbidden words. Inf Process
Lett 1998;67(3):111–7.
[8] Yu S. Regular languages. In: Rozenberg G, Salomaa A, editors. Handbook of formal
languages, Volume 1: word, language, grammar. Springer; 1997, p. 41–110.
[9] Hopcroft JE, Motwani R, Ullman JD. Introduction to automata theory, languages,
and computation. Pearson international edition, third ed.. Addison-Wesley; 2007.