Role of sub-trajectories in online signature veriﬁcation
Sudhir Rohillaa, Anuj Sharmab,1,*, R.K. Singlab
aDepartment of Computer Science, Gopichand Arya Mahila College, Abohar, India
bDepartment of Computer Science and Applications, Panjab University, Chandigarh, India
ARTICLE INFO
Keywords:Online signature veriﬁcationStatic featureStructural featureKinematics featureStatistical featureABSTRACT
In this paper, we have provided a partitioned based technique which can increase the ef ﬁciency of an existing technique in which each partition is called as a sub-trajectory. To implement it, eighty features are extracted fromsignature trajectories and categorized into four feature sets as static, kinematics, structural and statistical. Wehave used these four feature categories and their possible combinations on two different algorithms. An importantoutcome is observed as the EER decreases with increase in sub-trajectories to an optimum level and behaves inreverse direction afterwards which suggests that for any matching algorithm, the present technique can furtherreduce the error rate to an optimum level. These experiments are performed on the benchmark database SVC2004 TASK 2 which contains forty genuine signatures of each forty writers and forty skilled forgeries from ﬁve different writers. The experiments are discussed in detail for change in the EER with change in each subsequentsub-trajectory level for all feature sets and the results prove that the technique using sub-trajectories improvingthe EER by a signiﬁcant average amount of 1.18 with increase in one sub-trajectory level for all the eighty featuresand 1.5 for the features of categories kinematics and structural when taken together.
1. IntroductionSignature is a socially worldwide accepted biometric characteristic torepresent any individual and hence the problem of automating thesignature veriﬁcation process has a signiﬁcant importance. The online mode of signature veriﬁcation is more robust than the ofﬂine mode as it captures the dynamic properties of signatures in the real time which ishard to replicate by imposters. The online signature veri ﬁcation process has two phases: feature extraction and the veri ﬁcation process. In liter- ature, the features are classiﬁed as parametric and functional. In func-tional approach, signatures are categorized by the features which arefunctional in nature, especially function of time. On the other side, theparametric features are categorized into four categories on the basis oftheir physical behavior: static, kinematic, structural and statistical [ 1]. For the veriﬁcation process, many classiﬁers and techniques have been explored in the previous works. Some of the important techniques areSupport Vector Machine (SVM), Hidden Markov Model (HMM), DynamicTime Warping (DTW), Symbolic data matching, Principal ComponentAnalysis (PCA) etc which are used as the veri ﬁcation tools and tech- niques. The DTW is one of the most common technique in which thematching can be done between any two time sequences by consideringthe minimization of root mean square distances between them [ 2–5]. The best example of such type of technique is Euclidean distance basedmatching. Few classiﬁer has also been considered as the signature veri-ﬁcation tool like NN (Neural Network), SVM, HMM etc. The HMM tool isa stochastic model which is based on markov process containing hiddenstates [6–9]. It is considered to be potential veriﬁcation approach despite the fact that it has a high computational complexity [ 10]. The other classiﬁer, SVM, distinguishes any two class or multi-class objects byconstructing a hyper plane or a number of hyper-planes in a highdimensional space which further maximizes the distance betweendifferent class objects and minimizes the classi ﬁcation error within the class [11–13]. The NN classiﬁer is also used for the veriﬁcation purpose [14,15]. But it requires a large number of input data for training which isdifﬁcult to get in case of signatures [16]. In symbolic data matching, signatures are represented by symbolic feature vectors and a referencefeature vector (RFV) is evaluated toﬁnd out the forgery or genuineness ofa test signature [16].
Algorithm 1FEST: feature extraction using sub-trajectories1:procedureFEST2:fori¼1,2,…, all the writers,Udo 3:forj¼1,2,…, all the samples of each writer, Sdo(continued on next page)
* CorrespondingE-mail address:anujs@pu.ac.in(A. Sharma).
1https://sites.google.com/site/anujsharma25/ .
Contents lists available atScienceDirect
Array
journal homepage:www.elsevier.com/journals/array/2590-0056/open-access-journal
https://doi.org/10.1016/j.array.2020.100028Received 19 November 2019; Received in revised form 23 April 2020; Accepted 24 April 2020Available online 4 May 20202590-0056/©2020 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY license ( http://creativecommons.org/licenses/by/4.0/ ).Array 6 (2020) 100028(continued)
4:fork¼1,2,…, STL(Sub-trajectory level, m) do 5: s
Vector(X,Y,T,P)←signature captured6: sig(X,Y,T,P)←sizeNormalization(s
Vector(X,Y,T,P)) 7: sig(X(k),Y(k),T(k),P(k))←sig(X,Y,T,P) Quantiﬁcation of a signature has been done by evaluating N number of features from the rawinformation8:(X,Y,T,P) of each signature9:½f
1;f2;…;f N/C138←sig(X(k),Y(k),T(k),P(k))10: st
Vector(k)←½f 1;f2;…;f N/C138; 11: sig
Sample Vector(j)←[st Vector(1), st Vector(2),…st Vector(m)]; end for12: sig
User Vector(i)←[sig Sample Vector(1); sig Sample Vector(2);… sig
Sample Vector(S)];end for13: sig Complete Vector←[sig User Vector(1); sig
User Vector(2);…sig User Vector(U)]; end procedure
Algorithm 2GFE: General Feature Extraction without using sub-trajectories1:procedureGFE2:fori¼1,2,…, all the writers,Udo 3:forj¼1,2,…, all the samples of each writer, Sdo 4: s
Vector(X,Y,T,P)←signature captured5: sig(X,Y,T,P)←sizeNormalization(s
Vector(X,Y,T,P)) 6: sig(X(k),Y(k),T(k),P(k))←sig(X,Y,T,P) Quantiﬁcation of a signature has been done by evaluating N number of features from the rawinformation7:(X,Y,T,P) of each signature8:½f
1;f2;…;f N/C138←sig(X(k),Y(k),T(k),P(k))9: sig
Sample Vector(j)←½f 1;f2;…;f N/C138; end for10: sig
User Vector(i)←[sig Sample Vector(1); sig Sample Vector(2);… sig
Sample Vector(S)];end for11: sig
Complete Vector←[sig User Vector(1); sig User Vector(2);… sig
User Vector(U)];end procedure
All these techniques are implemented to develop a better signatureveriﬁcation system in terms of the error rates or its performance. In thispaper, we have provided a partitioned based technique which can in-crease the efﬁciency of an existing technique in which each partition iscalled as a sub-trajectory. To implement this technique, we have appliedthe algorithm FEST (Feature Extraction using Sub-Trajectories) as shownin Algorithm 1 and it is implemented along with the interval valuedsymbolic matching technique. Symbolic matching with sub-trajectoriesmeans that we are partitioning the signatures into a number of equalparts. Each part is considered as a sub-trajectory. This partition is done onthe basis of captured data points. The sub-trajectory level two means thatsignature is broken into two halves, the sub-trajectory level three meansthat signature is broken into three equal parts and similarly, the sub-trajectory levelmmeans that signature is broken into mequal parts. Each such part contains equal number of data points. After dividing intosub-trajectories, the symbolic matching technique has been applied oneach of the sub-trajectory. Thus, we would have a feature set comprisingmtimes the extracted features from the sub-trajectory level, (ST) ¼m, and in this way, we increase the total number of features each time byincreasing the sub-trajectory levels. The concept of sub-trajectories canbe understood with the help ofFig. 1. We have implemented the algo- rithm GFE (General Feature Extraction) as shown in Algorithm 1, toextract the features without using sub-trajectories. The implementationof GFE algorithm means that we are implementing any technique withoutimplementing FEST algorithm and to compare the results of that tech-nique while using the FEST algorithm in order to see the impact of sub-trajectories.Moreover, in the next section of this paper, system design has beendiscussed to implement the proposed technique. Then feature classi ﬁ- cation has been discussed in section3. In section4, we have mentioned two different algorithms SDM (Symbolic Data Matching) and SDMSVM(Symbolic Data Matching using Support Vector Machine) on which theimpact of FEST algorithm has been discussed. The last section concludesthe paper by analysing the results.
Fig. 1.1a represents 1 partition means entire signature trajectory, 1 b shows 2partitions, 1c shows 3 partitions and 1 d shows 4 partitions.
Fig. 2.System Design of signatures veriﬁcation system.S. Rohilla et al. Array 6 (2020) 100028
22. System designThe system developed for this study contains 3 stages as shown inFig. 2.Stage I:The veryﬁrst step in online signature veriﬁcation is the data acquisition. The signature can be captured through various machines likepen tablet, tablet PCs and PDAs. As the signature is being done, we candynamically capture its attributes like x/C0ycoordinate points, time sequence for the captured data points, pressure etc. The size normaliza-tion is then applied to the captured data points of each signature.Stage II:The next stage is the feature extraction. The signatures arequantiﬁed by using the dynamic information captured at stage 1, some ofthe mathematical properties, called features, has been computed and thesignatures are, then, represented in terms of these features. We havedeﬁned two ways of capturing the features: FEST (Feature Extractionusing Sub-trajectories) and GFE (General Feature Extraction or withoutsub-trajectory) as explained in Algorithm 1 and 1 respectively.Stage III:After evaluating the features, we have implemented thesymbolic matching technique on both the feature vectors with sub-trajectories and without sub-trajectories. After that the output is storedas if the signature is authentic or genuine and termed as output 1 and 2respectively.3. Feature classiﬁcationThe signature trajectories can be represented by some behavioralcharacteristics which are the numeric measure of the basic mathematicalproperties of each data point. These characteristics are termed as featuresof signature trajectories. In this paper, such type of eighty features havebeen described and categorized into four categories based on theirbehavioral nature. These categories are static, kinematics, structural andstatistical [1]. We have identiﬁed 80 features from the literature. TheNelson and Kishon mentioned some formulas for the features pathtangent angle, tangential and centripetal acceleration, jerk, curvature etc.mainly used in signature veriﬁcation [17]. All of the used features along with their respective categories are mentioned in Table 1. These cate- gories help us toﬁnd out the impact of each category in the process ofsignature veriﬁcation.4. Symbolic matching using sub-trajectory levels4.1. Algorithm 3: symbolic data matching (SDM)In symbolic data matching (SDM), signatures are represented by thefeature vectors. Each feature vector contains the value of all the featuresdeﬁne to characterize the signature such as a signature can be charac-terized bymfeatures asff
1;f2;…;f mg. Then, on the basis of the mean andstandard deviation of each feature in a number of sample signatures(feature vectors) of a writer, a feature level threshold is developed. Thisfeature level threshold is used to obtain an interval valued referencefeature vector (RFV) [16]. For example, the RFV of ani
thwriter form features is given byRFV
i¼/C8/C2f/C0i1;fþi1/C3;/C2f/C0i2;fþi2/C3;…;/C2f/C0im;fþim/C3/C9;(1)where the interval-valuedm
thfeature ofithwriter and½f/C0im;fþim/C138,i sd eﬁned as/C2f
/C0im¼μim/C0τim;fþim¼μimþτim/C3; (2)where the
μimis the mean ofmthfeature ofithwriter’s training sample and feature-level threshold,
τim, is evaluated as
τim¼ασim; (3)where the
αis a scalar and σimis the standard deviation ofmthfeature of i
thwriter’s training sample.Each of the feature value of a test signature of a writer is compared toits corresponding interval in the reference feature vector of the samewriter and is checked whether this value lies within the interval or not. Ifit lies within the interval, it is accountable for the genuineness of thesignature otherwise for forgery of the particular signature. Then a com-mon threshold, empirically evaluated, is applied on the total count ofaccountable features for a test signature. This threshold decides if the testsignature is authentic or a forgery.
Table 1A feature Set containing the eighty features under their respective categories. Here, Tdenotes a time interval andtspeciﬁes an instance of time.
SrNoStatic Features (1–18) Kinematic Features (19 –49) Structural Features (50–64)Statistical Features(65–80)1 count(Stroke) totalSignatureDuration tðJerk
minÞ=Tpd Θinitial ¼tan/C01ðVy=VxÞavg(Jerk) 2 count(localx
max) totalPenDownTime, T pd tðJerk maxÞ=Tpd ΘlastPenUp Standard Deviation (sd)ofa
x
3 count(localy max)TðV x>0Þ=T pd Jerk x;min ΘlastPenUp /C0Θ initial sdða yÞ 4ððy
max/C0y minÞ*ðx max/C0x minÞÞ= ðΔ
x*ΔyÞ TðVx<0Þ=T pd Jerk x;max directionChainCode,S 1 sdðv xÞ5ððx
max/C0x minÞ*Δ yÞ=ððy max/C0y minÞ *Δ
xÞ TðVy>0Þ=T pd Jerk y;min directionChainCode,S 2 sdðv yÞ6ðx
lastPenUp /C0x maxÞ=Δ x TðV y<0Þ=T pd Jerk y;max directionChainCode,S 3 sdðxÞ=Δ x
7ðy lastPenUp /C0y maxÞ=Δ y tðVx;minÞ=Tpd Jerk min directionChainCode,S 4 sdðyÞ=Δ y
8ðx lastPenUp /C0x minÞ=Δ x tðVx;maxÞ=Tpd Jerk max directionChainCode,S 5 avgðVÞ=V x;max
9ðy lastPenUp /C0y minÞ=Δ y tðVy;minÞ=Tpd tðXminÞ=Tpd directionChainCode,S 6 avgðVÞ=V y;max
10ðx 1stPenUp /C0x maxÞ=Δ x tðVy;maxÞ=Tpd tðXmaxÞ=Tpd directionChainCode,S 7 avgðVÞ=V max
11ðy 1stPenUp /C0y maxÞ=Δ y tðVminÞ=Tpd tðYminÞ=Tpd directionChainCode,S 8 ðxmax/C0avgðxÞÞ=avgðxÞ 12ðx
1stPenUp /C0x minÞ=Δ x tðVmaxÞ=Tpd tðYmaxÞ=Tpd dirChangeChainCode,C 1 ðymax/C0avgðyÞÞ=avgðyÞ 13ðy
1stPenUp /C0y minÞ=Δ y tðJerk x;maxÞ=Tpd rmsðAcc tanÞ=Acc max dirChangeChainCode,C 2 avgðJerk xÞ 14 count(V
x¼0) tðJerk x;minÞ=Tpd rmsðAcc centÞ=Acc max dirChangeChainCode,C 3 avgðJerk yÞ 15 count(V
y¼0) tðJerk y;minÞ=Tpd Tððdx=dtÞðdy=dtÞ>0Þ=Tððdx=dtÞðdy=dtÞ<0ÞdirChangeChainCode,C 4 sdða tanÞ 16 count(V
xchanges sign) tðJerk y;maxÞ=Tpd sdða centÞ 17 count(V
ychanges sign)18 maxDistance/ððy
max/C0y
minÞ*ðx max/C0x min))S. Rohilla et al. Array 6 (2020) 100028
34.2. Algorithm 4: SDM using support vector machine (SDMSVM)In algorithm 4, the symbolic data matching has been used with SVMclassiﬁer (SDMSVM) [18]. In SDMSVM algorithm, two RFVs has beengenerated for forgery as well as genuine dataset which are describedbelow:g
refVec¼f½minðg f1Þ;maxðg f1Þ/C138;½minðg f2Þ;maxðg f2Þ/C138;…;½minðg fNÞ; maxðg
fNÞ/C138gfrefVec¼f½minðf f1Þ;maxðf f1Þ/C138;½minðf f2Þ;maxðf f2Þ/C138;…; ½minðf
fNÞ;maxðf fNÞ/C138gThen the remodeling of these RFVs has been done by using randomnumbers as described below:g
randInt¼ðmaxðg sigTrÞ/C0minðg sigTrÞÞ*ðrandðI/C01;1Þþminðg sigTrÞÞf
randInt¼ðmaxðf sigTrÞ/C0minðf sigTrÞÞ*ðrandðI/C01;1Þþminðf sigTrÞÞg
refVec¼½minðg sigTrÞ;g randInt;maxðg sigTrÞ/C138f
refVec¼½minðf sigTrÞ;f randInt;maxðf sigTrÞ/C138 In this technique, signatures are symbolized in 0 and 1 with respect toabove generated RFVs and then two class SVM classi ﬁer is applied to check the genuineness of the test signatures.5. Experimentation5.1. Algorithm 3: SDMThe experiments are performed on the benchmark dataset, SVC TASK2, used inﬁrst signature veriﬁcation competition held in 2004. Thedataset contains 20 genuine signatures of forty writers and 20 forgerysignatures fromﬁve skilled forgers other than the forty writers. We haveused three combination of training and testing datasets. The ﬁrst dataset, DS1, contains 5 genuine signatures for training and other 15 genuinesignatures for testing. Thus, testing set comprises 35 signatures (15genuine signatures and 20 forgery signatures). In the second dataset,DS2, 10 genuine signatures are used for training and 30 signatures (10genuine signatures other than those used in training and 20 forgerysignatures) are used for testing purpose. Similarly, the third dataset, DS3,contains 15 genuine signatures for training and 25 signatures for testing(5 genuine signatures other than those used in training and 20 forgerysignatures).5.1.1. Symbolic matching without sub-trajectories: SDM with GFEWe have extracted eighty features from any signature trajectory andcategorized into four categories as mentioned in Table 1. The features are evaluated as mentioned in Algorithm 1 and the veri ﬁcation experiments are performed on each category as well as on all the possible combina-tions of these categories. Thus, it gives us the ﬁfteen experiment set which are to be performed on the three training-testing dataset asmentioned above. The results are given in Table 2.5.1.2. Symbolic matching with sub-trajectories: SDM with FESTSymbolic matching technique has been implemented along with theidea of sub-trajectory levels. The experiments for sub-trajectory level areconducted on all the experiment sets by taking all the combinations ofmentioned feature categories and it is observed that the experiment setðF2F3Þgives the optimum results. The results of the experiment set thatcontains all the features taken together ðF
1F2F3F4Þand the experiment set ðF
2F3Þ, for which we have achieved the best EER, are reported to see theeffect of sub-trajectories in the process of veri ﬁcation. The minimum EER at sub-trajectory level for experiment sets ðF
1F2F3F4ÞandðF 2F3Þwith all the three datasets (DS1, DS2 and DS3) has been mentioned in Tables 3 and 5respecively. The change in EER with each sub-trajectory level forthe experiment setsðF
1F2F3F4ÞandðF 2F3Þhas also been mentioned in Tables 4 and 7. The average change in EER for the respective experimentset with each dataset is also reported in these respective Tables. Thus, theaverage change in EER as per sub-trajectory level for the experiment setsðF
1F2F3F4ÞandðF 2F3Þas 1:18ðð1:32þ1:06þ1:17Þ=3Þand 1:5ðð1:45þ 1:31þ1:73Þ=3Þ, respectively. This behavior of change in the EER for thecorresponding experiment sets,ðF
1F2F3F4ÞandðF 2F3Þ, with DS1, DS2 and DS3 are shown inFig. 3andFig. 4, respectively.5.2. Algorithm 4: SDMSVMWe have used the datasetDS1 to see the impact of the algorithm 4 byusing the sub-trajectories. By using two class classi ﬁer, it is showing lower values of EER as compared to the Algorithm 3. The results arepresented inTable 6in which results with respect to ST1 level shows theimplementation without sub-trajectory and remaining column shows theminimum EER obtained after implementing subsequent levels of sub-trajectories.Table 2The minimum EER forP
4i¼1Ci¼15 combinations for each category and theirrespective combinations with single sub-trajectory (ST1) as entire signature.
SrNoFeatureSetMinEERDS1 DS2 DS31F
1 23.11 22.75 21.76 2F
2 25.68 24.30 24.00 3F
3 15.83 14.25 13.43 4F
4 28.48 26.68 26.32 5F
1F2 19.31 26.32 17.67 6F
1F3 14.97 13.65 14.00 7F
1F4 20.16 19.82 19.17 8F
2F3 16.89 16.81 16.50 9F
2F4 24.56 22.78 22.64 10F
3F4 17.15 14.13 13.64 11F
1F2F3 14.67 13.43 13.33 12F
1F2F4 20.04 18.44 17.43 13F
1F3F4 14.38 12.40 11.86 14F
2F3F4 18.50 17.13 15.81 15F
1F2F3F4 16.47 14.54 13.89Table 3The minimum EER for three datasets (DS1, DS2 and DS3) is reported in the ex-periments performed considering F
1F2F3F4as a feature set with seven sub- trajectory levels (ST1, ST2, ST3, ST4, ST5, ST6 and ST7).
Sr Sub-trajectory MinEER MinEER MinEERNo Levels DS1 DS2 DS31 ST1 16.47 14.54 13.892 ST2 13.43 12.68 12.383 ST3 13.00 11.28 10.864 ST4 12.00 10.92 10.145 ST5 11.57 11.96 11.106 ST6 12.46 12.25 12.307 ST7 14.57 13.66 13.41
Table 4The absolute change in the minimum EER for three datasets (DS1, DS2 and DS3)has been mentioned by considering F
1F2F3F4as a feature set with change in sub- trajectory levels.
Sr Sub-trajectory change in change in change inNo Level change EER, DS1 EER, DS2 EER, DS31 ST2 to ST1 3.04 1.86 1.512 ST3 to ST2 0.43 1.40 1.523 ST4 to ST3 1.00 0.36 0.724 ST5 to ST4 0.43 1.04 0.965 ST6 to ST5 0.89 0.29 1.206 ST7 to ST6 2.11 1.41 1.11Average 1.32 1.06 1.17S. Rohilla et al. Array 6 (2020) 100028
45.3. Analysis of resultsOn the basis of results obtained, we have analysed the outcomeswhich are as follows:5.3.1. For algorithm 3: SDM/C15EER decreases with increase in sub-trajectory level, obtain an op-timum value and then begins to rise with further increase in sub-trajectory level. This behavior is shown in Figs. 3and4forF
1F2F3F4
andF 2F3with DS1, DS2 and DS3, respectively./C15The EER decreases with increase in training data. This can beobserved from results reported inTables 2, 3 and 5. /C15The results also prove that the technique using sub-trajectorieschanges the EER by a signiﬁcant average amount of 1.18 with increasein each sub-trajectory level for all the eighty features and 1.5 for thefeatures of categories kinematics and structural when taken together aswe have achieved the best EER for this experiment set. The results arementioned inTables 4 and 7, respectively for theF
1F2F3F4andF 2F3
feature sets with DS1, DS2 and DS3.5.3.2. For algorithm 4: SDMSVM/C15The categorization of features in this study helps us in the selectionof the optimum feature set among 15 available feature set. The optimumerror¼0:0008 has been observed at sub-trajectory level 7 for F2F3
feature set which shows that the combination of kinematics and struc-tural produces the best EER among other features./C15Without sub-trajectory (ST¼1), we have obtained an EER of 3.6979for the optimal feature setF
1F2F3F4as given inTable 6. But after implementing the sub-trajectories (ST ¼2,3,4,5,6,7), the performance of the system increases as EER reported is 0.0008 at ST¼7 forF
2F3feature set. This reduction of EER occurs because with increase in each subse-quent sub-trajectory level, there is an increase in feature values of agenuine signatures that can be compared with the forgery test signatureand more the number of features values to compare, the better is theperformance of the system./C15The error rates are decreased with each subsequent implementationof sub-trajectory level and it goes to an optimum level. With the use ofSVM, it is observe that the behavior is kept stable after implementingST¼7 level for all the experimental sets as they show the same trend foreach sub-trajectory level. We can see this behavior in Table 6. /C15The results also prove that the technique using sub-trajectorieschanges the EER by a signiﬁcant average amount of 1.6556188893with increase in each sub-trajectory level for overall 15 experiments. Themean of change in EER per sub-trajectory (ST) level for the optimumfeature setF
2F3is 1.599. The results are mentioned in Table 6. This lower value of standard deviation for optimum feature set among otherexperiment sets shows the consistency of the features with Algorithm3.6. ConclusionIn this way, the overall conclusion is that the categorization helps usto see how each set of features when taken together can be useful inevaluating the performance of the system rather than taking the singlefeature. Also by implementing sub-trajectory, we have reduced the EERto an optimal level which can be implemented with any state of the artveriﬁcation technique in signature veriﬁcation and hence, it can improve the EER further. This shows the effectiveness of the discussed categori-zation and sub-trajectories in signature veri ﬁcation system. Further in comparison to previous work, the performance of thistechnique is quite satisfactory and we have achieved the minimum EERTable 5The minimum EER for three datasets (DS1, DS2 and DS3) is reported in the ex-periments performed considering F
2F3as a feature set with seven sub-trajectory levels (ST1, ST2, ST3, ST4, ST5, ST6 and ST7).
Sr Sub-trajectory MinEER MinEER MinEERNo Levels DS1 DS2 DS31 ST1 16.89 16.81 16.502 ST2 13.84 13.11 12.503 ST3 12.10 10.93 11.254 ST4 11.51 10.31 10.705 ST5 10.60 10.56 9.476 ST6 12.89 10.91 11.887 ST7 12.76 11.65 12.82
Fig. 3.EER with respect to Sub-trajectory levels for F 1F2F3F4with DS1, DS2 and DS3.
Fig. 4.EER with respect to Sub-trajectory levels for F 2F3with DS1, DS2 and DS3.S. Rohilla et al. Array 6 (2020) 100028
5of 9.47 for DS3, 10.31 for DS2 and 10.60 for DS1 with the feature set F 2F3
and the comparison of similar work to literature is shown in Table 8 which shows the promising results achieved with our approach. We haveshown the comparison for only Algorithm 3 as it comprises the similarconditions at training phase. Algorithm 4 considers the forgery signaturesat training phase which shows the contrast change in the minimum EERreported for both the algorithms. By considering all the results, weconclude that the sub-trajectory technique can be implementedeffectively in online signature veriﬁcation.Declaration of competing interestThe authors declare that they have no known competing ﬁnancial interests or personal relationships that could have appeared to in ﬂuence the work reported in this paper.CRediT authorship contribution statementSudhir Rohilla:Conceptualization, Methodology, Software, Datacuration, Writing - original draft, Visualization, Investigation, Software,Validation, Writing - review&editing.Anuj Sharma:Conceptualization, Methodology, Software, Data curation, Writing - original draft, Visuali-zation, Investigation, Software, Validation, Writing - review &editing. R.K. Singla:Supervision.References
[1]Rohilla S, Sharma A, Singla R. Online signature veri ﬁcation at sub-trajectory level, Springer International Publishing, Smart Innovation. Systems and Technologies:Advanced Computing, Networking and Informatics- Volume 2014;2 28:369 –74. [2]Mariano LG, Rafael RL, Enrique CN. Embedded system for biometric onlinesignature veriﬁcation. IEEE Transaction on Industrial Informatics 2014;10(1):491–501.[3]Fang P, Wu ZC, Shen F, Ge YJ, Fang B. Improved dtw algorithm for online signatureveriﬁcation based on writing forces. Proceedings of ICIC 2005:631 –40. [4]Huang K, Yan H. Stability and style variation modeling for online signatureveriﬁcation. Pattern Recogn 2003;36(10):2253 –70. [5]Bovino L, Impedovo S, Pirlo G, Sarcinella L. Multi expert veri ﬁcation of handwritten signatures. Proceeding IEEE 7th International Conference Document Analysis andRecognition; 2003. p. 932–6. [6]Ortega-Garcia J, Fierrez-Aguilar J, Martin-Rello J, Gonzalez-Rodriguez J. Completesignal modeling and score normalization for function based dynamic signatureveriﬁcation. Lecture Notes in Computer Science in Audio and Video BasedBiometric Person Authentication 2003;2688:658 –67. [7]Shaﬁei MM, Rabiee HR. A new online signature veri ﬁcation algorithm using variable length segmentation and hidden markov models. Seventh InternationalConference on Document Analysis and Recognition 2003;1:443 –6. [8]Yoon HS, Lee JY, Yang HS. An online signature veri ﬁcation system using hidden markov model in polar space. Proceedings of the Eighth International Workshop onFrontiers in Handwriting Recognition (IWFHR) 2002:329 –33. [9]Coetzer J, Herbst BM, Preez JA. Of ﬂine signature veriﬁcation using discrete radon transform and a hidden markov model. EURASIP J Appl Signal Process 2004;4:559–71.[10] L. R. Rabiner, B. H. Juang, An introduction to hidden markov models, IEEE ASSpMagazine.[11]Kholmatov A, Yanikoglu B. Identity authentication using improved online signatureveriﬁcation method. Pattern Recogn Lett 2005;26(15):2400 –8. [12]Lv H, Wang W, Wang C, Zhuo Q. Of ﬂine Chinese signature veriﬁcation based on support vector machines. Pattern Recogn Lett 2005;26(15):2390
–9.Table 8Comparison with previous work for SVC 2004 TASK2.
Authors Features used Technique used EER reported[19] Positional, pressure,path tangent angle, pathvelocity magnitude, logcurvature radiusacceleration and theirﬁrst derivativesDTW and HMM 10.91 (for skilledforgery-userindependent)
[20] Time Encoded SignalProcessing andRecognition (Tespar)and Tespar DZ (set ofdifferential descriptors)Wavelet analysisþWLSVM (Weka libSvm)6.96 (for skilledforgery)
[21] Positional, pressure andvelocityvelocity and pressurepartitionþNeuro-fuzzy classiﬁer of theMamdani-type11.58
OurStudyStatic, Kinematics,Structural andStatisticalSymbolic intervalvalued basedveriﬁcation at sub-trajectory levelAlgorithm39.47 (for skilledforgery)Table 6Result ofAlgorithm4: The total Error evaluated by considering P
4i¼1Ci¼15 the various combinations for F 1(static),F 2(kinematics),F 3(structural) andF 4(statistical) with sub-trajectory levels (ST¼1,2,3,4,5,6,7).
Sr Feature Min EER for mean of change inNo Set ST1 ST2 ST3 ST4 ST5 ST6 ST7 change in EER per ST level1F
1 14.0475 9.7133 6.4662 4.5921 3.5042 2.6892 2.0187 2.0048 2F
2 15.3342 6.3304 3.3596 2.0613 1.0787 0.6392 0.5408 2.465566667 3F
3 20.3121 11.425 6.2946 3.0417 1.7558 0.5575 0.1929 3.3532 4F
4 20.7025 12.9229 8.2621 5.2821 3.7746 2.4738 1.9267 3.1293 5F
1F2 7.4592 2.8092 1.2296 0.7671 0.3821 0.2229 0.1654 1.215633333 6F
1F3 8.6792 3.9933 1.9008 1.0408 0.51 0.3004 0.0896 1.4316 7F
1F4 9.2825 4.7513 2.5792 1.6013 0.9879 0.7096 0.5404 1.457016667 8F
2F3 9.7004 3.0058 0.945 0.3967 0.1771 0.0325 0.00081.599 9F
2F4 10.1738 3.4346 1.4871 0.7588 0.3379 0.2313 0.1879 1.664316667 10F
3F4 12.2021 5.2188 2.2096 0.8946 0.3975 0.1 0.02 2.03035 11F
1F2F3 4.9688 1.4092 0.4125 0.2029 0.0675 0.0196 0.0038 0.8275 12F
1F2F4 5.5079 1.6163 0.6321 0.3471 0.145 0.0925 0.0742 0.905616667 13F
1F3F4 6.0154 2.2383 0.8667 0.4271 0.1363 0.0804 0.0146 1.000133333 14F
2F3F4 6.7712 1.7017 0.4504 0.1617 0.0567 0.0087 0.0058 1.127566667 15F
1F2F3F4 3.6979 0.8987 0.2279 0.1008 0.0221 0.0071 0.00083 0.616178333 Average(Mean) 1.6556188893
Table 7The absolute change in the minimum EER for three datasets (DS1, DS2 and DS3)has been mentioned by considering F
2F3as a feature set with change in sub- trajectory levels.
SrNoSub-trajectory change in change in change inLevel change EER, DS1 EER, DS2 EER, DS31 ST2 to ST1 3.05 3.70 4.002 ST3 to ST2 1.74 2.18 1.253 ST4 to ST3 0.59 0.62 0.554 ST5 to ST4 0.91 0.25 1.235 ST6 to ST5 2.29 0.35 2.416 ST7 to ST6 0.13 0.74 0.94Average 1.45 1.31 1.73S. Rohilla et al. Array 6 (2020) 100028
6[13]Fuentes M, Salicetti SG, Dorizzi B. Online signature veri ﬁcation: fusion of a hidden markov model and a neural network via a support vector machine. EighthInternational Workshop on Frontiers in Handwriting Recognition 2002:253 –8. [14]Dimauro G, Impedevo G, Pirlo G. Component oriented algorithms for signatureveriﬁcation. Int J Pattern Recogn Artif Intell 1994;8:771 –94. [15]Draouhard JP, Sabourin R, Godbout M. A neural network approaches to on-linesignature veriﬁcation using directional pdf. Pattern Recogn 1996;29:415 –24. [16]Guru DS, Prakash HN. Online signature veri ﬁcation and recognition: an approach based on symbolic representation. IEEE Trans Pattern Anal Mach Intell 2009;31(6):1059–73.[17]Nelson W, Kishon E. Use of dynamic features for signature veri ﬁcation. Proc IEEE Int Conf Syst Man Cybern 1991;1:201 –5.[18]Rohilla S, Sharma A. Svm based online signature veri ﬁcation technique using reference feature vector. Proc Natl Acad Sci India: Physical Sciences 2017;87(1):125–36.[19]Fierrez-Aguilar J, Krawczyk S, Ortega-Garcia J, Jain AK. Fusion of local andregional approaches for on-line signature veri ﬁcation. Advances in Biometric Person Authentication, Lecture Notes in Computer Science 2005;3781:188 –96. [20]Emerich S, Lupu E, Rusu C. A new set of features for a bimodal system based on on-line signature and speech. Digit Signal Process 2013;23(3):928 –40. [21]Cpalka K, Zalasinski M, Rutkowski L. New method for the online signatureveriﬁcation based on horizontal partitioning. Pattern Recogn 2014;47(8):2652 –61.S. Rohilla et al. Array 6 (2020) 100028
7