ORIGINAL ARTICLE
Multimedia application for educationalpurposes: Development of algorithmicthinking
Eva Milkova´*
Department of Informatics, Faculty of Science, University of Hradec Kra ´love´, Rokitanske´ho 62, Czech RepublicReceived 11 April 2014; revised 6 May 2014; accepted 8 May 2014
Available online 20 May 2014
KEYWORDSComputer scienceeducation;Multimedia applica-tion;Algorithm;Algorithmic thinkingAbstract This paper is based on many years’ experience with multimedia appli-cations supporting the area of computer science education and it could serve asan inspirational material directed to all educators developing students’ algorith-mic thinking. Education of subjects related with computer science is from theperspective of other for centuries taught subjects, still in its infancy. Even now-adays a teaching method aimed at developing algorithmic thinking of students isstill the subject of extensive discussions and teachers are looking for differentways on how to access it to students. Next to the educational approach to thisbase of computer science it is also important to ﬁnd a suitable support for stu-dents’ self-learning. Multimedia applications give teachers an excellent chanceto demonstrate and visualize the subject matter more clearly and comprehensi-bly, as well as also enabling them to prepare study material for students whichoptimizes their study habits. Along with large software products developed bya team of professionals there are also various smaller programs dealing withobjects appropriate to course subject matter created on a script given by theteacher with regard to students’ needs. In the paper such application prepared
*Tel.: +420 493331337.E-mail address:eva.milkova@uhk.czPeer review under responsibility of King Saud University.
Production and hosting by ElsevierApplied Computing and Informatics (2015) 11, 76–88
Saudi Computer Society, King Saud University
Applied Computing and Informatics
(http://computer.org.sa)www.ksu.edu.sawww.sciencedirect.com
2210-8327ª2014 King Saud University. Production and hosting by Elsevier B.V. All rights reserved.http://dx.doi.org/10.1016/j.aci.2014.05.001to intensify self-preparation of students in subjects developing algorithmicthinking is introduced and its beneﬁt discussed. Animations useful to be usedas an introductory complement to lectures are introduced as well. At the endadvantages of the professional virtual learning environment containing suchstudy material are mentioned.
ª2014 King Saud University. Production and hosting by Elsevier B.V. All rights reserved.
1. Introduction
The area of software development has passed a rapid expansion and this trendcontinues so far. Each developer has to learn constantly and master new technol-ogy. Crucial role is played by the basis which developer gains at the beginning ofhis–her career. Thus an essential part of studies at faculties preparing students inthe area of computer science is the development of student’s ability to think algo-rithmically. Students must be able to create various algorithms solving given prob-lems starting with easy ones and consecutively increase their algorithmicknowledge and shifts during studies till the level where they deeply understandmuch more complex algorithms.
Multimedia applications have substantially inﬂuenced education. They giveteachers an excellent chance to demonstrate and visualize the subject matter moreclearly and comprehensibly, as well as also enabling them to prepare study mate-rial for students which optimizes their study habits. Along with large softwareproducts dealing with a wide spectrum of objects developed by a team of profes-sionals there are also various smaller programs dealing with objects appropriate tocourse subject matter created on a script given by the teacher with regard to stu-dents’ needs. The author of the paper has prepared with her students such multi-media applications for many years.
In the paper one application and animations prepared to intensify self-prepara-tion of students studying the subjectAlgorithms and Data Structureare introduced and their beneﬁts are discussed. At the end advantages of the professional virtuallearning environment containing such study material are emphasized as well.
2. Algorithmic thinking development
There have been still long discussions regarding what kind of programming is suit-able for beginners (cf. e.g.Hora´k and Mitrovicˇ, 2012; Gunisˇand Sˇnajder, 2012). Protagonists of object oriented languages argue that students beginning withstructured programming acquire habits that cause big problems for them whenusing object oriented languages.
Our approach that we have been using for many years in the subject Algorithms and Data Structuresis based on an imagination of a brick-box, where only severalbase elements are available from which children are able to create incredibleMultimedia application for educational purposes 77buildings. We do not use any programming language in the subject, students writealgorithms on paper in Czech meta-language. The used Czech meta-language isnothing more than the Pascal programming language basic commands. (Remark:Pascal programming language was created by Nicklaus Wirth especially for edu-cational purposes, seeWirth, 1989.)
The mentioned process of algorithm design is reﬂected in the course structure.Thus, when we lead our students’ ﬁrst steps in the creation of algorithms weexplain to them that it is like building interesting objects out of just a few basicelements. In the subjectAlgorithms and Data Structuresit means that we start our teaching with basic algorithmic structures (basic elements from the brick-box) and typical algorithmic structures (a few parts made out of these elements)written in Czech meta-language and then we let students get into the secrets ofmaking whole algorithms (building whole constructions) written in Czech meta-language as well.
Let us describe our approach more precisely. We proceed in the following steps.
After explanation of the three simple commands (read,writeand assign:=) we describe basic algorithmic structures (i.e., basic elements from the brick-box) –block of commands, incomplete and complete branching, and loop constructionwith the condition in the beginning, i.e.:
blocks of commands incomplete branching complete branching loop construction begin
ifconditionthenstatement ifconditionthenstatement1 whileconditiondostatement statement1; elsestatement2
statement2;...statementN;end
Using these basic structures students are soon able to understand typical algo-rithmic structures (e.g., in the given sequence to determine the number of elementswith the given property, to calculate the sum and the product of some elements, toﬁnd the minimum and the maximum value, to ﬁnd the last/ﬁrst occurrence of thesearched value, to remove value – see the following example, to add new value,etc.). Subsequently we let the students dive into the secrets of making algorithms(i.e., building whole constructions).
Example
Removal ofk-th termof numerical sequence (a 1,a2,...,a n), 16k6n, saved in an arraya.
beginread(k);forifromkton–1doa[i]: =a[i+1];n:=n–1;end.78 E. Milkova´When explaining an algorithmic structure we always illustrate it on an example,e.g. in the following way.
Example
Let us imagine that the following sequence of integers is saved in the array aof length 10. We remove the sixth term, i.e. we remove the value saved in the term a [6]and shorten the array by one element.
We explain and students practise all algorithmic structures, at ﬁrst only thosewhich use single variables. After the thorough practising structures on problemsusing single variables we proceed further and explain the data structure of one-dimensional and two-dimensional array. Using these data structures all previousmatter is repeated together with a careful attention to the work with array indices.
During lessons students apply the acquired knowledge to a variety of tasks.They work in groups of two or three and each group is responsible for solvingone of the given tasks. After some time when students prepare their solutionson a piece of paper, each task is illustrated and presented by two students (orthree, depending on the number of groups, each group responsible for the task-solution deputes one student) on the blackboard and their solutions are comparedand discussed by all students.On the one hand this means that students are led to tryand ﬁnd more solutions to the given task,on the other hand when incorrect solutionsoccur among the presented solutions the teacher has an opportunity to discuss withstudents where the problem is.
Dealing with the given topic we startto solve easier tasks and consecutively pro-ceed to more difﬁcult ones. We carefully discussmutual relations among algorithms. Let us demonstrate it in the following two examples:
Example2.1
Let us suppose that we are working with a ﬁnite numerical sequence ( a 1,a2,..., a
n)o fnterms being already savedin an arrayaof the lengthn,nP1. Let us create algorithms solving the following tasks.
/C15Remove the ﬁrst three termsa 1,a2,a3from the sequence./C15Remove the ﬁfth till ninth terms, i.e.a
5,...,a 9, from the sequence./C15From the sequence remove the termsa
p,...,a q, supposingp<q.
Example2.2
Compare the three algorithms solving the same task ‘‘Find out the gainedamount of a gathering’’ and introduce an appropriate practical situation to eachgiven algorithm.Multimedia application for educational purposes 79(I)
beginread(p);sum:=0;i:=1;whilei6pdobeginread(present);sum:=sum+present;i:=i+1;end;write(‘‘the gained amount= ‘‘,sum); end.
(II)
beginsum:=0;read(present);whilepresentP0d obeginsum:=sum+present;read(present);end;write(‘‘the gained amount= ‘‘,sum); end.
(III)
beginsum:=0;read(continue);whilecontinue<>‘‘NO’’dobeginread(present);sum:=sum+present;read(continue);end;write(‘‘the gained amount= ‘‘,sum); end.
The subjectAlgorithms and Data Structuresis placed into our curricula beforeother subjects which deal with algorithmic and programming skills.
3. Self-study and the feedback
There is an important question. How can students get feedback for their solutionswritten on paper in the Czech meta-language when studying at home? There are alot of tasks that we give our students to solve. They solve not only the whole tasks80 E. Milkova´but we also let them complete prepared algorithms and determine values of vari-ables similarly as you can see in the following two examples.
Example3.1
Task:Complete the algorithm which calculates and writes out the followingvalue of sum: If x6y then it is the sum of integersx,x+1 ,...,y, and if x>ythen it is the sum of integersx,x/C01,...,y.
beginread(x);read(y);sum:= .....;number:=x;ifx ..... y thenwhilenumber.....ydobeginsum:=sum+ ..........;number:=number+1;endelsewhilenumber.....ydobeginsum:=sum+ ..........;number:=number–1;end;write(‘‘The sum of integers from ‘‘,x,’’ to ‘‘,y,’’ is equal to’’, sum, ‘‘.’’ ); end.
Solution
beginread(x);read(y);sum:=0;number:=x;ifx6y thenwhilenumber6ydobeginsum:=sum+number;number:=number+1;endelsewhilenumberPydobeginsum:=sum+number;number:=number–1;end;write(‘‘The sum of integers from ‘‘,x,’’ to ‘‘,y,’’ is equal to’’, sum, ‘‘.’’ ); end.Multimedia application for educational purposes 81Example3.2
TaskThere are integers saved in the two-dimensional arraya(see the table Startingposition). Determine the values in the array a after ﬁnishing the followingalgorithm. Write them to the table Final position.
beginm:= 3;n:= 4;fori:=1tomdoforj:=1tondoread(a[i,j]);fori:=1tomdoforj:=1tondoifa[i,j]>i+jthena[i,j]: =a[i,j]-1elsea[i,j]: =a[i,j]+1;end.
Solution(cf.Fig. 1thereinafter)
The answer to the question given at the beginning of this section is: Studentscan practise their knowledge using multimedia program ALGORITHMSdevel- oped by our student within his thesis (Vobornı´k, 2006).
3.1. Program ALGORITHMS
The programALGORITHMSis created in the Delphi environment and it really isan excellent tool for both beginners and advanced students in the ﬁeld ofalgorithms.82 E. Milkova´The program is user friendly and its functions are arranged to be intuitive andat the same time to remind professional editors and debuggers of well-known pro-gramming languages, which also facilitates their subsequent transition. Becausemany users are beginners the program is free of many unnecessary features whichwould rather complicate its use at this level. (Milkova´, 2011)
Using the program, students can place their solution of the given task, writtenin Czech meta-language, into the program and the program shows them step-by-step how their algorithm works, if it is correct or not.
The program also shows the actual values of used variables in each step of thealgorithm’s process. In this way students can easily check their paper-results fromtasks similar to the above introduced example 3.2, against the results of these tasksdisplayed in the program (seeFig. 1).
Using theALGORITHMSprogram students can go at their own speed througheach algorithm and better understand the explained matter.
The program can be downloaded fromhttp://lide.uhk.cz/prf/ucitel/milkoev1/en_index.htmusing page ALGDATS > Lecture – Students presentations.
Remark: TheALGORITHMSprogram can be localized into differentlanguages. Hence, the program can theoretically be used in the user ´s own mother tongue, including the possibility to deﬁne own keys of used meta-language.(Vobornı´k, 2011)
3.2. Visualization within animations
The aboveALGORITHMSprogram is not the only multimedia study materialused within the subjectAlgorithms and Data Structure. It is essential material for student’s feedback but we also use several smaller digital objects as a supportof lectures and students’ imagination.
Fig. 1Program Algorithms – Solution of the above given Example3.2.Multimedia application for educational purposes 83As an example let us mention animations, created in Macromedia Flash envi-ronment, visualizing on six snowmen three prime sorting techniques: SelectionSort (seeFig. 2), Insertion Sort and Bubble Sort. These small presentations werecreated by a student through their optional project and they can be downloadedfrom the same page as theALGORITHMSprogram - see above mentioned link.
The three prime sorting methods help us when we explain the term algorithm atthe beginning of our lectures and emphasize the fact that the given task can bemostly solved by more than one algorithm. We provoke students to imagine thewhole process (algorithm) of sorting things by size. We properly explain the ideaof each prime algorithm and usually demonstrate it with the help of students. It isknown that the main idea of Insertion Sort is usually described as the way manypeople sort a hand of playing cards. We also remark this illustration; however, weprefer to explain the main idea of each prime sorting algorithm as the way childrenrank in a line. In the lecture there are always several students willing to be rankedto illustrate the sorting processes. Students can later remind this ‘‘show of theappropriate sorting algorithm’’ using the animations sorting six snowmen. Wego back to this topic later (almost at the end of the term) when discussing the for-mulation of each prime algorithm in the used Czech meta-language.
3.3. Textbook Algorithms – basic constructions and their visualization
The whole area explained within the subjectAlgorithms and Data Structuresis introduced in the textbookMilkova´et al. (2010), where more than 150 problemassignments, questions and exercises are presented. The accuracy of a solutioncan be veriﬁed with the help of the programALGORITHMSwhich is enclosed, together with solutions of all the textbook’s given tasks, on the CD attached tothe textbook.
3.4. Virtual learning environment
Education at the University of Hradec Kra´love´is supported in a virtual learningenvironment (the Blackboard learning system supports future engineers andmanagers studying at the Faculty of Informatics and Management, the Moodlelearning platform supports future teachers studying at the Faculty of Science).The virtual learning environment is an opportunity for students to combine theiroccupation with studies. Relevant study material is accessible whenever andwherever.
Fig. 2Macromedia ﬂash animation – Selection Sort of six snowmen.84 E. Milkova´There are many tools each virtual learning environment offers (cf. Huba´lovsky´ and Sˇedivy´, 2011; Kostola´nyova´et al., 2011; Salem, 2011). However, virtual courses have to be clearly organized and should not contain redundant informa-tion. Here let us review in alphabetical order the tools that we use in the ALGDS course created for the subjectAlgorithms and Data Structuresto support it and let us describe their functions in ourALGDScourse. (cf.Milkova´, 2011).
/C15Announcements: This tool serves the teacher as a reminder of important dates(written credit tests, examination etc.) and offers necessary information tostudents./C15Calendar: The tool is used by students to remark information about importantdates./C15Course Content: The tool serves as the main course page. Here, students ﬁnd adetailed plan of lectures, theALGORITHMSprogram, samples of credit andexam tests, and information concerning recommended literature and creditand exam conditions./C15Discussion: Using this tool, students have the opportunity to discuss their ques-tions and problems concerning the appropriate subject with other students. Thetool is displayed in ourALGDScourse mainly as a means of communicationamong students. Thanks to the lectures and lessons, the Discussiontool is only seldom used by teachers./C15Evaluation: The lecturer and assistants insert evaluations of credit tests into thevirtual environment thus every student can ﬁnd evaluations of his/her work./C15Modules: This tool is used to assign all electronic study materials (additionaltext to the textbookMilkova´et al. (2010), problem statements of tasks solvedin lesson, presentations, and animations) that correspond to a lecture to theappropriate module. The number of modules is the same as the number of lec-tures provided during a term. Moreover, students interested in an areaexplained within a subject can ﬁnd here ﬁles and/or links to additional informa-tion outside the immediate framework of the subject.
Thanks to the textbookMilkova´et al. (2010)containing solved problem assign-ments and CD of theALGORITHMSprogram and solutions of all the given tasksin the textbook, theALGDScourse serves as an optional complement to the sub-jectAlgorithms and Data Structures.
Although the course is optional, students attend the course at the start of theterm to download the detailed plan of lectures (lectures closely correspond to thecontent in the textbook; the plan includes links to pages whose content will be dis-cussed in the appropriate week) and information concerning recommended litera-ture as well as credit and exam conditions and samples of credit and exam tests.
Students ﬁnd it very handy to see all animations and presentations used in thelecture that are placed within appropriate module as well as the list of problemstatements of all exercises solved in lessons.Multimedia application for educational purposes 854. Results and discussion
The engagement of students into a subject and their interest in the subject matterbelongs to crucial elements of successful teaching and learning process. Studentspreferentially take in and process information in different ways: by seeing andhearing, reﬂecting and acting, reasoning logically and intuitively, analyzing andvisualizing, steadily and in ﬁts and starts. According Felder and Silverman, 1988; there are four main two-poles-dimensions of learning styles; active/reﬂective,sensing/intuitive, visual/verbal, and sequential/global.
Balanced study material taking into account the above described learningdimensions and effecting systematical learning can inﬂuence engagement, interestand students’ knowledge very much. On one hand it supports the preferred learn-ing dimension pole of a student and on the other hand it enhances his/her abilityto absorb subject matter also with regard to the opposite learning dimension pole.Hence, students’ ability to take in and process information in various ways isincreased and learning difﬁculty decreased.
4.1. Felder-Silverman learning style model
There are many publications devoted to learning styles. Recently we began to beinterested in Felder-Silverman learning style model (cf. El-Hmoudova´, 2013). Let us brieﬂy introduce the main characterization of, in the model given, four Felder and Silverman, 1988; learning style dimensions:
Active and reﬂective learners/C15Active learners tend to retain and understand information best by doing some-thing active with it – discussing or applying it or explaining it to others.
o Reﬂective learners prefer to think about it quietly ﬁrst./C15‘‘Let’s try it out and see how it works’’ is an active learner’s phrase.
o ‘‘Let’s think it through ﬁrst’’ is the reﬂective learner’s response./C15Active learners tend to like group work more than reﬂective learners.
o Reﬂective learners prefer working alone.Sensing and intuitive learners/C15Sensing learners tend to like learning facts,
o Intuitive learners often prefer discovering possibilities and relationships./C15Sensing learners don’t like courses that have no apparent connection to the realworld;
o Intuitive learners don’t like ‘‘plug-and-chug’’ courses that involve a lot ofmemorization and routine calculations.86 E. Milkova´Visual and verbal learners/C15Visual learners remember best what they see - pictures, diagrams, ﬂow charts,time lines, ﬁlms, and demonstrations.
o Verbal learners get more out of words - written and spoken explanations.Sequential and global learners/C15Sequential learners tend to gain understanding in linear steps, with each stepfollowing logically from the previous one.
o Global learners tend to learn in large jumps, absorbing material almost ran-domly without seeing connections, and then suddenly ‘‘getting it.’’/C15Sequential learners tend to follow logical stepwise paths in ﬁnding solutions.
o Global learners may be able to solve complex problems quickly or putthings together in novel ways once they have grasped the big picture, butthey may have difﬁculty explaining how they did it.
The preference for one category or the other may be strong, moderate, or mild.
4.2. Index of learning styles
Based on the above mentioned model of four learning style dimensions the Index ofLearning Styles (ILS shortly) was developed by Barbara A. Soloman and RichardM. Felder. For more information see web-link to (Felder and Soloman, 2013).
ILS is a self-scoring questionnaire for assessing preferences on four dimensionsof the Felder-Silverman model. ILS may be used at no cost for non-commercialpurposes by individuals who wish to determine their own learning style proﬁleand by educators who wish to use it for teaching, advising, or research.
In the academic year 2012/13 as well as this academic year 2013/14, the abovementioned ILS was implemented in theALGDScourse into the virtual learning envi-ronment and students are asked to ﬁll in the ILS at the beginning of the semester.
From 382 responses, with respect to distinguish strong, moderate, or mild pref-erence for one category or the other, we gained the following results.
According our premises, in each above-mentioned academic year there wereabout 98% students belonging to strong visual learners.
More students belong to moderate till strong sensing learners (about 76% ineach year).
Concerning the other two dimensions, active/reﬂective and sequential/ global,most students belong to the mild level of these categories more of them to the ‘‘leftside’’, which means to the mild active and mild sequential dimension.
Hence, with respect to the paper topic, the result that 98% students belong tostrong visual learners conﬁrms usefulness of multimedia applications usage as aneducational support. Everyone learns more when information is presented bothvisually and verbally.Multimedia application for educational purposes 875. Conclusion
In the paper we introduced our approach to the development of algorithmic think-ing of beginners within the subjectAlgorithms and Data Structuresusing multime- dia applications. Multimedia applications serve as a useful educational supportthat is very welcome and appreciated by students.
The paper follows the paperMilkova´(2012)and it is also intended as an inspi-ration for all educators developing students’ algorithmic thinking. Sometimes it isnot easy to ﬁnd an appropriate content and approach to teaching a subject andeach inspiration could be valuable to know and possibly to apply.
References
El-Hmoudova´, D., 2013. The Impact of Learning Style Dimensions on Computer-based Key LanguageCompetences Testing. Procedia - Social and Behavioral Sciences. Elsevier, Amsterdam
.
Felder, R.M., Silverman, L.K., 1988. Learning and teaching styles in engineering education. Eng. Educ. 78 (7),674–681
.
Felder, R.M., Soloman, B.A., 2013. Index of Learning Styles, retrieved September 23, 2013, from < http:// www.ncsu.edu/felder-public/ILSpage.html >.
Gunisˇ, J., Sˇnajder, L., 2012. The model of algorithmic thinking – dimensions and levels. In: Information andCommunication Technology in Education (ICTE 2012), Ostrava: University of Ostrava, Roz ˇnov pod Radhosˇteˇm, Czech Republic, September 11–13, 2012, 69–78.
Hora´k, O., Mitrovicˇ, L., 2012. Description of the Basic Algorithm Blocks and Structures Representation inCourses of Algorithm Development, In: Wseas Transactions on Advances in Engineering Education, vol. 9(2),pp. 43–51.
Huba´lovsky´,Sˇ., Sˇedivy´, J., 2011. Education of student’s project team cooperation using virtual communicationsupported by LMS system, In: 14th International Conference on Interactive Collaborative Learning(ICL2011) – 11th International Conference Virtual University (vu’11), Slovenska ´technicka´univerzita, Bratislava, Slovakia, pp. 456–459.
Kostola´nyova´, K., Sˇarmanova´, J., Taka´cs, O., 2011. Structure of Study Supports for Adaptable Instruction. NewEduc. Rev. 25 (3), 235–247
.
Milkova´, E., 2012. Multimedia application supporting self preparation to develop algorithmic thinking. In:Recent Advances in Computer Engineering Series, Proc. of 3rd International Conference on AppliedInformatics and Computing Theory (AICT’12), WSEAS Press, Barcelona, Spain, October 17–19, pp. 155–159.
Milkova´, E., 2011. Graph theory and algorithms: various approaches to utilization of virtual learningenvironment. In: 14th International Conference on Interactive Collaborative Learning (ICL2011) – 11thInternational Conference Virtual University (vu’11). Slovenska ´technicka´univerzita, Bratislava, Slovakia, pp. 637–642
.
Milkova´, E. et al, 2010. Algoritmy – za´kladnı´konstrukce v prˇı´kladech a jejich vizualizace (in English: Algorithms – basic constructions and their visualization). Gaudeamus, Hradec Kra ´love´
.
Salem A.M., 2011. Intellectual E-Learning Systems, In: Proc. Of the Annual International Conference on‘‘Virtual and Augmented Reality in Education’’ (VARE 2011), Valmiera, Latvia, 16–23.
Vobornı´k, P., 2006. Programovacı´jazyk pro podporu vy´uky algoritmu˚, Hradec Kra´love´: thesis.
Vobornı´k, P., 2011. Teaching algorithms using multimedia tools. In: Proc. of the conference Efﬁciency andResponsibility in Education 2011. Praha: FEM CULS, pp. 312–321.
Wirth, N., 1989. Algoritmy a datove´sˇtruktu´ry u´dajov. Alfa, Bratislava .88 E. Milkova´