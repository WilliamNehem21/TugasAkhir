 AASRI Procedia   4  ( 2013 )  196 – 201 
2212-6716 © 2013 The Authors. Published by Elsevier B.V.
Selection and/or peer review under responsibility of American Applied Science Research Institute
doi: 10.1016/j.aasri.2013.10.030 ScienceDirect
2013 AASRI Conference on Intelligent Systems and Control 
Chronological Sequence of Developing A Condition-Ction Rule 
in the Heassy Unit  
Kenedy Greysona*, Mathew Mburumaa, Nsatusile Nzowaa, Frank Mbanoa, Georgia 
Rugumiraa, Jumanne Allya, Athman Mfinangaa, Promota Haulea, Romwald 
Lihakangaa, Eunice Abayoa 
aIntelligent Systems Research Unit, Department of Electronics and Telecommunications Engineering, Dar es Salaam Institute of 
Technology, P. O. Box 2958, Dar es Salaam, Tanzania 
 
Abstract 
Most agents in a system are designed to operate based on the condition-action rule. The agent system act according to the 
information acquired by the sensors located in the domain.   The aim of this research report is to explain technique used in 
implementation of a condition-action rules in an agent component of an expert healthcare support system ( heassy ) unit. 
Steps and techniques of knowledge search and implementation in the heassy unit is presented.   
 
© 2013. Published by Elsevier B.V. 
Selection and/or peer review under responsibility of American Applied S cience Research Institute 
 
Keywords : agent, condition-action rule, healthcare, heassy, formulation, knowledge. 
1. Introduction 
Expert healthcare system unit is a system designed to support health services provision. In conjunction 
with computer system, the application software uses acquired data from physiological change sensors to 
 
 
* Corresponding author. Tel.: +255 686-222-123; fax: +255-222-152-504. 
E-mail address:  kenedyaliila@yahoo.com. 
Available online at www.sciencedirect.com
© 2013 The Authors. Published by Elsevier B.V.
Selection and/or peer review under responsibility of American Applied Science Research InstituteOpen access under CC BY -NC-ND  license.
Open access under CC BY -NC-ND  license.197  Kenedy Greyson et al.  /  AASRI Procedia   4  ( 2013 )  196 – 201 
control the domain environment and relay the information to the medical officer in charge. It can also receive a request from the authorized person to know the condition of the domain (patient). 2. Knowledge tank: condition-action rule Most knowledge based expert machines are design ed in condition-action (C-A) rule. Sets of rules are created for specific task environments. A main task of an expert healthcare system unit is to ensure that the patient physiological changes are monitored closely as it would be if he or she was admitted in the hospital. The condition of the patient determines the action to be taken. Therefore, the system is an (if…then) driven action.  Moreover, many developed programs are condition-acti on rule based. For instance, almost all games are governed by sets of rules.  If you are serving or receiving first at the start of any game, you shall serve or receive in the right service court when your side or your opponent's side scored an even number of points. Now rules can be set from this argument. The violati on of the rule has a consequence and action against the person is taken. However, it must be noted that, the explo it of rules is possible only if the system is observable. In the case of badminton, referee and his or her assistants , monitors the game to ensure that, rules are obeyed.  Back to our system of expert healthcare system unit, the rules used to govern the system are designed based on the objective. The expert system condition is defined by the input parameter status. The domain must be observable all time so as to state the condition of th e system. Figure 1 depicts the scheme of developing condition-action rule of the expert system. During the process of condition-action rule, the problem is to achieve the optimal decision (Vlassis, 2007). It is not the matter of action but the best action for each domain state. The domain is observed by perceiving its environment through sensors.  The availability of measurements determines the state of the domain (condition) which in turns activates the respective response (action). Therefore, the observability of the system is assumed all time. Observability is a vital issue and must be addressed properly. 
 
 
Fig. 1. The scheme of developing condition-action rule of the system 
3. Observability The collected data contained in the domain at a time  provides the knowledge of the domain state 
ts, at that time. The set of all states of the domain will be denoted by 
S. In our context, the discrete states, with finite number of state are assumed. Depending on the nature of the problem, the continuous states, with infinite number of states may exist in other types of systems. The domain is fully observable if all sensors at a time State all possible domain conditions (develop discrete set of domain state) : Sets of states
State all possible remedial means (optimal control or solutions) 
: Sets of actions : Rules and factsDomain observability198   Kenedy Greyson et al.  /  AASRI Procedia   4  ( 2013 )  196 – 201 
completely provide data of the domain. If the observed domain at a time is denoted by t, then for a fully observed domain 
tts. If only partial data about the domain is presented, the domain is said to be partially observable. In this case the observed state 
t is not necessarily equal the domain state ts. It can be said that, the domain state is a probability given the observation.  
1)|(ttsp  for fully observed domain (1) This implies that the probability of the domain state is confident. In other words, the probability of state given observation is unity. 
1)|(0ttsp for partially observed domain (2) The probability of attaining the state of a partially observed is more intricate than is for fully observed domain. 4. Conditions In this section, the first part of antecedent or doma in status is discussed. Sets of domain status form conditions of the domain.  The action can be for a single condition or for a combination of conditions. If two or more conditions of the domain are needed for an action, the two conditions are said to be dependent conditions, otherwise the condition is a dependent condition. In this section a two-fold state is discussed. 4.1 Independent conditions Consider a smart home health system, with five differen t physiological transducers (equipment) that gives bioelectric signals for diagnosis purposes: electrocardiogram (ECG), electromyogram (EMG), Blood Volume Pulse (BVP), thermometer, and phonocardiograph (PCG). These outputs are incorporated in pathology to provide the patients’ state. The state can be displayed, stored, transmitted, or alarming the medical person in- charge.  Each physiological transducer determines its own test. For example, ECG checks the electrical waves of the activities of the contractions of heart. The abnomal condition observed i ECG does not depend or affect the EMG reponse. This is considered as an independent condition. If  
1)(1d then the response, discussed later in this chapter, 
1r is taken as the solution. This combination assumes other measurements to be negative, summarized as 
1d,2d,3d,4d, 05d . Table 1 shows the independent conditions or states provided by three inputs in a patients’ domain. The dot (
) operator represents all conjunctions (and) in prep ositional logics. If we include disjunction (or) operator, (
) and form a combination such as (1d2d)3d; then, the action for (1d2d) or action for 
3d may be applicable. Since from the axiom )(2d 02d  stated earlier shows that (1d2d)0, then (
1d2d)3d is equivalent to 33 0dd . Let us take another example of expression 1d (2d3d). Since (
2d3d)33 0dd , then, the expression can be simplified as 31dd33 0dd . In these examples, the following distributive law axiom is applicable in propositional logics.  Axiom 1
:  (Distributive law)  (
1d 2d)3d= 1d(2d3d)  (3) The human body is a system combining different or gans. Malfunction of one organ may affect another organ and even the whole system. In this case, condition 1 may affect condition 2 or vice versa. These states are dependent conditions.  199  Kenedy Greyson et al.  /  AASRI Procedia   4  ( 2013 )  196 – 201 
4.2 Dependent conditions In pathology and human anatomy, there is a possibility of a disease to have two or more symptoms at a time. This invites a combination of these symptoms a nd action is for the combination. A dependent condition is the state of a domain with more than one positive (+) record. In a system with 
k different physiological transducers, there are 
k dependent conditions, one (1) normal condition. For a clarification, consider a simple smart home health system with three (3) physiological transducers, there are three (3) dependent conditions, one (1) normal condition, and the rest are dependent conditions. Table 3.2 shows the dependent conditions or states in a patients’ domain when three (3) physiological transducers are used. 5. Actions The second part that responds to the condition or state of the domain (antecedent) is a consequent. At time 
t the state of a domain Sst  has a corresponding action Aa. There are various methods used in choosing the optimum action. A condition, be an independent or dependent has an action. As it was mentioned before, some conclusions depend on facts and principles behind the given condition. These facts come after deduction of arguments. The deductive arguments act as a soluti on indicator. For example, if the physiological transducer state is high (40
o C for instance), it can be concluded that the patient has fever. Note that, high temperature can be a symptom of other diseases. This is  the reason for consulting medical experts in a higher level of health services.  
Table 1. Independent conditions or states for three (3) inputs Inputs Unified Consequent representation Simplified representation 
1d 2d 3d 
0 0 1 1d32dd 3d 
0 1 0 1d2d3d 2d 1 0 0 
1d2d3d 1d 
 
Table 2. Dependent conditions or states for three (3) inputs State Inputs Unified Consequent representation Simplified representation, 
0)(kd 
1d2d 3d 
1 0 1 1 1d32dd 32dd 
2 1 0 1 1d32dd 31dd 3 1 1 0 
21dd3d 21dd 4 1 1 1 
21dd3d 321ddd 
 Although the smart home health systems communicate with high level health services to consult medical experts, a knowledge database could assist in a well framed system. The system with database, regardless of its location, (within a network reach) can respond to the smart home health system. The communication language between the systems must be clearly stated.  The logical function of implication (if … the) is denoted by the symbol “
”. For example, if domain state 
ts then action na is issued. This is expressed as ntas. Two or more actions can respond to a domain state. 200   Kenedy Greyson et al.  /  AASRI Procedia   4  ( 2013 )  196 – 201 
This is expressed as. )(21nt aaas This can express the situation of high temperature as a symptom of more than one disease. The expression 
)...,(21nt aaas  means that, if the domain state is ts then all actions 
21,aaand naare required. )...,(21nt aaas .  In smart home health system, the deduced conclusion dr awn represents the translation of the domain status of the patient and alerts the in-charge of the patient (nurse or family member). The following are examples gives the combined scenario of conclusion based on the domain status observed: 
 If the body temperature is above 38°C (depending on the location of the measurement) conclusion is generally considered to be febrile. 
 Fever can also be a symptom of malaria, hyperlipidaemia (e levated concentrations of the lipids in the plasma)
, and many other. Decision of the problem is yet probabilistic.  
 From the list of possible conclusions, the conclusion with higher probability will be considered the better choice.  
 Appropriate action corresponding to the conclusion is taken, such as, initial care to the patient, calling the doctor; give the medicine, and others. Therefore, in smart home health system, physiological sensors gather data of the patients and obtain the state of the patient. To conclude if the patient has fever will depend on the state of the domain to have high temperature. Similarly, the low pressure is concluded if the pressure reading is low. The conclusion is a probabilistic. The events of high temperature, low-pressure, high, and others may occur together independently or dependently. The probability of patient to have fever given the temperature is high is reasonably high than when the temperature is low. The knowledge in nature of relationship of domain state (sensory observations) and the action of the smart home health system is required.   
Fig. 2. Input response relationship 
6. Conclusion The concept of formation of rules and facts required in development of an expert system has been articulated. The art of the knowledge searching, manipul ation, and action can be discussed in details in the following chapters. In conclusion, the smart home health system is expected to be rational. Two actions that conflict would be make it dull system.  References [1] MNH. Muhimbili National Hospital. http://mnh.co.tz.  Accessed: October 12, 2012.  [2] Negnevitsky M. Artificial Intelligence: A Guide to Intelligent Systems. Second Edition, Addison Wesley; 2005. [3] Hsiao WC, Li KT. What is a Health System? Why Sh ould We Care? Harvard School of Public Health; 2003. [4] System. Dictionary.com. Collins English Dictionary - Complete and Unabridged. 10
th  Edition. Harper Collins Publishers. http://dictionary.reference.com/browse/system. Accessed: January 30, 2013. Sensory observatio
n State of the domainConclusio n Action201  Kenedy Greyson et al.  /  AASRI Procedia   4  ( 2013 )  196 – 201 
[5] NHP, URT. National Health Policy. United Re public of Tanzania. Ministry of Health; 2003.  [6] Weiss L, Silver JK, Weiss J. Easy EMG. Butterworth-Heinemann; 2004. [7] Khan MG. Rapid ECG Interpretation. Third Edition, Humana Press; 2008.  [8] Combatalade DC. Basics of Heart Rate Variability  Applied to Psychophysiology, Thought Technology Ltd. http://www.emfandhealth.com/HRVThoughtTechnology.pdf. Accessed: January 31, 2013. [9] Khandpur RS. Biomedical Instrumentation Technology and Applications, McGraw-Hill; 2005. [10] Nikos Vlassis (2007). A Concise Introduction to Multiagent Systems and Distributed Artificial Intelligence. Morgan & Claypool Publishers series; 2007.  [12] Bellifemine F, Caire G, Greenwood D. Deve loping Multi-Agent Systems with JADE. John Wiley & Sons Ltd.; 2007. [13] JADE. JADE Agent Development Framework. http://jade.tilab.com. Accessed: December 21, 2012. [14] Hindriks KV. Programming Rational Agents in GOAL. EEMCS, Delft University of Technology, Mekelweg 4, Delft; 2011.  [15] 2APL(a). 2APL A Practical Agent Programming Language: User Guide. http://tenet.dl.sourceforge.net/project/apapl/UserGuide/manual.pdf. Accessed: May 11, 2011. [16] 2APL(b). Download Latest 2apl (Beta). http://apapl.sourceforge.net/. Accessed: February 13, 2012.  [17] Negnevitsky M. Artificial Intelligence: A Guide to Intelligent Systems. Second Edition, Pearson Education Limited; 2005.  