ORIGINAL ARTICLE
Discovery of temporal association rules withhierarchical granular framework
Tzung-Pei Honga,b,*, Guo-Cheng Lanc, Ja-Hwung Sud, Pei-Shan Wub, Shyue-Liang Wang
e
aDepartment of Computer Science and Information Engineering, National University of Kaohsiung, 811, Taiwan, ROC
bDepartment of Computer Science and Engineering, National Sun Yat-Sen University, 804, Taiwan, ROC
cDepartment of Computer Science and Information Engineering, National Cheng Kung University, 701, Taiwan, ROC
dDepartment of Information Management, Cheng Shiu University, 833, Taiwan, ROC
eDepartment of Information Management, National University of Kaohsiung, 811, Taiwan, ROCReceived 4 November 2014; revised 24 November 2015; accepted 28 January 2016Available online 2 February 2016
KEYWORDSData mining;Association-rule mining;Temporal association rules;Item lifespan;Time granulesAbstractMost of the existing studies in temporal data mining consider only lifespan of items toﬁnd general temporal association rules. However, an infrequent item for the entire time may be fre-quent within part of the time. We thus organize time into granules and consider temporal data min-ing for different levels of granules. Besides, an item may not be ready at the beginning of a store. Inthis paper, we use the ﬁrst transaction including an item as the start point for the item. Before thestart point, the item may not be brought. A three-phase mining framework with consideration ofthe item lifespan deﬁnition is designed. At last, experiments were made to demonstrate the perfor-mance of the proposed framework.
/C2112016 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University. This isan open access article under the CC BY-NC-ND license ( http://creativecommons.org/licenses/by-nc-nd/4.0/ ).
1. IntroductionData mining can help derive useful knowledge from databases.Among its technology, association-rule mining [1,3,28]considers frequency relationship among items and is commonly appliedto many applications. A transaction usually includes the itemsbought and the time of its occurrence. Besides, the periods foritems to be exhibited are also important. Some researchesabout temporal data mining were thus presented [27]. For example, the time period for an item may be the entire timeinterval of a database[5], the duration from the ﬁrst occurringtime of the item to the end of a database[20], or the on-shelf time periods of the item[8]. However, an infrequent item forthe entire time interval may be frequent within part of the time.
*Corresponding author at: Department of Computer Science andInformation Engineering, National University of Kaohsiung, 811,Taiwan, ROC.E-mail addresses:tphong@nuk.edu.tw(T.-P. Hong),rrfoheiay@g- mail.com(G.-C. Lan),bb0820@ms22.hinet.net(J.-H. Su),gran- i1987@gmail.com(P.-S. Wu),slwang@nuk.edu.tw(S.-L. Wang). Peer review under responsibility of King Saud University.
Production and hosting by ElsevierApplied Computing and Informatics (2016) 12, 134–141
Saudi Computer Society, King Saud University
Applied Computing and Informatics
(http://computer.org.sa)www.ksu.edu.sawww.sciencedirect.com
http://dx.doi.org/10.1016/j.aci.2016.01.0032210-8327/C2112016 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University.This is an open access article under the CC BY-NC-ND license ( http://creativecommons.org/licenses/by-nc-nd/4.0/ ).In this paper, we thus organize time into granules and con-sider temporal data mining for different levels of granules. Weuse the ﬁrst transaction including an item as the start point forthe item. We propose a three-phase mining framework withconsideration of the above item lifespan deﬁnition to minetemporal association rules with time granules from a temporaldatabase. According to the deﬁnition of item lifespan, in theﬁrst phase, each elementary time interval is processed. Thetemporal frequent itemsets within the above intervals are ﬁrstfound, and then the itemsets are identiﬁed as candidate tempo-ral frequent ones in all the time granules of the upper level ofthe hierarchy. These candidates are then judged for being tem-poral or not at each level of granules. Additional databasescans may be needed to ﬁnd the actual supports of the candi-dates. In the third phase, the possible candidate associationrules are derived from the temporal frequent itemsets at eachlevel. Their conﬁdence values are then calculated and com-pared with the minimum conﬁdence value to get the ﬁnal tem-poral association rules.The organization of the paper is stated below. Relatedworks are given in Section2. The problem to be solved isdescribed in Section3. The proposed algorithm with consider-ation of the ﬁrst transaction appearance period is presented inSection4. The performance of the proposed approach isshown in Section5. Conclusions and future works are ﬁnallygiven in Section6.2. Review of related worksTemporal data mining is popular in recent years. It analyzestemporal data to get patterns or regularities. There are manytechniques included in temporal data mining. Sequential asso-ciation mining[2], cyclic association mining[22], stock trading rule mining[11], patent mining[12], clinical mining[25], image time series mining[15], software adoption and penetrationmining[23], temporal utility mining[9,29], fuzzy temporalmining[6,16,17], and calendar association mining[21]all belong to it. There are also a variety of applications for tempo-ral data mining. For example, Patnaik et al. used temporaldata mining to efﬁciently manage the cooling system in datacenters[24], and Rashid et al. adopted it for ﬁnding the corre-lation among sensor data[26].Chang et al. considered the temporal mining problem ofproducts exhibited in a store[5]. They proposed the conceptof common exhibition to ﬁnd patterns. In a common exhibi-tion period, all the items in an itemset need to be on the shelfat the same time. Lee et al. then used it to discover general tem-poral association rules for publication databases [20]. Ale and Rossi then considered the transaction periods of products [4], instead of their exhibition periods, for ﬁnding temporal associ-ation rules. Besides, different products may have different on-shelf properties. For example, a popular product may be soldout quickly, and then be supplied and on shelf soon. It is thusintermittently on-shelf and off-shelf in the entire time [18]. As to hierarchical temporal mining, Li et al. proposed anapproach to discover calendar-based temporal associationrules[21]. That approach could mine rules according to differ-ent calendar constraints including years, months and days.Chen et al. proposed a hierarchical strategy for video eventdetection from video databases[7]. They divided the frequentactions into two types, namely pre-actions and post-actionsby pre- and post-temporal windows. Fang and Wu usedgranules of features to speed up the mining process of associ-ation rules[10].In this paper, we consider the phenomenon that an itemsetmay not be frequent in the entire time interval, but may be fre-quent in a partial time interval. We thus organize the time intodifferent levels of granules and ﬁnd the temporal associationrules at each level. This paper is extended from our previouswork
[19]with different consideration of effective time inter-vals. Here we use the ﬁrst occurring transaction of an itemas the start point for the item. Before the start point, the itemmay not be brought since it is not ready. This deﬁnition is ofthe beneﬁt that it is not necessary to require the exact on-shelf time of each item in advance.3. Problem statement and deﬁnitionsTo describe the problem of hierarchical temporal associationrule mining clearly, assume a temporal database (abbreviatedasTDB)i nTable 1is given. Four items are included in thetransactions, denotedAtoD.In addition, there is a pre-deﬁned hierarchy with time gran-ules in three levels, in which there are four basic time periods,denoted asp
1top 4, and the time granules are in three levels inthe hierarchy, as shown inFig. 1. Based onFig. 1andTable 1, {C}?{D} is one of hierarchical temporal association rulesoccurring in the time granulep
12. The goal of this paper wasto mine such temporal association rules, and the detailed def-initions and examples will be described as follows.The terms related to the hierarchical temporal mining underthe ﬁrst occurring transaction periods of items are explained below.Deﬁnition 1.P={p
1,p2,...,p j,...,p n} is a set of mutuallydisjoint time periods, wherep
jdenotes thej-th time period inthe whole set of periods,P.Deﬁnition 2.LetI={i
1,i2,...,i m} be a set of items appearingin a database. IfX#I, thenXis called an itemset.Deﬁnition 3.LetXbe an itemset andtbe a time stamp. AtransactionTis a pair (X,t).
Table 1An example of a temporal database.
Period TID Itemsp
1 Trans 1 DTrans
2 C,DTrans
3 CTrans
4 D p
2 Trans 5 A,C,DTrans
6 A,B,C,DTrans
7 B,C,DTrans
8 A,D p
3 Trans 9 BTrans
10 A,CTrans
11 A,B,CTrans
12 B,C p
4 Trans 13 B,DTrans
14 B,C,DTrans
15 BTrans
16 B,C,DDiscovery of temporal association rules 135Deﬁnition 4.A temporal transaction databaseTDB= {Trans
1,Trans 2,...,Trans y,...,Trans z}, whereTrans yis the y-th transaction inTDB.Deﬁnition 5.The maximal time period of an itemi,MTP(i), is from the time period of the ﬁrst occurring transaction of theitem to the last time period of the temporal database.Deﬁnition 6.The maximal time period of an itemsetX,MTP (X), represents the common time period of the maximal timeperiods of all items inXin a temporal databaseTDB. Deﬁnition 7.A hierarchy of time granules,HTG, is composed of a set of basic time periods. In addition, a time granule pg
l.g
represents theg-th time granule in thel-th level of the hierar-chy, and it consists of the basic time periods contained by thetime granulepg
l.g.Deﬁnition 8.The countc(i,p) of itemiin a basic time periodp is the number of transactions withiinp.Deﬁnition 9.The relative supportrsup(i,pg) of itemiin a hier- archical time granulepgis the number of transactions withiin its maximal time period ofpgover the number of all transac-tions within its maximal time period ofpg.Deﬁnition 10.The relative supportrsup(X,pg) of itemsetXin a hierarchical time granulepgis the number of transactionsincluding the itemsetXin its maximal time period ofpgover the number of all transactions in its maximal time period of pg. Deﬁnition 11.Letmin_rsupbe a given minimum relative sup-port threshold. Ifrsup
pg(X)=min_rsup,Xis called a hierarchi-cal temporal frequent itemset (abbreviated as HTFI). Deﬁnition 12.AssumeXis a hierarchical temporal frequentq- itemset with items (x
1,x2,...,x q),qP2. The relative conﬁ-dencerconf(R,pg) of a hierarchical temporal association rulewithin a time granulespg, which is denoted as {x
1^...^x k-
/C01^xk+1^...^x q}?{x k}, is shown below:rconfðx
1^...^x k/C01^xkþ1^...^x q/C8/C9 ;fx
kg;pgÞ¼
rsupðXÞrsupðfx
1;x2;...;x k/C01 ;xkþ1 ;...;x qgÞDeﬁnition 13.Letmin_rconfbe a given minimum relative con-ﬁdence threshold. For a ruleR,i frconf(R,pg)=min_rconf,R is called a hierarchical temporal association rule (abbreviatedasHTAR).Table 1is a simple example showing that, the ﬁfth transac-tion {A,C,D} contains three items,A,C, andD, and the time stamp of the transaction isp2.I nTable 1, the ﬁrst time periodis represented asp
1, andPincludes four time periods,p 1,p2,p3, andp
4. In this example, the itemset {AB} containing two itemsis called a 2-itemset. Since the ﬁrst transaction including the 1-itemset {B} is the sixth transaction inTDB, and the ﬁrst timeperiod of the transaction and the last time period of the data-base arep
2andp 4, respectively, the maximal time periodMTP ({B}) of the itemBisp
2top4. Also, the maximal time period of{BCD},MTP({BCD}), is fromp
2top 4based on the maximaltime periods of the three items,B,CandD. By considering Fig. 1, the hierarchy is composed of four basic time periodsin the temporal database,p
1,p2,p3, andp 4, and the secondtime granulepg
2.2in the second level of the hierarchy is com-posed ofp
3andp 4. Since itemBappears inTrans 6andTrans 7, within the ﬁrst basic time periodp
2, the count valuec({B},p 2) of the item inp
2is the value of 2. Accordingly, thersup({B}, pg
2.1) = 2/4 = 50%. In this example, the maximal time periodof the itemBis set aspg
2.1and onlyp 2contains the itemB. That is, the number of transactions containing Band all the transactions inp
2are 2 and 4, respectively. Also, thersup ({AB},pg
2.1) = 1/4 = 25% since the maximal time period ofthe itemset {AB}i npg
2.1only includesp 2, and the number oftransactions including {AB} and all the transactions inp
2are 1 and 4, respectively. Further, thersup({CD},pg
2.1) = 50%. If themin_rsup= 30%, then the itemset {CD} is a hierarchicaltemporal frequent itemset within the time granule pg
2.1. Since thersup({C},pg
2.1) = 62.5%, therconf({C}?{D},pg 2.1)= 50%/62.5% = 80%. It is then compared with min_rconf. Based on the above deﬁnitions, the problem to be solved isto ﬁnd the hierarchical temporal association rules with theiractual relative support and conﬁdence values within the max-imal time period of the itemset of a time granule being largerthan or equal to a predeﬁned minimum relative supportthresholdmin_rsupand a predeﬁned minimum relative conﬁ-dence thresholdmin_rconf, respectively.4. The proposed algorithmThe proposed approach considers the ﬁrst occurring transac-tion period information of products and is processed in threephases. It also adopts a predicting strategy which can reducethe number of data scan by the upper-bound support. Basi-cally, the proposed method is a level-wise algorithm whichmines the frequent itemsets level by level and period by period.The main contribution of the proposed method is to reduce thenumber of data scanning, which can be approved by the exper-imental results later. The mining procedures of the proposedalgorithm are stated as follows.TheTPPFalgorithm (three-phase algorithm with predict-ing strategy considering the ﬁrst occurring transactions ofitems) is as follows:INPUT: A temporal databaseTDBwithntransactions, each of which consists of transaction identiﬁcation, transac-tion occurring time and items purchased,mitems inTDB,a hierarchy with time granulesHTG, the minimum relativesupport thresholdmin_rsup, and the minimum relative con-ﬁdence thresholdmin_rconf.p1 p2 p3 p4Level 1
Level 2
Level 3p12 p34p1234
Figure 1An example of time granules.136 T.-P. Hong et al.OUTPUT: A ﬁnal set of all hierarchical temporal associa-tion rules,HTAR.Phase 1: Find temporal frequent itemsets.STEP 1: Initialize thePTT(Periodical Total Transaction)table as a zero table, in which the row number isthe time period number of the bottom level inthe hierarchy of time granules, and each entry inthe table is set as 0.STEP 2: Find the periodical total transaction number ptt
j
within each time periodp jof the bottom level inHTGas the number of transactions inp
j, andput it in thePTTtable.STEP 3: Initialize the ﬁrst appearance period FAPtable asan empty table, in which each tuple consists of twoﬁelds: an item and the time periodpof the ﬁrsttransaction including it inTDB.STEP 4: Find the time periodpof the ﬁrst transactionincluding the itemIinTDB, and then put theitem and its ﬁrst time periodpinFAP. STEP 5: Find the temporal frequent itemsets within eachtime periodpby theFinding-Individual-TFIproce-dure. Let the set of returned temporal frequentitemsets for thej-th time periodp
jof the bottomlevel ofHTGbe denoted asTFI
j.Phase 2: Find all hierarchical temporal frequent itemsets.STEP 6: Initially set the set of hierarchical temporal fre-quent itemsets (HTFI) as empty.STEP 7: For each time period granulepgin each of all theother levels inHTGother than the bottom one, dothe following substeps.(a) Get the union of allTFI
j’s inpg, and denotethem as possible itemsets,PI
pg.(b) For each itemsetXin the set ofPI
pg, ﬁnd themaximum common periodMCP
Xof all theitems inXwithin the time granulepgby usingtheFAPtable and then calculate the relativesupport upper-boundrsub
pg,XofXwithin thetime granulepgas:
rsub pg;X¼X
pj2MCP x^pj#pgcactualj;XþX
pj2MCP x^pj#pgcubj;X0@1AX
pj2MCP x^pj#pg,ptt
j;
wherecactualj;Xis the actual count ofXwithin thej- th time periodp
jof the time granulepgby thesets of allTFI
jof the time granulepg, andcubj;X
is the upper-bound (¼k/C3pttj/C01) ofXwithinp
jofpgby thePTTtable.(c) For each itemsetXin set ofPI
pg, calculate therelative support lower-boundrslb
pg,X ofXwithin the time granulepgas:rslb
pg;X¼X
pj2MCP x^pj#pgcactualj;XX
pj2MCP x^pj#pg,ptt
j:(d) Store eachXin the set ofPIpgwhoserslb pg,X
exceeds the minimum relative support thresh-oldmin_rsupinto the set of hierarchicaltemporal frequent itemsets (HTFI) and setPI
pg=PI pg/C0X.(e) For each itemsetXremaining in the current setofPI
pg, scan the transactions to calculate therelative support valuersup
pg,Xwithin the timegranulepgas:rsup
pg;X¼X
pj2MCP x^pj#pgCj;XX
pj#pg,ptt
j;(f) Store eachXin the set ofPI
pgwhose relativesupport exceeds the minimum relative supportthresholdmin_rsupinto the set of hierarchicaltemporal frequent itemsets (HTFI); otherwise,setPI
pg=PI pg/C0X.Phase 3: Find all hierarchical temporal association rules.STEP 8: Initially set the set of hierarchical temporal fre-quent sub-itemsets (HTFS) as empty.STEP 9: For each itemsetXin theHTFIset, do the follow-ing substeps:(a) Generate all possible sub-itemsets of the item-setX.(b) For each sub-itemsets, check whether the sub-itemsetswith the same common period existsin theHTFIset. If it does, put the sub-itemsetsin theHTFSset and use the relative supportvalue ofsin theHTFIset as the relative sup-port value ofsin theHTFSset; otherwise,scan the transactions of the required time peri-ods to ﬁnd the relative support value ofs, andthen putswith its relative support value in theHTFSset.STEP 10: For each itemsetXwith items (x
1,x2,...,x r)i n theHTFIset, generate all possible hierarchicaltemporal association rules and calculate the rela-tive conﬁdence valuerconf
pg,Rof each possibleruleR.STEP 11: Output the ﬁnal set of hierarchical temporal asso-ciation rules (HTAR) exceeding the minimum rel-ative conﬁdencemin_rconf.After STEP 11, all the rules in the set ofHTARhave been found from the temporal database. TheFinding-Individual-TFIprocedure used in STEP 5 is described below. Here, the tradi-tionalApriorialgorithm is adopted to derive frequent itemsetsfrom the transactions within a time period.The Finding-Individual-TFI procedure is as follows:Input: A set of transactionsTDB
jwithin a time periodp j. Output: The temporal frequent itemsetsTFI
jinp j. PSTEP 1: Setr= 1 andC
jrto include all the items in thetime periodp
j.PSTEP 2: For each temporal candidater-itemset in the setofC
jrwithinTDB j, scanTDB jto store theDiscovery of temporal association rules 137itemset whose count exceeds the threshold ofk/C3ptt
jintoTFI jr.PSTEP 3: Generate the temporal candidate set C
j(r+1) from TFI
jrin the current time periodp j. Ther-sub-itemsets of each candidate inC
j(r+1) must existinTFI
jr.PSTEP 4: IfC
j(r+1) is not null, setr=r+ 1 and repeatPSTEPs 2 to 3; otherwise, setTFI
j¼Sk¼rk¼1TFI jk
and returnTFI j.5. Experimental resultsIn this section, the experimental results for showing the prun-ing effects and efﬁciency of the proposedTPPFapproach are presented. As a comparison, the basic three-phase algorithmwithout consideration of the predicting strategy (named TP- HTAR, Three-Phase algorithm for Hierarchical TemporalAssociation Rules) is derived from the proposed TPPF approach. The experimental environment included a personalcomputer with 3.0 GHz CPU and 2 GB memory, runningJ2SDK 1.6.0. The two methods were performed on the samemachine using the same program language, data and parame-ter settings. The execution time included data input, generationof frequent itemsets and result output.5.1. Experimental datasetsTwo datasets including synthetic data and real data were usedto conduct the comprehensive empirical study. In terms of thesynthetic data, it was generated by the public IBM data gener-ator[14]. The temporal database was generated by the modelused in[18]. The detailed information of the synthetic data isshown inTable 2.To attack the insufﬁciency of the synthetic data, we alsoadopted a real datasetFoodmartas the other experimentaldata. TheFoodmartdatabase is a well-known dataset fromMicrosoft SQL Server 2000. It includes 21,556 transactionsand 1600 items.5.2. Experimental results on synthetic dataThe synthetic T10I4N4KD100KP16 dataset was ﬁrst used inthe experiments. It was divided into 16 basic time periods,which were organized into a hierarchy of 4 levels. Fig. 2shows the pruning effects of the two approaches, TP-HTARand TPPF, for the T10I4N4KD100KP16 dataset for differentthresholds within 0.3–0.4%.From the results inFig. 2, it can be observed thatTPPF needed less database scans thanTP-HTAR. It was because TP-HTARpurely used the level-wise technique to handle theproblem of hierarchical temporal issues. In addition, if allthe frequent itemsets in each basic period were identiﬁed aspossible hierarchical temporal itemsets, then the transactionsin the time periods, in which the relative supports of the pos-sible itemsets were unknown, had to be scanned to ﬁnd theactual relative supports for itemsets. Thus, the TP-HTARper- formed worse than the proposedTPPFin terms of avoidingunnecessary data scans.The experiments were then conducted to evaluate the efﬁ-ciency of the two algorithms,TPPFandTP-HTAR, for the hierarchical temporal mining issue, andFig. 3shows the results of the two algorithms working on theT10I4N4KD100KP16 dataset with 16 basic periods and 4levels for the synthetic datasets with the thresholds varyingfrom 0.3% to 0.4%.The results clearly show that the execution time of theTPPFfor the hierarchical temporal mining issue performedbetter than the other algorithm,TP-HTAR. The reason wasthe same as that mentioned above. Since TPPFobviously needed less data scans thanTP-HTAR, the time cost of unnec-essary data scans could effectively be saved by the TPPF.
Table 2Parameter values of the synthetic data.
Parameter Description Default value TThe average length of items pertransaction 10IThe average length of maximal potentiallyfrequent itemsets 4NThe total number of items 4000DThe total number of transactions 100,000PThe number of basic periods 16
Figure 2The pruning effects of the two approaches on thesynthetic data.
Figure 3The execution time of the two approaches on thesynthetic data.138 T.-P. Hong et al.Accordingly,TPPFcould be more efﬁcient thanTP-HTAR for the synthetic dataset.In addition to the above experimental results of discoveringthe frequent itemsets, we also conducted an empirical study forthe efﬁciency of generating association rules based on the dis-covered frequent itemsets.Fig. 4shows the experimentalresults of evaluating the rule generation using the frequentitemsets yielded by different minimum relative support set{0.3%, 0.32%, 0.34%, 0.36%, 0.38%, 0.4%}. That is, six setswere employed to generate associations. The minimum conﬁ-dence values ranged from 0.2 to 0.8.FromFig. 4, the experimental discovery can be summarizedas follows. First, all of the execution time is quite close, whichis within one second. It means the rule generation time is verysmall when compared with that of generating frequent item-sets. The reason is that, the rule generation is simpler and takesmuch less time than generating frequent itemsets. Second,whatever the minimum conﬁdence is, the larger the minimumrelative support, the smaller the execution time. The reasonis when the minimum relative support becomes larger, less fre-quent itemsets will be generated and thus the rule generationcost will be less as well. Third, for each set, the differences ofexecution time for generating rules under different minimumconﬁdence values are very slight. The reason is that the conﬁ-dence checking time depends on the number of frequent item-sets generated, but not on the conﬁdence thresholds. Besides,larger minimum conﬁdence values will get more rules and thusneed more time to generate them out. But rule generation isvery quick and thus there is no signiﬁcant difference for differ-ent thresholds.In general, the values of the two parameters min_rsupand min_rconfaffect the performance of the proposed approach.Whenmin_rsupis set lower, more candidate itemsets are gen-erated and thus the needed computational time becomes moreas well. Similarly, whenmin_rconfis set lower, more rules aregenerated which needs more computational time. These char-acteristics can be easily observed fromFig. 4as well. Besides, the minimum support and conﬁdence values are usually deter-mined according to the data characteristics and user require-ment. There are some studies focusing on this issue, but it isbeyond our discussion here. Some scholars [13,30,31]adopt the top–kmining approach to ﬁnd the results, instead of set-ting the two thresholds.5.3. Experimental results on real dataIn addition to synthetic data, a real dataset Foodmartwas tested in the experiments. The transactions were divided into10 time periods and the time hierarchy was organized in threelevels, with 1, 5 and 10 time periods, respectively. Fig. 5shows the differences in the execution time needed by the two algo-rithms for different thresholds, varying from 0.6% to 0.7%.The experimental results show that the algorithm TPPFper- formed much better thanTP-HTARsince the number of datascans ofTPPFwas much fewer than those ofTP-HTAR. The results are an echo ofFigs. 2 and 3.For showing the performance of generating associationrules, similar toFig. 4, six sets with different minimum relativesupport values yielded by the proposed methods were adoptedin the experiments, which are {0.6%, 0.62%, 0.64%, 0.66%,0.68%, 0.7%}.Fig. 6shows the experimental comparisonsfor rule generation, which delivers some discovery. First, theexecution time for each set is very close to each other evenusing different minimum conﬁdence values. The reason is thesame as above. That is, the conﬁdence checking time dependson the numbers of frequent itemsets generated, but not on theconﬁdence thresholds. Second, the performance for smallerconﬁdence value is worse than that for larger conﬁdence val-ues. The reason is that the former will get more rules and thusneed more time to generate them out.
Figure 4Execution time of generating association rules underdifferent minimum conﬁdences on the synthetic data.
 Figure 5The execution time of the two approaches on the realdatasetFoodmart.
Figure 6The execution time of generating association rulesunder different minimum conﬁdences on the real data.Discovery of temporal association rules 1396. ConclusionsIn this paper, we introduce a new concept of temporal associ-ation rule mining with a hierarchy of time granules to ﬁnd hier-archical temporal association rules in temporal databases, andwe also present the effective approach (abbreviated as TPPF) to ﬁnd such rules. In particular, an effective strategy isdesigned to predict the upper-bound of support values foritemsets. The strategy can be used to remove unpromisingitemsets at an early stage in the process, and the proposedTPPFcan effectively reduce the computational cost of scan-ning a temporal database. Experiments were also made, withresults showing the proposedTPPFoutperformed the otheroneTP-HTARin reducing database scan and computationaltime.The future research directions of this work are as follows.First, we will attempt to investigate the incremental problemof hierarchical temporal association rule mining. That is, basedon this work, we will design a method to mine the new resultwithout performing the whole mining procedure at databasemodiﬁcation. Second, the optimal minimum support and con-ﬁdence will be approximated by machine learning techniques.Third, actually, this work is the beginning of hierarchical tem-poral association rule mining. In the future, more efﬁcient min-ing algorithms such as FP-growth will be adopted as thesolutions to accelerate the mining process and more miningconsideration such as utility mining will be studied to extendits applications.AcknowledgmentThis research was supported by the Ministry of Science andTechnology of the Republic of China under contractMOST103-2221-E-390-014 and MOST 104-2221-E-230-019.References
[1] R. Agrawal, R. Srikant, Fast algorithm for mining associationrules, in: The International Conference on Very Large DataBases, 1994, pp. 487–499.[2] R. Agrawal, R. Srikant, Mining sequential patterns, in: The 11thInternational Conference on Data Engineering, 1995, pp. 3–14.[3] R. Agrawal, R. Srikant, Q. Vu, Mining association rules withitem constraints, in: The 3th International Conference onKnowledge Discovery in Databases and Data Mining,Newport Beach, California, 1997.[4] J.M. Ale, G.H. Rossi, An approach to discovering temporalassociation rules, in: The 2000 ACM Symposium on AppliedComputing, 2000, pp. 294–300.[5] C.Y. Chang, M.S. Chen, C.H. Lee, Mining general temporalassociation rules for items with different exhibition periods, in:The Third IEEE International Conference on Data Mining,2002, pp. 59–66.[6]
C.H. Chen, G.C. Lan, T.P. Hong, S.B. Lin, Mining fuzzytemporal association rules by item lifespans, Appl. SoftComputing 41 (2016) 265–274
.[7] M. Chen, S.C. Chen, M.L. Shyu, Hierarchical temporalassociation mining for video event detection in videodatabases, in: The Second IEEE International Workshop onMultimedia Databases and Data Management in The IEEE23rd International Conference on Data Engineering, 2007, pp.137–145.[8]Y.L. Chen, K. Tang, R.J. Shen, Y.H. Hu, Market basketanalysis in a multiple store environment, Decision Support Syst.40 (2) (2005) 339–354
.[9]
C.J. Chu, Vincent S. Tseng, T. Liang, Mining temporal rareutility itemsets in large databases using relative utilitythresholds, Int. J. Innovative Computing, Inf. Control 4 (8)(2008) 2775–2792
.[10]
G. Fang, Y. Wu, A general framework based on compositegranules for mining association rules, Int. J. ArtiﬁcialIntelligence Tools 23 (5) (2014)
.[11] A.A. Galib, B. Dhaka, M. Alam, N. Hossain, R.M. Rahman,Stock trading rule discovery based on temporal data mining, in:The International Conference on Electrical and ComputerEngineering, 2010, pp. 566–569.[12] P. Hu, M. Huang, P. Xu, W. Li, A.K. Usadi, X. Zhu, Findingnuggets in IP portfolios: core patent mining through textualtemporal analysis, in: The 21st ACM International Conferenceon Information and Knowledge Management, 2012, pp. 1819–1823.[13] F.-V. Philippe, Cheng-Wei Wu, Vincent S. Tseng, Mining top-Kassociation rules, in: Canadian Conference on AI, 2012, pp. 61–73.[14] IBM Quest Data Mining Project, Quest synthetic datageneration code, <http://www.almaden.ibm.com/cs/quest/syndata.html>, 1996.[15]
A. Julea, N. M´eger, C. Rigotti, E. Trouv´e, R. Jolivet, P. Bolon, Efﬁcient spatio-temporal mining of satellite image time series foragricultural monitoring, Trans. Mach. Learning Data Mining 5(1) (2012) 23–44
.[16] G.C. Lan, C.H. Chen, T.P. Hong, S.B. Lin, A fuzzy approachfor mining general temporal association rules in a publicationdatabase, in: The Eleventh International Conference on HybridIntelligent Systems, 2011, pp. 611–615.[17] G.C. Lan, C.H. Chen, T.P. Hong, S.B. Lin, Mining fuzzytemporal association rules with effective lifespans of items, in:The Cross-Strait Conference on Information Science andTechnology and iCube, 2011.[18]
G.C. Lan, T.P. Hong, Vincent S. Tseng, Discovery of highutility itemsets from on-shelf time periods of products, ExpertSyst. Appl. 38 (5) (2011) 5851–5857
.[19] G.C. Lan, T.P. Hong, P.S. Wu, S. Tsumoto, Mining hierarchicaltemporal association rules in a publication database, in: The12th IEEE International Conference on Cognitive Informatics &Cognitive Computing, 2013, pp. 503–508.[20] C.H. Lee, C.R. Lin, M.S. Chen, On mining general temporalassociation rules in a publication database, in: The 2001 IEEEInternational Conference on Data Mining, 2001, pp. 337–344.[21]
Y. Li, P. Ning, X.S. Wang, S. Jajodia, Discovering calendar-based temporal association rules, Data Knowledge Eng. 44 (2)(2003) 193–218
.[22] B. Ozden, S. Ramaswamy, A. Silberschatz, Cyclic associationrules, in: The 14th International Conference on DataEngineering, 1998, pp. 12–421.[23] E.E. Papalexakis, T. Dumitras, D.H. Chau, B.A. Prakash, C.Faloutsos, Spatio-temporal mining of software adoption &penetration, in: The 2013 IEEE/ACM International Conferenceon Advances in Social Networks Analysis and Mining, 2013, pp.878–885.[24]
D. Patnaik, M. Marwah, R. Sharma, N. Ramakrishnan,Temporal data mining approaches for sustainable chillermanagement in data centers, ACM Trans. Intelligent Syst.Technol. 2 (4) (2011) 34
.[25]
A. Rajak, K. Saxena, Modeling clinical database using timeseries based temporal mining, Int. J. Comput. Theory Eng. 2 (2)(2010) 1793–8201
.[26]
M.M. Rashid, I. Gondal, J. Kamruzzaman, Mining associatedpatterns from wireless sensor networks, IEEE Trans. Comput.64 (7) (2015) 1998–2011
.140 T.-P. Hong et al.[27]J.F. Roddick, M. Spiliopoilou, A survey of temporal knowledgediscovery paradigms and methods, IEEE Trans. KnowledgeData Eng. 14 (4) (2002) 750–767
.[28] R. Srikant, R. Agrawal, Mining generalized association rules, in:The 21st International Conference on Very Large Data Bases,Zurich, Switzerland, 1995, pp. 407–419.[29] Vincent S. Tseng, C.J. Chu, T. Liang, Efﬁcient mining oftemporal high utility itemsets from data streams, The ACMKDD Workshop on Utility-Based Data Mining, 2006, pp. 1105–1117.[30] J. Wang, J. Han, Y. Lu, P. Tzvetkov, TFP: an efﬁcient algorithmfor mining top-K frequent closed itemsets, IEEE Trans.Knowledge Data Eng. (2005) 652–664
. [31] C.-W. Wu, B.-E. Shie, V.S. Tseng, P.S. Yu, Mining top-K highutility itemsets, in: ACM SIGKDD Conference on KnowledgeDiscovery and Data Mining, 2012, pp. 78–86.Discovery of temporal association rules 141