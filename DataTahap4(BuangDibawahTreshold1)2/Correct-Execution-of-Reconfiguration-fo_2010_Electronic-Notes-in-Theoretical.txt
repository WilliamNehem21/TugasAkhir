sider a very broad definition of components, however the notion of state remains quite abstract. Rasche and Polze [17] also employ a heuristic approach towards state transferal. Using an object-graph-traversal algorithm [18] and a mapping, they re- alize a semi-automatic, direct approach. For consistent state update, they rely on

an accounting system. We know that this component fails sometimes, and if it does, its state gets corrupted (i.e., we cannot make any safe assumption about it). We assume, however, that the component is deterministic, and that an error is communicated back to the callee immediately (e.g., in an actual implementation, by throwing an exception).

