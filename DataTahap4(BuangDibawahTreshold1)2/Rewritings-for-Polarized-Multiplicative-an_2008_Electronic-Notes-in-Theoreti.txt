Definition 2.2 [EBM] An EBM M is given by a finite set H(M ) of propositional variables (called hypotheses) hi and a non empty finite set C(M ) varying over k of finite sets Ck(M ) of propositional variables (called conclusions) cj . Variables are supposed pairwise distinct. 4 The set of propositional variables appearing in M is noted v(M ). An EBM is denoted as a directed graph with labelled pending edges and two kinds of nodes, one positive pole under a non-empty finite set of negative poles:

logical reading of an EBM (or of a proof structure) is unilateral. Three kinds of EBMs are of special interest: An EBM is initial (resp. final) if its set of hypotheses is empty (resp. its set of conclusions is empty). An EBM is transitory if it is neither initial nor final. Initial EBMs allow to declare available resources, although final EBMs stop part of a computation by withdrawing a whole set of resources. Transitory EBMs are called definite clauses in standard logic programming.

The interface will be omitted when it is clear from the context. Note that the interface may be empty. The translation from proof structures of PS to BMs is given by the following two rules, together with rules (not given here due to lack of space) that take care of the constant 1 and polarity: a unary tensor node (resp. Par) is added in between if (resp. a negation of) a propositional variable is a premise of a Par node (resp. tensor node).

on the left hand side of the relation onto the switched structures s' associated to the module on the right hand side such that a switched structure s is acyclic (resp. connected) iff the corresponding switched structure s' is acyclic (resp. connected). 

Note that this proof extensively uses the bipolar nature of modules. Moreover, the proof may have been given considering minimal poles in place of maximal poles, and for each proof only one of the two reduction rules is sufficient and necessary! Finally, the same technique as Guerrini [11] used for Danos criterion may be applied here to get a linear algorithm. We detailed in another paper the extension of the technique presented before to open modules as it is a necessary step towards the specification of a logic programming language based on bipolar modules [8].

