Membrane computing [18] deals with distributed and parallel computing models inspired from the structure and the functioning of living cells, as well as from the way the cells are organized. Such a model processes multisets of symbol-objects in a localized manner. The locality of processing refers to the fact that the evolution rules and evolving objects are encapsulated into compartments delimited by mem- branes. An essential role is also played by the communication among compartments and, possibly, with the environment.

rewriting (used in defining the behavior of these systems) is quite challenging. An alternative approach based on rewrite strategies and strategy controllers is given in [4]. The main idea is to separate the implementation of the control mechanisms of regions from the effective application of the evolution rules.

In [13] we show that RWL-based semantics can describe the maximal parallel rewriting of the membrane systems only by interleaving semantics. In this paper we show that the strategy-based rewrite semantics defined in [4] preserves the maximal concurrency expressed by the maximal parallel application of the evolution rules. The concurrency degree of the communications and structural actions is the same in the RWL-based semantics and strategy-based rewrite semantics. Since the two for- malisms, membrane systems and strategy-based rewriting logic, are quite different, we use a simple modal logic as a common language for comparing the concurrency degrees of the two formalisms.

The paper is structured as follows. Section 2 briefly presents the membrane systems and rewriting logic. In Section 3 a Hennessy-Milner-like modal logic for membrane systems is introduced. Section 4 briefly recalls from [4] the strategy- based rewrite semantics for membrane systems. It further includes an algorithm computing strategies for communications and dissolvings with the highest concur- rency degree. Section 5 includes the main results of the paper. The concurrency degree of an evolution step of a membrane system is compared with that of its implementation as a strategic rewrite using the modal logic introduced in Section

i0 is either one of the labels 1, 2,..., m, and then the respective region is the output region of the system, or it is 0, and then the result of a computation is collected in the environment of the system.

rule actions corresponding to evolution rules of a membrane. Such an action is denoted by the label of the involved rule. We assume that the rules have distinguished labels such that there is no ambiguity regarding the rule or the membrane the rule belongs to.

The strategy language defined by the above theory was designed having in mind mainly the control of the evolution rules. This language can be enriched with new constructs needed for defining other control mechanisms over evolution rules [2] or to add certain control over the interaction rules. In Section 5 we sketch out an extension for the case of cooperation rules.

It is obvious that sl and sl have the same number of rule labels occurrences and the two strategies send the messages between the same set of membrane pairs but in opposite directions: if one sends messages from Mi to Mj, the other one sends from Mj to Mi. The rules specified by sl, respectively sl, can be applied concurrently, due to the edge coloring properties. Therefore a strategy implementing comm with a maximum concurrency degree is s1; s1; ... ; sk; sk.

This section includes the main results of the paper. We use the operational corre- spondence between a membrane system and its strategy-based rewrite semantics [4] to show how the modal formulas can be used for expressing the concurrency degree for computations in the strategy-based rewrite semantics. Then we compare this concurrency degree with that of the original membrane system.

This can be extended to the general case. We have seen that the algorithm presented on page 13 computes strategies which apply the communication rules in an concurrent way and as much as it is possible. In fact, by Proposition 4.3, we have that the maximum concurrency degree of the communication which can be

We conclude now the second main result, namely that the true concurrency of the communication actions is partially preserved by the strategy-based rewrite semantics, i.e., it is described by a combination of true concurrency and interleaving concurrency. This is formalized by the following result:

In this paper we give a partial answer to the question if it is possible to define a rewrite semantics for the membrane systems. It was recently shown [13] that rewriting logic-based semantics cannot preserve the maximal concurrency of the rewrite actions. The main reason is the locality of the evolution rules w.r.t. their membership to the regions. The rewrite rules encoding the evolution rules belonging to a region must share this locality and hence they cannot be applied concurrently.

In this paper we consider the particular case of transition P systems [18]. There is a large variety of P systems. We think that the strategy-based rewrite semantics can faithfully describe almost all mechanisms used for controlling the evolution rules. It remains to investigate what happens with the concurrency degree of the cooperation actions for different more general structures, e.g., tissue-like structures or neural-like structures.

Lodaya, K., M. Mukund, R. Ramanujam and P. Thiagarajan, Models and logics for true concurrency, in: P. Thiagarajan, editor, Some Models and Logics for Concurrency, Advanced School on the Algebraic, Logical and Categorical Foundations of Concurrency, Gargnano del Garda, 1991 .

