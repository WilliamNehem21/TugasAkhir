In this paper we propose a trust model, where besides considering trust and distrust, we also consider another parameter that measures the reliability on the stability of trust or distrust. The inclusion of this new parameter will allow us to use trust in a more accurate way. We consider trust is not static but dynamic and trust values can change along time. Thus, we will also take time into account, using it as a parameter of our model. There is very little work done about the inclusion of time as an influence on trust.

Since their origins trust management systems [4] have been used in order to assist entities that have to interact with others in a system. It has been a very important tool for the decision-making process. Sometimes, the information available about the other entities is not enough for establishing a secure exchange of information, but still the interaction must take place. Trust management systems try to supply this lack of information. In the last years, due to the growth of electronic commu- nications and transactions, reputation systems [1] have been developed to aid trust management systems for assisting the trust decision process.

systems do not consider or take into account how time influences the trust or repu- tation outcomes [7,11]. However, some authors have realised that time can influence trust. Thus, in [6] the authors mentioned that trust is a very dynamic phenomenon evolving in time and having a history. In [12] a dynamic trust model for mobile ad- hoc networks is introduced. Their proposal is used to add a measure of trust to the routing process. In this work, the authors highlight the importance of taking time into account, updating trust values as new evidences arrive. One of the problems of this approach is that it is really dependent on the scenario and, mainly because of this, they avoid discussing about transitiveness of trust. Another trust model that takes into account past trust history of users is [3]. Herrmann [8] also considers the influence of time on trust and proposes to use cTLA (compositional Temporal Logic of Actions [9]) as a method for modelling and verifying trust mechanisms.

One of the approaches that resembles more to ours is that of Mezzeti [13]. He proposes a trust model that takes time into account as one of the parameters to consider. He also gives more relevance to the freshness of the trust values since he considers obsolete information is not that accurate to describe recent behaviours. He proposes a formula in order to update trust degrees as time passes by.

We also believe this change in time should be reflected in the way a final trust value is obtained and that recent behaviours are more relevant for the final measure of trust. Thus, if the time unit is months, the weight given to an interaction happened a year ago should be smaller than the weight given to an interaction happened in the last month. We consider then a three-dimensional model based on trust values, reliability values on the behaviour of the participating entities and time. Thus, our model considers trust and reliability values, and the influence of time in order to derive a decision trust value.

The paper is organized as follows. Section 2 introduces the trust model that we propose in order to use past trust history of users and the influence of time. Section 3 shows some application scenarios for our model and Section 4 concludes the paper and outlines the future work.

Let us consider two eBay sellers, each of them with a 100% positive feedback. The difference between them is that the first one has only carried out 10 transactions whereas the second one has carried out 10.000 transactions. The trust component of the statement tuple made by a potential buyer will be the same for both sellers, but the reliability component will be higher for the second one, as there are more evidences that support the second seller.

Regarding storage, our model could be considered distributed in the sense that statements are stored locally by each user. We will see later that trust statements can be exported and imported in such a way that at the end, all the computation is done in the user side taking into account all the imported information. Regarding trust scope, our system is clearly local in the sense that the trust and the reliability values are computed taking into account personal bias. A classification of trust models attending to the way trust statements are stored (centralized or distributed), and to the scope of trust statements (local or global) can be found in [15].

In our model, each user releases trust statements and uses them in order to make a trust decision about another user. Sometimes users may be interested in the statements that other users have already delivered. In these cases, it may be useful to export or import trust statements in such a way that re-using them could be possible.

Exporting a trust statement is straightforward and can be done by simply pub- lishing it in a web page for example, together with some authentication token (a digital signature will work). The users importing such a trust statement can be assured of the precedence and authenticity of it. Of course, this information can be made available only to a group of people by encrypting the trust statements.

If we used the usual product over R, multiplying two values of distrust (two negative real numbers) will give us as a result a positive real number. This in our model does not make sense as from two values of distrust is not possible to obtain a positive value of trust. Instead we set this value of trust to 0. The rationale behind this is that once there is a value of distrust we will not use it as referral for the statements to follow.

Also, from a value of distrust and a value of trust (a negative and a positive value respectively) we do not necessarily derive a value of distrust. In this case, the resulting trust value is 0 for the same reason as above. However, from a positive (trust) value and a negative one (distrust) we will obtain a value of distrust. We can summarize all of this as follows:

In previous sections (see Section 2.1) we described how trust statements from other users could be imported. However, for some other cases there are several trust statements for the same trustee and we might be interested in reaching a consen- sus or deriving a global trust decision about them. When importing many trust statements from different users it is very likely that we end up with different, even contradictory, statements about the same trustees. Thus, reaching a consensus becomes very important. Next we will describe how we can reach that consensus.

We consider a scenario for the reviewing papers process of a conference. In this scenario the Chair of the conference entrusts members of the program committee with the review of the papers and the recommendation whether they should or not be accepted for presentation at the conference. Usually, the Chair of the conference trusts the judgement of the reviewers assuming once they have become a program committee member of a conference they are reliable. In the following we will see how our model can help the Chair make his decision.

Let us assume the scenario above where the Chair has to first elaborate the list of the Program Committee (PC in the following) members. If the Chair has direct information about some reviewers for instance, because he knows them personally or has worked with them, he will build his own trust statements for these reviewers, (ti, ri, tmi). The value assigned for ti will be high as we are assuming in this first case the Chair knows the potential reviewers. ri will depend on the topic of the paper and how familiar the PC member is with it.

This stage is out of the scope of the trust model that we have proposed. However, our model can also help the process of accepting papers for the conference. We can take advantage of the formulae introduced in Definition 2.2 in order to compute an acceptance value for each reviewed paper. This acceptance value is computed as a function of the recommendation made by the reviewers about the papers and the trust statements that the Chair has issued about the PC member.

The Chair issues a trust statement about a reviewer. In the case this trust statement is from the past, the Chair has to update it by using the Time Influence function (See Definition 2.3). Then, the time parameter can be omitted from the tuple and the resulting new tuple is (t, r).

this value, the reviewer should also establish a confidence level about his level of expertise on the topic of the paper. This value could range in the set [0, 1], where 1 denotes the maximum level of confidence. This will result in a tuple (Evaluation, c), where c is the confidence of the reviewer on the topic of the paper.

As an example of application of our model, we propose the reviewing process of papers for a conference. We have shown how our model can be used for assisting the Chair of the conference in the process of choosing reviewers and how to use this information in order to select the accepted papers. We have shown that the influence of time can be used for refining the way the process of accepting papers for a conference takes place.

