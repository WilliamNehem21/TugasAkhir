Petri Nets are a widely used formalism to deal with concurrent systems. Dynamic Logics (DL) are a family of modal logics where each modality corresponds to a program. This works presents a resolution-based method for Petri-PDL, a DL where programs are replaced by Petri Nets. We present a procedure to convert any Petri-PDL formula into a normal form, a set of resolution-based inference rules, examples of application of the method, and discuss soundness and completeness.

The axiomatisation of Petri-PDL is sound and complete, and the satisfiability problem is decidable [11]. Other systems have been proposed in the literature to reason about the properties and behaviour of Petri Nets, but they lack some of these properties, as, for instance, the Trace Theory [12,13], which is incomplete and undecidable. Other systems may retain those properties, but reasoning can only be carried out after the translation of Petri Nets into the target language, as, for instance, in [18], where PDL is used as a query language for properties of Petri Nets. By embedding Petri Nets as part of the language, Petri-PDL provides a natural way of specifying complex systems and the properties to be verified. Also, the provision of such abstractions at the (logical) specification level comes at no extra cost: the

In this paper, as a first step towards the automation of proofs for Petri-PDL, we present a resolution-based calculus to deal with the (un)satisfiability problem in Petri-PDL. The method is clausal: a formula to be proved unsatisfiable is trans- lated into a normal form, which separates the different contexts to which a set of resolution-based inference rules are applied. Correctness results are briefly discussed and some examples are provided.

The paper is structured as follows. In the next section, we explain the basics of Marked Petri Nets. In Section 3, we introduce the syntax, semantics, and the ax- iomatisation of Petri-PDL. The resolution-based method for Petri-PDL is presented in Section 4: the transformation into the normal form, the inference rules, the main results, and a few examples are given. Conclusions and future work are given in Section 5.

Petri Net is one of the most used formalisms to deal with concurrent systems. Given a logical representation of a Petri Net program, it is desirable to have tools to rea- son about properties of the program within this framework. In this paper we have presented a sound resolution-based method for proving satisfiability of formulae in Petri-PDL, a logic system that takes advantage of the graphical interpretation of Petri Nets within a known decidable and complete fragment. In order to apply the resolution method, formulae in Petri-PDL are firstly converted into Anti-Prenex Normal Form (APNF) and simplification is applied whenever possible, which might lead to the generation of a better set of clauses. A formula in APNF is then trans-

We have proved soundness and termination of the method and shown that the running time for testing satisfiability of a set of clauses is optimal. We are currently investigating its completeness, as given in Claim 4.12. The design of strategies for the method is left as future work. Further work also includes the implementation of an automatic theorem-prover and the extension of this method to DS3 [10], a logic system which extends Petri-PDL in order to deal with Stochastic Petri Nets (Petri Nets with probabilistic temporal variables).

