With the trend of hardware evolution and the new interconnects being created, there are several issues that the application developers need to pay attention to. With the hardware upgrading, the developers need to re-evaluate the performance of different generations of hard- ware to design the proper systems software based on the improved data transfer rates. Also, many new interconnects are emerging with the development of novel hardware features. These features may po- tentially impact application performance and need to be systematically investigated.

On the other hand, different types of data center applications repre- sent various performance characterizations, like HPC workloads, deep learning training and inferences, big data analytics, and cloud-based microservice. The impacts of new interconnects on these different workloads should be evaluated separately and carefully. Therefore, we believe this is high time to investigate the performance characteri- zations of modern data centers and HPC interconnects via standard benchmarking experiments under different application scenarios. This observation motivates us to extensively survey hot interconnects on modern data centers and HPC clusters and the associated representative benchmarks to help the community better understand these advanced interconnects.

investigated fourteen deep learning benchmarks. Zhou et al. [10] dis- cussed seven microservice benchmarks. Gao et al. [11] compared fif- teen big data and AI (Artificial Intelligence) benchmarks. However, we did not find such a survey that can extensively cover a broad range of the latest advanced interconnects in modern data centers and the associated representative benchmarks for different application scenar- ios. Therefore, this paper addresses the need to survey different hot interconnects deployed in modern data centers and the corresponding benchmarks to expose their performance characteristics.

Ethernet is one of the most traditionally utilized interconnects for HPC and data center clusters. At the early stage, 1 Gb/s Ethernet (1-GigE) was widely used. However, with the advancement of CPU per- formance and I/O speed, the 1-GigE has become the bottleneck. With the demand for higher bandwidth and data transfer rate, Ethernet with 10-GigE, 25-GigE, 50-GigE, and even 100-GigE, has been developed. As of June 2022, 25-GigE is the most widely used interconnect in the Top500 list, and the Ethernet interconnect family is the majority in the list, taking up nearly 50% [19].

Taken the advantages of RDMA, RDMA over Converged Ethernet (RoCE) [20] is developed, which is a network protocol that allows RDMA to operate over Ethernet networks. RoCE is designed to support RDMA over Ethernet on layer 2 networks, and its extended version RoCE v2 enables transportation on layer 3 networks. Traditionally, Eth- ernet has left the congestion control to the TCP (Transmission Control Protocol) layer. With the development, the first algorithm proposed for the Ethernet network is pause frame [21] in 1996. Congestion control on RoCE uses an extension to the TCP/IP protocol called ECN (Explicit Congestion Notification) [22]. Other techniques, such as the QCN (Quantized Congestion Notification) [23], were developed afterward. Both traditional Ethernet and RoCE are available for vari- ous interconnect topologies. In 2019, Amazon announced EFA (Elastic Fabric Adapter) [24] for its EC2 (Elastic Compute Cloud) instance. The libfabric [25] interface on EFA provides up to 100 Gbps speed and reduces overhead with techniques like operating system bypass.

Provided by NVIDIA, InfiniBand (IB) is an industry-standard switch fabric and the second most popular interconnect family in the Top500 list [19]. As of June 2022, 32.4% of the Top500 clusters are intercon- nected by IB, especially for Top10 clusters such as Summit [26] and Sierra [27]. Besides the higher bandwidth (up to 400 Gbps) and lower

Specifically, RDMA-capable networks (like InfiniBand) typically support four types of transport modes: Reliable Connection (RC), Re- liable Datagram (RD), Unreliable Connection (UC), and Unreliable Datagram (UD). SEND and RECV operations are supported by all modes, while the RDMA WRITE operation is unsupported by UD, and the RDMA READ operation is unsupported by UD and UC. The most commonly used network topology for IB is fat-tree [30], but it also sup- ports other topologies like dragonfly+ [31]. The IB standard includes a congestion control mechanism to detect and resolve congestion by using two relay messages: FECN (Forward Explicit Congestion Notifica- tion) [32] and BECN (Backward Explicit Congestion Notification) [33]. When applying IB to GPU, CUDA 5.0 first introduced GDR (GPUDirect RDMA) [34]. GDR allows IB adapters to directly access the GPU memory while also bypassing the host. GDR can significantly increase data communication performance among GPUs, which further benefits the increasing number of redesigned classical HPC and machine/deep learning applications.

communication pattern to evaluate the throughput and latency of basic RDMA operations. We can also use it to compare different transports by specifying the transport as RC, UC, UD, Raw Ethernet, and even Mellanox DCT (Dynamic Connected Transport) [63] and AWS SRD (Scalable Reliable Datagram) [64] transports that are not specified in the standard IB specification [65]. Besides the basic operations and transports, Perftest also supports the GPUDirect feature for direct inter- GPU communication through GPUDirect RDMA and the AESXTS [66] feature for data encryption and decryption scenarios using RDMA. Perftest is designed without emulating any real application traffic or traffic probability distribution. It does not allow users to choose the traffic pattern but only with a parameter to specify the message size in each test. These tests are mainly helpful for hardware or software tuning as well as for functional testing.

network_load_test measure the performance of an MPI application with network congestion. This simulates the scenario when running on multi-tenant HPC networks. Each congestor has a unique random ring, and the communication patterns include Point-to-point Incast, All-to-all, One-sided RMA Incast, and One-sided RMA Broadcast. Two measurements execute in the random ring infrastructure: Point-to-point Latency measurement by sending and receiving 8 bytes messages from and to two sides, Point-to-point Bandwidth with Synchronization by sending and receiving eight 128K bytes messages from two sides.

The default settings are intended to be utilized in general production scenarios. It reports the mean and 99th percentile latencies as well as the bandwidth per rank. With congestors, it also reports the Congestion Impact metric, which is defined as the ratio of congested latency or bandwidth divided by the uncongested latency or bandwidth. The Con- gestion Impact metric is an indicator to study the impact of congestion across systems with different networks.

With the development of hardware technology, much new storage hardware is produced, such as the NVMe SSD [85]. Storage systems rely on different drivers and libraries in data center, with interactions between the processors and the storage devices via interconnects. Intel SPDK [86] provides NVMe perf [87] as an NVMe SSDs benchmarking tool with minimal overhead in benchmarking. NVMe perf provides several runtime options to support the most common workload. Users

The above-mentioned application-level benchmarks can represent a broad range of data center applications, including HPC, big data, AI, and cloud computing. In this survey, we choose MPI and PGAS based benchmarks as application examples and run them on different interconnects. MPI and PGAS based benchmarks have been designed and maintained for many years with a lot of contributed optimizations from the community. Our experience also reveals that they are easy to deploy and convenient to run. The experiment results are shown in Section 5.

Benchmarking big data systems: Many benchmarks are proposed to evaluate the big data systems with the big data boom. HiBench [120] and MRBench [121] are designed for evaluating MapReduce systems. TextBenDS [122] is applied to evaluate the performance of Hive, Spark, and MongoDB on a textual corpus. The TPC [123] organiza- tion designed benchmark standards what were data-centric benchmark and disseminated verifiable data to the industry. Wang et al. [124] discussed the challenges of using the widely-used benchmarks (TPC-C and YCSB) for systems evaluation. DCQCN [125] and DSCP-BASEDPFC

This work was supported in part by the NSF research grant CCF #2132049. Part of this research was supported by the Exascale Comput- ing Project (17-SC-20-SC), a collaborative effort of the U.S. Department of Energy Office of Science and the National Nuclear Security Admin- istration, and by the U.S. Department of Energy, Office of Science, under Contract DE-AC02-06CH11357. We gratefully acknowledge the computing resources provided on Bebop, an HPC cluster operated by the Laboratory Computing Resource Center at Argonne National Labo- ratory, USA. Part of this research was conducted using Pinnacles (NSF MRI, #2019144) at the Cyberinfrastructure and Research Technologies (CIRT) at University of California, Merced.

X. Lu, D. Shankar, S. Gugnani, H. Subramoni, D.K. Panda, Impact of HPC Cloud Networking Technologies on Accelerating Hadoop RPC and HBase, in: 2016 IEEE International Conference on Cloud Computing Technology and Science (CloudCom), IEEE Computer Society, Los Alamitos, CA, USA, 2016,

