This paper describes the semi-formal semantics and a run-time monitoring technique for TLCharts, a visual specification language that combines the visual and intuitive appeal of non-deterministic Harel Statecharts with formal specifications written in Linear-time (Metric) Temporal Logic (LTL and MTL). We describe an automata-theoretic semantics for non-deterministic statecharts with negation and state overlapping and extend it to cater for temporally annotated transitions, thereby providing a simple automata theoretic semantics for TLCharts. We also describe a run-time mon- itoring technique for TLCharts.

Chang, Pnueli, and Manna as a vehicle for the verification of real time sys- tems [4]. MTL extends LTL by supporting the specification of relative-time and real-time constraints. With MTL, all four LTL future-time operators can be characterized by relative-time and real-time constraints, specifying the duration of the temporal operator. Temporal Logic with Time Series con- straints (TLS) was suggested by Drusinsky [6] as an extension of MTL which enables temporal specifications that assert about time-series properties such as stability, monotonicity, and min-max values.

Timed automata extend non-deterministic automata with timed transi- tions, similar to the timeout event mechanism of Harel statecharts [1]. With TLCharts MTL conditions can be used in addition to timeout events. This is an important feature because the LTL until operator can neither be simulated in a trivial way by timed automata, nor can nesting of temporal operators.

Enciso et-al. [15] suggest LNint-e, a logic that enables statecharts to tem- poral logic transforms using a new temporal logic which combines points and intervals to specify the dynamic behavior of programs. In contrast, our sug- gested language maintains, for the most part, the syntax and semantics of both languages and retains the visual appeal of statecharts.

R: a session is the interval between a begin and an end-condition. For every such session a keyPressed must be repeatedly sensed within two-minute intervals or else an alarm must sound within 10 seconds until keyPressed is sensed. Also according to this specification, once the alarm sounds then the assertion has succeeded and no more alarms are permitted. The end-condition is defined to be true whenever there is an interval which starts with the door closed followed by an end being repeatedly sensed until a later time when begin is sensed.

states in an indirect way, i.e., without those states being source or target states of any member transition. To this end, we need a few more definitions. Recall that a statechart (are therefore a TLChart) default state is a des- ignated initial state within a particular level of nesting. Hence, we define the

ton. Alternatively, an existential NFA with negation can be used instead of a combination of both acceptance criteria. ENFA supports negation using (i) negation inside temporal conditions, (ii) a combination of good (accepting) and error (rejecting) states. For a given input string san ENFA has one or

Note that though visually similar to Harel Statecharts, TLCharts are actu- ally used and applied more like a temporal logic specification in the following sense. TLCharts do not describe the token by token reaction of a reactive system to environment stimuli. Rather, TLCharts consider a complete input string s, which combines both environment inputs s in and system outputs s out ; a TLChart asserts about the legality of an s out system response to the s in stimuli.

Each PC store is marked with a tag using one of four values representing the Cartesian product of a logical value (good/error ) and a Boolean final- ity value (steady/transient ). A PC store also contains a simple counter. The logical value of the PC is error if any state of the PC is an error state, or else it is marked as good.

Although this paper describes TLCharts as a hybrid of statecharts and temporal logic, the notation can be extended to support regular expressions. In fact, a tool currently under development by Time Rover, Inc., will sup- port both temporal logic and regular expression conditions within TLChart diagrams.

