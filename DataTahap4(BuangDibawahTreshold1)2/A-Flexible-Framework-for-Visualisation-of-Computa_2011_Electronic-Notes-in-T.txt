The new extension of SUBSEXPL in this paper, so called SUBSEXPL 2.0, allows the definition of new calculi in just a few steps in both de Bruijn or named notations. In this way, the user can play with his/her own calculi, simulate reductions and normalisations, export the latex code, and have at his/her disposition many other features that were not available in the original implementation.

On the one hand, several of the great challenges involving explicit substitutions calculi were already solved, but on the other hand one can say that they are not completely understood because important properties of calculi are not known: it is still an open question whether the suspension calculus [31] preserves strong normal- isation (PSN). In addition, it is of practical interest the development of an explicit substitution calculus in de Bruijn notation that satisfies simultaneously the prop- erties presented below [29]. In fact, just recently a calculus of explicit substitutions that satisfies the desired computational properties was developed [26]. The desired

This paper is organised as follows: a complete description of the new version of SUBSEXPL is given in Section 2. An example on how to define a new calculus in named notation is presented in subsection 2.1. A calculus in de Bruijn notation is presented in subsection 2.2 together with the well-known counter-example of Melli`es. In subsection 2.3 we illustrate some educational applications of the system. We conclude in Section 4.

