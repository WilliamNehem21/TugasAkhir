However, even though the definition of the subtype {X | E} involves the term E, we insist (as the theory is currently formulated) that it be formed in the empty (global) context, i.e. without free variables. Even the pure syntax of dependent type theories is very complicated, and becomes more

Although the form of this result is very familiar, its usefulness is rather limited, as it only tells us about open subspaces. Ultimately, Corollary 10.12 will provide an induction scheme of the form that any subspace that includes nil and is closed under :: is the whole space. The principle that we shall invoke repeatedly in Section 6 is the following.

Unfortunately + is missing: we are not yet in a position to show that L1 + L2 is admissible when L1 and L2 are. This is because if L1 : X(n) and L2 : X(m) we would expect L1 + L2 : X(n+m), whereas our method of induction only takes us from n to n + 1. We shall show that + is well defined in Lemma 10.9, using the recursion scheme for nil and ::, but that is still a long way ahead.

