3) edge creation and 4) re-labelling of vertices. The number of labels (vertices) used to build the graph is commonly denoted by k. A well defined combination of these operations, called k-expression, are necessary to build the graphs, which in turn defines clique-width. The clique-width or the corresponding decomposition of the

It is important to look for an alternative graph decomposition that can be applied to a wider classes than to those of bounded tree-width and still preserve algorithmic properties. Tree decomposition and its tree-width parameter of a graph, are among the most commonly used concepts [7]. Therefore, Courcelle and Olariu proved that the clique-width can be seen as a generalization of tree-width in a sense that every graph class of bounded tree-width also have bounded clique-width [6].

combine the labels in order to compute the clique-width of G. Assume that a and b are used as labels of the root and the rest of the vertices of each tree respectively. Let c and d be the free allowed labels to be used. We built the k-expression of Cn beginning with a joint vertex v. Make a label c(v).

We discuss the time complexity of Algorithm 2 which is the main result reported in this paper. The complexity of Algorithm 2 is given by the two embedded procedure loops (lines 5 and 6) together with the call to Algorithm 1 (lines 7 and 11). The first loop (line 2) is outside the embedded loops so its complexity is considered apart.

