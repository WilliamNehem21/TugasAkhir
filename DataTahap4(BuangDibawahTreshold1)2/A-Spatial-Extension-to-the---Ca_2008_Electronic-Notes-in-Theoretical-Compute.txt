The majority of modeling and simulation approaches that are currently exploited in Systems Biology do not support an explicit representation and evaluation of spatial phenomena. With the progress of wet-lab techniques, spatial information becomes available that emphasizes the central role space plays in inter- and intracellular dynamics: e.g., crucial phases in the mitosis are distinguished by the spatial distri- bution of key actors in the cell, and signaling pathways depend on the location and movement of their components [27,26]. The relay of information in cells depends on diffusion and active transportation processes [10].

As already mentioned, we use two kinds of rules to express progress in time: Rules that are applied during a time interval and specify the ability of the processes to act and interact, and a rule that defines the transition between one time interval and another (see sec. 2.2). These rules are used in alternation. The transition between one interval and the next one is not triggered until there are no further actions or interactions to be executed.

ecuted. If the possibility of a communication exists and the time of this event is minimal, P1 and P2 communicate over channel ch. Both are reduced to the pro- cesses A and B, respectively, which are then integrated into CP' and T '.  Note

Euglena is a micro-organism living in inland water. They perform photosynthesis and thus are dependent on solar irradiation. Therefore, they show a certain behavior which is commonly known as phototaxis. Phototaxis describes motion phenomena that are influenced by sun irradiation. In case of Euglena, the movement is directed toward the sun (water surface) when too little light is perceived, and away from the sun (downward) if it is too much [6]. Our model focuses on this kind of motion. For simplification, we assume a two dimensional top-down slice through a lake of certain width and depth.

In SpacePi, each action at a channel might be associated with different radii, in our case we assume re = 0.15 for actions on coll and on phot by Euglena (representing the approximated size of Euglena) and rp = 0.05 for actions on phot by Photon.

As seen above, collision plays a major role in our model. It provides the basis for realizing the absorption of light - micro-organisms can only use photons within in their area of perception. The collision of Euglena cells has an impact on their motion and behavior. For a collision to occur, two processes need to communicate on a spatial channel, thereby the name of the channel, the radius of the complementary channel actions, and the location of the processes are taken into account.

Molecular motion is mostly seen as Brownian motion and abstracted as a random walk. Random motions of processes can be easily defined in SpacePi (see sec. 3). Additionally, more sophisticated motions can be described by defining movement functions that consider internal (in case of complexes) and external forces (see sec. 2). Moreover, given a collision channel, molecular crowding effects, which strongly affect signaling pathways (see [26]), can be modeled.

A fast and directed sort of molecular motion is active transportation, e.g. in neu- ronal cells (see [23]). Transport molecules move fast along intracellular structures (e.g. microtubules) by binding to successive structure parts under energy consump- tion.  In SpacePi, active transportation can be modeled by using processes with

transport molecules (train processes). When communicating with a rail process, the movement function of a train process is modified, such that it quickly reaches the next rail process. With this model, molecular transportation problems that result from defects of transportation systems could be modeled, e.g. when structural parts are missing or too little energy is available.

ing on the location and the distance of the processes, it is decided which processes can communicate. This leads to a more efficient analysis of the model as the number of potential communication partners is reduced. No process motion is considered. The Real Space Process Algebra supports the movement of processes [2]. It is in- spired by the testing of synchronization protocols in mobile networks. Hence, it is based on broadcasting messages and integrates asynchronous aspects in communi- cation. Furthermore, Real Space Process Algebra assumes that messages propagate in space radially. Whereas this assumption makes sense in the proposed application area, in cell biology it does not seem fitting. An explicit notion of time is crucial in describing motions. Therefore, Real Space Process Algebra makes use of concepts developed in Real Time Process Algebra [29].

Several simulation packages exist that support an individual-based view of the system with spatial dynamics [1,25,16]. Those systems do not distinguish between a formal modeling and the execution of the model. The SpacePi formalism has the major advantage of being a process algebra: it can be analyzed mathematically and the modeler is free to choose any abstraction level that is deemed appropriate. For example, the movement functions of the processes could be expressed as complex functions, taking all kinds of external forces into account. On the other hand, it could be sufficient to assume random motion for certain models. All these assump- tions have to be explicitly formulated when describing the model, which prevents misunderstandings and may lead to additional insights. In contrast, the cited sim- ulation systems presuppose a certain level of abstraction, ranging from molecular dynamics approaches to certain approximations. Since SpacePi allows to switch eas- ily between different underlying assumptions (e.g., by simply editing the definition of a movement function), it can be used to examine the effects that are imposed by simplifying abstractions regarding particle movement, and the artifacts that might stem from them.

Firstly, for each pair of processes that announce to communicate over the same channel it has to be determined if their channel radii overlap. Although we only deal with circular shapes in 2D space (or spherical in 3D), applying a straightforward algorithm to this task would be expensive and thus slow down simulation. This is a problem that has been widely referred to in the context of collision detection as known from computer graphics [11]. Proposed solutions exploit the fact that many objects of a scene simply do not qualify for collision because of their position and size (geometrical coherence) or their motion (temporal coherence). Thus, many collision checks can be avoided, which leads to more efficient calculations.

