For poset theoretic terminology we refer the reader to [9]. The basic problem we consider is an online chain partitioning problem. Kierstead formulated this problem in 1984. This problem can be viewed as a two-person game. We call the players Algorithm and Spoiler. Algorithm represents an online algorithm and Spoiler represents an adaptive adversary. The game is played in rounds. During round i the Spoiler introduces a new point x to the poset

and describes comparabilities between x and points from previous rounds. The algorithm responds by assigning x to a chain. The most important thing in online problems is that previous moves(decisions) of Algorithm restrict his actual possibilities. The goal of Algorithm is to minimize the number of chains. Below we present an example of such a game.

On the other hand the value of the online chain partitioning problem for posets of width w is the largest integer CP (w) so that there is a strategy of presenting points that forces any algorithm to use at least CP (w) chains. Note that, we may as well define CP (w) as the least integer so that there is an algorithm that never uses more chains. An argument of Szemeredi proves lowerbound and Kierstead[6] showed upperbound.

Online posets with this property are called upgrowing posets. The value of the an online partitioning problem of upgrowing posets for posets width w defined similarly to previous one and it is denoted by CPU (w). The upgrowing case is fully solved by the following theorem.

This problem for first-fit algorithm was touched on for years. Linearity of an upperbound has been showed by H. Kierstead in [5] in 1988. It is known that the value of the best result is between 4.45w and 25.72w for width w posets.

In the second version as before, as now Spoiler presents poset with repre- sentation but new intervals have to be maximal at the moment they arrive. It is upgrowing version of the previous game. The value of the game is denoted by CPUIR(w). P. Broniek showed strategy for Algorithm, which is as good as off-line solution.

Consider a version of the game where Spoiler presents points without rep- resentation. In other words, Spoiler has to present 2+2-free poset. Algorithm knows only relations between points. He has to assign a new point to a chain. This is an online chain partitioning problem of interval posets. The value of this game for width w posets is denoted by CPI(w). Kierstead and Trotter proved

Define < as the relation between tasks so that ti < tj if and only if tj needs data from output of task ti. It is easy to see that < is a partail poset on the set of tasks. The poset described by to the example is presented below.

Obviously the task t4 has to wait for the data from t2. However, the first of the solutions, forces t4 to unnecessarily wait for the processor p1 to finish task t1. The second solution avoids this unnecessary delay. Thus, if jobs scheduled to a processor form a chain we do not waste time, reaching an optimal solution. Using poset diagram, we may present the solutions 1 and 2 as follows.

Now, define an online chain partitioning problem corresponding to this scheduling problem. Again, Spoiler presents an upgrowing poset. Algorithm may cover new point x by some non-empty set of chains and than during covering next points he may remove some chains from x. But for each point x there must be at least one chain covering it at any moment of the game. This problem was stated by Felsner in [3] and it is called an adaptive chain covering problem of upgrowing posets. As for previous games (problems) we define the value of the game for posets of width w and we define it by ACP U (w) The natural upperbound for ACP U (w) can be obtained immediately from Theorem 2.1:

