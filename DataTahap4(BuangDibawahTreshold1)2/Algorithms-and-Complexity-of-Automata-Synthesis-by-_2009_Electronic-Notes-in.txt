Composition of services is necessary for realizing complex tasks on the Web. It has been characterized either as a plan synthesis problem or as a software synthesis problem: given a goal and a set of Web services, generate a composition of the Web services that satisfies the goal. We propose algorithms for performing automated Web service composition. We also examine the composition of services from the perspective of computational complexity.

The development of service oriented architectures for implementing distributed soft- ware systems demands that organizations make their abilities accessible via the In- ternet through Web service interfaces. The web services are published using Web service standards like WSDL [3] or the abstract WS-BPEL [2,15]. In most cases, Web services are nothing more than elementary components in a client-server ar- chitecture. Their importance lies in the fact that we can compose them to create complex business processes, using Web service standards like concrete WS-BPEL [2] and WS-CDL [14,23]. The WS-CDL is used to specify the choreography between

The section-by-section breakdown of the paper is as follows. Section 2 recalls the notion of finite automata and establishes the concept of Web service. In section 3, basic definitions are given and preliminary results are proved. These definitions and these results will be used in great depth in the remaining sections. Section 4 intro- duces the composition problem: given a goal and a set of Web services, generate a

composition of the Web services that satisfies the goal. In section 5, we examine the composition of services from the perspective of computational complexity. Two ways of solving the composition problem are presented in section 6. In section 7, we talk about some open problems.

composition of the Web services that satisfies the goal. According to [21,22,25], goals are conditions on the behaviour of the composition that can be expressed in the EaGLe language. In this approach, service composition boils down to the task of combining and coordinating the available Web services into a complex busi- ness process satisfying the given condition. According to [5,6,9], goals are finite automata with input and output, i.e. Web services as defined in section 2.4. In this approach, service composition boils down to the task of combining and coordinating the available Web services into a complex business process that can simulate the given finite automaton with input and output. In this paper, we automate compo- sition as defined in the second approach. This brings us to the following decision problem:

