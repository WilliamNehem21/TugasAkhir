This paper presents an extension of a methodology that we have introduced recently to analyze Dynamic Fault Trees (DFT). The failure time distributions of the components are obtained from measurements leading to discrete failure time distributions. The gate outputs in a DFT are numerically analyzed from the input failure time distributions. This paper presents one major extension in which maintenance operations are considered such that some components are replaced by new ones to increase the availability of the system.

Fault Trees are composed of a set of leaves which model the system components and some gates whose inputs are connected to the leaves or to the outputs of other gates. The value of the leaves is a boolean which is True, if the component is down, and False otherwise. The whole topology, when there is no replicated events, must be a tree. The root of the tree is a boolean value which must be True when the system has failed. The fault trees contain 3 types of gates: OR, AND and K/N (K out of N, or voting) gates. All of them are logical gates which are not needed to be presented here.

FDEP. The FDEP gate has one main input connected to a component or to another gate and it has several links connected to components. When the main input becomes True, all the components connected by the links become True, irrespective of their current values. If a DFT contains a FDEP gate, its topology is not a tree anymore.

The DFT is represented by a function F (the so-called structure function [8]) which returns True when the system is down and False when it is operational. It is the value carried by the root of the DFT. The analysis of the DFT consists in computing the value of the structure function from the initial time (i.e. 0) up to

As in [6], the component failure time is assumed to follow a discrete distribution. We directly use the experimental distributions obtained from the measurements as an input for the reliability of the system components without any fitting to theoretical models. It was shown in [6] how to compute the reliability of the system with some numerical algorithms associated with the gates and a global bottom-up numerical procedure. This work extends this approach to include the rejuvenation of some components with an external maintenance process. Even if there are some works in the literature on evaluation of DFT when the components can be repaired (see for instance [10]), the rejuvenation was not included in the DFT representation. Indeed there is no description of maintenance or repair in the normalized description of a DFT (see [16]).

The paper is organized as follows. Section 2 presents the algorithms to compute numerically the failure time distribution of a DFT or a stochastic bound of this distribution. Section 3 shows how the method can be adapted to consider rejuve- nation of some components. In both sections some examples are given to illustrate the methodology. Section 4 is devoted to two examples taken from the literature.

Unlike most of the models in the literature, our model is not state-based and we do not assume exponentially of the transitions to build a Markov chain. Instead, following [6] we model the distribution of the time to failure of the components with discrete random variables taking values in R+. dX will denote the probability mass function (PMF) of random variable X and HdX = {i : dX (i) > 0} will denote the support of distribution dX .

Let us now evaluate a simple DFT with a tree topology. This algorithm can also be used to evaluate a subtree. Note that various subtrees will be used in the following to deal with PAND gates, replicated events or maintenance agents.

When some events are replicated, we cannot assume independence anymore among the input distributions of a gate. Thus, we have to condition on the fail- ure times of the replicated events and use the total probability theorem to get the availability. We call the set of replicated leaves the conditioning set. Let nR be the number of time instants in the joint distribution of the replicated events. The probability that the system is operational at time t conditioned on the failure in- stants of the replicated components is computed with Algorithm 1. However, we have to compute nR such conditional probabilities before computing the reliability. To avoid unnecessary computation, we only consider conditional probabilities when needed. Clearly, it is sufficient to consider a subtree containing all the replicated leaves. Better strategies exist (see [6]).

Therefore, if during the evaluation of a gate, its input distributions are replaced by their stochastic bounds, a stochastic bound of the output distribution can be obtained. This property is extremely important to avoid that the sizes of the dis- tributions become too large during the analysis. Let us consider an example to illustrate the problem.

As most of the gates (except the PAND and SPAND gates) are stochastically monotone, it can be proved that Algorithm 4 provides stochastic bounds for the reliability of a system modeled by a DFT [6]. The size of the bounding distributions is limited to n. Algorithm 4 prevents the bounding of any internal distribution in the subtree rooted with a PAND or SPAND gate which must be evaluated first.

Definition 3.2 A leaf u is said to be static if along all the paths in Pu, all the gates are static (i.e. Gu is empty). A leaf u is said to be dynamic if there exists at least one path P (u) which contains at least one dynamic gate.

Lemma 3.5 Let g be a dynamic gate. After a maintenance by a dynamic-compliant agent at time ti, the distribution of the output of gate g remains the same (if the leaves in the subtree rooted in g are not replaced) or is shifted by ti (if the leaves are replaced).

Proof. Consider the leaves in the subtree rooted in g. As g is dynamic and the agent is dynamic-compliant, the leaves of the subtree are all replaced or none of them are replaced. In the first case, as all the components of the subtree are new at time ti, the initial distribution of the time to failure for g is now shifted by ti. In the other case, the distribution of the time to failure for g remains the same.  2

In order to derive bounds for the systems with maintenance, we assume that the maintenance dates are the same for the original and the bounding models. The anal- ysis of the DFTs with rejuvenation can be done through Algorithm 5 by analyzing a DFT without rejuvenation between consecutive maintenance dates. Therefore by considering bounding systems in each time interval, a global bound can be com- puted for DFTs with rejuvenation. Note that it is not necessary to use the same size parameter for each time interval.

We assume that the maintenance agents act on the components of module S4 (application/interface module). The mission time is fixed at instant MT = 500 and it will be assumed that EoT = 501. Let d1, d2 and d3 be the respective failure time distributions of components C1, C2 and C3. We consider two maintenance agents. Agent 1 acts on components C1 and C3 by replacing both of them by new ones at instants t1 = 200 and again at t3 = 400. Agent 2 replaces component C2 at instant

(B) CPU units are subject to the common failure coming from the trigger unit (OR gate). The failure of the crossbar switch (CS) or the system supervision (SS) triggers the fault making the CPU unit out of work (CPU FDEP). In the motor section, primary motor unit MA has a cold spare MB which can be activated by means of the switch MS. Due to the PAND gate, if MS fails before M A, the motor unit fails when MA fails. On the other case, since the MB has been already turned on, the failure of MS is not taken into account, and the motor unit fails due to the failure of the MB. There are two primary pumps PA and PB sharing a cold spare PS. The pump system and thus CAS system become unavailable when all pumps become unavailable.

