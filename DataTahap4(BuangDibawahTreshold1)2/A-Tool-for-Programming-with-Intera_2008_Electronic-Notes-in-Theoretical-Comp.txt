This paper introduces INblobs, a visual tool developed at Minho for integrated development with Interaction Nets. Most of the existing tools take as input interaction nets and interaction rules represented in a textual format. INblobs is first of all a visual editor that allows users to edit interaction systems (both interaction nets and interaction rules) graphically, and to convert them to textual notation. This can then be used as input to other tools that implement reduction of nets. INblobs also allows the user to reduce nets within the

Section 2 reviews Interaction Nets. In Section 3 an overview of INblobs is given; Sections 4, 5 and 6 then describe in detail specific functionalities of the tool. Sec- tion 7 briefly describes the front-end on which INblobs is based. Section 8 concludes the paper.

The ports of agents where there is no edge connected are called the free ports of the net. The interface of the net is the set of its free ports. There are two special instances of a net: a wiring (a net containing no agents, only edges between free ports), and the empty net (containing no agents and no edges).

The 0 and S agents are used as constructors, where the principal port corre- sponds to the constructed term and the auxiliary ports to the constructor argu- ments. The + agent on the other hand plays the role of a function, which imple- ments addition by recursion on its first argument (connected to its principal port). Auxiliary ports correspond to the second argument and to the result.

INblobs is an integrated development environment: it is possible to alternate reduction steps with editing steps (on both the Interaction Net system and the net being reduced itself). This alternate is extremely useful for fast prototyping of new Interaction Net systems. To facilitate this, reduction works directly on the underlying representation of the net used by the visual editor (see Section 3).

Integrate in the current net N a copy R of the right-hand side of the rule. This is done by adding to the two intmaps of N the information of the intmaps of R, after updating the indexes of the nodes and edges in R (all indexes should be fresh with respect to the current net). This copy is for now disconnected from the net.

Blobs is a (visual) editor for directed graphs, implemented in Haskell using the wx- Haskell library. Blobs was produced by a team integrating the authors of Dazzle [8], a Bayesian network editor, who realized that its front-end could be helpful to other completely different Haskell projects. This front-end has been extracted from Daz- zle, and made available (with some added features) to the functional programming community.

The representation of graphs inherited from Blobs is adapted to contain informa- tion specific to Interaction Nets. The agent intmap associates to each node, apart from the same information as in Blobs, information relative to its ports (such as whether the port is the principal port or not, and geometric information regarding the placement of the ports in the node). The edge intmap also associates to each edge new information, namely the ports to which it is connected in each agent.

Alternatively, use the rule creation wizard. Pressing this button will make a dialog appear where the two agents that will interact can be chosen. The wizard will automatically generate the left-hand side of the rule. It is also possible to choose what is generated in the right-hand side of the rule:

