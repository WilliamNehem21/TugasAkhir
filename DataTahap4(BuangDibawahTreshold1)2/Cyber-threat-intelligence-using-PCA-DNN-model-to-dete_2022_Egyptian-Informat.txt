The major challenge facing computer science at this juncture is to protect and secure data from risks, as well as to protect it (and its genuine users) from malicious attacks. In-depth defense, such as multifactor authentication and the building of secure systems, does achieve protection, but it cannot detect whether a company is experiencing a zero-day attack or not. Furthermore, as well as avoiding attacks, systems must protect and gather data as evi- dence, as well as generally employing existing solutions such as firewalls, encryption, and intrusion detection systems. However, there are two essential problems with the existing solutions:

Jalil et al. [15] compared the efficiency of different AI approaches (such as neural networks (NNs), SVM, and DT-J48 algo- rithms) based on different metrics (detection rate, false alarm rate and accuracy) using a well-known dataset called a KDD-cup data- set. The experiments concluded that the DT-J48 algorithm outper- formed the neural network and support vector machine (SVM) algorithms.

Hamid et.al [26] examined several approaches (rule-based, base rule, functions, lazy learners, tree, meta-algorithm, and input mapped classifier) using Weka tools and the KDD Cup 1999 data- set. The comparative analysis was based on several metrics (accu- racy, recall, precision, F-measure, TP rate, TN rate, ROC area, kappa statistic, and mean absolute error). The authors used this approach both fully and with the reduction of features, proving that classifi- cation methods do not need all features, but the main limitation in this research is the limited amount of data.

Haripriya and Jabbar [27] examined various machine learning algorithms (supervised and unsupervised, reinforcement learning, etc.). The authors used method, dataset, and metrics to compare between ML approaches, but they did not study other approaches, such as fuzzy logic, ant-colony, and deep learning.

behavior of other attacks. The second limitation was that it did not mention the number of features that were input into the model, nor did it determine the continuous or categorical data. Further- more, the optimization phase did not give details on parameters such as the optimization function, and the preprocessing was per- formed via black box. Furthermore, the authors did not say whether the data were normalized or not, how they dealt with missing and categorical values, or anything about whether the data were balanced or not. Additionally, the model suffers from overfitting.

This paper presents a hybrid method for evaluating network behavior throughout the intrusion detection process, combining supervised techniques (DNN), unfiltered measurements (PCA), and statistics measures to increase the accuracy of detection of stealth attacks. Moreover, the Canadian Institute of Cyber Security (CIC) provided the CSE-CICIDS2018 Dataset, which has only been used by a few researchers as of the time of writing [31]. This data- set is used at the flow level, and statistical measurements of the flow level features are collected. The proposed method offers a basic solution to the problem of volumetric attack mitigation in the context of attacks such as DDoS, HTTP, and floods.

Although various standard datasets are widely available, many of them include offensive, non-modifiable, outdated, and non- reproducible attack scenarios [32]. In an effort to solve these short- comings and create more modern traffic patterns, the CSE-CI-UNB dataset was developed by [31]. The correctly marked CSE-CI-IDS 2018 dataset exhibits real network behavior and includes a variety of intrusion scenarios. In addition, it is distributed as a complete network set with all internal paths to evaluate the loads for pre- packet inspection.

The adapted dataset includes ten days of normal and malicious network activity. The dataset was produced from two files contain- ing abstract images of events and activities in the network. For example, communication between the source and the receiver host can be visualized over HTTP through packets sent or received and endpoint properties. This imaging creates one profile. These pro- files can provide real data for protocols such as FTP, POP3, IMAP, SMTP, SSH, and HTTP [31]. Agents or individual users can use them to inject different situations into the network. In order to revitalize network activity for premium applications by changing these pro- files, personal files are also exchanged with real school datasets.

In this attack, a large number of infected devices called zombies are connected to each other under a CC Empire. Typically, these hosts are infected by malware. When the CC launches an order, the whole army participates in the attack; usually, these bots are used in DDoS and cryptocurrency mining and distributed process- ing [33].

The network testbed architecture comprises 500 machines divided into five separate LANs for building a realistic network topology, namely: Department of R&D, Department of Manage- ment Department of Technicians, Secretary and Department of Operations, Department of IT, and database spaces. In this dataset, the authors deployed lists of different Microsoft operating systems, such as Windows 8.1 and 10, for all organizations except the IT department; all devices in the IT department are Linux OS. Various MS Windows servers, such as 2012 and 2016, were implemented for server farms [31]. Despite the various hacking scenarios in the real-life network, there are some limitations to this dataset. For example, a large portion of the IP packets generated by data management and network monitoring operations are un-named and anonymous. Additionally, when flow records are retrieved from the dataset, some streams are found to contain infinity and NAN values.

This section describes the methodology of the proposed model architecture. Firstly, a summary of the workflow of the system is presented, with a brief description of the architectural models (i.e., PCA and DNN) that inspired our multi-layer architecture. The proposed architecture and its implementation are subse- quently described. As previously stated, this research proposes an anomaly detection system that analyzes flow-level traffic and cap- tures attacks. The proposed system combined four well-known techniques:

Network traffic information is often collected in the form of ini- tial packet capture (PCAP) in network switches or routers [5,35]. PCAP information includes full TCP/IP packet data sent or received on a specific network computer. While in some cases full packet capture information may be useful, this has a high storage cost.

The main difference between the CIC IDS 2018 dataset and the ISCX IDS 2012 and CIC IDS 2017 datasets [42] is the number of classes and network flow features available compared to the ISCX IDS 2012 and CIC IDS 2017 datasets. The ISCX IDS 2012 dataset has 14 total features, while the datasets labeled CIC IDS 2017 and CSE CIC IDS 2018 have 81 available features each. These addi- tional features consist primarily of comprehensive flow statistics and packet information calculations for each flow created using the CICFlowMeter open source tool.

Once the data are in the form of flow data, the further cleaning, conversion, and preparation of the data for use as input into the deep learning algorithm are performed. This step includes tasks such as making sure that the data do not contain invalid characters, removing fields with empty values, removing or changing values (not the number), and removing duplicate columns. The main rea- son for preprocessing is that the data are in different formats and are collected from different locations; it also ensures the accuracy and effectiveness of the model being trained on this data.

DNNs are amongst the most commonly used machine learning approaches. They can reverse increasingly complex functions by merging more layers and more units per layer into a neural net- work [41]. A DNN can be used to identify normal and malicious traffic patterns hidden within large quantities of structured data.

The well-known technique of PCA is a mathematical procedure that uses orthogonal transformation to convert a set of observa- tions of possible associated variables into a set of non-linearly related variable values, called principal components. PCA is applied primarily in dimensionality reduction. It is a non-supervised pro- jection method that can translate from a complex larger area to a smaller new area with minimal information loss [46]. If the origi-

In this section, a DNN technique with and without dimensional reduction (PCA) applied to the CSECICIDS 2018 dataset will be briefly summarized. The experimentations were conducted on a 64-bit Windows 10 PC with 16 GB RAM and 2.60 GHz CPU, and deep learning was performed using Python 3.7.3 and Numpy 1.16.2.

sumption was calculated in this experiment, as this is a fundamen- tally important factor. This involves checking how fast the different codes and algorithms are running using a timestamp provided by the training computer. It was expected that binary results would take less time to generate than multiclass results because of the lower number of classes available for identifying the samples.

which achieved 98% as well. Therefore, training a DNN by omitting features allows it to identify the source, destination, traffic type, etc., and give it statistical and network features. It will save costs in the training phase; hence it may be usable in a pre-trained model, of a kind not seen before.

This paper addressed the challenge of detecting attacks in a huge network. We have implemented, designed, and developed a hybrid model for anomaly detection in large networks, particularly in cloud environments. Because of the volume of data involved in modern networks, high-speed processing at the packet level can be very expensive. Our system analyzes network traffic at the flow level (rather than single-packet information) to cope with this issue. The proposed model has been validated by detecting real

