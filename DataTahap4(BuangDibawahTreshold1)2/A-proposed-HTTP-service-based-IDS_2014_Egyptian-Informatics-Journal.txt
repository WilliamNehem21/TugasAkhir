These days, most of the universities, organizations and compa- nies provide their services through a computer network and Internet technologies; therefore, most of their tasks are accom- plished using web-based applications. However, the attackers could have exploited the Internet to break into the local net- work to gain the confidential information or to compromise the network resources. Some security tools such as firewalls, anti-virus software and Intrusion-Detection Systems (IDSs) are used to protect the network and to thwart hackers. IDSs are used to monitor network traffic to detect the intruder

IDS based on integration of Snort and Bayes theorem is proposed to be implemented in the cloud environment [6]. In this IDS, the packets are captured from the network, then Snort checks these captured packets using the signature based detection technique; suspicious packets are stored within the log database; other packets are checked again, based on the behavior Bayesian classifier identifies intrusion packets and normal packets. Intrusion packets are logged in the alert data- base while normal packets are allowed in the system as legiti- mate packets. This IDS achieves 96% detection rate and 1.5% false positive rate. As it uses two successive filtering tech- niques, it may cause processing overhead, which increases de- lay, however, in my opinion, this delay can be reduced by parallel execution of both filtering techniques using parallel programming.

the probability of A to belong to Cj is the largest probability. The network connections could be classified as normal or as attack events, in this case, there are only two classes: class C1 and C2, and the IDS could classify the connection as nor- mal or attack connection without identifying the type of at- tack. In addition, the classification process may produce several classes, one class for normal connections and one class for each attack type; therefore, the IDS could identify the type of attack.

13, 14, 15, 17, 18 and 19 are excluded after step 0). Further- more, the records that cause FP or FN are excluded (for exam- ple, example 344 normal records that cause FP are removed after step 2). After step 20, the FP = 0 and the FN = 0; there- fore, the training phase ended and the resultant data set is used as training data set in the testing phase in step 21. The training data set includes only 20 features after training phase. In the testing phase, the testing HTTP data set with the same 20 fea- tures is used in testing command to check the performance of

In this paper, the IDS based on Naive Bayes classifier is ana- lyzed, NSL_KDD data set is used to train and test the IDS, it achieves about 37% FN and 6.6% FP. The first proposal to enhance the IDS performance is preparing the training data set such that it could achieve 100% IDS performance. After applying the IDS for a testing data set, the performance has been improved, the FN is about 24%, and the FP is 4.61%. The target of the second IDS proposal is to improve the per- formance and to reduce the number of features by selecting only the most important features that characterize each attack type and normal connections, in addition it proposes to clas- sify the data set based on services. In this paper, the IDS aims to detect malicious connections that exploit the HTTP service;

