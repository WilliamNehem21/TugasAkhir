Modelling of business processes and workflows is an important area in software engineering. Business Process Modelling Notation (BPMN) allows developers to take a process-oriented approach to modelling of systems. In our previous work [16] we have given an abstract syntax using Z [20] and an untimed process semantics in the language of CSP [14] to a subset of BPMN [12]. However, due to the lack of a notion of time, this semantics is not able to precisely model activities running concurrently when temporality becomes a factor;

The rest of this paper is structured as follows. Section 2 gives an introduction to BPMN; an introduction to CSP [14] and Z [20], which are used throughout this paper, is given in the Appendix. In Section 3 gives an overview of our syntactic description of BPMN. Section 4 describes briefly our relative timed semantics. In Section 5 we show some properties relating the timed and untimed models based on CSP refinements, and revisit the example to show how the relative-timed model

one outgoing transition. It takes a unique name for identifying the activity. In the environment of the timed semantic model, each atomic task must take a positive amount of time to complete. A bpmn state describes a subprocess state. It is a

We have implemented the semantics described in this paper as a prototype tool us- ing the functional programming language Haskell. Readers may find a copy of the implementation from our web site 3 . The tool inputs a XML serialised representa- tion of BPMN diagram from the JViews BPMN Modeler [9], enriched with timing information as custom properties, and translates it into an ASCII file containing CSP processes representing its behaviours expressed in machine-readable CSP [14].

The following are some results of the timed model. We say a diagram is timed if it contains timing information and untimed otherwise; every timed diagram is a timed variant of another untimed diagram, i.e. an untimed diagram augmented with timing information. Below is an intuitive property about timed variation.

Definition 5.11 Characteristic Participant. Given the time-compatible class cp of some participant p, specified in some environment l , for some collaboration c, the characteristic participant of cp, specified by a pair of name and the environment, is given by the function charT applied to cp.

not be directly applicable to the business process developers whereas our definition captures the six-dimensional space defined by W3C standards [21, Section 3.2.6]. Also unlike BPMN, their target graphical notations and hence their semantic models are not designed for analyses of collaborations where more than one diagram is under consideration. Furthermore, our semantic model has been defined in correspondence to our earlier untimed model [16] so that timed-independent behavioural properties may be preserved across both models.

The Z notation [20] has been widely used for state-based specification. It is based on typed set theory coupled with a structuring mechanism: the schema. A schema is essentially a pattern of declaration and constraint. Schemas may be named using the following syntax:

