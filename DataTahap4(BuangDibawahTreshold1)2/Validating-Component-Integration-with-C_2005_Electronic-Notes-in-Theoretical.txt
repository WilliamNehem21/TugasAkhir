[1], [7]. These formal methods are typically used for describing properties of invariance, precedence amongst events, periodicity, liveness and safety condi- tions, etc. For this purpose, several temporal logics have been used [1], or timed state machine, Petri Nets, etc. When the system under specification is not trivial its specification needs to be performed by decomposing the prob- lems in smaller segments or components devoted to solve specific identified sub-problems [10], with the aim of obtain the whole system for composition.

The approach proposed in this paper is based on TILCO (Temporal Logic with Compositional Operators) and its compositional version called C-TILCO. Please note that C in TILCO acronym is referred to the composition of tempo- ral constraints. TILCO presents a uniform model for time from past to future and unique operators for stating facts and events along the time axis [8], together with extended temporal operators (TILCO-X) [5] and process com- munication support (C-TILCO) [4]. The process communication of C-TILCO allows to specify a complex system by decomposing it in several processes and it allows to model inter-process communication between them. TILCO lan- guage can be directly executed, such executability consists in using the spec- ification as an implementation of the real-time system, thus allowing (in each time instant) the on-line generation of system outputs on the basis of current inputs (including those concerning communication) and internal state. In this sense, TILCO-Executor, presented in [3], can execute a fragment of TILCO specifications.

In C-TILCO many instances of the same process component specification can be arranged in the global architecture. Processes can have some parame- ters and every instance has its own distinct values. The communication among processes is based on a CSP like typed synchronous input/output ports con- nected through channels. The connection is 1:1, each output port is connected to at most one input port and vice-versa.

The system is realized in terms of communication nodes; over each one a higher level communication interface is typically connected. These nodes perform only simple data communication and protocol management. The token is considered as boolean and it is transmitted over a dedicated channel. The message is treated as a structured type that includes the origin and the destination node ID.

In these formulas, a failed attempt of communication on a broken channel is recovered using the backup ring; if both channels are broken the node cannot communicate anymore. Two different predicates can determine the ready state after a successful transmission (readyForT okenA, readyForT okenB) on one of the available channels. It has to be noticed that a broken channel will freeze the port on the send state, waiting forever for the remote synchronization.

The synchronization between the connected ports n1.sendT oken and n2.recT oken activates n2.transmitT oken; the broken channel condition en- ables the trasmission of the token on the n2.sendT okenBack port. The con- nected port n1.recT okenBack, which was waiting for a synchronization can propagate the token in the backup ring.

