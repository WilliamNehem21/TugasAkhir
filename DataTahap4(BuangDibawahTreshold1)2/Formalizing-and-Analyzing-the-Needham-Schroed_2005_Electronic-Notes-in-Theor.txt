In [31] the strategy has been applied to the typical first case study of proto- col verification, i.e. the Needham-Schroeder Public-Key protocol [29] (NSPK for short), for reasoning about the authentication and secrecy properties. Our experimentation on both the insecure and the corrected versions of the NSPK has shown that the strategy is able to detect the attacks in the insecure version and derive that the properties hold for the corrected version of the NSPK.

The protocol must guarantee the secrecy and the freshness of KAB as follows: at the end of a protocol session, KAB should be known only to A, B and S, and A (resp. B) should believe that B (resp. A) has the same key KAB created by S in the current session of the protocol. If B accepts the message at step (5), then KAB has been sent by A in step (3) (authentication).

In fact, when defining the rewrite system RP , we have tried to single out some general guidelines to formalizing the protocol steps. They can be summarized as follows. The left hand side of the first rule is of the form goal(agt(a), agt(b), r(j)). The left hand side of a rule, whose root is mesg,

satisfied. Moreover, by going up along the critical pairs we get to know which terms have been previously (in the completion process) recognized by the in- truder, thus getting some feedback on the error location. This strategy is similar to a rewriting strategy defined in [20,21] to deal with the problem of divergence of the completion process, where the bottom-up strategy allows one to compute the normal form of a term with respect to the infinite canonical rewrite system.

Inst is a parameter of the strategy and is built as follows. The terms that can instantiate the variables in the trs for the NSSK are constructed based on the function symbols in the given signature, the names of principals (the server and the agents with their labels), the numbers for denoting the intruders and the protocol runs. We are interested in the behaviour of two agents A and B, a server S and an intruder (represented by agt(0)) while running two protocol sessions, typically chosen as r(0) and r(s(0)). Thus, it is sufficient to take

We assume that the properties to be proved or disproved on a protocol are described by well-formed terms in the sense above. Moreover, during the expansion phase of the strategy, only well-formed terms will be considered and the non-well-formed ones will be cut out of the search space. This might be not enough for ensuring the termination of the expansion process (see, for example, the expansion process with the trs for the NSPK in [31]). The predicate of well-formedness is a parameter for the strategy: whenever other protocols and/or different properties are considered, the definition of the well- formedness of terms might have to be changed accordingly. For the insecure NSSK we give the following definition.

The task of formalizing a protocol by means of a rewrite system may be difficult and error-prone. Choosing variables rather than non-variable terms in some positions of the left (right) hand side of a rule may prevent from deriving certain behaviours of a protocol. Our formalization for the NSSK might appear as an ad-hoc encoding. Actually, we have tried to abstract some criteria to help defining, in particular, the rewrite system RP and improving our understanding of a protocol. Our aim is now to check whether these criteria can be applied to other symmetric-key protocols and possibly to other classes

We also need to test our strategy on other protocols and properties, and show its generality and independence of the security protocol under consider- ation. Note that, when moving from the NSPK to the NSSK, the verification strategy has remained unchanged with respect to its definition in [31]. We are currently working on the Otway-Rees protocol, its formalization and the application of the strategy on it. We are also considering the implementa- tion of the strategy using a more expressive strategy language, e.g. the one of the ELAN system [12], or a theorem proving environment. In general, our strategy can be implemented in any verification tool, which is based on the symbolic manipulation of the representation of systems and properties and is provided with a language of tactics and strategies. 5

