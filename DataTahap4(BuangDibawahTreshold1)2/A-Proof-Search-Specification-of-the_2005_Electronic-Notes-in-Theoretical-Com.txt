We use the notation P, Q, R, S and T to denote processes. Names are denoted by lower case letters, e.g., a, b, c, d, x, y, x. The occurrence of y in the process x(y).P and (y)P is a binding occurrence, with P as its scope. The set of free

We consider specifying two notions of bisimilarity, tied to the late transition system: the strong late bisimilarity and the strong open bisimilarity. As we shall see, the essential difference between the specification of late bisimulation and that of open bisimulation is in the presence (or the absence) of the ax- iom of excluded middle on names. The original definitions of late and open bisimilarity are given in [27,38]. Here we choose to make the side conditions explicit, instead of adopting the bound variable convention in [38].

The main issue for implementing proof search with this specification of late bisimulation is to determine at what instances we should make instances of the excluded middle: answering this question would then reduce proof search to one similar to open bisimulation. There seems to be two extreme approaches to take: at one extreme, we can take instances for all possible names that are present in our process expressions: determining such instances is simple but might lead to many more cases to consider than is necessary. Another approach would be more lazy in that we would suggest an instance of the excluded middle only when there seems to be a need to consider that instance. The failure of a defY rule because of a mismatch (at the meta-level) between an eigenvariable and a constant would, for example, suggest that excluded middle should be invoked for that eigenvariable and that constant. The exact details of such schemes is left for future work.

