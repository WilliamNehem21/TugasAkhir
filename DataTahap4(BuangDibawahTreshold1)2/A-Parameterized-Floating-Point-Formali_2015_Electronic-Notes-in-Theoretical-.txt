Programmers need tools that calculate error bounds and automate the tedious and error-prone reasoning involved in proofs of correctness for their floating-point algo- rithms. They follow the IEEE 754 standard because most hardware and software libraries support it and provide fast implementations with multiple levels of preci- sion. As examples of adoption of this standard, four levels of precision are available on Intel CPUs [13] and three on Nvidia GPUs [2], and decimal floating-point num- bers are in a package developed by Cornea, et al. [7].

We model IEEE floating-point numbers as a subset of R. Subnormal numbers and zero are represented using a set of real numbers that are a fixed distance apart (fixed- point numbers). Normal numbers are represented using a subset of an infinite set of real numbers that are varying distances apart (floating-point numbers). Finally, we take any real number whose magnitude is above a carefully chosen threshold to be floating-point infinity. We do not model signed zero or NaNs. Each set is explained in more detail in the following sections.

In this work, we presented a new formalization of fixed and floating point that is part of the current HOL Light distribution. We believe that this public release of a HOL Light theory for floating point will enable the HOL Light community to work in their familiar framework, without having to resort to cross theorem-prover analysis which is currently not very well supported or developed. We also plan to investigate round-off errors in floating-point computations to obtain tight upper bounds on round-off error in a separate project. We plan to employ our work in that project for checking proof certificates of the reported error.

