This paper develops a truly concurrent semantical approach, whereby concurrency is notionally independent of nondeterminism, that allows describing the deterministically concurrent behaviour of recursive processes accessing consumable resources. The process semantics is based on the new coherently complete and prime algebraic domains of real and complex multi-pomsets. The process language that we study contains several deterministic quantitative process operators, namely a renaming, a hiding, a restriction, a serial and a parallel operator, as well as a recursion operator. The displayed deterministic structural operational ma- chine engenders a linear and a complex operational semantics. A compositional denotational semantics is constructed, which uses a functional domain over environments of complex multi-pomsets. The robustness of the presented semantical work is established by proving that the denotational semantics is fully abstract with respect to both linear and complex operational semantics.

However, to our knowledge, the only truly concurrent semantical approach that has actually developed an operational and a matching denotational programming semantics, allowing for finitary process combinators, as well as recursion, originates in the work of Diekert & Gastin [2], Gastin & Teodosiu [5] and Gastin & Mislove [4]. The underlying denotational models are the pomsets advocated by Pratt [9] which, although being particular event structures, allow to simply express truly concurrent process combinations. Its intuition is based on the appealing interaction between processes and resources in any environment, a paradigm also driving the applied work in computer science of the last decades. One should also note the related work of Pym & Tofts [10] presenting a truly concurrent algebra and logic of processes and resources for a number of process combinators including choice.

The paper is structured as follows. Section 2 recalls basic facts about partial orders. Section 3 introduces the domains of real and complex multi-pomsets. Section 4 presents the process language and defines the consumption semantics. Section 5 displays a deterministic structural operational machine, which engenders the linear and complex operational semantics. Section 6 is devoted to the compositional deno- tational semantics using a functional domain over environments of complex multi- pomsets. Section 7 presents the main results of congruence and full abstraction of the denotational semantics with respect to both linear and complex operational semantics.

The multiplicity attached by an action to a resource measures for instance the time consumed. The notion of time may just as well be replaced by amount, while the term consumed may be replaced by produced. If, for example, R = {A, B, C} then an action consuming respectively 3.5, 5.7 and 7.3 time units of A, B and C is denoted by the multi-set 3.5A + 5.7B + 7.3C. Concrete examples might come from computer science (an action consuming 5 processor, 10 channel and 2 memory time units) or workflow management (an action consuming 100 man, 5 tool and 10 object time units).

The following presentation of the parallel composition is a generalization of the one treated in [4]. The parallel composition is indexed by a set of channels that processes are supposed to employ in order to synchronize. Events accessing the channels are commonly processed by the compound processes, while events which make no use of the channels may be independently processed by each compound process. This construct may in particular be used to model data-parallel programs running on PRAMs.

We developed a truly concurrent semantics that allows describing the concurrent behaviour of recursive processes accessing consumable resources. We first presented the coherently complete and prime algebraic ground domains of real and complex multi-pomsets. The modelled process language contains several deterministic quan- titative process operators as well as a recursion operator. Next, we displayed a deterministic structural operational machine that is straightforward to comprehend and allows extracting a linear and a complex behaviour. We then constructed a compositional denotational semantics using a functional domain over environments of complex multi-pomsets. The main results have finally shown that the denota- tional semantics is fully abstract with respect to both linear and complex operational semantics.

The only operator customary in classical process languages [7,8] that has been intentionally left out in ours is the non-deterministic choice. We think that using power-domains over complex multi-pomsets provides a clear way of handling choice at the expense of rendering the domain-theoretic tools more involved. Another possibility to achieve the same result could reside in enriching real multi-pomsets with a further relation on events expressing conflict of choices, thus imposing a modelling view closer to event structures.

G. Winskel. Event Structures. In W. Brauer, W. Reisig, G. Rozenberg (editors), Petri Nets: Applications and Relationships to Other Models of Concurrency, Advances in Petri Nets 1986, Part II; Proceedings of an Advanced Course, Bad Honnef, September 1986, Lecture Notes in Computer Science 255, pages 325-392, Springer, 1987

