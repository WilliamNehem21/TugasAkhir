the linear systems LN and LN, and in Section 4 we demonstrate that we can encode all the primitive recursive functions in these calculi. In Section 5 we show that System LN goes considerably beyond this class of functions. Finally we conclude the paper in Section 6.

which correspond to closed function (cf ) and closed argument (ca) respectively. In both cases, there are a number of variants that lead to calculi with different properties. Substitution is taken to be explicit in these systems (see [5] for more details).

Proof. (Sketch) By structural induction on t, showing that reduction preserves the variable constraints on terms. Note that the only reduction rules that copy or erase terms are the rules for iterators, which either copy or erase the iterated function. However, because of the condition that the iterated function must be closed when constructing the term iter t u v, then reducing an iterator will either copy or erase a closed term. Therefore the set of free variables is preserved and the term obtained is valid.	 

