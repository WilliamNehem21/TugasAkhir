Notice that, in this program, the instruction x:=1 is persistent in the sense that it commutes with all possible instructions running in parallel with it (forming the second process). Without loss of generality, we might thus suppose that it is executed first and we are left to verify that the program x:=1;(y:=2|y:=3;z:=4) is valid. This program gives rise to only three possible executions, compared to the six of (2): we can avoid examining the paths going through the states x01 and x02. Of course we can iteratively use this procedure to reduce the program further, which results in removing paths going through the state x12. This procedure, introduced by Valmari and developed by Godefroid [7], is called partial order reduction (por) and has lead to a wide variety of successful tools such as SPIN [14] (where the above mentioned persistent sets are complemented with other techniques such as sleep sets). These tools have been originally devised to optimize deadlock detection (and have been extended afterwards in various ways). Thus, we shall focus on deadlock detection, though the intended range of application is wider (full reachability will be detailed in future works); moreover, we shall mainly be concerned with acyclic systems, which is also a common restriction in techniques of partial order reduction (see for example [6]).

Even though there is a striking similarity between the notions of persistent sets and inessential paths, the relationship between the two has never been formally studied and the purpose of this article is to fill this gap, in order for partial order reduction and geometric techniques to improve each other and combine their potential to alleviate the state space explosion problem. As a result, we are able to show that, under fairly reasonable assumptions, persistent transitions are the algebraic counterpart of inessential paths. Despite the fact that the analogy is intuitive, it turns out that the theoretical comparison is sometimes technically involved. On a more practical side, a preliminary comparison, based on experiments, was started in [4].

In Section 1, we begin with a review of the models of computations used here to formalize persistent sets: labeled transitions systems with independence (ltsi), which are generalized into asynchronous transitions systems (ats). In Section 2, we conservatively extend the original definition of persistent sets from ltsi to ats, which are closer to geometric models, and show that they retain their fundamental reduction potential to prune the search space for deadlock detection. Finally, we develop in Section 3 a first conceptual link between partial order reduction and directed algebraic topology; in Theorem 3.10, we make precise in what sense persistent

Proof. If R is persistent, it is easy to show that Rj is homotopy persistent since if a transition label in R is independent with all transitions labels on the path, it is in particular compatible with the corresponding transitions (by Definition 2.8).

We have developed a conservative extension of persistent sets to asynchronous transition systems (Definition 2.5) that coincides with the original concept on ltsi (Proposition 2.13). This extension forms the base of our comparison of the partial order reduction technique and the geometric approach to state space reduction, since ats are the algebraic counterpart of geometrical models. In particular, we have shown that our definition retains the main application of persistent sets which consists in pruning the search for deadlocks (Corollary 2.15).

This section mainly concerns ats that are induced by ltsi. Thus, we will assume that we have normal tiles, i.e. in all atss that we consider, switchings are unique and pairs of co-final and co-initial transitions in each tile have different transitions as components.

