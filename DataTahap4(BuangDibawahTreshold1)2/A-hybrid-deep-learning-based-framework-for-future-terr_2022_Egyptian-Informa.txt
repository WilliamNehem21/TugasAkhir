Terrorism has led to massive humanitarian and economic crisis due to dire events that affected many countries and caused thousands of deaths and critical damages. In literature, various Artificial Intelligence (AI) based research works have been proposed and enhanced to counter and predict terrorist activities. Practically, Machine Learning (ML) techniques are the most applied. However, with the increas- ing of the complexity and volume of data, ML algorithms fail to detect and predict accurately terrorist activities. Thus, for understanding the behavior of terrorist actors, we proposed a hybrid Deep Learning (DL) platform based on Convolutional Neural Network (CNN) and Long Short-Term Memory (LSTM) models to learn the temporal features from the Global Terrorism Database (GTD) and to predict future terrorist activities characteristics. The GTD is a well-known database which contains around 190,000 terrorist events and incidents around the world since 1970 until 2020 and incorporates multiple factors, such as the type of weapons used, the attack is successful or not, the kind of attack, and the cat- egory of terrorist. First the CNN is used extract complex features of the data, and then these features are forwarded to LSTM model to learn the temporal relationship of the data. Simulation results show that the CNN-LSTM model achieves superior performance for bi-classification tasks which achieves an accuracy more than 96%, while the DNN outperforms the hybrid aforementioned model with accuracy of 99,2% the multi-classification task of predicting terrorist activities. The proposed model shows also a correla- tion between the occurrence of attacks with the type of weapons used and can accurately predict the type of terrorist attacks with their success rate.

As reported by the GTD, in 2019, 1,411 terrorist bombings had taken place, resulting in 6,362 deaths and severely disrupting pub- lic life [2]. Since its inception in the 1970s, significant texts on modern terrorism have contained numerous attempts to predict the future of terrorism. However, most of these efforts are unplanned and have no theoretical basis. The end of terrorist lit- erature is often plagued by a lack of formal thinking on how social change can produce different forms of terrorist and counter- terrorism, leading to persistent patterns of terrorism. It is usually based on observing events related to the addition from the same context while changing the contextual or fundamental elements

The paper is organized as follows. Section 2 describes related works to highlight recent advances in this topic and includes a benchmark to evaluate our results. Section 3 detailed the proposed hybrid DL framework and includes analysis and descriptions of the CNN and DNN algorithms used to forecast various aspects. The findings are presented in Section 4. Section 5 summarizes the find- ings and concludes the paper with future research directions.

Based on the literature review, we noticed that no single ML or DL based approach performs well with undependable manner in predicting terrorist activities for both bi-label and multi-label clas- sification tasks. For example, CNN based models are efficient for the image classification, and others DL techniques performs well in multi-label classification. However, these techniques still not sophisticated when the data size is highly complex and have non-linear features that cannot be learned using a single DL tech- nique. Indeed, these methods present a good accuracy in terrorist activities detection, with small and non-complex data sets. How- ever, existing data sets are massive and have complex features. Thus, these limitations constitute a research gap and bring up a need to increase the accuracy of ML and DL based methods using bi-label and multi-label terrorism data sets. To overcome the afore- mentioned problems, we propose a hybrid DL based framework where we combined two algorithms namely; CNN and LSTM to predict future terrorist attacks.

Initially, the data-set is filtered and applied as input with a size of 33 x 1 matrix for classifying the attack as suicide or not. After the input layer, nodes in the CNN model are connected by weighted edges to learn the data-set features. The learned weights are for- warded to the LSTM layer and then the output layer which decides whether the attack is suicide or not.

Weapon Type: This category of weapons includes thirteen items in the database, and it is also used to identify different kinds of weapons. One of the living organisms of chemical and radioactive radiation, Explosives, and Fake weapons, Threats, Troubles, Provocations of Resources, Vehicles (except explosives transported by road, a car bomb, or vehicles) and other are unknown. The database size is (1109, 112 34). 80% of the database is used for training (887289), and 20% is used for the testing (221822 cases). Each category has the number 426 92.

Normalization: Information about the SCHEDULE has spread to a wide range of areas. In some columns, the values are 0 and 1. In others, there may be hundreds or even thousands of them. It is challenging for the learning algorithm to learn the model and converge to a global minimum. Therefore, processing of data plays an important role in the process of learning. The values of normalization are standard, that is, rates from 0 to 1 or from 1 to 1. In this case the MinMaxScalar library sklearn library is useful which subtracts the each value of feature and averages them and divide them by the standard deviation to normalize

format, such as group name, country name, etc. Processing fea- tures using text data is not possible in NN or DNN. TFIDF, Word2Vec, GloVe, one encoding, and other techniques trans- form text data into numbers. The LabelEncoder part of the sklearn library is utilized in this study to convert non-data con- verted into information data since labels are quicker than num- ber labels.

Missing Numbers: The dataset has a large number of errors, i.e., cells with no data, resulting in NaN when analyzed by NN. To fill in the gaps, various interpolation techniques can be utilized. SimpleImputer from the sklearn library is used to fill in the gaps in this study. We used the mean to replace the missing values in each column.

Unbalanced Classe:s During the data analysis, it is evident that the data was not filtered at various stages. In some categories, there are many unknown cases, and some there are very few instances. The training NN and DNN incase of unbalanced data can result in bias. To address the issue, we used the SMOTE: Synthetic Minority Over-sampling Algorithm, presented by

where pb shows the ith neuron before applying a max-pooling func- tion on the ith feature map and pb' is the ith neuron after applying the max-pooling function, and s represents the size of the pooling win- dow. The output features of the max-pooling layer are forwarded to the LSTM to avoid the problem of long-term dependency. The out- put features of the LSTM layer are forwarded to three hidden layers, and finally, a softmax layer is added for the classification task.

The terms and conditions to comply with a certain num- ber of cycles are performed. The weight is lower than a certain threshold, and the prediction error rate is below. As one of the completing terms and conditions is not met, the course may be completed. The entire network is updated with the LSTM, CNN center, and step 10. If this condition is not met it will go to step 9. The expression tomography errors in the opposite direction are used to update the weight and offset of each layer, after that it moves to step 4 to continue training the network. Finally, the trained model parameters are saved and used for prediction.

The training process of the proposed CNN-LSTM algorithm can be seen in Algorithm 1. The first step is to pre-process the data-set and then to reduce the over-fitting issue, data is nor- malized by using the z-score method. The filtered dataset is pro- vided as an input to the CNN-LSTM model. The weights of the CNN and LSTM layers are initialized, the features are initially learned by the CNN layer, then the learned features from the CNN layer is forwarded to the LSTM model. The LSTM layer learns the temporal features of the data and by adjusting the weights during the training minimize the error. As a result, out- put from the LSTM is used to predict the future terrorist activity. The terrorist activity value is predicted as an output. The max- time of the simulation is defined initially and the loss function. The dataset is divided into training and validation and weights of the CNN-LSTM model is reset. The batch size of 30 is kept

The above results can be summarized as, for suicide prediction, the standard was settled as 98% of accuracy. The DNN model gen- erated 98.6% accuracy, and CNN-LSTM model yielded the highest accuracy of 99%. Therefore, both models performed well. For attack success prediction, the benchmark was 93%. The DNN model gen- erated 93.6%, and the CNN-LSTM model yielded 94.5% accuracy. Thus, for bi-classification problems in predicting terrorist activi-

observed that improved DNN achieves superior accuracy for the multi-classification job in predicting future terrorist activities. Thus, the hybrid model can be used for the bi-classification and multi-classification tasks to predict future terrorist activities, and countermeasures can be taken to avoid such actions. The features in the GTD data-set may not provide the information at the provin- cial or regional level; as a result, in future work, we will also incor- porate the local geographical features of terrorist activities to have a deeper insight to predict future terrorist activities. The proposed hybrid algorithm performs well on the same data sets, however, on more diverse data sets, this algorithm fails to perform. To address the issue, we like to investigate the ResNet architectures and trans- fer learning in the proposed methodology to further improve the performance of the network.

