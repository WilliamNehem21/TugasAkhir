Software developers are interested in protecting the intellectual property of their products against software piracy, namely to prevent the illegal reuse of their code. Software watermarking is a technique for embedding a signature, i.e., an identifier reliably representing the owner, in a cover program. This allows software developers to prove their ownership by extracting their signature from the pirated copies. In the last two decades researchers have developed a variety of software watermarking techniques (e.g., [3,4]) that can be classified in three main categories according to their extraction process:  static, dynamic and abstract watermarking.  Static

w.r.t. an observer when the embedding process preserves the program properties in which the observer is interested. Moreover, the resilience of a watermarking scheme to collusive attacks, that attempt to remove the signature by comparing different marked programs, can be modelled as a property of abstract non-interference among programs.

Finally we do a more precise validation than the one done in [13] (which is just sketched). We take into account two known watermarking techniques and we define them in our framework. Our investigation and study in this direction has led to the following contributions.

Transparence concerns the ability to make hard to discover if a generic program is a stegoprogram. A watermarking system is invisible w.r.t. an observer if the latter is not able to distinguish a generic cover program from every stegoprogram generated starting from it.

In order to validate our model we have formalized two known watermarking tech- niques, one dynamic and one static, in our framework (the case of abstract water- marking is immediate). Doing so we want emphasise our main claim, i.e., that static and dynamic watermarking are instances of abstract watermarking.

an efficient way. Only attacks that are complete w.r.t. the semantic encoding of the signature are able to observe the signature and potentially tamper with it. This means that the abstract domain used for the semantic encoding of the signature M(s) acts like a secret key that allows to disclose the signature to attackers that are complete w.r.t. M(s).

Regarding the quality of a watermarking scheme our general framework provides a formal setting in which to prove the efficiency of a watermarking scheme w.r.t. re- silience, secrecy, transparence and accuracy. To validate our theory we have proved the efficiency of two known watermarking systems. Thus, we provide a general the- ory where researchers can reach a formal evidence of the quality of the watermarking system that they propose. We believe that this is an important contribution that can be considered as the first step towards a formal theory for software watermarking where new and existing techniques can be certified w.r.t. their efficiency.

