In this work, we generalize the classical fixed-point logics using relations instead of operators in order to capture the notion of nondeterminism. The basic idea is that we use loops in a relation instead of fixed- points of a function, that is, X is a fixed-point of the relation R in case the pair (X, X) belongs to R. We introduce the notion of initial fixed-point of an inflationary relation R and the associated operator rifp. We denote by RIFP the first-order logic with the inflationary relational fixed-point operator rifp and show that it captures the polynomial hierarchy using a translation to second-order logic. We also consider the fragment RIFP1 with the restriction that the rifp operator can be applied at most once. We show that RIFP1 captures the class NP and compare our logic with the nondeterministic fixed-point logic proposed by Abiteboul, Vianu and Vardi in [4].

complexity class and vice versa, that is, problems in this complexity class can be defined by sentences of the language. This kind of result builds bridges between Finite Model Theory [9] and Complexity Theory [20] and opens up the possibility to use methods and results from one area to solve problems of the other. It also enables relationships between logical resources (e.g., quantification, number of vari- ables, higher-order quantification, fixed-point operators, etc.) and computational resources (e.g., number of processors, nondeterminism, alternation, time, space, etc.).

The relational model of databases introduced by Codd [8] made explicit the close relation between database theory and finite model theory. Databases can be seen as finite structures and query languages as logical languages [1]. Interest in logical languages has grown rapidly, since such languages, with the associated semantics, provides a strong theoretical background for database theory, especially on query processing, and a large amount of techniques from model theory can be applied. On its turn, this interest on the logical approach to databases promoted an intensive development of Finite Model Theory.

An obvious candidate for a query language is the first-order logic (FO). First- order logic was developed in the last century as a result of the efforts to provide a logical foundation to Mathematics. In this setting, infinite structures play an important role and, indeed, the methods of the model theory of first-order logic rely on the fact that structures can be infinite [7,15]. Although FO is very well suited for mathematical reasoning, its expressive power with respect to finite models is rather limited. Many problems, such as deciding whether a graph is connected or not, cannot be expressed in FO, even when restricted to finite structures. Such limitations derive from the fact that FO is not able to express inductive definitions. This lack of expressiveness was fulfilled with the introduction of fixed-point operators to improve the expressive power of FO. Aho and Ullman [2] introduced the idea of extending the relational algebra, which is basically first-order logic in algebraic fashion, with fixed-point operators. The idea was followed by Chandra and Harel [6], giving rise to an extension of first-order logic with the least fixed-point

Given a sentence of some logic, the set of its finite models defines a decision problem. Once we use sentences in some language to express decision problems, the immediate question is: What is the complexity of such problems? This question has been answered for several logics, see [17]. First-order logic, for example, corresponds to the logarithmic-time hierarchy. One of the first results relating logical expressive

We will focus on a specific type of relation which we call inflationary (see Section 3) and can be seen as the relational counterpart of inflationary fixed-point logic [9,13]. In Section 2, we recall the fundamentals of fixed-point theory and logics. In Section 3, we define some important concepts about relational fixed-point theory. In Section 4, we present the relational inflationary fixed-point logic RIFP with its syntax and semantics, and we also show examples of how to express problems in this logic. In Section 5, we demonstrate that the RIFP logic captures the polynomial hierarchy complexity class through a translation of RIFP to second-order logic, and vice versa. In Section 6, we define a fragment of RIFP logic called RIFP1 which contains only one application of rifp operator, and we show that this logic captures NP. In Section 7, we compare RIFP with NIFP, a logic defined by Abiteboul, Vianu and Vardi [4]. Finally, we conclude this work and we show future topics of research in Section 8.

The languages and semantics of first-order and second-order logics are defined as usual. A formula whose symbols belong to some symbol-set S is called an S- formula. We call formulas with free relation variables, but without second-order quantification as first-order formulas, since they are first-order in essence. If x is a

where the last inclusion only holds for ordered structures. We want to generalize the fixed-point operators considered in the traditional fixed-point theory in order to explore new ways to define logics aiming at the characterization of complexity classes through logics in the spirit of descriptive complexity. We will introduce the relational approach in the next section.

In this section, we will add to first-order logic the ability to define relations that correspond to the union of initial inflationary fixed-points of defined relations. This extension will be called Relational Inflationary Fixed-Point Logic (RIFP). It will increase the expressive power beyond that of inflationary fixed-point logic.

The framework here presented can be used to explore other kinds of relational fixed-point logics. In the same way that new fixed-point logics are defined imposing some conditions on the operators used, we can define other relational fixed-point logics restricting the relations considered. Using this approach, several logics can be defined in a uniform way. We conclude by giving some natural next steps in this line of research, namely:

