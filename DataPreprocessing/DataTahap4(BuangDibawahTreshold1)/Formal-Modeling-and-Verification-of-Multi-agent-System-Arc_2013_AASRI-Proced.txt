be online trading, disaster response, and modeling social structures, etc. Since the software architecture is very good choice to ease the development complexity of distributed system [2], [3], we apply the architecture style in the development of multi-agent systems. Since these kinds of multi-agent system applications have common in the construction level, a Multi-Agent System Architecture (MASA) can be very helpful in developing the multi-agent system.

The distributed agent can interact with each other to accomplish a job. The information resources are all stored in the Information Node. Two agents communicate with each other by using the connector. When raising exceptions in the system, the fault tolerant agent is responsible for dealing with them.

QA and BAs interact with each other to transfer the interface query. QA is responsible for deciding whether to find other BAs. BA is responsible for deciding which INode has the relevant information. And the QTA is responsible for communication among the agents. MA is in the control position, and its job involves build QA to set up a query, receiving the query results, and analyze the results. CA is responsible for searching potential projects, analyzing them, and choosing the appropriate project.

In the architectural level, the fault tolerant techniques have been integrated to deal with exceptions. When raising an exception, we should use an appropriate handling strategy to deal with it. However, the handling result could be false, and then this exception should be passed to the fault tolerant agent, signalled as global exception. The global exception may affect other interacted agents. Thus, the global exception should inform to the related agents, and these agents have to deal with the informed global exception.

In the BA theory, there are four important functions. One function is SendData, which is used to describe how the BA sends the information to QA by using the connectors. How to pass the raised exception to the exception receiving agent is illustrated in the function ExceptPropagate. And the function UniExceptReceive illustrates how the exception can be received from the exception receiving agent. The last Function UniExceptHandle explains whether the BA can handle the received exception successfully. If successfully, the inter state could be normal. Otherwise, the state should indicate that this agent cannot deal with this exception successfully.

In the FTA theory, there are two important functions. One function ExceptRec illustrates when a global exception has been raised, the exception handling agent should receive this exception. The function ExceptGraph specifies that when receiving a set of global exceptions, these exceptions could be resolved into a global exception. And this resolved exception should be handled by the exception handling agent.

In the proof script, besides those primitive lemmas, there are other important induced lemmas. These lemmas can guide the verification process when the verification result is not true. For example, the exception list is not empty is indicated in the NonEmpty Lemma. When raising an exception from the UniExceptReceive function, how the exception handling component receives the exception is indicated in the ExceptGraph1. When verifying a fault tolerant property, the proof script can be entering to the PVS theorem prover directly. The, the fault tolerant property can be verified automatically. Besides this fault tolerant property, we also can verify other properties successfully.

The authors would like to thank for the sponsor supported by National Natural Science Fund (No. 61100059). And strong support from National Natural Science Fund of Hubei Province under grant 2012FFB00901, the Science and Technology Research Project of Department of Education of Hubei Province under grant D20132803, Doctoral start Fund of Hubei University of Science and Technology under grant BK1204, the Teaching Research Project of Hubei University of Science and Technology under grant 2012X016B, and the Science and Technology Research Project of Xianning City under grant XNKJ-1203.

