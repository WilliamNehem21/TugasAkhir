In the paper, the authors introduce the syntax and semantics for the core model and language, which have been subsequently expanded. They focus on the dynamic aspects of composition, particularly interaction compatibility in component protocols with service composition. Their objective is twofold: first, to use assertions to define contracts on services for assembly correctness and consistency of components, and second, to enhance the correctness verification of the kmelia model by incorporating assertions.

The authors discuss the importance of assertions in defining contracts on services to improve assembly correctness and consistency of components. They also highlight the need for proving the functional part of the services consistent with the contracts, thereby enhancing the correctness verification of the kmelia model.

The paper is structured as follows: Section 2 provides an overview of the kmelia abstract model and introduces its new features. Section 3 presents a working example to illustrate the use of data and assertions. Section 4 focuses on the formal analysis, presenting various analysis to be performed, those currently implemented, and highlighting the verification of component correctness using the new data language. Section 5 concludes the article and discusses future perspectives. The work is supported by the costo tool, and an extract of the kmelia syntax concerning the new data part is provided in the appendix.

The paper emphasizes the importance of the behavior of a component and its services, and also describes the composition of components through assembly and promotion links. The authors introduce an enrichment of the kmelia language with data and assertions to cover structural, dynamic, and functional correctness.

The paper further discusses the types of data in kmelia, describing the explicit definition of data types in shared libraries and the inclusion of more abstract data types in the predefined library. An example of a kmelia component and its observable state is presented, illustrating the use of observable variables and invariants.

The authors also present a formal analysis of a kmelia specification, discussing the verification goal, systematic verification method, and the use of existing proof tools such as the b tools and the rodin framework for the verification process.

In summary, the paper introduces enrichments to the kmelia abstract component model, discusses the formal specification and analysis of the model, and presents a method for assertion verification using b tools. It also emphasizes the importance of considering abstract models like kmelia for component-based systems, highlighting the limitations of other abstract models with regard to dynamic aspects, data types, and contracts. Finally, the paper provides details about the syntax and semantics of the kmelia language, including the allowable operators and the representation of identifiers.