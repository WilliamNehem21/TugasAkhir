Each logical rule system (LRS) adheres to the main principle (MP) and the top principle (TP). MP states that the term in the main value of every LRS is a subterm of the top value and a member of the parts list. TP asserts that in an utterance, the top value of the utterance consists of exactly those terms that occur in its parts list. It is important to note that utterances, being phrases with illocutionary force, are not embedded within any other phrase.

Our principles permit three potential values for the top attribute of the sentence, as listed in (19). The first two readings differ in whether the negation contributed by the negated verb has scope over that contributed by the subject (19a) or vice versa (19b). Finally, (19c) represents the scenario where the two negations are identical, i.e., where the terms 4 and 5 are identical. In fact, this is the only possible interpretation of (15).

The Negative Concord Constraint (NCC) is specific to each language. In Polish, which is an obligatory negative concord language, there can be at most one sentential negation. For French, an optional negative concord language, it is argued that there might be a maximum of two negations. The NCC achieves the same effect as the negation absorption operation, but whereas negation absorption is a completely new and stipulated mechanism, the NCC enforces structural identities.

Our analysis of negative concord in Polish demonstrates how token identity can be used in combinatorial semantics to provide a natural explanation for concord phenomena. While the analysis is similar in essence to Government and Binding (GB) analyses in the tradition of a specific work, we do not require any stipulated mechanisms such as negation factorization. Instead, we can simply utilize the major analytical tool of Head-Driven Phrase Structure Grammar (HPSG), namely token identity.

For brevity, we have focused here on finite verbs and their complements. For a more comprehensive coverage of data, we would need to examine syntactic islands for negative concord as well as a more nuanced semantic distinction among various types of negation such as eventuality, metalinguistic, and pleonastic negation, only the first of which licenses negative words in Polish. Our account naturally extends to this broader range of data once we introduce the requisite syntactic and semantic refinements.

LRS, akin to underspecified semantic systems, employs a list-like semantic representation. Consequently, we are able to avoid Cooper storage mechanisms for capturing different scoping possibilities of quantifiers. Combinatorial semantics is arrived at by simply concatenating lists of subterms instead of introducing intricate syntactic mechanisms such as -conversion, as would be necessary in Montagovian systems. In this regard, LRS shares many advantages of underspecified systems. However, the semantic representations used in LRS are not underspecified. This hybrid nature helps to sidestep empirical and theoretical issues that underspecified systems typically confront. The technical and conceptual disparities between LRS and underspecified semantic systems will be illustrated through a direct comparison with the minimal recursion semantics (MRS), which was initially developed for computer implementations.

The primary similarity between LRS and MRS lies in the use of list structures as semantic representations. However, while the lists contain subterms of the overall logical form of a sign in LRS, MRS superimposes an extra handle structure to assemble the pieces. The handle structure necessitates a special treatment of conjunction and is primarily driven by computational considerations in machine translation. The additional layer of structure makes it challenging to express certain well-formedness conditions on semantic representations as part of the grammar. Examples include the condition that there be no free variables in the logical form of a sentence, or that there be a way to order the handles to form a non-cyclic tree-like structure which guarantees the existence of a fully scoped MRS. MRS, and unification-based MRS, explicitly state that these constraints are not part of the HPSG grammar; they belong to some extra-grammatical scope-resolution procedure.

LRS is not underspecified at the level of the semantic representation language. Furthermore, since any standard representation language can be substituted for the one used in this paper, LRS is well-suited for expressing complex semantic phenomena. As demonstrated in the application to Polish, it can also be easily and modularly combined with the typical syntactic analyses of HPSG. Future research will need to investigate whether LRS can also serve as a feasible framework for computational operations with HPSG grammars.