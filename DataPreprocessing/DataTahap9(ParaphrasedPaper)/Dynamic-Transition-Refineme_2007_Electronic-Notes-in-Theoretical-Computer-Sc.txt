Typically, refinement is considered to be a static concept. However, in many cases, there is a need for a more flexible form of refinement. For instance, in the context of service updates, such as version control in distributed systems, there is a requirement for a mechanism that allows for dynamic transition refinement.

The subsequent sections are organized as follows: Section 2 introduces the concept of marked transitions for Petri nets, detailing super-dual nets and their firing rule. Following this, in Section 3, there is a discussion of how the notion of super-dual nets can be extended to object nets, along with a concise definition of the new formalism of super-dual object nets. Section 4 elucidates how super-dual object nets can be simulated by object nets, while Section 5 outlines an initial effort to incorporate dynamic transition refinement in renew. The paper concludes with a summary, and the appendix provides a review of the definitions of multi-sets.

The objective of our research is to achieve dynamic refinement of transitions, allowing for alterations to be made at runtime by the net itself. Our fundamental approach involves treating sub-nets as specialized tokens of transitions, which expands the petri net formalism in two ways: (1) petri nets can be utilized as tokens, and (2) transitions can be marked.

We present a succinct definition of object net systems, omitting the syntax of inscriptions of net elements and synchronizations for the sake of simplicity, as is employed in the renew tool.

An initial attempt to implement dynamic transition refinement in the petri net tool renew was undertaken through the workflow plug-in 4. This included the implementation of a task transition as part of various methods for defining and executing workflows. Although the task transition does not align precisely with our design criteria for dynamic refinement, it provides valuable insights.

Our approach pertains to a unique type of petri nets that can modify their structure through dynamic refinement of transitions. One approach to enabling structure modification at runtime involves self-modifying nets, which permit arc weights that are dependent on marking. A special case is the empty marking, which temporarily removes arcs from the net. Another method of structure modification in petri nets involves mobile nets and recursive nets.

In this paper, we explore the dynamic refinement of transitions, building upon the idea of extending petri nets to super-dual nets, and we extend object net systems to super-dual object systems. Super-dual object net systems are nets-within-nets that allow for nets to be utilized as tokens on both places and transitions. Transition marking nets, referred to as net-tokens, can be transferred from one transition to another, refining the transition they are marking. This framework offers the desired properties of a dynamic, runtime refinement procedure that is controlled by the net itself.