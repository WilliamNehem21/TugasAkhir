Any type can be transformed into a proposition by freely introducing paths. This transformation, known as propositional truncation (or (-1)-truncation), can be represented as a higher inductive type (HIT). The type constructor "_ " takes a type a as an input, the point constructor |_| coerces terms of type a to terms in the truncation, and the path constructor ident equates any two points in the truncation, thereby turning it into a proposition. We postulate this due to Agda's lack of support for HITs.

As Christensen points out, a type u is rarely the base of a univalent fibration. However, in the same paper, Christensen identifies a class of types that always serve as the base of univalent fibrations. We discuss this concept and use it to construct a custom univalent subuniverse in the following section.