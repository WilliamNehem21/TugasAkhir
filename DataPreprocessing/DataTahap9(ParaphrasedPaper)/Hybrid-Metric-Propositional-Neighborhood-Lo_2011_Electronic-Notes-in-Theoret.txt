The focus of our investigation is to explore the extent to which hybrid machinery can be incorporated into the interval neighbourhood logic (pnl) and its metric extension (mpnl) without sacrificing the decidability of their satisfiability problem. Specifically, we examine the hybrid extension of mpnl obtained by introducing binders on integer variables that range over the lengths of intervals, thus enabling the storage of interval lengths and further references to them. Surprisingly, we find that even a minimal natural fragment of such extensions becomes undecidable, contrasting with the decidability of mpnl, which can be viewed as a hybrid language involving only interval length constraints with constants.

Interval temporal logics are rooted in temporal structures over linearly ordered domains, with time intervals being the fundamental ontological entities. The representation and reasoning about time intervals have applications in various fields of computer science, artificial intelligence, and temporal databases. Temporal logics with interval-based semantics have been proposed as a formalism for specifying and verifying hardware and real-time systems.

Regarding decidability, it is evident that introducing binders over state variables leads to immediate undecidability. Conversely, in the context of metric pnl, it is natural to utilize binders on integer variables representing interval lengths, enabling the storage and references to the length of the current interval.

The primary focus of this paper is to analyze the extensions of pnl and mpnl with interval length variables and binders in terms of decidability. Our findings reveal that even minimal extensions become undecidable, which was not always expected, especially given the contrast with the decidability of mpnl, considered as a hybrid language involving only nominal interval lengths. Consequently, we demonstrate that mpnl is a maximal decidable (weakly) hybrid extension of pnl in this context. We also note the contrast between the prevailing undecidability of hybrid interval logics with interval-based semantics and the more robust decidability of highly expressive hybrid extensions of interval logics with point-based semantics, including the hybrid dc mentioned above.

We then provide an outline of the encoding method used in the paper, which involves establishing a unique finite chain of u-intervals on the linear ordering (u-chain) as the framework. The u-intervals are utilized as cells for tiling. Additionally, we define a chain of id-intervals, representing rows of a rectangle, and use propositional letters to encode the id-chain. The encoding is carefully structured to ensure termination and uniqueness of the id-intervals and their relationships with tile-intervals.

Our research demonstrates that extending (m)pnl with variables and binders over interval lengths is a natural but generally leads to undecidability even in highly restricted fragments. While these results may be somewhat disappointing, they underscore the necessity of imposing strong restrictions on the application of length binders to maintain the decidability of the non-hybrid fragment. The proposed restrictions limit the expressiveness of the resulting languages to not exceed that of their non-hybrid fragments, leaving open the question of whether adding hybrid machinery to interval logic can yield essential gains in expressiveness while retaining decidability.