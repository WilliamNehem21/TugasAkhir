The interest in fold and unfold operations prompts the question of when a program can be written using these operators. Surprisingly, little is known about this issue. This article provides a comprehensive answer for the special case where programs are total functions between sets. Specifically, we present a necessary and sufficient condition for determining when a set-theoretic function can be expressed using fold, as well as a dual condition for unfold. These conditions are straightforward and allow for the generation of efficient code without compromising the structure and clarity of the source code. Our findings can be employed to ascertain instances where two phases cannot be amalgamated into a fold or an unfold. It may be feasible to employ an automated testing system, such as quickcheck, to identify counterexamples for the appropriate inclusions.

We express our deep appreciation to Lambert Meertens, whose suggestions greatly simplified our proofs. Additionally, we acknowledge the anonymous referees for their valuable comments. Graham Hutton received support from the EPSRC grant for Structured Recursive Programming, and together with Thorsten Altenkirch, was supported by the ESPRIT working group Applied Semantics.