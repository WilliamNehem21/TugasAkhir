When dealing with a formal system specified using logic, verifying properties of the system can be simplified by examining the provability in the logic representing the specification. There are various approaches to accomplishing this task. One approach involves formalizing the specification logic within a general-purpose theorem-proving framework, such as Coq or Isabelle. Another approach involves developing a separate logic, known as a meta-logic, which is specifically designed for reasoning about the specification logic. In this paper, we focus on the latter approach and demonstrate its practical application within the context of a specific theorem-proving system called Abella.

Having encoded the entire specification logic, we can establish general properties about it in the meta-logic, which can then be utilized for reasoning about specific specifications. In Abella, various properties of the specification logic can be automatically invoked or employed through the use of tactics. For instance, one provable property in the meta-logic states that the judgment 'l h g' is unaffected by permuting, contracting, or weakening the context of hypothetical assumptions 'l'.

In Abella, natural number arguments are not required as the system implicitly assigns such additional arguments to all definitions. Thus, when referring to induction over a definition, it implies induction on the implicit natural number argument of that definition.

The remaining part of this section outlines the definitions and lemmas necessary to prove the aforementioned property. In general, most results in this section have straightforward proofs based on induction, case analysis, application of lemmas, and derivation of results from hypotheses. For such proofs, we omit the details, except for mentioning the inductive argument and key lemmas used. The complete details of this development are available in the software distribution of Abella.

One challenge in directly proving weak normalizability is that the halting property is not closed under application, i.e., 'halts m' and 'halts n' do not imply 'halts (app m n)'. We must therefore strengthen the halting property to one that includes a notion of closure under application. To address this, we define the logical relation 'reduce' by induction over the type of a term, beginning with an empty context.

Our repertoire of results about the occurrences of nominal constants in judgments enables us to establish fundamental properties of arbitrary cascading substitutions. One such property states that closed terms, i.e., those that can be typed in the empty context, are not affected by substitutions.

The Abella system has been tested with several prototypical examples, and further details are available with the system distribution. These experiments indicate significant potential for the two-level logic-based approach in reasoning about formal systems. However, these experiments have also highlighted some practical issues with Abella, which are discussed below, along with proposed work aimed at addressing them.