Expressing graph properties using modal logic is an intriguing concept for several reasons. Firstly, modal logic strikes a good balance between language expressiveness and computational complexity, with more expressive power than propositional logic yet still being decidable, unlike first-order logic. Additionally, modal logic's evaluation in graph-like structures makes it a natural choice for this work.

Similar definitions can be formulated for a bounded morphism and a disjoint union of frames, by omitting the parts of the previous definitions pertaining to valuations. Two fundamental theorems about modal definability, which will be utilized in subsequent sections, are presented. The proofs for a language containing only "can" can be found in the referenced source, and it is feasible to extend these proofs to a larger language.

Two levels of connectivity can be defined for a graph. Firstly, a graph is considered weakly connected if, for any two vertices, there exists a path between them in the graph's underlying undirected structure. Secondly, a graph is strongly connected if, for any two vertices, there exists a path between them in the graph itself.

Before attempting to formulate a formula for describing Hamiltonian graphs, certain graph-theoretical considerations need to be taken into account. In graph theory, there is currently no known result providing a necessary and sufficient condition for a graph to be Hamiltonian. If a formula could be devised to describe Hamiltonian graphs without explicitly defining the Hamiltonian cycle, it would effectively establish such a necessary and sufficient condition. However, the only formula found to describe the Hamiltonian property in a simple language has a length proportional to n!, where n is the number of vertices in the graph.

The challenge in formulating a formula for describing Eulerian graphs is of a completely different nature. Here, the limitation lies in the language rather than the theoretical definition of the property. Although there is a known result providing a necessary and sufficient condition for a graph to be Eulerian (Theorem 3.10), the hybrid graph language lacks the expressive power to state cardinality conditions on edges incident from and to a vertex without resulting in a factorial-length formula.

Another approach to describing the Eulerian property would be to find a formula that explicitly defines an Eulerian path in the graph. However, this is difficult due to the limitations of hybrid graph logic and many other modal logics in effectively representing edges. The modal operator does not differentiate between edges incident from a vertex, and although nominals provide names for vertices, they do not facilitate tracking the edges used when traversing a graph. One potential solution could involve developing a method to name edges within the framework of a hybrid language, a concept that is explored in Section 6 to derive a formula for the Eulerian property.

The factorial size of the formula describing Hamiltonian graphs renders its verification impossible. While it is known that verifying the Hamiltonian property in polynomial time is unattainable, efforts are made in this section to expedite the verification process beyond factorial time.

Let g be a graph with n vertices and let ln={i1,..., in}. By adding a loop to all the vertices in g, a formula can be defined that is valid if and only if g is Hamiltonian.

If Theorem 3.10 is not utilized, the Eulerian property needs to be defined using a formula that explicitly describes an Eulerian path in the graph. However, this presents a challenging task due to the reasons explained at the end of Section 4. A method to name edges within a hybrid language is developed, which is subsequently used to define the Eulerian property.