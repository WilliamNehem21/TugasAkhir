The transition rules in MSDF closely resemble standard mathematical notation, although some clarification is needed for the notation of label patterns. Labels may contain ellipses (...) or a dash (-) to represent all indices not explicitly mentioned. When ellipses are used, it indicates that the part of the label it refers to may change in a transition, while the dash is used otherwise. If ellipses occur more than once in the same rule, they refer to the same subset of indices. Additionally, metavariables, such as x1 and x2, may be used to refer to a subset of label indices and are employed to differentiate between two sets of indices in the same rule.

It is worth noting that this strategy can be automatically generated by examining the semantic rules. While it reflects the MSOS derivation mechanism, it is not dependent on CCS. Furthermore, the strategy CCS-Strat can only be utilized after concretizing the strategy Prem-Strat in the following module.

When the second rule (R2) is inapplicable, the strategy is applied. The binary relation on rules defines the order of their application when deriving transitions. Therefore, a rule R can be used to derive a transition if all its premises are valid and no higher rule than R is applicable (it contains a premise that is not valid).

The current version of the prototype does not support the inclusion of strategy modules, even though there is notation (and semantics) for them. All strategy definitions must be declared in a single module. Part of our future work is to fully support the strategy language. In addition to automating the translation of negative premises to strategies, a case study that we aim to pursue in the near future is the implementation of E-LOTOS semantics, where negative premises are used to ensure that urgent actions occur before time elapses.