The remainder of the paper is structured as follows. In section 2, we elucidate the specific semantics and computation of leakage utilized in our previous research. Section 3 introduces an approach for approximating our concrete leakage analysis and establishing certain properties of this method. Finally, we outline related work and present conclusions in sections 4 and 5.

The example provided demonstrates a small amount of information being made public. The leakage analysis findings align with our expectations, indicating that the likelihood of h being equal to 0 is quite low, and there remains considerable uncertainty in h given h is not equal to 0, thus only minimal information is disclosed to the public.

The events p0 to pk form the outgoing partitions of the states for a while loop. The computation of the loop's leakage entails adding the entropy of the union of the boolean test for each iteration and the summation of the entropy of the loop body for each weighted sub-probability, in accordance with the definition of entropy of partitions.

Moreover, it can be readily inferred that the precise leakage resulting from this simple example is l = 7*(0.3, 0.4, 0.1, 0.1, 0.1) = 2.0464. This straightforward example suggests that standardizing abstract objects maintains the integrity of leakage computations, and the choice of partitioning strategy may influence the precision of the computation. In this example, the first partitioning strategy is superior to the second, as it aligns more closely with the exact leakage. Both strategies, however, ensure a valid leakage computation, as they never underestimate the leakage analysis. The precision of the partitioning strategy depends on the initial distribution of high security inputs and the nature of the programs, but not universally. A more accurate result may be achievable if the partitions produced by the partitioning strategy and abstract operations in the abstract lattice closely mirror the concrete partitions produced by the programs, especially conditional tests and loops, in the concrete lattice.

Nevertheless, it still provides a reasonable upper bound. This example also demonstrates that our abstraction techniques ameliorate the time-consuming nature of leakage analysis, as the abstract analysis only requires 2 units, whereas the concrete analysis necessitates 8 time-units (iterations) to yield similar results.