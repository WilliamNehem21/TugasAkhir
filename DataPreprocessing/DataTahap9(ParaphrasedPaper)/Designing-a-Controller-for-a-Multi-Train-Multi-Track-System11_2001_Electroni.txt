The Bay Area Rapid Transit (BART) system offers extensive commuter rail service in the San Francisco Bay Area, with over 50 trains typically in operation, each consisting of 10 cars. These cars are equipped with electric motors powered by a 1000 VDC "third rail" and utilize regenerative and friction brakes. The system is largely automated, with onboard operators playing a limited role in normal operations, primarily signaling when platforms are clear for trains to depart and, in exceptional circumstances, using the emergency brake. With some minor exceptions, the BART system comprises double tracks, with one track for each direction, and an acceleration controller is located at the front and back of each train. At the end of the line, the front and back controllers are redefined, and the train changes direction.

Another critical aspect of train control is interlocking, which involves managing track switches and associated signals for entering different track segments. In the BART system, interlocking is handled by a separate system from the train control. The train controller receives "go" or "stop" indicators at various track locations and should proceed only if allowed. It is the responsibility of the interlocking system to prevent a switch from moving if a signal change occurs too late for an approaching train to stop. Stopping at a station platform is similar to stopping in front of a gate, but with additional controls to ensure the final stop is at the precise location.

While this model approximates an actual train system, it captures essential features such as the train's ability to change acceleration quickly and acceleration limits. These values can be determined from the train's current speed and acceleration, reflecting the physical constraints encountered by large, heavy objects driven by electric motors, such as trains.

The components of the train system are modeled using profiles and constraints. A profile describes the relationship between position and speed, indexed by discrete or continuous time for a discrete or continuous profile, respectively. Due to sensor outputs being measured at discrete time intervals, the train system's components are most appropriately modeled using discrete profiles. Safety properties, which are continuous, can be indirectly defined by specifying relationships between various discrete profiles and inferring that the continuous property holds.

To address the limitations of the model in capturing continuous behavior between discrete points, the model defines properties that continuous train profiles must satisfy to be consistent with the discrete sensor readings provided by the system, bounding such behaviors. Safety constraints are specified in a compositional manner and are expressed with regard to the safety property of trains running on each track, assuming tracks do not interfere with each other.

The development of this formal model and the evaluation of various trade-offs involved numerous trial and error iterations. These included the consideration of using only discrete profiles and expressing safety properties using discrete profiles, as well as determining how to map discrete profiles into continuous profiles.

An animation of the train behaviors was created to enhance confidence in the design. The animation displayed the position and speed of trains relative to a fixed position of the lead train and visualized track speed limits. This informal validation via simulation helped boost confidence in the correctness of the train behaviors and the underlying models.

While simulation validation enhances confidence in the correctness of the model, formal verification is essential to ensure the accuracy of the underlying models and to disprove properties that may be challenging to verify formally. Model checking, as an alternative to simulation, may be useful for debugging a formal model when system behavior can be expressed in discrete states, but it may not be suitable for addressing continuous properties.