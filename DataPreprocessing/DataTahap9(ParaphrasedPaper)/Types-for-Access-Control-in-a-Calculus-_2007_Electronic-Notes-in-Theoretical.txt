This paper introduces a type system for the calculus of mobile resources (MR) developed by Godskesen et al. The type system aims to prevent undesirable border-crossing behavior, such as the introduction of trojan horses, by combining the concept of group with a notion of security policy. Well-typed processes must satisfy a safety property that is maintained through reduction. The paper also presents an algorithm for computing the minimal security policy that allows a process to be well-typed.

The mobility of software across computer networks has become a prevalent phenomenon, with examples including the movement of Java applets between servers and clients, as well as the physical transfer of a computer between wireless networks. Consequently, ensuring the security of such migrations has become an important concern.

Similar to previous work, our type system is based on the notion of group, and we also introduce the concept of a security policy. Since migration can occur between any two locations, the type system needs to keep track of the nesting structure of a process. Nonetheless, we believe that the resulting type system is less complex than those in previous work.

For instance, consider a scenario where a process labeled as "camp" is well-typed, as starting a fire is an allowed activity at the firesite. However, moving this activity from the firesite to the library is not well-typed due to the side conditions of the t-move that prohibit matches and acetone as guests at the library.

In summary, we have presented a type system for the calculus of mobile resources that allows for reasoning about border-crossing phenomena, which is less straightforward in the context of the MR calculus. Our type system preserves a safety property, representing the first such system proposed for the calculus. Furthermore, with our notion of security policy, it is feasible to describe not only border-crossing properties but also properties such as immobility.