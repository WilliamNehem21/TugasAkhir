A multi-objective VNS (MOVNS) algorithm has been introduced in previous research and its performance has been evaluated on medium and larger instances of the problem. The computational results demonstrate that the proposed algorithms outperform the original MOVNS algorithm in terms of solution quality. A statistical analysis has been conducted to assess the performance of the proposed methods.

The single machine scheduling problem (SMSP) has been extensively studied in recent decades, with most contributions focusing on a single optimization criterion. However, in practice, decision makers often encounter multiple conflicting criteria. The primary criteria include minimizing the maximum completion time (makespan), total production time or flow time, and total tardiness. The use of these objectives is well-justified, as minimizing makespan implies the reduction of other related costs.

Previous literature has investigated the SMSP with earliness and tardiness penalties from a single-objective perspective. Various authors have studied the problem with distinct or common due dates. For instance, Lee and Choi developed an optimal algorithm with polynomial complexity to determine the optimal completion time for each job and combined it with a genetic algorithm. Additionally, different heuristics, such as tabu search, GA, variable neighborhood search (VNS), and recovering beam search, have been proposed by other authors for addressing the problem considering common due dates.

Metaheuristic methods are commonly used for solving multi-objective combinatorial optimization problems. While these methods were initially developed for single-objective optimization, they have been extended to multi-objective combinatorial optimization problems. Applications of the VNS metaheuristic for multi-objective optimization are limited, although the first multi-objective MOVNS algorithm was proposed by Geiger.

In this paper, we present two algorithms based on the VNS metaheuristic to solve the bi-objective SMSP. These algorithms are built upon Geiger's algorithm and incorporate an intensification procedure based on constructing non-dominated solutions from information obtained from non-dominated partial solutions. The effectiveness, efficiency, and robustness of these proposed algorithms are demonstrated through simulation results and comparisons.

We also introduce an intensification phase for the MOVNS1 algorithm, which involves constructing new non-dominated solutions based on scalarizing functions and Pareto dominance. Additionally, we describe two intensification procedures, intensification1 and intensification2, which are based on different approaches to improve non-dominated solutions selected from the local search.

The algorithms were implemented in C++ and executed on an Intel Core Quad with 2.4GHz and 2.0GB of RAM. They were run with a stopping criterion based on CPU time, with the amount of CPU time allocated depending on the size of the considered instance. The parameter 'd' used in the intensification procedures was experimentally tuned, with the computational tests indicating that the MOVNS3 algorithm produced the best results with 'd' set at 6.

The performance of the algorithms is evaluated using a reference set constructed from all non-dominated solutions obtained by the tested algorithms. This reference set is utilized to measure the quality of the solutions obtained by each algorithm with respect to the solutions in the reference set.

Finally, the paper concludes by discussing the results of the computational experiments and the impact of the proposed intensification procedure on achieving significantly improved solution quality.