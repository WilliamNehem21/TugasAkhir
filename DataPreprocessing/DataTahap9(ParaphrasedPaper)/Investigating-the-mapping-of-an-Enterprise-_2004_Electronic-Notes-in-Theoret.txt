This paper discusses the mapping of the enterprise architecture language developed by the ArchiMate project onto UML 2.0. The mapping aims to concretize the relationship between models of the business and ICT domains and provide the basis for developing a UML profile for the ArchiMate language. This will enable the use of UML tools for creating ArchiMate models and compensate for the disadvantages of writing business models in a non-UML language.

Furthermore, the paper explains that enterprise architectural descriptions often distinguish between different levels or layers within the enterprise, such as the business level, application level, and technology level. These levels need to be described individually as well as in relation to each other.

The paper also highlights a weakness of UML in its large number of diagram types with poorly defined relations between them, making it challenging to model the different levels in an enterprise in a consistent manner. Additionally, it discusses architecture description languages (ADLs), focusing on the ADL Acme, which aims to exchange architectural information between different ADLs.

The paper emphasizes the need for integrating different architectural domains offered by various modeling languages, and it presents the modeling language developed by the ArchiMate project as a solution to describe enterprise architectures in a structured, integrated manner. This integrated architectural description is envisioned to provide stability amidst organizational change and enable analysis of interaction and alignment within and between different levels of the enterprise.

The paper also discusses specific UML diagram types, such as composite structure diagrams and state machine diagrams, and their relevance in modeling dynamic aspects of organizations and software systems. It underscores the suitability of object-orientation for modeling organizations and their activities, while acknowledging the challenge of applying UML concepts to business architecture.

In addition, the paper explores the translation of ArchiMate concepts into UML, providing reformulated definitions of ArchiMate concepts and their relevance for UML translation. It discusses conceptual aspects such as objects, actors, interfaces, collaborations, interactions, events, services, purposes, meanings, and representations, and how these concepts can be translated into UML.

Finally, the paper presents a case study involving the ArchiMate modeling language in the context of an insurance company, illustrating the translation of ArchiMate models into UML and the resulting differences and intricacies in the translated UML models.