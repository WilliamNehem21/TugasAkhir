Membrane computing is a relatively recent field within natural computing that seeks to extract computational concepts and models from the structure and function of living cells. The area has seen various expansions, stemming from both biological considerations, aimed at encompassing more biological phenomena, as well as from mathematical and computer science viewpoints, seeking to develop more potent and elegant models.

Closely related to membrane computing are multiset processing languages, with the most well-known being gamma. Membrane systems impose restrictions on the form of rules in gamma, with the objective of capturing both biological underpinnings and mathematical simplicity and elegance. The concept of membranes also appears in the chemical abstract machine (cham), but in this context, the membranes do not directly correspond to those found in cell biology; rather, they pertain to the contents of membranes (multisets). The description and objectives of cham differ from those of membrane systems and are more closely aligned with the approach taken by process algebras. Other related formalisms include mobile ambient calculus and brane calculus, with a formal link established between mobile ambients and mobile membranes.

Membrane computing encompasses distributed and parallel computing models that process multisets of symbol objects in a localized manner, encapsulating evolution rules and evolving objects within compartments delimited by membranes. Initially, membrane computing was not conceived as an area aimed at providing models for biology, particularly cellular models. However, after developments at the theoretical level, the field is now positioned to offer such models to biology, with significant progress already reported in this direction.

In the context of achieving universal computations, it has been shown that if the maximal number of rules with promoters present in any membrane is 6, the number of membranes required can be reduced to 1. Similarly, if the maximal number of rules with inhibitors present in any membrane is 6, the number of membranes necessary to achieve universal computations can be reduced to 3. Further details on these findings are presented.

The description and presentation of rules within a membrane are achieved using the "label -> ruleset" notation. Even when implementing message passing and dissolving, membrane computing operates with register membranes, which does not alter the semantics. Specifically, a membrane is identified with the register membrane hm, as in the propositions 3.6 and other relevant contexts.

In a particular stage of membrane evolution, a membrane undergoes a single rewriting step, wherein the set of children membranes (mm) is either message-reducible or message-irreducible, leading to corresponding rewriting and updates within the membrane and its children. This process results in a message-irreducible state, as the objects with messages are confined to a specific membrane, and in some cases are even eliminated from the skin membrane. If the set of children membranes is message-irreducible, a similar process takes place, with adjustments for the specific scenario.

Overall, membrane computing constitutes an evolving and interdisciplinary domain with roots in both biological and computational sciences, offering promising avenues for the development of models and frameworks inspired by the functioning of living cells.