One of the primary characteristics of the Homotopy Type Theory (HoTT) is the inclusion of Higher Inductive Types (HITs). These types are formed by constructors for their points, paths, homotopies, and so on. HITs have found applications in various domains such as homotopical patch theory, synthetic homotopy theory [31, 32, 41], defining type theory within type theory [6, 7], constructive finiteness, and the partiality monad. To gain an understanding of HITs, let us consider some examples.

This paper's main contribution deals with the construction of a class of higher inductive types from simpler ones. Both Kraus and van Doorn demonstrate that the propositional truncation can be derived from non-recursive HITs [29, 43], and Rijke shows that every truncation can be constructed using non-recursive HITs. It is notable that these results pertain to truncations rather than a more comprehensive scheme. However, unlike our findings, they do not rely on the restriction to set-truncated types.

By reducing the existence of HITs to a small number of them, an approach is established to define the semantics of HITs. Other approaches to this problem have also been explored. Coquand et al. interpret various higher inductive types, such as spheres, the torus, the truncation, and the pushout, in cubical type theory [13, 17, 18]. All these examples are not set-truncated and hence not covered by our scheme. On the other hand, Lumsdaine and Shulman also study the semantics of higher inductive types using a semantic scheme (cell monads with parameters) and they prove existence in sufficiently nice Quillen model categories. Additionally, Dybjer and Moeneclaey provide an interpretation of their scheme in the groupoid model [20, 25].

Definition 2.2 states that a type x is a (mere) proposition if for all x, y: x we have x = y. A type x is a set if for all x, y: x the type x = y is a proposition. We denote that x is a proposition and set as isaprop(x) and isaset(x) respectively.

To define HITs on a signature, it is necessary to establish the introduction, elimination, and computation rules. We begin with the introduction rule, which is defined via algebras. It is important to note that this rule comes in two flavors: one for the points and one for the paths. For this reason, we define algebras in two steps.

Having covered the introduction rules with the algebra structure, we now focus on the elimination and computation rules. For this, we utilize displayed algebras [26, 39], which represent the input of the elimination rule. For the output, we define displayed algebra maps, also known as sections. The elimination rule indicates that we have a displayed algebra map to every displayed algebra, while the computation rule specifies that the algebra is in place. Once we establish this framework, we can define higher inductive types on a signature.

Since our objective is to construct HITs, we need to find an algebra for which the elimination rule holds. For this purpose, we employ initial algebra semantics [4, 11, 39]. Specifically, we demonstrate that the initial algebra satisfies the induction rule. Therefore, to obtain a HIT, it suffices to construct the initial algebra, which is more convenient in the language of category theory.

With the input for the elimination rule in place, the subsequent step is to consider the output. This involves a dependent map that preserves the algebraic structure. To state this preservation property, we require yet another operation on polynomials.

Definition 5.5 states that if y is a displayed algebra over x, then a displayed algebra map to y consists of a map f : (x: x) â†’ y x such that for each x: jspt)x, we have f(pointx x) = cy x(spt f x).

It is noted that HITs satisfy rules analogous to those defined by Basold et al. The induction rule only ensures the existence of a dependent map. The obtained map is unique, which is further proved by induction. Furthermore, HITs on the discussed signatures, such as the integers modulo 2 in example 3.4 and the propositional truncation in example 3.5, adhere to the induction rule given in Basold et al.

To demonstrate that a HIT h is initial, it is necessary to show that for each algebra x, the set of morphisms from h to x is contractible. This implies that there is precisely one homomorphism from h to x. To establish the existence of this, we apply the following two lemmata.

We have elaborated on how to construct finitary set-truncated higher inductive types using the quotient and propositional truncation in theorem 6.14. Since truncations and the quotient can be derived from non-recursive HITs, this demonstrates that all finitary set-truncated HITs can be constructed from non-recursive ones. Additionally, we utilized this construction to establish the uniqueness of HITs in corollary 7.6 and to characterize their path space in corollary 7.8.

The method employed in this paper is critically dependent on the polynomials being finitary. To demonstrate that infinitary polynomials commute with quotients, the axiom of choice is required. Furthermore, Lumsdaine and Shulman presented an infinitary HIT that cannot be constructed from pushouts, and thus this result cannot be extended to infinitary polynomials.