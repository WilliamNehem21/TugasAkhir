The processor represents an almost complete hardware implementation of a Java virtual machine, and the paper aims to demonstrate initial results of using the B method, specifically the event-B subset, to model and verify the processor. The motivation behind this collaboration between AWE and Sandia is to show how formal methods, such as the event-B language and its refinement notion, can be used to verify the correctness of bytecode implementation in microcoded instructions. The paper provides an overview of the event-B language, its refinement concept, and discusses the analysis of the JVM instruction iadd as an example. It also explores how this work aligns with other formal approaches and how it could support the entire lifecycle of formally verified hardware.

The paper describes an abstract event-B specification, comprising a context and a machine, and explains how refinement is used to incorporate the artifacts of an implementation into a formal specification while maintaining correct behavior. It illustrates the approach with an analysis of the iadd arithmetic operation, showing how it pops two numbers off the stack, adds them together, and pushes the result back onto the stack. The introduction of sets such as bytecode and status is also discussed, and the paper outlines the use of the event-B refinement technique to describe the iadd operation in terms of microcoded instructions.

The paper addresses the proof obligations that arise in the refined model, emphasizing the importance of the guards of refined events. It also discusses related work in the area, including the approach taken by Panagiotis Manolios for modeling and verifying hardware using the ACL2 theorem proving system.

In summary, the paper applies event-B refinement to verify a Java processor and its bytecode implementation, demonstrating a proof of concept for using event-B as a formal development tool with a dedicated refinement technique. The authors note that the proposed approach has been tailored to take full advantage of the event-B tool.