The use of algorithm visualizations for teaching purposes has not been widely adopted. One reason for this is the difficulty of integrating visualizations into teaching materials. Recently, XML-based formats for major presentation tools have been introduced, and we propose a method and prototype implementation for creating algorithm animations in the ODF format, enabling seamless integration of these animations within lecture materials.

Additionally, the integration of visualizations into self-study materials has been explored in the context of HTML-based hypertextbooks, which allow for the integration of various types of animations. However, a challenge arises from the fact that visualizations are often topic-specific and may vary in appearance and terminology, causing potential confusion for both instructors and students.

The results of an international survey revealed that classroom set-ups vary widely, with the most common configuration being a class with a computer and a ceiling-mounted projector. Consequently, instructors may encounter difficulties in preparing for lectures, such as the need to download applets and create local webpages due to network connectivity issues. The installation of visualization software in lecture halls may also pose challenges, leading some instructors to rely on personal laptops for presentations. However, PowerPoint or PDF slides typically offer greater compatibility across different computer systems.

Furthermore, the lack of tools for generating slides has been an obstacle in the past, partly due to the use of closed proprietary formats by presentation tools. The development of open XML formats for these tools, such as Office Open XML and Open Document Format, has facilitated the implementation of such tools. Additionally, the use of XSLT simplifies the transformation of XML documents into formats used by presentation tools, with several tools available for these transformations.

A crucial step in the process involves converting SVG files into corresponding Impress snippets, which are then combined with parts created directly by Java code. This transformation is achieved using XSLT, which consolidates multiple SVG files into an ODF presentation. The output of this process is in the open document format, providing an open, XML-based file structure for office applications.

In summary, this work introduces a concept for developing tools that facilitate the creation of presentation slides containing algorithm visualizations. By integrating visualizations into existing presentation tools, instructors can avoid the need for separate visualization systems. The vision is to develop automatic tools that output algorithm animations as presentation slides, allowing instructors to customize the content and adapt it to their teaching needs. Challenges encountered during implementation were related to the ambiguity of the ODF specification and the positioning of graphical primitives, but efforts were made to address these issues.

Lastly, it is emphasized that automatically generated lecture materials can be augmented with dynamic documentation in the form of notes, enabling instructors to make their lectures more interactive.