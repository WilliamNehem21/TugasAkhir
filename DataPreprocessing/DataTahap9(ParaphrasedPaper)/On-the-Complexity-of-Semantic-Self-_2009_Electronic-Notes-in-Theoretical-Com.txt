The significant increase in the size of the formula indicates the inefficiency in determining whether properties can be efficiently, compositionally, and accurately verified in partial models. The findings of this study support this observation, as we have established difficulty levels that align with those for the validity problem of the respective logics. However, our difficulty results are limited to an upper bound of an exponential gap. Additionally, we are unable to demonstrate any difficulty results for determining whether a formula and its negation do not compromise precision in the manner outlined above.

Although temporal logic formulas used in practice are typically brief, an exponential or double exponential inflation in their size in worst-case scenarios may still be manageable. Nonetheless, we believe that the findings presented in this paper are noteworthy. They raise questions about the exact computational complexity associated with decision problems related to semantic minimizations and suggest connections with recent research on the complexity of decision problems for modal and mixed specifications [3,2,4]. These specifications are linked to the partial models examined in this paper.

In Section 2, we offer background information on the verification of partial systems and the concepts presented informally in the introduction. Our technical results, including upper and lower bounds on the computational complexity of decision problems for semantic minimizations in temporal logics, are presented in Section 3. Related work is discussed in Section 4, and the paper concludes in Section 5.

We assume the conventional satisfaction semantics between pointed Kripke structures and formulas of the propositional modal mu-calculus (MC), both of which are defined below. Refinement and the standard satisfaction notion enable us to define two judgments: one for generalized model checking (SAT, referred to as GMC in the cited location) and one for its logical dual (VAL).

The results and proofs in this paper are applicable only to sentences. Therefore, we use the notation of MC, PML, and PL as subsets of sentences of these respective logics. The context will always determine the correct interpretation of these symbols.

The algorithm will encounter the first if-statement and its guard will be true, as there is some x with M(x) = 1/2. Consequently, its for-statement will be executed, and for the first (indeed, all) x, it executes, we can now infer that the algorithm will accept.

The sentences in set V lose precision in both the pessimistic and optimistic compositional semantics. As unsatisfiable sentences are in PSM, sentences in set V must be satisfiable. Deciding the membership of set V is also at least as challenging as the satisfiability check of the relevant logic. To illustrate this, consider...

[As the paraphrased passage is quite lengthy, I have provided a partial paraphrase to demonstrate the style, but the content has been adjusted for brevity.]