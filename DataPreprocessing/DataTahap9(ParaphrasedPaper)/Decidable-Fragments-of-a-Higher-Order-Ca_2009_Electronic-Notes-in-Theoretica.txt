The problem of nation undecidability is a known issue in academic literature. However, it is interesting to note that strong bisimilarity is actually decidable, leading to the decidability of barbed congruence. On the other hand, it has been demonstrated that the addition of at least four static restrictions to the calculus renders strong bisimilarity undecidable.

In the context of the reduct, both parallel components are in folded form, but the least type of their s-component is 6. This suggests a need to allow the s-component to grow under reduction. Nevertheless, it has been observed that for any process p and its reduct p', there exists a uniform upper bound on the s-component of p', which is determined solely by p and is closely linked to the unfolding of recursive definitions.

The encoding of an instruction is guarded (as with the CCS prefix lm above) to ensure that the instruction can only be executed when activated. For the encoding of inc(ci, n), the content of location ri is read first, and then this content is placed inside location n in ri. Finally, the instruction indexed by n is activated through the forwarder process defined below.

In one case, either zero or nonzero can synchronize with the content inside a using the addresses az and an respectively (depending on whether the encoded number inside a is zero or non-zero). If the number was zero, zero is placed inside ri, the get-process is signaled using b, and the instruction indexed by n is activated. If the number was non-zero, the content of the outermost n-location, thereby decrementing the number by one, is placed inside ri, the get-process is signaled using b, and the instruction indexed by m is activated.

To activate the process representing the instruction indexed by 1, denoting the list of instructions as l={l1,..., lk}, the encoding of the Minsky machine in instruction i and with counters c1 and c2 can be written as follows: (l, i, c1, c2). An operational correspondence can be stated as follows.

The sendn process expects the encoding of the name to be communicated on v, and the continuation of the prefix on c. The receiven process expects the encoding of the continuation and is then ready to synchronize with the resulting sendn prefix. The significant cases of the encoding are input, output, and restriction.