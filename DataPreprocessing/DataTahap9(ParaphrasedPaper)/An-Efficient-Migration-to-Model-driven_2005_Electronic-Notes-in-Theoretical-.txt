The paper discusses the need to adapt existing development environments and organizations to accommodate new technology, with the aim of minimizing migration costs, retaining knowledge from existing applications, and maximizing the benefits of model-driven development (MDD) and associated tools. It suggests that automating the migration process as much as possible, using technologies from software architectures, product line engineering, and reverse engineering, can mitigate common issues associated with technological change. These technologies share a focus on patterns and their application in model-driven development.

It also highlights the potential of MDD in improving software development practices by enabling the reuse of application designs and concepts across different platforms through the separation of business logic from technical implementation details. However, it notes that some MDD approaches are constrained by specific implementation technologies, leading to a misalignment between theoretical MDD principles and practical implementation approaches.

The paper further discusses reverse engineering as a means of analyzing existing software systems to extract information, and proposes that comparing manually implemented applications with MDD implementations based on the same technologies can reveal technical similarities and alternative solutions to identical technical problems.

A case study involving a hypothetical mobile phone company, GoPhone Inc., embodies the concepts discussed in the paper. It demonstrates the application of Pulse-MDD in a reengineering-driven mode, wherein the architecture and manual implementations of existing components were analyzed to identify patterns, which were then used to generate code frames for additional components in the application layer. This iterative process led to the identification and implementation of an initial pattern set tailored to the chosen implementation technology (J2ME).