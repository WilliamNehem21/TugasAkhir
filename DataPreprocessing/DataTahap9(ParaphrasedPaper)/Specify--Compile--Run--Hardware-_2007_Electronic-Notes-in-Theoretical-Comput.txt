This academic paper illustrates the use of a synthesis method through two examples. The first is a generalized buffer from IBM, for which a well-defined specification is available and the second is an arbiter for an AMBA bus, a typical industrial design that is not overly complex. Previous work on synthesis has primarily focused on simple examples such as mutual exclusion protocols, elevator controllers, or traffic light controllers. This manuscript is unique in that it addresses realistic industrial examples for the first time.

This paper is a complement to another paper. The current paper delves into the details of the genbuf case study, while the other paper focuses on the AMBA example. It provides a comprehensive description of the algorithm developed to build a circuit from a binary decision diagram (BDD), outlines some extensions that were not included in previous work, and demonstrates a noteworthy enhancement in the AMBA example.

The paper proceeds as follows: Section 2 explains the process of synthesizing a circuit from specifications. Section 3 presents the generalized buffer, its formal specification, and the results of synthesis. In Section 4, the same is done for the AMBA AHB arbiter. Lessons learned are discussed in Section 5, followed by conclusions in Section 6.

The paper briefly revisits the results reported in another paper on synthesizing GR(1) properties. It explores the problem of realizability of PSL specifications and describes the process of reducing the realizability problem of a PSL formula to deciding the winner in an infinite two-player game played between a system and an environment.

The approach utilized yields a circuit capable of producing any output permitted by the strategy for a given input, utilizing a set of additional inputs to the combinational logic. The Genbuf case study involves three components: a controller, a FIFO, and a multiplexer. The controller is synthesized from its specification, while the implementation of the FIFO and the multiplexer is assumed to be given.

The paper then explains the AMBA AHB, its features, and the challenges encountered when attempting to synthesize arbiters for a larger number of masters. It also details the round-robin arbitration scheme and the validation of the resulting arbiter with manually written masters and clients.

The paper concludes by discussing the difficulties in finding small implementations for a given specification and the potential avenues for optimizing the synthesis process. It highlights the advantages of the resulting PSL specification and the utility of the synthesis algorithm in achieving consistent and complete specifications.

Furthermore, the paper emphasizes that although the resulting circuits are relatively large, there is potential for significant optimization in the future, ultimately making automatic synthesis a viable alternative to manual coding for certain types of circuits.