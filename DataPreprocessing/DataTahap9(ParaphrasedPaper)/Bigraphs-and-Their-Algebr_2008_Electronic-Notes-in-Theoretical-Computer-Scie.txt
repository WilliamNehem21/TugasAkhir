Bigraphs provide a framework that enables the formulation of both existing process calculi and novel behavior models, resulting in a shared theoretical foundation across these models. This paper presents a brief overview of the key characteristics of bigraphs, demonstrating their development from standard graph theory using elementary category theory. It also outlines the algebraic manipulation of bigraphs and summarizes the treatment of dynamics, while also discussing the origins and related work. This paper serves as an introductory motivation to the concept of bigraphs.

The utilization of space and spatial metaphor in computer programming extends to both the writing and explanation of programs, evident in the programming vocabulary that includes terms such as flow chart, location, send and fetch, pointer, nesting, and tree. The incorporation of concurrency further expands this vocabulary to encompass terms like distributed system, remote procedure call, network, and routing.

Elementary bigraphs consist of three types, including node-free bigraphs, placings, and linkings, from which all others can be derived through composition and product operations.

The modeling of large-scale informatic systems is currently in an experimental phase, and meaningful experiments are those conducted with real applications, real users, and an evaluation of their experiences, similar to the experimentation with programming languages. A group at the IT University of Copenhagen, led by Lars Birkedal, has initiated the design and implementation of a bigraphical language for specification and programming, along with its implementation as a simulator. Initial experiments with the language are now underway in their laboratory. Additionally, within the same group, bigraphs are also being experimentally applied to the modeling of business processes.