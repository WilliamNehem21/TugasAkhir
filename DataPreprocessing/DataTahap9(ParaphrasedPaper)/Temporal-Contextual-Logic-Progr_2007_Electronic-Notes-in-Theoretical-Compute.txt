The significance of representing and reasoning about temporal data is widely recognized both in the database and artificial intelligence communities. Contextual Logic Programming (CXLP) is a language that enhances logic programming with modularity mechanisms and has been identified as a potential shift towards object-oriented programming. This paper introduces a temporal extension of CXLP, known as Temporal Contextual Logic Programming, utilizing a reified approach to temporal qualification. This extension captures the concept of time within the context and includes syntax, operational semantics, and an application for workflow management.

CXLP is a powerful language that extends logic programming with modularity mechanisms and has been identified as a potential shift towards object-oriented programming. Additionally, it has been shown to be effective for designing and implementing organizational information systems. Temporal representation and reasoning play a crucial role in various areas of artificial intelligence, such as planning, scheduling, and natural language understanding, as well as in database research.

This overview assumes familiarity with the basic concepts of logic programming. CXLP utilizes a finite set of horn clauses designated by a unit, and its vocabulary encompasses variables, constants, function symbols, and predicate symbols. Furthermore, a unit is identified by a name shared by all clauses defined within it, and when an argument of a unit is instantiated, all corresponding variable occurrences within the unit are replaced accordingly.

Contexts, implemented as lists of unit designators, introduce an ordering to the units and each computation has a current context. In Temporal Contextual Logic Programming, the temporal qualification can be performed at the level of clauses, units, or contexts. Additionally, temporal relations can be classified into various classes such as fluents and events, each associated with a theory of temporal incidence. The theory of temporal incidence is encoded in the operational semantics, and unit designators can be considered as either events or fluents based on the current context.

The paper also presents inference rules specifying computations, with a focus on basic operators. Finally, the application of Temporal Contextual Logic Programming to workflow management systems is discussed, emphasizing the importance of automatic management of temporal aspects of information at both conceptual and runtime levels. This is an important and growing area of research, particularly in the context of workflow management systems.