An algebra is typically characterized by a set, operations defined on this set, and certain conditions that the algebra must satisfy. However, in some instances, these conditions can be replaced by an algorithm on terms constructed using these operations. In this paper, we demonstrate that this is the case for the concepts of vectorial space and bilinear function.

The concept is defined by a set, a function mapping language values to elements of the set, and n-ary programs to functions from mn to the set, such that a program produces a specific value based on its inputs and outputs. 

In the context of an ac-rewrite system, let l be a first-order language containing binary function symbols f1, ..., fn, and r be an algorithm defined by an ac(f1, ..., fn)-rewrite system on terms of the language l. An l-algebra m is considered a model of the algorithm r(m|= r) if...

To facilitate the application of the factorization rule to a specific term, the reductions in the rewrite system must be defined with respect to the associativity and commutativity of addition. This leads us to the following definition.

To achieve completeness, it is necessary to transform the axioms of the theory of fields into a rewrite system, which can be a challenging task. Nonetheless, there are fields, such as the field q of rational numbers, whose addition and multiplication can be represented by a terminating and ground confluent rewrite system. As a result, our focus will be on k-vectorial spaces over a given field k defined by a terminating and ground confluent rewrite system s.

Proposition 3.6 states that if a term has certain characteristics, then it has a specific form. 

In a more computation-oriented approach, we can define an algebra by a set, operations on this set, and an algorithm on terms constructed using these operations that must be valid within the algebra. For instance, a k-vectorial space is defined by a set e, the operations 0, +, *, and the algorithm r.