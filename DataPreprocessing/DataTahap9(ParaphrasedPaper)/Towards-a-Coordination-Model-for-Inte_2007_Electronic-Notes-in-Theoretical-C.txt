When modeling intricate interactive systems, traditional approaches based on interactors are limited in their ability to effectively combine the various interactors in the user interface model into a coherent system. This paper explores an alternative approach to interactor composition for specifying complex interactive systems, based on the coordination paradigm. We present the foundational principles of this approach and provide an illustrative example, along with identifying directions for future research.

Interactive systems can be considered a specialized form of reactive systems, with unique challenges when it comes to modeling and reasoning. Notably, interaction with the user, in addition to inter-component interaction, presents distinct complexities.

Coordinating interactions between different interactors typically involves adding additional interactors to express control logic for communication, leading to increased model complexity. Ideally, the coordination logic between interactors should be expressed in a natural and straightforward manner. Our paper investigates the application of the coordination paradigm to model interactor architectures, building on previous work by some of the authors.

The coordination paradigm offers a promising approach to address challenges in developing complex systems. By separating the coordination and computational components, this approach treats computational processes as black boxes, focusing on their externally observable behavior. This allows for a high-level abstract description of a system, with a clear separation of concerns between coordination and computation.

Interactors can generate data in two directions: towards the user and towards the application. This duality of behavior defines an interactor, with internal and external functions associated with information flow. Exogenous coordination models treat components as black box entities with purely syntactic interfaces, and this notion is extended to include CNUCE interactors.

The model provides a range of basic connectors and combinators to construct more sophisticated connectors and define complex coordination patterns. Notably, the model includes connectors for aggregating output and input ports, with specific behaviors for message transmission.

It's important to note that this work focuses on the main concepts of the approach, and the complete specification of the calculi involved in the examples is not covered in this paper. Additionally, there is a need to consider dynamic aspects of the user interface in modeling complex interactive systems, such as the runtime creation and destruction of components and changes in their interconnections.

In conclusion, this paper lays the groundwork for an alternative approach to interactor composition and coordination in complex interactive systems. It also outlines directions for future research, including the exploration of dynamic aspects in user interface modeling.