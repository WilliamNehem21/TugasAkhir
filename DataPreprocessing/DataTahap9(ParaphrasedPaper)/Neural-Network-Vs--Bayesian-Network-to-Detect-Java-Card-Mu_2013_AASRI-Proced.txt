Smartcards play a crucial role in various domains such as communication systems, authentication, and payment. They are often targeted by multiple attackers who manipulate the cards fraudulently to gain unauthorized access to the services they offer. Smartcards are susceptible to both software and hardware attacks, with recent attacks focusing on fault injection to modify the application behavior. This alteration of the compiled code allows attackers to override the initial program's intended execution. To address this issue, we propose two classification and detection methods based on artificial intelligence, particularly neural and Bayesian networks. We then compare the results obtained from these two methods in terms of the detection rate.

The chip operating system is stored in read-only memory (ROM), while the applications are stored in electrically erasable programmable read-only memory (EEPROM). Smartcards are considered as secure data carriers that store data in a secure manner and ensure data integrity, confidentiality, and availability during transactions. Security is a critical concern in smartcard development, with the threat of malicious attacks on the integrated software being a major issue. Fault injection is identified as the most efficient means of extracting secret information. To prevent and detect such attacks, smartcard manufacturers are implementing new options in their operating systems. Software fault injection is a technique that allows attackers to analyze the system's behavior, study its internal state, and modify application execution to deduce secret information.

Smart cards are widely used worldwide in digital security applications, despite having constraints on computing power and memory size. The Java Card architecture, based on Java technology, consists of different layers on top of the smart card hardware and operating system, with the Java Card Runtime Environment being the most important component. This environment includes the Java Card Virtual Machine (JCVM) and the API. The JCVM provides mechanisms to enforce system security, inheriting security mechanisms from Java specifications and incorporating some specific to the Java Card platform. The firewall, a specific component dedicated to security, enforces application isolation through the concept of security context. Due to limited memory, the bytecode verifier (BCV) is executed on a host platform for security. Because of the sensitivity of the data they contain and their inherent robustness, smart cards are targets of particular hardware attacks.

The fault attack, developed by Boneh, DeMillo, and Lipton aims to disrupt the physical processor environment to generate errors, initially targeting public-key cryptographic algorithms such as RSA and DES. Faults are introduced into the chip's execution environment to induce errors.

Neural networks are adept at learning, object identification, and interpretation, making them suitable for intrusion detection. Therefore, we explored the use of neural networks to detect fault attacks, as their strong intelligence does not necessarily require large size. Previously, we used the physical parameters of the card to feed the network. Theoretically, the implementation principle is feasible, and the designed system can detect changes in electrical properties. However, in practice, these parameters are under the control of the attacker, necessitating a change in the network's entry points.

Testing the network requires assessing new patterns, including new attacks. If the network consistently returns the expected values, it can be deemed capable of detecting attacks. In the case of the "debit()" function, the network successfully detected 126 out of 131 invalid paths and did not generate any false alarms from the 7 valid paths.