This paper presents our methodology, using graph rewriting (GR), to aid the visual modeling process in Tropos, an agent-oriented software engineering methodology. We illustrate the GR rules that define the syntax of Tropos and discuss how these rules can assist an analyst in constructing accurate models consistent with the Tropos language. Additionally, we examine how GR permits the adoption of flexible modeling language variants and supports an incremental modeling process.

Agent-oriented (AO) software engineering is a recent paradigm that encompasses engineering multi-agent systems and developing distributed systems based on the agent paradigm. Visual modeling plays a crucial role in AO approaches, particularly in the Tropos methodology, which relies on a visual modeling language and provides various analysis techniques. Tropos diagrams enable the representation of different aspects of model structure, while dynamic aspects are specified through formal annotations expressed as temporal logic formulas.

The paper is organized as follows: Section 2 provides a brief overview of the Tropos modeling language and outlines the challenges in developing a case tool for visual modeling using GR. We also revisit the fundamental features of GR that we will utilize. In Section 3, we describe our approach, including the set of GR rules for constructing a Tropos model, rules for supporting instance creation, and initial concepts for managing consistent changes or restructuring of a model. Related works are briefly discussed in Section 4. Finally, Section 5 presents conclusions and outlines future work.

The visual modeling process should yield a model that conforms to the syntax of the modeling language. However, this process often involves specifying partially correct models. For instance, creating a goal without an associated actor should be considered incomplete, and the analyst should be alerted. Furthermore, the analyst should be directed towards potential model completions and informed about prohibited actions, such as attempting to create an actor with an existing name.

To address the aforementioned challenges, we aim to leverage GR, specifically attributed GR, which allows for retaining relevant diagram information through attributes attached to graph nodes and edges representing the model. Additionally, the rewriting system should support complex conditions on rule application, including negative application conditions (NACs) and conditions on attributes.

We outline our approach in three basic steps: Section 3.1 describes the application of GR to guide analysts in designing valid models, Section 3.2 addresses supporting instance building, and Section 3.3 highlights techniques needed to provide restructuring and updating capabilities.

A Tropos model can be represented as a graph, with nodes representing entities like actors, goals, resources, and plans, and edges representing the relationships between these entities, such as dependencies and decompositions. Nodes and edges have attributes used to complete the entity specification. It is logical to represent the syntax of Tropos using a set of rules that generate all valid Tropos models.

For guiding the modeling process, we can utilize features provided by tools like AGG to suggest possible rule mapping completions and highlight potential completion objects. For instance, when creating a decomposition link, the tool can indicate all the possible subgoals that are valid completions for the rule.

A key advantage of our approach is that it ensures the construction of instances within a Tropos model. Using a set of rules for instances, we can create numerous instances for the Tropos diagram, all guaranteed to be compatible with the model itself.

For restructuring a model, such as creating subgoals and destroying other links except decompositions, the same technique can be applied to update all instance diagrams. Among available GR tools that offer advanced editing functionalities, we prefer AGG due to its focus on providing a graph transformation engine, which can be integrated into a broader case tool developed in our research group.

In summary, we have described our GR-based approach to support the visual modeling process in Tropos, and we have showcased examples of Tropos rewriting rules that facilitate the construction of accurate models. Our approach offers flexibility in adopting modeling language variants and can accommodate the definition of partially correct models. Additionally, derivation transformation holds promise for supporting the restructuring of a model in consistent ways. We are currently defining a suitable notation for representing derivation history and completing the implementation and validation of these techniques in AGG.