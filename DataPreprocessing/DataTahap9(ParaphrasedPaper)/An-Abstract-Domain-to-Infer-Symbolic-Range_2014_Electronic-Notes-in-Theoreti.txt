The information about the ranges of program variables is valuable for a variety of purposes, including compiler optimization and program analysis. The interval abstract domain, within the scope of abstract interpretation, infers numerical boundaries for each program variable. However, in certain scenarios such as automatic parallelization, it is often desirable to have symbolic ranges. This paper introduces a new abstract domain called parametric ranges to infer symbolic ranges over nonnegative parameters for each program variable. This domain is developed with consideration of the insight that program procedures in certain contexts often involve nonnegative parameters, such as the length of input lists and the size of input arrays. The parametric ranges domain aims to deduce the lower and upper bounds for each program variable, where each bound is a linear expression over nonnegative parameters. The time and memory complexity of the domain operations for parametric ranges is O(nm), where n is the number of program variables and m is the number of nonnegative parameters. The paper also demonstrates the application of parametric ranges to infer symbolic ranges of list segment sizes in programs that manipulate singly-linked lists, and provides preliminary experimental results.

The paper mentions that the bounds inferred are numerical constants, but in certain applications such as automatic parallelization, symbolic bounds analysis, and bitwidth analysis, symbolic ranges are preferred. Symbolic ranges are expressed as symbolic expressions over program variables other than the variable itself.

The rest of the paper is structured as follows: Section 2 discusses related work, Section 3 presents the new abstract domain of parametric ranges, Section 4 demonstrates the application of parametric ranges, Section 5 presents the prototype implementation and preliminary experimental results, and Section 6 provides conclusions and suggestions for future work.

Value range analysis has been a topic of interest in several areas such as compilation optimization, automatic parallelization, and program analysis. The paper discusses the interval abstract domain proposed by Cousot and Cousot for performing interval analysis using widening and narrowing. This domain can only deduce numerical bounds of variable values but is practical for large-scale software due to its linear time and space complexity.

The paper compares its domain of parametric ranges with the abstract domain of symbolic range constraints presented by Sankaranarayanan et al., highlighting differences in the expressiveness and time complexity of the two domains. Additionally, the paper contrasts its domain with the gauge domain, pointing out distinctions related to the type of parameters and coefficients used in the analysis.

In the context of future work, the paper anticipates conducting experiments on larger programs and exploring the application of parametric ranges in areas like buffer overflow analysis. Another potential area for future work is to investigate the use of nonlinear expressions over nonnegative parameters as symbolic ranges.