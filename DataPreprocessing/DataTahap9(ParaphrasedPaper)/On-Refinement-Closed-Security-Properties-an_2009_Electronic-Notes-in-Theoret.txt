We demonstrate a method for relaxing a category of properties, which encompasses both information flow and causation properties, to make them applicable to abstract systems. The relaxed properties disregard any pairs of conflicting behaviors that would have violated the original property from which they were derived. We also present an approach to modify existing automated tests for these properties so that they can be used to test the relaxed versions instead. This allows for greater flexibility in applying these properties to compositions of nondeterministic components.

The refined property that addresses the absence of causation, referred to as non-causation, specifically states that events from set A cannot cause any of the events from the separate set B to occur. This is determined by assessing whether all occurrences of events from set B and any non-A event that precedes a B event are independent of the occurrence of events from set A. In this context, the associated predicates may be formulated as a set of divergence-free components {c1,..., cn}, where each component, ci, has an associated alphabet of events, ai, in which only valid implementations can be constructed by composing refinements.

In a previous section, we argued that pairs of behaviors that arise due to the non-deterministic actions of one or more components should be considered inconsistent. As a precaution, we consider all other pairs of behaviors to be consistent, and now we formalize this intuition.

Furthermore, when the property of refinement-closedness is applied to a system consisting of two components with disjoint alphabets, denoted as H and L respectively, it is exemplified by the system from section 1.4. For refinement-closed non-deterministic causation (RCNDC), the predicate can be defined as follows.

Under these conditions, for systems comprising just two components with alphabets H and L respectively, the predicate satisfies the condition above, and thus the relaxed counterpart of RCNDC will be satisfied for all such systems. This aligns with our earlier belief that there should be no information flow from high to low in the system from section 1.4. Similarly, this argument applies in the reverse direction, for information flows from low to high.

This realization further supports the notion that systems constructed by interleaving components should not contain any information flows between those components. Additionally, it is noted that such systems can fail RCNDC if they include non-deterministic components, as the system may contain insecure refinements. Here, we have demonstrated how to weaken RCNDC to properly handle processes that model systems built by interleaving components, by rejecting all such refinements. We revisit this concept later in section 4.

CSP is employed to describe processes that, when composed in parallel, can communicate with each other by synchronizing on shared events. The occurrence of an event can be considered as an atomic communication between the processes that synchronize on it. An event that is synchronized on by a set of processes can only be executed when all the processes in the set agree to do so, and is refused otherwise.

The process P | Q represents an external choice between P and Q; the initial events of both processes are offered, and when an event is executed, the choice is resolved. P [] Q represents an internal or non-deterministic choice between P and Q; the process can act like either P or Q, with the choice being made according to some unspecified criteria. If P offers A and Q offers B, then unlike P | Q, P [] Q can offer either A or B, but not both. P || Q is the process that can act like either P or Q, except that it offers only the initial events of Q; it can refuse the initial events of P.