This academic paper discusses how different logics emerge from the study of type systems for a particular language. The authors express their motivation to understand the relationship between an existing quantum logic and quantum programs. They introduce theorem 4.12, which guarantees that all typable terms have a normal form, eliminating the need for restrictions on closed normal forms in the language's reduction rules. The paper also presents an original approach to encoding quantum bits and gates, highlighting conflicts with the scalar type system due to its requirements for conditional functions.

The authors propose an inventive use of the curry-howard isomorphism to remove terms from the inference rules of scalar and establish the scalar logic (SL). They stress that SL is not an ad hoc logic but a naturally arising result of applying a well-established method to a language inspired by quantum computing. The paper concludes with a discussion section aiming to comprehend the meaning of SL, providing intuitions and culminating in theorem 5.7. Furthermore, the paper introduces the concept of bounded linear logic (BLL), distinguishing it from linear logic (LL) by emphasizing its limitations on adding new resources. It discusses the potential for building a vectorial type system to handle the direction, addition, and orthogonality of types in the future.