An idea relating to analogies is that two analogies can be combined as long as they do not share any symbols. There are three possible ways of combining analogies that align with this idea. However, from a formal perspective, combining is not the sole option. It is also possible to mix symbols, for example: "a=bb: bab," but we will dismiss this possibility.

The definition mentioned above conforms to the typical presentation of formal languages, which focuses on generating a language. Consequently, the standard structural induction is employed to produce all the members of a language of analogical strings. Beginning with the elements of 'a,' all potential analogies with the elements of 'm' as models are applied.

The corresponding issue to generation is that of recognition. With an analogical system, the grammaticality of a given string, meaning its membership in a language, is assessed against the set of confirmed strings of that language, after the reduction of the given string by analogy, using the set of models. For recognition, the strings in the pairs of 'm' are employed in the opposite direction of their appearance in 'm,' and the analogies are solved in the reverse direction to that used for generation. This is feasible because of the inversion of ratios in theorem 2.1.

Consistency: "fan bn=n1g(fabg; fab! aabbg)." This is proven by induction on 'n.' Base case: "ab2(fabg; fab! aabbg)" is true, based on the definition of a language of analogical strings. Induction: assuming that "an bn" is a member of...

Proof: Let (a; m) be a language of analogical strings. Let's call "ka" the maximum of all "jw j" with "w" in "a." "ka" exists because "a" is finite. Let's also call "km" the maximum of all "jv0 j jv j" with "v! v0" in "m." "km" also exists because "m" is also finite.
