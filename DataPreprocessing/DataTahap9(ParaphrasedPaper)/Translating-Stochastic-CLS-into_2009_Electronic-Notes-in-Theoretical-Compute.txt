The rest of the paper is organized as follows. Section 2 provides a brief description of cls and stochastic cls. Section 3 presents an overview of maude and real-time maude, as well as the translation of stochastic cls into the latter. Section 4 presents an analysis of some examples and a model of the lactose operon regulation in E. coli. Section 5 concludes the paper with an overview of related work.

Stochastic cls extends cls by incorporating stochastic rates associated with the application of rewrite rules. Specifically, in stochastic cls, rewrite rules are augmented with a rate constant that is multiplied, in the semantics, by the number of different occurrences of instantiations of the left-hand side of the rule in the term to which the rule is applied. This mirrors the approach commonly used in chemical kinetics, where the rate of occurrence of a chemical reaction is computed by multiplying the kinetic constant of the reaction by the number of possible combinations of reactants. Instead of providing a detailed definition of the semantics of stochastic cls, we demonstrate in the following section how to calculate the rate of application of a stochastic cls rule in a maude specification.

The scls module defines the data structures required by the simulation algorithm. The state of the system is modeled by the term incorporated within the clsterm class. Additionally, another class named admin is defined to store all variables in the algorithm. The scls module includes the following definitions:
- The operators lotka and adm represent objects instantiated from the clsterm and admin classes, respectively.
- The operator reactionnum denotes the number of reaction channels, denoted as m.
- The occ function is used to define the propensity of each reaction.
- The rules initialise1 to initialise100 serve two purposes: computing the cumulative propensity acum using the sum function defined in module scls, and initializing the random number generator with 100 distinct numbers to model nondeterminism in the system and allow the simulation to run in 100 different behaviors.

One method of analyzing reactions using our approach involves conducting a simulation of their maude model. As maude lacks features for visualizing the result of a simulation, we attempt to plot charts representing simulation results and compare our findings with similar charts from previous works.

The simulation results indicate that within 1/10 time units (e.g., after 0.0999 time units), the lotka reactions will cease because the execution of the next tick rule will advance time to a point greater than the time limit (1/10 time units). Using attribute a, we can calculate the number of molecules of each reactant that are present at the end of the simulation.

By utilizing the search command, it is possible to explore all potential behaviors of the system. We have defined 100 rules to initialize the random number generator with 100 distinct random numbers, enabling the maude engine to traverse a state space with 100 different behaviors. While this approach cannot cover all possible behaviors of the system, it provides a significant sample of behaviors. An example demonstrating the use of a search command initialized with 4 molecules of s1 and 4 molecules of s2, limited to the first 10 states in which no more occurrences of s2 are available in the system, is presented.

Another useful search command is the find earliest command, which seeks the earliest time at which a given state is reached. An example illustrating that the earliest time s2 vanishes from a system initialized with 4 molecules of s1 and 4 molecules of s2 occurs within 3/50 time units (e.g., after 0.0563 time units) is provided.

We provide two examples of model-checking for lotka reactions with 4 molecules of s1 and 4 molecules of s2 as initial states. The first example demonstrates that s2 will eventually vanish from the system in 1 time unit, while the second example shows that the amount of s2 will eventually become less than the amount of s1 in the system within 1 time unit.

We translate the stochastic cls model into maude and conduct an analysis. The simulation runs quickly and yields behavior similar to the results in the work by Barbuti, Carvagna, Maggiolo-Schettini, Milazzo, and Pardini. Our objective in this paper is to demonstrate that we can perform not only chart-based analysis but also analysis of logical properties of the system. We examine two properties of this case study.

The first property pertains to the amount of enzymes (beta galactosidase and lactose permease) in the absence of lactose in the environment. The number of such enzymes (in terms of molecules) should always be below a certain limit. Here, we show that our model satisfies this property, with 20 as the limit. We utilize the maude search command to verify whether there is a state in which the number of beta galactosidase or lactose permease exceeds 20. The maude engine indicates that there is no such solution, implying that no such state exists.

The second property concerns the amount of enzymes beta galactosidase and lactose permease in the presence of lactose. We aim to show that with the presence of lactose, the number of such enzymes will eventually surpass 20. We use the maude model check command to confirm this property, and the result indicates that this property holds in our system.

We have introduced an approach for studying stochastic cls specifications of biological systems using real-time maude. Our approach allows for the analysis of a biological system not only through the observation of charts representing simulation results but also via logical formulas. We demonstrate the applicability of our approach by verifying two properties of the lac operon model.

For future work, we are interested in further exploring probabilistic model checking. In this paper, we analyze properties that can only have Boolean values. It would be intriguing to expand the language to support answering queries with numeric values, such as the probability of an event occurring within a specific time period. Currently, only queries related to time can be answered, such as finding the earliest time an event occurs.

Reference:
Muffy Calder, Stephen Gilmore, and Jane Hillston. Modelling the influence of RKIP on the ERK signalling pathway using the stochastic process algebra PEPA. In Anna Ingolfsdottir and Hanne Riis Nielson (Eds.), Proceedings of the BioConcur Workshop on Concurrent Models in Molecular Biology, August 2004.