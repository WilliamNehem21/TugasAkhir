This academic paper introduces a modified version of interface automata called Interface Structure for Security (ISS), which is designed to model security in stateful interfaces. The focus of the paper is on non-interference properties, particularly bisimulation-based non-interference for reactive systems. The notion of compatible interfaces is defined, allowing for the composition of secure interfaces. An algorithm is provided to determine whether an ISS can be made secure by controlling actions involving monitoring. The paper also addresses the need for confidentiality of monitoring-related actions as opposed to public actions related to transactions.

The work presented is a novel contribution to an area with limited prior research. It is noted that previous work by Cassez et al. addresses synthesis problems for non-interference but does not differentiate between input and output actions, whereas this paper introduces algorithms specifically for trace-based and simulation-based non-interference for timed automata.

The structure of the paper consists of a section on interface automata fundamentals, followed by the extension of interface automata to incorporate security considerations. A detailed explanation is provided on how the composition of secure interfaces may result in an insecure interface and the algorithm presented to derive a secure interface from the resulting composition. The paper concludes with an overall summary of the findings. Additionally, the paper omits the proofs for brevity.

The interface automaton is defined as a model for capturing the interactions between a system component and its environment through input, output, and hidden actions. The parallel composition of interface automata is discussed, with a focus on defining new interface restrictions to ensure correct behavior. The product of two compatible interface automata is also defined, along with the process for defining the resulting composition interface. Furthermore, the extension of interface automata to incorporate security considerations is outlined, including the separation of actions into public and private categories and the definition of non-interference properties for secure manipulation of information. The process for deriving a secure interface from composed interfaces, as well as the algorithm to accomplish this, is also detailed.