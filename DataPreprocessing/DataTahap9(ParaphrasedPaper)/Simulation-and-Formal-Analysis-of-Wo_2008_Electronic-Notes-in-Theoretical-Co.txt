The conventional method of storing data involved the use of paper, and a piece of paper containing information was considered a token that moved through fundamental activities, known as work items, which were used by colleagues to carry out tasks in a predefined workflow. The series of activities within this workflow determined the sequence in which tasks were to be performed.

The formalism of dataflow networks was designed to represent intricate, distributed computing systems with clearly defined meanings. Positioned between the BPEL model and the verification model (Promela implementation), this formalism blends the state-based portrayal of finite state automata and the data/token flow of Petri nets. Additionally, the use of dataflow networks allows for fault simulation by introducing additional rules and node states.

A workflow execution engine can manage the tasks of multiple individuals and is typically linked to numerous computers belonging to independent organizations. Since these computers are loosely connected with no assurance of availability, potential failures need to be taken into account. To address this, it is advisable to introduce redundancy into the workflow and then verify if the planned fault tolerance has been achieved.

In this paper, we propose a method for validating the correctness properties of workflows implemented in BPEL. Dataflow networks are utilized to establish the formal semantics of the workflow, where the BPEL model is translated into a dataflow network, and the dataflow network is then converted into a Promela model.