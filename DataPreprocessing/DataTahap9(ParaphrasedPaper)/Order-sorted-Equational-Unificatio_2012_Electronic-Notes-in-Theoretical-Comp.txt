This paper introduces a rule-based algorithm for conducting order-sorted e-unification by leveraging an unsorted e-unification decision procedure, assuming common practical conditions for e. The algorithm has been implemented in Maude for compatibility with the Maude-NRL protocol analyzer, and the unsorted e-unification has been carried out using Cime for any set of AC and ACU axioms. In many relevant examples, the use of order-sorted unification over unsorted unification has led to a reduction in the total number of considered unifiers and significantly improved the performance of the Maude-NRL tool.

The paper is structured as follows: Section 2 provides a review of fundamental definitions of order-sorted algebra and unification. Section 3 presents the algorithm for computing order-sorted unifiers from unsorted unifiers. Section 4 demonstrates its application for AC and ACU order-sorted unification in Maude, and Section 5 provides a proof of its correctness. Lastly, in Section 6, we discuss related research and suggest potential avenues for future exploration.

To validate these concepts and confirm the assumption, we have enhanced an alpha version of Maude to enable communication with Cime by transmitting unsorted unification problems as strings and parsing the unsorted unifiers returned from Cime into Maude terms. As an additional check, the parsing process verifies that the substitutions returned by Cime satisfy assumption(e). In our experience, these checks have consistently been satisfied using the procedure. We then apply the sort propagation algorithm described in the preceding section to generate order-sorted e-unifiers. The order-sorted unification procedure is deployed to analyze cryptographic protocols with algebraic properties of associativity and commutativity using the Maude-NRL protocol analyzer.