An embedded system is a component of a product that is not directly interacted with by the end user. Industrial embedded systems, such as adaptive cruise control systems, automotive systems, and nuclear power plants, rely on software and are often characterized by safety-critical properties. The conventional finite state machine (FSM) model is widely used for control flow specification and has various associated analysis methods, but it does not adequately handle data flow. To address this limitation, an extended finite state machine (EFSM) model has been proposed. Despite this, test generation for EFSMs is more challenging. This paper discusses testing issues for embedded systems modeled as EFSMs and presents a framework to address these challenges. The main components of embedded systems and their interactions are introduced, along with testing issues based on predicated EFSMs (P-EFSMs). The paper is organized as follows: Section 2 reviews conventional FSM and EFSM models and provides a brief comparison, Section 3 discusses modeling embedded systems based on P-EFSMs, Section 4 identifies the main properties of an embedded system to be tested and explains the testing principle, and Section 5 provides a conclusion. EFSMs were introduced to improve the description capability of FSMs by incorporating additional state variables and interaction parameters, which are used in programming languages to specify conditions on transitions and calculations performed during transitions. Estelle, a standardized formal description technique based on structured communicating extended state automata and Pascal, is geared towards specifying complex distributed systems, especially communicating systems. The key component of an embedded system is the controller, which communicates with sensors and actuators via events. Input events from sensors trigger transitions in the controller. Testing is categorized into general and special testing, with general testing focusing on properties that must hold independently of the system's special semantics and special testing addressing properties determined by the system's semantics. Predicates are used to define conditions for transitions in P-EFSMs, and it is possible to determine if a given P-EFSM is incomplete. This can be done by checking the states of the specified behavior of the P-EFSM against potential input events at each state.