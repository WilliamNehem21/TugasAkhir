Verification of temporal logic properties is essential for establishing the intended behaviors of hybrid systems. In this study, we introduce an interval method for validating properties expressed by bounded linear temporal logic. Our approach relaxes the problem to permit inconclusive results when the verification process cannot achieve a specified precision. We also present an efficient and rigorous monitoring algorithm that demonstrates the decidability of the problem. The algorithm conducts a forward simulation of a hybrid automaton, identifies time intervals during which atomic propositions hold, and validates properties by propagating these intervals. Each step computes a continuous state at a specific time, enclosing it within an interval vector proven to contain a unique solution. Our experiments demonstrate that the proposed method serves as a valuable tool for formally analyzing nonlinear and complex hybrid systems.

The verification of temporal logic properties in hybrid systems is a challenging and crucial task that spans computer science, numerical analysis, and control theory. Several methods for falsification of hybrid systems with temporal properties have been developed, enabling the verification of various properties, such as safety, stability, and robustness, for large and complex systems. Current tools rely on numerical simulations, but the presence of numerical errors often leads to qualitatively incorrect results, posing challenges even in statistical evaluations.

Previous studies have applied interval methods to reachability analysis of hybrid systems, providing an overapproximation of reachable states with a set of boxes. This technique, often yielding a proof of unique solution existence within resulting intervals, has not been widely incorporated into methods for hybrid systems. Our method utilizes the proof to verify more generic temporal properties.

To address numerical errors in simulation-based verification, our interval method can be integrated with statistical methods, aiming for both reliability and practicality. Additionally, we rigorously ensure robustness by verifying that trajectories intersect with each boundary in the state space, thus addressing concerns about non-robust trajectories inconsistent with the model due to numerical errors.

We also propose a specialized method for stability properties and translate the verification problem into a reachability problem with the k-liveness scheme. Furthermore, we model hybrid systems as hybrid automata and propose a method extendable to handle non-deterministic systems by enumerating possible paths and computing trajectory enclosures.

Experimental results demonstrate promising practical applicability and reliability of our approach, showing a strong potential for formal verification of temporal properties in hybrid systems.