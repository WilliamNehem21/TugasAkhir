Creating covering arrays (CA) with the smallest possible number of rows is a difficult task, as existing CAs often contain redundant combinatorial interactions that can be eliminated to reduce the number of rows. In this study, we address the issue of eliminating redundancy in CAs using a metaheuristic post-optimization (MPO) approach, which comprises three main components: a redundancy detector (RD), a row reducer (RR), and a missing-combinations reducer (MCR). The MCR employs simulated annealing to reduce redundancy, and the MPO was tested on 21,964 CAs from the National Institute of Standards and Technology (NIST) repository, resulting in 349 new upper bounds for these arrays.

Covering arrays (CA) and mixed covering arrays (MCA) are extensively utilized in various applications, including the design of test suites for software combinatorial interaction testing and parameter fine-tuning of metaheuristic algorithms. The main motivation for using CAs and MCAs is their ability to effectively capture combinatorial interactions in different contexts.

Non-optimal CAs, which cover more than once, present an opportunity to reduce the number of rows in an array. Through our approach, we are able to detect and remove redundant rows using a combination of the redundancy detector (RD), row reducer (RR), and missing-combinations reducer (MCR), which is implemented using a simulated annealing algorithm. The MPO was extensively tested on 21,964 CAs from the NIST repository, leading to improvements in almost all CAs and setting 349 new upper bounds for these arrays.

The remaining sections of this paper are structured as follows: Section 2 presents the details of the MPO approach, including the redundancy detector, row reducer, and missing-combination reducer components, while Section 3 showcases the results of instantiating the MPO with the entire NIST repository of covering arrays.

The row reducer algorithm operates in a greedy manner to minimize missing combinations by identifying and removing a row that leads to the fewest number of missing t-wise combinations. On the other hand, the missing-combination reducer (MCR) component, implemented using a simulated annealing algorithm, aims to reduce the number of missing t-tuples to zero in the input parameter matrix. The simulated annealing algorithm utilizes a static geometric cooling schedule controlled by parameters such as initial temperature, decreasing function, ending temperature, and a finite number of iterations of the local search at the same temperature. Additionally, a frozen factor parameter is introduced to control the number of temperature reductions without improvement towards a solution, serving as an alternative termination criterion when the search stagnates.