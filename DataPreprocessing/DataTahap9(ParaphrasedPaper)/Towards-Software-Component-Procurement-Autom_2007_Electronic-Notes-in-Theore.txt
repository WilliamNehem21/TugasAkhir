The method of component-based development and formal language research communities have proposed various solutions for mapping component features at levels of abstraction beyond implementation. Over the years, different approaches have been suggested to address the typical issues of component adaptation and wiring. Some of these methods, like CL, Koala, Piccola, and abstract behavior types, have a more formal nature, while others take a global perspective on component integration and embed the concepts of composition in a less formal development framework. The most well-known of these development methods, most of which are based on object technology, include OMT, Fusion, Room, HOOD, OOram, Catalysis, UML Components, Select Perspective, FODA, and the Rational Unified Process (RUP).

While many concepts from these methods are successfully applied within organizations, their universal applicability across organizational boundaries is limited due to their complexity and close alignment with specific graphical notations and tools that hinder easy information exchange between stakeholders. 

Formal component composition and coordination languages have sought to raise the discussion about component composite properties to a higher level of abstraction to avoid a full implementation cycle; however, these have not gained traction in the industry due to the perceived high initial investment associated with rigorous specification techniques. An exception to this is Koala, which has emerged from an industrial context, but it is limited in that it only provides syntactical mappings for object wiring and does not consider behavior.

The Latent Semantic Analysis (LSA) is based on a terms-by-documents matrix that represents the occurrences of terms in existing documents, with singular value decomposition (SVD) used to derive the latent semantic structure model from this matrix. This leads to the generation of three other matrices: T, S, and DT. Analysis of the callisto case study revealed that the available UML diagrams contained crucial concepts that were not accounted for in the analysis, resulting in poor linking of concepts in these documents. It is suggested that textual descriptions are likely to yield better results, although graphical notations are increasingly used in industry due to their ease of understanding. In the future, there will be a need to consider automatic extraction of information from graphical notations for availability in textual form.

LSA has proven to be helpful in identifying relevant components from a large repository, but it does not support the assessment of likely adaptations to be carried out in the next step of component procurement. Therefore, this remains an unresolved issue.