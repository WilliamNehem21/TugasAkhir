The use of theorem proving tasks is widespread in computer science, particularly in areas such as program specification, transformation, and verification. However, the proof tasks encountered are often not general in nature; that is, they do not need to establish validity in all models of the underlying logic specification.

The paper is primarily non-technical and high-level, focusing on relevant issues in automated inductive theorem proving (itp) that make the problem challenging. It assumes some basic knowledge, terminology, and notations in first-order logic, and suggests that familiarity with itp in theory and practice is necessary to truly understand and appreciate the analysis developed. The paper provides numerous references to works in the field to facilitate further study.

The paper discusses the difficulties involved in automated disproving of conjectures, including model building and the construction of counterexamples, noting that this area has not received sufficient attention in the automated reasoning community.

It points out that most itp systems and approaches focus on universally quantified first-order formulae and that introducing existential quantification complicates the process. The paper also mentions the challenges of the inductive saturation process, explicit vs. implicit induction, and case analysis in itp, noting the lack of comprehensive literature on these topics.

The paper provides some commentary on the current state of the art in itp and describes various itp systems, highlighting their features and capabilities. It emphasizes the importance of itp in many verification and reasoning tasks in computer science and aims to contribute to a better understanding of itp and initiate further discussions in the itp community to advance the field.