The increasing prevalence of mobility has introduced additional layers of complexity in the design and development of software systems. This study explores how architectural description techniques can be enhanced to facilitate the gradual and incremental construction of location-aware systems. Our approach aims to seamlessly integrate and manage mobility into architectural models of distributed systems without imposing restrictions on decisions made at the levels of computation and coordination. This enables a clear separation of concerns between computation, coordination, and distribution at the architectural model level.

We demonstrate that architectural connectors can be utilized to externalize interactions among components, allowing for the transformation of location-transparent architectural models into location-aware ones through the overlay of distribution connectors over components and connectors. Consequently, this approach enables the regulation of component and connector dependencies on location and network infrastructure properties without disrupting the location-independent aspects of computation and coordination.

We introduce the concept of conditional multiple assignments when the write frame is empty, and define the instantiation of roles with components based on the fulfillment of role obligations. Furthermore, we describe refinement morphisms between designs and connectors, which allow for the exchange of components and connectors while preserving the overall system structure.

Each local channel is associated with a specific location, denoted by the syntax x@l in the declaration of x, indicating the location where the values of x are available. A change in the value of l implies the movement of x and other channels and actions located at l.

We discuss the use of location connectors as standard solutions that can be applied across different components, and emphasize the importance of making them and distribution connectors available in libraries to assist designers in creating location-aware architectural models. Ongoing work involves expanding the algebra of connectors to systematize the process of publishing, finding, and reusing connectors.