The non-confluence leads to various technical challenges. Unfortunately, the existing definition of infinite normal forms in [2,3] necessitates addressing these issues separately for each distinct infinite normal form defined. A more advanced framework was proposed to separate the substitution-related issues from the rewrite system-related issues. This separation is accomplished by connecting the infinite normal form of a term graph with the infinite normal form of the unwinding of the term graph. However, this separation requires assuming that the infinite normal form of a graph is equivalent to the infinite normal form of its unwinding. In the context of modeling programming languages, this implies that letrec cannot be used to model sharing-sensitive side effects such as assignment. Instead, one can initially model the sharing-sensitive side effects in a non-recursive setting and then incorporate recursion using letrec.

In this paper, we will first introduce the notion of infinite normal form following the preliminary discussions. Subsequently, we will extend rewrite relations and infinite normal forms from terms to graphs. Using these extensions, we will identify a class of term graph rewrite systems for which we will define extensions of infinite normal forms from terms to term graphs.

One approach to deriving a cyclic extension is to modify the right-hand sides of the given rewrite rules to utilize letrecs for substitutions, followed by adding rewrite rules that do not modify the unwinding, and completing the process. The simple cyclic extension of the lambda calculus in the introduction (1) was obtained using this method. If a cyclic extension of an orthogonal crs is derived in this manner, the theorem established in [reference] might be valuable in demonstrating infinitary soundness.

However, it is not always feasible to expect this due to the fact that a rewrite step on a cyclic term often corresponds to more than one step on an approximation. The completeness issue is extensively discussed in [reference], but in this paper, we simply present the solution.

We have presented a framework for extending the definitions of infinite normal forms from term rewrite systems to term graph rewrite systems. The non-confluence problems, which previously had to be addressed for proving the uniqueness of infinite normal forms, are now addressed in a proof of infinitary soundness. One advantage is that in a proof of infinitary soundness, we can utilize established results regarding rewrite rules that preserve the unwinding of a term. This framework does not replace the concept of skew confluence, which is still useful for proving results about rewrite rules that preserve the unwinding of a term.