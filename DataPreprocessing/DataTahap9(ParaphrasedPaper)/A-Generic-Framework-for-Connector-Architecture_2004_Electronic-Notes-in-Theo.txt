The past decade has seen a growing recognition of the significance of architecture descriptions, particularly in relation to the complexity of large software systems. Various formal methods have been put forward to address this complexity. The concept of flexible components for software systems and infrastructures has gained widespread acceptance as an effective abstraction mechanism for constructing large software systems from smaller parts. While there are numerous approaches available, only a few are versatile enough to be applied to different specification techniques. To achieve a comprehensive concept, attention must be paid to the fundamental aspects of components and component-based systems, including their interfaces, compositionality, and integration into the environment.

We now present an architecture centered on connectors and components. Similar to connectors, we create an architecture diagram and an architecture graph to represent the architecture at the specification level and as a graph, respectively, with nodes representing connectors or components.

For binary components and binary connectors, we use the infix notation comp=comp1+con comp2, while for other cases, we employ the notation comp=con(comp1,..., compn, con1,...,conn). The following results can be extended to the composition of connectors with multiple import interfaces.