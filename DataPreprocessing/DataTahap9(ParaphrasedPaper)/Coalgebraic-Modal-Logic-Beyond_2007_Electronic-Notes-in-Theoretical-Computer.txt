In recent years, there has been a surge of interest in coalgebra as a unifying abstract framework for studying transition systems [29,16]. Various types of systems in theoretical computer science, such as labelled, probabilistic, and timed systems, are represented as coalgebras for specific behavior functors in the category of sets and functions. Additionally, other categories, such as presheaf categories and the category of nominal sets (nom), are also explored to model process algebras with name binding. The coalgebraic approach provides a theoretical foundation for concepts like coinduction and bisimulation.

The initial abstract approach to logics for coalgebras was Moss's coalgebraic logic, which offers expressive logics for all functors on sets. Although powerful, coalgebraic logic can be challenging to use in practice due to its syntax involving the application of behavior functors to formulas and the lack of intuitive modalities found in logics like Hennessy-Milner. On the other hand, logics developed in other studies are more closely aligned with familiar concrete presentations, but their expressiveness is contingent on certain conditions imposed on the behavior functor. For instance, modalities in some studies involve predicate liftings that map predicates on x to predicates on bx, where b is the behavior functor, and the resulting modal logic is expressive provided there are sufficient predicate liftings available.

Our approach is influenced by recent work by Kurz and Bonsangue, who utilize stone dualities to derive logics for coalgebras on arbitrary categories, as well as the work by Pavlovic, Mislove, and Worrell, who exploit logical connections between data and tests to develop a general theory of testing. In our study, as in the works of Kurz and Bonsangue, contravariant adjunctions form the basis for linking processes and formulas. While previous studies have assumed categorical dualities, our approach is more flexible as we do not make the duality assumption. This increased flexibility often facilitates the identification of concrete presentations of expressive logics and allows for a uniform treatment of various interesting but non-expressive logics. However, the presence of expressive logics is subject to specific conditions. Unlike some other studies, we work with more general adjunctions and focus more on non-expressive logics without providing expressivity results.

The polyadic modalities mentioned earlier are admittedly complex, making l+ rather cumbersome, especially considering that it is little more than finitary Hennessy-Milner logic. This issue can be mitigated by selecting a fragment of l+ and using theorem 4.2 to demonstrate its expressiveness. For example, consider a logic l defined where transitions are indicated with solid arrows, and transitions of y1, y2,... and z1, z2,..., which are determined by those of y0 and z0, are omitted for clarity. It is important to note that neither a nor x are finitely generated.