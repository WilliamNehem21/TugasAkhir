The main focus of this research paper is to demonstrate the automated verification of data refinement in the Z notation using the Alloy Analyzer. The paper presents the translation of simulation rules for Z to Alloy and illustrates how data types expressed in Z can be translated to Alloy. The paper also introduces the necessary assertions for the Alloy Analyzer to identify the retrieve relation and verify refinement. Through a simple example, the paper shows that the Alloy Analyzer successfully identifies the retrieve relation between two data types and verifies the simulation, hence the refinement.

In the context of developing critical systems, it is essential to create and formally analyze abstract models of the system and ensure that the final implementation aligns with these abstract specifications. Refinement is a technique used to verify such consistency. The exact understanding of refinement and the method for determining whether one model is refined by another is dependent on the choice of specification language and semantic model.

One of the significant contributions of the paper is the automatic verification of data refinement in Z using the Alloy Analyzer, a sat-based verification tool. Additionally, the paper defines a notion of refinement within the Alloy language, thus providing a comprehensive approach for verifying data refinement. The Z notation heavily relies on mathematical constructs like set theory, logic, and relational calculus, and it utilizes a schema for structuring the mathematics when modeling systems.

The paper adopts the schema representation to capture data types in Z, as it closely aligns with the Alloy representation. Specific attention is given to simple data types, which do not involve operations that yield outputs or take inputs. The paper also addresses the backwards simulation rules for verifying data refinement and highlights the similarities between blocking and non-blocking contexts.

The paper demonstrates the translation of Z data types to Alloy and the use of the Alloy Analyzer to automatically identify the retrieve relation and verify refinement. It also discusses the necessary assertions for enabling the Alloy Analyzer to identify the retrieve relation between the state spaces of a pair of data types. Lastly, the paper offers a practical demonstration of the techniques discussed through a detailed example involving the translation of simple data types from Z to Alloy and the verification of their refinement using the Alloy Analyzer.