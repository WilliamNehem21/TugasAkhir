Unbounded model checking (UMC) using SAT-based approaches has seen significant progress, with the use of interpolants proving to be highly effective. While past work has mainly focused on utilizing interpolants to identify a fixed point of reachable states, this paper seeks to expand the application of interpolants in SAT-based model checking. Specifically, it explores the potential for reusing computed interpolants at later stages of the model checking process and outlines conditions for the validity of interpolant reuse. Additionally, the paper introduces a new fixed point condition as an alternative to the existing interpolant-based one. The authors report initial practical experience with interpolant learning and reuse.

The study is structured as follows: it begins with a brief overview of SAT solvers and related concepts, followed by a review of SAT-based model checking, including bounded and unbounded model checking. The paper then presents conditions for reusing learned interpolants and summarizes initial practical experience before concluding.

The paper's main focus is on investigating the conditions for interpolant reuse and proposing an alternative interpolant-based fixed point condition. However, the experimental findings suggest that interpolant reuse may not lead to improvements in industrial examples. The authors point out that a more effective implementation and careful selection of interpolants for reuse could potentially yield better results.

One notable finding is that specific interpolants computed in the standard interpolant-based fixed point condition can be reused under certain conditions. This suggests that interpolant reuse can be integrated into a standard interpolant-based UMC flow.

The experimental results detailed in the paper pertain to a preliminary SAT-based model checking prototype, where interpolants are represented as reduced Boolean circuits (RBCs) and the backend SAT solver used is MiniSat. It is acknowledged that the current implementation has limitations, such as the lack of structure sharing between different interpolants and the fact that interpolants were computed solely for reuse, rather than for checking the existence of a fixed point. The authors anticipate that addressing these shortcomings will lead to more promising results for interpolant reuse.