This study expands propositional dynamic logic (PDL) by introducing a parallel composition operator and four atomic programs that formalize the storage and retrieval of elements in data structures. It proposes a generalization of Kripke semantics that uses structured sets of possible states instead of a set of possible states, enabling the representation of data structures. With the introduction of five new operators, the extended language, referred to as PRSPDL, allows for reasoning about the manipulation of these data structures. The paper demonstrates the use of PRSPDL with examples and establishes a sound and complete set of axiom schemata and inference rules for proving valid formulas in a restricted fragment known as RSPDL0.

Additionally, the paper addresses a limitation of PDL, which is the absence of operators for handling parallelism and concurrency in programs. It notes that several extensions of PDL have been developed to address this issue and enable reasoning about parallel or concurrent programs.

The paper is organized as follows: Section 2 covers the syntax and semantics of the PRSPDL language, Section 3 presents programs written in PRSPDL and provides motivations, Section 4 introduces axioms and rules as well as soundness for the restricted system RSPDL0, obtained from PRSPDL by excluding iteration, parallel composition, and test operators. Section 5 presents a completeness result for RSPDL0, and Section 6 includes discussion of the contribution and potential future work.

The application of PRSPDL operators to basic programs allows the definition of new useful operators. For example, it becomes possible to define the operators in [4,5] used in diagrammatic reasoning based on allegories. However, this aspect is left for further investigation.

The paper also introduces a restricted fragment called RSPDL0, which excludes the test (?), iteration (), and parallel composition () operators. The study aims to utilize the work presented in this fragment as a basis for investigating the entire language.