The remaining sections of this paper are structured as follows: Section 2 reviews relevant literature. Section 3 introduces the proposed hash function. A security analysis of mnf-256 is presented in section 4, while section 5 covers the performance analysis of mnf-256. Finally, the paper concludes in section 6.

After only k trials of the collision search, the proposed attack leads to 2k colliding messages. If a hash function has an iterative structure, the attack can be continuously sustained. However, the actual complexity of the attack depends on the size of the internal state.

Dobbertin completely broke md4 in 1998, and in 2004, Wang's team announced collisions in md5 and other hash functions, including md4, ripemd, and haval-128. In 2005, attacks against sha-0 and sha-1 were presented. Furthermore, the bit variance test measures the uniformity of each bit of the digest by altering input message bits and calculating corresponding message digests. If the hash function achieves uniform distribution (pi(1) = pi(0) = 1/2 for all digest bits i 1 6 i 6 n, where n is the digest length), it has maximized performance according to the bit variance test.

In order to obfuscate message redundancy, Shannon introduced the principles of diffusion and confusion. Diffusion entails spreading out the influence of a single plaintext bit to conceal the statistical structure of the plaintext, while confusion involves using transformations to complicate the dependence of ciphertext statistics on plaintext statistics. These principles guide the design of practical ciphers, including hash functions. For the hash value in binary format, each bit is either 1 or 0. Therefore, the ideal diffusion effect should result in a 50% probability of change for each bit when there are minor changes in initial conditions.

A diffusion and confusion test was conducted, where a message was randomly chosen, and a hash value was generated. Subsequently, a bit in the message was randomly toggled, and a new hash value was generated. The number of changed bits was then counted as bi.