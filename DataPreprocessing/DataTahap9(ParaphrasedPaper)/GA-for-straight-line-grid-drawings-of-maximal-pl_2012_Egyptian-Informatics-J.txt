The pursuit of developing algorithms for creating straight-line grid drawings of maximal planar graphs (MPGs) in minimal area remains a challenging objective. In this study, we explore the potential application of genetic algorithms to this problem and discuss various implementation aspects related to it. We introduce a new genetic algorithm that effectively produces drawings of moderately sized MPG.

A large number of algorithms for graph visualization have been proposed, and previous research by Di Battista, Eades, and Tamassia extensively surveyed these approaches. Earlier studies introduced heuristic methods for graphic drawing, with genetic algorithms (GAs) demonstrating notable flexibility in handling complex constraints. GAs offer an alternative to traditional approaches for graph drawing, but they also face significant performance challenges, limiting their application to large-scale problems.

The remainder of the paper is organized as follows. Section 2 outlines the principles of genetic algorithms, introduces the problem representation, and discusses the genetic operators used. Section 3 explains the chromosome representations, while Section 4 delves into the selection and evaluation function, as well as the genetic operations. Section 5 presents the parameters of our algorithm and the obtained results. Finally, Section 6 outlines the conclusions.

Genetic algorithms (GAs) are a class of randomized optimization heuristics inspired by the biological concept of natural selection. The fundamental idea behind GAs is to maintain a population of potential solutions, referred to as chromosomes. These chromosomes are believed to carry the information, and the evolution process operates at the chromosome level through reproduction. Reproduction can occur through either combining chromosomes from parents to produce offspring (crossover) or through random changes in the chromosome pattern (mutation).

The population size represents the number of chromosomes used to represent a set of solutions to the problem. In our context, a population refers to a set of graph layouts undergoing an evolutionary process akin to natural biological evolution. Better chromosomes have a higher likelihood of reproduction in each generation, while inferior chromosomes have a greater chance of being replaced by new individuals.

The GA initially creates an initial population of solutions, which are then evaluated based on fitness criteria specific to the application. A subpopulation is selected favoring the most fit solutions, used to produce a new generation of offspring solutions. Finally, a number of solutions in this new generation are subjected to random mutation.

Groves et al. presented several mutation operations, with two specific mutations being the most effective in our tests. The first is single mutation, involving the random movement of a node to a vacant position. The second is inversion mutation, which reverses the order of genes between two random nodes.