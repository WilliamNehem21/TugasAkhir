This academic paper highlights the significance of incorporating access control as a fundamental consideration in the software development process to ensure the security, integrity, and availability of sensitive information. The research aims to address the need for a secure software engineering process that integrates access control at each stage of software development.

The paper emphasizes the importance of security assurance at the code level, particularly in ensuring that the implemented code accurately reflects the access control design. The authors propose a process for formally proving the consistency between access control policies and the corresponding code implementation to provide security assurance. They use the "cincosecurity" module as a case study to illustrate the proposed approach, which involves enhancing the typing rules of the target programming language to automatically verify adherence to access control rules.

Furthermore, the paper discusses the essential elements of a round-trip engineering project, such as models, code generators, implemented code, and reverse engineering mappings. It presents a formal scheme using the cincosecurity module to demonstrate how the proposed approach can be applied to ensure the correctness of access control models and code in a round-trip environment.

The paper also reviews related works that address access control in software development, highlighting the limitations of existing approaches and underscoring the potential benefits of the proposed formal proof of correctness in the round-trip engineering process. The authors anticipate that future developments based on their work will enhance the safety and accuracy of code generation and reverse engineering, ultimately improving the integrity of the round-trip engineering process.