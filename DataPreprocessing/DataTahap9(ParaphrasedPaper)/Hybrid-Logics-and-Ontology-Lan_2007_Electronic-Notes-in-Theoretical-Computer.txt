In ontologies, incorporating features such as binders and state variables from hybrid logic could greatly enhance an ontology language. However, it is widely recognized that introducing these features to a relatively weak language would render it undecidable. Recent research, however, has demonstrated that despite the undecidability concern, state variables can serve a valuable role in query answering, as the syntactic structure of queries restricts the occurrence of state variables in a manner that enables decidable reasoning.

To address this issue, the standard approach involves discarding sub-trees below a node whenever it is merged with another node. This method ensures that the resulting graph is fully expanded, allowing the algorithm to terminate. Nonetheless, this approach is effective only in tree-shaped parts of the completion graph, as the concept of a sub-tree is otherwise not well defined. Difficulties can arise when nominal nodes are created and merged.

Several decision procedures exist for restricted fragments of conjunctive queries, such as those presented in [9,25,19]. A common restriction to obtain a decision procedure is that each role occurring in the query must be a simple role, meaning that it is neither transitive nor has a transitive sub-role.

Regrettably, the above-mentioned technique can only handle tree-shaped queries, i.e., those lacking cycles in the query graph, as the tree model property implies that DL concepts cannot capture cyclic relationships. Even nominals are unable to represent the arbitrary cyclic structures that may arise in a query.