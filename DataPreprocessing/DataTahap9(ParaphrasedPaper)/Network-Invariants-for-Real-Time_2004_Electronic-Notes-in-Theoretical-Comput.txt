The concept of abstraction involves checking a smaller finite-state system instead of the original one, with the assurance that if the smaller system encompasses all computations of the original one, then any linear temporal logic property satisfied by the smaller system will also hold for the original system. Similar principles apply to branching-time logics if the logic is restricted to a universal fragment. Abstractions of original systems may be constructed manually or using abstract interpretation techniques, with the requirement to prove that the abstract system indeed encompasses all computations of the original one. The fundamental principles underlying the construction of abstract models are elucidated in references [8, 7, 9].

Studies have been conducted on systems akin to timed transition structures, involving automatic abstraction to verify safety properties of timed systems with an integer time domain. Another approach focuses on parameterized systems with a finite symbolic representation of infinite state sets, and it has been shown that reachability for such systems is decidable if each process has a single clock. The approach presented in this paper is also applicable for verifying liveness properties of systems with an arbitrary number of clocks.

The theory developed in the context of linear temporal logic (LTL) forms the basis of the notion of abstraction, which relies on set inclusion of computations. For branching-time logics, simulation is a natural approach to defining abstraction, and it has been demonstrated to be decidable in the context of timed systems.

The paper defines the syntax and semantics of LTL in the timed setting and presents a verification scheme using network invariants in section 4. Additionally, the concept of discretization of timed transition systems is introduced and proven to be correct with respect to LTL properties. The approach is further illustrated in section 5, and the paper concludes by summarizing the results.

In a particular section, the concept of network invariants for parameterized systems constructed from timed transition structures is defined, and the problem is reduced to model checking certain formulas using the superposition of two timed transition structures. A method for constructing discretized systems that can be checked using a standard LTL model checker is also presented.

The paper associates a finite state transition system satisfying the same linear-time properties to a timed transition structure, allowing the use of LTL model checkers for analyzing timed transition structures. The provided discretization method, while different in presentation, is in alignment with previous work.

The paper acknowledges the existence of different versions for discretizing timed-transition structures and illustrates an example that is deemed practical and realized in verification tools such as TLV. Furthermore, the paper provides an example demonstrating the hidden dependencies between clocks. State 7, for instance, is only reachable under certain conditions, yet it is shown that due to the simultaneous increment of clocks, such a transition cannot occur.

Overall, the paper discusses the concept of abstraction and its application to various logics, presents a verification scheme, introduces the discretization of timed transition systems, and provides practical examples and illustrations.