The use of data refinement in software development is beneficial as it enables the transformation of abstract specifications into more specific ones, provided there is a mathematical relationship between them. Proof obligations associated with data refinement are typically discharged using interactive theorem proving systems. This paper introduces an approach based on refinement checking to automatically verify Z data refinement rules. The proposed approach leverages the functional support of CSPM (the machine-readable version of process algebra CSP) to capture the relational semantics of Z data refinement rules and utilizes the traceability feature of CSP to facilitate the verification process.

The translation from Z to CSPM follows a strategy implemented in a support tool, requiring some adjustments due to the focus on refinement rules rather than the behavior of Z specifications. The paper's main contribution lies in reducing user intervention in employing data refinement by introducing an approach that automatically verifies Z data refinements given a retrieval relation and automatically calculates a retrieval relation, if one exists, to justify data refinement.

The paper presents specific rules for interpretation within the relational semantics. It describes the determination of the abstract state space using a set containing all pairs involving the type "status" and highlights the application of local definitions within constructs. The approach adopted in this work does not verify data refinements between Z specifications using their corresponding process representations, but rather performs the validation of Z data refinement using a model checker.

The paper also discusses the calculation of the retrieval relation by extension, covering all possible sets of combinations between concrete and abstract states without user intervention. It emphasizes that the approach does not require the user to provide a retrieval relation a priori, as it can be computed automatically.

Furthermore, the paper discusses the correspondence between data and process refinements using the CSP semantics of Z, presenting the idea that a Z data refinement is valid if and only if the refinement between the corresponding CSP processes is valid. The potential of integrating the approach with data abstraction to limit the scope of data domains and the plan to add the translation to CSPM as a feature to the existing tool are also addressed.

The paper concludes by outlining the immediate advantages of the proposed approach, including the automatic verification of data refinements between specifications, the automatic calculation of a retrieval relation to ensure data refinement, and the use of counterexamples to adjust specifications when refinements are found to be invalid. Finally, it highlights the need for future work on addressing state space explosion and integrating data abstraction with the proposed approach.