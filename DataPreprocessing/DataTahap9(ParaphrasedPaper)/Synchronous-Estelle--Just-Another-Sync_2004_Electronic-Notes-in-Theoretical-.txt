The process of designing and confirming the operation of reactive systems can be approached through various methods, such as using graphical languages based on automata (such as statecharts, rsml, synccharts, and argos), dataflow-based languages (like signal and lustre), and imperative languages (such as esterel and reactive C). Regardless of the method used, all of these approaches rely on the synchrony hypothesis, which assumes that the reaction time of the system is zero. This assumption is beneficial for developers in specifying reactive systems.

The term "distributed reactive system" refers to a set of interconnected reactive nodes that communicate via a network. Each individual node is tasked with autonomously performing specific functions, while also sharing information with other nodes. Due to this distribution requirement, it is essential for the specification to accommodate distributed behavior.

Synchronous Estelle is an extension of the ISO standard Estelle, which is designed to specify distributed systems. An Estelle specification comprises modules and channels for inter-module communication using message exchanges. Modules can be further divided into submodules to facilitate structured system development. The behavior of each module is represented by a finite state machine with transitions triggered by events.

Synchronous Estelle offers both textual and graphical specification capabilities. The textual representation closely follows the syntax of standard Estelle to cater to developers familiar with it. This syntax is directly linked to the graphical representation, allowing for early-stage development visualization and later textual implementation.

The declaration of a module includes the module's name, interaction points with other modules, and interaction points with the environment. Interaction with other modules utilizes message passing, while interaction with the environment provides a means of connecting the system to the external world.

The body declaration allows for the definition of constants, types, variables, procedures, and functions within the module. It also supports the declaration of new modules to represent compound states within the global state machine. Transitions between modules indicate transitions between states, with inter-level transitions permitted. Each transition has an enabling condition and a guard, enabling logical expression of events and execution conditions.

The execution of synchronous modules occurs asynchronously in parallel with other modules, and interaction with the rest of the system only takes place at the beginning and end of the computational step. The synchronous nature assumes a zero system response time due to the synchrony hypothesis, but in practice, some time is taken for event processing and system transitions.

A critical aspect of Synchronous Estelle is the ability to verify properties of the system specification. To facilitate this, efforts are underway to use Spin, an automated verification tool, to verify Synchronous Estelle specifications. The intention is to translate the Synchronous Estelle specification to Promela and use Spin to verify the original system.

The discussed system is used to test the Synchronous Estelle language and related tools. It involves specifying the physical components and the controller as different synchronous modules, while the communication network is described with a standard Estelle module. All synchronous modules are interconnected with the network module for exchanging information.

These modules are then connected to the environment to either receive information or send commands. The communication channels are defined to connect all modules with the network module, which is responsible for routing messages to their intended destinations.

The control module, at the core of the steam boiler program, handles system logic, processes sensor readings, and orchestrates actions to maintain safe water levels. It also manages potential failures in the physical units, which adds complexity to the specification.

In the future, the specification can be refined to include more complex protocols and mechanisms for improving robustness, but the main focus of this study is on the applicability of Synchronous Estelle to distributed reactive systems.