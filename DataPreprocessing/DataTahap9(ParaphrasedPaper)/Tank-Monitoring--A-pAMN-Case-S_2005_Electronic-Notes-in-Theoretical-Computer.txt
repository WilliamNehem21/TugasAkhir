A recent proposal has introduced the concept of probabilistic behavior in the b-method, referred to as probabilistic B. This approach extends earlier work on introducing probabilistic choices into program statements and expands the weakest precondition semantics to handle expectations. An expectation represents the expected value of a formula or expression, which allows programs to be seen as transformers of expectations rather than predicates. The semantics of programs provides the expectation of an expression after execution in terms of expectations prior to execution.

This paper employs expectations of the form v, where v is an abbreviation for 0$ v. It is important to note that this abbreviation still results in a non-trivial proof obligation p1, ensuring that v is non-negative upon initialization.

The closer the ratio between minflow and maxflow is to 1, the more accurate the upper bound on the expected value for volume for any given expectation on rvolume can be. However, it should be noted that a can always be at least 0.99.

For rvolume, the minimum expectation over all possible assignments to rvolume must be considered. In the case of e1, rvolume is positive, so the smallest possible value of rvolume is utilized in the calculation of the pre-expectation of e1. In e2, rvolume is negative, so the largest possible value of rvolume is used in the calculation of the pre-expectation of e2. This ensures that, regardless of how the nondeterminism is resolved later, the expectation will be at least the calculated value. Expectations must always be non-decreasing, thus demonic nondeterminism always considers the worst case regarding increases.

The worst case occurs when the flow is minflow and minflow + lowerror is added to rvolume, potentially resulting in a 10% deviation. Conversely, in the second case, the error in the flow can be at most 0.1%, so the error introduced by v2b(1% of the time) dominates. If flow = maxflow, then volume is increased by maxflow, and the minimum by which rvolume can be incremented is minflow + lowerror if at least two sensors go wrong (with a probability of 0.028), otherwise maxflow + lowerror. Therefore, the most pessimistic expectation yields a possible value of a = 0.9765. Here, the ratio between maxflow and minflow is more significant than the ratio between minflow and lowerror in contributing to the decrease in rvolume, resulting in a value of 0.9765 for a.

In the event of rvolume exceeding its limit, the worst case always occurs when flow = minflow. In this scenario, the reading might be at worst maxflow + higherror (with a probability of 0.028) and minflow + higherror otherwise. This gives a value for b of at least [remaining text is missing].