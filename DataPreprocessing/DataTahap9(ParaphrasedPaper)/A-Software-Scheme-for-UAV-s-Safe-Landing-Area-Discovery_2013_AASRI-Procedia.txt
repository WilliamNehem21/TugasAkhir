This paper presents a software processing approach for identifying landing areas for small-sized UAVs using a single onboard camera and machine learning algorithms. The proposed two-stage processing procedure involves using a similarity-based textured area identification method in the first stage to identify potential landing areas. These results are then refined and assessed using machine learning algorithms in the second stage. The UAV can utilize these results as options for emergency landing targets. The software scheme designed for this process allows developers to embed their own algorithms for improved results. Preliminary research indicates that this software and application are practical and can offer significant convenience and efficiency.

Prior research has focused on vision-based autonomous landing site localization and recognition using systems with a single onboard camera. Among these, three different methods have been attempted to address the problem. The second method involves determining the landing point by calculating the geographic features of the land using a mathematical model to map the actual land plane to the plane captured in images. The third method entails classifying terrain based on texture features and then computing depth data using optical flow. This method can mark the captured area as safe or unsafe and identify potential hazards. Some researchers have also used the second method to calculate geometric features.

Step 2 is utilized to quickly identify all potential landing areas in initial images, as employing sophisticated algorithms directly on the entire image is time-consuming and challenging. Step 3 involves evaluating each potential landing area generated in Step 2 and ranking them based on their potential for safe landing. The output should be a sorted list, with the top recommendation being the preferred landing site for the UAV. The process involves randomly locating a point in the image, generating a square around this point, calculating texture features, adjusting the square size, and comparing texture features until a suitable landing site is identified.

The software was implemented using OpenCV and the C language on a MacBook Pro, achieving a video frame processing rate of 40 frames per second and delivering results after processing 4 continuous effective frames. However, it's important to note that the identification of potential landing areas is not definitive, as the classifier may reject all candidates and produce no output.

This paper introduces a system for autonomously identifying landing areas for vision-based UAVs, detailing its concept, working principles, procedures, and implementation. A key aspect is the development of a software scheme that can integrate various components into a comprehensive program and accommodate different machine learning algorithms. While a naive Bayes classifier has been used to calculate the landing area as the output, alternative machine learning methods such as fuzzy logic or artificial neural networks may offer improved performance.