One example of the method is illustrated by the mda-based tool environment of the hidoors project. In this setting, a real-time model checker is viewed as a platform within the context of mda. UML designs can be annotated with verification markup, which is not only translated into code, but also into a design verification model for the verification platform, the model-checker. This approach integrates model-checking for real-time designs into the model-driven development process, allowing for early verification.

This approach can be extended to other verification techniques. We propose a preliminary classification of potential verification platforms and analyze their interactions. The analysis demonstrates that for quality-aware application areas, the standard mda approach should be expanded by one or more mda stacks for model-driven verification (mdv). This results in a new approach, quality-driven development (qdd), which is, to our knowledge, the first systematic approach to integrate code generation and verification in model-driven development.

Although mda is targeted at quality-aware application domains such as real-time and embedded systems, it currently lacks the necessary integrated verification technology. This paper seeks to address this gap by proposing an extension of mda for model-driven verification (mdv) and introducing the concept of quality-driven development (qdd).

We summarize insights from the hidoors project, where a design verification of a real-time UML model has been envisioned in addition to the usual code generation and code verification. In hidoors, the real-time UML designs are verified with a real-time model checker. For the integrated development of verification and code generation, we have developed a real-time UML profile that is used for code generation as well as for design verification with the real-time model checker.

Through this framework, we have identified a need to extend mda to support design verification. Introducing a second kind of platform stack for verification, in parallel to the traditional mda stack, leads to the definition of new verification platforms for design and code verification. We demonstrate that in hidoors, two verification platforms are used: the model checker and a worst-case execution time analysis (wceta) for analyzing the generated Java system.

Quality-driven development (qdd) offers several advantages. Due to its tight integration with mda, mdv supports early verification, allowing for model-checking of real-time designs at an early stage in the development process, even before unit testing. Furthermore, the employed verification platform can be easily replaced with others, and there is a significant cross-fertilization between the mda and mdv stacks, reducing the effects of design aging.

These findings show the necessity of integrating design verification as part of the model-driven development process. This aspect is vital to keep design and code consistent and to encourage developers to maintain the design. As a result, qdd reduces the effects of design aging and aids in ensuring the correctness of the code.

The paper also explores the relationship between the verification platforms and the runtime platform, demonstrating how information is added to the platform-independent models (PIM) to support verification and testing of the verification platform. This information, in the form of markup specifications, plays a crucial role in interconnecting the various verification levels and ensuring the overall quality of the system.

In conclusion, qdd represents an innovative extension of mda for quality-aware application domains, offering early error detection, simplified verification, and a unified model-driven framework for verification techniques and platform-oriented development.