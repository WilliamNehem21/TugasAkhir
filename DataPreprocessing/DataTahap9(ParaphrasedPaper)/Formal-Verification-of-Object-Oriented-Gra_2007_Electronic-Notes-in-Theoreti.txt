This academic paper discusses the translation of object-oriented graph grammars into Promela programs, focusing on inheritance, polymorphism, and dynamic binding features. It also introduces an observational semantics that interprets object-oriented graph grammars computations from the object-oriented paradigm viewpoint. The paper is structured as follows: Section 2 presents the main components of object-oriented graphs and grammars, Section 3 outlines the guidelines for formally translating object-oriented graph grammar specifications into Promela programs, and Section 4 provides an example using the dining philosophers problem. Finally, Section 5 offers concluding remarks.

Object-oriented systems are described as instances of pre-defined classes with internal structures defined by attributes, communicating through message passing. The state of an object-oriented system consists of objects along with a set of pending messages. Classes and messages are modeled in a class-model graph, with class identifiers as graph nodes, attributes represented as hyperarcs, and messages also modeled as hyperarcs, with the target being the message destination and sources as parameters. The inheritance hierarchy is defined through strict relations among graph nodes, and message hyperarcs possess an order.

Class-model graphs serve as typing structures for object-oriented system states. Mapping a graph into a class-model graph and imposing inheritance-compatible restrictions is discussed, along with the definition of auxiliary functions based on inheritance and overriding relations to determine class attributes and permissible messages.

The paper also discusses graph morphisms and their relation to object-oriented systems, highlighting the need for graph morphisms compatible with underlying order relations to support consistent polymorphism. Additionally, it introduces observational semantics, which focuses on system events and message exchanges, providing a labeled transition system to describe rule applications and object responses based on rule applications.

The paper concludes by asserting the semantic soundness of the proposed translation and the potential for verification using the modeling of the dining philosophers problem. It also mentions ongoing work on a formal proof of the translation soundness.

Overall, the paper presents a formal approach to translating object-oriented graph grammars into Promela programs and demonstrates its applicability through a specific example.