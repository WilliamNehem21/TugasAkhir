The remaining sections of this paper are structured as follows. Section 2 provides an overview of related works. Section 3 details the design and implementation of IoTbench. Section 4 outlines the experimental settings, while Section 5 presents an analysis of the experimental results. Finally, Section 6 draws conclusions and suggests areas for future research.

Coremark, developed by Shay Gal-On of EEMBC in 2009, was designed to replace Dhrystone as an industry standard benchmark. It has gained popularity due to its small, easily comprehensible code and strong portability across platforms. Additionally, Coremark introduces runtime-driven data computation to prevent code elimination due to compilation optimization, and it provides guidelines for running the code and a consistent reporting format for inter-processor performance comparisons.

IoTbench includes list processing, matrix processing, and convolution. List processing is a fundamental operation widely employed in IoT scenarios, including data cleaning, preprocessing, and basic statistical analysis. Meanwhile, matrix processing and convolution are essential operators in machine learning and deep learning tasks, which are prevalent in IoT applications such as smart cities, smart homes, smartphones, and smart medical care.

Data in IoT scenarios can vary from two-dimensional in computer vision and image processing to three-dimensional in medical imaging and video processing. Furthermore, different IoT scenarios handle various data types, with considerations for factors such as machine precision, data scale, and resource optimization. For instance, wearable devices often generate large-scale real-time human body data and may use low precision, such as int, instead of high precision, such as float, for calculations.

The list sorting operation in IoTbench is implemented using merge sort in a non-recursive manner, progressively expanding the range of sorting until the entire list is sorted.

The gem5 simulator is a versatile simulation platform widely utilized for computer system architecture research, covering system-level architecture and processor micro-architecture. Originally formed from the merger of m5 and gem, gem5 focuses on architecture modeling and offers flexible modeling and wide availability.

IoTbench is evaluated using the gem5 simulator, comparing two common instruction set architectures (ISA) - ARM and RISC-V. In the AArch64 execution state, the A64 instruction set, a fixed-length 32-bit instruction set, is used. The evaluation includes the RV64GC architecture.

The choice of ARM and RISC-V for evaluation is based on their widespread use in IoT environments, and the study includes in-order and out-of-order processor architectures. Additionally, the cache size settings are based on documentation from commercial processor manufacturers, and these settings are implemented through command line instructions as per the gem5 documentation.