The paper presents an algorithm designed to address a specific type of question. This algorithm is derived from formal verification and is applied to a client-server system described using a formal language. The system is modeled separately for the client and server parts. The algorithm works with a model composed of an arbitrary number of client models and one server model. In this parameterized system model, the problem of finding the maximum number of clients can be reduced to computing the maximal value of a certain parameter (k).

As an illustrative example, a part of a model of a payment system for public internet access on airports is presented. This model represents a system where clients, represented as instances of the component "token," belonging to multiple airlines can access the internet. The system includes two types of sessions: prepaid and free sessions for clients with valid first class or business class flight tickets.

The payment system's control component is modeled with three independent methods, resulting in three parallel parts. These parts handle invalid tokens, changing prepaid time during token invalidation, and the creation and invalidation of tokens for starting and ending internet sessions, respectively. It is noted that systems with multiple user types can be modeled using the proposed framework.

The paper aims to introduce an algorithm capable of efficiently finding bounds for client-server models of real systems. This algorithm is an improved version of a previously developed algorithm. An illustrative example involving a tuple is provided to demonstrate the application of the algorithm.