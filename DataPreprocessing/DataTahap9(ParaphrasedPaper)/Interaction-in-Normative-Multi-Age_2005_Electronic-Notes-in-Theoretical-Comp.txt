In technical terms, a normative code is defined as a collection g of conditional norms, which consists of ordered pairs (a, x) where a represents an input condition or situation, and x represents an output specifying what is considered desirable or obligatory in that situation. The role of logic is seen as preparatory, serving to organize information before it is incorporated as input into the normative code set g.

The concept of positive permission is more difficult to define. Broadly, an action is considered positively permitted by a code if the code explicitly designates it as such. Makinson and van der Torre differentiate between forward and backward permission, with forward permission addressing the needs of citizens and authorities when assessing actions, and backward permission addressing the concerns of legislators as they consider adding prohibitions to existing norms, so as to avoid inconsistencies.

The proof theory of various kinds of permissions presents unexpected properties and novelties in terms of logic. For example, when the out operation satisfies a horn rule, the corresponding negperm operation satisfies an inverse rule. Forperm and backperm are distinct operations, with forperm satisfying particular rules while backperm satisfies different rules. These distinctions are explained in further detail.

In this section, the proof rules of input/output logics are considered as properties that can be enforced on the components by exogenous coordination. The identity rule is likened to a forward loop, while the cumulative transitivity rule corresponds to a feedback loop. This idea is further clarified using the concept of lions. The behavior of various strengthening methods for the input/output operation out1 to outn (n=2, 3, 4) can be simulated by integrating other familiar devices into the system as a whole. 

Additionally, the properties of the lion depend on the properties of the components. For instance, if both b and d satisfy the identity rule, then the lion also satisfies the identity rule. However, if b satisfies the disjunction rule, then the lion does not necessarily have to satisfy the disjunction rule.

The paper further discusses the relevance of interactive computing and lions in researching agent theory and normative multi-agent systems. The BDI framework is presented as a way to define obligations, and the concept of roles in normative systems is explored.

The paper suggests that various extensions and developments can be made to lions for normative multi-agent systems, such as the development of value webs to model the exchange of value. Additionally, it is pointed out that introducing time in streams opens up new possibilities for studying proof rules of input logics, and the introduction of new types of channels and gates raises conceptual and formal challenges that need to be addressed.