The task of getting communication protocols right is known to be challenging due to distributed and concurrent programming issues, as well as the critical service they provide to other applications. Performance is crucial for protocol success, as a failure to react quickly to changes in network topology, for example, can bring the network to a standstill. While stochastic extensions to concurrency theory have helped with this problem, performance models are still somewhat disconnected from implementations. This paper introduces an abstraction method to create a performance model directly from source code. The paper outlines the structure of the analyzed protocols, the considered source code language, and describes the construction of performance models. The analysis focuses on end-to-end communication protocols and real-world languages such as C. The paper also discusses the limitations and challenges of the proposed approach, as well as potential future work and the promising aspects of the abstraction techniques.