The specification language used in the model checker for our experiments involves a two-step process where Lep specifications are translated into the model checker's language and then back to Lep. This process utilizes a formal communication model to facilitate the use of different model checkers. Currently, the prototype of the architecture employs the model checkers Spin and SMV.

The formal methods community often emphasizes the correctness of software developed using this approach, asserting that correct running code can be automatically derived from a correct specification. Instead, we argue that the main advantage of employing formal methods lies in the precise semantics of the languages used, which are well-suited to specific domains.

Lep is a process-based language similar to CCS and is used for specifying mobile protocols and distributed algorithms. It incorporates the concept of guarded commands from CCS, name overloading from pi-calculus, and pronouns adapted from object-oriented concerns. Pronouns serve as a general means of referencing a set of elements, enabling shorter, more readable, and precise specifications. Attributes are used to define pronouns, and they are initialized through synthesized and inherited attributes calculated during the generation of a network.

Additionally, we describe the informal behavior of the DSR protocol and its modeling, assumptions, and specifications in Lep. We also discuss the translation of the communication model to SMV and the challenges involved in this process. Furthermore, we present the translation of the DSR protocol to Promela and discuss the issues related to the dynamic movement of nodes and its impact on property verification.

In our analysis of DSR and other protocols, model checking techniques demonstrated the ability to verify properties without requiring the instantiation of a large number of objects. This raises the question of how to find a minimal model that sufficiently represents the system in the context of the properties to be verified, which is a topic for future exploration.