The paper presents a method for predicting the maximum number of rule applications, or worst-case derivation lengths, in programs written in the chr language, a committed-choice concurrent constraint logic programming language. The predictions are based on rankings used in termination proofs for the programs, with a focus on deriving tight upper bounds. The paper compares these predictions with empirical results from tests using randomized data for a range of constraint solvers. It also discusses the use of rankings to derive tight upper bounds for worst-case derivation lengths and presents empirical results from test runs of the constraint solvers. The paper concludes with a discussion of the results.

To prove termination of chr programs, the paper introduces a ranking that maps the head and body of each rule in a chr program to natural numbers, such that the rank of the head is strictly larger than the rank of the body. The rank of a query yields an upper bound on the number of rule applications, i.e. derivation lengths. The paper focuses on developing rankings that provide accurate upper bounds on derivation lengths by minimizing the differences between the ranks of the heads and bodies of the rules in a program.

The paper also discusses the use of rankings to determine worst-case derivation lengths for different constraint solver programs, including those dealing with boolean and terminological constraints, as well as arc-consistency and path-consistency. The tightness of rankings is explored, and the paper provides examples of how different goals and constraints lead to varying derivation lengths based on the rank assignments.

In addition, the paper touches on related work in logic programming and presents an overview of the approach taken, including the syntax and semantics of chr, the use of rankings, and the empirical results obtained. Finally, the paper includes a detailed definition of the chr language and relevant concepts, such as states, and presents a theorem related to termination of chr programs. It also discusses the application of rankings to derive tight upper bounds for worst-case derivation lengths and presents empirical results from test runs of the constraint solvers.