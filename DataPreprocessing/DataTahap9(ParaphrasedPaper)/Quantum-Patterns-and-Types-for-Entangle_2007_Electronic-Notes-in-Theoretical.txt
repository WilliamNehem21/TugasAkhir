To simplify writing the reduction rules, we use the variable Ï€ to represent a variable x such that f(x) = i. Then, the quantum program state becomes a pair [q, m'] with m' = m[pf(x1)/x1]...[pf(xn)/xn] if the domain of f is {x1, ... xn}.

The entanglement relation of a new qubit connects this qubit with itself. Since information about entanglement is expressed in the typing rules (5) through a relation over variable names, the new qubit must be named immediately. This is why the syntax always assigns names to newly created qubits, for example, let x = new m in m.

For example, consider the data used in the execution of the one-way quantum computer: a rectangular array of qubits, where all qubits are initially entangled with their neighbors, and the entanglement within this quantum data structure is used step by step through successive 1-qubit measurements. A noteworthy special case, which would at least be suitable for the one-way quantum computer, is the family of quantum data structures corresponding to graph states (as described in [4, 7]). This will be further explored in this ongoing work, with the associated concept of types.