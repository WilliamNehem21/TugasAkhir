The primary focus of robot dynamics lies in achieving optimal design and control. Researchers have directed their efforts towards enhancing the efficiency of robot dynamics, with this paper employing the use of screws to describe dynamic problems and presenting an O(n) recursive robot forward dynamic algorithm. The algorithm's applicability extends to tree topology, closed loop, and spatial robot systems, and it effectively compares three classic methods of robot dynamics for ease of use. The results indicate that describing dynamics with screws aids in high-efficiency dynamic modeling, as the dynamical expressions are both concise and clear. Additionally, the O(n) efficiency and linear relationship to the degree of freedom demonstrate promise for enabling real-time dynamics control with improved computational efficiency.

Computation efficiency holds significant importance for simulating and controlling astronautics robots and complex mechanical systems. Among the various methods for analyzing space machinery, the use of screws stands out as an efficient tool. The utilization of screw theory, expressed by a pair of vectors, such as angular velocity and linear velocity, or force and moment, has proven to be highly effective, particularly in the context of lie algebras—the algebraic structure of lie groups SE(3) expressed by screws. These lie groups and algebras have demonstrated effectiveness in analyzing space machines and are instrumental in developing algorithms applicable to mechanisms with general geometries and joint structures.

The classic dynamical modeling method, Lagrange's method, leads to O(n^4) algorithms. In the realm of inverse robot dynamics, the first O(n) algorithm was the Newton-Euler (NE) formula. Subsequently, the forward dynamics algorithm proposed by Walker and Orin computed the inertial parameters of composite sets of rigid bodies at the outer end of the manipulator chain and was O(n^3).

In this paper, an O(n) recursive robot forward dynamic algorithm is presented using screws, and its computation complexity is detailed and compared with other methods. The paper also outlines the different notations for three classic O(n) recursive dynamics to facilitate understanding.

Three types of O(n) recursive dynamics—Spatial Operator Algebra (SOA), Articulated Body Algorithm (ABA), and Lie Algebras—are founded on the recursive Newton-Euler algorithm for inverse dynamics. Notably, the SOA authors recognized the similarity between Kalman filtering and robot dynamics and derived the inverse of the mass matrix for forward dynamics. The ABA creatively divided spatial force into two parts—the force related to acceleration and the force of zero acceleration—by utilizing articulated body. Similarly, the Lie algebras, using articulated body, introduced two dual adjoint operators.

The mechanism underlying these three recursive methods revolves around linking movement parameters and their corresponding changes with the articulated body inertia to the outward and inward force, ultimately bearing the burden of lower-order bodies. This relationship dictates the basis of recursion and forms an objective reality, prompting various scholars to propose three distinct interpretations.