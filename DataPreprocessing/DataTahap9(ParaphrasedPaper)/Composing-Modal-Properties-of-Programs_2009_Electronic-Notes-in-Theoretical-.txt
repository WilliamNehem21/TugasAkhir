Verification techniques enabling conclusions to be drawn from the functionality and security properties of system components are essential, particularly in scenarios where components can communicate and collaborate with each other. In the realm of mobile code, the development of compositional verification techniques becomes even more relevant, as new applications can be downloaded onto a running system after its initial deployment.

Section 2 serves as a brief overview of prior findings, focusing on program structure, behavior, logic, and the definition of maximal models, while also introducing helpful notations. Section 3 outlines the translation from behavioral modal simulation logic formulae to structural formulae and verifies its accuracy. Section 4 establishes the soundness and completeness of a compositional verification principle for behavioral properties without disjunctions, provided that the local assumptions are described by behavioral modal simulation logic. Finally, Section 5 offers conclusions and examines potential avenues for future research.

In this study, a subset of modal logic is employed as the specification language. The research leverages formulae in this logic, expanded with greatest fixed-points, which can be characterized by simulation, and vice versa, leading to the classification of this logic as simulation logic. The specific subset considered in this paper is modal simulation logic, for which a set of labels (l) and a set of atomic propositions (a) are fixed.

The applet structure is defined as a collection of call graphs for the methods implemented within the applet, abstracting away from all data. A method specification is an instance of the general notion of specification. Notably, method specifications allow return points to have outgoing edges; however, the characterization of behavioral properties by a set of structural formulae is only accurate if the applet has no outgoing edges at return nodesâ€”such applets are described as clean. A unary operation of cleaning is defined, producing a clean applet with the same behavior, and is shown to be idempotent and to preserve behavioral properties. Furthermore, it is established that any state that is a return point trivially satisfies any box formula at the structural level, and a notion of reachability is defined for clean applets, coinciding with the satisfaction of box formulae.

For the subset of modal simulation logic utilized, the research only attains soundness of the relevant rule. To achieve completeness for full simulation logic, it is relied upon that every model can be characterized with a characteristic formula; however, the presence of greatest fixed-points is crucial in cases where specifications contain loops.

The paper presents a translation from behavioral to structural properties, focused on so-called modal simulation logic, which corresponds to modal logic with box modalities exclusively. Previous work introduced a compositional verification principle requiring local properties to be structural properties, and based on this principle, a compositional verification method was developed, supported by a toolset, and its practical applicability was evaluated in an industrial case study. By extending the compositional verification principle to behavioral properties via the translation from behavioral to structural properties, a symbolic execution of the behavioral formula is conducted, with each modality in the formula generating a constraint on the structures satisfying the behavioral formula. This translation has been implemented in OCaml and incorporated into the toolset.