The effective management of group keys is crucial for ensuring the security of multicast architecture. The Adaptive Clustering for Scalable Group Key Management (ASGK) protocol has been widely researched in the literature as a primary approach to this issue. According to the ASGK protocol, the multicast group is divided into clusters, with each cluster encompassing a set of members. Each cluster uses its own traffic encryption key (TEK), which gets updated periodically based on the dynamism of group membership during secured sessions. A modified protocol, referred to as the Ancestors protocol, has been introduced as an extension of the ASGK protocol. The Ancestors protocol aims to balance the impact on the number of affected members and the encryption/decryption overhead when a member joins or leaves the group. In this protocol, each area receives the membership dynamism information from its parent area. The main objective of the modified protocol is to minimize the impact on affected members during membership changes, consequently reducing the 1 affects n overhead. Additionally, a comparative analysis has been conducted to evaluate the efficiency of both protocols.

Multicasting is considered an efficient solution for group communication on the internet as it facilitates the transmission of a single data copy to multiple recipients, thereby conserving network resources such as bandwidth and reducing the load on senders and transit routers.

The paper specifically focuses on group key management using a symmetric cryptosystem, like the Advanced Encryption Standard (AES), which employs a symmetric key for encryption and decryption. Various approaches have been proposed to optimize the key update process, such as using different local traffic encryption keys to reduce the impact of updating keys. However, these approaches necessitate decryption and re-encryption operations at the boundaries of areas, potentially leading to reduced communication quality.

The ASGK protocol, proposed by Challal et al., addresses group key management by dividing the multicast group into clusters managed by Area Security Agents (ASAs) and using traffic encryption keys. The protocol scales effectively for large groups by managing the impact on affected members and encryption/decryption operations through adaptive cluster structures, considering membership dynamism.

While the ASGK protocol offers effective scaling for large groups, it approximates the impact on affected members. Consequently, the Ancestors protocol has been developed to provide a more balanced approach, explicitly considering the number of affected members. The importance of considering the 1 affects n overhead and re-encryption overheads when defining the cost function for group key management is emphasized. The paper assumes a fixed infrastructure of areas organized in a tree structure, each managed by an Area Security Agent (ASA). Additionally, it discusses the execution of a distributed cluster update phase based on local information about the membership dynamism, which varies over time and space.

In conclusion, the ASGK protocol effectively scales to large groups, managing the impact on affected members and re-encryption overheads by adapting the cluster structure based on membership dynamism. However, its cost function only approximates the impact on affected members, thus leading to the development of the Ancestors protocol to address this limitation.