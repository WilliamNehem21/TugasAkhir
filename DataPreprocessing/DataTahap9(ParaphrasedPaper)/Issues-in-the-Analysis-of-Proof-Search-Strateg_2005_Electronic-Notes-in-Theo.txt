The current methods for analyzing permutations have been tailored to specific sets of inference rules. However, there are instances where these permutations cannot be accounted for using the aforementioned definitions. The analysis of permutations through the concept of active and principal formulas is at times too general to accurately capture all possible permutations.

When examining the permutable nature of given rules, the concept of strong permutation position is focused on analyzing potential permutations within a specific proof, such as concrete instances of a given inference rule. It should be noted that permutations and inference movements in a proof can lead to changes in the context part of an inference, which have been explicitly detailed.

According to theorem 4.7, if we remove redundant steps in a proof prior to any other proof transformation (i.e., before any permutation), then a permutation of a strong additive rule 'j' over a unary rule 'i' will only result in a permutation of a certain form.

Success in a proof search is not solely about finding a proof, but also about providing additional information regarding provability. Certain parts of a constructive proof may be unrelated to the actual resulting computation. It is evident that a more efficient implementation of proof search strategies requires careful control and management of the involved formulas.

We will briefly and informally outline our approach to the propositional fragment of linear logic, excluding contraction and binary additive rules. These rules can be integrated into the following approach without significant difficulty. Additionally, in the remainder of this section, we will focus on detecting and removing unused formulas that appear solely in the succedent.