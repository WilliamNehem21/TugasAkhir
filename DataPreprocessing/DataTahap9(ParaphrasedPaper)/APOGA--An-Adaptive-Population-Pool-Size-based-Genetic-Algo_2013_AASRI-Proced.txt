The size of the population in a genetic algorithm is a critical factor that directly impacts its ability to search for an optimal solution within the search space. While many studies have shown that a large population size improves the accuracy of finding an optimal solution, it may not be suitable for small search spaces. Therefore, determining an optimal population size is essential, but keeping the size fixed can lead to increased time complexity and complexity in the search process. To address this issue, this paper proposes an adaptive population size genetic algorithm (referred to as APoGA) in which the population size changes dynamically based on the algorithm's performance at each iteration. The experimental results demonstrate that APoGA outperforms the standard genetic algorithm across a range of solution spaces when solving benchmark test functions.

The evaluation function, known as the fitness function, calculates the quality of each chromosome. The genetic algorithm operators, including crossover and mutation, emulate the processes of natural reproduction and species mutation, leading to potentially superior solutions. In traditional genetic algorithms, the population size is fixed throughout the iterative process, which can impact the algorithm's ability to find high-quality solutions. Maintaining diversity in the initial population has been proposed as a means to enhance the performance of genetic algorithms.

The performance of each chromosome is monitored using a parameter known as "reliability" (RLT), which determines the number of iterations a chromosome can perform. When the RLT of a chromosome reaches zero, it is removed from the population pool.

Similar to the standard genetic algorithm, APoGA begins with a selection process followed by crossover and mutation. However, in APoGA, the selection process adapts the population size at each iteration. The selected chromosomes are paired as parents, and single-point crossover is performed. The proposed APoGA utilizes RLT formulation for each chromosome to adaptively adjust the population size, leading to improved convergence performance over the standard genetic algorithm when solving benchmark test functions with varying solution spaces.

The experiments conducted on DeJong type I functions with different solution spaces show that APoGA outperforms the standard genetic algorithm. Additionally, APoGA demonstrated rapid convergence after a certain number of iterations, which indicates its superior performance over the standard genetic algorithm. Therefore, future testing of APoGA with a broader set of benchmark test functions and comparisons with other genetic algorithm variants are warranted.