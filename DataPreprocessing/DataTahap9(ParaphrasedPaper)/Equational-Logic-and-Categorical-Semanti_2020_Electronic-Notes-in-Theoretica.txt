Multi-languages refer to programming languages that are created by combining existing languages. They allow programmers to replace expressions from one language with those of another, such as replacing ML expressions with Scheme expressions and vice versa. This approach aims to facilitate code reuse and interoperability between software systems. To define the semantics of multi-languages, new constructs called boundary functions are introduced to manage the exchange of values between the underlying languages.

One crucial property of multi-language signatures is regularity, which is closely related to polymorphism. It ensures that every term derived from a signature has a unique least sort. Assuming regularity for all signatures in the paper, we demonstrate how to construct a set of terms based on a signature sg.

When considering an order-sorted theory th with signature sg and axioms ax, an sg-algebra a that satisfies all the axioms is termed a model of th. The category of models of th, denoted as osmod(c, i)th, is a subcategory of osalg(c, i)sg comprising all models of th in(c, i).

A multi-language signature sg gives rise to the category mlalg(c, i)sg, which consists of all sg-algebras and sg-homomorphisms. There is a straightforward correspondence between this category and osalg(c, i)sg, as outlined in theorem 3.7.

Regularity and coherence for a multi-language signature sg (sg 1, sg 2) are defined in relation to its associated signature, with sg being regular or coherent if sg 1 and sg 2 are also regular or coherent.

While the running example serves as an elementary illustration of the theory, the paper acknowledges its limitations and provides a glimpse of a more comprehensive example. Due to space constraints, only the principal concepts are presented, with full details available in the extended version of the paper.

The practical developments of the work presented in the paper are aligned with theoretical advancements, with each approach complementing and influencing the other. Additionally, efforts are being made towards the implementation of the examples within Maude.