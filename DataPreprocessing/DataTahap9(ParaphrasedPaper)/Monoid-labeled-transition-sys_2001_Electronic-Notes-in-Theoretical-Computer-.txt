In general, we will assume that the labels define a commutative monoid, which is characterized by a commutative, associative operation with a neutral element 0. This assumption allows us to interpret labeled transition systems in terms of coalgebra as a mapping from states to graded sets of successor states. Through this viewpoint, we observe an intriguing intertwining of coalgebraic structure with the algebraic properties of the monoid.

Another motivation for this research is the exploration of set-functors. In previous studies ([gum98], [gsb], [gs00]), we have examined the coalgebraic significance of various preservation properties of set-endofunctors. In this work, we aim to construct such functors, which are parameterized by a commutative monoid, enabling the customization of functors by selecting commutative monoids with specific algebraic properties.

In the application of coalgebras, it is common to encounter type functors that satisfy an important technical property: the preservation of weak pullbacks. This property implies that a (weak) pullback diagram is transformed into a weak pullback diagram. Many results in coalgebra theory (e.g., [rut00]) rely on this property. In [gsa], it was demonstrated that a functor f preserves nonempty weak pullbacks if and only if bisimulations between f-coalgebras are closed under composition. Considering Corollary 3.10, if its converse holds, then by Lemma 3.5, one might wonder whether, in general, simulations could have been defined by just one clause of 3.9 so that condition (ii) would automatically be satisfied for arbitrary semilattices. However, it is important to note that with such a definition, we would not have been able to demonstrate that simulations are closed under composition.

One of the motivations for this study was to establish a collection of examples of set-endofunctors with specific combinations of preservation properties. This was achieved by parameterizing a certain class of functors with algebraic structures and translating the functorial properties into corresponding algebraic laws. For example, Theorem 5.13 can be used to obtain an example of a functor that weakly preserves nonempty kernel pairs, but does not weakly preserve nonempty pullbacks: simply choose any nontrivial abelian group for m.