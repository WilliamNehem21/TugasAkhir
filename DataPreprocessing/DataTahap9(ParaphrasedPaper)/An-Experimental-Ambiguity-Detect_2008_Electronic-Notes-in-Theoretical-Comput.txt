While computer programs are designed to convey unambiguous meanings, the grammars used to describe their syntax are often ambiguous in practice and require disambiguation rules. Ensuring that these rules effectively remove all ambiguities while preserving the original intended language can be challenging. This paper introduces an experimental tool for detecting ambiguities in GNU/Bison and demonstrates its usefulness in developing grammars for a subset of Standard ML.

The paper emphasizes that legitimate parses according to a grammar may not always align with the intended language. With programming languages in particular, a program is expected to have a unique interpretation, necessitating a single parse. However, the grammars developed to describe these languages are often ambiguous. Despite the fact that ambiguous grammars are more concise and readable, the language definition should include disambiguation rules to determine which parse to choose.

The tool presented in this paper is designed to identify potential ambiguities in context-free grammars (CFGs), which developers can then use to write disambiguation rules where necessary. Since the problem of finding all ambiguities in a CFG is undecidable, the tool employs a conservative algorithm that prioritizes covering all possible ambiguities but may also yield false positives. The discussion also touches upon the difficulty of finding user-friendly ways to present the ambiguity report and provides examples of ambiguous situations.

The paper delves into the ambiguity checking algorithm's exploration of parse trees describing the same sentence and the approximations made during this process. It also outlines the algorithm's complexity and the limitations of existing ambiguity detection techniques while advocating for the need for better methods. The paper concludes by highlighting the successful application of the experimental ambiguity detection tool on a complex portion of the Standard ML grammar and suggests potential integration with other ambiguity detection techniques as a promising avenue for future research.