Interactive theorem provers have been equipped with various automatic proof procedures tailored to different application domains. However, when an automatic proof attempt fails, users usually receive minimal information about the reasons for the failure. This lack of insight into the reasons for failure can be attributed to a variety of factors, such as the need to prove an additional lemma, generalize an induction hypothesis, or the potential invalidity of the formula being proven. In scenarios like these, an automatic tool capable of refuting non-theorems would be beneficial.

To address the issue, a standard SAT solver can be employed to test satisfiability within a specified number of elements. If a satisfying assignment is found, it can be easily converted into a model for the Higher-Order Logic (HOL) formula. Satisfiability can be tested by translating the formula into DIMACS SAT and DIMACS CNF formats, with the latter requiring the formula to be in conjunctive normal form. To avoid an exponential blowup at this stage, we use definitional CNF and introduce auxiliary boolean variables where necessary. Although the translation into SAT format is straightforward, a more sophisticated CNF conversion could further enhance our approach's performance.

We have also implemented a naive DPLL-based SAT solver in Isabelle to allow for experimentation with countermodel generation without the need for external solver installation. This translation, comprising approximately 2,800 lines of code written in standard ML, is available in the Isabelle/HOL theorem prover. Furthermore, we have extended the translation technique to higher-order logic and seamlessly integrated it with a popular interactive theorem prover.

While we have only applied the technique to relatively small examples thus far, the algorithm's non-elementary complexity limits its applicability. Nevertheless, we believe that it can still be practical, as many formulae have small models. To validate this assertion and further assess our approach's performance, we plan to conduct larger case studies, potentially in the area of cryptographic protocol verification.