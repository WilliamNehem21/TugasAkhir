Robertson and Seymour introduced tree decompositions in a series of papers on graph minors, but they have proven to be beneficial in various other domains as well, such as solving challenging graph-related problems. The tree structure of a tree decomposition can often be utilized to address problems on a graph. As the size of graph separators is bounded by the treewidth plus one, this method can result in algorithms with polynomial run times in relation to the size of the graph, provided the graph has a bounded treewidth. This is one of the reasons why treewidth has found numerous applications in parameterized complexity theory.

The subsets x(i) are referred to as bags. The width of a tree decomposition is determined by the size of its largest bag minus one, and the treewidth of a graph g is the smallest width across all tree decompositions of g. For the sake of simplicity, we assume that all tree decompositions used in this paper are "nice", meaning that {a, b}(left) but a is forgotten, and thus is no longer a terminal (right). Because we only consider games where the first round is limited to terminals, a no longer appears in the root. However, it can still be chosen in the following rounds, introducing new moves to the game. The occurrences where a, now a non-terminal, has been chosen are indicated in bold.

As previously mentioned, this lemma can be utilized in dynamic programming to build potential game representations for join nodes. Additionally, it is imperative to ensure that we can also do so for introduce and forget nodes.

A more extensive form of the one-sorted MSO covered in this paper can express problems such as the Hamiltonian path problem, which is not achievable in one-sorted MSO. By utilizing two-sorted structures, such as a structure with a separate set of objects and two relations v and e that distinguish between vertex and edge objects, our method should extend to two-sorted MSO. However, such structuresâ€¦