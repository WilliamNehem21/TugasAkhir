This academic paper discusses the Demonat project, which aims to develop a program capable of analyzing and validating mathematical proofs written in natural language. The project is intended to be used by students to enhance their understanding and creation of mathematical proofs.

The process involves a student writing a proof of a theorem in natural language, which is then translated by the program into an intermediate language called phox.nc. This language includes both standard commands found in proof assistants, such as intro, left, elim, apply, and prove, as well as new commands that require automatic verification of formulas before validation.

Section 2 introduces the new commands and explains the purpose of phox.nc, while section 3 provides a simple example of a proof and outlines how the program will analyze it. Section 4 focuses on the validation aspect of the project, emphasizing the need for a dedicated theorem prover.

The paper also presents a preliminary grammar for the commands in phox.nc and emphasizes the importance of maintaining a formal grammar while preserving closeness to natural language.

The translation process from natural language to phox.nc is discussed in detail, highlighting potential difficulties that may arise, such as the need to explicitly differentiate between different types of neighborhoods implicitly known by the student.

The paper proposes the use of an inverse resolution method as a way to validate the meta-rules associated with the new commands. It acknowledges the need for a more powerful automatic tactic for the new commands and suggests the implementation of a lazy inverse resolution method.

It also addresses the two approaches to the system: validating a complete proof by reading the entire text and granting the system freedom in parts translated to phox.nc, or building a proof interactively, allowing the user to request analysis on specific parts.

Furthermore, the paper discusses the idea of adapting the strength of the automatic prover based on the user's proficiency, highlighting the potential for the system to reject steps of a proof deemed too difficult for beginners.