Honda et al. and Bonelli-Compagnoni have recently introduced multiparty session types for a calculus of asynchronous communication. The concept of multiparty session types in the first study is based on the choreography metaphor, which describes interactions between processes as a global scenario. On the other hand, the second study is based on the orchestration metaphor, where interactions between processes are described as a centralized scenario involving one master process and multiple slave processes. The system presented in this paper follows the metaphor of the first study.

In addition, this paper introduces a simpler calculus than the one proposed by Honda et al. The syntax of the calculus is more flexible, not distinguishing syntactically between a primitive value send and a session channel send. This is in contrast to the previous work. The system uses multipolarity and global types to define communication protocols in multiparty sessions more comprehensively and clearly.

The paper also addresses race condition problems that arise when different interactions use the same channel. While global types alone do not guarantee protection from race condition problems, the system presented in the paper aims to mitigate these issues using the concept of multipolarity.

The paper outlines the syntax and operational semantics of the calculus in Section 2, defines the syntax of global types and introduces the linearity property in Section 3, and provides the programming methodology, syntax of local types, projection algorithm, and type system in Section 4. The paper concludes by comparing the system with related works and discussing possible future work in Section 5. Additionally, Appendix A contains the full proofs of the theorems presented in the paper.

The paper introduces a session initiation process between n peers, which results in the generation of session channels and their substitution in processes. The calculus uses multipolarity and supports actions for selection-branching communication between two or more participants.

Furthermore, the paper presents examples of protocol implementations for addition and fire alarm systems, discussing the semantics and type systems used in these scenarios. It also addresses the practical implications of its approach and discusses comparisons with related work.

The paper concludes by discussing the significance and implications of multiparty session types in various communication calculi and proposes future work, including the development of a typing theory that checks global types from inner-delegation scenarios and rejects implementations of such scenarios. It also plans to extend delegation with multicasting, allowing delegation of different behaviors to a group of participants simultaneously. The paper also discusses the importance of subject reduction and the properties required for its proof, such as channel replacement, weakening, and substitution lemma. Additionally, it defines the concept of merge set in coherent scenarios and provides a proof to support its claims.