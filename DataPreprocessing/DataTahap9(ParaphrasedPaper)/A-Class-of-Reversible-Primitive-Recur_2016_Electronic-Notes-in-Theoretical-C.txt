Above, we have discussed the physical principles that make reversible computation relevant, noting that reversible computing encompasses classical computing and is present in various aspects of everyday computations. The aim of this work is to develop a formalism that can effectively invert a wide class of first-order functions within the same framework. This formalism, rooted in the compositional nature of the computational model presented, leads to the introduction of reversible primitive recursive functions (rprf), which are always terminating and minimize semantic redundancies with a relatively lightweight abstract syntax.

The paper gradually progresses towards the formalism by introducing reversible primitive recursive functions (rprf), which exclusively comprise total functions. It is noted that rprf, unlike primitive recursive functions, operates on integers instead of natural numbers, as natural numbers do not form a group with inverses under standard operations. Furthermore, rprf is shown to be closed under inversion in an effective manner.

The approach introduces pairing and unpairing as utilized in a non-standard definition of primitive recursive functions. These operations are used to retain information, enabling a single argument to serve as a type of storage. The composition of elements in rprf closely aligns with the composition scheme of primitive recursive functions, with the recursion mechanism operating as an iterator. This iterator iteratively applies one of the parameters in rprf based on the value of the input argument, and the iteration is driven by the absolute value of the argument when it is negative.