In this paper, D. Garlan presents a compelling case for using formal techniques in architecture description languages. A survey conducted in German further explores the utilization of formal techniques for software architecture description. The survey identifies several examples of formal techniques being applied, such as the use of process algebras in various architecture description languages, and the early architecture description language SARA utilizing Petri nets for operational behavior description. Additionally, the survey discusses dualistic Petri nets proposed in references [9,10], as well as the use of ZCL, a language based on the set-theoretic specification language Z, and its application in describing architecture structures and dynamic changes. Furthermore, the survey presents Community and Cool as architecture description languages founded on graph transformations, with Cool lacking explicit component specification.

The paper also notes that there are few other approaches aimed at combining component-based architectures and formal specification techniques to maintain a continuous formal technique. The paper highlights limitations in these approaches, as they tend to focus on specific specification techniques rather than a more generic approach. For example, the integrated formal specification technique Korrigan is used to specify components and their composition. Additionally, the paper discusses Community as a prototype language for architectural modeling founded on graph transformations.

The paper introduces the concept of multiple extension, which allows a set of transformations to be applied to a larger context within a single transformation. The construction of multiple extension is dependent on preserving the boundary of all embeddings and corresponding transformations, maintaining well-formed specification, and ensuring unique transformation of all overlapping embeddings.

Furthermore, the paper discusses parallel composition, which combines the result of two compositions within a single step, particularly evident in Theorems 3.8 and 3.9.

The paper introduces elementary transition systems as a special form of Petri nets, and extends the algebraic notion of Petri nets by including the initial marking. This enables the use of a set-based representation of the pre and post functions of the transitions of the nets.

The paper outlines the notion of embeddings as injective morphisms and presents a notion of transformation of elementary nets, adapting the substitution morphisms of place/transition nets. These morphisms replace transitions of the original net with whole subnets in the target net and map places injectively while preserving and reflecting the markings.

Moreover, the paper introduces the concurrent application of composition steps, called parallel composition. The paper concludes by stating that the given reduction semantics of architectures is unique based on the parallel composition, and the generic concept is instantiated to the sample specification technique of elementary nets, which is also used for the small web browser suite to clarify the main ideas.
