The notation we are proposing revolves around architectural diagrams that align with UML-RT collaboration diagrams. The model includes system components and their mutual inclusion and communication relations, using a few key constructs: capsules represent components; ports and protocols represent abstract interfaces; and connectors represent communication relationships. By partitioning a complex system into parallel components that communicate via connectors, a composition hierarchy is established, with the component leaves directly modeled in an operational style using a state-transition machine.

The paper is structured as follows: Section 2 presents the OTL, Section 3 discusses the application of our dual-language approach in a case study, and Section 4 offers a concise comparison of our approach with those in existing literature. The conclusions are in Section 5.

In the OTL language, the semantics of time-based quantification cannot rely on finite iteration, but must be defined in a similar manner to more conventional mathematical logics including arithmetic. Although we anticipate no technical challenges in providing this kind of semantics for OTL, we have not included it in this work mainly due to space constraints, leaving it for future development.

Furthermore, the method pos_f() is also a function of the disk, serving as a boolean function that determines if the disk (i.e., phi) is positioned to be read as full by the photocell, returning true if so, and false otherwise. This is formalized by the following OCL statement.