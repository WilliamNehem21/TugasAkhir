The prior research in this field has been influenced by the process calculus developed by Mitchell and his colleagues. While other existing models and frameworks could have been considered as starting points for our work, we chose to build upon the framework proposed by Mitchell and his team for several reasons. This framework, despite being a formal model, closely aligns with the computational aspects of modern cryptography as it operates directly at the cryptographic level. It extends the CCS process algebra by incorporating finite replication and probabilistic polynomial-time terms to represent cryptographic primitives. These probabilistic polynomial functions are particularly valuable for modeling the probabilistic behavior of security systems. Unlike other formalisms, the framework features probabilistic scheduling, offering a more accurate reflection of the attacker's ability to influence the communication network. Furthermore, it serves as a natural formal framework for capturing and reasoning about various fundamental cryptographic concepts.

The approach we adopt gives users the flexibility to make internal actions completely hidden from potential attackers. However, this level of freedom also comes with potential drawbacks, as a protocol designer with incomplete knowledge about the system may specify the protocol based on intuition and end up with properties that the actual protocol does not satisfy.

In terms of communication between the protocol output and the intruder input, the intruder can select the channel and its component. When synchronization issues occur in the opposite direction, the intruder gains the ability to select not only the channel but also the message and its output component. Finally, if communication occurs between two components of the intruder, the intruder has full control.

Definition A.3 defines an oracle Turing machine as a Turing machine equipped with an extra oracle tape and three additional states: qquery, qyes, and qno. When the machine enters the state qquery, control is transferred either to the state qyes if the content of the oracle tape belongs to the oracle set, or to the state qno if it does not.