Remark 4.3 discusses the internalization of state variables in the original term language. A state variable is defined as a unary function symbol that only appears at the head of a term. This approach overloads the dot-notation for the application of unary functions a.t= a(t) in a consistent manner. The paper asserts that all rules of the system being introduced remain sound even if the interpretation of a state variable is relaxed to be a unary function on states rather than a single state. The completeness, which is proved later, transfers trivially to this more permissive semantics. What sets state variables apart from function symbols is the availability of an infinite reservoir of state variables, which allows for the selection of fresh variables when needed, as well as the possibility of renaming state variables.

The paper employs mechanisms similar to disjunction elimination and existential elimination in natural deduction to conclude c.s= d.t. To derive c.s= d.t, it is required to assume each of the potential outputs xi of a labeled term a.r in turn, while giving a fresh name b to the poststate reached by a.r in each case. The paper includes a version of falsum-elimination (on the left), as well as a rule asserting the validity of all substitution instances of the axioms in e (on the right).

Several technical preparations are necessary for establishing completeness. Substitution is formulated as an axiom rather than as a rule because the substitution axiom (but not the substitution rule, see remark 5.13) remains sound for reasoning based on modulobisimulation. However, substitution as a rule is admissible.

The paper notes that the phenomenon of comodel states being different but observationally indistinguishable is standard and is captured by the established notion of bisimilarity. This concept is explicitly instantiated to the particular notation of comodels. For simplicity of notation, the paper works with bisimilarity on a single comodel, as bisimilarity across two models in the comodel setting is the same as bisimilarity in their coproduct.