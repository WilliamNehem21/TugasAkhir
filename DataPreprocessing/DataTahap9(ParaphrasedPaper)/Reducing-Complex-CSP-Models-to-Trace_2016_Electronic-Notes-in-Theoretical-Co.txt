Initially, we provide a concise overview of the CSP language. Subsequently, we offer an informal explanation of our approach for the failures model. To establish our result comprehensively, we first present a formal definition of a finite observational model and the concept of rationality. We then outline our general construction. Lastly, we explore performance and optimization considerations.

As part of step 3, we ensure that an acceptance set derived from a trace constitutes a complete set that is accepted by the process under scrutiny. This is achieved by employing a regulating process, which can either accept an unprimed event or accept the first refusal or acceptance event in alphabetical order, followed by a refusal or acceptance for each event in sequence. In the latter scenario, the regulating process then transmits a "done" event and returns to its original state.

For the purpose of efficiency, we work directly instead of utilizing the general construction outlined in Theorem 5.4. The context C1 introduces refusal events and a "stab" event, which can only occur when the corresponding normal events are eligible for refusal. This implements the refusal testing model. Additionally, the context CF, which permits only normal events optionally followed by some refusals (and a "stab" event), implements the failures model.