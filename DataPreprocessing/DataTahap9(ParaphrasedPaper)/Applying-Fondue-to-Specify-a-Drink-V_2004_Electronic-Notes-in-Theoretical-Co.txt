The aim of this paper is to introduce a method for specifying system behavior during analysis as part of the Fondue software development approach. The method is demonstrated using a case study involving a drink vending machine (DVM), which is based on operation schemas and a protocol model. The protocol model outlines the temporal sequence of system operations using a UML protocol state machine, while an operation schema defines the functionality of a system operation using pre- and postconditions written in the Object Constraint Language (OCL). Additionally, the paper discusses the use of a concept model, which is a special-purpose class model that describes the concepts, relationships, and actors within the system environment.

The paper also presents how the Fondue method is applied to specify a drink vending machine, which is a simple reactive system consisting of a controller and several peripheral hardware devices. The operation model and the protocol model are derived from use cases and together define a precise specification of system behavior. The environment model identifies all messages exchanged between the system and its environment and actors are used to model the environment. Furthermore, the paper introduces the shelf component class, which represents the physical shelf and its associations, and discusses the protocol model's role in defining the temporal ordering of system operations. Finally, the paper explores the use of OCL constraints, including the expression "receiver^message" to indicate the sending of messages during the execution of an operation, and the keyword "sender" to refer to the actor that invoked the operation.