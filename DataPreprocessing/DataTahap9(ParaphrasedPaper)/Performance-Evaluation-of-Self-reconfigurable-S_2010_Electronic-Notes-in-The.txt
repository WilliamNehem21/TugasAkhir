In the emerging open-world software paradigm, software must be able to dynamically adapt to continuous changes in the environment. This involves integrating third-party services rather than creating software from scratch, as the environment can dynamically provide new components that the software must discover and integrate. Existing approaches and technologies, such as publish-subscribe middleware, grid computing, autonomic computing, and service-oriented architectures, provide partial support for the assumptions of open-world software.

Open-world software distinguishes between service providers who develop and deploy services in heterogeneous environments, and service integrators who create applications that invoke these external services. Service integration requires that deployed services describe their functional and non-functional properties, provide and negotiate service level agreements (SLAs), be dynamically discoverable and bindable at runtime, and allow for monitoring of their real behavior. This paper mainly focuses on the last two aspects of service integration.

While previous work has focused on managing different workloads by negotiating and relying on known and reliable quality of service (QoS) values from third-party providers, our approach does not blindly trust these values. Instead, we track the providers to predict their current QoS, even though this may result in less precise results. Our work is informed by existing research and also addresses the issue of guaranteeing the QoS of untrusted third-party services. We propose a framework for selecting the best services based on QoS, and unlike previous work, we balance the workload among multiple providers to support fault tolerance.