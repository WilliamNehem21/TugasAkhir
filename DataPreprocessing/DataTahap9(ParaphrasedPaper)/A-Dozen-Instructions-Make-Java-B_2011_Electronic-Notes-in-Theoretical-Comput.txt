The paper discusses the semantic domains for programs, heaps, and states of threads, and describes the behavior of various instructions in the context of the Java Virtual Machine (JVM). It explains how values are associated with class names and method descriptions within programs, and discusses the behavior of specific instructions including put, monitor, return, and throw. It also addresses exception handling, the handling of monitor release in synchronized methods terminated by an exception, and the omission of certain instructions from the paper due to their unspecified meaning in the JVM specification. The paper presents a formalization of the JVM language, reducing complexity without sacrificing features by separating generic operations and tabularizing specific behaviors of individual opcodes.