The specific meaning of a program can result in potentially infinite calculations, making it challenging to answer non-trivial questions. To address this issue, a simplified model that is not entirely precise can be used to analyze program properties. Abstract interpretation, a commonly used technique, streamlines the computation process in a way that captures essential properties within the finite resources of a computer (such as time and space). This method has been effectively utilized in diverse areas, including program verification, error detection and debugging, and specification.

Section 2 outlines how elements of the abstract domain are represented, defines the join and meet operators, and establishes a lattice structure using these operators. Section 3 introduces an algorithm for checking satisfiability and computing a normal form for a given element within our domain. In Section 4, a widening operator is provided. The transfer function for the domain is discussed in Section 5, with the conclusion presented in Section 6.