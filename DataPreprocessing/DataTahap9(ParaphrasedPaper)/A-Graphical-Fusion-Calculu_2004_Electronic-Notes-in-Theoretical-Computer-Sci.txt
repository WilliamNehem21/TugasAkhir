The research examines the connection between fusion calculus and graph transformations embodied in synchronized hyperedge replacement (SHR) style. Specifically, the study demonstrates that the fundamental algebraic structure is consistent when the Milner synchronization is employed in SHR. A notable contrast is identified in the behavior of fusion calculus, which exhibits an interleaving nature, while SHR inherently operates in a concurrent manner. The paper introduces the concept of interleaving semantics for SHR with Milner synchronization and illustrates a complete correspondence between the operational semantics of fusion calculus and SHR systems.

It is established that fusion calculus (featuring guarded sum and recursion) closely aligns with a subset of SHR. The alignment is underpinned by the presence of two similar operators in both modelsâ€”namely, a parallel composition operator for constructing systems and a restriction operator for specifying local names. Additionally, significant similarities are recognized in the respective mobility mechanisms. The primary disparity lies in the interleaving semantics of fusion calculus, allowing only one synchronization per step, in contrast to the concurrent nature of SHR, which permits multiple synchronizations. Consequently, to achieve a comprehensive correspondence, an interleaving semantics is imposed on SHR using a specific set of inference rules. The application of the normal inference rules results in transitions corresponding to multiple steps in fusion calculus.

Synchronized hyperedge replacement (SHR) [2,1,3] is a method for (hyper)graph transformations that enables the definition of global transformations through local productions outlining the rewriting of individual hyperedges and the constraints imposed by the rewriting on the surrounding nodes. The global transformation is achieved by combining different productions with compatible conditions, the definition of which depends on the chosen synchronization model, such as the Hoare or Milner synchronization models. The rewriting system also involves node mobility, allowing for the transmission of references to nodes during a transformation, ultimately leading to the merging of corresponding nodes.