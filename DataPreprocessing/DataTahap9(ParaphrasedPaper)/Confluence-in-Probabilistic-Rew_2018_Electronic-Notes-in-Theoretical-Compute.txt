This paper investigates the interplay between probabilistic reductions and non-determinism, particularly when a program has multiple reducible subexpressions, each of which is probabilistic. In such cases, the program can transition to different normalized distributions based on the reduction choices. The paper aims to examine whether the outcome of a program, represented as a distribution of values, is unaffected by the reduction strategy, akin to the notion of confluence in classical languages. While similar properties have been explored in the literature, previous studies have focused on specific languages, lacking a language-independent approach. Additionally, the techniques used in these studies are not readily applicable to other calculi. Furthermore, there has been abstract level research on confluence in a probabilistic setting, but these notions differ from the ones described earlier and offer limited applicability to programming languages.

Modelling the uncertainty in probabilistic rewriting necessitates relating elements to distributions of elements, rather than simple relations between individual elements as used in existing approaches. It is also necessary to relate elements to multiple distributions in cases such as (,). To address this, the paper introduces a relevant definition.

Execution in a Probabilistic Abstract Reduction System (PARS) involves a blend of non-deterministic and probabilistic choices. Non-deterministic choices occur when the machine selects a successor distribution for the current element, while probabilistic choices entail randomly selecting an element from the chosen successor distribution. To model such execution, the concept of a computation tree is employed.

In a subsequent section, the paper introduces a definition of confluence and discusses its correctness. To be practically useful, this definition should also be amenable to proof. The paper presents several simplified criteria for proving confluence, obtaining analogues to the typical methods for establishing classical confluence.