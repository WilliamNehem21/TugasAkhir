Understanding the proof theory of linear logic has necessitated the development of different calculi. Early attempts to devise term logics for monoidal categories were made by Lambek and Jay, who realized that ordinary algebraic terms without variable copying or elimination could suffice. Subsequent efforts linked the term calculus to the proof theory of various fragments of linear logic, as seen in the work of Abramsky and Benton, Bierman, de Paiva, and Hyland.

A recent approach to providing a term logic was proposed by Koh and Ong, who recognized that the challenging rewiring conditions for the units that arose in linear logic could be expressed directly and clearly with scope changing rules. However, their term logic did not gain substantial traction in the linear logic community, possibly due to the reintroduction of explicit scopes and the cryptic syntax of their term logic. While the use of proof nets in linear logic makes a term logic largely unnecessary for the multiplicative fragment, it becomes more compelling when considering the multiplicatives together with the additives. Even a minimalistic approach like that presented by Hughes and van Glabbeek highlights the complexity of additive proof nets, making a term logic valuable in such cases.

The paper presents a decision procedure for the term logic, which is a key formal result. It introduces the term logic formally in two different syntactic flavors â€“ a programming syntax and a more succinct representation. The dynamics of composition in the term calculus corresponds precisely to the cut elimination process, with the paper providing descriptions of the cut elimination rewrites and discussing special cases explicit to clarify the cut elimination procedure.

The removal of a cut and the replacement of a cut with one of lesser height or with zero or more cuts of lesser height are observed to strictly reduce the bag of cut heights when applying the rewrites.