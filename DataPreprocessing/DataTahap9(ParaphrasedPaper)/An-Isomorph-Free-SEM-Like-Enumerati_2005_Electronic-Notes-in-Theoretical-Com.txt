Recently, there has been significant effort directed towards automating the creation of finite models for first-order formulas. These models can be valuable for automated reasoning using semantic strategies, as well as for interactive purposes such as debugging or refuting conjectures. Numerous systems have been developed, and considerable work has been put into reducing the extensive search spaces involved. The most effective methods are those capable of extracting as much information as possible from the given formula.

For instance, following a previous example, it was observed that 'a' is not defined in 'i0' (although it can be defined as any constant), and as a result, 'f(a)' is not definable in 'i0'. However, if we consider 'i1' as 'i0' with 'a' defined as 1, then 'a' is clearly defined in 'i1' and so is 'f(a)'. Furthermore, in 'i1', the literal 'f(a) = a' is also definable. Consequently, the clause 'f(a) = a' is a unit in 'i1'.

This observation leads to the suggestion that a restricted form of local confluence may hold, which indeed is the case, as will be proven. The proof, involving all five rules of definition 2.7, is somewhat laborious but not overly challenging, and is provided in the appendix.

It is important to note that the simple description of 'sem' given above overlooks the efficiency gained from a complex backtracking mechanism. As we are replacing the enumeration provided by the 'sem' algorithm with a different algorithm, recovering the original backtracking mechanism is not feasible. Instead, the focus is shifted to propagation, which is likely the most significant feature of 'sem'.

It is not necessary to generate all isomorphism classes of partial interpretations, and the search may be restricted to interpretations that are logically meaningful, i.e., interpretations that can be obtained through sequences of assignments and propagations from 'f0'.

Further, it was proven that 'l = l''. Subsequently, the case where one of 'c' or 'c'' is not a unit in the corresponding interpretation needs to be considered. Since 'c' and 'c'' are units in 'f', in refinements of 'f', these clauses may cease to be units only by becoming true or false.