The paper discusses the use of tactics in theorem proving to decompose a goal into subgoals and carry out proof search. It describes two modes of interaction between a user and a theorem prover using tactics: the user can either decide which tactics to apply at the top level and let the tactics fill in the details, or intervene in the middle of tactic execution and then allow the tactic to resume. The paper presents a technique that enables the latter mode of interaction by collecting a trace of the computation while executing a tactic on a goal, and then allowing the user to suggest intermediate steps or override decisions made by the tactic without terminating the tactic. This technique is achieved by replaying an initial part of the computation and then continuing the computation in the same context in which the tactic was intercepted.

The technique is based on the semantics of tactics in continuation passing style and involves collecting a trace of the computation and using it to replay an initial part of the computation without repeating the search that was carried out during the original execution. The paper also discusses how the technique can be used to replace a call to a named tactic by the evaluation of another tactic expression, called a callback, and provides examples of how the technique can be applied to repair failed proof attempts.

The paper concludes by noting the potential for implementing more sophisticated forms of analogy in tactical theorem provers using the proposed technique and indicates that the authors plan to investigate these extensions in the future.