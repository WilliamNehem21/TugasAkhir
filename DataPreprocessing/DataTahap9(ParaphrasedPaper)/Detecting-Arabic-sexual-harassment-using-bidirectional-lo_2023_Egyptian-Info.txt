This scholarly article is of great significance in the Arab world and is based on a dataset comprising 56,245 Arabic tweets from the period 2019 to 2020. After conducting multiple experiments to find the most effective solution to the problem at hand, the authors combined two methods to extract additional features. Specifically, during the word representation training phase, features were extracted from the bidirectional long short-term memory (BiLSTM) using word embeddings, and from the pre-trained fastText using the temporal convolutional network (TCN).

The paper's structure can be outlined as follows: Part 2 reviews related literature, while Part 3 offers a theoretical background on techniques for classifying sexual harassment. Part 4 elaborates on the approach employed in this research, and Part 5 assesses and explains the models used. Finally, Part 6 presents the conclusions drawn from the implementation of the proposed methods.

The use of extreme gradient boosting (XGBoost) is also discussed, which is a distributed gradient-boosted decision tree machine learning library known for its scalability. It is an open-source software package that implements optimized distributed gradient-boosting machine learning methods within the gradient boosting framework. XGBoost is an enhanced version of the gradient boosting algorithm and implements parallel processing at the node level, making it more potent and faster than traditional gradient boosting methods. Additionally, it helps prevent overfitting.

Furthermore, the article discusses the concept of true positives (TP), true negatives (TN), false positives (FP), and false negatives (FN) in the context of classifying sexual harassment. It also delves into the receiver operating characteristic (ROC) curve, which illustrates the trade-off between the true positive rate (TPR) and the false positive rate (FPR) for different thresholds of each binary classifier.

In terms of future work, the paper suggests the utilization of stem and stop words specific to the datasets, as opposed to relying on the default stop words from the NLTK library, in order to enhance classification accuracy for Arabic text. The authors also recommend exploring additional optimization methods, such as combining particle swarm optimization with convolutional neural networks (CNN), and delving into more deep learning techniques to classify Arabic text.