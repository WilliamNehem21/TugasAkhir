The paper explores the challenges and opportunities in designing interactive agents that go beyond computational limitations. It discusses how interactive agents are concerned with issues such as situational awareness and survivability, which are not addressed by traditional algorithms. The paper outlines features to consider in the design of interactive agents, such as boundaries consisting of interaction points with the environment. It presents initial ideas for an architecture and formal framework for designing, specifying, and analyzing interactive agents, based on rewriting logic and a reflective model of coordination.

The paper introduces the concept of pagoda systems, which are collections of pagoda nodes under the control of distributed node coordinators (DCs), and pagoda reasoners based on soft constraint solving. It also uses an alternating display as a running example to illustrate the structure and rules for interactive agents.

The paper proposes four types of interaction points: message input, message output, read a value, and write a value, denoted as i(id,mq), o(id,mq), r(id,v), and w(id,v) respectively. It details the activities of an alternating display and discusses coordination and behavior rules.

The paper also mentions stream semantics for the REO coordination model, signal event semantics, and interaction paths of the alternating display. It then discusses the activities that might make up a goal-based autonomous agent and analyzes two autonomous agent systems.

In summary, the paper presents an architecture and formal framework for specifying and analyzing interactive agents, focusing on policy-based coordination and interaction points. It identifies future research directions, such as extending actor interaction semantics, developing logical rules for inferring emerging behavior of interactive agents, and establishing design principles for compositional reasoning.