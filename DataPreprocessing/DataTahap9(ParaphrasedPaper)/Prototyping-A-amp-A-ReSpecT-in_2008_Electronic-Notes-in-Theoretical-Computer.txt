The paper discusses programming tuple centres within the Tucson coordination infrastructure for multiagent systems. Tuple centres are viewed as virtual machines that can be programmed using coordination rules to govern interactions between agents in a distributed setting. The scripting language A&A Respect is used to modify the default behavior of tuple centres, enabling the implementation of various coordination policies through rule-based event interception and tuple dataspace modification. The Maude specification of A&A Respect is presented as a prototype implementation of a tuple centre, employing a multiset rewriting style inspired by process algebraic approaches. This specification serves as a reference for the syntax and semantics of the language, a tool for verifying program correctness, and a foundation for extending A&A Respect to new domains such as stochastic-oriented settings.

Tuple centres, as coordination media, are programmable tuple spaces and are integral to MAS coordination infrastructures like Tucson and MARS. The behavior of a tuple centre can be defined using a specification language that determines its coordinating behavior.

The paper introduces the use of logic terms to represent tuple-centre operations generating events, with identifiers for the source and target of the event, as well as a time variable. Additionally, it describes the introduction of a reactionstate sort to model the execution of reaction goals, and the concept of an empty reaction execution environment where no pending reactions are to be executed.