Programmers require tools that can calculate error bounds and automate the laborious and error-prone reasoning involved in validating the accuracy of their floating-point algorithms. They commonly adhere to the IEEE 754 standard due to its widespread support in hardware and software libraries, as well as its provision of fast implementations with various levels of precision. For instance, Intel CPUs offer four levels of precision and Nvidia GPUs offer three. Furthermore, Cornea et al. have developed a package for decimal floating-point numbers, demonstrating the adoption of this standard. 

We represent IEEE floating-point numbers as a subset of the real numbers. Subnormal numbers and zero are denoted by a fixed distance apart within a set of real numbers (fixed-point numbers), while normal numbers are represented by a subset of an infinite set of real numbers that are varying distances apart (floating-point numbers). Additionally, any real number above a predetermined threshold is considered to be floating-point infinity. Notably, we do not model signed zero or NaNs, and we provide detailed explanations for each set in subsequent sections.

In this study, we introduced a novel formalization of fixed and floating point within the current HOL Light distribution. We anticipate that this public release of a HOL Light theory for floating point will enable the HOL Light community to operate within their familiar framework, eliminating the need for cross-theorem-prover analysis, which is currently underdeveloped and not well-supported. Additionally, we intend to explore round-off errors in floating-point computations to establish precise upper bounds on round-off error in a separate project. Our aim is to utilize our work in that project to verify proof certificates of the reported errors.