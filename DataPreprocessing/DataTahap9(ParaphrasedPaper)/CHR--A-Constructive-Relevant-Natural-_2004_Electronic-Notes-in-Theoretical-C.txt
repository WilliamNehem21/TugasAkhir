We will only provide a brief overview of the process for establishing proof-theoretical justifications of logical laws. This process has been examined in more detail and with greater attention by scholars such as Michael Dummett and Dag Prawitz (refer to, for example, [5, 6, 15]). Our approach differs slightly from that described by Dummett.

In this section, we present a proof demonstrating that CHR is a relevant logic according to the definition of Anderson and Belnap. To do so, we assign a unique number to each variable occurring in any proof object in a CHR proof. Subsequently, we replace each proof object with the set of numbers contained within it. By a straightforward concept, we link relevant proof to strict computation. The system we have devised is clear and uncomplicated, and our examples demonstrate that the proof rules are natural to use. We have also outlined how this logic corresponds to other relevant logics. Since we have developed this logic as a type theory, there is a natural interpretation of propositions in this logic from a computer science perspective.