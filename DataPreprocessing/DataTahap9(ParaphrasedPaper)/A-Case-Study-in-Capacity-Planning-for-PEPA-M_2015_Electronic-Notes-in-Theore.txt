In this paper, we present a framework for capacity planning and performance evaluation using the Performance Evaluation Process Algebra (PEPA) implemented in the PEPA Eclipse plug-in. PEPA is a language that enables modellers to describe complex systems compositionally. Modellers typically define various processes that interact with each other by sharing activities. Once the model is defined, it can be numerically evaluated using different techniques to obtain performance metrics, which provide insight into the real system under investigation.

Predicting the performance of a service by modeling the service and calculating response times under different client loads is valuable. When designing a system, there is flexibility in the number of components that can be deployed. This can range from deploying more or fewer servers in a simple case to incorporating different components, such as web servers, database servers, and external authentication services, in a more complex environment.

Activities performed by each component are associated with rates, and the symbol "t" indicates that a component will passively cooperate with another on a specific activity. In cases where a component passively synchronizes with an activity, it becomes a separate process.

While designing a web service, the designer must consider the cost associated with the components, such as obtaining and running physical or virtual servers. Additionally, it is important to ensure that the service delivers sufficient performance, such as low response times.

Performance measures may be associated with the throughput of an action or the average response time, and the cost function must be capable of penalizing both high and low values for a performance measure. Setting a target value for the performance measure and calculating the difference from this value is a simple approach to address this issue.

Determining the costs associated with each unit of, for example, response time is left to the user, as setting a useful default is challenging due to the undefined unit used for the rates in the model. Moreover, the weights used in the model need to reflect the specific cost associated with changes in performance measures.

A hypothetical scenario of a European-wide virtual university, focusing on the course selection phase, is used as an example. In this scenario, it is important to maintain a responsive service for students enrolling in specific courses.

The paper also discusses the time taken to solve models, indicating that each model may take a different time to solve due to varying rates that affect the speed of solving. The relative times taken to solve models are of greater interest than the absolute times.

Finally, the paper highlights the usefulness of capacity planning and heuristic search in modeling software and notes the availability of the capacity planning extension to the PEPA Eclipse plug-in project as of October 2014.