This academic paper discusses the essential security attributes of electronic voting protocols, which incorporate verifiability, accuracy, democracy, and fairness. The authors utilize a static program analysis tool to confirm these properties for a classical voting protocol under specific assumptions. The protocol is formalized within an extension of the lysa process calculus using blinding signatures. The fully automatic analysis uncovers previously undiscovered flaws related to verifiability and accuracy, and proposes modifications to the protocol to ensure validation of these properties.

Electronic voting offers a convenient and cost-effective alternative to traditional paper balloting. With widespread access to the internet, electronic voting has become a viable option for both governmental and small-scale elections and surveys. However, the use of electronic voting systems presents new opportunities for systematic disruption or manipulation of the voting process. Therefore, it is imperative to establish the correctness of these systems before they can replace traditional voting methods.

The paper demonstrates the applicability of static program analysis in validating key properties such as verifiability, accuracy, democracy, and fairness. Specifically, the authors examine the foo92 protocol, designed by Fujioka, Okamoto, and Ohta for large-scale elections, which employs chaums blind signatures. The protocol leverages blinding as a cryptographic primitive, following specific rules governing the signing and unblinding of messages.

The analysis aims to provide a comprehensive approximation of all potential messages transmitted on the network, along with possible value assignments to variables. Additionally, the analysis identifies any violations related to destination or origin annotations. It assumes perfect cryptography, ensuring that decryption and unblinding can only occur using the correct keys and blinding factors.

To illustrate the analysis, the authors present a flawed protocol involving two principals, A and B, which serves as a basis for the analysis. The protocol entails the generation and exchange of a key, K, along with a message, M, encrypted under the key, demonstrating potential vulnerabilities in the system.

Furthermore, the paper extends the analysis to examine the protocol's behavior with an arbitrary number of principals, emphasizing the versatility of the lysatool. The authors also elaborate on specific attacks and possible violations, demonstrating that the protocol remains secure under certain assumptions.

The analysis concludes that the foo92 protocol satisfies the properties of verifiability, accuracy, democracy, and fairness. While the protocol ensures the acceptance of validated ballots by the authority responsible for tallying, privacy remains a concern as the attacker can potentially link votes to specific voters. Overall, the paper showcases the effectiveness of static program analysis in validating security properties of electronic voting protocols and offers insights into the strengths and limitations of the foo92 protocol.