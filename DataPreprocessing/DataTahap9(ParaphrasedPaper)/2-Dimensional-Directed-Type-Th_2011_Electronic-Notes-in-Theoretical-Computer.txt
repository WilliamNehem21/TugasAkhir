In this paper, we focus on the two-dimensional case of directed type theory and introduce a type theory called 2dtt in Section 2. We show that 2dtt can be straightforwardly interpreted within the category cat, which consists of categories, functors, and natural transformations (Section 3). The syntax of 2dtt reflects the inherent properties of cat as a strict 2-category, with associativity, unit, and functoriality laws being defined rather than presented as propositions. Although the current scope of our applications does not require it, we suggest that 2dtt has the potential to be extended to higher dimensions and to support broader interpretations. In Section 4, we outline our primary application of 2dtt, which involves extending functorial syntax to accommodate dependently typed and mixed variance syntax, building on previous work [21, 14].

Furthermore, we consider potential additional applications of our theory. First, we propose the possibility of capturing existing examples of directed phenomena in dependent type systems, such as variance annotations for sized types, implicit coercions, and coercive subtyping. An instance of this is the translation of coercive subtyping into our system, where functoriality is employed to model the lifting of a coercion through subtyping rules. Since the use of map is explicit in our approach, it also supports non-coherent systems of coercions, and we anticipate exploring the applications of this flexibility. The coherent case may also provide insights into when instances of map can be inferred. Second, we suggest that directed type theory could serve as a meta-language for formalizing directed concepts, including reduction and category theory itself. Third, we speculate that directed type theory may offer a useful framework for reasoning about effectful programs or interactive systems, which evolve in a directed manner. For instance, it could be used to define a type of interactive processes with transformations governed by their operational semantics, or a type of processes with transformations determined by simulation. We also note a potential connection between directed type theory and homotopy theory in the context of concurrency.