The use of probabilistic programs has led to an exploration of how annotated logic programming compares with logic programming based on (bi)lattices. In this paper, we aim to address this question by introducing bilattice-based annotated logic programs (baps) and establishing their declarative and operational semantics. Baps are capable of handling statistical knowledge, incomplete or inconsistent databases, and introducing monotonic extensions of two-valued negation, while still possessing the desirable properties of classical logic programming. We define monotonic and continuous semantic operators for baps and develop sound and complete proof procedures for them based on classical binary resolution.

Our work also includes the establishment of sound and complete SLD-resolution for baps, which is the first sound and complete proof procedure for first-order infinitely interpreted (bi)lattice-based annotated logic programs. The languages we introduce allow variables and functions in annotations, extending previous definitions on this topic to the case of distributive bilattices. We also provide an example of a program illustrating the practical application of baps in decision-making based on accumulated information from inconsistent or incomplete databases.

In addition, we define semantic operators for baps and demonstrate their continuity in computing the least Herbrand model for a given bap. We also extend resolution methods for many-valued logics in order to achieve soundness and completeness of SLD-resolution for baps. Lastly, we establish an operational semantics for baps and prove its soundness and completeness with regard to correct answers.