In previous works, a model for concurrent, mobile, and ubiquitous systems known as mobile synchronizing petri nets (MSPN) has been introduced. This model is based on petri nets, which offer clear graphical representations of systems and benefit from a strong theoretical foundation. Additionally, petri nets are not turing-complete, allowing for various decidability results that do not apply to more expressive models. While other mobility models based on petri nets have been proposed in literature, none of these models address security concerns, which are crucial in this context, to the best of our knowledge.

In our study, we examined the expressive capabilities of MSPN systems and established several significant decidability results, including the decidability of coverability, which can be utilized to specify security properties like integrity and confidentiality. For the verification of these properties, we selected rewriting logic as the framework for development due to its natural support for managing distributed and concurrent systems. This logic has been effectively implemented by the Maude programming language, widely used for implementing various process algebras and formalisms for concurrency.

While we have discussed an algorithm for deciding the coverability problem of MSPN systems, this algorithm is currently inefficient. The backward analysis leads to an explosion in the set of predecessor markings, even with our ideal-based representation of marking sets. We intend to delve into the algorithm's complexity and explore the possibility of using forward analysis, which should enhance its efficiency. Additionally, we aim to integrate this approach with the introduction of abstractions or suitable type systems, which may render our analysis incomplete but more manageable in applicable scenarios.