This paper employs the Communicating Sequential Processes (CSP) framework to propose a characterization of non-interference in terms of deductions that low level tests can make about high level processes. The paper introduces the notion of "may testing" which yields classical non-interference and provides a concise formulation within CSP. The proposed characterization of may non-interference is shown to be preserved by a wider range of composition operators than those typically considered in the context of non-interference, and it also composes under the operators traditionally studied with non-interference. Additionally, the paper demonstrates that the CSP characterization of may non-interference allows for attractive and simple proofs of compositionality.

The compositionality of non-interference properties is crucial for constructing secure systems from secure components. McCullough has argued for the importance of compositionality by introducing the concept of restrictiveness, a property that ensures non-interference and is preserved by system composition. Existing literature offers various formulations of non-interference, often using state machines or event systems as system models, and defining notions of system composition within the semantic framework they establish.

The paper also discusses the passing of values between parallel processes through channel synchronizations and describes the abstraction mechanism within the CSP framework. It includes a traces model and trace semantics for the introduced CSP operators, which is deemed sufficient for the purposes of the paper.

The paper establishes a non-interference property termed "may non-interference" and illustrates its compositional nature, revealing that it is preserved by a wide range of CSP composition operators, including interleaving, synchronizing parallel (under certain conditions), restriction, hiding, chaining, and forms of high-low connection. Consequently, it is also preserved by external operators typically considered in studies of non-interference, such as cross product, cascade, and forms of feedback.

The paper raises a concern that the may testing characterization of non-interference may not be detailed enough to capture certain scenarios, and emphasizes the potential benefits of formulating a non-interference definition that is sensitive to refusal information. It also raises an open question regarding whether strong must non-interference is preserved by interleaving, let alone general parallel composition.

Alternatively, the paper discusses that while both forms of must non-interference are initially plausible definitions, it is not clear what they correspond to intuitively. The examples provided in the paper suggest that they may not be straightforward. The paper suggests that it may be more appropriate to include some notion of refusal test to account for refusal information obtained during a single execution in a semantic model, possibly in conjunction with an extended notion of may testing. This is an area of ongoing research.