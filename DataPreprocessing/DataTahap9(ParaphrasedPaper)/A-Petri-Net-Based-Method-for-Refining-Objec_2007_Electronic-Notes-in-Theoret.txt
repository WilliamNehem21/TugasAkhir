Over the past twenty years, object orientation has significantly influenced the field of software engineering. According to the tenets of object orientation, a system is viewed as a set of interacting objects that collectively perform the system's functions. An object, conceptually, is an entity that encapsulates both states and behaviors and can be analyzed from the perspectives of its structure and behavior. From a structural standpoint, objects with similar attributes are grouped into classes, while classes with common attributes form an inheritance hierarchy. In terms of behavior, objects exhibit different behaviors as they interact with each other, thereby displaying various object interaction scenarios. This paper specifically focuses on the behavioral aspects of object-oriented systems.

One of the challenges in this domain is the distinction between the lifecycle of individual objects and the interaction between multiple objects. It is difficult to derive the individual behaviors of objects within their lifecycles from the scenarios involving the interaction of multiple objects due to the varying levels of abstraction involved. The existing literature on object-oriented system design lacks systematic approaches to effectively address this problem.

The remainder of this paper is organized as follows. Section 2 presents the specification of object interaction scenarios using labeled nets and the synthesis of these labeled nets (step 1). Section 3 describes the elimination of duplicate labels in the integrated net obtained (step 2). In Section 4, we demonstrate how the individual behavioral specifications of objects can be derived through projection (step 3). Section 5 provides the conclusion. It is important to note that readers of this paper are expected to have

For object interaction scenarios specified as labeled nets, the occurrence of an event is represented by a transition, and the occurrence of a condition is represented by a place. The semantic meanings of conditions and events are denoted by the labels of the corresponding places and transitions, respectively. Pre-conditions and post-conditions for an event are represented by the pre-set and the post-set of the transition representing the event.

Furthermore, the paper introduces a method for refining given object interaction scenarios into individual object-based behavioral specifications using a Petri net-based approach. This method has several notable features. Firstly, it formally specifies the given object interaction scenarios as labeled nets, which are unambiguous and semantically rich. Secondly, it rigorously derives the object-based behavioral specifications from the object interaction scenarios through synthesis and projection, precisely reflecting the functionalities of the interaction scenarios. Thirdly, it allows for the analysis of desirable properties, such as liveness and boundedness, through well-known analysis techniques on Petri nets. Lastly, the specifications contain no duplicate labels and can be readily used for implementation purposes.