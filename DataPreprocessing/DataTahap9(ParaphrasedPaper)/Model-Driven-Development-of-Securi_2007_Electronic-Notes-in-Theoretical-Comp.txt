Model-driven development (MDD) is highly beneficial for creating standard business applications, as numerous MDD solutions and tools cater to this domain. However, non-functional aspects such as quality of service, adaptability, assurance, and security are often inadequately addressed. While this suffices for standard business applications, there is a need to enhance coverage of these non-functional aspects. Section 4 delineates the structure of a model-based tool chain designed to facilitate the development of secure applications in a platform-independent manner. Additionally, Section 5 provides an example illustrating the application of this approach in the air traffic management domain, followed by a conclusion in Section 6.

Although the specifics of the target platform become less significant in a model-based development environment, a reliable and efficient execution environment remains vital for successful system development. The CORBA Component Model (CCM) offers a suitable platform for building large-scale distributed systems, as it is based on the CORBA middleware and introduces advanced concepts such as automated deployment, alongside simplifying the utilization of certain CORBA services. Furthermore, our secure middleware platform employs an implementation of the CCM called QEDO and an extended security framework known as OpenPMF, both of which are built on top of MICO, a secure CORBA ORB.

Within the secure middleware, QoS enablers are utilized to enforce access control policies. To achieve this, a corresponding QoS enabler is instantiated in the CCM runtime environment on each relevant node. Management of the security policies is accomplished through a policy management framework called OpenPMF, where these QoS enablers interact with OpenPMF at runtime to obtain updates on the security policies that need to be enforced.

Similar to UML, the Extended UML (EUML) supports user-defined UML profiles, allowing us to customize the language for specific domains such as security. We have developed a security profile named EUMLSEC to model security policies alongside system design, including role-based access control (RBAC). This profile encompasses a stereotype <<security role>> that extends the EUML metaclass class, which will be elaborated upon in Section 5 to illustrate its application in the design of a secure-aware system.

We have transformed Platform-Independent Models (PIM) into SecureMiddleware Models (PSM) by extending the CCM metamodel through the inclusion of security concepts like roledef and permittedoperation, forming an extended metamodel called CCMSEC. Subsequently, the tool chain transforms the designed model into the platform-specific model, in this case, the secure middleware platform. The CCMSEC repository manages platform-specific information, while the policy repository oversees the policies defined within the platform, with both repositories synchronized with QEDO and OpenPMF as part of the tool chain architecture.

CCMSEC models can be modified or completed using the QEDO Modeller tool, an Eclipse plug-in that interfaces with the CCMSEC repository to propagate and display models graphically, and may also include deployment information or other non-functional aspects like QoS.

The tool chain, alongside the SecureMiddleware platform, was successfully employed in developing a secure prototypical air traffic control visualization application as part of the European AD4 project. Currently, the tool chain supports role-based access control for operation invocation and mandatory access control for information flow, but is designed to be easily extended to other security models. Additionally, our tool chain can automatically generate complex rule sets for the underlying infrastructure daemons, in addition to generating rules for component interaction.