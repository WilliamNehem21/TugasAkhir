Here we present a probabilistic approach to analyzing Lambek categorial grammars, which have demonstrated their effectiveness in natural language processing. The main issue arises from the fact that parsing in Lambek calculus relies on an inherently non-deterministic algorithm. We suggest that employing a stochastic method may offer a promising solution to this problem.

A constituent of type B on the right side of an exclamation mark signifies, at the proof-net level, that an atomic type B occurring in a type A=B is not necessarily the left conclusion of an axiom link. To illustrate, consider the proofnet discussed in the preceding section. While the word "lit" is assigned the type (np n s)=np, the second occurrence of "np" in this type serves as the right conclusion of an axiom link.

Now let's examine the contents of the stack of the automaton outlined in section 4, just before scanning the word "le." In the first scenario, the stack contains [np], whereas in the second scenario, it contains [s np?]. This information, which represents the unresolved dependencies, can be utilized to predict the type that must be selected for "le." It is worth noting that this proposal enables the consideration of long-distance dependencies, which is not feasible with taggers based on n-grams or hidden Markov models.