This paper presents a novel approach to representing semantics with simultaneous multilevel transitions in multi-agent systems. In our proposed approach, each transition represents a level or a component of a level with explicit reference to multiple levels of the multi-agent system. We argue that this representation eases the interpretation of changes at each level individually, as well as their relations, aligning with the abstractions commonly found in multi-agent systems.

The remainder of this paper is organized as follows. We start by discussing communication in multi-agent systems, followed by introducing the concept of multi-level semantics, the primary contribution of this paper. We then elaborate on the characteristics of this semantic style, discuss related work, and conclude the paper with final remarks and potential directions for future work.

We propose a way to give semantics to systems with multiple interrelated levels, such as the levels of abstraction in multi-agent systems, particularly where individual levels of the system already have semantics through independent transition systems. Our approach allows for the addition of constraints to existing semantic rules, specifying the interrelations among the levels and how events at one level affect other levels. By specifying independent transition systems for each level of abstraction, our approach offers modularity, visually elegant and understandable semantic rules, and the ability to specify different granularities for each level.

We also discuss the characteristics of our multi-level semantics representation. One key feature is modularity, which allows for the treatment of each level via separated transition systems, enabling clear delineation of the multi-agent system's modularity. If a layer of the system needs to be modified, the corresponding transition system in the semantic rules can be changed without affecting the independent transition systems for the other levels.

To illustrate our approach, we provide an example in which an agent needs to commit to an action for another agent, but lacks a communication link in the organizational specification. We then discuss how our approach addresses this example by changing the organizational specification.

We also summarize related work, including Dennis et al.'s proposal of an agent infrastructure layer for BDI-style programming languages, which aims to provide a common semantics basis for various BDI languages and support formal verification. Additionally, we touch on other works related to operational semantics, module concepts, and communication aspects in the context of multi-agent systems.