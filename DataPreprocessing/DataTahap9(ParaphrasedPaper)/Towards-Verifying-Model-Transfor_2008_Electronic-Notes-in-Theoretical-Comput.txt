This paper describes the application of the great language, a practical graph transformation system, to specify graph transformation rules. The great system, along with other systems like agg, progres, and fujaba, uses UML and OCL to define the domains of the transformation.

Graph transformation systems like great enable transformations of models from one meta-model to another using pattern matching rules. However, it is uncertain whether the resulting transformed output preserves the intended semantics of the source model. Complex transformations may lead to the loss or misinterpretation of important semantic information due to errors in graph rewriting rules or the transformation process. Thus, there is a need for a method to verify the preservation of the intended semantics across the transformation.

The paper also outlines an approach to convert statechart models into EHA models, and subsequently create Promela models from the EHA models, which can be verified using the Spin model checker. The proposed approach aims to provide assurance that the intermediate formats indeed preserve the properties intended for verification. One open research question is whether this approach can be used to validate whether the generated Promela model, which is represented as plain text code, accurately captures the EHA model from which it was derived.