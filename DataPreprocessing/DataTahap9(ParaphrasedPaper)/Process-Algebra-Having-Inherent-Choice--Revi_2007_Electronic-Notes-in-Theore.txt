Process algebras, which are commonly used formalisms for compositionally describing systems based on principles such as synchronous communication and observable dependencies, serve as a domain for semantical foundations of programming or modeling languages and are also utilized as modeling languages.

In certain cases, the scheduler's actions may be constrained by additional requirements such as priorities or fairness assumptions, which can be seen as a refinement of an abstract level where no constraints on the scheduler are imposed. This ability to describe a more detailed scheduler is separate from the challenge of dealing with the interaction between inherent nondeterminism and the resolvable nondeterminism of an underspecified scheduler.

In probabilistic process algebras, choice operators are expanded with a distribution that dictates the favorability of different options. Randomized choice operators are a specific form of inherent nondeterminism. Nevertheless, it is crucial to examine inherent choice operators (those without a distribution) independently, as sometimes the distribution is unknown or may not exist at all (cf. examples 1.2 and 1.3). It should be noted that efforts to incorporate pure inherent nondeterminism into probabilistic frameworks lead to overly complex models and unnecessary increases in verification costs.