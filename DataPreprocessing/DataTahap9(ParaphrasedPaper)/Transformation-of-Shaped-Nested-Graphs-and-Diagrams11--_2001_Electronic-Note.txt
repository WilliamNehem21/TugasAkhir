This academic paper presents a novel computational model for rule-based programming using graphs and diagrams. The model introduces a new approach to nested graph transformation based on variable matching and shape rules, which define structural consistency conditions on nested graphs. By integrating this refined model with the diagram editor Diagen, the paper extends the applicability of rule-based diagram transformation through customizable diagram interfaces.

The paper begins by discussing the use of graphs as a data model for representing various types of diagrams, even those that do not resemble traditional graphs. Building upon the concept of nested graphs, the model leverages graph transformation theory to establish a more expressive form of rule-based computations. The incorporation of shape rules further enhances the model's robustness, enabling the specification of structural consistency conditions and providing a decidable type discipline for nested graph transformation.

The structure of the paper is outlined, with sections covering nested graphs, graph transformation extension, specification of graph shapes, and the integration of the refined transformation with the Diagen diagram editor generator. Additionally, the paper discusses the consistency and decidability of the shape discipline, along with its application in shaping graphs for transformations and diagram generation.

The authors also highlight the potential application of the model in shape analysis, emphasizing its unique strengths compared to imperative, functional, and logical languages. The paper concludes by acknowledging the limitations of shape grammars and introducing possible extensions for future work, focusing on addressing nondeterminism in graph transformation and refining rule design to reduce backtracking.