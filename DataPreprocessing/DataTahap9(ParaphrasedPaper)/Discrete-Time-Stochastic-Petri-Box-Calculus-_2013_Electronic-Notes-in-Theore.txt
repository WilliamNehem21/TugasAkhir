I propose a new model called dtsipbc, which is an extension of discrete time stochastic petri box calculus with immediate multiactions. The operational semantics of this model is defined using labeled probabilistic transition systems, and the denotational semantics is given in terms of labeled discrete time stochastic petri nets with immediate transitions (ldtsipns), ensuring the consistency of both semantics. To evaluate the performance of dtsipbc, we analyze the corresponding semi-Markov chains, and we demonstrate its application in a case study involving the evaluation of the performance of a shared memory system.

Process algebras are widely recognized as formal models for specifying computing systems and analyzing their behavior. Petri box calculus (pbc) is a flexible and expressive process algebra designed for specifying the structure of petri nets and their interrelations, as well as providing compositional semantics for high-level constructs of concurrent programming languages. We extend pbc to dtsipbc by introducing discrete time stochastic and immediate actions, increasing its capability to model instant probabilistic choices and activities with negligible durations. We define the operational semantics of dtsipbc using labeled probabilistic transition systems and provide denotational semantics in terms of a subclass of labeled discrete time stochastic petri nets with immediate transitions (ldtsipns). We also conduct a performance evaluation using semi-Markov chains in a case study of a shared memory system.

In comparison to other stochastic extensions of process algebras, dtsipbc has notable differences. Its discrete time semantics allows for concurrent execution of activities in steps, as opposed to the interleaving simulation in continuous time semantics. Additionally, dtsipbc introduces immediate multiactions with the same priority, which can model urgent activities and result in a clearer system representation. The immediate multiactions are used to specify probabilistic choices and activities with negligible durations, and they play a crucial role in performance evaluation based on embedded discrete time Markov chains.

The paper is organized into sections describing the syntax of dtsipbc, operational semantics, denotational semantics, stochastic processes, and a case study of a shared memory system. We introduce restrictions to avoid inconsistency in the iteration operator, and we define sets of dynamic expressions based on the regularity of underlying static expressions. The execution of activities and the prioritization of immediate multiactions are captured by action rules, and we introduce new rules to handle delays and probabilities of staying in a state. We also address technical challenges related to synchronized immediate multiactions and structure plain dtsi-boxes to ensure safety and correctness.

The performance evaluation of dtsipbc is demonstrated using steady-state probability mass functions for the shared memory system case study. We emphasize the advantages of dtsipbc in specifying concurrent composition and synchronization of actions, as well as its compact representation of processes and powerful analytical capabilities. Dtsipbc is suitable for discrete time applications in various domains, including business processes, neural networks, transportation systems, and computer and communication systems.