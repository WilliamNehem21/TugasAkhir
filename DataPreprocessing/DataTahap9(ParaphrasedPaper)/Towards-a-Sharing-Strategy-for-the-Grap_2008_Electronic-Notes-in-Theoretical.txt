In this academic paper, we present a reduction strategy for the graph rewriting calculus, with the primary goal of preserving sharing information in terms for as long as possible. We demonstrate that the corresponding reduction relation is both confluent and complete with respect to the small-step semantics of the graph rewriting calculus.

The essence of our proposed strategy lies in restricting the application of substitution rules to only those instances where they are necessary to generate new redexes for the basic or matching rules. Notably, substitutions that do not contribute to creating new basic or matching redexes are deliberately avoided. Consequently, this strategy broadens the set of terms that are in normal form.

The application of the strategy "sharingstrat" leads to a valid derivation. Specifically, a cyclic substitution step transforms the pre-redex "x a" into the basic redex "(y b) a," enabling the execution of the first (external sub) rule step in accordance with Definition 3.1(ii) c). Subsequently, the second (external sub) rule step is essential for the creation of the basic redex "(y b) a," thereby aligning with Definition 3.1(ii) b).

In the context where "ctx[]" represents an application, it can take the form "ctx'[] g'" or "ctx'= g' ctx'[]". If "ctx'[x]" is not a free (constrained) variable, we can conclude by the inductive hypothesis that either "ctx[]" equals "g'" or "ctx[]" equals "g'".

This paper is sourced from "Rewrite Strategies in the Rewriting Calculus" authored by H. Cirstea, C. Kirchner, L. Liquori, and B. Wack, and presented at the Third International Workshop on Reduction Strategies in Rewriting and Programming in Valencia, Spain, in June 2003, published in the Electronic Notes in Theoretical Computer Science, edited by Bernhard Gramlich and Salvador Lucas.