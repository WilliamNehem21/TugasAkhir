Total correctness and partial correctness are closely connected, with the main distinction between them being the issue of termination and whether the program will produce a result. However, it is not possible to derive partial correctness from total correctness by simply disregarding the termination question, nor is it feasible to reconstruct total correctness solely from partial correctness. The predicate transformers wlp(a,) and wp(a,) are both positively conjunctive, meaning they distribute across non-empty conjunctions, but only wlp(a,) is universally conjunctive as it maps the empty conjunction, true, to itself. The relationship between the two predicate transformers is expressed by the law of the abstract command language, specifically in the context of the program termed anarchy, which represents non-termination. The concept of non-termination is significant in general correctness and must be faithfully reflected. To accomplish this, it is necessary to use another ordering and define recursions as least fixed-points with respect to this ordering. The egli-milner approximation ordering is typically employed for this purpose. While the use of the egli-milner ordering and fixed-point theory can be avoided by defining abstract command iteration constructively using natural induction, integrating a more comprehensive notion of recursion into the abstract command language would require the use of egli-milner ordering. The frame of an abstract command is the collection of variables on which the command operates. It is considered the set of variables to which the command may assign values. The frame of an abstract command a is denoted by frame(a), and a may make passive reference to variables outside its frame. Unbounded choice, depicted as @z. a, involves an abstract command a and a fresh variable z with respect to the current alphabet. The unbounded choice represents a constrained by a demonic choice of any value for the variable. Termination predicate, trm(a), characterizes the safe termination of the execution of abstract command a. Additionally, several other important characteristic predicates are associated with a, and their names are adopted from corresponding predicates defined for generalized substitutions. Parallel composition, denoted a|| b, involves two abstract commands a and b, and execution proceeds until both have terminated. The composite effect of a and b, if any, is the result. Concert, represented as a#b, involves parallel execution of a and b on disjoint copies of their respective frames, and the overall result is determined by whichever command terminates first. These concepts are utilized to refine a decidable specification into a pair of concurrently executing semi-decidable programs.