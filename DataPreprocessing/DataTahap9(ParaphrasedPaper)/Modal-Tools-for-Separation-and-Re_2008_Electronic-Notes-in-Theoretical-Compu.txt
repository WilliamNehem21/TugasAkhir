The rearrangement condition in imperative programs expresses a preference for certain relational steps, and by separating termination, the termination analysis of a complex loop in a relational system can be reduced to the analysis of simpler loops. Modal logics, commonly used in program verification, have been overlooked in the context of program refinement and termination analysis, but this paper demonstrates their relevance in refinement and termination analysis beyond model checking. The integration of modal algebras into off-the-shelf ATP systems provides powerful formal methods for verifying complex properties and behaviors. While certain operations on relation Kleene algebras capture infinite and terminating behavior properly, they behave anomalously on more general relational structures and on trace, path, and language Kleene algebras, motivating the consideration of terminating and infinite, diverging dynamics in a modal setting.

Semiring modules and Kleene modules are weaker than modal semirings and modal Kleene algebras, and certain properties that hold in the module-based setting do not hold in the semilattice setting. A theorem states that, in the presence of quasicommutation, an infinite loop with two nondeterministically executed actions can be separated into two deterministic infinite loops. An automated proof using the ATP system SPASS for divergence Kleene modules took about two minutes for the left-to-right direction using quasicommutation and about three minutes for the converse direction.

An open question is whether the DBW theorem is a corollary to some loop refinement theorem similar to Theorem 7.1, but no such theorem has been proven yet, and no counterexample has been found. This question merits further investigation.