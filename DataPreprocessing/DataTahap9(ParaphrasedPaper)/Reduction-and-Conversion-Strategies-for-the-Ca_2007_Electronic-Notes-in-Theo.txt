This academic paper discusses the implementation of conversion check risk and the analysis of reduced terms that become larger than expected. It explores strategies to control and minimize the amount of reduction performed. The paper also examines different reduction strategies and their impact on the shape and size of the reduced term in the calculus of (co)inductive constructions (CIC). The goal is to evaluate the independence of these strategies and suggest improved combinations. The paper isolates the strategies from the rewriting rules used by employing a reduction machine parameterized over the reduction strategy and a set of rules for conversion algorithm parameterized over conversion strategies. The paper also presents a different set of conversion rules and assesses the combinations of strategies on these new rules to determine the degree of independence from the rules.

The paper aims to identify strategies that perform well in both common situations and when two-level reasoning is employed. It suggests that better results could potentially be achieved by exploiting different strategies based on the terms being tested for convertibility. The paper describes the basic conversion algorithm and evaluates its performance in combination with various conversion and reduction strategies. Additionally, it introduces conversion strategies and discusses reduction strategies for a parametric reduction machine. The performance evaluation is based on benchmarks conducted using the Matita interactive theorem prover on a subset of the Coq proof assistant library.

The paper proposes an improved convertibility strategy and emphasizes the importance of detecting in advance which of the two terms is more likely to reduce to the other, then reducing it only until a weak head normal form (WHNF) is reached. It compares different convertibility strategies when combined with various reduction strategies. The paper also discusses the parameters of the reduction machine, referred to as strategies, and presents theorems demonstrating the strongly normalizing reduction on well-typed terms.

Furthermore, the paper highlights the effectiveness of strategies over reduction strategies, and the superior performance of call-by-name over call-by-value for certain theorems. It mentions ongoing work on an alternative algorithm and the performance evaluation of the conversion and reduction strategies applied to that algorithm. The paper concludes by suggesting that the relative performance of the strategies for CIC is independent of the choice of the algorithm and the specific rewriting rules employed.

In summary, this paper investigates the performance evaluation of conversion and reduction strategies in CIC and aims to identify strategies that yield optimal results in various scenarios. It emphasizes the importance of evaluating the independence and effectiveness of different strategies and their combinations in the context of conversion and reduction in CIC.