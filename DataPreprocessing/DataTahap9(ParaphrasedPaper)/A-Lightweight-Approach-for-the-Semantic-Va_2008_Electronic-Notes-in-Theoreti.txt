Model-driven software engineering (MDE) advocates for the use of models at various levels of abstraction, with a focus on transforming platform-independent models into platform-specific ones. There has been a significant amount of research in the area of model transformations, including the development of various approaches such as ATL and Tefkat, all based on the QVT standardization initiative. While current research primarily focuses on defining model transformation languages, less attention has been given to systematically validating these transformations. Validation of model transformations may involve ensuring syntactic correctness in relation to their specification language, as well as the syntactic correctness of the models produced by the transformations. However, relatively few proposals address the semantic consistency of model transformations, particularly in terms of preserving the correctness of target models with respect to their source models.

As for the semantic aspect, the definition of refinement in the UML specification is articulated using natural language, which leads to various interpretations. Although MOF and UML languages allow for visual specification of model refinements, they lack formal semantics, making verification processes impractical.

Several alternatives exist to enhance the robustness of MDE refinement mechanisms by leveraging formal theories. One approach involves translating the core language used in MDE, UML/MOF, into a formal language for defining and analyzing properties. Some works notably fall into this category.

To address decidability and tractability issues, the creation of a microworld offers a practical way to integrate model checking and semantic entailment, with the incorporation of testing techniques further improving microworld coverage. The application of testing techniques to model transformations has seen growing interest, with recent work summarizing the challenges related to model transformation testing.