Direct application of the semantics of rewriting logic in the context of non-determinism to the criteria of call-time choice in FLP is not feasible. In a prior study, we initiated the first comprehensive framework for verifying program properties in FLP with non-deterministic functions. This initiative was anchored on CRWL, a well-established semantic framework for FLP. The intention was to translate CRWL into first-order logic (FOL) by representing the CRWL semantics of a program P as a reduction relation {0, s(s(0))}. As such, the double(coin) function is finite and wholly defined. Although denotations, including total denotations, can be infinite (e.g., g(0))t={0, s(0), s(s(0)),...}), indicating infiniteness, they can still be totally defined. Contrarily, the denotation of g(s(0)) is infinite, as confirmed by the equation g(s(0)))=.


Our enhancement appears to be practicable enough to be further developed in several ways. Firstly, it is important to identify effective sufficient conditions that guarantee determinism, possibly drawing on the techniques in [14,3]. Additionally, we are interested in exploring weaker notions of determinism that are still applicable to our objectives, thereby expanding the deterministic part of the program and making proving properties more effective. Finally, we plan to create a series of non-trivial case studies to better evaluate our methods, which was nearly impossible before due to the intricate nature of proofs in previous approaches.