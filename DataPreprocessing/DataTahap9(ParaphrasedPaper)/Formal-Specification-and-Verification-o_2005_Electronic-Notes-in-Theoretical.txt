The complexity of multi-agent systems is increasing, making the verification and validation of these systems more significant. This paper demonstrates how the model checking technique, a well-established and effective verification technique, can be extended to address the complexities of multi-agent systems. The specific focus is on a type of multi-agent system where each agent is characterized by its beliefs, desires, and intentions. To address this, a multi-modal branching-time logic called BDICTL is utilized, with a semantics grounded in traditional decision theory and a possible-worlds framework. The paper also introduces a preliminary implementation of the approach, which has displayed promising results.

In order to characterize the belief, desire, and intention components of the system, a propositional form based on possible worlds is employed. This approach involves depicting possible worlds as a tree structure, with each possible world containing a set of belief-accessible worlds, desire-accessible worlds, and intention-accessible worlds associated with a particular situation. The challenge of extending standard temporal logic model checking techniques to accommodate the multi-agent aspects of the logic lies in the specification of the possible worlds and their relationships. The paper introduces an approach aimed at reducing the specification time, based on the automatic synthesis of the mental attitudes of agents. This involves creating a new world for each mental state, using the specifications of the different agents. A sub-language for specifying multi-agent systems is designed, and a tool is developed for constructing the state space of each agent in the multi-agent system. An algorithm for synthesizing the agent models of the specified multi-agent system is then presented, ultimately resulting in a possible worlds model that can be analyzed using standard model checking.

The structure of the paper includes a description of the multi-agent temporal logic BDICTL in Section 2, the presentation of a specification sub-language and its underlying intuitions, and the definition of the language and semantics as a temporal logic in Section 3, the algorithm for synthesizing the corresponding multi-agent structures in Section 4, the presentation of the extended general algorithm for model checking in Section 5, and the discussion of results, future work, and conclusions in Section 6.

The paper also extends the branching-time logic CTL to represent the mental state of an agent, allowing for reasoning about agents and their beliefs, desires, and actions. The syntax and semantics of BDICTL are detailed, illustrating how formulas are evaluated with respect to a world and a state in a Kripke structure. An example scenario involving two agents is provided to clarify the syntax and demonstrate the utilization of BDICTL for reasoning about agents and their interactions.

In summary, the paper introduces a new approach to the verification of multi-agent systems, utilizing possible worlds to describe the system, modal temporal logic to specify properties, and a decision procedure based on model checking. The main contributions include the presentation of an imperative multi-agent programming language and a formal semantics for this language in terms of BDICTL logic, as well as the synthesis of state spaces using the agents' mental attitudes to generate possible worlds structures, which can be leveraged for verification.