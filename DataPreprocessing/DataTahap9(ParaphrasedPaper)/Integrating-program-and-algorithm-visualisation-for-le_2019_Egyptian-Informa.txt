In order to enhance student retention in computing education, educational technologies are frequently utilized to facilitate students' learning of specific topics. These technologies commonly feature automated visualization, which employs intuitive graphics and animation to explain particular concepts. Program visualization (PV) and algorithm visualization (AV) tools are often employed for this purpose. PV tools predominantly focus on visualizing program execution, whereas AV tools are used to illustrate the behavior and characteristics of algorithms.

Educational tools in the field of computing often aim to explain programs, algorithms, and data structures using visualization. These tools can be categorized into three main types: program visualization, algorithm visualization, and others. This section provides an overview of educational tools within each of these categories, and also discusses PITON, an educational tool that serves as the foundation for the proposed tool.

In addition to traditional topics, some AV tools cover domain-specific algorithms and data structures. For example, certain tools address algorithms related to network optimization problems, the SHA-512 algorithm, and matrix multiplication algorithms.

As the number of AV tools has grown, a digital repository called ALGOVIZ has been proposed to serve as a platform for AV creators and users to interact. This platform allows users to provide feedback on the efficacy of AV tools.

To assist learners who may find programming challenging, visual programming (VP) tools have been introduced as an alternative to program visualization tools. These tools act as intermediary platforms between learners and their code, simplifying technical details and enabling learners to focus on the algorithmic aspects of programming. Examples of VP tools include Greenfoot, Alice, Scratch, Raptor, and SFC Editor.

Some educational tools are designed to elucidate algorithm characteristics. For instance, tools such as Complexitor, JCEL, and Greedex are aimed at teaching algorithm time complexity and the characteristics of greedy algorithms.

A new tool called DS-PITON has been proposed, which integrates PV and AV tools and focuses on visualizing seven specific data structures in Python. This tool builds upon PITON and addresses feedback categories related to pop-up windows, data structure display, and visualization technical details.

Unsupervised learning, which occurs without the presence of a lecturer or tutor, is common in online courses and assessments related to data structure implementation. Accessible e-learning platforms and detailed tutorials are critical to facilitating the effective use of educational tools for unsupervised learning.

An experiment was conducted to assess the effectiveness of using DS-PITON for learning data structure implementation compared to traditional textbook-based learning. The results indicated that DS-PITON led to improvements in assessment scores and completion times for both moderate-paced and slow-paced students.

Furthermore, quasi-experiments were conducted to evaluate the impact of DS-PITON on slow-paced students, with a focus on specific data structure topics and modified assessment parameters to accommodate these students.

Open-ended questions were used to gather feedback on DS-PITON, including suggestions for optimizing the tool to accommodate limited laboratory computer specifications and integrating DS-PITON with the data structure textbook.

In conclusion, the integration of PV and AV tools in the form of DS-PITON aims to enhance understanding of data structure implementation among learners. The evaluation of DS-PITON revealed improvements in assessment scores and completion times for students, as well as positive feedback from learners regarding their understanding of data structure materials.