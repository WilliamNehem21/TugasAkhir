Graphs and graph transformations play a central role in most visual languages. They offer a natural way to represent the structure of a system, highlighting its subcomponents and their logical or physical interconnections. Events within the system, responsible for transitioning from one state to another, can be represented as the application of transformation rules. This representation not only enables formal analysis of the system, but also allows for intuitive visual understanding, even by those without expertise in the subject.

Limited attention has been given to the extension of graph transformation systems (GTSs) to accommodate the specification of transactional activities. In abstract terms, a transaction is an activity that involves executing a group of events, leading the system to either a successful state or a failure. In the latter case, the partially executed transaction is discarded and has no effect on the system. In practical implementations, this is achieved using a roll-back mechanism to restore the initial state upon detecting a failure.

Originally designed for Directed(multi-)graphs Path Object rewriting (DPO rewriting), the approach could be adapted for use in other graph rewriting methods, such as the single-pushout approach, and for different graph notions, such as hypergraphs (as demonstrated in section 4 of the example).