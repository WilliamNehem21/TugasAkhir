The concept of lazy rewriting is a form of restriction on term rewriting that involves delaying the reduction of certain arguments of functions in order to achieve termination. In contrast to context-sensitive rewriting, lazy rewriting does not completely prohibit reductions at such argument positions, but rather postpones them. However, existing methods for proving termination of lazy rewrite systems have been found to be flawed. In this paper, we propose a modified approach to transform lazy rewrite systems into context-sensitive ones, which is sound and comprehensive in ensuring termination. Our initial experimental results with this transformation technique are promising.

Lazy rewriting in functional programming languages resembles the lazy evaluation strategy, where the evaluation of subexpressions is deferred until their results are explicitly required. This similarity suggests the potential of lazy rewriting for developing new methods to prove termination of functional programs. Notably, both lazy rewriting and lazy evaluation involve delaying certain evaluation steps, particularly in terms of function arguments.

Our transformation enables the reduction of the termination analysis problem for lazy TRSs to that of context-sensitive TRSs, which has already been extensively researched. This novel transformation allows for the exploration of lazy rewriting in the context of termination analysis for functional programs. Unlike graph rewriting, we specifically focus on term rewriting for the termination analysis of functional programs due to its generality and the more advanced development of its theory.

The paper first introduces the basic definitions and notations of lazy rewriting, followed by the presentation of the transformation and a demonstration of its soundness and completeness with respect to termination. We also discuss the proposed approach and provide preliminary experimental results. Furthermore, our transformation results show that lazy termination analysis may be feasible in practical cases and could benefit from ongoing research in the field of context-sensitive termination.