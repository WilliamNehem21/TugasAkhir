In contrast to alternative methods, we handle stochastic delays using a syntactic approach and separate the synthesis procedure from guaranteeing optimality. We focus on Markovian (exponentially-distributed) delays in the plant and exploit the memoryless property to facilitate a compositional treatment. This approach allows us to address industrial systems by utilizing the advanced tools Supremica for efficient supervisor synthesis and MRMC for performance assessment through stochastic model checking. The syntactic treatment of Markovian delays is facilitated by the similar interleaving behavior between uniquely-named uncontrollable events and Markovian delays. Therefore, by replacing Markovian delays with uncontrollable events in the plant and ensuring label uniqueness, we can perform supervisor synthesis on the modified plant.

We represent stochastic behavior using Markovian delays introduced orthogonally in the extended finite automata, akin to interactive Markov chains. In this stochastic extension, Markovian delays are simply interleaved within the parallel composition, maintaining the stochastic behavior of synchronization. By treating Markovian delays as uniquely-named (uncontrollable) delays, we preserve their interleaving behavior while extending controllability appropriately. This ensures that the transformation does not alter the stochastic behavior of the supervised plant.

We rename the (discrete-event) plant with Markovian delays to uncontrollable events, couple it with the supervisor, and export the renamed plant from Supremica. This exported file is then parsed and converted into a Markov chain using the Supremica2MRMC tool. The transformation is extended to accommodate state labels and data assignments.

We approach the control problem of coordinating vehicle movements to complete specified recipes without causing damage or spillage. We focus on high-level supervisory coordination of vehicle movements to execute a set of given recipes in a specified order without conflicts, considering the vehicles' embedded control for safe acceleration/deceleration, collision avoidance, and docking.

Generators, exits, and waiting stations serve as conceptual constructs to aid in reasoning about the system. Generators and exits are realized as storage stations in the hardware, while waiting stations function as parking spaces for the vehicles. We visually represent extended finite automata, with state labels adjacent to the states and event labels possibly accompanied by guards and variable updates below them. Uncontrollable events denoting stochastic delays are labeled stoc for clarification. Due to presentation constraints, we only discuss key aspects of the model, and the complete model and tools are available from [9, 24].