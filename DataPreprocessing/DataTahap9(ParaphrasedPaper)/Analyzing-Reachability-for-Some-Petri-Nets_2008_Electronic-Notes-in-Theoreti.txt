Proof. Since Lemma 3.9 establishes the existence of a non-deterministic polynomial space (pspace) algorithm for the problem under consideration, we can apply the well-known theorem of Savitch to infer the existence of a deterministic algorithm capable of solving the problem within pspace.

Next, we aim to demonstrate that the reachability problem in petri nets with s-variants is pspace-hard. Cheng, Esparza, and Palsberg presented a reduction from the quantified boolean formula satisfiability problem (qbf-sat) to the reachability problem in 1-safe nets, which we will employ for the same purpose and establish that the resulting net has s-variants, thus providing the requisite proof of hardness.

To provide an intuitive understanding, let's consider a net NG that begins with one token in G in, indicating the initiation of the testing of G. A token in X is T (or X is F) signifies that variable X is assigned true (or false). Upon the completion of the testing of G (utilizing numerous other places and transitions not explicitly mentioned here), NG places a token in G T (or G F) to indicate that G is true (or false). For further details, please refer to the original paper. The subsequent result illustrates that NG has s-variants.

To validate this, we first examine whether each transition is progressive. This can be achieved by formulating a linear programming problem to verify if a transition is part of a semi-positive T-invariant and then performing a feasibility test with rational data. With n transitions, n such tests need to be conducted. Subsequently, we verify if removing progressive transitions results in a structurally bounded condition, which can be reduced to checking the feasibility of a linear programming problem with rational data. Evidently, all the aforementioned operations can be completed in polynomial time.

Let V0 trigger to acquire a token in Q0. Transition T0 is then able to fire n times to position 2n tokens in P0. Subsequently, W0 is triggered once to allocate a token in S0, U0 is triggered 2n times to position 2n tokens in C0, and X0 is triggered once to allocate a token in E0. Thereby, N0 commences with one token in B0 and concludes with one token in E0, simultaneously doubling the number of tokens in C0.

In order to establish that Ni is partially bounded, we must substantiate that the number of non-progressive transition firings is bounded by a function of the number of progressive transition firings and input size. In the ensuing explanation, the set of places {P0, C0, ..., Ci} plays a pivotal role. For ease of notation, let Ci denote the set {P0, C0, ..., Ci} and every firing of V0, W0, or X0 necessitates the addition of one token to B0. Only transitions X1 and R1 can augment tokens in B0. Each firing of X1 or R1 necessitates the addition of one token to D1. According to Proposition B.5, T1 can fire at most (nl + k)i times. Consequently, V0, W0, and X0 can fire at most (nl + k)i times.