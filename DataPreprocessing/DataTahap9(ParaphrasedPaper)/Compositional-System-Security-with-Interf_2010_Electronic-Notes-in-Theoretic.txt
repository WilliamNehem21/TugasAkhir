This paper introduces a formal framework for reasoning about the security of systems in a compositional manner. It emphasizes the importance of considering trusted systems in terms of the interfaces exposed by their components, allowing for the construction of larger trusted components by combining interface calls in known ways. The paper extends rely-guarantee reasoning for system correctness to accommodate an adversary with an unknown program, and presents an expressive concurrent programming language with recursive functions for modeling interfaces.

The paper addresses the challenge of achieving end-to-end security in composed systems, where even if individual components are secure in isolation, complex interactions between them may lead to vulnerabilities. It discusses related work on logic-based and language-based approaches to compositional security and highlights the novelty of its approach in using interface-level abstractions to modularly build trusted systems and model adversaries with different capabilities.

The paper also presents a logic of programs for specifying and reasoning about security properties, and describes a proof system that codifies compositional reasoning principles for establishing assertions about programs and security properties. The authors plan to extend this work to cover higher-order constructs and to apply the framework to web security.