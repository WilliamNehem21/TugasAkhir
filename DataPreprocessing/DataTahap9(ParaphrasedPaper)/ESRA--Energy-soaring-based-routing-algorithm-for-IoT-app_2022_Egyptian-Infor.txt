The emergence of software-defined wireless sensor networking as a critical architecture for the internet of things has led to the development of energy-efficient routing algorithms to enhance network lifetime. However, many of these algorithms suffer from a lack of network stability and reliability in the presence of dead nodes. To address this issue, the paper introduces the Energy Soaring-based Routing Algorithm (ESRA) for IoT applications in software-defined wireless sensor networks, particularly for environmental monitoring. ESRA efficiently selects network cluster heads to improve network reliability, stability, and lifetime by solving the controller placement problem. The selection of controllers is formulated as an NP-hard problem, considering factors such as residual energy, spatial distance to the sink, and load/density. To tackle this problem, the paper adopts a genetic algorithm to optimize network performance in the presence of dead nodes, demonstrating superior results compared to existing state-of-the-art algorithms.

In a simulation analysis, the ESRA algorithm exhibits significant performance improvements over existing energy-aware algorithms in terms of network lifetime, throughput, energy savings, and delay under various percentages of dead nodes. Furthermore, the proposed scheme is applied to real networks from the Internet Topology Zoo, showing promising results compared to other existing works.

The paper also discusses related work, including algorithms proposed by Killi and Rao, Qureshi et al., Luo et al., Cui et al., and others, highlighting their respective approaches and limitations. Moreover, the paper explores the concept of dynamic soaring flying techniques inspired by the albatross bird, which has influenced the development of energy-efficient wind-propelled drones and gliders for remote region monitoring under various wind conditions.

Overall, the ESRA algorithm demonstrates superior performance compared to existing algorithms such as YSGA, GCEEC, and EEFCA, particularly in addressing load distribution issues, leading to improvements in network throughput.