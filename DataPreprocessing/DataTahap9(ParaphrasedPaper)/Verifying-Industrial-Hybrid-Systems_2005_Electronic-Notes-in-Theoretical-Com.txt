This paper introduces a method for verifying linear hybrid automata using a formal verification approach for bounded reachability. The technique involves encoding a bounded reachability problem into a mathsat problem, which checks the satisfiability of a boolean combination of propositional variables and mathematical constraints over real variables. The authors propose using the mathsat solver to efficiently verify the existence or absence of paths of bounded length. The research has been sponsored by the Calculemus! IHP-RTN EC project and ESACS, and partly supported by a grant from Intel Corporation.

The proposed technique is limited to linear dynamics and may not provide complete solutions. Despite these limitations, it has been demonstrated to be competitive with existing verification tools such as HyTech, especially for real-world applications. The authors have also evaluated the approach by applying it to an example of a hybrid system of industrial relevance. They have demonstrated how the method can be used for model debugging and simulation of hybrid systems, and have compared it with the HyTech tool.

In the future, the authors plan to conduct a more comprehensive experimental evaluation, including comparisons with other tools and additional case studies. They also intend to optimize the mathsat solver for specific problems and experiment with different encodings. Furthermore, they aim to bridge the gap between their approach and existing techniques by exploring more complex models and levels of abstraction.

The paper cites related work on bounded model checking for timed systems and discusses the limitations of the approach, particularly pertaining to the undecidability of the analyzed class and the constraints on the linearity of real variables dynamics. The authors believe that their approach allows for the modeling and analysis of practical systems that current tools like HyTech are unable to handle.

The authors suggest future research directions, including optimizing the mathsat solver for specific problems, experimenting with different encodings, and expanding the set of case studies and tools for comparison. They also plan to explore more complex models and levels of abstraction for practical applications.