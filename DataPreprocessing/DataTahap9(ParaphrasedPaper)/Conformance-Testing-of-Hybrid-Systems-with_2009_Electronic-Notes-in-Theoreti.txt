This paper emphasizes a focus on test execution and conformance checking rather than test case generation. The test case generation aspect is addressed elsewhere [4,3,5]. A case study is presented to demonstrate the applicability of the proposed approach, showcasing the detection of mutants of a Simulink model using automatically generated test cases.

The paper is structured as follows: Section 2 provides a running example of a hybrid system to motivate the research. Section 3 introduces qualitative reasoning and the corresponding qualitative models. In Section 4, the conformance relation between qualitative models and hybrid implementations is formalized. Section 5 discusses the test case generation and execution technique, including the mapping between abstract and concrete domains. Section 6 presents experiments from the case study. Finally, in Section 8, the authors discuss the implications of their work, draw conclusions, and outline directions for future research.

When modeling systems using qualitative reasoning (QR), the continuous domain of a system's real-valued variables is abstracted to the domain of points and intervals. The paper mentions the tool Garp3 to support the building and inspection of QR models, which are founded on qualitative process theory. The paper also addresses the conformance relation between QR models and the controllability of test cases.

The paper discusses the requirements for test case controllability, including the use of adaptive input selection. It also addresses the challenges of offline test case generation, such as state space explosion, and proposes techniques to mitigate these challenges.

The approach also allows for specifications to be approximations rather than abstractions, and it discusses the behavior traces of a QR transition system and the associated input-output coupling. The paper also outlines the nature of test cases as transition systems with potential loops, and the possible verdicts of test case execution.

The paper mentions the use of the tool Reactis for test generation for Simulink models and addresses the selection of test cases for hybrid systems. It also presents a specific example where the proposed approach was successfully applied to detect faults in the implementation of a small example.

In summary, this paper presents an approach to model and simulate the behavior of continuous variables of hybrid systems using qualitative reasoning techniques. It demonstrates the effectiveness of the approach in testing hybrid systems and highlights its potential to detect faults in system implementations.