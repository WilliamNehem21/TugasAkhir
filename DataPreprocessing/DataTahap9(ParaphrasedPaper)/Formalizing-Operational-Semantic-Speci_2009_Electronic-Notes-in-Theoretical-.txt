This academic paper explores the connections between three logic formalisms and three approaches to specifying operational semantics. It demonstrates the relationships between specifications written with small-step and big-step structural operational semantics (SOS), abstract machines, and multiset rewriting, and horn clauses, binary clauses, and a subset of linear logic, respectively. The paper illustrates how binary clauses act as a bridge between the other two logical formalisms. For example, by using a continuation-passing style transformation, horn clauses can be converted into binary clauses. Furthermore, binary clauses can be viewed as a simplified form of multiset rewriting. Placing binary clauses within linear logic allows for rich forms of multiset rewriting, which in turn enables modular, big-step SOS specifications of imperative and concurrency primitives. The paper emphasizes the advantages of establishing these connections between logic and operational semantics.

The paper also suggests that denotational semantic specifications bear a resemblance to functional programs, and it proposes viewing operational semantic specifications as logic programs to take advantage of the benefits of this perspective.

Additionally, the paper discusses the use of small-step and big-step SOS in the context of specifying concurrency and functional programming, respectively, and explains how horn clauses provide a declarative framework for encoding such rules.

Furthermore, the paper outlines a method for encoding programming languages by mapping syntactic expressions into logic-level terms and choosing a logic with sufficient typing to directly encode syntactic types. It introduces principles to guide the encoding process and highlights the importance of binary clauses in modeling computation and specifying operational semantics.

The paper also addresses the use of additive linear logic connectives, particularly & and ‚ä§, in the specification of polling, discussing how polling events are synchronized and the analysis of polling in process calculus.