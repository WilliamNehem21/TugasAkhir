As the new millennium approached, the field of software agent research had grown to be one of the most active areas of research and development in computing. The potential of agents to solve problems through cooperation and negotiation, similar to humans, led to the expectation that they could automate tasks currently performed by humans. Effective communication among different agents is crucial, and researchers have identified the key characteristics that enable effective communication, including a shared infrastructure for message passing, a common ontology, and a common agent communication language. Agent UML, an extension of UML, applies the principles of UML to the design of agent-oriented systems and is a natural choice for representing interaction protocols. It shares the benefits of existing UML notations and simplifies the understanding for agent designers.

In the context of conventional software engineering, UML provides an abstract overview of how a system would work and acts as a useful reference for programmers. However, the exact details of system implementation are intentionally left out to maintain clarity and simplicity. The propositional statechart formalism is based on David Harel's statecharts and aims to provide unambiguous representations of interaction protocols. It builds on the benefits of statecharts and introduces modifications to simplify the definition of statecharts and introduce intuitive yet restrictive labeling conventions.

When using a statechart to represent an interaction protocol, each state of the interaction can be considered as a combination of the states of each agent involved. However, representing each sub-protocol using a separate statechart is preferable over using orthogonality, as agents themselves are not subsystems, leading to conceptual challenges in combining their states. A well-designed state labeling system ensures unambiguous reference to each state in the statechart.

The introduction of activity diagrams to provide a dual hierarchy for information flow through processing activities has not been widely adopted. Instead, a more complex interaction is expressed as the composition of primitive actions by agents. The language used for expressing events in protocols is derived from ANML, allowing the extraction of a formal theory in dynamic logic from the interaction statechart.