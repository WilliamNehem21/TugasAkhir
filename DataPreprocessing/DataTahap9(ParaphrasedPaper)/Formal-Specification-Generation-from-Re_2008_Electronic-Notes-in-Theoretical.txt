The paper introduces a method for automatically translating use cases, written in a controlled natural language, into specifications in the CSP process algebra, focusing on the domain relevant to the research cooperation between CIn-UFPE and Motorola called CInBTcrd. This controlled natural language (CNL) is a subset of English with fixed grammar rules to allow for mechanized translation into CSP. The formal models generated in CSP are utilized as input by other tools in the project for generating test cases in Java and CNL.

Unlike previous approaches that focus on translation at a single level, the proposed strategy considers different levels of abstraction in use case views, illustrated through user and component views. The refinement relation between these views is explored, utilizing the semantic models and refinement notions in CSP to capture formal relationships. The approach is supported by tools, including a Microsoft Word 2003 plug-in for adherence checking, a tool for automating use case translation into CSP, and the FDR model checker for checking refinement.

The CNL is used to write imperative and declarative sentences to describe actor actions and system characteristics, respectively. The CNL restricts vocabulary and enforces grammatical rules defined through knowledge bases for ensuring high-quality documentation and preventing ambiguous sentences.

The mapping from abstract to concrete models establishes the relation between user and component use cases and is used to prove refinement between the two. Different types of execution flows and system states are specified in the use cases based on the system's response to user actions.

The paper details the use of case frames to define the relationship between verbs, terms, and modifiers, as well as the CNL validation tools and natural language processing unit for enforcing CNL rules. The CSP process algebra is described as the target formalism, allowing the description of systems in terms of independent processes interacting through message-passing communication.

A tool has been developed to mechanize the translation of user and component views into CSP models by reading use cases and generating the corresponding models. The strategy of modeling systems at different levels of abstraction ensures consistency between the architectural views and can be generalized for an arbitrary number of views.

The paper also discusses the use of the user view models for generating test cases in the CInBTcrd research project and the proposed component view model for generating UML diagrams. The model refinement strategy and use case validation approach can be used to automate test case execution, potentially enabling the execution of test cases generated from the model and facilitating code generation.

Overall, the paper presents a comprehensive approach for translating use cases into CSP specifications and demonstrates the potential for automating test case generation and execution.