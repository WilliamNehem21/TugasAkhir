Hybrid systems (HS) have been established as a valid formalism for studying and analyzing specific issues in various fields. However, most of the analysis techniques for HS rely on low-level descriptions that require the modeler to define and enumerate single states of the systems. While some high-level modeling formalisms, such as fluid stochastic Petri nets, have been introduced to address these difficulties, there is a need for simple procedures that enable the definition of domain-specific languages for HS in order to simplify their analysis.

This paper introduces a stochastic HS language, which is a subset of piecewise deterministic Markov processes, and demonstrates how a compositional, metamodeling-based framework such as Simthesys can be utilized to convert a wide range of high-level HS description languages into this paradigm. An example illustrating the application of this technique to solve a model of energy consumption in a data center, specified using queuing networks and hybrid Petri nets, is presented to showcase the effectiveness of the proposed approach.

The paper also provides a survey summarizing the main issues in the first three decades of HS studies, offering a comprehensive introduction to the field with conceptual definitions and examples. Additionally, it provides a control systems-oriented perspective on the field and includes a wide bibliography. Non-expert readers can find a good introduction in the survey. Furthermore, a list of software solutions offering tools to study HS, including Ptolemy, HyTech, UPPAAL, and PRISM, is presented as a conceptual benchmark for shaping the approach.

The paper expands on a preliminary approach to modeling HS in Simthesys that was previously given to add rejuvenation to Petri net or timed fluid continuous queueing network models. This limitation allowed such models to be solved by first translating them into labeled transition systems and then using an external solver to handle the related continuous part. The approach proposed in this paper significantly extends these results by allowing the representation of a more general class of hybrid systems.

The paper also explains the basic elements of a formalism, which define the atomic primitives describing a model. These elements are used to define submodels and can contain other elements, and are characterized by properties and behaviors. Interfaces are also discussed, which provide the capability to share common sets of behaviors used by different elements. The paper introduces the idea of formalism families, which are sets of formalisms that can be handled by the same solving engines and share similarities that allow for the automatic generation of multiformalism behavior.

Finally, the paper explains how the existing efforts and finances (EEFs) formalism can be extended to support hybrid systems, resulting in a new formalism family known as the hybrid formalism family (HFF). This new family must account for the fact that states are composed of discrete and continuous parts, and must consider the interaction between the two parts and the dependence of event occurrence rates on the continuous part of the state. Additionally, it must address the deterministic or stochastic alteration of continuous variables when the system changes its discrete state.