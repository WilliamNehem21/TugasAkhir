The detection of code injection attacks is a critical aspect of cyber security, and traditional signature-based methods have limitations that can be overcome with the use of machine learning techniques. While surveys of machine learning approaches for intrusion detection have been conducted, there is a need for more specific analysis of techniques for code injection attack detection, particularly with a focus on deep learning. Our survey aims to address this gap by analyzing and categorizing existing machine learning techniques for the detection of code injection attacks, with a special emphasis on deep learning.

Our analysis indicates that the preprocessing of input data significantly impacts the performance and detection rate of attacks. We have identified various machine learning methods and preprocessing stages used for code injection attack detection, and found that the choice of preprocessing techniques has a substantial effect on the overall performance. For example, the removal of duplicate data can mitigate bias in the neural model.

We have observed that the majority of methods for code injection attack detection are supervised, with a significant portion employing deep learning methods such as Convolutional Neural Networks (CNNs). Deep learning methods are found to be versatile and effective in analyzing different types of data, including time-spread malicious behavior. Additionally, Support Vector Machines (SVMs) have been applied by some researchers for code injection detection.

Reinforcement learning, which is a reward-based semi-supervised learning approach, has recently started to show potential for network intrusion detection, but its application to code injection detection is still limited.

Data preprocessing is a critical step in the machine learning process, as it shapes the data for training neural networks and can impact the accuracy of the applied methods. Techniques for data preprocessing include cleaning, reducing, reshaping, and encoding the data, and their proper selection is essential for the success of intrusion detection systems.

In the context of code injection attacks, the generation of new datasets and the use of generative adversarial networks (GANs) for sample generation have shown promising results. However, it is important to be aware of potential adversarial inputs that can subvert the predictions of machine learning models.

The preprocessing of data involves various methods such as normalizing and cleaning the data, filtering out noise, and extracting features. This process significantly influences and affects the performance of machine learning techniques employed for code injection attack detection.

There is also a need for careful selection and extraction of features, which can be achieved through manual methods or automated feature selection techniques. Additionally, the visualization and augmentation of network data can be used to improve detection rates.

The process of data preprocessing is crucial for the success of machine learning techniques in detecting code injection attacks, and a systematic classification of various preprocessing stages will contribute to the harmonization of approaches and improve the accuracy and performance of intrusion detection systems.