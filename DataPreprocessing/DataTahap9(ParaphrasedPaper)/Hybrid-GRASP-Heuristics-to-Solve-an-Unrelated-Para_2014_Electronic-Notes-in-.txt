Production scheduling is a critical decision-making process at the operational level and is essential in both manufacturing and service industries. Scheduling problems involve allocating available resources to jobs over specific time periods, with the objective of optimizing one or more criteria. These problems have been extensively explored in the literature and generally encompass parallel machine scheduling (PMS) problems.

PMS problems typically involve a set of jobs that need to be processed by a group of parallel machines, with the aim of scheduling each job (assigning it to one of the machines) to minimize one or more criteria. When the processing time of each job is identical across all machines, the problem is referred to as an identical PMS problem. Among these problems, a commonly studied optimization criterion is the minimization of the maximum completion time (makespan) of the schedule. It has been demonstrated that minimizing the makespan on two identical machines is a NP-hard problem.

Furthermore, there are two other types of PMS problems: uniform and unrelated PMS. Unrelated parallel machines operate similarly but possess different capabilities, leading to job processing times that vary depending on the assigned machine. This presents a more realistic and generalized scenario compared to the uniform and identical machines cases.

While identical PMS problems have been well-investigated, unrelated parallel machines scheduling (UPMS) problems have received less attention in the literature. Nevertheless, research has proposed exact and approximation algorithms for makespan minimization for UPMS problems. Additionally, other performance criteria such as total weighted completion times and total weighted tardiness minimization have also been considered.

To address these challenges, various heuristics and metaheuristic algorithms, including Variable Neighborhood Search (VNS), Greedy Randomized Adaptive Search Procedure (GRASP), and Iterated Local Search (ILS), have been applied to minimize the makespan and total tardiness for UPMS problems. These algorithms, along with the Path Relinking (PR) technique, have been instrumental in exploring the solution space and improving the quality of solutions.

Computational experiments were conducted to evaluate the efficiency of these algorithms. The performance of three developed heuristics—Basic GRASP, GRASP with Path Relinking, and GRASP with ILS and Path Relinking—was analyzed using small, medium, and large instances. These heuristics were implemented using the Java programming language and run on a specific hardware setup to assess their computational efficiency.

Overall, the research contributes to advancing the understanding of scheduling problems and offers insights into the effectiveness of various heuristic and metaheuristic algorithms in addressing UPMS problems. The experimental results provide valuable insights into the performance and computational efficiency of these algorithms in practice.