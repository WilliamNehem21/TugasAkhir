The paper introduces a typed lambda-calculus that includes only alternating sum and product types instead of function types, representing strategies with closed terms. The addition of nondeterminism allows for the consideration of strategies up to lower bisimilarity. The paper explores the question of whether a function on strategies can be defined by an open term with sufficient nondeterminism.

In section 2, a calculus for programs that manipulate strategies is defined, allowing for a precise formulation of the definability problem. Section 3 presents a result on operational semantics, referred to as the syntactic exploration theorem, and uses it to derive a condition on functions that solves the definability problem. In section 4, the calculus is modified to be affine, similar to a previous work, and the results are adapted accordingly. Finally, in section 5, potential future research directions are discussed.