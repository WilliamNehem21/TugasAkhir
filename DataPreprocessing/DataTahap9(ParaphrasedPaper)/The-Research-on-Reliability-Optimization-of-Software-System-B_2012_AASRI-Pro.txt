The study aimed to address the challenges of low efficiency and slow convergence speed in finding the global optimum during the reliability optimization of software systems. This was achieved by utilizing a niche genetic algorithm, along with successful solution of multi-variable and multi-constraint linear programming problems. Additionally, the genetic algorithm's search performance was enhanced through the incorporation of a stochastic tournament model, uniform schema crossover operator, and non-uniform mutation. The simulation results demonstrated the niche genetic algorithm's effectiveness in resolving reliability allocation for complex multi-module software systems, leading to improved computing speed and solution quality.

The reliability allocation problem of software systems, also known as software reliability allocation problem, involves determining the optimal reliability allocation scheme under resource constraints to maximize the system's reliability. Due to the presence of numerous local extreme points, accurately identifying the global optimal solution is challenging. While intelligent optimization algorithms have been successful in solving combinatorial optimization problems, research on applying niche genetic algorithms to software system reliability allocation problems remains limited.

The reliability target of a software system with n modules and m operations is represented in the formula, presenting a combinatorial optimization problem with a linear function and multiple constraints. As a result, the niche genetic algorithm was employed to address this engineering problem.

The niche genetic algorithm, inspired by biological niche genetics, aims to establish and maintain diverse sub-populations for parallel searching within the solution space. This approach is commonly utilized for solving multimodal functions, multi-objective optimization, and simulating complex systems. By maintaining a group of individuals and performing repeated selection, crossover, and mutation, the algorithm mimics the evolutionary principle of biological fitness, leading to the identification of the global optimal solution.

An algorithm's encoding method plays a crucial role in determining the design of crossover and mutation operators, as well as the convergence speed. Implementing a real-coded genetic algorithm enables the direct representation of continuous parameter optimization problems without binary encoding and decoding, significantly enhancing efficiency.

In this study, a stochastic tournament model was employed for individual selection, with the fittest individuals advancing to the next generation based on competition. Additionally, the uniform schema crossover operator introduced random templates prior to the crossover operation, enhancing variation and random mutation probability compared to traditional genetic algorithms. This results in more effective search space coverage and improved local search capability.

Mutation operations improve the local search ability of genetic algorithms, maintaining diversity and preventing premature convergence. The study utilized a non-uniform mutation, involving random perturbations of the original genetic value to introduce slight changes in the solution space with each mutation operation.

The application of niche genetic algorithm successfully solved linear programming problems with multiple variables and constraints in multi-module software systems, while also enhancing the search capability of genetic algorithms through the integration of a stochastic tournament model, uniform schema crossover operator, and non-uniform mutation. The simulation results confirmed the efficiency and effectiveness of the niche genetic algorithm in addressing reliability allocation problems for complex multi-module software systems. Future research will focus on improving encoding, genetic operators, and selection strategies, indicating the importance of further exploration of software system reliability optimization problems based on genetic algorithm.