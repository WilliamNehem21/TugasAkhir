In this section, we examine various computer arithmetic methods and outline strategies for synthesizing expressions that can be efficiently evaluated for each of them. We commence by addressing integer arithmetic, which is the most basic form of arithmetic. Subsequently, we delve into floating-point and fixed-point arithmetic, and conclude this section by exploring interval arithmetic.

The IEEE754 standard defines floating-point arithmetic, which is utilized to represent real numbers. However, as these representations are finite, roundoff errors occur during computations, leading to approximations that may significantly distort the evaluation results. A floating-point number x is defined as follows:

Moving forward, we aim to extend our approach to cover more complex pieces of code beyond simple arithmetic expressions. For instance, F. Logozzo and T. Ball have conducted research on binary relations between integer expressions. Additionally, our objective is to adapt control structures such as conditionals and loops in a more general sense.