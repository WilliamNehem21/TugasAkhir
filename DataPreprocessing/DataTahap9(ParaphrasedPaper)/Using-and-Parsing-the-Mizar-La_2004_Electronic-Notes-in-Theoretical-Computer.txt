Mizar has been recognized as a successful formal mathematics system. The paper aims to assess the acceptance of formal mathematics by mathematicians through the study of the Mizar language. Specifically, the paper examines various features of the Mizar language by attempting to construct a grammar for it to parse its library. The analysis points out unresolved issues with the language that may have hindered its adoption by mathematicians.

Mathematical Knowledge Management (MKM) is concerned with making mathematics widely accessible to diverse users in various settings. To establish a comprehensive, globally relevant repository of mathematics, it is essential to be able to translate between the different forms of language used in mathematics, such as words, symbols, and conventions. Additionally, there is a need to address the conversion of existing mathematics into a robust international form.

The growth of MKM repositories requires that mathematicians can contribute directly to such repositories. This necessitates the ability for mathematicians to produce, or at least easily reproduce, their own mathematics in a formal language.

The paper also discusses Wiedijk's compilation of formal proofs developed on major formal systems, which enabled a comparison of these systems based on various factors. It acknowledges that these systems exhibit diverse strengths and weaknesses.

Moreover, the paper notes practical features of Mizar that make it attractive for study, such as the availability of multiple versions for different platforms and the user-friendly installation and integration process. However, it also highlights the potential challenges for individuals learning Mizar without guidance from experienced users.

To objectively analyze the Mizar language, the paper constructs a grammar based on the description provided on the Mizar website and uses JavaCC, a top-down compiler compiler, as the parsing environment. It highlights the complexity of the Mizar language and compares it to the Java language, emphasizing that the difficulty of a language stems from its semantics rather than its syntax.

The paper discusses specific issues with the Mizar language, such as difficulties with bracketing and problems with the findvoc utility, which can lead to parsing and lexing problems. It also raises concerns about the outdated nature of some resources in the Mizar library and the implications for long-term usability.

Overall, the paper emphasizes that while Mizar is a flexible language for specifying formal proofs, its flexibility can undermine its usefulness as a formal basis for mathematics. This raises questions about whether a language can successfully cater to both human and machine needs. The paper suggests the possibility of adapting Mizar or other languages to create a more defined and understandable language that serves both purposes, or dividing MKM languages into those designed for mathematicians and those for storage and retrieval tasks, with translation systems ensuring formal correctness in both contexts.