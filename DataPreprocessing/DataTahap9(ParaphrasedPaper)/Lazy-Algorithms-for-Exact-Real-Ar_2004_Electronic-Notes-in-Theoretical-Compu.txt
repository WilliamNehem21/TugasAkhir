The paper introduces a novel representation for real numbers, which enables the exact computation of real numbers using lazy programming languages. This representation allows for the utilization of hardware-based arithmetic functions without encountering issues related to granularity. Additionally, the paper presents a modified version of the karatsuba algorithm for integer multiplication, which enables exact real number multiplication in a lazy manner and displays lower complexity compared to the standard algorithm.

Traditionally, real number computations on computers rely on a subset of rational numbers and employ a floating-point notation with fixed-size exponents and mantissas. However, arithmetic based on this notation is inherently imprecise, leading to the introduction and propagation of errors during computations. The authors of the paper observed that lazy implementations of real number representations, while more natural and elegant, are less efficient compared to functional ones due to coarse granularity issues and higher complexity in arithmetic algorithms.

The paper further identifies problems with lazy representations and algorithms, noting that the complexity order for multiplication and division in lazy implementations is quadratic, in contrast to the linear order for addition and subtraction. Additionally, an error digit associated with each digit of the representation is introduced to provide information about the approximation errors influencing the digits during arithmetic operations. The function "norm" is also introduced to enhance the accuracy of the first digit of the mantissa.

In summary, the paper proposes a new representation for real numbers to enable exact computation using lazy programming languages, and it highlights the challenges and solutions related to granularity, arithmetic algorithms, and error approximation in this context.