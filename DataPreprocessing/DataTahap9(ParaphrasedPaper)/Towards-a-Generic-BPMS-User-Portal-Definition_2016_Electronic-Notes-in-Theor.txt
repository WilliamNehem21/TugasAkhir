One crucial element that organizations must consider to improve their efficiency and effectiveness is the management of their business processes (BPs). Business process management (BPM) offers support for the entire BP lifecycle, encompassing modeling, development, deployment, execution, and evaluation in both the organizational and technical realms. Process-aware information systems (PAIS), particularly business process management systems (BPMS), have emerged as the technology to facilitate the BP lifecycle.

This paper presents the definition of a general BPMS user portal based on a unified data model and a generic process engine API, which can be integrated with virtually any process engine for BP execution. The definition was formulated through a comparative assessment of three distinct BPMS (Activiti 4, Bizagi 5, and Bonita 6) in terms of the functionalities offered in their user web portals and process engine APIs. Additionally, the paper describes the modeling of the generic BPMS user web portal using the Interaction Flow Modeling Language (IFML), a standard language designed to express front-end content, user interaction, and control behavior, enabling the provision of a platform-independent front-end model for the development or automated generation of BPMS user portals.

The remainder of the paper is structured as follows. Section 2 presents related work, while Section 3 introduces the general and key components of a BPMS architecture, including the comparative evaluation of the selected BPMS. In Section 4, the architectural definition of the generic BPMS user portal, the underlying unified model, and the generic process engine API are detailed. Section 5 introduces the IFML standard and the IFML-based generic user portal that has been defined. Section 6 showcases a prototype developed as a proof of concept, and finally, Section 7 presents conclusions and outlines future work.

Previous efforts have sought to unify BPM concepts since the early stages of workflow management, as evidenced by the Workflow Reference Model and the Workflow Management Facility Specification. While these initiatives defined key functionalities for a workflow engine, they lacked specific operational details, which are intricately defined in our approach. Moreover, our proposal presents a metamodel delineating the primary concepts of a process model, focusing not only on process modeling but also on process execution. Compared to other works, our proposal offers a unified perspective on concepts and relationships related to BP execution, along with a highly decoupled view of the main components of a BPMS for process execution, including the user portal and the process engine.

Furthermore, we categorize BPM systems based on their support for BPMN process model execution into three categories: pure BPMN, adapted BPMN, and non-BPMN. Each category employs different strategies for process model execution, and we elaborate on the functionalities and terminology specific to each category. We also discuss the structure and functionalities of the user web portal in detail, distinguishing between the administrator site, the common user site, and the public site view.

The paper also details the access layer, encompassing the service layer, where the generic process engine API is defined, and the integration layer, which facilitates the actual interaction with the selected process engine. The language for specifying the user portal, IFML, is described, outlining the various view containers and components used to define the structure and functionality of the portal.

To validate the proposed approach, we present a partial implementation of the generic process engine API, which demonstrates its potential for interoperability across different process engines. Additionally, we present the results of the comparative evaluation of the selected BPMS (Activiti, Bizagi, and Bonita) and highlight the differences in their user portals and process engines, which formed the basis for our generic BPMS user portal.

In conclusion, this paper presents a comprehensive framework for a generic BPMS user portal, based on a unified data model and a generic process engine API. The framework offers a platform-independent front-end model and aims to decouple the user interface from the process engine, paving the way for the automated generation of BPMS portals using different technologies. Future work will focus on enhancing the generic API and model to cover a wider range of existing process engines and expanding the unified model to include support for BP execution measures analysis.