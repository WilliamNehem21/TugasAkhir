The authors have previously introduced a conceptual framework called the integration paradigm, which aims to integrate data type and process modeling techniques. The purpose of this paper is to provide a brief overview of this conceptual framework and to present a formal model for the integration paradigm. The formal model is based on four layers: data type, data states and transformations, processes, and system architecture. These layers are instantiated using various modeling techniques such as algebraic high-level nets, attributed graph transformation, and UML diagrams. 

In each of these modeling techniques, there are low-level variants, where data types are weakly supported by fixed data domains, and high-level variants that are defined through the integration of basic process and data type modeling techniques. The integration paradigm, which is an extension of previous approaches, provides a unified approach to system specification and modeling on a conceptual level.

The four layers of the integration paradigm are discussed, and typical examples of integrated data type and process modeling techniques are presented. The formal model for the integration paradigm is detailed, and instantiations of the formal model for various modeling techniques are provided. The conclusion compares the formal model with the notion of transformation systems and explores an extension of the basic component concept.

The paper acknowledges the contributions of colleagues in discussing integrated modeling techniques and expresses gratitude for their valuable comments. It also mentions the support received from various projects in Germany and Spain.

Furthermore, the paper explores the integration of object-oriented modeling techniques and presents a hierarchy of layers for data type, data state, and system architecture aspects. It discusses the application of processes, the specification formalism sz, and the reactive behavior of the system in terms of processes.

The paper details the relationship between reactive states, data states, and transitions within the formal model and discusses the interpretation of input and output parameters in the reactive states of processes. It also explores model transformation for basic components based on construction, composition, and communication mechanisms.

The construction mechanisms for petri nets in layer 4 are discussed, with a focus on union and fusion. The process of representing the fusion of nets is outlined, along with the consideration of two alternatives for the embedding and definition of processes.

Finally, the main ideas for modeling attributed graphs and attributed graph transformation systems within the formal framework are presented. The paper allows specifications instead of signatures in layers 1-4 for the data type and data state parts.