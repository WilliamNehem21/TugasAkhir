Different types of mismatches can occur at various levels of interoperability, as typically distinguished in interface description languages. These levels include the signature level (consisting of operation names and types), the behavioral level (involving interaction protocols), the quality of service level (encompassing nonfunctional properties such as security and efficiency), and the semantic or conceptual level (pertaining to the functional specification of a service's actions). There has been a recent trend in both academic and industrial settings to incorporate behavioral descriptions into interface models and programming languages, such as BPEL or Windows Workflow Foundations (.NET 3.0), within the context of web services. Emphasizing the significance of the behavioral interoperability level, it is noted that even if services align at the signature level, their composition can lead to erroneous behaviors or deadlock situations if the designer does not consider their execution flows.

The remainder of the paper is structured as follows: Section 2 introduces the service model and contract specification language, along with a case study used to illustrate the issues discussed in subsequent sections. Section 3 first describes the automatic contract generation algorithm used in the approach and then presents an extension of the algorithm with an interactive environment for semi-automatic contract specification. Section 4 presents experimental results used to assess the benefits of the approach, and finally, Section 5 reviews related work, while Section 6 concludes the paper.

The chosen formal model is simple, graphical, and easily derived from existing implementation languages. Consequently, service interfaces are described only with their service transaction sequences (STSs) in the paper, leaving the signatures implicit, though they can be inferred from the typing of arguments made explicit in STS labels.

The paper's approach involves an automatic generation process for adaptation contracts, capable of generating correct contracts from a behavioral standpoint but unable to control the semantic constraints present on service interfaces. To address this limitation, the paper presents a semi-automatic approach to contract specification as a solution, extending the automatic generation process with an interactive contract specification environment for customizing and constraining automatically generated solutions.

Additionally, the paper defines a heuristic function based on the operations' direction and argument matching to measure the suitability of adaptation contracts, with a primary focus on synchronizing compatible operations and avoiding incompatible branches of service behavior. The paper also discusses fully automated techniques including simulation and trace-checking to assess the correctness and potential issues in the execution flows of the interfaces.

Moreover, the paper reports on an experimental study that assessed the benefits of the approach to contract specification in terms of development effort and contract accuracy. Volunteers were divided into expert, average, and novice categories and were given adaptation problems to solve using manual, interactive, and semi-automatic contract specification approaches. The results of the study suggest that the interactive and semi-automatic approaches provided improvements in certain scenarios, particularly in cases where multiple small services required adaptation.

The paper also provides a comparative analysis of its approach with other related work. It highlights the limitations of some existing approaches in addressing behavioral mismatches and emphasizes the potential benefits of its proposed semi-automatic contract specification approach.