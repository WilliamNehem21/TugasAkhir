We use the symbols p, q, r, s, and t to represent processes, and lowercase letters such as a, b, c, d, x, and y to denote names. The occurrence of y in the process x(y).p and (y)p is considered a binding occurrence, with p as its scope. The collection of free names in a process is denoted as a set.

In this paper, we discuss two forms of bisimilarity within the context of the late transition system: strong late bisimilarity and strong open bisimilarity. The key distinction between the definitions of late bisimulation and open bisimulation lies in the presence or absence of the axiom of excluded middle on names, as we will demonstrate. The original definitions of late and open bisimilarity can be found in [27, 38]. We have opted to explicitly state the side conditions instead of using the bound variable convention.

The primary challenge in implementing proof search with this late bisimulation specification is determining when to invoke instances of the excluded middle. Addressing this question would simplify the proof search process to one akin to open bisimulation. There are two extreme approaches to consider: on one end, we could apply instances for all possible names present in our process expressions. This method is straightforward but may result in an excessive number of cases to consider. Alternatively, a more conservative approach would involve suggesting an instance of the excluded middle only when it becomes necessary to consider that instance. For instance, a failure of a "defy" rule due to a mismatch (at the meta-level) between an eigenvariable and a constant would indicate the need to invoke the excluded middle for that eigenvariable and constant. The specific details of such schemes are left for future research.