This academic paper presents Lemon, a versatile open source C++ library that offers efficient implementations of graph and network algorithms as well as related data structures. The paper compares the design concepts, features, and performance of Lemon with other similar software packages, such as Boost Graph Library (BGL) and LEDA. The results indicate that Lemon is a viable alternative to these widely used libraries and generally outperforms them in terms of efficiency.

The primary objective of Lemon is to provide highly efficient and user-friendly software components that facilitate the solution of complex real-world optimization problems. These components encompass graph implementations, related data structures, fundamental graph algorithms (like graph search, shortest path, spanning tree, matching, and network flow algorithms), and various auxiliary tools (such as flexible input-output support for graphs and associated data). Additionally, the library offers a common high-level interface for multiple linear programming (LP) and mixed integer programming (MIP) solvers.

Lemon is designed to be cross-platform and compatible with a wide range of operating systems and compilers. It has been tested on various systems, including Linux, Windows, OSX, and AIX, with different compilers such as GCC, Intel C++, IBM XLC, and Visual C++. The library integrates well with various integrated development environments (IDEs) like Visual Studio, CodeBlocks, or Eclipse, owing to its CMake based build environment.

The rest of the paper is organized as follows. Section 2 provides an overview of Lemon's main features compared to similar C++ graph libraries, while section 3 delves into selected implementation details. Section 4 compares the performance of the discussed libraries using benchmark tests of fundamental algorithms, and section 5 outlines Lemon's main plans for further development. Finally, conclusions are drawn in section 6.

The paper also discusses key design choices and implementation details of Lemon, including the utilization of undirected graphs, unique aspects of Lemon's iterators, the use of external property maps, and efficient implementations of various algorithms related to graph theory and combinatorial optimization. Lemon's support for graph file formats, observer design patterns, and specialized algorithms for solving problems such as the minimum cost flow problem is also highlighted.

Overall, the paper emphasizes that Lemon is a highly efficient C++ graph library with a clear design and user-friendly interface. Its extensive benchmark tests demonstrate that Lemon's fundamental algorithms and data structures are typically more efficient than those of widely used similar libraries, making it a favorable choice for research and development in the field of combinatorial optimization and network design.