The language defined by a PRCG relies on the concept of range. In this context, a range for a given string w = a1:::an in set T is represented by a pair of integers (i; j) where 0 ≤ i ≤ j ≤ n, and is denoted as hi::jiw. The lower bound of the range is denoted by i.

In any PRCG, terminals, variables, and arguments within a clause represent ranges. An empty argument represents an empty range. A terminal t represents the range hj 1::jiw if w = a1:::an and t = aj. More generally, a string in the form xy represents a range where both x and y represent ranges that can be concatenated, and the concatenation of strings matches the concatenation of ranges.

In an NRCG, a negative predicate call defines the complement language (with respect to t) of its positive counterpart. An instantiated negative predicate succeeds (i.e., is derived) if it is extended to allow a(~))") where its position x = x1x2x3, y = x1∪x2∪x3 for (u; v) in set C, x2 in set S, for some i, 1 ≤ i ≤ n. If there is a derive relationship mode (i.e., exists x; ing), the language defined by k_30 can only be instantiated if x x x, the argument of the rightmost predicate call, represents a range, such that the three ranges bounded respectively to x1, x2, and x3 can be concatenated. This is possible if x1∪x2∪x3 = x1x2x3 (i.e., uv=").