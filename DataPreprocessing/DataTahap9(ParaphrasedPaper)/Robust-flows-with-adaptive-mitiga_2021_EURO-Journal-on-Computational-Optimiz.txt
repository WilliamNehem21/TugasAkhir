We utilize a robustness measure to account for the effects of potential shortages at demand nodes after an optimal mitigation has been carried out. The optimal mitigation involves a flow within the residual network of supplier capacities, aiming to minimize shortage at demand sites. Our objective is to select a flow that is optimal given this robustness measure.

We present a mathematical formulation of the aforementioned problem, incorporating network flows and considering it as a tri-level robust flow problem. We offer a linear programming formulation of the mitigation problem, which allows for an adaptive choice of mitigation based on different scenarios. The scenario set can be represented implicitly by integral points of a chosen polyhedron, enabling flexibility in risk assessment.

The outer linearization algorithm is based on an LP reformulation of the entire problem, while the scenario enumeration algorithm adds cuts for each scenario to an LP and re-solves it iteratively. The iterative cut generation algorithm finds the worst-case scenario for the current solution and adds a corresponding cut to the LP.

In contrast to a similar problem considered by Bertsimas et al. (2013b), our model focuses on the amount of flow lost due to supply failures and bounds the mitigation flow by residual capacities in the network. Our problem's structural properties and corresponding algorithm differ significantly, and our emphasis is on obtaining exact optimal solutions rather than approximations.

The worst-case scenario for the current solution is determined via solving a MIP, and a corresponding cut is added to the LP, followed by a re-solution process. This iterative approach continues until the evaluated robustness of the current solution meets the bound given by the optimal LP objective value.

The paper is structured as follows: We formally define the basic model in Section 2, highlight the NP-hardness of evaluating a given flow for its robustness in the adaptive setting in Section 3, present our algorithms in Section 4, provide experimental results in Section 5, and conclude in Section 6, discussing extensions of the basic model.

We assume that failures do not need to be considered due to a specific constraint, and we ensure that the amount of mitigation at each demand node does not exceed the shortage. Additionally, we stipulate that the nominal flow cannot be adapted to the scenario, making the mitigation process subject to the residual capacities.

We demonstrated the implementation of the algorithms in Python 3.7, utilizing Gurobi version 8.1 for solving the LPs and IPs, and solving max-flow problems using NetworkX. Our benchmarks were conducted on a personal laptop running Windows 10 with an Intel i7-8665U CPU and 16 GB of RAM.

We found that the iterative cut generation algorithm is generally the fastest, though for small scenario sets, the outer linearization algorithm may be faster. For large scenario sets, the iterative cut generation algorithm is particularly suitable, as its running time does not increase with the number of suppliers considered in a failure scenario.

Finally, we discuss potential extensions to the robust flow model, including the placement of depots, where additional capacities for mitigation can be installed by opening select depots out of a given set of possible locations, with the goal of finding an optimal choice of depots and an optimal flow.