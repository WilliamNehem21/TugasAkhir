The ongoing primary objective of the project is to enable the practical and effective application of formal methods in real-world software development. The project has produced the key tool, a crucial product that facilitates the specification and verification of Java Card programs. The key prover, an integrated interactive and automated theorem prover included in the key tool, is utilized to reason about programs and their specifications.

Given that fully automatic program verification is impractical for realistic programs, it was essential to ensure that the user interface of the key prover was intuitive and powerful. This paper presents an overview of the key prover from a user interface perspective, without delving into technical intricacies. The concept of taclets, fundamental to interactive and automated proof construction in the key prover, will be introduced.

The right pane of the interface displays a list of open proofs, such as the demonstration file "demo.key." Although only one proof file is currently open, multiple proof obligations from a program verification task could typically be managed through this interface, allowing for easy switching between different proofs.

Unlike many systems based on higher-order logic, taclets handle the justification of derived rules within the same logic as the taclets themselves. Details on how proof obligations are computed are provided in the paper.

Presently, the user interface does not support the interactive construction of taclets. Taclets are represented in a textual format and parsed into the system. Future versions may incorporate the ability to define taclets within the user interface.

The key system has been successfully utilized in undergraduate education, with students demonstrating simple properties of Java programs using the prover. This suggests that the user interface is accessible to non-experts following adequate guidance. Additionally, more experienced members of the key group have conducted larger case studies, demonstrating the system's capabilities.