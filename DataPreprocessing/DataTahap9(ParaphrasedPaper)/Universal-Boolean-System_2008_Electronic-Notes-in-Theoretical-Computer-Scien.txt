Boolean interaction systems and hard interaction systems are both models that describe networks of interacting cells. While they are similar to interaction nets in that they are based on the local interaction principle between two cells, they do not allow for the structure of the networks to evolve. In the case of boolean nets, it is not possible to create or destroy cells or links between existing cells. These systems bear resemblance to hardware circuits but operate based on an implicit rendezvous information exchange mechanism.

Hard interaction systems are a variant of interaction systems, in which the rules are constrained in such a way that the structure of the networks cannot change. The rules do not allow for the creation or destruction of cells or links between cells; they only permit changes to the symbol of agents and the principal port.

However, the existing systems cannot be considered as universal hard interaction systems, as the rules governing these systems do not preserve the structure of the networks. The paper addresses this issue and demonstrates how a universal boolean interaction system can simulate every hard interaction system. In essence, boolean interaction systems are hard interaction systems where the cells only exchange binary information.

The ports in these systems form a circular list represented on a circle, with the principal port marked by a triangle and its name inside the circle. The dynamic state of an agent is determined solely by its name and the position of the principal port.

An interaction net can evolve when two agents are connected through their principal ports. An interaction rule constitutes a rewriting rule where the left member comprises of only two agents connected through their principal ports, and the right member is any interaction net with the same interface. For hard interaction systems, the rule must preserve the structure of the networks. Therefore, the right member of a hard interaction rule comprises of two agents with the same arities as those in the left member, connected by a link corresponding to the same ports. The names and the principal ports may differ between the left and the right members.

A hard interaction system is considered deterministic when there exists at most one hard interaction rule for each pair of different agents and if there exists at most one hard interaction rule for the interaction of an agent with itself. In this case, the right member of this rule must be symmetric from the central point, which is necessary for a deterministic system. A hard interaction system is considered complete when there is at least one rule for each pair of agents. The paper focuses on deterministic and complete systems, proving that reduction is strongly confluent.

Other logical operators such as OR, NOT, and AND are also easily simulable. In fact, every vector of boolean functions with multiple inputs and outputs can be simulated by a boolean agent and its interaction rules. However, the NAND and the boolean duplicator suffice to simulate every vector of boolean functions. For instance, an inverter can be simulated by one NAND agent and one duplicator agent.

To complete the universal boolean interaction system, a Boolean device that receives a validation enabling or disabling an I/O interaction is necessary. When the communication is enabled, the channel writes the input bit to the I/O port, waits for a boolean interaction, reads the bit, and copies it to the output. If the communication is disabled, the channel copies the input bit to the output without interaction through its I/O port.

A boolean interaction controller is a device that comprises of a state, a number k of input/output boolean channels, and a transitional function. The controller selects one of its input/output channels, assigns a boolean value to the output (the same value is given to all input/output channels), waits to receive a boolean value from the input/output channel, and, following its transitional function, updates its state. The controller repeats these steps indefinitely.