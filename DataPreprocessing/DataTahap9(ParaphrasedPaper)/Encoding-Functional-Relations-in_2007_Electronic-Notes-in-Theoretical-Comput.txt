A Scunak signature can be transformed into a Twelf or Automath signature by declaring basic type families corresponding to obj, prop, and pf. When translating to Twelf or Automath, any occurrences of class types are removed through currying. As long as the Scunak signature can be type-checked using the simplified typing system, the resulting Twelf and Automath files should be well-typed, as long as proof irrelevance is not required. The described signature has removed essential uses of proof irrelevance, enabling the corresponding Twelf and Automath files to type-check. Starting from the axioms of set theory, one can define propositional connectives and bounded quantification and construct pairs and define binary relations as certain sets of pairs, providing the infrastructure for defining object-level functions. A set "a" is a Kuratowski pair if there exist "u" and "v" such that "a" equals {{u}, {u, v}}. This notion is defined using bounded quantification, with "a" serving as a bound. It can be proven that if there exist "u" and "v," they must inhabit "a."

The method of describing sets and representing mathematics within set theory using Scunak is facilitated by the presence of class types and the PAM syntax. Class types enable the treatment of arbitrary predicates (set-theoretic classes) as subtypes of the type of untyped mathematical objects, while the PAM syntax allows for the natural specification of types and terms.