In recent years, the use of content management systems (CMS) has become prevalent as an effective platform for managing the large quantities of digital content associated with web applications. Consequently, many organizations have recognized the need to transition their web applications to CMS-based platforms, a complex and error-prone process. To address this challenge, this paper proposes a method based on the principles of Architecture-Driven Modernization (ADM) that automates the migration of web applications to CMS-based platforms. The paper focuses on the implementation of two components of this method: 1) the DSL ASTM PHP, a modeling language for specifying a model from PHP code (ASTM PHP).

To support the migration process, the Object Management Group (OMG) has proposed ADM as a standard that applies model-driven architecture (MDA) techniques and tools to systematize software reengineering, thereby reducing associated risks and costs. ADM incorporates a set of standard metamodels to represent information involved in software reengineering, including the Abstract Syntax Tree Metamodel (ASTM) and the Knowledge Discovery Metamodel (KDM).

To demonstrate the feasibility of the migration method, the paper presents a case study involving the migration of a widget from a traditional web application implemented in PHP to the CMS platform Drupal. The paper provides an overview of the proposed ADM-based migration method, a case study to illustrate its effectiveness, and the definition and implementation of the ASTM PHP DSL as well as the M2M transformations between ASTM PHP and KDM models.

The paper details the extraction of ASTM PHP models from legacy PHP code and the generation of KDM models from these ASTM PHP models using M2M transformations. Additionally, it outlines the generation of the CMS model from the information captured in the KDM models. The CMS model defines elements related to the roles and permissions assigned to users of the CMS-based web application and determines user navigation and usage of the web application. Furthermore, the paper discusses how the ASTM PHP metamodel is extended with specific elements of the PHP programming language and categorizes these elements into new and redefined elements.

The paper also explains specific transformation rules between elements in the ASTM PHP and KDM metamodels to facilitate the migration process. It discusses different types of M2M transformations, such as vertical and horizontal transformations, and their relevance to the migration method.

In summary, the paper presents a comprehensive exploration of the proposed ADM-based migration method, including the development of the ASTM PHP DSL, the implementation of M2M transformations, and a case study demonstrating the practical application of the method. It also discusses other ADM-based approaches found through a literature review and concludes by highlighting future directions for research in this area.