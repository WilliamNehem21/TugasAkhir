This paper introduces an extension to the hidden algebraic formalism by adding synchronization and communication elements through the use of a formalism called hiddenccs. The interaction patterns of object-oriented systems are specified using the hidden algebra and the coordination aspects are described using the ccs process algebra. This new specification formalism enriches the object specification with synchronization and communication elements associated with methods and attributes of the objects, utilizing a ccs description of the interaction patterns. The operational semantics of these specifications is based on labeled transition systems and can be specified in rewriting logic. The paper uses the Maude platform to verify the communicating concurrent objects specified in hiddenccs, with an example of triple modular redundancy being examined for verification.

In the presented work, the hidden algebra is extended with interaction elements including synchronization and communication. Synchronization elements link objects by signifying resource requests and offerings, while communication through methods accessing attributes is akin to a value-passing interaction between objects. The formal operational semantics of hiddenccs integrates model semantics of hidden algebra and ccs reduction rules. The resultant labeled transition systems are translated into rewriting logic specifications using the Maude implementations of ccs and Hennessy-Milner logic. The paper also demonstrates the use of the Maude implementation of linear temporal logic to verify properties of the hiddenccs specifications.

The paper is structured as follows: Section 2 introduces hidden algebra, Section 3 introduces ccs, Section 4 presents the main contributions by introducing the new hiddenccs specifications and presenting theoretical results. The paper then discusses how the operational semantics of hiddenccs specifications are described in rewriting logic and how the Maude system is used to verify temporal properties of hiddenccs specifications. The paper concludes with conclusions and references.

The paper also explains the synchronization and communication elements in detail, using pairs to denote the necessity and availability of shared names for synchronization and the sending and receiving of values along communication channels. It provides a formalism for representing the actions and interactions of concurrent objects, and explains how the computational structure provides a means to model synchronization and communication using pure ccs. The formalism also distinguishes between method-method interactions for synchronization and method-attribute interactions for communication.

The paper highlights the unique features of hidden algebra in providing a computational structure for ccs actions, adding a new dimension that is missing in other formalisms. It also distinguishes its approach from other formalisms such as LOTOS and CASL, emphasizing the clear separation of concerns provided by hiddenccs, allowing for better reuse of coordination and objects.