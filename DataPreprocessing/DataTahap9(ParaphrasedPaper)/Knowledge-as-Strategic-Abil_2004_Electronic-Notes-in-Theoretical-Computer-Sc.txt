Our research aims to develop methods for verifying knowledge properties of multi-agent systems using model checking techniques. We focus on the atel logic, an extension of the alternating-time temporal logic (atl), which allows for the specification of epistemic and strategic properties of such systems. We propose a method for reducing the atel model checking problem to a model checking problem in atl, where epistemic relations are explicitly represented as dynamic transitions in atl models. We illustrate this technique through a knowledge game, which serves as a consistent example throughout the paper.

Altering-time temporal logic (atl) is a powerful tool for reasoning about coalition abilities in multi-agent systems. We have extended atl to alternating-time temporal epistemic logic (atel), which considers agents' knowledge according to the Fagin-Halpern-Moses-Vardi model. Atel can be used to express properties related to agent communication, such as the necessity and success of communication in specific situations.

Model checking is a widely used and effective method for evaluating logical formulas on finite state systems. Developing a general method for atel model checking is crucial for verifying agent communication protocols and planning communication in multi-agent systems. While automatic model checkers for atl exist, none are available for atel. This paper presents an approach to address this gap in the context of existing tools.

Our motivation for these reductions lies in the similarity between epistemic logic and atl, as both have Kripke semantics and can be evaluated on a transition system. In atl, transitions correspond to computation steps, while atel involves transitions for computations and epistemic uncertainty. By extending the transition system with additional transitions to model epistemic relations, we aim to manage the alterations without causing an exponential increase in the number of transitions.

Although not all knowledge-related model checking problems can be resolved using existing model checkers, it is worthwhile to explore the problems that can be addressed with existing tools. In this paper, we present a method for model checking knowledge and evaluate its effectiveness.

The paper is structured as follows: Section 2 introduces the example protocol and the atel logic used to reason about it; Section 3 provides an informal overview of the main idea; Section 4 explains the theory underlying the technique; Section 5 formally defines the method and includes a correctness proof; Section 6 illustrates the technique by applying it to prove the properties introduced in Section 2; and Section 7 presents some conclusions.

The example scenario, referred to as the "Russian cards problem," involves three agents sharing five cards. We describe the scenario, discuss the evaluation of epistemic formulas, and introduce an action for dynamic scenarios.

The paper elaborates on the semantics of atl and atel, defining these languages and their interpretation over semantic models. The labels on transitions indicate the agent responsible for determining the next step in the computation, resembling a game-like situation.

In our demonstration of how the described technique can be implemented in the Russian cards scenario, we show how a turn-based system can be modeled using a controller or scheduler module. Additionally, we discuss the state of the world in this scenario and the handling of shared variables in reactive modules.

We create extra modules for each agent in the example scenario and discuss the modifications required for each formula to be checked. The example illustrates how one can evaluate knowledge at different points in a run using the technique.

In conclusion, we have presented a technique for using an atl model checker to perform model checking for atel formulas. This approach is applicable to arbitrary atel formulas on any turn-based acyclic transition system and provides immediate practical value, given the existing availability of atl model checkers.