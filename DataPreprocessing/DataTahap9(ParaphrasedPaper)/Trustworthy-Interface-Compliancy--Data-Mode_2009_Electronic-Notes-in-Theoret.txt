Component orientation represents a novel approach to software system development, involving the assembly of pre-fabricated software components known as commercial off-the-shelf (COTS) components rather than building from scratch. This approach mirrors construction methods used in other engineering disciplines, such as electrical or mechanical engineering, where software components are connected through their interfaces.

The formal method B is briefly introduced, with its use in the context of component-based software explained. UML diagrams representing the architecture are annotated with B models associated with their interfaces, which are used to verify interface compliance. The B method has been successfully applied in the development of complex real-life applications, such as the Meteor project, providing robust support tools for the entire development life cycle, from specification to code generation.

The approach involves intuitive and progressive transformations, where enumerated values of a set are transformed to a set of numbers modulo the number of enumerated values before being transformed to the full set of natural numbers to facilitate easier proof of refinements.

The process of building an adapter in the proposed approach is likened to building morphisms between interfaces, and the use of the B method for expressing interfaces is emphasized for its practicality and ease of understanding by software engineers due to its foundation in set theory.

A method for adding dependability features to component-based software systems is discussed, which involves enhancing the system while keeping the central application component untouched and incrementally evolving the overall system architecture by modifying adapters and introducing new hardware or software components.

Zaremski and Wing's approach for comparing software components using formal specifications and the Larch prover to prove specification matching is highlighted, along with the potential practicality of the proposed approach compared to other methods based on signature algebras and theory category.

The paper "Using Parameterised Contracts to Predict Properties of Component-Based Software Architectures‚Äù by Reussner and Schmidt is referenced in relation to predicting properties of component-based software architectures.