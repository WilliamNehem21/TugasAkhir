The extended finite state machine (EFSM) known as the stream X-machine (SXM) characterizes a system as a finite set of states with transitions between states and an internal memory store. Transitions in an SXM are triggered by input values, produce output values, and may access and modify the memory. The transition diagram for an SXM is a finite automaton with arcs labeled by relation names, known as processing relations. This paper presents the theoretical foundation for the NSXM integration testing method, which generates a test set from a non-deterministic SXM specification under the assumption that system components, such as processing relations, are implemented correctly.

Given that C is a set of non-deterministic SXMs, testing compatible with Z is contingent upon the accurate implementation of processing relations in the system's components. As such, the NSXM integration testing method focuses solely on testing the integration of processing relations, while the correctness of their implementation is verified through separate testing processes.

Because the method does not assume the accuracy of processing relation implementation, it necessitates testing the implementation in addition to its integration. Therefore, a test set needs to include an integration test set (from the previous section) as well as a set for testing processing relations, known as a relation test set.

This paper also discusses the application of Theorem 4.8 (or Corollary 4.9) and Theorem 2.3 to generate conformance test sets for a P system specification. It explains how to construct a stream X-machine from a P system and demonstrates how to build a derivation tree for a predefined number of steps following an approach described elsewhere.

Lastly, the paper explores how an SXM model of a P system can be derived, and it applies the NSXM testing approach to generate conformance test sets for the P system. The authors propose further research on alternative approaches for deriving SXM models of P systems and other aspects related to applying NSXM testing to P systems, such as designing P systems that meet specific design for test conditions.