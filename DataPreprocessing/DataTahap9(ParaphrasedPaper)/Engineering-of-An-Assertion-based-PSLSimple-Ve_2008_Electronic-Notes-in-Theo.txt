Assertion-based dynamic verifiers automatically capture execution traces that either satisfy or violate specific property assertions during the simulation of DUVs (design under verification). This automation has the potential to significantly reduce verification costs and enhance design quality, making assertion-based verification an increasingly critical engineering practice.

Algorithms proposed by Feikbeiner and Sipma enable the runtime verification of whether a reactive system satisfies a temporal logic specification by using alternating finite automata (AFA), which are exponentially more concise than non-deterministic finite automata (NFA) when expressing temporal logic formulas.

Propositional Specification Language (PSL) encompasses four layers of language structures: boolean, temporal, verification, and modeling, with the temporal layer being the core of PSL. This layer is utilized to describe intricate temporal relationships between signals, supporting regular expressions, linear temporal logic, and branching temporal logic for this purpose.

The "until!" constructor differs from "abort" in that, for the former, it is necessary to continue verifying the strong satisfaction of a certain condition even after its assertion, unlike the latter where verification becomes unnecessary once the condition is asserted.

The set of statements denoted by "U" updates local variables whenever a transition occurs, with multiple assignments to the same local variable being disallowed.

States with external transitions trigger an internal transition when there are no more enabled internal transitions and it is not yet time for external transition scheduling. This internal transition allows the state to wait in its current state for the next clock event, executing samplings on "v" synchronously.

The second clause of Definition 4.3 will not activate the self-loop transition (s, truelv, us, s) if there are active states with enabled internal guards other than truelv. Additionally, the clause eliminates infinite loops of truelv-guarded transitions, which are considered as chaos or live-lock.

Upon meeting the conditions for strong acceptance, transitions t4 and t5 move a monitor to the strong accepting state qs. If the strong acceptance holds at the first sampling, t4 is triggered from the pending state, and t5 is expected to occur.

The time complexity of the verification process by dynamic verifiers is analyzed, showing that since DAGs represent all possible runs, it is not necessary to explore all branches for searching strong satisfying or violating words. Consequently, the time complexity of the approach is linear with the depth of simulation. This is attributed to PSLsimple's features emphasizing the need for successful synchronization and the activation of common histories in specific scenarios.

Furthermore, the effect of the truelv-guarded self-loop transition is demonstrated through an example, showcasing how the length of a Sere is counted on clock events and how internal transitions within two external transitions do not consume time.

Icarus-verilog, a package of back-end tool kits for the Verilog HDL, lacks support for assertion-based dynamic verification. Our plan involves enhancing it with new functionalities as plugins and extending our approach to specification assurance methods and automatic test generation from PSLsimple.