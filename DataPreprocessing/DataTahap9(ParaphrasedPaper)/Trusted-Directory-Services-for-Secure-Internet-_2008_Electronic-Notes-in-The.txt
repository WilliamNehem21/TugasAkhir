It is essential to link authentication to the keying material in order to prevent man-in-the-middle (MITM) attacks. However, establishing this link is not straightforward, as using public keys only proves ownership of the key pair, not the actual owner of the keys. Typically, a trusted third party (TTP) ensures the association between peers and their keys.

Public key authentication validates the binding of a public key to an identified entity. The most commonly used approaches for public key authentication include the certifying authority model using certificates (e.g., SSL/TLS) and the web-of-trust model (e.g., PGP). Methods for obtaining a public key generally fall into two options: consulting a TTP through a trusted channel to obtain the key of an initially unknown party, or using a shared public trusted channel that manages and provides public keys for multiple parties.

The approach presented in the paper utilizes DNS and its secure extensions, DNSSEC, for implementing public key and certificate directories. It is anticipated that DNSSEC key/certificate repositories will be formed around virtual organizations (VOs), which are organizations or communities with a shared interest in exchanging credentials. This concept is similar to the VO concept in grid computing.

While X.509 certificate features allow for federation and syndication, the use of DNS for storing X.509 certificates and utilizing DNSSEC to implement a public key infrastructure (PKI) is considered more convenient. However, there are concerns about DNSSEC, particularly regarding its performance and being a single point of failure for the DNS service.

In this approach, the DNS is utilized as a trusted directory service for application keys and certificates. Although it is a controversial topic in the DNS community, the proposal includes addressing performance concerns related to increased network load when returning key and certificate data, as well as potential vulnerabilities associated with DNS services being a single point of attack and failure.

Furthermore, the protocol proposed in the paper, E-TLS, is vulnerable to denial of service (DoS) attacks due to the need to process certificates. These vulnerabilities are inherent and must be addressed for any shared trusted directory solution.