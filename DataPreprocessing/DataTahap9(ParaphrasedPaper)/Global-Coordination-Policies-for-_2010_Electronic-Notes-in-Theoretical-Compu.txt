One important issue within the service-oriented approach is the potential to merge the activities involved in service interactions using programmable coordination patterns. Two distinct approaches can be employed to address service coordination: orchestration and choreography. This paper introduces a formal methodology designed to manage coordination among services from the perspective of a global observer, in the spirit of choreography models. Specifically, it focuses on the challenge of verifying compliance and consistency between the design of service interactions and the choreography constraints.

The web service protocol stack (e.g. WSDL, UDDI, SOAP) offers fundamental support for the development of service-oriented architectures by leveraging capabilities to publish, discover, and invoke network-available services. This protocol stack has been highly advantageous in showcasing the innovative features of the service-oriented computing approach.

Many current development methodologies and standards are concentrated on the composition of services. Orchestration and choreography are the two approaches that can be adopted. Orchestration involves an intermediate component, the orchestrator, which is responsible for organizing service activities according to the workflow plan and provides a local view of the participants. On the other hand, the choreography model involves all parties and their associated interactions, offering a global view of the system. This paper introduces a formal methodology for the SC&JSCL framework aimed at managing coordination among services from the perspective of a global observer, in the spirit of choreography models. Notably, it addresses the problem of verifying compliance and consistency between the design of service interactions and the choreography constraints.

The paper also introduces a black-box semantics of NCP in the form of a bisimulation relation. The extension of the SC&JSCL framework with a choreography model, the NCP calculus, has been presented, along with an encoding from the design language (SC) to the choreography language in order to verify whether an SC network adheres to a global NCP policy using bisimulation checking.

Additionally, the paper highlights some novel concepts introduced in the framework, such as multi-layered networks and multi-party sessions. This paper contributes to the existing research by extending the SC&JSCL framework with a choreography model and introducing new perspectives on relating choreography and orchestration.