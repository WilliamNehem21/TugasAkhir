The software visualization component of Eduvisor represents a new pedagogical tool developed to address prevalent challenges in teaching object-oriented technology to beginner programmers. Integrated into a top-tier integrated development environment (IDE), the visualization tool provides students with real-time insight into the structure of their programming creations. Backed by extensive experience in teaching CS1 courses and thorough knowledge of relevant literature, the goal of Eduvisor is to facilitate faster progress for students in the challenging initial phases of programming.

Over the years, software design has been widely acknowledged as a complex and vexing problem, and empirical evidence suggests that students typically struggle to make significant advancements in introductory programming courses. This difficulty in acquiring programming and software design skills is equally challenging for educators.

The primary objectives of Eduvisor are to assist students in debugging their programs more efficiently, to stimulate student enthusiasm by visualizing their programming efforts, and to enhance their understanding of object-oriented programming. The tool is informed by decades of combined teaching experience and a comprehensive review of pertinent literature.

The development of Eduvisor is elaborated in several sections of this paper. These sections outline the key motivations behind its design, runtime issues encountered in CS1 courses, sample graphical representations, resulting properties, and a comparison with related work. Additionally, the paper discusses the experiences and observations of the University of Antwerp in transitioning from Pascal to C and, subsequently, to Java, identifying common errors and challenges faced by students.

Eduvisor addresses several challenges encountered by novice programmers, including difficulties in program design, object understanding, message passing comprehension, and variables mastery. The visual representation provided by Eduvisor aims to alleviate these challenges and promote student engagement.

The paper also notes that Eduvisor is still in the development phase, with plans to include additional instructional tools and to release the software for public use upon reaching beta status. The ultimate goal is to refine the visualization features and subsequently incorporate pedagogical functionalities.

In summary, this paper articulates the design philosophy of Eduvisor, highlighting the common runtime challenges faced by CS1 students and the solutions offered by the visualization component. It also underscores the ongoing development efforts and the future research agenda for Eduvisor.