Since Moggi's influential work in the late 1980s, monads, especially strong monads, have gained widespread acceptance as a means of structuring computational concepts involving effects, such as exceptions, output, environment-dependent computation, state transformation, nondeterministic and probabilistic computation, among others. The concept revolves around using a Kleisli category as the category of impure, effectful functions, with the Kleisli inclusion serving as an embedding of pure functions from the base category. While alternative accounts of effects based on Lawvere theories and arrows/freyd categories also exist, the monadic approach continues to hold central importance and remains widely recognized, including as part of the standard libraries of Haskell.

In the realm of functional programming, Kieburtz was the first to advocate for comonads as tools for structuring context-dependent computations and provided compelling examples. Additionally, Lewis et al. discussed the specific application of comonads to environment-passing computation or implicit parameters.

This paper aims to directly address the need to handle important concepts of context-dependent computation, particularly dataflow computation (stream-based computation) and computation on trees, such as tree relabellings in attribute evaluation. The authors demonstrate that a sophisticated framework for addressing these computation concepts can be provided by symmetric (semi)monoidal comonads. Notably, strong monads are also associated with symmetric monoidal comonads in works on the categorical semantics of intuitionistic linear and modal logic. The paper details the structure of cokleisli categories corresponding to symmetric (semi)monoidal comonads and presents a general interpretation of languages for context-dependent computation into such categories.

Although the authors have previously described their proposal in the context of language processors for dataflow computation and attribute evaluation implemented in Haskell, this paper takes a different approach, focusing on the underlying theory and the most appropriate additional structure for comonads. The paper begins with a brief review of strong monads, their kleisli categories, and the semantics of effectful languages following Moggi's approach. Subsequently, the authors develop an analogous account of context-dependent computation based on cokleisli categories of symmetric (semi)monoidal comonads. The paper underscores the notable differences resulting from the fact that, despite the transition from monads to comonads, the goal is to retain as much of a given cartesian closed structure as possible. Finally, the authors briefly touch upon the relationship to computational comonads and some of the advanced issues they intend to address.

The paper also discusses the semantics of general or causal stream functions in terms of their representation as elements of D1, which are lists over natural numbers representing the time elapsed from the beginning of the history at a given moment.

The authors acknowledge that the generic operational semantics for context-dependent languages is an area of future work and state that several notions of context do not align with strong symmetric monoidal comonads, but instead correspond to lax symmetric semimonoidal comonads. The authors propose that indexing in the form of comonads on presheaf categories can offer assistance in such cases.

The paper concludes by considering the feasibility of combining effectfulness and context-dependence in a notion of computation. Such combinations may correspond to distributive laws of a comonad over a monad, where the category of impure functions is the bikleisli category of the distributive law. The authors emphasize that this design has already been applied to clocked causal dataflow computation combining causal dataflow and exceptions, and they reference prior work by Brookes and van Stone in this area. Furthermore, they highlight the contribution of Power and Watanabe to the mathematics of distributive laws between monads and comonads.

Additionally, the authors acknowledge that finer and coarser approaches to effectful computation, such as Lawvere theories and arrows/freyd categories, offer alternative perspectives on handling effects in computation, with arrows/freyd categories in particular proposed as an axiomatization of notions of impure computation reaching beyond Moggi-style effects.