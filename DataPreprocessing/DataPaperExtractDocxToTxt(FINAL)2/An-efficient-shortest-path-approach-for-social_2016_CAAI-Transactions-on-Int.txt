Available online at www.sciencedirect.com
ScienceDirect


CAAI Transactions on Intelligence Technology 1 (2016) 114e123
http://www.journals.elsevier.com/caai-transactions-on-intelligence-technology/
Original article
An efficient shortest path approach for social networks based on community structure*
Maoguo Gong a,*, Guanjun Li a, Zhao Wang a, Lijia Ma a, Dayong Tian b
a Key Laboratory of Intelligent Perception and Image Understanding of Ministry of Education, International Research Center for Intelligent Perception and Computation, Xidian University, Xi'an 710071, China
b Center for Quantum Computation and Intelligent Systems, University of Technology, Sydney, Broadway, NSW 2007, Australia
Available online 2 June 2016

Abstract
Finding the shortest path (SP) in a large-scale network analysis between any two nodes is a tough but very significant task. The SP can help us to analyze the information spreading performance and research the latent relationship in the weighted social network, and so on. As the size of the social network increases, the traditional SP algorithms have poor performance and there is not a suitable algorithm for weighted social network. Some features of the network analysis are beneficial to solve this problem, and community structure ignored by the traditional methods is one of the most important features. In this paper, we propose a shortest path algorithm based on community detection (SPCD) by integrating community detection algorithm with traditional search methods. SPCD constructs a community graph by using community structure to narrow the searching scope. The algorithm presented improves the time efficiency and maintains the accuracy scale of the SP. Experimental results on five real-world networks demonstrate the effectiveness of the proposed methods for the SP problem.
Copyright © 2016, Chongqing University of Technology. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

Keywords: Shortest path; Community structure; Weighted social network




Introduction
Recently, studies on social network have attracted a lot of attention from sociology, informatics and computer science [1,2]. A social network is a social structure made up of a set of social actors (such as individuals or organizations) and a set of the dyadic ties between these actors. A huge amount of data and resources make it critical to analyze social network related problems. A series of research on social network have been done in many aspects of sociology, such as social influence,


* This work was supported in part by the National Natural Science Foun- dation of China under Grants 61273317, and 61422209, the National Program for Support of Top-notch Young Professionals of China, and the Specialized Research Fund for the Doctoral Program of Higher Education under Grant 20130203110011.
* Corresponding author.
E-mail address: gong@ieee.org (M. Gong).
Peer review under responsibility of Chongqing University of Technology.
social groupings, inequality, disease propagation and communication of information [3]. The SP problem which calculates the distance or relationship between the nodes in the social network is an extremely important problem of social network analysis. It can be used to study the behavior of in- formation spreading, especially fastest information spreading. The recommendation system is also based on the SP problem. For example, when we analyze the relationship between sci- entists, the scientists collaboration network is established and analyzed utilizing the SP problem. Analyzing the scientist collaboration network, the work and paper reviewing effi- ciency can be improved. The SP problem serves as an elementary aspect when analyze the network structure, for example betweenness and average distance. With the increase of network scale, the previous algorithms may not suitable for the existing network, so we need effective methods for large- scale network. In this paper, we focus on the SP problem between any two nodes in the weighted social network. The SP problem concerns with finding the shortest path from a


http://dx.doi.org/10.1016/j.trit.2016.03.011
2468-2322/Copyright © 2016, Chongqing University of Technology. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC- ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



specific origin to a specified destination in a given network while minimizing the total cost associated with the path. SP is a fundamental problem in social network. In a graph, finding the path with the minimum cost from a source node s to a destination node d is called the point-to-point (P2P) problem, but a common variant fixes a single node as the source node and finds shortest paths from the source to all other nodes in the graph. In addition to P2P problem, other shortest path problem, such as single-destination, all-pairs and so on, could be converted to single-source shortest path. The single-source problem with non-negative arc lengths has been studied most extensively [4]. For a general network, traditional dijkstra's
algorithm could be used for solving all the non-negative,
weighted or non-weighted networks without any domain- specific information. Though it is a single-source algorithm, we can transform it to a P2P algorithm by terminating at destination node. But it has high time complexity of O(n2), so it might not work well on the SP in social network, especially in large-scale social network. The time complexity of modified standard breadth-first is O(n), but it is suited to non-weighted network [5]. With the increase of network scale, authors used domain-specific information about the network to deal with it. In traffic networks, researchers have adopted the natural hi- erarchies to speed up a shortest path algorithm significantly [6e10], and more algorithm are given in [11]. It is obvious that these algorithms could not be applied to social network. From the same point of view in traffic networks, the feature of social network can be utilized to the SP problem. Community feature is one of the most important characteristics of social network.
In recent years, community detection has gained a lot of attention in the field of network analysis. Community structure is similar to the small world effect and the right-skewed degree distributions which are an important distinctive property in a complex network [12]. Qualitatively, a community is defined as a subset of a graph in which the interconnections of nodes are denser than those observed with the rest of the network [13,14]. For the general case of a weighted graph, many ap- proaches mainly focused on various criteria including modu- larity [15], structural density [16] and partition density [17]. Blondel et al. introduced a fast greedy approach (BGLL) to optimize the modularity [18]. Besides, parameter-free hierar- chical network clustering algorithm (SHRINK) proposed by Huang et al. combines the advantages of density-based clus- tering and modularity optimization methods [19]. In the field of social networks, Xie et al. proposed a general speaker- listener algorithm named SLPA based on label propagation [2]. Evolutionary computation is also an important and influ- ential method [20,20,21]. Community detection clusters the


down the search space and decrease computing time for a path while sacrificing accuracy within a certain level. It can strike a balance between accuracy and time efficiency while being faced with different problems.
The paper is organized as follows. Section2 describes the proposed SPCD algorithm in detail. Section3 is experiment in five datasets. This subsection analyses accuracy and efficiency. Moreover the influence of community path number and community detection method to SPCD is discussed. We conclude the paper is Section4 and point out the future work.

Algorithm description
In this section, the proposed algorithm is described in detail. First, the community definition and detection is intro- duced, and then the method of constructing community graph is described. The k shortest community paths are given in subsection2.3. Finally, the shortest path in sub-graph is given.

Community definition and detection

Adopted symbols are listed in Table 1. Communities are groups of vertices which share common properties and/or play similar roles within the graph. Qualitatively, connections be- tween the nodes in a community are denser and closer than connections with the rest of the network. For SP in weighted social network, we define the community in such a way that the connections in the community have a lower cost but connections between the communities have higher cost. In this paper, we use distance to measure the relationship of any two nodes in the network. The smaller the distance, the more highly related the any two nodes. Thus the target of the SP problem is to find the minimal distance between any two nodes in the network. As for the other applications which need to find the maximum the distance, they can be easily trans- formed into this minimization problem by reverting the eval- uation function.
A demonstration of community in a network is shown in Fig. 1. The weight of edge between j and l is 20, which is
Table 1 Notation.


Symbols	Definition


G ¼ (V,E )	Target network, where V¼{v1,v2,…,vn} is the set of
vertices and E is the set of edges ei,j2E(i,j2V)	The non-negative edge between vertice i and j s,d	Source node and destination node
C	Community information of network
ci(i2V)	Vertice i's community


c	The set of nodes in community c
←———!—

that case, we can pay our attention to the large edges and find out the communities including the SP, and then searching the SP in these communities. As far as we know, there is no method using community information to solve P2P problem in weighted social network. In this paper, we propose a new shortest path algorithm based on community detection (SPCD). Using community information, SPCD can narrow
SG ¼ (SV,SE )	Sub-graph,SV is the set of vertices
and SE is the set of edges
Pij	The path from i to j
SP	The shortest path
jSPj	The weighted sum of SP
KSCP	The shortest path of community graph
SV'	Resort the SV
SP'	The shortest path in sub-graph



	


Fig. 1. Community detection by our definition.
Fig. 3. Edge between communities can replace the path.




much bigger than 0.2, the weight of edge between i and j, i.e. eij≪ejl. So according to our definition of community, nodes i and j are clustered into the same community (ci ¼ cj) while l is clustered to another community (cj s cl).
Xie J. et al. [2] suggest a general framework that uses Speaker-listener Label Propagation Algorithm (SLPA) to detect communities and it clusters the bigger edges into a community for weighted network. In this case, we cannot use Xie's method directly. We reverse the target network before
performing SLPA. The reversal network is obtained as fol-
lows. First, find the maximum value of the weights of the edges, namely the maximum edge cost, denoted by maxe. Second, generate a positive value 1 or any other positive value and added with maxe, denoted by maxe', i.e. maxe' ¼ maxe+1.
Creating a positive value is to prevent the maximum edge from
becoming zero in the next step. Then the cost of the edges in the reversal network are maxe' minus the original corre- sponding non-negative cost. The cost of edges remains the
same if the cost is zero and we can get the reversal network (A example in Fig. 2). Through the above steps, the bigger edge in the original network is reversed to the smaller edge in the reversal network, so that the community information that
comes from performing the Xie's method on the reversal
and ejd, in other word, eij z esd, so Pij can be used to replace Psd and we can focus on the edges between community when searching the shortest path from node s to node d.
According to the above analysis, we can build the com- munity graph CG ¼ (CV,CE ) based on the result of commu- nity detection, where each vertices in CV represents a community of the original network and edges CE are the
minimum cost between each two communities min E .
Compared with the edges between communities, the cost of edges in the community is smaller and ignored temporarily, so we treat all the nodes in the community as one node, that is to say, the community these nodes located is the node of com- munity graph. There might be more than one edge between communities and we choose the minimum cost edge as the connection of community graph between corresponding community nodes. The aim of SP problem is searching the smallest path, so we select the minimum cost edge in this step. After that we model the original network to a new weighted community graph.
See an example in Fig. 4. The original network is clustered into three communities, so the community graph has three nodes CV ¼ {cv1,cv2,cv3}. Edge ce1,2 in community graph is equivalent to the minimum cost edge between community 1

network is the community information that suits our com- munity definition.
and 2 min ←——E————— !— ¼ 4.0, e.g. ce

1,2
¼ 4.0. In a similar way we


Constructing community graph

We construct the community graph to make full use of the network community information. According to our definition of community, these edges between communities have bigger cost, so we can use the edges between communities to represent these paths. In Fig. 3, we know eij is bigger than esi












Fig. 2. Transforming network into the reversal network.
get edges ce1,3 ¼ 3.3 and ce2,3 ¼ 8.0.

K shortest community paths

So as to find the SP in the original network, the shortest community path includes the SP should be found primarily.

Fig. 4. Building community graph.




  
Fig. 5. k shortest path in the community graph.


There is a situation that the SP is not included in the shortest community path but in the second shortest or k-th shortest community path, so the next step is calculate the k shortest community paths. K shortest paths problem means finding the top k paths from source node to destination node in order of increasing cost. If the number of paths from source community to destination community is less than k in our community graph, all the paths are selected.
Original network was modeled to community graph by our method. The real shortest path in the original network is included in the community graph. Moreover, there is a high probability that the actual shortest path can be found in the shortest community path. However, we cannot ignore the situation that the real shortest path is not concluded in the shortest community path, but in another path among the k shortest community paths. Based on the above analysis, we calculate the k shortest community paths
SPk¼{sp1,sp2,…,spk}, where jsp1j < jsp2j < … < jspkj. We use Yen's algorithm [22] to find the exact SPk from the source community cs to the destination community cd (See
example in Fig. 5). When the number of paths from s to d in the graph is less than k, we take all the existing paths as the SPk. If s and d are in the same community, the shortest community path is the community, and the k shortest
community paths are the community with its neighbor communities. Intuitively, the scale of community graph is far smaller than that of the original graph, so the SPk can be obtained efficiently.

The shortest path in sub-graph

We utilize the k shortest community paths to establish the search sub-graph. There may be two community paths intersect, e.g. sp1 ¼ (c1,c2,c3,c4,c5,c6) and sp2 ¼ (c11,c32,c3,c4,c5,c19) have same communities (c3,c4,c5), so we get the search communities C' ¼ c1,c2,…,cn by



striving for the intersection of the k shortest community paths. Next we get the nodes of sub-graph SV ¼ fc1, c2, …, cng, and sort from SV to SV'. For example, we obtain a set of sub-node
SV ¼ 5,3,8,22,66,…,88 that from the original graph and sorts
it as SV' ¼ 1,2,3,…,n. SE is equal to the cost between the


  		 

Fig. 6. Decrease the scale of graph by our method.


corresponding nodes in the original graph, e.g. se1,2 ¼ e5,3 that sub-node 1 is sorted from the original graph node 5 and 2 from 3. The following step is calculating the SP' by SP al-
gorithm in the sub-graph, but the node in SP' we get is from
SV', so we need to get the original SP from the SP' according to the sorting. If SP' ¼ 1,3,…,n, the SP we wanted is 5,8,…,88. The cost of the path jSPj ¼ jSP'j. From above we know that the SV is a part of V, in other words, sub-graph is
much smaller than the original network, so we can find the SP with less time.
Our algorithm utilizes community information to build a community network and find the community paths, then extracting sub-graph from the original network. Finally, obtaining the SP from the sub-graph. This community path can help us narrow down the search space size, so the searching time is saved (see a example in Fig. 6). A high precision requires a larger k, but the larger k leading to in- crease the time complexity, so we must set a proper k. The pseudo-codes for general algorithmic flow of this algorithm are listed in Algorithm.1.

Experiment and analysis
Our algorithm SPCD is implemented in Matlab 2012a. All the experiments were run on a Windows 7 server with 2 2.00 GHz Intel(R) Xeon(R) CPU E5-2620 and 64 GB of memory.

Datasets

We ran experiments in five collaboration networks in which the nodes mean scientists and a link between two scientists is established by their coauthorship of one or more scientific papers. Collaboration network has a more prom- ising source of data and this network is in some ways more truly a social network than many other networks [3].

Coauthorships in network science: coauthorship network of scientists (net-science) working on network theory and experiment including publications up until early 2006, as compiled by M. Newman in May 2006 [23]. The network has a total of 1589 scientists in it, from a broad variety of fields [23].
High-energy theory (hep-th) collaborations: weighted network of coauthorships between scientists posting preprints on the High-Energy Theory E-Print Archive [3] between Jan 1, 1995 and December 31, 1999 [24]. The network contains 8361 nodes and 15751 edges.
Astrophysics collaborations (astro-ph): weighted network of coauthorships between scientists posting preprints on the Astrophysics E-Print Archive [25] between Jan 1, 1995 and December 31, 1999 [24]. The network contains
16706 nodes and 121251 edges.
Condensed matter collaborations 1999 (con-mat): weighted network of coauthorships between scientists posting preprints on the Condensed Matter E-Print Archive [26] between Jan 1, 1995 and December 31, 1999 [24]. The network contains 16726 nodes and 47594 edges.


Datasets of nuclear experiment (nucl-ex): published in Los Alamos e-Print Archive [27] from December 1994 to the present. We construct the network of every year from 1994 to 2014 and make some statistics. The authors (i.e. vertices) that identify each author by his or her surname and first initial only [3] and weight [5] are defined by M. Newman.

The scale of these collections is listed in Tables 2 and 6.

Performance evaluation

We evaluate the accuracy of the proposed algorithm in the search process for the SP between nodes. We choose 500 existing pairs of nodes randomly and run 10 times indepen- dently for each dataset to get average accuracy. The approximation error aper is:
XN dbi — di ,

	

where di is the actual distance for i-th pair of nodes and di is the approximation value. The actual distance was measured by dijkstra's algorithm [28] with time complexity O(n2). It
can be optimized to O(|E| + |V |log|V|) by a Fibonacci heap
[29]. We must guarantee a minimum aper that is different in some cases. Set the minimum aper = 0.05 for all the datasets in this paper. The improve time:
XN  ti ,

eff =

i=1
	N
~ti


's algorithm and t is that by

where ti is the run time by dijkstra	ei

Experimental results

There are too many networks so that we show the experimental results in two tables (Tables 3 and 7). In Table 7, we can see that time efficiency increase by numerous times in efficiency by our method in the case of high pre- cision that aper ≤ 0.05. The number is the aper in the parentheses. For net-science network, the aper is 0.0363 that approximately equals zero, while the eff is 387.58. In the other three networks, the greatest aper that is 0.0479 of con-mat less than 0.05, and the eff is 2740.48. For astro-ph network, its eff is nearly reach up to 3000 with that aper is 0.0473. It is shows that SPCD can find the SP in a very tiny sub-graph network.
In these networks (see Table 3), we set k to 1 in most cases and get the approximate shortest path with high time effi- ciency. The eff of 1998 is 104.7 and the eff from 1995 to 1997 is less than 100, but their aper are zero. It means that we can find the exact SP with improvement efficiency. Maximum eff is 701.9 in 2010 and the eff is greater than 300 since 2004,


Table 4
The suitable k in small-scale network.
Nuclear experiment	net-science


Table 5
The suitable k in large-scale network.
Nuclear experiment	hep-th	astro-ph	con-mat


Table 6
Some fundamental statistics for the studied collaboration networks.



Table 7
Computational efficiency: the time of calculate SP and eff.


although 2012's eff is only 94.51 but it is obvious that our algorithm is effective.

Parameter k

The result will be more accurate with the increase of k, the number of shortest community path. Though k is set to 1 in
most cases in nuclear experimental datasets for small aper, large-scale network needs greater k if we require that aper ≤ 0.05. In small-scale network nuclear experiment that from 1995 to 2006 and network science (see Table 4), we only need a small k to obtain a very high accuracy shortest path (above 99%), but we can find these paths much efficiently. Big k would be needful in large-scale network for similar or required accuracy (see Table 5), especially, in hep-th, con-mat and astro-ph. In this case, our algorithm still has a valuable effect in efficiency.
For small-scale network, a smaller k may result in better results, but for a large-scale network, we need to select a suitable k to obtain satisfying results. Fig. 7, the accuracy of the results greatly improved with the increasing of k. As shown in Fig. 7, the aper has a rapid decrease with increasing of k, which indicates that the proposed method could find the scope of SP efficiently. From the aspect of practical application, you can choose the appropriate k to satisfy the requirement for accuracy.
As we know, k is associated with the size of the sub-graph, so that the size of subgraph will increased and the efficiency of



Fig. 7. The aper with k in nuclear experiment datasets.



search will reduced with the increasing of k. Fig. 8 confirm our analysis. In the nuclear experiment network datasets, the ef- ficiency of searching the shortest path will be weakened with the increase of k. Taking this into account, we need a smaller k to protect the efficiency, i.e. a great eff. In the astro-ph, con- mat and hep-th, eff will also deteriorated with the increasing of k.
We can learn from the above experimental results that the accuracy and efficiency are the two objectives to be optimized in the proposed method. Increasing k can improve the result accuracy but damage the efficiency. It is desirable that we need great eff and (1—aper) (small aper is perfect), but we can't
make both great from Fig. 9. Then we need a tradeoff of
accuracy and efficiency that aper is less than 0.05 in our experiment.
SPCD uses community information to search the SP, so we need an accurate community detection method. We choose two different approaches that BGLL and SHRINK for general network and one that SLPA for the social network.
Fig. 10 compares the aper returned by the three community detection methods. It is observed that SLPA and BGLL per- formed well while SHRINK can not be used in our method on account of the poor aper. Between SLPA and BGLL, SLPA is better from the network of nucl-ex2010, nucl-ex2012 to nucl- ex2014. In Fig. 11, it obvious that BGLL has the worst effi- ciency even though it may be better than SLPA in nucl-



   

Fig. 8. The eff with k in nuclear experiment datasets.


Fig. 9. The conflict between aper and eff.


 

Fig. 10. The aper of three communities on nul-ex datasets.


Fig. 11. The eff of three communities on nul-ex datasets.


ex2012, so the SLPA is the most suitable community detection method for SPCD of aper and eff considers.

Conclusions
In this paper, we proposed a novel and efficient method for P2P shortest path problem on social network. Our method is based on community structure, which could classify the edges into two parts according to cost. Then we construct commu- nity graph so as to narrow down the scope of SP and search the SP efficiently. A suitable shortest community path number k could guarantee the approximation error. Extensive experi- mental results on five real-world networks of collaboration
networks demonstrated the efficiency and approximation error. For given limit, our algorithm has excellent performance. In particular, various community detection methods could be used in this algorithm. In the future, we will focus on the development of a heuristic method for combining social network community information for SP problem in weighted social networks. Otherwise, it will be interesting to study the community detection algorithm suited to the social network.

References
J. Scott, P.J. Carrington, The SAGE Handbook of Social Network Analysis, SAGE publications, 2011.



J. Xie, B.K. Szymanski, X. Liu, Slpa: Uncovering overlapping commu- nities in social networks via a speaker-listener interaction dynamic process, in: Data Mining Workshops (ICDMW), 2011 IEEE 11th Inter- national Conference on, IEEE, 2011, pp. 344e349.
M.E. Newman, Phys. Rev. E 64 (1) (2001) 016131.
M. Potamias, F. Bonchi, C. Castillo, A. Gionis, Fast shortest path dis- tance estimation in large networks, in: Proceedings of the 18th ACM Conference on Information and Knowledge Management, ACM, 2009,
pp. 867e876.
M.E. Newman, Phys. Rev. E 64 (1) (2001) 016132.
G.R. Jagadeesh, T. Srikanthan, K. Quek, Intelligent Transp. Syst. IEEE Trans. 3 (4) (2002) 301e309.
S. Jung, S. Pramanik, Knowl. Data Eng. IEEE Trans. 14 (5) (2002) 1029e1046.
H.A. Karimi, J. Intelligent Transp. Syst. 3 (2) (1996) 111e127.
B. Liu, IEEE Trans. 27 (4) (1997) 436e448.
P. Sanders, D. Schultes, Highway hierarchies hasten exact shortest path queries, in: AlgorithmseEsa 2005, Springer, 2005, pp. 568e579.
L. Fu, D. Sun, L.R. Rilett, Comput. Operations Res. 33 (11) (2006) 3324e3343.
M. Girvan, M.E. Newman, Proc. Natl. Acad. Sci. 99 (12) (2002) 7821e7826.
M.E. Newman, Phys. Rev. E 69 (6) (2004) 066133.
F. Radicchi, C. Castellano, F. Cecconi, V. Loreto, D. Parisi, Proc. Natl. Acad. Sci. U S A 101 (9) (2004) 2658e2663.
M.E. Newman, M. Girvan, Phys. Rev. E 69 (2) (2004) 026113.
X. Xu, N. Yuruk, Z. Feng, T.A. Schweiger, Scan: A structural clustering algorithm for networks, in: Proceedings of the 13th ACM SIGKDD In- ternational Conference on Knowledge Discovery and Data Mining, ACM, 2007, pp. 824e833.
Y.-Y. Ahn, J.P. Bagrow, S. Lehmann, Nature 466 (7307) (2010) 761e764.
V.D. Blondel, J.-L. Guillaume, R. Lambiotte, E. Lefebvre, J. Stat. Mech. Theory Exp. 2008 (10) (2008) 10008.
J. Huang, H. Sun, J. Han, H. Deng, Y. Sun, Y. Liu, Shrink: A structural clustering algorithm for detecting hierarchical communities in networks, in: Proceedings of the 19th ACM International Conference on Informa- tion and Knowledge Management, ACM, 2010, pp. 219e228.
M.-G. Gong, L.-J. Zhang, J.-J. Ma, L.-C. Jiao, J. Comput. Sci. Technol. 27 (3) (2012) 455e467.
M. Gong, J. Liu, L. Ma, Q. Cai, L. Jiao, Phys. A Stat. Mech. Appl. 403 (2014) 71e84.
J.Y. Yen, Manag. Sci. 17 (11) (1971) 712e716.
M.E. Newman, Phys. Rev. E 74 (3) (2006) 036104.
M.E. Newman, Proc. Natl. Acad. Sci. 98 (2) (2001) 404e409.
http://arxiv.org/archive/astro-ph.
http://arxiv.org/archive/cond-mat.
http://arxiv.org/archive/nucl-ex.
E.W. Dijkstra, Numer. Math. 1 (1) (1959) 269e271.
M.L. Fredman, R.E. Tarjan, J. ACM (JACM) 34 (3) (1987) 596e615.
