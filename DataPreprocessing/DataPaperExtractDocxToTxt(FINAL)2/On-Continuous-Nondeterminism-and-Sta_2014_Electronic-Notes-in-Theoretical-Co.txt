Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 308 (2014) 3–23
www.elsevier.com/locate/entcs

On Continuous Nondeterminism and State Minimality
Jiˇr´ı Ad´amek, Robert S. R. Myers, Henning Urbat
Institut fu¨r Theoretische Informatik Technische Universit¨at Braunschweig Germany
Stefan Milius
Lehrstuhl fu¨r Theoretische Informatik Friedrich-Alexander-Universit¨at Erlangen-Nu¨rnberg
Germany

Abstract
This paper is devoted to the study of nondeterministic closure automata, that is, nondeterministic finite automata (nfas) equipped with a strict closure operator on the set of states and continuous transition structure. We prove that for each regular language L there is a unique minimal nondeterministic closure automaton whose underlying nfa accepts L. Here minimality means no proper sub or quotient automata exist, just as it does in the case of minimal dfas. Moreover, in the important case where the closure operator of this machine is topological, its underlying nfa is shown to be state-minimal. The basis of these results is an equivalence between the categories of finite semilattices and finite strict closure spaces.
Keywords: Canonical Nondeterministic Automata, State Minimality, Closure Spaces, Semilattices

Introduction
Why are state-minimal deterministic finite automata (dfas) easy to construct, whilst no efficient minimization procedure for nondeterministic finite automata (nfas) is known? Let us start with the observation that minimal dfas are built inside the category Setf of finite sets and functions and are characterized by having no proper subautomata (reachability) and no proper quotient automata (simplicity). Nfas can be regarded as dfas interpreted in the category Relf of finite sets and relations, and so one might hope to build minimal nfas in the same way as minimal dfas, but now in Relf . However, there is a significant difference: Setf is both finitely complete and cocomplete, yet Relf does not have coequalizers, i.e., canonical quotients. The lack of such canonical constructions provides evidence for the lack of canonical state- minimal nfas.

http://dx.doi.org/10.1016/j.entcs.2014.10.002
1571-0661/© 2014 Elsevier B.V. All rights reserved.

This suggests the following strategy: form the cocompletion of Relf obtained by freely adding canonical quotients, which turns out to be the category JSLf of finite join-semilattices (see Appendix), and build minimal automata in this larger cate- gory. Every nfa may be viewed as a dfa in JSLf via the usual subset construction. In order to obtain more efficient presentations of nfas, avoiding the full power set of states, we make use of a categorical equivalence between JSLf and the category Clf of finite strict closure spaces [2]. The objects of the latter are finite sets Z equipped with a strict closure operator (i.e., an extensive, monotone and idempotent map clZ : PZ → PZ preserving the empty set), and the morphisms are continuous relations, see Definitions 2.9 and 2.10 below. For example, every finite topological space induces a finite strict closure space; these closures are called topological.
Just as nfas may be viewed as deterministic automata interpreted in Relf , non- deterministic closure automata (ncas) are deterministic automata interpreted in Clf : an nca is an nfa with a strict closure operator on its set of states, continuous transition relations, an open set of final states and a closed set of initial states. Since the category Clf has the same relevant properties as Setf , we derive for each regular language L ⊆ Σ∗ the existence of a unique minimal nca N (L) whose un- derlying nfa (forgetting the closure operator) accepts L. It is minimal in the sense that it has no proper subautomata (reachability) and no proper quotient automata (simplicity), and can be constructed in a way very much analogous to Brzozowski’s classical construction of the minimal dfa [6]: starting with any nca N accepting L, one has
N (L)= reach ◦ rev ◦ reach ◦ rev(N )
where reach and rev are continuous versions of the reachable subset construction and the reversal operation for nfas, respectively.
The states of N (L) are the prime derivatives of L, i.e., those non-empty deriva- tives w−1L = {v ∈ Σ∗ : wv ∈ L} of L that do not arise as a union of other derivatives. The underlying nfa of N (L) accepts L, thus it is natural to ask when this nfa is state-minimal. Our main result is:
If the closure of N (L) is topological then the underlying nfa is state-minimal.
In other words, we identify a natural class of regular languages for which canonical
state-minimal nondeterministic acceptors exist.
Related Work. Our paper is inspired by the work of Denis, Lemay and Terlutte [7] who define a canonical nondeterministic acceptor for each regular language L. In fact, the underlying nfa of our minimal nca N (L) is precisely their ‘canonical resid- ual finite state automaton’, and our Brzozowski construction of N (L) in Section 3 generalizes their construction in [7, Theorem 5.2]. The main conceptual difference is that the latter works on the level of nfas, while our construction takes the con- tinuous structure of nondeterministic closure automata into account. We hope to convince the reader that ncas provide the proper setting in which to study these canonical nfas and their construction.
We have introduced nondeterministic closure automata in [2] where we demon-

strated that ncas – as well as related machines like the ´atomaton of Brzozowski and Tamm [5] – are instances of a uniform coalgebraic construction. There we also gave various simple criteria for nondeterministic state minimality. The present paper can be understood as an in-depth study of ncas, extending the results from [2] and [7] in two ways: firstly, we provide a richer and more conceptual way of constructing the minimal nca N (L) (compared to [7]) by working with closures. Secondly, we prove that the underlying nfa of N (L) is state-minimal provided that N (L) has topological closure, thereby generalizing a much weaker criterion from [2].

From Deterministic JSL-Automata to Nondetermin- istic Closure Automata
In this section we consider deterministic automata interpreted in the category of join-semilattices, and explain how they induce nondeterministic closure automata. We shall assume familiarity with basic concepts from category theory (categories, functors, duality and equivalence).
Notation 2.1 Throughout this paper we ﬁx an alphabet Σ. The composition of relations R ⊆ A×B and S ⊆ B×C is S◦R = {(a, c): ∃b ∈ B.(a, b) ∈ R∧(b, c) ∈ S}. Moreover R[A∗] = {b ∈ B : ∃a ∈ A∗.(a, b) ∈ R} denotes the R-image of a subset A∗ ⊆ A, and we write R[a] instead of R[{a}].
Let us first recall deterministic and nondeterministic finite automata and provide them with suitable morphisms.
Definition 2.2 (1) A nondeterministic ﬁnite automaton (nfa) N = (Z, Ra,F ) consists of a finite set Z of states, transition relations Ra ⊆ Z × Z for ev- ery a ∈ Σ, and a set F ⊆ Z of final states. A pointed nfa (N, I) is additionally equipped with a set of initial states I ⊆ Z.
(2) Nfas form a category Nfa whose morphisms B : (Z, Ra,F ) → (Z,∗ , R∗ ,F∗) are relations B⊆ Z × Z∗ that preserve and reflect transitions (i.e. R∗ ◦B = B◦ Ra) and moreover z ∈ F iff B[z] ∩ F∗ /= ∅. Likewise we have the category Nfa∗ of pointed nfas, whose morphisms B : (N, I) → (N∗,I∗) are additionally required to satisfy B[I]= I∗.
Remark 2.3 Our choice of Nfa-morphisms B is sound: for each z ∈ Z the pointed nfas (Z, Ra, F, {z}) and (Z∗, R∗ ,F∗, B[z]) accept the same language.
Definition 2.4 (1) A deterministic ﬁnite automaton (dfa) is an nfa D = (Q, δa,F ) whose transition relations δa : Q → Q are functions. A pointed dfa (D, q0) is a dfa equipped with a single initial state q0 ∈ Q. Morphisms of (pointed) dfas are precisely the Nfa- (resp. Nfa∗-)morphisms that are functions.
(2) A deterministic automaton (da) is defined in analogy to to (1), except that the set of states is not required to be finite.
We are mainly interested in d(f)as carrying a semilattice structure.

Notation 2.5 Let JSL denote the category of (join-)semilattices with a bottom element ⊥, whose morphisms are ⊥-preserving semilattice homomorphisms. JSLf is the full subcategory of finite semilattices.
One can view the final states of a da (Q, δa,F ) as a predicate f : Q → {0, 1} with F = f−1({1}). This suggests the following definition: a JSL-da is a da whose state set Q carries a semilattice structure, such that the transitions δa : Q → Q and the final state predicate f : Q → 2 are semilattice morphisms. Here 2 denotes the 2-chain 0 < 1. Note that to give a morphism f : Q → 2 means precisely to give a prime filter F ⊆ Q, i.e., ⊥Q ∈/ F and q ∨Q q∗ ∈ F iff q ∈ F or q∗ ∈ F . Indeed, given f , the set F = f−1({1}) is a prime filter, and conversely every prime filter of Q arises in this way. Therefore:
Definition 2.6 (a) A JSL-da is a triple D = (Q, δa,F ) where Q is a semilattice of states, the a-transitions δa : Q → Q are semilattice homomorphisms for a ∈ Σ, and the ﬁnal states F ⊆ Q form a prime ﬁlter. Given another JSL- da D∗ = (Q∗, δ∗ ,F∗), a morphism h : D → D∗ is a semilattice homomorphism h : Q → Q∗ such that δ∗ ◦ h = h ◦ δa and q ∈ F iff h(q) ∈ F∗. We denote by Jda the category of all JSL-das, and by Jdfa the full subcategory of JSL-dfas, that is, JSL-das with a ﬁnite set of states.
A pointed JSL-da (D, q0) is a JSL-da D = (Q, δa,F ) with an initial state q0 ∈ Q. Morphisms of pointed JSL-das must additionally preserve the initial state. Jda∗ denotes the category of pointed JSL-das, and Jdfa∗ the full subcategory of pointed JSL-dfas.
The language accepted by a pointed JSL-da (D, q0) is the language accepted by its underlying da, that is, the set
LD(q0)= {w ∈ Σ∗ : δw(q0) ∈ F}

where δw : Q → Q is the usual inductive extension of the transition function given by δε = idQ and δwa = δa ◦ δw.
Example 2.7 (1) Take any nfa N = (Z, Ra,F ). The usual determinization via the subset construction is a JSL-dfa. Indeed, the states PZ form a semilattice
w.r.t. union, the transitions preserve binary unions and the empty set, and the final states {A ⊆ Z : A ∩ F /= ∅} form a prime filter.
Let PΣ∗ be the semilattice (w.r.t. union) of all languages over Σ. It carries the structure of a JSL-da whose transitions are given by L → a−1L (a ∈ Σ) and whose final states F are precisely the languages containing the empty word. This automaton DPΣ∗ = (PΣ∗, a−1(−),F ) is easily seen to be the ﬁnal JSL- da: every JSL-da has a unique Jda-morphism into DPΣ∗ , namely the function mapping each state to the language it accepts.
Let DReg(Σ) be the subautomaton of DPΣ∗ whose states are the regular languages over Σ. It can be characterized up to isomorphism by the property that every JSL-dfa has a unique Jda-morphism into DReg(Σ).

Remark 2.8 Readers familiar with the theory of coalgebras will immediately notice that JSL-das correspond to coalgebras for the functor T = 2 × IdΣ : JSL → JSL. The examples (2) and (3) above then state precisely that DPΣ∗ is the final T -coalgebra and DReg(Σ) is the final locally finite T -coalgebra, see [9].
In [2] it was proved that the category JSLf of finite semilattices is equivalent to the category of finite strict closure spaces. We recall the necessary concepts.
Definition 2.9 A closure operator (shortly, a closure) on a set Z is a monotone, idempotent and extensive function clZ : PZ → PZ, that is,
A ⊆ B

clZ
⊆ clZ
,	clZ(A) ⊇ A,	clZ ◦ clZ = clZ,	for all A, B ⊆ Z.

A closure space (Z, clZ) is a set with a closure deﬁned on it. It is finite if Z is ﬁnite and strict if clZ(∅)= ∅. A subset A ⊆ Z is closed if clZ(A)= A and open if its complement A¯ ⊆ Z is closed. We write clZ(z) for clZ({z}).
Definition 2.10 Let Z1 and Z2 be ﬁnite strict closure spaces. Then a relation
B⊆ Z1 × Z2 is said to be continuous if:
For each z ∈ Z1, the image B[z] ⊆ Z2 is closed in Z2.
B[clZ1 (A)] ⊆ clZ2 (B[A]) for all subsets A ⊆ Z1.
Given two continuous relations B1 : Z1 → Z2 and B2 : Z2 → Z3 we deﬁne their
continuous composition as follows:
B2 • B1 = {(z1, z3) ∈ Z1 × Z3 : z3 ∈ clZ3 (B2 ◦ B1[z1])} : Z1 → Z3.
That is, one forms the usual relational composition and takes the closure in Z3. The
continuous identity is deﬁned by idZ = {(z, z∗) ∈ Z × Z : z∗ ∈ clZ(z)}.
Definition 2.11 Let Clf denote the category of finite strict closure spaces and continuous relations, with continuous composition and identities.
Remark 2.12 Strict closure spaces can be regarded as generalized topological spaces. Indeed, every topological space Z induces a strict closure space (Z, clZ) where clZ is the usual topological closure operator. It preserves finite unions, i.e.,
clZ(A ∪ B)= clZ(A) ∪ clZ(B)	for all A, B ⊆ Z.	(∗)
Conversely, every strict closure space Z satisfying (∗) arises from a topological space. Moreover, if B : Z1 → Z2 is a function between topological spaces and Z2 is a T1 space, then B is continuous in the sense of topology iff it is continuous in the sense of Definition 2.10.
Definition 2.13 A closure clZ satisfying (∗) is called topological.
Definition 2.14 Let Q be a ﬁnite semilattice, so that it is a lattice with meet
q ∧Q q∗ =	{r : r ≤Q q and r ≤Q q∗}
Q

and top element
TQ =	{q : q ∈ Q}.
Q
Then q ∈ Q is join-irreducible (resp. meet-irreducible) if (i) q /= ⊥Q (resp. q /= TQ) and (ii) whenever q = r VQ r∗ (resp. q = r ΛQ r∗) then q = r or q = r∗. Let J (Q), M (Q) ⊆ Q be the sets of join-irreducible and meet-irreducible elements of Q.
Lemma 2.15 (see [2]) The categories of ﬁnite semilattices and ﬁnite strict clo- sure spaces are equivalent. Indeed, the following functor G : JSLf → Clf is an equivalence:
GQ = (J (Q), clQ)	where clQ(A)= {j ∈ J (Q): j ≤Q	A}
Q
Gf = {(j, j∗) ∈ J (Q) × J (Q∗): j∗ ≤Q f (j)} : GQ → GQ∗
for any semilattice homomorphism f : Q → Q∗.
Remark 2.16 The associated equivalence C : Clf → JSLf maps a finite strict closure space Z to the semilattice CZ of all closed subsets of Z w.r.t. inclusion order. Its bottom is ∅ and it has joins A VCZ B = clZ(A ∪ B) (the meet being intersection). A continuous relation ¥ : Z1 → Z2 is mapped to
C¥ : CZ1 → CZ2,	C¥(A)= clZ2 (¥[A]).
The equivalence G lifts to an equivalence of automata, assigning to each JSL-dfa a corresponding ‘nondeterministic closure automaton’ in Clf .
Definition 2.17 (a) A nondeterministic closure automaton ( nca) is a triple N = (Z, Ra,F ) where Z is a ﬁnite strict closure space (of states), the transition relations Ra ⊆ Z ×Z are continuous for a ∈ Σ, and the ﬁnal states F ⊆ Z form an open set. Given another nca N∗ = (Z∗, R∗ ,F∗), a morphism ¥ : N → N∗ is a continuous relation ¥ : Z → Z∗ such that R∗ •¥ = ¥• Ra for each a ∈ Σ, and z ∈ F iff ¥[z] ∩ F∗ /= ∅. The category of ncas (and the above morphisms with continuous composition) is denoted Nca.
A pointed nca (N,I) is an nca N = (Z, Ra,F ) equipped with a closed subset I ⊆ Z of initial states. Morphisms ¥ between pointed ncas must additionally satisfy clZ∗ (¥[I]) = I∗. The category of pointed ncas is denoted Nca∗.
The language accepted by a pointed nca (N,I) is the set LN (I) ⊆ Σ∗ of words
w such that some state in I has some w-path to a ﬁnal state.
Remark 2.18 (1) Every nfa N = (Z, Ra,F ) may be viewed as an nca where Z is discrete, i.e., it has the identity closure clZ = idPZ. This nca is well-defined because (i) every relation between discrete closure spaces is continuous and (ii) every subset of a discrete closure space is both open and closed. Therefore we have full embeddings Nfa ‹→ Nca and Nfa∗ ‹→ Nca∗.
(2) Every (pointed) nca has an underlying (pointed) nfa where we forget the closure. In contrast to the previous statement, this does not define functors Nca → Nfa

and Nca∗ → Nfa∗ because composition of Nca-morphisms is not the relational composition. Note that the language LN (I) accepted by a pointed nca (N,I) is the language accepted by its underlying pointed nfa.

Lemma 2.19 (see [2]) The categories of (pointed) JSL-dfas and (pointed) ncas are equivalent. Indeed, the equivalence G : JSLf → Clf described above lifts to equivalences:


where F∗ = J (Q) ∩ F and Iq  = {q ∈ J (Q) : q ≤Q q0}. On morphisms we have
Gf = Gf and G∗f = Gf.

Proof. [Sketch] This follows from Lemma 2.15. Briefly, G : JSLf → Clf defines an equivalence and one can apply it to the carrier Q and each homomorphism δa of a JSL-dfa. Furthermore, the final states arise as a morphism Q → 2 and initial states as a morphism 2 → Q, so one may again apply G. The resulting structure is the equivalent (pointed) nca.	2

Hence JSL-dfas and ncas are essentially the same structures, although the latter have the significant advantage of having fewer states. For example, if a JSL-dfa has free carrier, then the corresponding nca is exponentially smaller. The languages accepted by JSL-dfas and ncas are by definition just the languages accepted by their underlying dfas and nfas, respectively, and are preserved by the equivalence:

Lemma 2.20 A pointed JSL-dfa accepts the same language as its equivalent pointed nca, i.e., LD(q)= LN (I) where (N,I)= G∗(D, q).

Proof. Let D = (Q, δa,F ) and recall I = J (Q) ∩ ↓Qq, where ↓Qq = {q∗ ∈ Q : q∗ ≤ q}. Then w ∈ LD(q) iff δw(q) ∈ F by definition. Equivalently w ∈ LD(q) iff f ◦ δw ◦ i = id2 where the JSLf -morphism i : 2 → Q is defined i(1) = q (and, necessarily, i(0) = ⊥Q) and the JSLf -morphism f : Q → 2 is defined f (q) = 1 iff q ∈ F , recalling that F is a prime filter.
Now f ◦ δw ◦ i = id2 iff Gf • Gδw • Gi = Gid2 = id{1} (where {1} has identity closure) because G is faithful, being an equivalence. Observe that Gi[1] = J (Q) ∩
↓Qq = I and also Gf ⊆ J (Q) × {1} is such that Gf [j] = {1} iff j ∈ F . We now show
Gf • Gδw • Gi = id{1}	(1)
iff there exists j ∈ I such that Gδw[j] ∩ F /= ∅. The latter is equivalent to saying that GD accepts w via the initial states I.

Assuming acceptance implies (1) because the relation Gδw •Gi contains Gδw ◦Gi.
Conversely, assuming (1), first observe that:
Gδw • Gi[1]	= clQ(Gδw ◦ Gi[1])
= clQ(  j∈I{j0 ∈ J (Q): j0 ≤Q δw(j)})
= {j∗ ∈ J (Q): j∗ ≤  Q{δw(j): j ∈ I}}.
Then (1) implies that Gδw • Gi[1] has non-empty intersection with F , i.e., there exists j∗ ≤Q  Q{δw(j): j ∈ I} such that j∗ ∈ F ∩ J (Q), so in particular j∗ /= ⊥Q. Since F is upwards closed, there is some non-zero δw(j) ∈ F (where j ∈ I) and hence also some non-zero join-irreducible beneath δw(j) lies in F . This implies Gδw[j] ∩F is non-empty.	2

Reversal, Reachability and Minimality
The purpose of the present section is to prove that every regular language L has an associated minimal pointed nca N (L) accepting L, which is unique up to iso- morphism. We also present a construction of this minimal pointed nca, which is analogous to Brzozowski’s classical construction of the minimal pointed dfa [6] (see also [4] for a (co-)algebraic view). Recall that the latter takes any pointed nfa (N, I) accepting L and constructs L’s minimal dfa as follows:
reach ◦ rev ◦ reach ◦ rev(N, I)	(2) Here rev reverses transitions and also swaps the final and initial states,
(N, I)= (Z, Ra, F,I)	=⇒	rev(N, I)= (Z, R˘a,I,F ),
where R˘a denotes the converse of the relation Ra. Furthermore, reach performs the reachable subset construction, i.e., it forms the subset dfa and takes its reachable part. In this section we introduce these two operations for pointed ncas. We then prove that the minimal pointed nca N (L) arises in exactly the same way as (2), only now taking any pointed nca accepting L as input. In particular, any pointed nfa will do.
The above nfa operation rev extends to a self-duality of the category Nfa∗ of pointed nfas, defined on objects as above and on morphisms by ¥ '→ ¥˘. To see that it works on the final/initial states, let F = {(z, ∗) : z ∈ F} ⊆ Z × 1 and
I = {(∗, z) : z ∈ I} ⊆ 1 × Z where 1 = {∗}. Then we can rewrite our conditions on Nfa∗-morphisms (see Definition 2.2) as F∗ ◦¥ = F and ¥◦ I = I∗, which clearly dualize under converse. Therefore in order to generalize rev to pointed ncas, we describe a suitable self-duality of Nca∗. It is based on the well-known self-duality of JSLf :
Lemma 3.1 The following functor D : JSLop → JSLf is an equivalence: on objects let DQ = Qop (which has carrier Q, bottom TQ and join ΛQ) and on morphisms

f : Q1 → Q2 deﬁne Dfop : Qop → Qop by
2	1


Dfop(q2)=	{q1 ∈ Q1 : f (q1) ≤Q
Q1
q2}.

Proof. [Sketch] The self-duality of JSLf follows from the adjoint functor theo- rem for posets. Finite join-semilattices are finite posets with all joins (= colimits) and join-semilattice morphisms are monotone maps that preserve all joins. Con- sequently, each f : Q1 → Q2 has a right adjoint g : Qop → Qop where the order
2	1
is reversed because right adjoints preserve all meets. The uniqueness of adjoints
implies that this is an equivalence. Its explication yields the above action on the morphisms.	2
Since JSLf is equivalent to Clf (see Lemma 2.15 and Remark 2.16), it follows that Clf is also self-dual, with dual equivalence

D = ( Clop
Cop zJS,Lop  D zJS,L
  G  zCl,f ).


We now describe this self-duality explicitly. Recall that CZ denotes the semilattice of closed subsets of a finite strict closure space Z, and that M (CZ) is the set of meet-irreducibles of CZ.
Proposition 3.2 For any ﬁnite strict closure space Z we have
DZ = M (CZ)	clDZ(X)= {A ∈ M (CZ):  X ⊆ A},

and for any ¥ : Z1 → Z2, the continuous relation D¥op : M (CZ2) → M (CZ1)
consists of all those (A2, A1) ∈ M (CZ2) × M (CZ1) such that:
¥[A] ⊆ A2	=⇒	A ⊆ A1	for every A ∈ J (CZ1).

Proof. We have DZ = G((CZ)op) = (M (CZ), cl) where M (CZ) = J ((CZ)op) ⊆
Q are the meet-irreducibles and:

cl(S) = {j ∈ J ((CZ)op): j ≤(CZ)op  (CZ)op S}
= {m ∈ M (CZ):  CZS ≤CZ m}
= {m ∈ M (CZ):  S ⊆ m}

using the fact that the meet in CZ is intersection. Likewise every JSLf -morphism f : Q → Q∗ has a dual morphism Dfop : Q∗op → Qop defined Dfop(q∗)= Q f−1(↓Q∗ q∗). Therefore every continuous relation ¥ : Z → Z∗ has a dual continuous relation D¥op : DZ∗ → DZ defined as follows: let f = C¥ be the JSLf -morphism corre- sponding to ¥ and then apply the equivalence G : JSLf → Clf to the homomorphism

Dfop. Then

D¥op = {(j∗, j) ∈ J (Q∗op) × J (Qop): j ≤Qop Dfop(j∗)}
= {(m∗, m) ∈ M (Q∗) × M (Q):	Q f−1(↓Q∗ m∗) ≤Q m}
= {(m∗, m): ∀j ∈ J (Q).(f (j) ≤Q∗ m∗ ⇒ j ≤Q m)}
= {(m∗, m): ∀j ∈ J (Q).(clZ (¥[j]) ≤Q∗ m∗ ⇒ j ≤Q m)}
= {(m∗, m): ∀j ∈ J (Q).(¥[j] ≤Q∗ m∗ ⇒ j ≤Q m)}
In the last step we use that B[j] is closed since ¥ is continuous.	2

Given any pointed nca (Z, Ra, F,I), the previous duality naturally leads to a pointed nca with states M (CZ) by applying D to (a) Ra : Z → Z, (b) F considered as a continuous relation F : Z → {1} and (c) I considered as a continuous relation I : {1} → Z. This is the reversal of pointed ncas: by applying D to F we get the subset Id ⊆ M (CZ) of all A ∈ M (CZ) containing Z \ F . By applying D to I we get the subset Fd ⊆ M (CZ) of all A ∈ M (CZ) with I /⊆ A.
Definition 3.3 The reversal of a pointed nca is deﬁned by
rev(Z, Ra, F,I)= (M (CZ), DRop,Fd,Id).
Example 3.4 Take any pointed nfa and view it as a pointed nca with identity closure. Then CZ = PZ has meet-irreducibles Z \ {z} for z ∈ Z and the reversal is the classical nfa reversal, modulo the bijection z '→ Z \ {z}.
Theorem 3.5 The category Nca∗ is self-dual: the object map rev extends to an equivalence rev : Ncaop → Nca∗. It assigns to every morphism ¥ : (Z, Ra,I,F ) → (Z∗, R∗ ,I∗,F∗) the morphism rev(¥) ⊆ M (CZ∗) × M (CZ) of all pairs (A∗, A) such

that

¥[X] ⊆ A∗	=⇒	X ⊆ A	for every X ∈ J (CZ).

Proof. In Definition 3.3 we defined the object part of the dual equivalence rev :
Ncaop → Nca. We now prove that it actually defines a functor.
The action on continuous relations Ra and Nca∗-morphisms ¥ is the action of
D, see Proposition 3.2.
The initial states form a closed set I ∈ CZ, or equivalently a join-semilattice morphism i : 2 → CZ such that i(1) = I. Dually we have the join-semilattice morphism i∗ = Diop : (CZ)op → 2op defined by


i∗(x)= _ i−1(↓CZ
x) =	T2op  =0	if i(1) /≤CZ x
1	otherwise

2

Therefore the new final states are:
F  = J ((CZ) ) ∩ i	(T2op )
= {m ∈ M (CZ): I /≤CZ m}
= {m ∈ M (CZ): I /⊆ m}.

The final states F form an open set in (Z, clZ), or equivalently a join-semilattice morphism f : CZ → 2 such that Z \ F = CZ f−1({0}). The dual join- semilattice morphism f∗ = Dfop : 2op → (CZ)op is defined by f∗(b) =
  CZ f−1(↓2b). Consequently:
Id = {j ∈ J ((CZ)op): j ≤(CZ)op f∗(T2op )}
= {m ∈ M (CZ):	CZ f−1({0}) ≤CZ m}
= {m ∈ M (CZ): Z \ F ⊆ m}.

2
Proposition 3.6 If a pointed nca accepts L then its reverse pointed nca accepts the reversed language rev(L).
Proof. A pointed JSL-dfa (Ð, q)= (Q, δa, F, q) accepts a word w iff f ◦δw ◦ i = id2, where f : Q → 2 represents the final states, δw is the inductive extension of the δa’s and i : 2 → Q represents q ∈ Q. Now Jdfa∗ is self-dual (because Nca∗ is) with
dual pointed JSL-dfa (Qop, Dδop, †Qop q,  (Z \ F )). The dual of the equality above
Q
is Diop ◦ Dδop ◦ Dfop = id2op and furthermore Di corresponds to the ﬁnal states in the dual machine, just as Df corresponds to the initial states. Consequently (Ð, q) accepts w iff its dual machine accepts the reversed word wr. This property is inherited by Nca∗ because the equivalence G∗ : Jdfa∗ → Nca∗ preserves languages, see Lemma 2.20.	2
Next we extend the operation reach from nfas to pointed ncas. A pointed nfa is reachable if each state is reached from some initial state by transitions. Equivalently, the pointed nfa has no proper sub nfas. Here ‘sub nfa’ refers to the category Nfa∗
i.e. N∗ is a sub nfa of N if there isa morphism ¥ : N∗ → N where ¥ is an injective function. Implicitly one uses the (onto relation, injective function) factorization system in Relf and lifts it to Nfa∗. Similar remarks apply to sub dfas: (i) they arise as injective dfa morphisms via the (surjection, injection) factorization system of Setf , (ii) a pointed dfa is reachable iff it has no proper sub dfas.
In order to define reachable pointed ncas, we first need the appropriate concept of sub nca. To this end, we take the (epi, mono) = (surjection, injection) factorization system of JSLf and apply the equivalence of JSLf and Clf to obtain a corresponding factorization system in Clf .
Lemma 3.7 Every continuous relation ¥ : Z1 → Z2 has an essentially unique (epi,

mono)-factorization in Clf . Moreover, ¥ is monic (resp. epic) iff the function
C¥ : CZ1 → CZ2,	C¥(S)= clZ2 (¥[S]),
is injective (resp. surjective).
Proof. The functor C : Clf → JSLf preserves and reflects monos and epis, being an equivalence.	2
Definition 3.8 (a) A pointed nca (N∗,I∗) is a sub nca of (N,I) if there exists an
Nca∗-monomorphism m : (N∗,I∗) > (N,I).
A pointed nca (N∗,I∗) is a quotient nca of (N,I) if there exists an Nca∗- epimorphism e : (N,I) → (N∗,I∗).
A pointed nca is called reachable if it has no proper sub ncas, simple if it has no proper quotient ncas, and minimal if it is both reachable and simple.
Proposition 3.9 Any sub or quotient nca of (N,I) accepts the same language
LN (I).
Proof. Viewed as their equivalent pointed JSL-dfa, we have injective or surjective deterministic automata morphisms which preserve the initial state. These certainly preserve the language and by Lemma 2.20 the respective pointed ncas accept the same languages.	2
To obtain a more concrete characterization of reachability and simplicity, we shall restrict to ncas whose closure is normalized in the following sense:
Lemma 3.10 Every ﬁnite strict closure space Y is isomorphic to another ﬁnite strict closure space Z such that:
Z is separable, that is, z /= z∗ ∈ Z implies clZ(z) /= clZ(z∗).
S ∈ CZ is join-irreducible in CZ iff S = clZ({z}) for some z ∈ Z.
Proof.
Recall from Lemma 2.15 and Remark 2.16 the equivalence G : JSLf → Clf and its associated equivalence C : Clf → JSLf . Then Y is isomorphic to the closure space Z = GCY whose carrier J (CY ) is the set of join-irreducibles in CY and whose closure is defined by clGCY (S)= {j ∈ J (CY ): j ⊆ clY ( S)} for any S ⊆ J (CY ). This closure space GCY is separable: given distinct join-irreducibles j /= j∗ ∈ J (CY ) then wlog j ¢CY j∗, hence j /⊆ j∗ = clY (j∗) and j ∈/ clGCY ({j∗}). But clearly j∗ ∈ clGCY ({j∗}).
In any closure space Z∗, every join-irreducible in CZ∗ is the closure of some singleton set. For if S = clZ∗ (S) is join-irreducible and S = S1 ∪ S2 then S = clZ∗ (S1) VCZ∗ clZ∗ (S2) and hence wlog S = clZ∗ (S1). Continuing we get either S = clZ∗ (∅) = ∅ (a contradiction) or S is the closure of a singleton set. For the particular closure space GCY = (J (CY ), clCY ) we also have the converse, i.e., the closure of a singleton subset of J (CY ) is join-irreducible

in C(GCY ).  This follows because the closed sets of GCY  take the form
J (CY ) ∩ ↓CY S for some S ∈ CY and in particular the closure of a singleton
{j}, j ∈ J (CY ), consists of all join-irreducibles smaller than or equal to j. It follows that if clGCY ({j}) = K1 VC(GCY ) K2 then some Ki contains j by join-irreducibility of {j}, wlog j ∈ K1. Then clGCY ({j}) ⊆ clGCY (K1)= K1, and the converse is clear.
2
Definition 3.11 A (pointed) nca is normalized if its closure satisfies the conditions of Lemma 3.10.
Corollary 3.12 Every nca is isomorphic to a normalized nca.
Proposition 3.13 A normalized pointed nca (Z, Ra, F,I) is reachable iff for every
z ∈ Z there exists a word wz ∈ Σ∗ such that:
There is a wz-path from some initial state to z in the underlying nfa.
Every wz-path from every initial state terminates at an element of clZ(z).
Proof. Suppose (N,I) is a reachable pointed nca. Then by the equivalence of G∗ : Jdfa∗ → Nca∗, we have a corresponding pointed JSL-dfa (Ð,I)= (CZ, CRa,F∗,I). Its final states F∗ ⊆ CZ are defined F∗ = {A ∈ CZ : A ∩ F /= ∅}. Note I ∈ CZ is now a single state. By the equivalence of Nca∗ and Jdfa∗ we know that (Ð,I) has no proper subobjects i.e. every injective Jdfa∗-morphism into (Ð,I) is bijective. Viewing Ð as its underlying dfa, one can list those states reachable from the state I ∈ CZ via transitions and then construct the join-subsemilattice of CZ generated by this set. This defines a pointed sub JSL-dfa, using the fact that the transition functions CRa : CZ → CZ are JSLf -morphisms, hence an injective Jdfa∗-morphism which is necessarily bijective. It follows that every A ∈ CZ arises as a join of elements reachable from the single state I via transitions. In particular the join- irreducible elements must be reachable from I via transitions, since they form the minimal generating set. So take any element z ∈ Z and consider its closure A = clZ(z), this being an element of Ð’s carrier. By our assumption that the closure has been normalized, A is join-irreducible in CZ. Therefore there exists some wz ∈ Σ∗ such that CRwz (I)= A i.e. we have a deterministic wz-path in Ð from the initial state I to the state A. Then A = clZ(Rwz [I]) and since A is join-irreducible and clZ is separable we deduce z ∈ Rwz [I], i.e., the first condition holds. The second condition follows because z∗ ∈ Rw [z0] implies z∗ ∈ CRw (I)= A = clZ(z).
z	z
Conversely, suppose the two conditions hold for some pointed nca (Z, Ra, F,I). Consider its equivalent pointed JSL-dfa with carrier CZ. The conditions imply that every join-irreducible in CZ is reachable from the single state I. We can form a sub JSL-dfa by closing under the transitions and then forming the generated sub- algebra. Since every join-irreducible is reachable, this gives the original JSL-dfa. Furthermore this is the smallest sub JSL-dfa, which implies the respective pointed nca is reachable.	2
Remark 3.14 The above condition (ii) may be felt surprising. However, recall

that reachability for pointed ncas was defined by complete analogy with nfas: no proper sub nca exists. For pointed dfas (viewed as ncas with identity closure) this is the usual notion of reachability, since there is exactly one wz-path from the unique initial state. However the same cannot be said for pointed nfas.
Proposition 3.15 Viewed as a pointed nca with identity closure, a pointed nfa is reachable iff its reachable subset construction (that is, the reachable part of the subset dfa) contains all singleton sets.
Proof. Let (Z, Ra, F,I) be a pointed nfa. If every singleton subset lies in its reachable subset construction, then every z ∈ Z has some wz ∈ Σ∗ such that the unique path from the single state I terminates at z. Since the path is unique and z ∈ clZ(z) = {z}, it follows that we have a reachable pointed nca by Propo- sition 3.13. Conversely, suppose this pointed nfa defines a reachable pointed nca with identity closure. Then by Proposition 3.13 each z ∈ Z has some wz such that
I −w→z  {z} because no other state lies in the closure of {z}.	2
We now provide further properties of reachable pointed ncas.
Proposition 3.16 Suppose one has a normalized reachable pointed nca accepting
L, then:
Its underlying pointed nfa is reachable.
Its individual states accept derivatives of L.
Varying the (closed) set of initial states, the languages it accepts are precisely the unions of L’s derivatives.
Proof. The first statement follows immediately from Proposition 3.13 via the first condition (i). The second statement follows because for each z ∈ Z, its closure is reachable from I in the equivalent pointed JSL-dfa. Thus this closed set accepts a derivative of L and this language is preserved by the equivalence (see Lemma 2.20). Finally, for (iii) observe that the JSL-dfa equivalent to N accepts precisely the unions of derivatives of L when varying the initial state: indeed, the states reachable via transitions accept precisely the derivatives of L, and all other states arise as a join of such states. Since languages are preserved by the equivalence, (iii) follows.	2
Every pointed nfa has a smallest sub nfa, which is necessarily reachable. That is, one simply discards all those states not reachable from the initial states by transitions. From the categorical standpoint this means that the intersection of all pointed sub nfas exists. Similarly, for any pointed nca, the intersection of all pointed sub ncas exists i.e. we can always construct a unique reachable sub nca.
Definition 3.17 The reachable part reach(N,I) of a pointed nca (N,I) is the unique reachable pointed sub nca, i.e. the intersection of all pointed sub ncas.
Notation 3.18 Given any nca with carrier Z, any word w ∈ Σ∗ and any subset
I ⊆ Z, we write z −→w  z∗ whenever there is a w-path from z to z∗ in the underlying
nfa. Then w · I ∈ CZ denotes the closure of {z∗ ∈ Z : ∃z ∈ I.z −→w  z∗}.

Proposition 3.19 reach(Z, Ra, F,I) is isomorphic to (Z∗, R∗ ,F∗,I∗) where:
Z∗ ⊆ CZ is the set of w · I’s not arising as joins of other v · I’s in CZ;
R∗ = {(u · I, v · I) ∈ Z∗ × Z∗ : v · I ⊆ ua · I} for each a ∈ Σ;
F∗ = {A ∈ Z∗ : F ∩ A /= ∅};
I∗ = {A ∈ Z∗ : A ⊆ I}.
Proof. [Sketch] This follows by considering equivalent pointed JSL-dfa i.e. we close under the deterministic transitions from I, form the generated subalgebra, and then convert this JSL-dfa back into a pointed nca.	2
Remark 3.20 Applying this to an nfa (i.e. a pointed nca with identity closure), one finds that reach(N,I) is never larger than the reachable subset construction
{w · I : w ∈ Σ∗}.
Next we characterize simple pointed ncas. Recall that a dfa is simple iff distinct states accept distinct languages. Analogously:
Proposition 3.21 A pointed nca (N,I) with carrier Z is simple iff distinct closed subsets accept distinct languages i.e. if A /= B ∈ CZ then LN (A) /= LN (B).
Proof. Let Ð be the JSL-dfa equivalent to N . It is simple since N is, so the unique map into the final JSL-da ÐPΣ∗ (see Example 2.7) is injective. This means that distinct states of Ð accept distinct languages, hence the statement follows from Lemma 2.20.	2
By Theorem 3.5 we know Nca∗ is self-dual. Moreover reachable and simple are dual concepts, see Definition 3.8. Then if (N,I) is any pointed nca accepting L, it follows that
sim(N,I) = rev ◦ reach ◦ rev(N,I)
is a simple pointed nca accepting L i.e. the simpliﬁcation of (N,I). Categorically, it is the cointersection of all quotient ncas.
Next consider reach ◦ sim(N,I) which is certainly reachable. Importantly it is also simple, using Proposition 3.21 and the fact reach(N,I) is a sub nca of (N,I). Then by definition it is a minimal pointed nca accepting L. In fact:
Proposition 3.22 For every regular languages L, there is up to isomorphism only one minimal pointed nca accepting L.
Proof. This follows from a more general result in [1, Lemma 3.22] since the minimal nca is an instance of a well-pointed coalgebra. Let us briefly sketch the argument. Suppose one has two minimal pointed ncas accepting L. Equivalently one has two minimal pointed finite JSL-dfas accepting L, where minimal now means reachable and simple in Jdfa∗. Each one has a unique Jda-morphism to the deterministic JSL-automaton ÐReg(Σ) of regular languages (see Example 2.7(c)), assigning to each state the language it accepts. These morphisms factorize into a surjective morphism followed by an inclusion i.e. their image defines a sub dfa of ÐReg(Σ). Since they are both simple, they are each isomorphic to their respective image. Since they are

both reachable, by Proposition 3.16 the carrier of this image is precisely the set of unions of derivatives of L. Therefore they are isomorphic to each other.	2
Notation 3.23 Let QL denote the semilattice of all unions of derivatives of L.
Proposition 3.24 The following pointed nca N (L) for is minimal nca for L:
States ZL = J (QL) i.e. the non-empty derivatives of L that are not unions of others derivatives, endowed with the closure:
clL(A)= {K ∈ ZL : K ⊆  A},

transitions Ra = {(K, K∗) ∈ ZL × ZL : K∗ ⊆ a−1K} for each a ∈ Σ,
as ﬁnal states those K ∈ ZL containing ε,
as initial states those K ∈ ZL which are subsets of L.
Proof. It is easy to see that the minimal pointed JSL-dfa accepting L is the finite subautomaton of ÐReg(Σ) (see Example 2.7(c)) generated by L. Hence is has states QL, transitions K → a−1K (K ∈ QL), initial state L, and the final states are precisely those languages in QL containing ε. Now apply the equivalence of Jdfa∗ and Nca∗.	2
Then the main result in this section follows:
Theorem 3.25 For any pointed nca (N,I) accepting L, the pointed nca:
reach ◦ rev ◦ reach ◦ rev(N,I)
is a minimal pointed nca accepting L, and is hence isomorphic to N (L).
Proof. By Proposition 3.6, the dual of a pointed nca accepts the reversed language. Since reach preserves the accepted language, the above pointed nca accepts L. so by Proposition 3.22 it suffices to show it is a minimal pointed nca. It is clearly reachable. Moreover, rev ◦ reach ◦ rev(N,I) is the dual of a reachable pointed nca and hence is simple. Finally, reach preserves simplicity (as previously explained), so we are done.	2
Finally, since Nca∗ is self-dual and reachability and simplicity are dual:
Proposition 3.26 For each regular language L, the reverse of the minimal pointed nca N (L) is isomorphic to the minimal pointed nca for rev(L), shortly,
rev(N (L)) ∼= N (rev(L)).

Proof. By Proposition 3.6 we know the dual of N (L) accepts rev(L). Further- more minimality is a self-dual property because ‘no proper subobjects’ and ‘no proper quotients’ dualize. Hence, the dual of N (L) is minimal and is isomorphic to N (rev(L)) by Proposition 3.22.	2

State-minimal Nondeterministic Automata
Each regular language L is accepted by the underlying nfa of its minimal pointed nca N (L). Although this nfa is never larger than the minimal dfa, it generally need not be a state-minimal nondeterministic acceptor [7]. In this section we present a natural sufficient condition for state minimality. Recall that a strict closure clZ is topological if it is induced by a topology on Z, i.e., it satisfies the equation
clZ(A ∪ B)= clZ(A) ∪ clZ(B)	for all A, B ⊆ Z. Definition 4.1 An nca is topological if its closure is topological. Lemma 4.2 N (L) is topological iff the lattice QL ∼= CZL is distributive.
Proof. If clZL is topological then CZL ⊆ PZL is closed under union and inter- section, hence it is a distributive lattice. Conversely suppose that QL ∼= CZL is distributive, and let A = {K1,..., Km} and B = {L1,..., Ln} be closed subsets of ZL. We need to show that A∪B is closed, so suppose that K ∈ clZL (A∪B), that is, K ⊆ K1 ∪···∪ Km ∪ L1 ∪···∪ Ln by the definition of clZL . Note that for any join- irreducible element x of a finite distributive lattice, x ≤ y Vz implies x ≤ y or x ≤ z (because x ≤ yVz implies x = xΛ(yVz)= (xΛy)V(xΛz), hence x = xΛy or x = xΛz since x is join-irreducible). We conclude that K ⊆ K1 ∪· · ·∪Km or L ⊆ L1 ∪· · ·∪Ln, so K ∈ clZL (A)= A or K ∈ clZL (B)= B. Thus clZL (A ∪ B) ⊆ A ∪ B.	2
Example 4.3 (1) If N (L) is an nfa (i.e., has identity closure) then it is topological. For example, this is the case whenever dL = 2nL where dL (resp. nL) is the number of states of a state-minimal dfa (resp. nfa) accepting L, see [2].
If N (L) is topological then so is N (rev(L)). Indeed, recall that they are duals. Then since N (L) is topological iff the closed sets CZL form a distributive lattice, its order-dual is also distributive and is isomorphic to CZrev(L).
If N (L) is topological and f : Δ∗ → Σ∗ is a surjective monoid morphism then N (f−1(L)) is also topological. Here one uses the fact that f−1 : PΣ∗ → PΔ∗ is an injective boolean morphism, providing an isomorphism between the semilattices QL and Qf−1(L).
If L is intersection-closed (that is, each binary intersection of derivatives of L arises as a union of derivatives of L), then N (L) is topological by Lemma 4.2. Examples of intersection-closed languages include:
the languages Σ∗ and {w} for w ∈ Σ∗,
the tail languages (a + b)∗b(a + b)n−1 (n ≥ 1),
linear codes, i.e., linear subspaces of the vector space Zn (viewed as lan-
guages over the binary alphabet);
the languages Lf = {w ∈ 2n : f (w)= 1}⊆ 2∗ where f : 2n → 2 is either the parity function, the majority function or any R-weighted threshold function, i.e.,
f (b1,... bn)=1	iff	kibi ≥ t
for some real-valued constants k1,..., kn and t.

The language L = a(a + b)+ b(b + c) is not intersection-closed, yet N (L) is topological. Indeed, the derivatives of L are ∅, L, a + b, b + c and ε, and (a + b)∩(b+c)= b is not a union of derivatives. However, the lattice QL is isomorphic to the lattice of all subsets of a four-element set, and hence distributive.
In [2] is was proved that N (L) is state-minimal provided that L is intersection- closed. The following theorem is a generalization of this result, as witnessed by Example 4.3(4),(5) above.
Theorem 4.4 Let L be a regular language. If the minimal pointed nca N (L) is topological then its underlying nfa is state-minimal.
Proof. (1) By Lemma 2.19, the categories of pointed JSL-dfas and pointed nonde- terministic closure automata are equivalent. In fact, G∗ has the associated equiva- lence C∗ : Nca∗ → Jdfa∗ defined by
C∗(Z, Ra, F,I)= (CZ, CRa,F∗,I)	and	C∗¥ = C¥,
where F∗ = {A ∈ CZ : A ∩ F /= ∅}. Here we use the equivalence C : Clf → JSLf , see Remark 2.16. Observe that I ∈ CZ is now a single state in a JSL-dfa.
Given any pointed nfa (N, I) = (Z, Ra, F,I) accepting L. Viewing (N, I) as a pointed nca (N,I) with identity closure and applying the above equivalence yields the JSL-dfa (Ð,I) where Ð = (PZ, CRa,F∗) is the subset construction. Let
Q = {LD(q): q ∈ PZ}
be the set of languages accepted by the individual states in Ð. Since these are precisely those languages accepted by the nfa N (varying the set of initial states), we deduce that Q is closed under finite unions and derivatives, so Q is a semilattice of regular languages under ∅ and ∪. It forms the carrier of a JSL-dfa Ð∗ = (Q, δa, Fˆ)
with transitions K −→a  a−1K and final states Fˆ := {K ∈ Q : ε ∈ K}. Furthermore,
LD defines a surjective Jdfa∗-morphism
LD : (Ð,I) → (Ð∗, L),
where L ∈ Q because (N, I) accepts L. Now every surjective morphism between finite semilattices has the property that the domain has at least as many join- irreducibles as the codomain (since the join-irreducibles form the minimal generating set). Hence we have shown that
|J (Q)|≤ |J (PZ)| = |Z|.

Next apply the above construction to the underlying nfa of N (L). We obtain a JSL-dfa ÐL = (QL, a−1(−), F˜) where QL is the semilattice of languages which this nfa can accept, varying the set of initial states. In fact:
QL is precisely the set of unions of derivatives of L, see Proposition 3.16 and use that N (L) is reachable and (isomorphic to) a normalized nca by Corollary 3.12.

Applying G∗ to (ÐL, L) one obtains the minimal pointed nca N (L). In partic- ular, ZL has states J (QL) – see Lemma 2.19 and Proposition 3.24.
Therefore CZL = CGQL ∼= QL, since G and C define an equivalence. It follows from (a) that we have an injective Jdfa∗-morphism:
ι : (ÐL, L) ‹→ (Ð∗, L).
Indeed QL ⊆ Q because L ∈ Q and the latter is closed under unions and derivatives. This inclusion certainly preserves unions. The transition structure and final states are inherited, so ι is well-defined.
Now assume that N (L) is topological, hence QL ∼= CZL is distributive by Lemma 4.2. In view of (2), it remains to prove that |J (QL)| ≤ |J (Q)|, for which we establish an auxiliary statement: given any finite distributive lattice D which is a sub semilattice of a finite semilattice S, we prove that |J (D)| ≤ |J (S)|. Let
|J (S)| = n, so we have a surjective join-semilattice homomorphism Pn → S. By the self-duality of JSLf we have an embedding of Sop into (Pn)op ∼= Pn. Thus any maximal chain in S (hence also in D) has at most n edges. Since the number of join-irreducibles in a finite distributive lattice equals the number of edges of any maximal chain [8, Corollary II.112], it follows that |J (D)| ≤ n = |J (S)|. Now QL is a distributive sub-semilattice of Q by (3), so applying this result to D = QL and S = Q proves the theorem.	2
Example 4.5 The converse of Theorem 4.4 is generally false. Let L = aa denote the complement of the singleton {aa}. The underlying nfa of N (L) and the lattice QL are depicted below:
a
a


Σ∗
L	a	ε

∅
Clearly QL is non-distributive but N (L) is a state-minimal nfa accepting L.
Conclusions and Future Work
It has been known since the early days of automata theory that nondeterminis- tic finite automata suffer from two unpleasant phenomena, as opposed to their deterministic counterparts: the lack of canonical machines, and the lack of state- minimization. In this paper, we have demonstrated that both problems disappear when one augments nfas with a closure structure. Based on the equivalence between JSL-dfas and nondeterministic closure automata, we derived the “right” notion of

minimality, which allowed us to establish the existence of a unique minimal nca for each regular language along with a Brzozowski-style construction method. Further- more, by restricting to ncas with topological closure, we identified a very natural class of canonical state-minimal nfas.
One open question that we leave for future work is to what extent our main result (Theorem 4.4) can be reversed, that is, under which conditions the state-minimality of N (L) implies topologicity.
Another issue we aim to address in the future are the complexity-related impli- cations of our results. Although the general state minimization problem for nfas is known to be PSPACE-complete, a good implementation of our operators reach and rev could lead to efficient state minimization procedures for the class of topological automata, and possibly even larger classes of automata.

References
Adamek, J., S. Milius, L. S. Moss and L. Sousa, Well-pointed Coalgebras (2013), full version, available at www.stefan-milius.eu, extended abstract in: Proc. FoSSaCS 2012, Lecture Notes Comput. Sci., vol. 7321, pp. 89–103.
Ad´amek, J., R. S. Myers, S. Milius and H. Urbat, Canonical Nondeterministic Automata, in:
M. Bonsangue, editor, Proceedings of the 12th International Workshop on Coalgebraic Methods in Computer Science, 2014, to appear.
Ad´amek, J., J. Rosicky´ and E. Vitale, “Algebraic Theories,” Cambridge University Press, 2011.
Bonchi, F., M. M. Bonsangue, H. H. Hansen, P. Panangaden, J. J. M. M. Rutten and A. Silva, Algebra- coalgebra Duality in Brzozowski’s Minimization Algorithm, ACM Trans. Comput. Logic 15 (2014),
pp. 3:1–3:29.
URL http://doi.acm.org/10.1145/2490818


Brzozowski, J. and H. Tamm, Theory of
A´tomata, in: Proc. 15th International Conference on

Developments in Language Theory (DLT’11), Lecture Notes Comput. Sci. 6795 (2011), pp. 105–116.
Brzozowski, J. A., Canonical regular expressions and minimal state graphs for definite events, in: Mathematical theory of Automata, Volume 12 of MRI Symposia Series, Polytechnic Press, Polytechnic Institute of Brooklyn, N.Y., 1962 pp. 529–561.
Denis, F., A. Lemay and A. Terlutte, Residual Finite State Automata, Fund. Inform. XX (2002), pp. 1– 30.
Gratzer, G., “Lattice Theory: Foundation,” SpringerLink : Bu¨cher, Birkhauser Boston, 2011.
URL  http://books.google.co.uk/books?id=6XJX5-zCoIQC

Milius, S., A Sound and Complete Calculus for Finite Stream Circuits, in: Proc. 25th Annual Symposium on Logic in Computer Science (LICS’10), IEEE Computer Society, 2010, pp. 449–458.

A	Appendix
We prove the claim made in the Introduction that the category JSLf of finite semi- lattices arises as a free cocompletion of Relf . More precisely, JSLf is both
a free cocompletion of Relf under reflexive coequalizers, and
a conservative cocompletion of Relf under finite colimits. Let us us first recall the general concepts.
Definition A.1 Let A be a category. A free cocompletion under reflexive coequal- izers of A is a full embedding E : A ‹→ A∗ such that
A∗ has reflexive coequalizers (i.e., coequalizers of pairs of retractions f, g :
X → Y having a common coretraction d : Y → X, fd = idY = gd).
Every functor F : A→ ¥, where ¥ has reflexive coequalizers, has an extension F∗ : A∗ →¥ (i.e., F∗E ∼= F ) preserving reflexive coequalizers, which is unique up to natural isomorphism.
Definition A.2 Let A be a category with finite coproducts. A conservative ﬁnite cocompletion of A is a full embedding E : A ‹→ A∗ such that
(i*) E preserves finite coproducts and A∗ is finitely cocomplete.
(ii*) Every finite-coproduct preserving functor F : A → ¥, where ¥ is finitely cocomplete, has an extension to a finite-colimit preserving functor F∗ : A∗ →
¥ (i.e. F∗E ∼= F ) which is unique up to natural isomorphism.
Example A.3 Let V be a finitary variety, and let Vfp and Vfgf be the full sub- categories of all finite presentable and finitely generated free algebras, respectively. Then Vfp is a free cocompletion of Vfgf under reflexive coequalizers, as well as a conservative finite cocompletion of Vfgf , see [3, Theorem 7.3 and Theorem 17.11].
Corollary A.4 JSLf is a free cocompletion of Relf under reflexive coequalizers, as well as a conservative ﬁnite cocompletion of Relf .
Proof. Apply the above example to the variety V = JSL. Here Vfp = JSLf . Since finitely generated free semilattices are power sets Pn (n < ω), it is easy to see that Vfgf is equivalent to Relf . Indeed, the functor P : Relf → JSLfgf assigning to each finite set n its power set and to each relation h : n → m the semilattice morphism
Ph : Pn → Pm,	A '→ h[A],
is an equivalence of categories.	2
