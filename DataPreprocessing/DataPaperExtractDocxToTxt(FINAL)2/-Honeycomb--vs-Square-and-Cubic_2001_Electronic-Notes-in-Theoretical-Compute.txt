Electronic Notes in Theoretical Computer Science 46 (2001)
URL: http://www.elsevier.nl/locate/entcs/volume46.html 18 pages


“Honeycomb” vs Square and Cubic Models

Valentin E. Brimkov 1,2
Department of Mathematics Eastern Mediterranean University
Famagusta, TRNC, Via Mersin 10, Turkey
Reneta P. Barneva 3
Department of Mathematics and Computer Science SUNY Fredonia
Fredonia, NY 14063, USA


Abstract
In this paper we summarize some observations about the advantages of using hexag- onal grids in raster graphics. We initiate a study of honeycomb graphics, whose 2D version is based on a hexagonal grid, while in its 3D counterpart the voxels are hexagonal prisms. We design an analytical honeycomb geometry of linear objects, which parallels similar developments already known in classical raster graphics [6]. We also demonstrate certain advantages of honeycomb graphics, in particular that it provides a better tunnel-free approximation to continuous objects.


Introduction
A tiling P of Rn by convex polytopes is called normal [7] if the intersection of any two tiles from P is either empty or appears to be their common (n − d)- dimensional facet, for some d, 1 ≤ d ≤ n. Consider a normal tiling P of Rn, n = 2 or 3, by copies of the same tile P , so that the following conditions are met.
P is a convex set;
For any P1, P2 ∈P there is a translation τ such that τ (P1)= P2;
Let p be a point of a tile P ∈ P. Then the set of the duplicas of p in all tiles from P form a lattice in Rn.

1 The authors thank Jean-Pierre Reveill`es for reading an early version of this paper.
2 Email: valentin.brimkov@emu.edu.tr
3 Email: barneva@cs.fredonia.edu
◯c 2001 Published by Elsevier Science B. V. Open access under CC BY-NC-ND license.


		
(a)	(b)	(c)

Fig. 1.	a) Tiling by a parallelogram.	b) Brick-built tiling.	c) Tiling by a quasi-regular hexagon.

(a)	(b)	(c)

Fig. 2. a) Square grid. b) Regular brick-built grid. c) Regular hexagonal grid.
We will call such a tiling uniform tiling.
First we consider uniform tilings of R2. It is well-known (and also easy to see) that a uniform tiling is possible only in the following two cases.
Case 1: The tile P is a parallelogram (Figure 1a,b);
Case 2: P is a hexagon, whose opposite sides are equal and parallel. Such a hexagon will be called quasi-regular (Figure 1c).
The vertices and sides of the tiles form a grid. The center of a tile is the intersection point of its diagonals. Sometimes we will identify a tile with its center.
A grid can be regarded as an infinite plane graph G = (V, E) whose vertex set V and edge set E consist of the polygons’ vertices and sides, respectively. Note that the graph of the hexagonal grid of Figure 1c is isomorphic to the one of the parallelogram tiling of Figure 1b. Thus, these two grids have the same topology, despite the different shape of their tiles. A tiling/grid as the one in Figure 1b will be called a brick-built tiling/grid.
If we require the tiles to be regular polygons, then we obtain the square grid depicted in Figure 2a, the regular brick-built grid of Figure 2b, and the regular hexagonal grid of Figure 2c.
Similar considerations take place if we consider uniform tilings of R3. It is not hard to see that in this case the tile P must be either a parallelepiped (Figure 3a) or a hexagonal prism whose bases are quasi-regular hexagons (Fig- ure 3b). The notions of grid and tile center are defined analogously to the 2D case.
Square and cubic models in R2 and R3 are widely used in image processing and computer graphics. The raster computer graphics is modeled upon a square grid, where the square tiles are usually called pixels. Square grids are physically implemented in the computer screen. In dimension three, the


	
Fig. 3. The two possible tiles of a uniform tiling of R3.
graphical models are based on cubic grids, in which the cubes are called voxels. Comparatively less attention has been paid to hexagonal grids and graph- ical models based on them. In the present note we attempt to show that this is, to a certain extent, undeserved. What is more, we will show that graphical models using hexagonal grid tiles (called 2-hexels) have some advantages over the traditional ones. Similar conclusions hold for the 3D space, where instead of cubes, one can use voxels, which are hexagonal prisms (called 3-hexels). Graphical models based upon hexels will be called honeycomb models. The basic aim of this work is to provide motivation and theoretical grounds for developing honeycomb graphics. Note that the proposed models are realistic and admit an easy hardware implementation. In fact, hexagonal rasters are
well-known in image processing (see, e.g., [8]). Here we will show that:
The proposed honeycomb models employ simple mathematics.
In some regards, they are “more economic” than those based on square/cubic grids.
Some basic Euclidean primitives (like straight lines, segments, polygons, circles, planes, etc.) admit a simple analytical description.
Honeycomb models ensure tunnel-freedom of discrete objects in a more di- rect way than the other models.
They ensure a better tunnel-free approximation to continuous objects.
There is a possibility for a straightforward transfer of notions and results
from the classical discrete geometry to one based on honeycomb models.
The paper is structured as follows. In the next Section 2 we recall some definitions and introduce notions to be used in the sequel. In Section 3 we provide theoretical foundations for developing 2D discrete analytical geometry of linear objects and circles. We also reveal some advantages of our approach over the classical one. In Section 4 we extend our considerations to the 3D space. In Section 5 we concern algorithmic and complexity issues. In the last Section 6 we conclude with some remarks.
The presented theory parallels in part some concepts and results already known in conventional raster graphics. Therefore, we omit the unnecessary details and focus on the essential differences, resemblances and advantages with respect to the classical theory. An important purpose of ours is to make the considered notions and facts intuitively clear. With this in mind, we often avoid technical details and calculations, using instead illustrative figures and examples. Observations and statements whose verification is either straight- forward or quite technical or both, are left for exercise.





(i)	(ii)
(a)
(i)	(ii)	(iii) (b)


Fig. 4. Illustration to Definition 1 in the case of square/cubic tiles: a) Tunnels in a 2D discrete object. (i) 1-tunnel, (ii) 0-tunnel. b) Tunnels in a 3D object: (i) 2-tunnel, (ii) 1-tunnel, (iii) 0-tunnel.
Basic Definitions and Facts
Let T be a normal tiling of Rn, where n = 2 or 3. We assume that the tiles of  are convex polytopes. For a set of tiles A we denote U (A)= P ∈AP . A set of tiles will be regarded as a discrete object.
A j-dimensional facet of a tile P	will be called j-facet, for some j,
0  j  n  1. Thus the 0-facets of P are its vertices, the 1-facets are its edges, and the 2-facets of a 3D polytope are its 2D faces.
Two tiles are called j-adjacent if they share a j-facet. A k-path in a discrete object A is a sequence of tiles from A such that every two consecutive tiles are k-adjacent. Two tiles are k-connected if there is a k-path between them. A discrete object A is k-connected if there is a k-path connecting any two tiles of A. A discrete object is said to be connected if it is at least 0-connected. Otherwise it is disconnected. 4
Let D be a subset of a discrete object A. If A  D is not k-connected then the set D is said to be k-separating in A. A supercover of an Euclidean object M is the set S(M ) of all tiles which are intersected by M . Let Γ be a curve in R2 or a surface in R3. In a very general sense, one can consider every subset of the supercover S(Γ) as a discretization of Γ, or as a discrete curve/surface corresponding to Γ. An important concept in discrete geometry for computer imagery is that of tunnel. Intuitively, a k-tunnel is a location in a discrete object through which a discrete k-path can penetrate. Tunnels in a discrete object (in particular, discrete curve or surface), are usually defined on the basis of the notion of separability. More precisely, let a set of tiles A be k-separating in a discrete object B but not j-separating in B. Then A is said to have j-tunnels for any j < k. In the case when the considered set A (discrete curve in R2 or discrete surface in R3) is not supposed to be separating in another set, one can use the following somewhat more general definition.
Definition 2.1 Let A be a discrete object in Rn, where n = 2 or 3.

4 Classically, 0-adjacent/connected (resp. 1-adjacent/connected) pixels are called 8- adjacent/connected (resp. 4-adjacent/connected). In dimension 3, 0-adjacent/connected (resp. 1 or 2-adjacent/connected) voxels are called 26-adjacent/connected (resp. 18 or 6-adjacent/connected).

If n = 2, then:
A has a 1-tunnel if the set U (A) is disconnected (Figure 4a(i));
A has a 0-tunnel if in A there exist two tiles which share exactly one vertex, and no other tile from A shares the same vertex (Figure 4a(ii)).
If n = 3, then:
A has a 2-tunnel if U (A) is not a simply connected set (Figure 4b(i)); (Such kind of tunnel is sometimes called a hole.)
A has a 1-tunnel if in A there exist two tiles which share exactly one edge, and no other tile from A shares the same edge (Figure 4b(ii));
A has a 0-tunnel if it contains a tile P which has a vertex q, so that the set U (A) − q is not simply connected (Figure 4b(iii)).
Discrete object without k-tunnels is called k-tunnel-free. An object that has no tunnels for any k,0 ≤ k ≤ 2, is called tunnel-free, for short. 5
The notion of tunnel plays an important role in rendering voxelized scenes by casting discrete rays from the image to the scene [5]. As Kaufman remarks, thinner rays are much more attractive for ray traversal. Therefore, it is desir- able to construct k-tunnel-free discrete objects where k is as small as possible. The ideal situation is when the object is tunnel-free. The 2D case is compar- atively simple since the connectivity of a discrete object fully characterizes the topology of the tunnels. More precisely, an object A contains 1-tunnels if and only if it is disconnected; A contains 0-tunnels but no 1-tunnels if and only if it is connected but not 1-connected; A is tunnel-free if and only if it is 1-connected. In dimension 3, however, the situation is more complicated, as one can deduce from the definition above. Sometimes this complexity has certain negative impact on the design of discretization algorithms. In partic- ular, it may be difficult to control the object connectivity. Moreover, it might even be a problem to secure that a discrete object is connected [2]. Ensuring tunnel-freedom can be a difficult task as well [2,3,4].
A source for such sort of troubles is the topology of the square grid. Still in dimension 2, there are three possibilities for connectivity of two pixels, and thus for the tunnel structure of a set of two pixels. In dimension 3, the corresponding number of cases is four (0, 1, 2-tunnel, and tunnel-freedom). This variety of possibilities may cause certain theoretical difficulties when con- structing k-tunnel-free discretizations of more complex objects. In Sections 3 and 4 we will show how one can overcome this problem by using honeycomb models. Before this, we recall some basic concepts of the analytical discrete geometry.

5 Classically, in dimension two, a 0-tunnel (resp. 1-tunnel) is called 8-tunnel (resp. 4- tunnel). In dimension three, a 0-tunnel (resp. 1- or 2-tunnel) is called 26-tunnel (resp. 18- or 6-tunnel).

Analytical Discrete Geometry
A novel approach in raster graphics is the one based on analytical discrete geometry [6]. The main objective here is to obtain simple analytical definitions of the basic Euclidean primitives, such as lines and line segments, triangles, circles, planes, spheres, etc., and, on this basis, to create tools for efficient modeling of more sophisticated objects composed by these primitives. Next, we recall some basic definitions.
Discrete coordinate plane consists of unit squares (pixels), centered on the integer points of the two-dimensional Cartesian coordinate system in the plane. Discrete coordinate space consists of unit cubes (voxels), centered on the integer points of the three-dimensional Cartesian coordinate system in the space. The pixels’/voxels’ coordinates are the coordinates of their centers. The edges of a pixel/voxel are parallel to the coordinate axes.
2D arithmetic line is a set of pixels L(a1, a2, µ, ω) =	(x, y)	Z2 0 a1x+a2y +µ < ω , where a1, a2,µ	Z, ω	N. ω is called arithmetic thickness or width of the line and µ is called internal translation constant. The vector (a1, a2) is the normal vector to the line. An arithmetic line L(a1, a2, µ, ω) is 0-connected (classically, 8-connected or naive) if ω = max(|a1|, |a2|), and 1-connected (classically, 4-connected or standard), if ω = a1 + a2 .	The standard line is the thinnest tunnel-free arithmetic line. Arithmetic plane is a set of voxels P (a1, a2, a3, µ, ω)= {(x, y, z) ∈ Z3|0 ≤ a1x + a2y + a3z + µ < ω}, where a1, a2, a3,µ ∈ Z, ω ∈ N. ω is the arithmetic thickness of the plane and µ is its internal translation constant. The vector (a1, a2, a3) is the normal vector to the plane. An arithmetic plane P (a1, a2, a3, µ, ω) is naive if ω = max( a1 , a2 , a3 ), and standard if ω = a1 + a2 + a3 . The standard plane is the thinnest tunnel-free arithmetic plane.

2D Honeycomb Analytical Geometry
Hexagonal Coordinate System
Consider the tilings of Figure 2c and 2b. As mentioned, the corresponding grids are isomorphic. An important property of these tilings is that any two non-disjoint tiles are 1-adjacent. In contrast to the case of classical rectangular grids, here 0-adjacency is impossible. Thus, a connected discrete object is always 1-connected and tunnel-free. We will now develop a basis for analytical discrete geometry on hexagonal grids.
The centers of the 2-hexels form a lattice L whose cells are unit rhombuses (see Figure 5a). The hexels form a discrete hexagonal space. On it, we define a hexagonal coordinate system. For this, we choose a hexel and define its center O to be the center of the coordinate system. The center’s coordinates are both zeros, i.e., O = (0, 0). Next we fix two coordinate axes as shown in Figure 5a. The basis vectors b1 and b2 of the system are the vectors of the lattice basis, aligned with the coordinate axes. The so defined hexagonal coordinate system









(a)
Quad IV

(b)

Fig. 5. a) Hexagonal coordinate system. b) The Quad I,II,III,IV and the cones C1
and C2. The normal vector n = (a1, a2) to the straight line g belongs to C1.
will be denoted by Ob1b2.
The coordinate axes Ob1 and Ob2 divide the plane into four quadrants, denoted Quad I, Quad II, Quad III, and Quad IV . The origin O is common for Quad II and Quad IV . The positive part of Ob1 and the negative part of Ob2 belong to Quad IV , while the positive part of Ob2 and the negative part of Ob1 belong to Quad II. With respect to the coordinate system Ob1b2, one can build an analog of the Cartesian analytical geometry.

Lines, Segments, and Polygons
Let a1x1 + a2x2 + b = 0 be the equation of a straight line g in the hexagonal coordinate plane. We will suppose that the coefficients a1, a2, and b are ratio- nal numbers. To simplify some considerations, we will assume that they are integers and that gcd(a1, a2) divides b. This ensures that the line g contains infinitely many equidistant lattice points. The vector n = (a1, a2) is the nor- mal vector to g. The line g is collinear with the vectors v' = (a2,  a1) and v'' = ( a2, a1). The normal vectors to straight lines g for which the vectors v' and v'' belong to Quad I and Quad III, form an open cone C1 (Figure 5b). Analogously, the normal vectors to straight lines g for which the vectors v' and v'' belong to Quad II and Quad IV , form a closed cone C2 (Figure 5b). Clearly, C1 ∩ C2 = ∅ and C1 ∪ C2 = R2.
We nowdefine a universal discrete line corresponding to g, as follows.
gD(a1, a2, b)= {x ∈ L :0 ≤ a1x1 + a2x2 + b + [t/2♩ < t},

where


See Figure 6.
t =  |a1| + |a2|, if n = (a1, a2) ∈ C1,
 max(|a1|, |a2|), if n = (a1, a2) ∈ C2.

The parameter t is called the universal width of the line gD. It equals the number of parallel equidistant straight lines, which contain centers of hexels from gD.



Fig. 6. Two discrete line segments. The one has end-points (2, 1) and (4, 7), while the other has end-points (0, 0) and ( 6, 14). The normal vector to the former belongs to the cone C1. This discrete line does not have the containment property. The normal vector to the latter belongs to the cone C2. This discrete line has the containment property.
The so defined discrete line gD is the thinnest possible connected line of this type. For smaller values of t the line becomes disconnected, while for larger values it contains extra hexels which, however, do not influence the line connectivity. We remark that, depending on the quadrant to which the normal vector belongs, the universal width equals the thickness ω of a standard or a naive line in a square grid (see Section 2). Note also that, if t = |a1 + a2 , then the discrete line has containment property [5], i.e., it fully contains the corresponding continuous line. If t = max( a1 , a2 ), then the containment property does not hold, in general.
Given two hexels h1 and h2, one can obtain a tunnel-free discrete segment with end-points h1 and h2. In the same way, one can construct tunnel-free discrete polygons.
Discrete Circles
The circle is another basic Euclidean primitive admitting an easy analytical definition. In a square grid, a discrete circle has been analytically defined in [1]. More precisely, one can consider the following discrete circle with center at O(0, 0) and radius r ∈ N.


C(r)= 

 (x, y) ∈ Z2 :

 r −

1  2
2	≤ x + y <

 r +
1  2 


.	(1)

Note, however, that the above definition cannot be directly applied to a hexagonal grid since it may define a set of hexels which is too far from the intuitive idea of a circle and, in fact, can be a disconnected set of hexels (see Figure 7a). Therefore, a new definition is needed. To this end, we first observe that a point (a, b) in the hexagonal coordinate system has coordinates


	
(a)	(b)

Fig. 7. a) The set of hexels satisfying condition (1) with r = 3. b) Concentric discrete circles defined by formula (2), for r = 1, 2, 3, 4, 5.
(a + b , √3 b) with respect to the square coordinate system with the same unity.
2	2
Then the equation of a Euclidean circle in the hexagonal system becomes


x + y 2 + 2
√3	2
y
2

= r2,



i.e.,
x2 + xy + y2 = r2.

Thus we obtain the following analytical definition of a discrete circle with center O(0, 0) and radius r.


CD(r)= 

  (x, y) ∈ L :

 r −

1  2
2	≤ x + xy + y <

 r +
1  2 


.	(2)

See Figure 7b.
It is not hard to realize that the so defined discrete circle is always con- nected and tunnel-free. Moreover, concentric discrete circles with radii r = 1, 2, 3,... fill the whole plane.
Optimality of the Honeycomb Model
To have a ground for comparison between models built upon square or hexag- onal grids, we will suppose that the square and the hexagonal tiles have the same area 1. We will call such tiles the unit square and the unit 2-hexel, re- spectively. One can calculate that the length of a side of the unit 2-hexel is

equal to
√2
a = √3√4 3 = 0.62040 .... 

Quality of Approximation
We will show next that in certain sense the hexagonal grid ensures a better approximation to a continuous line segment than the square and the brick- built grids. To this end, we first recall the definition of Hausdorff distance. Let


x



(a)	(b)
(c)
(d)


Fig. 8. Extreme cases for which a 2-hexel of a discrete line has maximal deviation from the continuous line. a) In a square grid. b) In a regular hexagonal grid. c) In a regular brick-built grid. d) In the optimal brick-built grid.

E be a metric space with metric d, and E a family of closed non-empty subsets of E. For every x ∈ E and every A ∈ E let d(x, A) = inf{d(x, y) : y ∈ A}. Then, given two sets A, B ∈ E,
Hd(A, B) = max{sup{d(a, B): a ∈ A}, sup{d(A, b): b ∈ B}}

is called the Hausdorff distance between A and B. We will suppose that d is the Euclidean metric.
We will measure the deviation of a straight line discretization gD from the corresponding continuous line g by the Hausdorff distance Hd(gD, g) between them.
We first compare the hexagonal and the square grids. As Figure 8a shows, a tunnel-free dis√crete line might contain pixel (or pixels) whose farthest point
is in a distance	2= 1.41421 ... from the line. Consider now the hexagonal
grid. For it, the maximal possible deviation is reached in the extreme case illustrated in Figure 8b. It is equal to

√13
u =	a = 2
√13 2
√2
√4 27 = 1.11844 ..., 

which is considerably less than in the case of square grid.
Consider now the brick-built grid whose tiles are unit squares. For it, the maximal possible deviation is reached in the case shown in Figure 8c, and is equal to v = 1.25. This is smaller than the corresponding value for square grid, but larger than the one for hexagonal grid.
Note that in a brick-built grid framework, unit square tiles do not provide the best possible approximation. In order to determine the dimensions of the optimal rectangle, with reference to Figure 8d, let us denote the length of its horizontal side by x. Then the other side length will be 1 . Now we have to
determine x which minimizes the function


1
f (x)= x2
+ 3 x2.
4

Using simple calculus, we find that the solution to the above optimization



problem is
2
x = √3 = 1.15470 .... 

Then the other side has length 1 = 0.86602 ... A grid with such a tile will be called the optimal brick-built grid. For it, the maximal deviation is equal to


v' =
   1  2

3  2  1/2


= 1.22474 .... 


It is easy to showthat the maximal deviation of a discrete line in a regular hexagonal grid is minimal over all quasi-regular hexagonal grids. Similarly, the maximal deviation of a discrete line in the optimal brick-built grid is minimal over all possible brick-built grids.
Thus, we have obtained that the regular hexagonal grid provides the op- timal ground for constructing a tunnel-free approximation to a continuous linear object.
Similar results and conclusions hold about the maximal possible deviation of a discrete circle from the corresponding Euclidean circle.
Grid Cost
We conclude this section with one more observation, namely that the hexago- nal grid is in a sense “more economic” than the square one. For a given grid H, the total length of all its edges will be called the cost of H and denoted c(H). One can calculate that a unit 2-hexel has perimeter 6a = 3.72241 .. ., which is less than the perimeter of the unit square, that is 4. This fact may have an advantageous impact on the cost of the corresponding grid, as illustrated through the following example.
Example 3.1 Consider the grid of a screen with a square shape, consisting of n rows, each of them containing n unit tiles. We consider the cases of square grid H1 (Figure 9a) and hexagonal grid H2 (Figure 9b). Both grids cover the same area n2. One can easily find that in the former case the grid cost is
c(H1)= 2n2 + 2n,
while in the latter case it is
c(H2)= (3n2 + 4n − 1)a = (3a)n2 + 4an − a.
Since the coefficient of n2 in c(H2) is 3a = 1.86120... < 2, we obtain that
c(H2) is asymptotically smaller than c(H1).
It is easy to show that a unit 2-hexel has a minimal perimeter among all quasi-regular hexagons with area 1. One can also show that a tiling by unit 2-hexels has minimal cost among all possible tilings by a quasi-regular hexagon with area 1. Similarly, a unit square has a minimal perimeter among


	
(a)	(b)

Fig. 9. Illustration to Example 3.1.
all parallelograms with area 1, and a tiling by a unit square has a minimal cost over all possible tilings by a parallelogram with area 1. Thus, one can conclude that the tiling with regular hexagons has minimal cost over all possible uniform tilings.
The above observation may be of interest regarding possible wire grid fabrication for the purpose of a novel computer screen design, based, e.g., on liquid-crystals, plasma panels, or electro-luminescent technologies.

3D Honeycomb Geometry
In this section we present two 3D honeycomb models and related discrete analytical geometry. In both of them the 3D space is tiled by a right hexagonal prism called 3-hexel (see Figure 11b). The base of the prism is a unit 2-hexel and its height has length 1. Thus the 3-hexel volume is equal to 1.
Our aim is to create a basis for tunnel-free discretizations of surfaces and lines, in particular of planes and straight lines. For this, we consider two special tilings of R3 by 3-hexels and define corresponding coordinate systems in them.
Model I
Let h0 be a 3-hexel in R3. Its center O is assigned coordinates (0, 0) and will be considered as the origin of the coordinate system. Consider a tiling of R3 as the one illustrated in Figure 10a,b. The figure exposes the orthogonal projections of the centers of a set of 3-hexels on the plane  , passing through the origin O and orthogonal to the hexel’s height. We choose one of the coordinate axes to be the straight line e3 passing through O and orthogonal to . On every hexagonal projection the third coordinate of the corresponding 3-hexel’s center is marked (i.e., the coordinate of the hexel’s center with respect to e3 axes). These centers belong to a plane which is chosen to be one of the discrete coordinate planes. In it, we fix the other two coordinate axes e1 and e2. The origin O and the axes e1, e2, and e3 determine the coordinate system Oe1e2e3 (Figure 10b).
Now for each 3-hexel h from the discrete coordinate plane Oe1e2, we tile













1

(a)	(b)

Fig. 10. Illustration to Model I. a) The orthogonal projections of the centers of 3-hexels on the plane P. b) The axes of the coordinate system Oe1e2e3. The rays e1 and −e2 make an angle of 120 degrees.
the space upward and downward by adjacent copies of h. Thus, we obtain a tiling of R3.
In the discrete coordinate plane Oe1e2 one can consider the four quadrants QuadI, QuadII, QuadIII, and QuadIV , determined by the coordinate axes. By construction, the centers of the 3-hexels form a lattice H in R3. Note that every two neighboring 3-hexels are 2-adjacent. No 0- or 1-tunnels are
possible in a connected set of 3-hexels.
Analytical Discrete Plane
Consider a Euclidean plane P with equation
a1x1 + a2x2 + a3x3 = b,  a1, a2, a3,b ∈ Z,
with respect to the defined coordinate system. Assume as before that gcd(a1, a2, a3) divides b, i.e., P contains a 2-dimensional lattice L which is a sublattice of H.
We nowdefine a universal discrete plane corresponding to P , as the set
PD(a1, a2, a3, b)= {x ∈ H :0 ≤ a1x1 + a2x2 + a3x3 + b + [t/2♩ < t},	(3) where
t =  |a1| + |a2| + |a3|, if n = (a1, a2) ∈ C1,
max(|a1|, |a2|, |a3|), if n = (a1, a2) ∈ C2.
C1 and C2 are cones in the coordinate plane Oe1e2, defined analogously as before. The parameter t is called the universal width of the plane PD.
By the construction of the discrete space, the so defined discrete plane is always tunnel-free, and appears to be the thinnest possible tunnel-free discrete plane of this type. Similar to the 2D case, planes with thickness t = |a1| +
|a2| + |a3| possess the containment property, while those with thickness t = max(|a1|, |a2|, |a3|), in general, don’t.



Q


B
(a)
P

(b)

Fig. 11. a) The point B is in a distance √3 from the Euclidean plane passing through the point A and orthogonal to the straight line AB. b) The diagonal PQ 
of a 3-hexel is shorter than the one of the unit cube, that is √3.

(a)	(b)

Fig. 12. Illustration to a brick-built version of model I.
Optimality Issues
First we remark that a 3-hexel has a total area of its surfels (faces) equal to
6 × a +2 × 1= 3.72241 ... +2 = 5.72241 ..., 
which is less than the one of the unit cube, that is 6. This leads to similar conclusions as in the 2D case regarding the grid cost, which can be defined as the total area of the surfels of the tiles involved.
Most importantly, the definition of a discrete plane within Model I ensures better approximation to the continuous plane compared to the classical cubic model. In√fact, a tunnel-free standard plane may contain voxels that are in a
distance	3 from the continuous plane (see Figure 11a), while within Model
I this distance is clearly smaller. This can be immediately deduced from the fact that the longest diagonal of a 3-hexel is equal to
f = (1+ (2a)2)1/2 = 1.59361 ..., 
which is less than √3= 1.73205 ... (see Figure 11b).
It is not hard to show that the right prism with a regular hexagonal base provides better approximation than the ones inclined and/or with quasi- regular hexagonal bases.













O

(a)	(b)

Fig. 13. Illustration to Model II. a) Projections of two consecutive slices of 3-hexels on the coordinate plane Oe1e2. b) The axes of the coordinate system Oe1e2e3.
Similar considerations and conclusions hold for the case of brick-built mod- els, when the hexagonal prisms are substituted by rectangular prisms (see Fig- ure 12). One can showthat with respect to the value of the maximal possible deviation from the continuous plane, the honeycomb model is superior to the brick-built one, while the latter is superior to the cubic model.

Model II
Consider the regular hexagonal tiling of the plane. On every tile we build the corresponding 3-hexel. Thus we obtain a discrete plane P0.
We fix one of the hexels and choose its center O(0, 0) as origin of the coordinate system. Then we choose the axes e1 and e2 as in the 2D case. Thus we obtain one of the discrete coordinate planes, namely Oe1e2. We now build on the top of the discrete plane P0 a next “slice,” equivalent to P0 and shifted as illustrated on Figure 13a. Proceeding analogously upward and downward, we obtain a tiling of R3. We notice that the tiles’ centers constitute a lattice in R3.
We now determine the third axis e3 as shown in Figure 13b. Similar to Model I, a connected set of 3-hexels is always 2-connected and does not contain any 0- and 1-tunnels. In the obtained discrete space, we can define with respect to the coordinate system Oe1e2e3 a discrete plane in the same way as in the framework of Model I. One can see that it is always tunnel-free and is the thinnest possible tunnel-free discrete plane of this type. One can also showthat a discrete plane defined by (3) provides a better approximation to the corresponding continuous plane (in terms of maximal deviation from the continuous plane) than the corresponding standard plane within the cubic model.
The comparison with the brick-built model (Figure 14) leads to similar conclusions as in the case of Model I. Discrete spheres can be defined and









O
(a)	(b)

Fig. 14. Illustration to a brick-built version of Model II.
studied similarly to discrete circles.
We conclude the discussion on 3D honeycomb models with one more remark. In Model I, every 3-hexel h of the 3D discrete space has fourteen 2-neighbors: one for the upper hexagonal face, one for the lower hexagonal face, and two for each one of the six side rectangular faces. In Model II, the structure of a 3-hexel neighborhood is completely different: there are four neighbors for every one of the two hexagonal faces and one for each of the six rectangular faces. Nevertheless, the overall number of neighboring 3-hexels is the same as in Model I, i.e., fourteen. It is not hard to show that the two neighborhood structures relative to Model I and Model II, respectively, are the only ones possible, under the condition that the tiling is uniform and any two adjacent tiles are 2-adjacent.

Algorithmic and Complexity Issues
The considered analytical discrete primitives (discrete straight lines and line segments, discrete circles and planes) admit an efficient algorithmic gener- ation. They can be obtained in time that is linear in the number of the generated hexels. This can be done in several different ways. We will show that the well-known linear time algorithms that work in the framework of the square/cubic models, can be transferred straightforwardly to the case of the considered honeycomb models. This can be illustrated more easily for discrete straight lines and segments. Let a 2D discrete line gD in the 2D discrete hexag- onal space be given. To each 2-hexel corresponds a rhombus with the same center and with sides determined by the basis vectors of the space Ob1b2 (see Figure 15). This correspondence defines an (imaginary) rhomboidal discrete space Ob1b2 with the same center and basis vectors, as shown in Figure 15. In it, the rhombuses with centers corresponding to the hexels of the given

discrete line gD constitute a discrete line
g¯. If the normal vector n to the

continuous line g belongs to the cone C1, then g¯ is a standard discrete line



Fig. 15. Hexagonal discrete space with two discrete line segments in it, together with the corresponding rhomboidal discrete space.
in Ob1b2. Otherwise, if n ∈ C2, g¯ is a naive line in Ob1b2. These kinds of
lines can be generated through the well-known efficient linear algorithms for generation of standard and naive lines, respectively (see [6]). Because of the above mentioned one-to-one correspondence between 2-hexels and rhombuses, we obtain the centers of the hexels of the honeycomb discrete line. Thus the time-complexity of honeycomb discrete line generation matches the time- complexity of the algorithms for standard or naive line generation, depending on the cone to which the normal vector n belongs. Note that if n ∈ C2, we need to construct a naive discrete line in the rhomboidal model. Thus in this case the algorithm efficiency will be superior to the one for generation of 0-tunnel-free (standard) line within the classical square model. The above considerations easily extend to the two 3D honeycomb models of Section 4.1 and 4.2. Since in both models the hexels’ centers form lattices, to each 3-hexel h corresponds a parallelepiped which has the same center as h and whose up- per and lower faces are portions of the planes containing the two hexagonal faces of h. Thus we obtain a discrete 3D space Oe1e2e3 with the same center and basis as Oe1e2e3, whose cells are parallelepipeds. With respect to this new (imaginary) space, one can search a plane discretization applying the well-known algorithms for generation of standard or naive planes, depending on the cone to which the projection of the normal vector to the plane belongs.

Concluding Remarks
We have proposed honeycomb models for raster graphics based on a hexago- nal grid (resp. hexagonal prism tilings). We have shown how one can develop analytical discrete geometry within these models. In particular, we have de- fined lines (in the 2D space) and planes (in the 3D space). We have observed that the honeycomb models ensure discretizations, which are superior to the classical ones.
One can develop methods for discretizing more sophisticated objects (es- pecially in R3), like 3D line segments, polygons and meshes of polygons. For this, one can appropriately modify certain discretization schemes and algo-

rithms, which have been developed for classical square/cubic models (see, e.g., [9,2,3,4]). Note that some problems that required long and complicated solutions within the classical model (see, e.g., [2,3]), in the new models can be handled more easily. The reason is that in honeycomb environment obtaining tunnel-free objects is easier, due to the properties of the honeycomb grids. In our opinion, the honeycomb models can serve as a useful alternative to the classical square and cubic models for a broad class of problems.

References
Andres, E., “Cercles Discrets et Rotations Discr`etes,” Th`ese de Doctorat, Centre de Recherche en Informatique, Universit´e Louis Pasteur, Strasbourg, France, 1992.
Barneva, R.P., V.E. Brimkov, and Ph. Nehlig, “Thin Discrete Triangular Meshes,” Theoretical Computer Science (Elsevier) 246 (1-2) (2000) 73–105.
Brimkov, V.E., R.P. Barneva, and Ph. Nehlig, “Minimally Thin Discrete Triangulations,” In: Volume Graphics, M. Chen, A. Kaufman, R. Yagel (Eds.), Springer Verlag (2000) Chapter 3, 51–70.
Brimkov, V.E., and R.P. Barneva, “Graceful Planes and Lines,” Theoretical Computer Science (Elsevier), to appear.
Cohen, D., and A. Kaufman, “3D Line Voxelization and Connectivity Control,” In: Proc. CG&A (1997) 1–24.
Reveill`es, J.-P., “G´eom´etrie Discr`ete, Calcul en Nombres Entiers et Algorithmique,” Th`ese d’E´tat, Universit´e Louis Pasteur, Strasbourg, France, 1991.
Saha, P., and A. Rosenfeld, “Strongly Normal Sets of Convex Polygons or Polyhedra,” Pattern Recognition Letters, 19 (1998) 1119–1124.
Sonka, M., V. Hlavac, and R. Boyle, “Image Processing, Analysis, and Machine Vision” (2nd Edition), IT Pu. Co., 1998.
Stojmenovic, I., and R. Tosic, “Digitization Schemes and the Recognition of Digital Straight Lines,” Hyperplanes and Flats in Arbitrary Dimensions. Digital Geometry. Contemporary Math. Series, Amer. Math. Soc. Providence, RI 119 (1991) 197–212.
