

Electronic Notes in Theoretical Computer Science 238 (2009) 103–119
www.elsevier.com/locate/entcs
Variant Narrowing and Equational Unification
Santiago Escobar1
Universidad Polit´ecnica de Valencia, Spain.
Jos´e Meseguer2
University of Illinois at Urbana-Champaign, USA.
Ralf Sasse3
University of Illinois at Urbana-Champaign, USA.

Abstract
Narrowing is a well-known complete procedure for equational E-unification when E can be decomposed as a union E = Δ  B with B a set of axioms for which a finitary unification algorithm exists, and Δ a set of confluent, terminating, and B-coherent rewrite rules. However, when B /= $, effective narrowing strategies such as basic narrowing easily fail to be complete and cannot be used. This poses two challenges to narrowing-based equational unification: (i) finding effective narrowing strategies that are complete modulo
B under mild assumptions on B, and (ii) finding sufficient conditions under which such narrowing strategies yield finitary E-unification algorithms. Inspired by Comon and Delaune’s notion of E-variant for a term, we propose a new narrowing strategy called variant narrowing that has a search space potentially much smaller than full narrowing, is complete, and yields a finitary E-unification algorithm when E has the finite variant property. We also discuss applications to symbolic reachability analysis of concurrent systems specified as rewrite theories, and in particular to the formal analysis of cryptographic protocols modulo the algebraic properties of the underlying cryptographic functions.
Keywords: Equational unification, narrowing, finite variant property, symbolic reachability analysis, cryptographic protocol analysis.


Introduction
Equational unification is the solving of existentially quantified problems ∃x t =E t' modulo an equational theory E. If the equations E are convergent, it is well-known that narrowing provides a complete unification procedure for E-unification [13]. This result extends to narrowing modulo a set B of equational axioms. That is, if

1 Email: sescobar@dsic.upv.es
2 Email: meseguer@cs.uiuc.edu
3 Email: rsasse@cs.uiuc.edu

1571-0661/© 2009 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2009.05.015

E = Δ  B, where Δ is a set of oriented equations that are convergent and coher- ent modulo B, then narrowing with Δ modulo B is also a complete E-unification procedure [14]. In practice, however, full narrowing, i.e., considering all narrowing sequences, can be highly inefficient. This has led to the search for complete narrow- ing strategies that have a much smaller search space; and to conditions under which narrowing terminates, so that a finitary unification algorithm can be obtained. Hul- lot’s basic narrowing [13] is one such strategy, which is complete 4 and terminates under suitable conditions. The problem, however, is that basic narrowing is com- plete for B = ∅, but is incomplete for a general set B of axioms, and in particular for associativity-commutativity (AC) (see [22,2] and Example 7.3).
This paper addresses the problem of finding complete narrowing procedures modulo B, under minimal assumptions on B, which have a much smaller search space than full narrowing, and for which finitary unification conditions can be given. Specifically, inspired by the notion of E-variant of a term due to Comon and Delaune [2], we propose a new narrowing method called variant narrowing with the following properties: (i) it only uses substitutions in normal form modulo B; (ii) it is complete under very general assumptions on B and Δ; (iii) if Δ has the finite variant property modulo B, it can be used to both compute all the finite variants of a term in a very space-effective way, and to obtain a ﬁnitary E-unification algorithm.
Indeed, when Δ has the finite variant property modulo B, we explain in detail how variant narrowing can be specialized into two terminating algorithms, one for computing the finite set of variants of any term, and another optimized one for providing a finitary E-unification algorithm that computes a complete and minimal set of E-unifiers.
Our own, specific motivation for working on this topic comes from our interest in developing complete methods for symbolic reachability analysis of a concurrent system specified as a rewrite theory of the form R = (Σ, E, R), where the states
of the system are equivalence classes of Σ-terms modulo E, and the concurrent transitions are specified by rewrite rules R, which are applied modulo E to such states. Symbolic reachability analysis problems for R are then goals of the form
∃x t −→∗	t'. That is, we are given a possibly infinite set of initial states denoted
by the term t with variables, and we want to know whether there is a substitution instance of t from which we can reach a substitution instance of the set of states denoted by the term t'. Under reasonable assumptions on R, such as the topmost character of the rules R (see [18]), narrowing with the rules R modulo E provides a complete semidecision procedure for solving such reachability goals.  But this
procedure of course requires performing E-unification at each narrowing step with a rule in R. If E = Δ B, where Δ is a set of oriented equations that are convergent and coherent modulo B, then E-unification can be performed by narrowing with Δ modulo B. But this can produce an infinite set of unifiers for each single step of narrowing modulo E with a rule in R, making the entire reachability analysis still possible, but very ineffective. A much more attractive case is one in which Δ has the

4 Basic narrowing is complete for normalized substitutions, see [13], though it does also produce non- normalized substitutions.

finite variant property modulo B, and we have a finitary unification algorithm for B. In particular, this situation can often occur in rewrite theories R = (Σ, Δ B, R), where R describes the transitions of a cryptographic communication protocol, and the equational theory E = Δ B describes the algebraic properties of the cryptographic functions.
To make explicit the relationship of the present work with these applications, we use one such cryptographic theory E = Δ B (including encryption-decryption and exclusive or) as our running example. Also, in Section 6 we discuss yet another cryptographic theory underlying the Diffie-Hellman protocol for which variant nar- rowing has been used to find an attack in the Maude-NPA tool [6,7,5]. Our own experience (see [7,5]) has taught us an important additional lesson, namely, that a typed setting supporting sorts and subsorts can greatly help in making narrowing- based unification algorithms finitary. For this reason, we develop the entire paper in the setting of order-sorted equational theories.
The paper is organized as follows. In Section 2 we explain basic concepts and rewriting. Then in Section 3 we introduce the necessary narrowing concepts. In Section 4 we recapitulate results about variants and explain our variant narrowing approach. Section 5 describes our variant narrowing procedure for equational uni- fication. Section 6 describes an application of our work to cryptographic protocol analysis. We conclude in Section 7 and discuss related and future work. If you are interested in the proofs you can find them in the technical report [9].

Preliminaries
We follow the classical notation and terminology from [21] for term rewriting and from [16,17] for rewriting logic and order-sorted notions. We assume an order- sorted signature Σ with a finite poset of sorts (S, ≤) and a finite number of function symbols. We furthermore assume that: (i) each connected component in the poset ordering has a top sort, and for each s ∈ S we denote by [s] the top sort in the component of s; and (ii) for each operator declaration f : s1 × ... × sn → s in Σ, there is also a declaration f : [s1] × ... × [sn] → [s]. We assume an S-sorted family
X = {Xs}s∈S of mutually disjoint variable sets with each Xs countably infinite.
TΣ(X )s is the set of terms of sort s, and TΣ,s is the set of ground terms of sort
s. We write TΣ(X ) and TΣ for the corresponding term algebras. For a term t we write Var (t) for the set of all variables in t, and write Var (t1,..., tk) instead of
Var (t1) ∪ ··· ∪ Var (tk). The set of positions of a term t is written Pos(t), and the set of non-variable positions PosΣ(t). The root of a term is Λ. The subterm of t at position p is t|p and t[u]p is the term t where t|p is replaced by u. A substitution σ is a sorted mapping from a finite subset of X , written Dom(σ), to TΣ(X ). The set of variables introduced by σ is Ran(σ). The identity substitution is id. Substitutions
are homomorphically extended to TΣ(X ). The application of a substitution σ to a term t is denoted by tσ. The restriction of σ to a set of variables V is σ|V . Composition of two substitutions is denoted by σσ', meaning X(σσ') = (Xσ)σ' for
any variable X. We call a substitution σ a renaming if there is another substitution

σ−1 such that (σσ−1)|Dom(σ) = id.
A Σ-equation is an unoriented pair t = t', where t, t' ∈ TΣ(X )s for some sort s ∈ S. Given Σ and a set E of Σ-equations such that TΣ,s /= ∅ for every sort s, order- sorted equational logic induces a congruence relation =E on terms t, t' ∈ TΣ(X ) (see [17]). Throughout this paper we assume that TΣ,s /= ∅ for every sort s. An equational theory (Σ, E) is a set of Σ-equations.
The E-subsumption preorder ≤E (or ≤ if E is understood) holds between t, t' ∈
TΣ(X ), denoted t ≤E t' (meaning that t is more general than t'), if there is a substitution σ such that tσ =E t'; such a substitution σ is said to be an E-match
from t to t'. For substitutions σ, ρ and a set of variables V we define σ|V =E ρ|V if xσ =E xρ for all x ∈ V ; σ|V ≤E ρ|V if there is a substitution η such that (ση)|V =E ρ|V ; σ|V  E ρ|V if there is a renaming η such that (ση)|V =E ρ|V ; and σ|V <E ρ|V if σ|V ≤E ρ|V and σ|V / E ρ|V .
An E-uniﬁer for a Σ-equation t = t' is a substitution σ such that tσ =E t'σ. For Var (t) ∪ Var (t') ⊆ W , a set of substitutions U is said to be a complete set of E-unifiers of the equation t = t' away from W if: (i) each σ ∈ U is an E-unifier of t = t'; (ii) for any E-unifier ρ of t = t' there is a σ ∈ U such that σ|W ≤E ρ|W ;
(iii) for all σ ∈ U , Dom(σ) ⊆ (Var (t) ∪ Var (t')) and Ran(σ) ∩ W = ∅. We write CSUE(t = t') to denote a complete set of E-unifiers of t = t'. A complete set of E-unifiers CSUE(t = t') is called minimal if any proper subset of CSUE(t = t') fails to be complete.
We say that an equational theory (Σ, E) has a uniﬁcation algorithm if there is an algorithm generating a complete set of E-unifiers CSUE(t = t') for any E- unification problem t = t' in (Σ, E); we say that the algorithm is ﬁnitary if the generated set CSUE(t = t') is always finite for any t = t'; and we say that the algorithm is minimal if the generated set CSUE(t = t') is always minimal for any t = t'.
A rewrite rule is an oriented pair l → r, where l /∈ X , and l, r ∈ TΣ(X )s for some sort s ∈ S. An (unconditional) order-sorted rewrite theory is a triple R = (Σ, E, R)
with Σ an order-sorted signature, E a set of Σ-equations, and R a set of rewrite
p
rules. The rewriting relation on TΣ(X ), written t →R t' or t	t' holds between t
and t' iff there exist p ∈ PosΣ(t), l → r ∈ R and a substitution σ, such that t|p = lσ,
and t' = t[rσ]p. The relation →R/E on TΣ(X ) is =E; →R; =E. Note that →R/E
on TΣ(X ) induces a relation →R/E on TΣ/E (X ) by [t]E →R/E [t']E iff t →R/E t'.

The transitive closure of →R/E is denoted by →+
and the transitive and reflexive

closure of →R/E is denoted by →∗	. We say that a term t is →R/E-irreducible (or
just R/E-irreducible) if there is no term t' such that t →R/E t'.
We say that the relation →R/E is terminating if there is no infinite sequence
t1 →R/E t2 →R/E ··· →R/E ··· . We say that the relation →R/E is confluent if

whenever t →∗
t' and t →∗
t'', there exists a term t''' such that t' →∗
t'''

and t'' →∗
t'''. We say that →R/E is convergent if it is confluent and terminat-

ing. An order-sorted rewrite theory R = (Σ, E, R) is convergent (resp. terminat- ing, confluent) if the relation →R/E is convergent (resp.  terminating, confluent).

In a convergent order-sorted rewrite theory, for each term t ∈ TΣ(X ), there is a unique (up to E-equivalence) R/E-irreducible term t' obtained from t by rewriting

to canonical form, which is denoted by t →!
t' or t↓R/E (when t' is not relevant).

For substitutions σ, ρ and a set of variables V we define σ|V →R/E ρ|V if there is X ∈ V such that Xσ →R/E Xρ and for all other Y ∈ V we have Yσ =E Y ρ. We write σ↓R/E for the normalized version of σ. A substitution σ is called R/E- normalized if Xσ is R/E-irreducible for all X ∈ Dom(σ).

R, E-rewriting
Since E-congruence classes can be infinite, →R/E-reducibility is undecidable in gen- eral. Therefore, R/E-rewriting is usually implemented [14] by R, E-rewriting. We assume the following properties on R and E:
E is regular, i.e., for each t = t' in E, we have Var (t) = Var (t'), and sort- preserving, i.e., for each substitution σ, we have tσ ∈ TΣ(X )s if and only if t'σ ∈ TΣ(X )s, and all variables in Var (t) have a top sort.
E has a finitary and complete unification algorithm, which implies that E- matching is finitary and complete.
For each t → t' in R we have Var (t') ⊆ Var (t).
R is sort-decreasing, i.e., for each t → t' in R, each s ∈ S, and each substitution
σ, t'σ ∈ TΣ(X )s implies tσ ∈ TΣ(X )s.
The rewrite rules R are confluent and terminating modulo E, i.e., the relation
→R/E is confluent and terminating.
Definition 2.1 [3,23,20] Let R = (Σ, E, R) be an order-sorted rewrite theory satis- fying properties (i)–(v) above. We define the relation →R,E on TΣ(X ) by t →R,E t' iff there is a p ∈ PosΣ(t), l → r in R and substitution σ such that t|p =E lσ and t' = t[rσ]p.
Note that, since E-matching is decidable, →R,E is decidable. Notions such as con- fluence, termination, irreducible terms or normalized substitution are defined in a straightforward manner for →R,E.  Note that since R is convergent (modulo E),
the relation →!	is decidable, i.e., it terminates and produces a unique term (up
to E-equivalence) for each initial term t, denoted by t↓R,E. Of course t →R,E t'
implies t →R/E t', but the converse need not hold. To prove completeness of →R,E
w.r.t. →R/E we need the following additional assumption.
→R,E is E-coherent [20,14], i.e., ∀t1, t2, t3 we have t1 →R,E t2 and t1 =E t3

implies ∃t4, t5 such that t2 →∗
t4, t3 →+
t5, and t4 =E t5.

The following theorem in [14, Proposition 1] that generalizes ideas in [20] and has an easy extension to order-sorted theories, links →R/E with →R,E.
Theorem 2.2 (Correspondence) [20,14] Let R = (Σ, E, R) be an order-sorted
rewrite theory satisfying properties (i)–(vi) above. Then t1 →!	t2 if and only if

!
R,E
t3 where t2 =E t3.

R, E-Narrowing
Narrowing generalizes rewriting by performing unification at non-variable positions instead of the usual matching. The essential idea behind narrowing is to symbolically represent the rewriting relation between terms as a narrowing relation between more general terms.
Definition 3.1 (see, e.g., [14,18]) Let R = (Σ, E, R) be an order-sorted rewrite theory satisfying properties (i)–(vi) above. Let E has a minimal, finitary and com- plete unification algorithm. The R, E-narrowing relation on TΣ(X ) is defined as

t ~σ
R,E
t' (or ~σ
if R, E is understood) if there is p ∈ Pos
Σ(t), a rule l → r in R,

and σ ∈ CSUE(t|p = l) such that t' = (t[r]p)σ.


In the following, we write t ~id

R,E
t' instead of t ~θ

R,E
t' when θ|Var (t)
is a re-

naming, to indicate that θ does not really introduce new terms in t. The following results originally established in [14, Propositions 2 and 3] and extended to order- sorted theories link →R,E with ~R,E.
Theorem 3.2 (Correctness) [14] Let R = (Σ, E, R) be an order-sorted rewrite

theory satisfying properties (i)–(vi) above. If t1 ~θ ∗
t2, then for any substitution ρ,

t1θρ →∗
t2ρ. Furthermore, the number of narrowing steps in t1 ~θ ∗
t2 coincides

with the number of rewrite steps in t1θρ →∗	t2ρ.
Theorem 3.3 (Completeness w.r.t. Normalized Substitutions) [14]	Let
R =(Σ, E, R) be an order-sorted rewrite theory satisfying properties (i)–(vi) above.
Let t1 be a term and θ be a R, E-normalized substitution. If t1θ →!	t2, then there

exists a term t'
and two R, E-normalized substitutions θ' and ρ s.t.
'
t1 ~R,E
t' ,

θ|Var(t ) =E (θ'ρ)|Var(t ), and t2 =E t' ρ. Furthermore, the number of rewriting and
1	1	2
narrowing steps coincide.
We can easily extend the previous result to allow non-normalized substitutions.
Lemma 3.4 (Completeness) Let R = (Σ, E, R) be an order-sorted rewrite theory satisfying properties (i)–(vi) above. Let t1 be a term and θ be any substitution. If

t1θ →!
t2, then there exists a term t'
and two R, E-normalized substitutions θ'

and ρ s.t.
'
t1 ~R,E
t' , (θ↓

R,E
)|Var (t1) =E
(θ'ρ)|Var (t )
, and t2 =E
t' ρ.

The narrowing relation ~R,E is known to give a sound and complete R E- unification procedure [14, Theorem 5] that under assumptions (i)–(vi) can be ex- tended to order-sorted theories in a straightforward way. By abuse of notation, we view R E as an equational theory even though R is defined as a set of rules instead of a set of equations.
Theorem 3.5 (Complete R  E-unification Procedure) [14] Let R = (Σ, E, R)
be an order-sorted rewrite theory satisfying properties (i)–(vi) above. Let t, t' be two
'  σ ∗

terms.  Then, the set of substitutions σ|Var(t,t') such that (t ≈ t ) ~b
tt is a

complete set of R  E-uniﬁers for t = t', where ≈ and tt are new symbols 5 and
R^ = R ∪ {x ≈ x → tt}.
When we restrict ourselves to order-sorted rewrite theories satisfying properties (i)–(vi) above, the complete set of unifiers of two terms can be restricted to normal- ized substitutions without loss of generality, as shown in the following Proposition. Moreover, we can obtain a minimal complete set of unifiers by considering only the most general normalized substitutions.
Proposition 3.6 (Minimal and Complete R E-unification Procedure) Let R = (Σ, E, R) be an order-sorted rewrite theory satisfying properties (i)–(vi) above. Let t, t' be two terms. Then, the set of substitutions σ|Var(t,t') such that

(t ≈ t') ~σ ∗
R,E
tt and there is no narrowing sequence (t ≈ t') σ' ∗
R,E
tt such that

σ'|Var(t,t') <E σ|Var(t,t'), is a minimal and complete set of R  E-uniﬁers for t = t'.
Variants and Variant Narrowing
Although the narrowing relation ~R,E gives a sound and complete R E-unification procedure, narrowing can be infinite in general, that is, this R E-unification proce- dure may not terminate even if a finite number of unifiers exist. A natural approach would be to study classes of rewrite theories where R E-unification is finitary and the narrowing relation ~R,E is terminating, as studied for the case when E = ∅ in [13,15,4,19]. However, narrowing modulo E can generate many infinite sequences, specially when we consider associativity and commutativity axioms, as shown in [2,22], making it impossible to extend the good termination properties of previously studied classes of rewrite theories. In this paper, we propose a new notion of narrow- ing with rules Δ modulo axioms B, called variant narrowing, that: (i) is complete for any (Σ, B, Δ) satisfying the properties (i)–(vi) and avoids many wasteful nar- rowing sequences that would be created by full narrowing; and (ii) if the rules Δ satisfy the finite variant property modulo B as defined by Comon and Delaune in [2], then it can be specialized into a terminating and complete narrowing algorithm. We first need the notion of decomposition of an equational theory into rules and axioms.
Definition 4.1 Let (Σ, E) be an order-sorted equational theory. We call (Δ, B) a decomposition of E if E = Δ B and (Σ, B, Δ) is an order-sorted rewrite theory satisfying properties (i)–(vi).
Example 4.2 Let us consider the following equational theory for the exclusive or operator and the cancellation equations for public encryption/decryption. The exclusive or symbol ⊕ has associative and commutative (AC) properties with 0 as its unit. The symbol pk is used for public key encryption and the symbol sk for private key encryption. The equations E are as follows.

5 That is, we extend Σ to Σb by adding a new sort Truth, not related to any sort in Σ, with constant tt, and for each top sort of a connected component [s], an operator ≈ : [s] × [s] → Truth.



X ⊕ 0= X (1)
X ⊕ X = 0 (2)
X ⊕ X ⊕ Y = Y (3)
pk(K, sk(K, M )) = M (4)
sk(K, pk(K, M )) = M (5)
X ⊕ (Y ⊕ Z)= (X ⊕ Y ) ⊕ Z (6)
X ⊕ Y = Y ⊕ X	(7)


This equational theory (Σ, E) has a decomposition into Δ containing the ori- ented version of equations (1)–(5) and B containing the last two associativity and commutativity equations (6)–(7) for ⊕. Note that equations (1)–(2) are not AC- coherent, but adding equation (3) is sufficient to recover that property.
Since narrowing can be infinite in general (specially when we consider associativ- ity and commutativity axioms) we use the notion of variant, and of ﬁnite variants and the ﬁnite variant property proposed by Comon and Delaune in [2] as a tech- nical concept that will provide a suitable characterization of unification w.r.t. an equational theory E in terms of narrowing.
Definition 4.3 [2] Given a term t and an equational theory E, we say that (t', θ) is an E-variant of t if tθ =E t', where Dom(θ) ⊆ Var (t) and Ran(θ) ∩ Var (t) = ∅.
Definition 4.4 [2] Let (Δ, B) be a decomposition of an equational theory (Σ, E). A minimal and complete set of E-variants of a term t, denoted VΔ,B(t), is a set S of E-variants of t such that, for each substitution σ, there is a variant (t', ρ) ∈ S and a substitution θ such that: (i) t' is Δ, B-irreducible, (ii) (tσ)↓Δ,B =B t'θ, (iii) (σ↓Δ,B)|Var(t) =B (ρθ)|Var(t), and (iv) (t', ρ) is minimal, i.e., there is no (t'', ρ') ∈ S and τ such that ρ|Var(t) =B (ρ'τ )|Var(t) and t' =B t''τ .
Note that, due to the use of minimality in the previous definition, membership in VΔ,B(t) is checked modulo renaming, i.e., (t', ρ) ∈ VΔ,B(t) if there is (t'', ρ') in the set VΔ,B(t) and a renaming τ such that ρ =B ρ'τ and t' =B t''τ .
Definition 4.5 [2] Let (Δ, B) be a decomposition of an order-sorted equational theory (Σ, E). Then E, and thus (Δ, B), has the ﬁnite variant property if for each term t, we can compute a finite, minimal, and complete set of E-variants, denoted FVΔ,B(t). We will call (Δ, B) a ﬁnite variant decomposition of E if (Δ, B) has the finite variant property.
Example 4.6 For (Σ, E) the theory in Example 4.2, (0, id) is an E-variant of the term t = M ⊕ sk(K, pk(K, M )). In fact, {(0, id)} is a minimal and complete set of E-variants, because for any substitution σ we have tσ↓Δ,B = 0 =B 0 id. Thus this one variant fulfills the requirements of being a minimal and complete set of E-variants of t.
For the term s = X ⊕ sk(K, pk(K, Y )) we get seven variants that make up the minimal and complete set of E-variants. Specifically, (X ⊕ Y, id), (Z, {X '→ 0,Y '→ Z}), (Z, {X '→ Z, Y '→ 0}), (Z, {X '→ Z ⊕ U, Y '→ U}), (Z, {X '→ U, Y '→ Z ⊕ U}),
(0, {X '→ U, Y '→ U}), and (Z1⊕Z2, {X '→ U⊕Z1,Y '→ U⊕Z2}) are the E-variants;
indeed they are a minimal set. The minimality is easily checked as none of the seven given variants subsumes another one, and completeness is left for Example 4.11.

The following result from Comon and Delaune provides the necessary connection between a decomposition and the finite variant property.
Lemma 4.7 [2] Let (Δ, B) be a decomposition of an equational theory (Σ, E). (Δ, B) satisﬁes the ﬁnite variant property if and only if for every term t, there is a ﬁnite set Θ(t) of substitutions such that
∀σ, ∃θ ∈ Θ(t), ∃τ s.t. (σ↓Δ,B)|Var(t) =B (θτ )|Var(t) ∧ (tσ)↓Δ,B =B ((tθ)↓Δ,B)τ Informally, if there is a finite number of substitutions, satisfying the properties
of Lemma 4.7, then narrowing should be able to find those substitutions after a
finite number of steps. This idea is characterized by the following definition.
Definition 4.8 [2] Let (Δ, B) be a decomposition of an equational theory (Σ, E). (Δ, B) satisfies the boundedness property if for every term t there exists an integer n, denoted #Δ,B(t), such that for every Δ, B-normalized substitution σ the normal form of tσ is reachable by a Δ, B-rewriting derivation whose length can be bounded by n (thus independently of σ):


∀t, ∃n, ∀σ, t(σ↓

Δ,B
≤n
−→Δ,B
(tσ)↓

Δ,B


Finally, the following result provides the necessary connection between the bound- edness property and the finite variant property.
Theorem 4.9 [2] Let (Δ, B) be a decomposition of an equational theory (Σ, E). Then, (Δ, B) satisﬁes the boundedness property if and only if (Δ, B) is a ﬁnite variant decomposition of (Σ, E).
Therefore, we can effectively compute a complete and minimal set of variants in the following form.
Proposition 4.10 (Computing the Finite Variants I) Let (Δ, B) be a ﬁnite variant decomposition of an order-sorted equational theory (Σ, E). Let t ∈ TΣ(X ) and #Δ,B(t) = n. Then, (s, σ) ∈ FVΔ,B(t) if and only if there is a narrowing

derivation
σ' ≤n
t	Δ,B
s such that s is →Δ,B
-irreducible, σ'|Var(t)
is →
Δ,B
-normalized,

σ'|Var(t)  E σ, and there are no term s' and →Δ,B-normalized substitutions σ'',τ 

such that τ is not a renaming,
σ'' ≤n
t	Δ,B
s', (σ''τ )|
Var (t) =B
σ'|Var (t)
, and s'τ =B s.

Example 4.11 The equational theory from our running example, i.e., Example 4.2, has the boundedness property, which is shown in [9]. Thus, we can use Proposi-
tion 4.10 to get E-variants of t = M ⊕ sk(K, pk(K, M )).  As t →!	0 we have

id !
Δ,B
0. Therefore, (0, id) ∈ FV
Δ,B
(t) and it is the only element of the minimal

and complete set of E-variants as no more general narrowing sequences are possible.

For s = X ⊕ sk(K, pk(K, Y )) we get (i) s ~id ∗
{X'→0,Y '→Z},Δ,B Z,

∗
{X'→Z,Y '→0},Δ,B
Z, (vi) s ~∗
∗
{X'→Z⊕U,Y '→U},Δ,B
0, and (vii) s ~∗
∗
{X'→U,Y '→Z⊕U},Δ,B
Z1 ⊕ Z2. No more

{X'→U,Y '→U},Δ,B	{X'→U⊕Z1,Y '→U⊕Z2},Δ,B

general narrowing sequences are possible so the set of E-variants is minimal and complete.

4.1	Variant Narrowing
Let us first motivate why an alternative narrowing strategy is necessary for confluent and terminating rewrite theories with rules Δ modulo axioms B. Applying narrow- ing ~Δ,B to perform (Δ B)-unification without any restriction is very wasteful, because as soon as a rewrite step →Δ,B is enabled in a term that has also narrowing steps ~Δ,B, that rewrite step should be taken before any further narrowing steps are applied, thanks to confluence modulo B. This idea is consistent with the im-
plementation of rewriting logic [23] and, therefore, the relation →!	; ~Δ,B  makes
sense as an optimization of ~Δ,B (see [12] for discussion about this idea). However,
this is still a naive approach, since a rewrite step and a narrowing step satisfy a more general property which is the reason for being able to take the rewrite step

and avoiding the narrowing step. Namely, if two narrowing steps t ~σ1
Δ,B t1
and

t ~σ2
Δ,B t2
are possible and we have that σ1 ≤B
σ2 (i.e., σ1
is more general than σ2),

then it is enough to take only the narrowing step using σ1. These improvements
are formalized as follows.
Definition 4.12 Let R = (Σ, B, Δ) be an order-sorted rewrite theory satisfy-

ing properties (i)–(vi).  Let us consider two narrowing steps α1
: t ~σ1
Δ,B s1
and

α  : t ~σ2
Δ,B
s2. We write α1 ≤B
α2 if 6 σ1|Var (t) ≤B
σ2|Var (t)
and α1 ≺B
α2 if

σ1|Var(t) <B σ2|Var(t) (i.e., σ1 is strictly more general than σ2). We write α1  B α2
if σ1|Var(t)  B σ2|Var(t). The relation α1  B α2 between two narrowing steps from t defines a set of equivalence classes between such narrowing steps. In what follows we will be interested in choosing a unique representation α ∈ [α] B in each equiv- alence class of narrowing steps from t. Therefore, α will always denote a chosen unique representative α ∈ [α] B .
Definition 4.13 Let R = (Σ, B, Δ) be an order-sorted rewrite theory satisfying

properties (i)–(vi).	We define
p,σ
t ~Δ,B
s as α :
p,σ
t ~Δ,B
s such that σ is Δ, B-

normalized if σ|Var(t) is not a renaming, α is minimal w.r.t.  the order ≤B, and
α is a chosen unique representative of its  B-equivalence class.
Note that the relation →!	; ~Δ,B is (appropriately) simulated by ~Δ,B, since
in the relation ~Δ,B, rewriting steps are always given priority over narrowing steps.
Lemma 4.14 (Normalization of Variant Narrowing) Let R = (Σ, B, Δ) be an order-sorted rewrite theory satisfying properties (i)–(vi). Let t ∈ TΣ(X ). If t is not Δ, B-irreducible, then, relative to the unique choice of α ∈ [α] B in Deﬁni-

tion 4.12 , there is a unique ~Δ,B

-narrowing sequence from t such that t ~id ∗
t↓Δ,B.



6 By definition, Ran(σ1) ∩ Var (t) = $ and Ran(σ2) ∩ Var (t) = $. Therefore, if σ1|Var (t) ≤B σ2|Var (t) (i.e., ∃τ s.t. (σ1|Var (t))τ =B σ2|Var (t)), then Dom(τ ) ∩ Var (t) = $. In the case σ1 = id and σ2 /= id we can assume, without any loss of generality, that σ1 is a renaming satisfying Ran(σ1) ∩ Var (t) = $ and, therefore, there exists a substitution τ such that (σ1|Var (t))τ =B σ2|Var (t).

The following result ensures that variant narrowing is complete.
Theorem 4.15 (Completeness of Variant Narrowing) Let R = (Σ, B, Δ) be

an order-sorted rewrite theory satisfying properties (i)–(vi). If t ~σ ∗
(tσ)↓
Δ,B
with

σ|Var(t) Δ, B-normalized, and there are no substitutions ρ, ρ' such that ρ' is not a

renaming, then t ~σ ∗
ρ
t ~Δ,B
(tσ)↓
(tρ)↓Δ,B
.
, σ|Var (t) =B
(ρρ')|Var (t)
, and (tσ)↓Δ,B
=B ((tρ)↓Δ,B
)ρ',

Δ,B
Δ,B

Note that the previous theorem is only valid when Δ is confluent modulo B, instead of just ground confluent [21] modulo B, as shown by the following example.
Example 4.16 Let us consider the following rewrite theory, which is terminating and ground confluent but not confluent:
f (x) = 0	f (x) = g(x)	g(0) = 0	g(s(x)) = g(x)

If we consider the term f (x) and the narrowing step taking the first equation, then we compute the most general substitution. However, if we consider f (x) and the narrowing step that takes the second equation, we will compute an infinite number of substitutions, and no one of the them is more general than the identity substitution, computed with the first equation.
Note that the relation ~∗	can still have many infinite narrowing derivations,

e.g., for term t = A ⊕ B in Example 4.2, we have A ⊕ B ~σ
Δ,B
A' ⊕ B' using rule

(3) and substitution σ = {A '→ X ⊕ A',B '→ X ⊕ B'}. However, if (Δ, B) has the finite variant property, those infinite derivations can be safely discarded.
Theorem 4.17 (Computing the Finite Variants II) Let (Δ, B) be a ﬁnite vari- ant decomposition of an order-sorted equational theory (Σ, E). Let t ∈ TΣ(X ) and #Δ,B(t) = n. Then (s, σ) ∈ FVΔ,B(t) if and only if there is a narrowing deriva-

tion
σ' ≤n
t	Δ,B
s such that s is →Δ,B
-irreducible, σ'|Var(t)
is →Δ,B
-normalized, and

σ'|Var (t)  E σ.
Even without assuming the finite variant property, another possibility is com-
bining ~∗	with narrowing strategies that can avoid useless infinite narrowing
derivations such as natural narrowing [11] or finite representations of an infinite search space [8]. This is left for future work.
Variant Narrowing and Equational Unification
Variant narrowing provides a complete equational unification procedure.
Theorem 5.1 (Variant-narrowing Unification Procedure) Let R = (Σ, B, Δ)
be an order-sorted rewrite theory satisfying properties (i)–(vi). Let t, t' be two terms.
'  σ ∗

Then, the set of substitutions σ|Var(t,t') such that (t ≈ t ) ~b
tt (recall the deﬁ-

nition of Δ^
t = t'.
in Theorem 3.5) is a minimal and complete set of R  E-uniﬁers for

In the case that a rewrite theory has the boundedness property, then we can compute a bound on the number of narrowing steps needed to compute a complete set of unifiers.
Corollary 5.2 (Bounded Variant-narrowing Unification Procedure) Let R = (Σ, B, Δ) be an order-sorted rewrite theory satisfying properties (i)–(vi) that also has the boundedness property. Let t, t' be two terms. We can put a bound on

the number of steps in a narrowing sequence of the form (t ≈ t') ~σ ∗
Δ,B
tt. The

bound is #Δ,B(t ≈ t') = #Δ,B(t)+ #Δ,B(t')+ 1. Then, let n = #Δ,B(t ≈ t'), the
'  σ ≤n
set of substitutions σ|Var(t,t') such that (t ≈ t ) ~ Δb ,B tt is a minimal, ﬁnite, and complete set of R  E-uniﬁers for t = t'.
The procedure of Corollary 5.2 for equational unification is unsatisfactory in practice, because a bigger bound allows more useless narrowing sequences up to such a bound. Thus, for a finite variant decomposition (Δ, B) of an equational theory E, the unification problem CSUΔ B(t = t') is solved using the variants as in Theorem 5.3. The meet σ ∩B σ' of two substitutions σ, σ' is the set of most general substitutions τ such that there are minimal ρ and ρ' such that σρ =B σ'ρ', and τ = σρ.
Theorem 5.3 (Finite Variant Unification Procedure) Let R = (Σ, B, Δ) be an order-sorted rewrite theory satisfying properties (i)–(vi) that has also the bound- edness property. Let t, t' be two terms. Let FVΔ B(t) = {(t1, σ1),..., (tn, σn)}

and FVΔ B(t') = {(t' , σ' ),..., (t' , σ'
)}, the set of substitutions (ρρ')|Var(t,t') such

1	1	m	m
that there are i ∈ {1,..., n} and j ∈ {1,..., m} such that ρ ∈ (σi ∩B σ' ) and
ρ' ∈ CSUB(ti = t' ) is a ﬁnite and complete set of R  E-uniﬁers for t = t'.
Example 5.4 Using the equational theory given in Example 4.2 with E = Δ  B and the E-variants found in Example 4.6 we have that for t = M ⊕sk(K, pk(K, M )) the set consisting of only one element, (0, id), is a minimal and complete set of E-variants. For t' = 0 we have that {(0, id)} is a minimal and complete set of E-variants. Then we can answer the E-unification question for t =Δ B t' by con- sidering 0 =B 0 which has a positive answer with substitution id. Therefore we have that id id id = id is an E-unifier of t and t'.
For the term s = X ⊕ sk(K, pk(K, Y )) we have the E-variants as shown in Exam- ple 4.6. Considering s' = a ⊕ b with a, b constants, we have that (a ⊕ b, id) is a minimal and complete set of E-variants for s'. Then the E-unification question of s =E s' can be answered by considering the following combination of E-variants. First, 0 =B a ⊕ b has no solution.  Second, X ⊕ Y =B a ⊕ b has two solutions
{X '→ a, Y '→ b} and {X '→ b, Y '→ a}. Third, Z =B a ⊕ b has only one solution
{Z '→ a ⊕ b} so we get four solutions by combining it with the one in the variants, namely {X '→ 0,Y '→ a ⊕ b}, {X '→ a ⊕ b, Y '→ 0}, {X '→ a ⊕ b ⊕ U, Y '→ U}, and {X '→ U, Y '→ a ⊕ b ⊕ U}. Fourth, Z1 ⊕ Z2 =B a ⊕ b has the two so- lutions {Z1 '→ a, Z2 '→ b} and {Z1 '→ b, Z2 '→ a} and by combination we get
{X '→ U ⊕ a, Y '→ U ⊕ b}) and {X '→ U ⊕ b, Y '→ U ⊕ a}).

Variant Narrowing in the Maude-NPA
Maude-NPA [6] uses backwards search from an insecure state to find attacks or to prove unreachability. This is implemented using backwards narrowing with the protocol rules modulo the equational theory E = Δ B, which represents the algebraic properties of the underlying cryptographic theory. There are two ways to do this. One is to use built-in unification algorithms for each equational theory and combination of equational theories. The other is to use a hybrid approach, for example to use built-in algorithms for B, and a generic algorithm, such as our variant narrowing modulo B, for Δ. We have chosen the second approach for the Maude-NPA tool, as being more readily extensible to different theories with the finite variant property. That is, narrowing is used at two levels in Maude-NPA using a rewrite theory (Σ, Δ B, R), where the algebraic properties of the protocol’s cryptographic functions are axiomatized by the equations Δ B, and the protocol’s transitions are axiomatized by R. At a first level, narrowing with the rules R “in reverse” modulo Δ B performs backwards search from an insecure state to an initial state. At a second level, narrowing with the oriented equations Δ modulo B computes the Δ  B-unifiers needed for the first level.
An important technical aspect for this approach has been the use of order- sorted theories. In order-sorted theories, narrowing will terminate, providing a finitary unification algorithm, in many cases in which unsorted narrowing will not. Furthermore, even in the case in which both terminate, order-sorted narrowing will often produce a smaller search space. Two interesting examples of this use of order-sorted theories to obtain finitary unification algorithms are the approximate theory for associativity in [7] and the Diffie-Hellman exponentiation theory of [5]. In both cases, narrowing with the corresponding unsorted theories is non-terminating, whereas narrowing with the order-sorted theories does terminate.
In order to demonstrate the use of associativity and commutivity (AC) in the Maude-NPA tool [6], an example involving the well-known Diffie-Hellman key agree- ment protocol was used in [5]. This protocol uses exponentiation in order to generate a shared secret between two parties, and is the basis for most exist- ing key agreement protocols today. The order-sorted signature Σ is defined as g : → Gen, exp : Gen∨Exp × NeNonceSet → Exp, exp : Gen × NeNonceSet → Exp, and ∗ : NeNonceSet × NeNonceSet → NeNonceSet, together with the fol- lowing subsort relations Nonce < NeNonceSet, and Gen Exp < Gen∨Exp. The equational theory underlying such protocol is described as the oriented equations Δ = { exp(exp(W, Y ), Z) = exp(W, Y ∗ Z) } and the axioms B = { (X ∗ Y ) ∗ Z = X ∗ (Y ∗ Z), (X ∗ Y ) = Y ∗ X }, where W is a variable of sort Gen and X, Y, Z are variables of sort NeNonceSet. This equational theory satisfies the finite variant property according to the class of equational theories presented in [9]. The key point is that the term exp(W, Y ∗ Z) cannot be narrowed with the left-hand side exp(exp(W, Y ), Z) because the variable W is of sort Gen, although it can be nar- rowed in the unsorted sense. In our case, exp is an overloaded function symbol, for which the typing exp : Gen × NeNonceSet → Exp does not have any applicable equation in Δ.

The order-sorted unification in Maude-NPA at the time when [5] was written was based on full narrowing. We have implemented the unification algorithm of Theorem 5.3 in the Maude-NPA tool for the case when the bound n of Definition
4.8 is 1, and have successfully tested it on several examples, including this Diffie- Hellman example, demonstrating the feasibility of our approach.
Related Work and Conclusions
E-unification is a well studied topic that has been addressed in different ways and we do not attempt to cover the vast related work area. For a general survey on E-unification, see [1]. The use of the basic narrowing strategy of [13] for unification modulo an equational theory (Σ, E) that can be decomposed into (∅, Δ) is the ear- liest work. Although it might seem that the basic narrowing strategy is subsumed into our variant strategy, this is not the case. Intuitively, variant narrowing and basic narrowing are both restrictions of ordinary narrowing that avoid sequences with non-normalized substitutions. Basic narrowing avoids any narrowing step per- formed within non-normalized computed substitutions, whereas variant narrowing discards them when found. The following example shows that basic narrowing may be non-terminating in cases when variant narrowing does terminate.
Example 7.1 Consider the rewrite theory (Σ, ∅, Δ), the set of convergent rules Δ = {f (x) → x, f (f (x)) → f (x)}, and the term t = f (x).  Basic narrowing

performs the following two narrowing steps (i) f (x) ~id
x and (ii) f (x) ~σ
Δ f (x')

with σ = {x/f (x')}. However, the second narrowing step leads to the following non-terminating basic narrowing sequence
f (x) ~{x/f (x')},Δ f (x ) ~{x'/f (x'')},Δ f (x ) ··· 

Variant narrowing will perform only the first narrowing step, since the second contains a non-normalized substitution, and thus it does not produce the non- terminating narrowing sequence.
However, since the variant narrowing strategy does not carry any history of computed terms or substitutions, it is not able to avoid some useless narrowing sequences, whereas basic narrowing will avoid any of those sequences from the very beginning by avoiding narrowing inside the substitutions. The following example shows that variant narrowing may be non-terminating in cases when basic narrowing does terminate.
Example 7.2 Now, consider the rewrite theory (Σ, ∅, Δ), the set of convergent rules Δ = {f (f (x)) → x}, and the term t = c(f (x), x) where c ∈ Σ. Basic narrowing
performs only c(f (x), x) ~σ	c(x',f (x')) with σ = {x/f (x')} and it stops, since the
Δ
term f (x') is introduced by a substitution. However, our variant narrowing will perform the following non-terminating narrowing sequence


c(f (x), x)
~θ1
c(x ,f (x ))
~θ2
c(f (x ),x ) ··· 

Δ	1	1	Δ	2	2

with θ1 = {x/f (x1)}, θi+1 = {xi/f (xi+1)}, since every of the individual unifiers is normalized, though the composition θ1 ··· θi+1 is non-normalized.
However, our argument (as well as others [2,22]) is that basic narrowing is too restrictive and indeed it can fail to be sound and complete when B /= ∅, whereas variant narrowing is complete modulo axioms.
Example 7.3 Consider the following rewrite theory (Σ, B, Δ) from [2] where B contains associativity and commutativity of the operator × and Δ = {a×a → 0,b× b → 0,a ×a ×Z → Z, b ×b ×Z → Z, 0 ×Z → Z}. Given the term X ×Y , AC-basic

narrowing is not able to provide the narrowing sequence X×Y ~σ
Δ,B
X' ×Y
' σ'
Δ,B

with σ = {X/a × X',Y/a × Y '} and σ' = {X'/b, Y '/b}, since the term X' × Y ' comes from the application of the unifier σ to the right-hand side Z of the rule a × a × Z → Z. However, our variant narrowing is able to provide this narrowing sequence, since no non-normalized substitution is generated at any step.
The repaired basic AC-narrowing strategy of [22] considers implicit extensions instead of explicit extensions to overcome incompleteness. However, [22] considers only associativity and commutativity, whereas we extend our results to more general equational axioms. On the other hand, there is much literature about (efficient) narrowing strategies. However, the related literature does not consider the case of narrowing modulo axioms.

Conclusions
We have proposed variant narrowing as a narrowing modulo B procedure that achieves efficiency, in terms of having a potentially much smaller search space than full narrowing, without losing completeness. We have also shown how, when a theory E has the finite variant property, variant narrowing specializes to algorithms for both computing the finite variant and for computing a complete and minimal set of E-unifiers. We have also explained how, under the finite variant assumption, variant narrowing can be used as a key component of a symbolic reachability analysis method for concurrent systems specified as rewrite theories, and in particular for cryptographic protocols specified this way.
Much work remains ahead. One important topic is giving sufficient conditions on an equational theory E guaranteeing the finite variant property and giving an algorithm to compute the corresponding bound for each term, which has been ad- dressed in [10]. We have developed a prototype implementation of variant narrowing that is used as a key component in the Maude-NPA tool, and has been shown ef- fective in analyzing and finding attacks in various cryptographic protocols. One important practical research direction is developing more optimized versions of the variant narrowing unification algorithm. Finally, modularity results, allowing us to know when modular combinations of theories enjoying the finite variant property also enjoy the same property is a topic worth investigating, since it will support modular combinations of the corresponding unification algorithms.
Acknowledgements.  S. Escobar has been partially supported by the EU

(FEDER) and the Spanish MEC under grant TIN2007-68093-C02-02, and Inte- grated Action HA 2006-0007. J. Meseguer and R. Sasse have been partially sup- ported by the ONR Grant N00014-02-1-0715, and by the NSF Grants IIS 07-20482 and CNS 07-16638.

References
F. Baader and W. Snyder. Unification theory. In A. Robinson and A. Voronkov, editors, Handbook of Automated Reasoning, volume 1 of Volume, chapter 8, pages 445–532. Elsevier Science, 2001.
H. Comon-Lundh and S. Delaune. The finite variant property: How to get rid of some algebraic properties. In J. Giesl, editor, Term Rewriting and Applications, 16th International Conference, RTA 2005, Nara, Japan, April 19-21, 2005, Proceedings, volume 3467 of Lecture Notes in Computer Science, pages 294–307. Springer, 2005.
N. Dershowitz and J.-P. Jouannaud. Rewrite systems. In J. van Leeuwen, editor, Handbook of Theoretical Computer Science, Vol. B, pages 243–320. North-Holland, 1990.
N. Dershowitz, S. Mitra, and G. Sivakumar. Decidable matching for convergent systems (preliminary version). In D. Kapur, editor, CADE, volume 607 of Lecture Notes in Computer Science, pages 589–602. Springer, 1992.
S. Escobar, J. Hendrix, , C. Meadows, and J. Meseguer. Diffie-Hellman cryptographic reasoning in the Maude-NRL Protocol Analyzer. In Proc. of the Second International Workshop on Security and Rewriting Techniques (SecReT 2007), 2007.
S. Escobar, C. Meadows, and J. Meseguer. A rewriting-based inference system for the NRL protocol analyzer and its meta-logical properties. Theor. Comput. Sci., 367(1-2):162–202, 2006.
S. Escobar, C. Meadows, and J. Meseguer. Equational cryptographic reasoning in the Maude-NRL Protocol Analyzer. Electronic Notes in Theoretical Computer Science, 171(4):23–36, 2007.
S. Escobar and J. Meseguer. Symbolic model checking of infinite-state systems using narrowing. In
F. Baader, editor, RTA, volume 4533 of Lecture Notes in Computer Science, pages 153–168. Springer, 2007.
S. Escobar, J. Meseguer, and R. Sasse. Variant narrowing and equational unification. Technical Report UIUCDCS-R-2007-2910, Department of Computer Science - University of Illinois at Urbana- Champaign, October 2007.
S. Escobar, J. Meseguer, and R. Sasse. Effectively checking the finite variant property. In A. Voronkov, editor, Rewriting Techniques and Applications, 19th International Conference, RTA 2008, Hagenberg, Austria, July 15-17, 2008, Proceedings, volume 5117 of Lecture Notes in Computer Science, pages 79–93. Springer, 2008.
S. Escobar, J. Meseguer, and P. Thati. Natural narrowing for general term rewriting systems. In
J. Giesl, editor, Term Rewriting and Applications, 16th International Conference, RTA 2005, Nara, Japan, April 19-21, 2005, Proceedings, volume 3467 of Lecture Notes in Computer Science, pages 279–293. Springer, 2005.
M. Hanus. Lazy narrowing with simplification. Journal of Computer Languages, 23(2-4):61–85, 1997.
J.-M. Hullot. Canonical forms and unification. In W. Bibel and R. A. Kowalski, editors, CADE, volume 87 of Lecture Notes in Computer Science, pages 318–334. Springer, 1980.
J.-P. Jouannaud, C. Kirchner, and H. Kirchner. Incremental construction of unification algorithms in equational theories. In J. D´ıaz, editor, ICALP, volume 154 of Lecture Notes in Computer Science, pages 361–373. Springer, 1983.
D. Kapur and P. Narendran. Matching, Unification and Complexity. ACM SIGSAM Bulletin, 21(4):6– 9, 1987.
J. Meseguer. Conditioned rewriting logic as a united model of concurrency. Theor. Comput. Sci., 96(1):73–155, 1992.
J. Meseguer. Membership algebra as a logical framework for equational specification. In F. Parisi- Presicce, editor, WADT, volume 1376 of Lecture Notes in Computer Science, pages 18–61. Springer, 1997.
J. Meseguer and P. Thati. Symbolic reachability analysis using narrowing and its application to verification of cryptographic protocols. Higher-Order and Symbolic Computation, 20(1–2):123–160, 2007.


S. Mitra. Semantic Unification for Convergent Rewrite Systems. PhD thesis, University Illinois at Urbana-Champaign, 1994.
G. E. Peterson and M. E. Stickel. Complete sets of reductions for some equational theories. J. ACM, 28(2):233–264, 1981.
TeReSe, editor. Term Rewriting Systems. Cambridge University Press, Cambridge, 2003.
E. Viola. E-unifiability via narrowing. In A. Restivo, S. R. D. Rocca, and L. Roversi, editors, ICTCS, volume 2202 of Lecture Notes in Computer Science, pages 426–438. Springer, 2001.
P. Viry. Equational rules for rewriting logic. Theor. Comput. Sci., 285(2):487–517, 2002.
