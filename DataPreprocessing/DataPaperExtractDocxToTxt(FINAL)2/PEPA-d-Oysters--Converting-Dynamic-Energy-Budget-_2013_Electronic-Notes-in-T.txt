Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 296 (2013) 211–228
www.elsevier.com/locate/entcs

PEPA’d Oysters: Converting Dynamic Energy Budget Models to Bio-PEPA, Illustrated by a Pacific Oyster Case Study
Erin Scott 1 Andrew Hoyle 2 Carron Shankland 3
Computing Science and Mathematics University of Stirling
Stirling, UK

Abstract
We present a Bio-PEPA (Biochemical-Performance Evaluation Process Algebra) computational model for the Pacific oyster, derived from a DEB (Dynamic Energy Budget) mathematical model. Experience with this specific model allows us to propose a generic scheme for translation between the widely-used DEB theory and Bio-PEPA. The benefits of translation are that a range of novel analysis tools become available,
therefore improving the potential to understand complex biological phenomena at a systems level. This work also provides a link between biology, mathematics and computer science: such interlinking of disciplines is the core of the systems approach to biology.
Keywords: Dynamic Energy Budget Model, Bio-PEPA, Process Algebra, Pacific oyster (Crassostrea gigas) case study, Physiological models, Computational tools


Introduction
The mathematical ecophysiological DEB (Dynamic Energy Budget) theory has been widely used to describe a variety of organisms’ physiology and their response to envi- ronmental conditions [14]. DEB theory has been broadly used in the field of biolog- ical science, in particular, marine invertebrate physiology [18,20]. DEB theory uses ordinary differential equations (ODE) to describe the uptake and use of substrates by organisms and their use for maintenance, growth, maturation and propagation. It applies to all organisms from micro-organisms to animals and plants. As an ODE- based model, a range of mathematical analyses are available to investigate system behaviour. While widely used, the mathematical nature of the model restricts the

1 Email: egs@cs.stir.ac.uk
2 Email: ash@maths.stir.ac.uk
3 Email: ces@cs.stir.ac.uk

1571-0661 © 2013 Elsevier B.V. Open access under CC BY-NC-ND license.
http://dx.doi.org/10.1016/j.entcs.2013.07.014

potential audience sharing and analysing these models. A growing trend in systems biology is to utilise computational models to gain another perspective on biological systems, with different sorts of insight, e.g. [8,9].
Process algebra offers a unique opportunity in systems biology [19]. Process algebra gives a high-level description of interactions, communications, and synchro- nizations between a collection of independent agents or processes. Its application provides many analysis techniques for systems’ behaviour and properties. Bio- PEPA [6] (Biochemical-Performance Evaluation Process Algebra) is a language for the modelling and the analysis of biochemical networks. The Bio-PEPA language is supported by a suite of software tools which automatically process models and perform a range of analyses. The Bio-PEPA plug-in utilises some of these tech- niques [1], but further, allows Bio-PEPA to be used as a gateway to additional translations and therefore analyses in yet more applications. The user is therefore not confined to one specific modelling language and the analysis techniques of the tools associated with that language.
To illustrate the potential of process algebra to illuminate physiology in a component-based high-level way, an existing mathematical DEB model of the Pa- cific oyster [18] is translated to a computational Bio-PEPA model. Moreover, as DEB theory presents models for different organisms in a similar way we can ex- tract generic principles for translating DEB models to Bio-PEPA. The generated model has been validated through testing in a number of experiments with different environmental conditions and initial physical values for the oyster, some of which are illustrated here. The results are equivalent to those of the original DEB model, showing the translation to be faithful in this sense. The translated Bio-PEPA DEB model can thereafter be utilised and analysed in a variety of different modelling language tools. Some novel analysis is carried out using the Bio-PEPA plugin [1]. This new approach, therefore, broadens the audience for the implementation and analysis of DEB models. In addition, this demonstrates the utility of Bio-PEPA outside the realm of biochemical networks for which it was developed.
The paper is structured as follows. In the next section a description of the Bio-PEPA language and DEB theory is reported. Section 3 presents Pouvreau et al DEB model of the Pacific oyster [18] and describes its translation to Bio-PEPA. This allows Section 4 to extract the general features of the translation process and present a generic approach of translation of DEB Theory to Bio-PEPA. Analysis of the Pacific oyster case study is presented in Section 5. Section 6 reports the conclusion.
Background
Bio-PEPA
Bio-PEPA [6] is a language for the modelling and the analysis of biochemical net- works. It belongs to the group of languages known as Process Algebras: a com- positional approach to formally model concurrent systems. Process Algebra gives a high-level description of interactions, communications, and synchronizations be-

tween a collection of independent agents or processes in a network or system. Its application provides many analysis techniques for the network’s behaviour and prop- erties. See Baeten [5] for an overview.
Bio-PEPA is based on PEPA [12] (Performance Evaluation Process Algebra) and extends it in order to handle some features of biochemical networks, such as stoichiometry (quantity of agents 4 involved in a reaction), the role of the agent in a given reaction, and to handle different kinetic laws (different rates of reactions). The syntax for terms in Bio-PEPA is already presented in Ciocchetta and Hillston [6] and reproduced here for convenience:
S :: = (α, κ) op S | S + S | C

P :: = P  D 
L
P | S(x)

where op = ↓ | ↑ |⊕|g |⊙
The two main components of a Bio-PEPA model are agent components S which describe the behaviour of individual entities, and the model component P , which describes the interactions between the various agents. The prefix is (α, κ) op S, containing information about the role of the agent in the reaction associated with α, where α is the action type and κ is the stoichiometry coefficient of the agent(s) in that reaction. The stoichiometric coefficient captures how many molecules of an agent are required for a reaction. The rate of the reaction α is given by a kinetic law : an arithmetic expression which may include numeric rate parameters, some simple geometric functions (e.g. sin, exp), and which may depend functionally on the numbers of agents in the model.
The prefix combinator op represents the role of S in the action or the impact the action has on that agent. The prefix combinators are: ↓ indicating a reactant, ↑ a product, ⊕ an activator, g an inhibitor and ⊙ a generic modifier. A reactant will be consumed and a product will be produced. Activators, inhibitors and generic modifiers play a role in an action without being produced or consumed and have a meaning defined in the biochemical context. A choice between two possible be- haviours is represented as the sum of the possibilities. Thus the choice combinator + represents competition between agents or actions depending on their rate. Actions

in the cooperation set D 
L
require the simultaneous involvement of agents. This

rate of the shared action is specified by the relevant kinetic law. For action types
not in L, the agents proceed independently and concurrently with their enabled ac- tions. In the model component S(x) the parameter x represents the initial amount of the agent. Bio-PEPA also allows the introduction of timed events to the model. For example, in epidemic networks the introduction of a virus at a particular time can be described as an event [7].
The underlying semantics of Bio-PEPA is as a Continuous Time Markov Chain. The Bio-PEPA language is supported by a suite of software tools which auto- matically process Bio-PEPA models and generate internal representation suitable for different types of analysis. These analysis techniques include: Static, Marko-

4 The Bio-PEPA term for these is species, in-line with the biochemical interpretation as molecules, com- pounds etc. We use the term agents here to avoid the obvious confusion with biological species classification.




Fig. 1. Generic DEB model schematic for a multicellular organism. Circles represent sources and sinks, squares represent state variables and arrows indicate metabolic processes. In this example the forcing variables are food and heat.



vian, Invariant, Simulation traces, Simulation Distributions, Parameter Estimation and Discrete and Continuous Simulation. The Bio-PEPA plug-in utilises some of these techniques and allows the user to export appropriate file types to analyse the model in other applications [1], most notably SBML (Systems Biology Markup Language) [2].


DEB Theory
DEB theory [14] is a mechanistic, mathematical, ecophysiological modelling theory. It describes in a generic way an organism’s physiology and how it adapts to its environment. DEB theory is popularly utilised in a large number of published case studies (over 425) of biological systems in a variety of journals [15]. It is used to describe the uptake and use of substrates (food) in organisms. It assumes common physiological processes across species and life stages via a set of common DEB pa- rameters; the only differences in species lying in the differences in these parameters. A diagram of a general multicellular DEB model adapted from Kooijman [14] is given in Figure 1.
A basic DEB model consists of two differential equations to describe the be- haviour of the two state variables: the Reserve (E) and the Structural Volume (V). A DEB model assumes that assimilated energy is first stored in a reserve to fuel other metabolic processes. The allocation of the energy is controlled by the pa- rameter κ: its value represents which process has priority over the energy. These metabolic processes include maintenance, growth, development and reproduction. The complexity and sophistication of the model arises from interrelationships be- tween the processes. These processes have many interrelationships, for example, the assimilation process has an impact on the utilisation process. More realism can be included in the model by adding further state variables, for example, to describe reproduction and development.

Translating the Pacific oyster DEB model to Bio- PEPA

DEB theory has been utilised to describe a variety of marine invertebrates includ- ing the bivalve Pacific oyster (Crassostrea gigas) [18,20] studied here. The Pacific oyster is potentially the largest harvested and collected shell fish in European wa- ters. In 2006, global C. gigas aquaculture production reached 4.6 million tonnes (t). European production was around 126 000 t [17]. The Pacific oyster is an isomorph, an organism that does not change shape during growth, which means its surface area is proportional to its volume. These bivalves are ectotherms and osmoconform- ers: their body temperature and internal salinity is the same as the surrounding environmental conditions. The Pacific oyster model is used here as an exemplar of translating a DEB model into a Bio-PEPA model. The information gained through this example is then used to formulate a generic scheme for translation in Section 4. In this specific DEB model there are three state variables: Reserve (E) describes the dynamics of the energy reserve, Structural Volume (V) specifies the growth of the structural body volume and Reproduction Buffer (ER) describes the storage and use of the energy allocated to development and reproduction. Each state variable is described by a differential equation, reproduced here for convenience [18]. The
parameters are shown in Table 1.


dE = P˙
dt	A
— P˙C
(1)

dV	P˙G
=
dt	[EG]
κ.P˙C − P˙M
=
[EG]

(2)

dER = (1 − κ).P˙
dt	C
— P˙J
(3)


Equation (1) describes the increase of E by the assimilation process which produces energy and the decrease by utilisation of this energy by many processes. Equation
(2) specifies V is increased by utilised energy which is specifically allocated by the parameter κ. V is decreased by somatic maintenance which stands for a collection of processes necessary to maintain life and also by the volume-specific cost for growth which includes all types of overheads, for example, biosynthesis. ER (3) is increased by an allocated amount of utilised energy and is decreased by maturity maintenance processes.
The DEB model parameters are reproduced in Table 1 for convenience with the Bio-PEPA model parameters. Further information on this DEB model can be found in Pouvreau et al [18]. In translating the model to Bio-PEPA the relationship between state variables and ODE, and agents and actions, must be considered. Also of importance are units of measurement, and how the outputs of the model should be formulated. These topics are discussed in subsections 3.3 and 3.4 respectively.


Table 1
Model parameters used in this study. The DEB parameters are as given by Pouvreau et al [18].


Conversion of the state variables to agents
The Bio-PEPA model is given in Figure 2 and can be downloaded from our website http://www.cs.stir.ac.uk/SystemDynamics. The first step of the translation is to represent the state variables by agents in the Bio-PEPA model. See Agent defi- nitions of Figure 2. The equations of the state variables become actions of these agents. Some actions indicate increase or decrease of an agent corresponding to the positive and negative terms of the ODE. Other actions indicate that the agent influences the kinetic rate although the agent does not increase or decrease when this action occurs. Reserve (E) agent is assigned four actions: a3, a4, a1 and a5. Action a3 increases E and is decreased by a4. The associated rate of action a3 is defined as the assimilation rate and the rate of action a4 is defined as the utilisation rate. See Actions and their associated kinetic rates of Figure 2. Both these rates are as defined in the DEB equations. E is a generic modifier in the actions a1

Parameters of model
Actual temperature	=	value dependent on experiment ;
Temperature correction	=	exp((TA/T1) − (TA/(273 + Actual temperature)))
∗ ((1 + exp((TAL/(273 + Actual temperature)) − (TAL/TL))
+ exp((TAH /TH ) − (TAH /(273 + Actual temperature))))−1);
{P˙Xm}	=	5.6 ∗ Temperature correction;
{P˙Am}	=	ae ∗ {P˙Xm};
hP˙M i	=	0.024 ∗ Temperature correction;

P˙M	=	hP˙M i ∗ V ;
[E]	=	E/V ;

P˙C
=	([E] /([EG
]+ (κ ∗ [E]))) ∗ (( [EG]∗{P˙Am}∗V 2/3 ) + ( P˙
M
i ∗ V ));

Food density chloa	=	value dependent on experiment ;
Xκ	=	value dependent on experiment ;
Functional response	=	  F ood density chloa	 ;
(Food density chloa+Xκ )
P˙A	=	Functional response ∗ {P˙Am}∗ V 2/3;
Maturity	=	H(V − Vp);
P˙J	=	((( (1−κ) ) ∗ V ∗ P˙M ) ∗ (1 − Maturity))
+ ((( (1−κ) ) ∗ V p ∗ hP˙M i) ∗ (Maturity));
Percentage ER	=	(  ER DF W  ) ∗ 100;
ER start spawn	=	H(Percentage ER − GSI); Stop spawn	=	H(1 − Percentage ER);
T start spawn	=	H(Actual temperature − Ts);
Actions and their associated kinetic rates
kineticLawOf a1	:	(κ∗P˙C ) ;
[EG ]

kineticLawOf a2 : kineticLawOf a3 : kineticLawOf a4  :
 P˙M  ;
[EG ]
P˙A;
P˙C ;

kineticLawOf a5	:	((1 − κ) ∗ P˙C ) ∗ Maturity;

kineticLawOf a6	:
P˙J ∗ Maturity ∗ (1 − stop spawn);

kineticLawOf empty	:	fMA(100 ∗ Maturity);
kineticLawOf switch on	:	fMA(10 ∗ ER start spawn ∗ T start spawn); kineticLawOf switch off	:	fMA(10 ∗ stop spawn);
Agent definitions
V	=	a1 ↑ +a2 ↓ +a3 ⊙ +a4 ⊙ +a5 ⊙ +a6 ⊙ +empty⊙;
E	=	a3 ↑ +a4 ↓ +a1 ⊙ +a5 ⊙;
ER	=	a5 ↑ +a6 ↓ +empty ↓;
Tracker off	=	(switch on, 1) ↓ +(switch off , 1) ↑;
Tracker on	=	(switch on, 1) ↑ +(switch off , 1) ↓ +(empty, 1)⊕;
Model Component
V [0] D  E[0] D  ER[0] D  Tracker off [1] D  Tracker on[0]
∗	∗	∗	∗
(fMA = formula of mass action)

Fig. 2. Pacific oyster Bio-PEPA model. See Table 1 for other parameters.
and a5 as E influences the kinetic rates of the increasing actions of the Structural Volume (V) and Reproduction Buffer (ER) although E does not increase or decrease when these actions occur.
Structural Volume (V) is assigned seven actions: a1 which increases V, and a2 which decreases it, and actions a3, a4, a5, a6 and empty which leave V unchanged. The associated rate of action a1 is defined as utilisation rate multiplied by κ divided by the volume-specific cost for growth. Rate of action a2 is specified as the somatic

maintenance rate divided by the volume-specific cost for growth. These rates again use the specific rates as defined in the DEB model. As V is a generic modifier in the other five actions it influences the kinetic rates and does not increase or decrease when these actions occur.
The Reproduction Buffer agent (ER) has three actions: a5, a6 and empty. Ac- tions a5 and a6 are as before where a5 increases ER and a6 decreases it. This agent has the extra action of empty to describe the spawning event of the oyster. The associated rate of action a5 is defined as the utilisation rate multiplied by 1 minus κ multiplied by the parameter Maturity. The rate of the action a6 is specified by maturity maintenance rate multiplied by the maturity parameter. This matu- rity parameter is created in Bio-PEPA to acknowledge the additional rule of the DEB model that specifies that ER becomes active when the individual has reached a specific structural volume. The maturity maintenance rate varies with V when the oyster is below the specific structural volume of maturity and becomes con- stant when V reaches or is above this specific value. The DEB model uses the min function to achieve this whereas in Bio-PEPA the Heaviside step function (H) [4] is utilised. Apart from the maturity parameter the rates used for the actions a5 and a6 are as defined in the DEB model.

Fig. 3. State diagram for the behaviour of the tracker component.

The spawning event of the oyster is described partly in the ODE of the DEB model, but mainly through the accompanying textual description. The translat- ing process therefore, does not only require the translations of the ODEs but also requires the novel interpretation and implementation of timed events with specific conditions. There are two conditions that have to be fulfilled before spawning can take place. The first condition refers to the build up of gonad material and the second condition is dependant on the temperature during the seasons. The first condition is that a certain gonadosomatic index (GSI) has to be reached: this means the ratio between the gonad and total tissue mass is above the GSI. Secondly, the external temperature must be above a specific threshold (TS). It is not sufficient to use the Heaviside step function to implement the conditions described above, because the empty action would only be active as long as the condition is true and

hence spawning would be partial. Instead, these conditions and event are imple- mented by a tracker component in the Bio-PEPA model. The tracker component only switches on when both conditions are met and acts as an activator to the empty action of the reproduction buffer. As defined in the DEB model when a spawning event occurs ER is completely emptied, therefore the empty action decreases ER at a fast rate. The tracker component switches off when ER becomes zero, therefore the empty action cannot take place. Thus it is never possible for ER to become negative. A state diagram of the tracker component’s behaviour is given in Figure 3. The kinetic rate of the tracker is given by the built-in mass action function (fMA).

Adding the forcing variables into the model
Temperature and food density are forcing variables. Temperature affects two phys- iological rates, maximum surface area-specific ingestion rate and volume-specific maintenance rate. In the DEB model this dependency on the temperature is de- scribed by an Arrhenius-type equation [10] and this is utilised in the Bio-PEPA model. The second forcing variable, food density, affects the assimilation rate and is implemented in the same way as the DEB model. Both forcing variables vary over time in the DEB model: experimental data was imputed for both values at each data point in time. Since both temperature and food density are measured vari- ables from experiments, there exists a time series for each (as shown in figure 4 left). It is desirable to be able to directly input these time series to the Bio-PEPA tool as background data to use in calculations. This is not currently possible. Instead simple functions must be coded to approximate the time series for experimental data. These make use of the inbuilt time variable and the Heaviside step function. There is a tradeoff between the complexity of these functions and the closeness of the approximation. See Figure 4.

Changing the units of speciﬁc parameters
In Bio-PEPA initial values for each agent require to be an integer. The initial value of V in the DEB model is a decimal number therefore changing of some units in the model must be made. The unit of V is cm3 and is changed to mm3 to gain integer values with acceptable precision. Other model parameters that are affected by V had their units appropriately changed. See Table 1.

Addition of dry flesh weight equation for comparison
The DEB model results are compared with wet laboratory results using a calcu- lated total dry flesh weight value (DFW). The Bio-PEPA simulation results must be calculated into DFW values and also their units to be scaled and changed appro- priately for the comparison. Equation (4) gives the total DFW. The other values (such as the assimilation and respiration rates) from the Bio-PEPA model can be



Fig. 4. Temporal variations of the forcing variables: temperature and phytoplankton in Experiment A and
B. DEB model values on left and Bio-PEPA values on right. The scales are phytoplankton concentration on the left, and temperature on the right of each graph.
compared to the DEB model and the wet laboratory results.


E
DFW =
μE
V
+ ( 1000
) ∗ ρ + κR ∗ ER
μE
(4)

Analysis of this model is considered in Section 5. First, the generic approach to translating DEB models to Bio-PEPA models is summarised.
Generic Translation of DEB models to Bio-PEPA
Having learned from the Pacific oyster model, it is possible to describe a generic approach that can be used to transform an organism’s DEB model that includes the state variables of Structural Volume (V), Reserve (E) and Reproduction Buffer (ER). A more complex DEB model may require further investigation.
Conversion of the state variables to agents DEB model state variables usu- ally are V, E and ER. There may be more than one V and E. These will become agents in the Bio-PEPA model. As noted by Gurriero and Heath [11], the translation from simple ODE to Bio-PEPA is straightforward. This is partly true for the DEB model here. It is worth noting that DEB models include timed events such as spawning which are not described in the ODEs of the models, therefore interpretation and implementation of the textual model assumptions must be made.
Implementation of the actions of agents from the state variable equation deﬁ- nitions The equations of the state variables form the kinetic rates of the agent’s actions. The part within the equation which increases the state variable becomes the kinetic rate of an action for which that state variable’s agent is a product. The

part of the equation that decreases the state variable will become the kinetic rate of the action for which that agent is a reactant.
The state variable ER is involved in a reproduction event, therefore, the use of the Heaviside step function and a tracker component may be required to set the specific conditions of the event, e.g. the use of a tracker component for a specific reproduction event of Section 3.1.
Adding the forcing variables into the model Values of the forcing variables are usually wet laboratory values that are entered at each data point in time. As it is not possible to add each data point to each time point in a Bio-PEPA simulation, simple functions should be implemented to create similar behaviour of the forcing variables over time. Statistical techniques such as regression can assist here.
Changing the units of speciﬁc parameters In Bio-PEPA initial values for each agent require to be an integer. Changing of some units and suitable scaling in the values of the state variables must be made. An example is shown in Table 1. Other parameters affected by the state variables that have been changed in this way must be changed accordingly.
Addition of equation for comparison and analysis of results DEB model re- sults are compared to wet laboratory results by an equation to convert the state variable values to an appropriate unit value. This equation can be used on the results of the Bio-PEPA model. An example comparison equation can be found in Section 3.4.

Model Analysis
Static analysis of the Bio-PEPA model
The Bio-PEPA plug-in has static analysis, therefore informing the user of any syn- tactic and simple semantic errors in the model before any simulations are run. The outline view in the plug-in shows the actions and agents that are present and further shows which of these actions are sources or sinks. This view informs the user about the model in an abstract way. The problems view highlights any errors in the syn- tax and also shows warnings suggesting that particular actions need to be assessed. This static analysis provides confidence to the modeller in their understanding of the system and syntactic correctness and consistency of their model whereas the ODE DEB model, and typical tools for processing ODE, do not.

Comparison analysis results
The Bio-PEPA plug-in has two time-series analysis techniques: continuous ODE and discrete stochastic simulation. The Bio-PEPA model is validated by comparing its output with the results of the original DEB model. It is further validated by sta- tistical comparison: the original DEB model [18] compared the simulated predicted

results with observed wet laboratory data using R2 statistics; the Bio-PEPA model simulation results were also compared to the observed wet laboratory data using the same technique. The goodness-of-fit between prediction (Y) and Observation
(X) was tested according to the R2 value of the regression Y=X.
Pouvreau et al [18] carried out three experiments. Two of these are shown here: experiment A and experiment B corresponding to B and C respectively of [18]. The results from the DEB model are from ODE simulations using the STELLA tool. The Bio-PEPA model results are stochastic simulations of multiple replica- tions (1000); therefore, simulating the growth and reproduction of a population of oysters. 1000 replications are chosen consistently here across analyses to give a representative average system behaviour. The Bio-PEPA model is also used to gen- erate ODE simulation results, to give comparability with the original DEB model. The two experiments from the original DEB model had different initial values for the state variables and a different value for Xκ (half-saturation coefficient). The half-saturation coefficient is changed due to the different diet composition between experiments. Both experiments are carried out over a different time period and un- der different environmental conditions. This demonstrates the Bio-PEPA model’s generic ability to capture the dynamics of the energy budget in the Pacific oyster in various environments. Table 2 reproduces the initial values of the state variables and Xκ for each experiment and includes the Bio-PEPA model scaled state vari- able V. The graphs of the DEB model [18] are reproduced here for convenience for comparison to the outputs of the Bio-PEPA model.

Table 2
Initial values of Xκ and the state variables: V, E and ER.


Experiment A
This experiment had a time period of 120 days (July to October). The model is tested here as the experiment has a fluctuating environment because the food concentration varies erratically and oysters from various origins are analysed. The experiment encapsulates three sub-experiments (batch 1, 2 and 3) and each batch has different initial state variable values indicating oysters from different origins. The batch 1 experiment lasted the whole time period, batch 2 had a duration of 90 days commencing from August and batch 3 started ten days from the start of September lasting 50 days. Batch 1 were allowed to continue and complete a spawn- ing event whereas the other two batches were introduced too late for spawning to take place. The forcing variables’ values, temperature and phytoplankton concen-

tration, of both the original DEB model and the Bio-PEPA model are given in Figure 4. The differences in the values occurs as the values in the Bio-PEPA model are produced from functions which approximate the actual measurements whereas the DEB model uses wet laboratory values. The total dry flesh weight values for all batches in the DEB model and Bio-PEPA model is given in Figure 5.

Fig. 5. Experiment A comparison of total dry flesh weight results of DEB model left and Bio-PEPA model (ODE and stochastic results) right. Both include comparison of observations ± SD (dots). Note that the sharp drops that can be observed on simulation lines indicate spawning events predicted by the models.

The Bio-PEPA model produced comparable results to the original DEB model. It confirms a very good simulation of somatic growth and the replication of a spawn- ing event. The slight differences in batch 1 are derived from the difference in the forcing variable values. Although it cannot be seen clearly on the graphs, the values of reproduction weight released at the spawning event in batch 1 are similar and the time of the spawning is the same.
The observed wet laboratory data for this experiment were grouped together for the statistical comparison with the simulation results of the original DEB model. This was carried out as the aim of this experiment was to test the model not only on a more fluctuating environment but on several populations of oysters from various origins [18]. There is also a limited amount of data available in the observation results, for example batch 2 only has two observation data points. The original DEB model gave R2 = 0.81 (n=8, p<0.002) between observation and simulation. The Bio-PEPA model gave R2 = 0.813 (n=8, p=0.002) between observation and stochastic simulation and gave R2 = 0.812 (n=8, p=0.002) between observation and ODE simulation. n represents the number of data points and p represents the p-value. The Bio-PEPA model in this experiment gives a better match than the original DEB model. The functions for food and temperature in A describes the behaviour of these forcing variables more accurately than the functions in B.
Experiment B
This experiment had a duration of 365 days, that is a complete annual cycle. The experiment has typical natural environmental field conditions. These conditions are presented in Figure 4; again differences in the forcing variables values occur as the values in the Bio-PEPA model are produced from functions whereas the DEB model uses wet laboratory values. The total dry flesh weight value for this experiment in the DEB model and Bio-PEPA model is given in Figure 6.
The Bio-PEPA model simulated the growth of an oyster over a complete annual




Fig. 6. Experiment B comparison of total dry flesh weight results of DEB model left and Bio-PEPA model (ODE and stochastic results) right. Both include comparison of observations ± SD (dots). Bio-PEPA graph horizontal axis tick marks indicate 15 days and month letters are at the start of each month. Note that the sharp drops that can be observed on simulation lines indicate spawning events predicted by the models.


Fig. 7. Experiment B assimilation of energy against maintenance costs.

cycle and also the two spawning periods. The first spawning event is at the beginning of June and the weight lost is approximately 0.15g in the stochastic simulations and 0.28g in the ODE simulation. The second spawning event takes place around the end of August and the weight lost is approximately 0.61g in the stochastic simulations and 0.82g in the ODE simulation. These results are comparable to the original DEB model with 0.2g for the first event and 0.5g for the second.
The goodness-of-fit for the original DEB model was R2 = 0.92 (n=24, p<0.0001) against observation and predicted. The Bio-PEPA model gave R2 = 0.86 (n=24, p<0.0001) between observation and stochastic simulation. Analysis of the ODE simulation against observation gave R2 = 0.824 (n=24, p<0.0001). The Bio-PEPA result does not give as good a match as the original DEB model because of the functions that describe the behaviour of the temperature and food forcing variables. The functions are more simplistic in their behaviour than the original collected data. For example, the temperature in the Bio-PEPA model may be decreasing below 20◦C too early in September, artificially preventing some simulations spawning for a second time.
The Bio-PEPA model, similar to the DEB model, outputs not only the total dry flesh weight values but also values of internal parameters of the model such as the assimilation rate and functional response. These results can be used to analyse the models internal functioning. Figure 7 shows the assimilation rate plotted against




Fig. 8. Simulation distributions for experiment A (left) and B (right). Temporal variations of the forcing variable temperature for each experiment is also shown. The scales are CDF and PDF percentage values on the left, and temperature on the right hand side of each graph.

the maintenance costs. This demonstrates the assimilation is just sufficient to meet the maintenance costs when food is limited during the winter period [18]. It is noted that the parameters of scaled energy density and functional response also displayed the same internal relationship values as the original DEB model.

Simulation distributions analysis of the Bio-PEPA model
Results from this analysis are presented for both experiments and are given in Figure 8. Simulation distributions obtain the percentage of a user-defined number of stochastic simulations for which some property is true at or before a given time
t. The Bio-PEPA plug-in plots the Cumulative Distribution Function (CDF) and Probability Distribution Function (PDF) of any agents in the model, with respect to the target value.
This technique allows the analysis of the spawning events and when they are most likely to occur. The chosen component in this analysis is an agent which counts the number of times the Tracker on component becomes equal to 1, i.e. when spawning occurs. The target value is set to 1 for experiment A and set to 1 and then 2 in experiment B. The number of stochastic simulation replications is set to 1000.
Experiment A
For batch 1 spawning starts to occur at day 77 with 1.3% of the simulations reaching the target value of 1 around mid September. 90.7% of the simulations reach this target between day 78 and 80. By day 82 all simulations reach the target. This certifies the spawning event occurring at a precise time. Batch 2 and 3 simulations never reach the target value of 1 indicating that a spawning event will never occur in either experiment.
Experiment B
Simulations start to reach the target value of 1 at day 223. All the simulations had reached this target value by day 272. This indicates a large window of time for the first spawning to occur (beginning of June to mid July). The distribution is skewed:

72% of simulations spawn within the first 9 days of June.
Simulations start to reach the target value of 2, i.e. a second spawning event, at day 308 (around the end of August). 97.6% of all simulations had reached this value by day 326 at the start of September. 24 simulations did not produce a second spawning event. This may be due to these simulations having late first spawning events and therefore do not have time to build up to the GSI condition before the temperature drops below 20◦C. Verifying this is future work. These types of results are not available in the original DEB model ODE results.
Parameter Estimation
Pouvreau et al [18] estimate some model parameters, as is common in modelling; for example, finding the values of volume specific cost for structure [EG] and the maximum energy storage density [EM ] in a starvation experiment [20]. Parameter optimisation can be used on Bio-PEPA models to find unknown values for certain parameters by comparing the time series data from the relevant experiment, remov- ing the need to carry out additional wet laboratory experiments for these certain parameters. Given experimental data, this is easily available for Bio-PEPA models via either SBSI [3] or the EPA framework [16] (recently adapted to accept Bio- PEPA input). This analysis has not been carried out for this model due to lack of access to experimental data.
Conclusion
The generic translation approach has been implemented to easily convert math- ematical DEB models to Bio-PEPA models. A concrete example model of the translation process has been constructed and its results have been compared to the original DEB model and published wet laboratory results. New analysis has been carried out on a specific DEB model in the Bio-PEPA plug-in by using simulation distributions and new results have been generated about the system demonstrating the utility of the translation process.
The Pacific oyster Bio-PEPA model also shows that it is generic, producing results for different environmental conditions and for different state variables. The model can therefore be used again for other related bivalve experiments, potentially feeding back to further, more targetted, wet lab experiments. This exemplifies the cycle of systems biology originally put forward by Kitano [13].
The Bio-PEPA plug-in tool [1] has a range of analysis techniques which could further aid in examination of results. The Bio-PEPA model can be exported and converted into other computational modelling and analysis tools. This allows a wider audience to access the model. This range of further analysis techniques is not available for the DEB model. A problem identified with the Bio-PEPA plug-in is that functions approximating the environmental data were required: it would be desirable to add these directly from the collected data. This may account for the differences between our results and those of the DEB model as the forcing variables have a significant effect.

The translation to Bio-PEPA is the first stage of a research programme, with the goal of providing more complex, multi-scale model features. For example, inter- actions between a population of oysters, or interactions between oysters and their environment. A further line of reasearch could be to develop a tool to implement the generic translation from DEB models to Bio-PEPA models.
The generic translation approach can be used in future work to investigate not only marine invertebrates DEB models but also other organism DEB models [15], therefore, broadening the audience for modelling and analysis.
Acknowledgements
Erin Scott is grateful to the Scottish Informatics and Computer Science Alliance (SICSA), a research initiative of the Scottish Funding Council, for financial sup- port of her PhD studies. Further thanks goes to Dr Stephane Pouvreau, Station IFREMER d’Argenton, France and Dr Jeffrey Ren, National Institute of Water and Atmospheric Research, Christchurch, New Zealand for their invaluable assistance in DEB modelling. The authors thank the Bio-PEPA Plug-in development team at the University of Edinburgh, particularly Allan Clark, for help with the tool. Thanks also goes to the anonymous reviewers for their helpful comments. Lastly, the project was inspired by conversations with Dr Chris Hauton, University of Southampton, School of Ocean and Earth Science.

References
Bio-PEPA (2012).
URL  http://homepages.inf.ed.ac.uk/jeh/Bio-PEPA/biopepa.html
SBML home page (2012).
URL http://sbml.org/Main_Page
Synthetic & Systems Biology: Systems biology software infrastructure (2012).
URL http://www.sbsi.ed.ac.uk/

Akman, O. E., M. L. Guerriero, L. Loewe and C. Troein, Complementary approaches to understanding the plant circadian clock, Computing (2010), pp. 1–19.
Baeten, J., A brief history of process algebra, Theoretical Computer Science 335 (2005), pp. 131–146.
Ciocchetta, F. and J. Hillston, Bio-PEPA: a framework for the modelling and analysis of biological systems, Theoretical Computer Science 410 (2009), pp. 3065–3084.
Ciocchetta, F. and J. Hillston, Bio-PEPA for Epidemiological Models, in: Fourth International Workshop on Practical Applications of Stochastic Modelling, Electronic Notes in Theoretical Computer Science 261, Elsevier, 2010 pp. 43–69.
Cohen, J., The crucial role of CS in systems and synthetic biology, CACM 51 (2008), pp. 15–18.
Fisher, J. and N. Piterman, The executable pathway to biological networks, Briefings in Functional Genomics and Proteomics 9 (2010), pp. 79–92.
Glasstone, S., K. J. Laidler and H. Eyring, “The Theory of Rate Processes,” McGraw-Hill, London, 1941.
Guerriero, M. L. L. and J. K. Heath, Computational modeling of biological pathways by executable biology., Methods in enzymology 487 (2011), pp. 217–251.
Hillston, J., “A Compositional Approach to Performance Modelling,” Cambridge University Press, 1996.

Kitano, H., Systems Biology: A Brief Overview, Science 295 (2002), pp. 1662–1664.
Kooijman, S., “Dynamic Energy Budget theory for metabolic organisation,” Cambridge University Press, 2010, 3 edition.
Kooijman, S., Bibliography on Dynamic Energy Budget theory (2012).
URL http://www.bio.vu.nl/thb/deb/DEB_papers.pdf

Marco, D., D. Cairns and C. Shankland, Optimisation of process algebra models using evolutionary computation, in: Proceedings of 2011 IEEE Congress on Evolutionary Computation (2011), pp. 1296– 1301.
Miossec, L., R. L. Deuff and P. Goulletquer, Alien species alert: Crassostrea gigas (Pacific oyster), Technical Report 299, ICES Cooperative Research (2009).
Pouvreau, S., Y. Bourles, S. Lefebvre, A. Gangnery and M. Alunno-Bruscia, Application of a dynamic energy budget model to the Pacific oyster, Crassostrea gigas, reared under various environmental conditions, Journal of Sea Research 56 (2006), pp. 156–167.
Priami, C., Process calculi and life science, Electronic Notes in Theoretical Computer Science 162
(2006), pp. 301–304.
Ren, J. and D. Schiel, A dynamic energy budget model: parameterisation and application to the Pacific oyster Crassostrea gigas in New Zealand waters, Journal of Experimental Marine Biology and Ecology 361 (2008), pp. 42–48.
