Electronic Notes in Theoretical Computer Science 106 (2004) 279–295 
www.elsevier.com/locate/entcs


Harsanyi Type Spaces and Final Coalgebras Constructed from Satisfied Theories
Lawrence S. Moss1	Ignacio D. Viglizzo2
Department of Mathematics Indiana University Bloomington, IN 47405 USA

Abstract
This paper connects coalgebra with a long discussion in the foundations of game theory on the modeling of type spaces. We argue that type spaces are coalgebras, that universal type spaces are final coalgebras, and that the modal logics already proposed in the economic theory literature are closely related to those in recent work in coalgebraic modal logic. In the other direction, the categories of interest in this work are usually measurable spaces or compact (Hausdorff) topological spaces. A coalgebraic version of the construction of the universal type space due to Heifetz and Samet [5] is generalized for some functors in those categories. Since the concrete categories of interest have not been explored so deeply in the coalgebra literature, we have some new results. We show that every functor on the category of measurable spaces built from constant functors, products, coproducts, and the probability measure space functor has a final coalgebra. Moreover, we construct this final coalgebra from the relevant version of coalgebraic modal logic. Specifically, we consider the set of theories of points in all coalgebras and endow this set with a measurable and coalgebra structure.
Keywords: Coalgebra, final coalgebra, Harsanyi type space, measurable space, probabilities, beliefs.


Introduction: Type Spaces
This paper is a first exploration of the application of ideas and results from coalgebra to the foundational area of game theory concerned with type spaces. Type spaces are mathematical structures used in modeling settings where agents are described by their types, and these types give us “beliefs about the

1 Email: lsm@cs.indiana.edu
2 Email: igvigliz@indiana.edu



1571-0661 © 2004 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2004.02.036


world”, “beliefs about each other’s beliefs about the world”, “beliefs about each other’s beliefs about each other’s beliefs about the world”, etc. That is, the formal concept of a type space is intended to capture in one structure an
unfolding infinite hierarchy related to interactive belief.
The 1994 Nobel Prize in Economic Sciences was awarded to John C. Harsanyi, John F. Nash Jr., and Reinhard Selten “for their pioneering anal- ysis of equilibria in the theory of non-cooperative games.” In addition to his work on equilibria, Harsanyi will also be remembered for his introduction of type spaces in a three-part paper published in 1967 and 1968 [4]. He showed how to convert a game with incomplete information into one with complete yet imperfect information. This matter is not relevant to our paper, but three
related points are noteworthy. First, Harsanyi’s notion of types goes further than what we described above: an agent’s type gives us their beliefs about the types of the other agents. Second, despite this circularity, the informal concept of a type (as a “pool” from which all players can be picked) is widespread in areas of non-cooperative game theory and economic theory. And finally, the formalization of type spaces was, and to some extent still is, an open area. That is, Harsanyi did not really formalize type spaces in his original paper;
this was left to later researchers. Getting back to our very rough informal de- scription above, what exactly are “beliefs”? And how can a structure contain types which give rise to beliefs about other types? What is the relation of this to the infinite hierarchy of beliefs about beliefs about ··· beliefs about the world? Can we characterize the space of all possible types? So there is a collection of papers on this matter, starting with Bo¨ge and Eisele’s paper [2] from 1979. Again, we are not much concerned with these conceptual matters
in this paper. Most of the important papers for our study are technical con- tributions dealing with the matter of universal type spaces. A universal type space is intended to capture all possible types, so it is an answer to our third
question above.
There are some clear conceptual clues that coalgebra could be connected to type spaces. The first is that the notion of “belief” in the game theory liter- ature is typically a probabilistic one. If we replace “belief” with “knowledge” above, then we have a very-well-studied notion, the formalization of knowl-
edge by possible worlds semantics. The mathematical structures for possible
worlds semantics are sets W of worlds with two functions, one giving for each world w ∈ W some set of “atomic propositions” true at w, and the other giving for each w some set of worlds which are said to be “possible from w”.
These structures are essentially the coalgebras in the category Set of sets of the functor F (W ) = A × P(W ), where A is the power set of the set of atomic
propositions and P is the power set functor on sets. Perhaps the primary


contribution of coalgebra to this area to date is to show that modal logic, the natural logical language for the structures, generalizes to coalgebraic versions of modal logic. We’ll return to this point shortly.
The second clue has to do with the role of the universal type space in this field. Types are taken to be elements of the universal type space. In the universal type space all possible types are uniquely represented, and the idea is that two types with exactly the same beliefs about the underlying world of
“nature” plus the types of the other players are taken to be undistinguishable. This is the same ideology as we find concerning ﬁnal coalgebras, in which (as is well known) points with the same behavior are identified.
Returning to type spaces, we recall that the usual modeling of belief in game theory is via probability. So we would expect that type spaces should be probabilistic versions of Kripke models. One should replace the functor P with something like ∆, where

∆(W )	=	{µ | µ is a probability measure on W }.	(1)

Indeed, this is the case: most proposals in the literature do end up studying certain mappings from a space X to some variation of the functor ∆ applied to X. This is our third clue of the connection. But note that (1) leaves a lot lacking: if W is just a set, how do we know that it has any probability measures? Does it matter which σ-algebra we use? And if W is an object in some other category, say measurable spaces or compact metric spaces, then what structure do we put on ∆(W )?
We intend this paper to be a contribution to this area by connecting it with coalgebra. Here are the main conceptual claims of the paper, as well as the main results:
	The original notion of a Harsanyi type space may be taken to be a coal- gebra of a functor F on MeasI, where Meas is the category of measurable spaces and measurable maps, and I is a discrete category (of agents). But
this reformulation is not obvious, because the original notion had an ex- tra condition that the agents “know their own type.” We discuss this in Section 2.
Universal type spaces are final coalgebras.
	The constructions of universal type spaces in the literature are related to constructions found in coalgebra. However, there are differences due primarily to the fact that the work is going on in categories like Meas rather
that Set. Putting things differently, the universal type space constructions
can be generalized, and this is of interest in coalgebra.
There are versions of coalgebraic modal logic for relevant functors, and


one can prove the existence of final coalgebras by considering the satisﬁed theories in these logics. This construction parallels the construction of a final coalgebra on Set for F (W ) = A × P(W ) (or rather A × Pfin(W ), using the finite power set functor) using the set of descriptions of all modal
theories of all possible worlds. We work a formulation of coalgebraic modal logic based on the one due to Jacobs [7], following work of Kurz [9] and Ro¨ßiger [11,12,13]. But we do differ from these papers in that our final coalgebras are not connected to logical theories, but to the theories realized in coalgebras. In the economic literature, this construction is due to Heifetz and Samet [5].
	We formulate a notion of “measure polynomial functor” on Meas. We prove a new result in Section 3: every such polynomial has a final coalgebra with carrier consisting of sets of sentences in a particular language. The method
also works for polynomial functors on Set, as we show in Section 5.2.

Background notions
A measurable space is a pair M = (M, Σ), where M is a set and Σ is a σ- algebra of subsets of M. The sets in Σ are called measurable sets or events. Usually Σ contains all singletons {x}; we shall almost always assume a weaker condition that for each x ∈ M, {x} is the intersection of the measurable subsets of M containing x. A collection B of subsets of M generates a σ- algebra Σ if Σ is the smallest σ-algebra including B. A measure on M is a
σ-additive function µ : Σ → [0, ∞]. The measure µ is a probability measure if
µ(M) = 1.
A morphism of measurable spaces f : (M, Σ) → (N, Σ') is a function f : M → N such that for each A ∈ Σ', f −1(A) ∈ Σ. This gives a category Meas. Meas has products and coproducts; indeed it has much more structure. There is an endofunctor ∆ : Meas → Meas defined by: ∆(M) is the set of probability
measures on M with the σ-algebra generated by {βp(E) : p ∈ [0, 1],E ∈ Σ}, where
βp(E)	=	{µ ∈ ∆(M) | µ(E) ≥ p}.
Here is how ∆ acts on morphisms. If f : M → N is measurable, then for µ ∈ ∆(M) and A ∈ Σ', (∆f )(µ)(A) = µ(f −1(A)). That is, (∆f )(µ) = µ ◦ f −1. We also note some additional structure. First, there is a natural transfor-
mation δ : Id → ∆ defined by δM (m)(E) = 1 if m ∈ E and 0 if m ∈/ E.
We also write δm instead of δM (m); this is the Dirac measure supported at m. Second, there is a natural transformation γ : ∆∆ → ∆ given by γM (µ)(E) = ν∈∆(M ) ν(E) dµ.
Lemma 1.1 (Giry [3]) (∆, δ, γ) is a monad.


Lemma 1.2 For each p ∈ [0, 1], βp may be regarded as a ‘predicate lifting’. That is βp takes measurable subsets of each space M to measurable subsets of ∆(M), and it is natural in the sense that if f : M → N, then for all measurable E ⊆ Y , βp(f −1(E)) = (∆f )−1(βp(E)).
Lemma 1.3 Suppose that the collection $ of sets generates Σ. Then the
σ-algebra on ∆(M) is the generated by the sets of the form {βp(E) | E ∈
$ and p ∈ [0, 1]}.
We shall also need one result from measure theory on the extension of probability measures from collections of sets to the σ-algebras they generate. Lemma 1.4 below follows from Dynkin’s π − λ Theorem. For more details, see, for example Billingsley [1], page 36.
Lemma 1.4 Suppose that µ1 and µ2 are probability measures on σ(ffi), where ffi is a family of sets which is closed under intersections and σ(ffi) is the σ- algebra generated by ffi. If µ1 and µ2 agree on ffi, then they agree on σ(ffi).

We also need at some point to look more closely at products in Meas. Given two measurable spaces, A and B, their product is the cartesian product of the sets A and B, endowed with the σ-algebra generated by the “rectangles” obtained as cartesian product of a measurable subset of A times a measurable subset of B. With this σ-algebra, both projections are measurable. For a subset E ⊆ A × B, the sections of E are the sets: Ea = {b : ⟨a, b⟩ ∈ E}, Eb =
{a : ⟨a, b⟩ ∈ E}. Each section of a measurable subset of the product is measurable.
If µ is a probability measure on A and ν a probability measure on B, we can define the probability measure µ × ν on A × B by (µ × ν)(E) =  µ(Eb)dν =
ν(Ea)dµ.
Going in the other direction, a probability measure µ on A × B induces via the projections, a measure on each of the factor spaces. These measures are called marginals, and denoted by marAµ = (∆πA)µ = µ ◦ π−1; marBµ =
(∆πB)µ = µ ◦ π−1.
Lemma 1.5 Let µ be a probability measure on a product measurable space
A × B. If marBµ = δb0 for some b0 ∈ B then µ = marAµ × δb0 .
Proof. We only need to prove it for rectangles G×F , where G is a measurable subset of A and F is a measurable subset of B.
We want to prove that µ(G × F ) = (marAµ)(G) × δb0 (F ). We have two cases: if b0 ∈/ F , this reduces to proving that µ(G × F ) = 0, and if b0 ∈ F , then we want to show that µ(G × F ) = marAµ(G) = µ(π−1(G)) = µ(G × B).


Notice first that for µ(G × B) = µ(π−1(G)) = marAµ(G) = marAµ(G) ×
δb0 (B). Also µ(A × F ) = marBµ(F ) = δb0 (F ) = (marAµ)(A) × δb0 (F ).
Now we can prove that if b0 ∈/ F , then µ(G × F ) ≤ µ(A × F ) = 0, and if b0 ∈ F , then µ(G × F ) = µ(G × {b0}) + µ(G × (F \ {b0}) ≤ µ(G × {b0}) + µ(A × (F \ {b0})) = µ(G × {b0}). On the other hand, µ(G × B) is also equal to µ(G × {b0})+ 0.	 

Formulation of Type Spaces as Coalgebras
The first constructions of Harsanyi type spaces were based on a hierarchy of beliefs. In this hierarchical approach, as seen for example in [10], types are constructed by detailing the players’ beliefs about nature, about the other players’ beliefs about nature, etc. Since each type gives a probability measure on the set of all types, there is a function from types to probability measures on states of nature and types. As we noted before, this is almost a coalgebra, except that there are some extra conditions imposed on these functions.
At this point, we need to formulate the category MeasI. Fix a finite set
I of players. We assume that 0 ∈/ I and we then define I0 = I ∪ {0}. This “0” stands for “nature”, and so I0 includes nature as one of the players (but one who won’t have beliefs about the other players). We consider I and I0 as
discrete categories.
The objects of MeasI are families X = (Xi)i∈I of measurable spaces, and the morphisms are also families of measurable maps. Fix a measurable space M to represent the “states of nature”, and write X0 for M. Each player should have beliefs about nature and about the beliefs of the other player. This leads to the following definition.
Let C : MeasI → Meas be the functor given by
CX	=	  Xi
i∈I0
At first glance, it might look like what we want is to consider for each xi ∈ Xi, a probability measure on CX. However, this is not what we want because it misses an important intuition concerning type spaces. This is that players should know their own types. In other words, each player i should only have
beliefs about the (joint distribution on) other players’ beliefs; i’s own beliefs should not even enter in. Thus we define functors Ui : MeasI → Meas given by
Ui(X)	=	Π{Xj | j ∈ I0,j /= i}.
Ui acts the obvious way on morphisms. Note that Ui depends on the space
X0 of states of nature, even though our notation does not mention this.


Now CX = UiX × Xi up to isomorphisms. The fact we mentioned above, about player i knowing her own type is modeled in [5] by adding the condition that the corresponding measure on CX has marginal δxi on Xi. Here is where Lemma 1.5 plays a role allowing us to recast type spaces as coalgebras: it is essentially the same to consider measures on UiX and measures on CX for which the marginal on Xi is a Dirac measure on a known point.
Finally our main innovation and the one that lets us model type spaces as coalgebras is to work in MeasI, rather than working with the product of the different spaces considered.
Let F : MeasI → MeasI be defined by
F(X)	=	(∆Ui(X))i∈I
As before ∆ is the probability measure space functor, and once again, our notation elides the underlying space X0 of states of nature.
This way, instead of having a family of functions in Meas, each one of them
with a condition on one of its marginals, any morphism in MeasI works as a coalgebra structure. The particular functor we use automatically takes care of the condition on marginals.
Definition 2.1 A Harsanyi type space (over M) is a coalgebra for the functor F in the category MeasI. A universal type space is a final coalgebra for F in MeasI.
The points of CX are called states of the world. A point of Xi is called an
i-type.
Our main result here is that there is a universal Harsanyi type space. Our proof follows that of Heifetz and Samet [5]. (However, they did not formulate type spaces as coalgebras.) In order to make the ideas more transparent, and also because the method is much more general, we shall temporarily forget
about all of the machinery involved in the multi-player setting. Instead, we consider functors on Meas built using ∆. We show in Section 3 below that each such functor has a final coalgebra.

Coalgebraic Modal Logic for Functors on Measurable Spaces
Syntax and Semantics
Definition 3.1 The class of measure polynomial functors is the smallest class of functors on Meas containing the identity, the constant functor for each measurable space M and closed under products, coproducts, and ∆.


For a measure polynomial functor T , we define Ing(T ), the ingredients of T , by the following recursion: For a “constant” space M, Ing(M) = {M, Id }, Ing(Id ) = {Id } Ing(U × V ) = {U × V }∪ Ing(U ) ∪ Ing(V ), and similarly for U + V ; Ing(∆S) = {∆S}∪ Ing(S). Each T has only finitely many ingredients.

Syntax
We define just below a language L(T ). The language is sorted, and the sorts are the ingredients of T . We write ϕ : S to mean that ϕ is a formula of sort S; when we need it, we let FormS denote the set of such formulas.
If M ∈ Ing(T ) and A is a measurable subset of M, then A : M.
true S : S.
If S ∈ Ing(T ) and ϕ, ψ : S, then also ϕ ∧ ψ : S.
If U × V ∈ Ing(T ), ϕ : U , and ψ : V , then ⟨ϕ, ψ⟩U×V : U × V .
If U + V ∈ Ing(T ) (V + U ∈ Ing(T )) and ϕ : U , then inlU+V ϕ : U + V
(inrV +U ϕ : V + U ).
If ∆S ∈ Ing(T ) and ϕ : S and p ∈ [0, 1], then βpϕ : ∆S.
If ϕ : T , then [next]ϕ : Id .

Semantics
Let c : X → TX be a coalgebra of T . The semantics assigns to each
S ∈ Ing(T ) and each ϕ : S a subset [ϕ]]c ⊆ SX.


M S S
U ×V U +V U +V
∆S

Id
The notation Pf (A) indicates throughout the paper the image under f of the

set A. We check easily that [ϕ]]c
is always a measurable subset of SX. In the

sequel, we shall omit the superscripts on the pairing, inl , and inr operators, since they are mostly clear from the context. We also will occasionally omit


the superscript c and the sort subscript when dealing with the semantics of
ϕ : S on a particular coalgebra c : X → TX.
Remark 3.2 As we mentioned, if M is a measurable space, then the mea- surable subsets of M are taken as formulas. This departs from most of the treatments in coalgebraic modal logic, where one would take the elements of
M as formulas; these formulas are then interpreted by singletons. Our treat- ment here makes for a more expressive language. We feel that when dealing with a space like [0, 1], one might want to have a set denoting a subinterval or a measurable subset of it. Also, there is a technical advantage: at various points, it will be good to know that the set of interpretations of formulas of all sorts coincide with the measurable subsets. To get this, one clearly must start with the measurable subsets of the constants. The only price we pay for this
is that we require that all spaces be separative: that is, for each x ∈ M, {x} is
the intersection of all measurable A containing x. (However, this requirement may be lifted: see Section 5.1.)
Lemma 3.3 Coalgebra morphisms preserve the semantics. That is, if f :
b → c is a morphism of coalgebras b : X → TX and c : Y → TY , and if
ϕ : S, then (Sf )−1([[ϕ]]c ) = [ϕ]]b .
S	S

The description operations and the canonical spaces
For each coalgebra c : X → TX and each x ∈ SX, we define
dc (x)	=	{ϕ : S | x ∈ [[ϕ]]c }.
S	S
In the terminology of this paper’s title, each such set dc (x) is a satisﬁed theory. As an easy consequence of the definition and Lemma 3.3, coalgebra mor- phisms preserve description maps, i.e. in the conditions of the Lemma, dc ◦f =
db .
For each S ∈ Ing(T ), we define S∗, the canonical domain of sort S, to be
the following measurable space. In each case, the underlying set is
S∗	=	{dc (x) | for some c : X → TX, x ∈ SX}.

Note that each S∗ is a set; indeed it has cardinality at most 2cλ, where c = 2ℵ0 is the cardinality of the continuum, and λ is the is maximum of the cardinalities of the sets of measurable subsets of the constant functors in Ing(T ). Usually we will use letters like s for elements of S∗. For the σ-algebra, we first take the subsets of S∗ of the form

|ϕ|S	=	{s ∈ S∗ | ϕ ∈ s}.	(2)


Then the σ-algebra on each S∗ is the one generated by this family of subsets. (Incidentally, each S∗ is separative: s =  {|ϕ|S | s ∈ |ϕ|S}.)
Lemma 3.4 For all c : X → TX, all S ∈ Ing(T ):
For all ϕ : S, [[ϕ]]c = (dc )−1(|ϕ|).
dc : SX → S∗ is measurable.
Proof. x ∈ [[ϕ]]c iff ϕ ∈ dc (x) iff dc (x) ∈ |ϕ|S.	 
S	S	S
At this point, we need to have a handle on the σ-algebras on the spaces

S(Id ∗). We start by defining for each ϕ : S a subset ϕ definition is by recursion on Ing(T ) (rather than on ϕ):
⊆ S(Id ∗).  The

For ϕ : Id , ϕ^ = |ϕ|Id . For A : M, A^ = A. For ⟨ϕ, ψ⟩ : U ×V , ⟨^ϕ,  ψ⟩ = ϕ^×ψ^. For ϕ : U , iˆnl ϕ = inl (ϕ^); and iˆnr ϕ = inr (ϕ^). For ϕ : S, βˆpϕ = βpϕ^. And for all S, t^rue S = S(Id ∗) and ϕ^∧ ψ = ϕ^ ∩ ψ^.
Lemma 3.5 The family of sets ϕ for ϕ :: S are a set of generators of the
σ-algebra on S(Id ∗), and this family is closed under ﬁnite intersections.

The maps rS : S∗ → S(Id ∗)
Lemma 3.6 There is a family of measurable maps rS : S∗ → S(Id ∗) indexed by the ingredients of T such that the following hold:
For all coalgebras c : X → TX the diagram below commutes:


SX¸
¸Sd
(3)


For all ϕ : S, r−1(ϕ^) = |ϕ|.
c S
J 
S∗	r
¸ Id
¸¸z 
 S( Id ∗)

The canonical model of L(T )
At this point, we are almost ready to define the canonical model. We need a preliminary concept first. For each s ∈ Id ∗, let
[next]−1(s)	=	{ϕ : T | [next]ϕ ∈ s}.	(4)
Lemma 3.7 For each s ∈ Id ∗, [next]−1(s) ∈ T ∗. Moreover, this deﬁnes a measurable injective function [next]−1 : Id ∗ → T ∗.


Proof. Let c : X → TX and x ∈ X be such that s = dc (x). Then c(x) ∈
TX. We claim that [next]−1(dc (x)) = dc (c(x)). For all ϕ : T ,
Id	T
c(x) ∈ [[ϕ]]c	iff	x ∈ c−1([[ϕ]]c ) = [[next]ϕ]]c .
T	T	Id
This verifies our claim. And from it, we see that [next]−1(s) indeed belongs to
T ∗.
For the measurability assertion, note that for ϕ : T , the inverse image of
|ϕ| under [next]−1 is |[next]ϕ|. (For notational reasons, we prefer not to write out that inverse image as ([next]−1)−1(|ϕ|).)
By definition of the σ-algebra on Id ∗, this set is measurable.
We conclude by showing that [next]−1 is injective. Assume that [next]−1(s) = [next]−1(t). Then s and t agree on all formulas of the form [next]ϕ. So they agree on all formulas of sort Id . Thus s = t.	 
We define c∗ : Id ∗ → T (Id ∗) to be
rT ◦ [next]−1 : Id ∗ → T ∗ → T (Id ∗)	(5)
Note that c∗ is injective. We shall show that c∗ is a final T -coalgebra. As our title indicates, we build final coalgebras from satisfied theories.
Lemma 3.8 (Truth Lemma) For all ϕ : S, [[ϕ]]c∗ = ϕ^.
The Final Coalgebra Theorem


Lemma 3.9 dc∗ = Id
Id ∗ .

Proof. If ϕ : Id , then by the Truth Lemma, [ϕ]]c∗ = ϕ^ = |ϕ|. So for s ∈ Id ∗,
dc∗ (s)	=	{ϕ : Id | s ∈ [[ϕ]]c∗ }	=	{ϕ : Id | s ∈ |ϕ|}	=	s.
Id	Id

Lemma 3.10 For each coalgebra c : X → TX, the diagrams below commute:
X   c	 T X
¸¸¸T dc

c
Id
J 
Id ∗ 	
c T
J 
 T ∗	r
¸ Id
¸¸z 
 T (Id ∗)


Hence dc
[next]−1	T
is a morphism of coalgebras.

Proof. The verification of the square is easy, and the triangle comes from Lemma 3.6.	 



Theorem 3.11 c∗ : Id ∗ → T (Id ∗) is a ﬁnal coalgebra of T.
Proof. Let c : X → TX be a T -coalgebra. By Lemma 3.10, dc


is a coalgebra

morphism. For the uniqueness, suppose that f is any morphism. Since f

preserves descriptions, dc∗ ◦ f = dc . But by Lemma 3.9, dc∗
= Id
∗ .  So

Id	Id
Id	Id

f = dc∗ ◦ f = dc , just as desired.	 
Id	Id
We conclude with an important corollary of our development. We know of no direct proof of Corollary 3.12 below.
Corollary 3.12 For each S ∈ Ing(T ), the map rS : S∗ → S(Id ∗) is surjective.


∗
Proof. Consider the coalgebra c∗ : Id ∗ → T (Id ∗). By Lemma 3.6, rS ◦ dc =
Sdc∗ . And by Lemma 3.9, dc∗ = Id ∗ . Thus r ◦ dc∗ = SId ∗ = Id	∗ . And

Id	Id	Id
S	S	Id
S(Id )

this means that rS is surjective.	 

The Universal Harsanyi Type Space
In this section, we show how to adapt our work to the case of Harsanyi type spaces considered as coalgebras on MeasI. To make the notation more manage- able, we assume that I = {1, 2, 3}. Let M be a fixed separative measurable space. Let Pr 1, Pr 2, and Pr 3 be the obvious projections Pr i : MeasI → Meas. Let U1, U2, and U3 be the functors Ui : MeasI → Meas given as fol- lows: U1(X1, X2, X3) = M × Pr 2 × Pr 3, U2(X1, X2, X3) = M × Pr 1 × Pr 3,
U3(X1, X2, X3) = M × Pr 1 × Pr 2. Let Ti = ∆Ui. So we are interested in the functor F : MeasI → MeasI given by (T1, T2, T3).
We write Ing(F) for {M, Ui, Ti, Pr i | i = 1, 2, 3}. Notice that as defined here, all the ingredients of F are functors from MeasI to Meas.
We formulate our language L to have formulas of sort S for S ∈ Ing(F). L is defined as follows: true Pri : Pr i. If A is a measurable subset of M, then A : M. If ϕ0 : M, ϕ2 : Pr 2, ϕ3 : Pr 3, then ⟨ϕ0, ϕ2, ϕ3⟩ : U1. We have similar
clauses for U2 and U3. We also have clauses for the ∆ functors: if ϕ : Ui, then βpϕ : Ti. If ϕ : Ti, then [nexti]ϕ : Pr i. (This is not really needed for the M sorts.)
Let X = (X1, X2, X3), and let c : X → FX be a coalgebra of F. The
semantics assigns to each S ∈ Ing(F) and each ϕ : S a subset [ϕ]]c ⊆ SX.
Here are some representative cases. [true Pr ]] = Xi. [[[nexti]ϕ]]c	= c−1([[ϕ]]c ),
i	Pri	i	Ti
where c = (c1, c2, c3), or in other words, ci = Pri(c).  Suppose that ϕ0 :
M, ϕ2 : Pr 2 and ϕ3 : Pr 3, then ⟨ϕ0, ϕ2, ϕ3⟩ : U1. We set [⟨ϕ0, ϕ2, ϕ3⟩]]c	=

[[ϕ0]]c
×[[ϕ2]]c
×[[ϕ3]]c
. Finally, suppose that ϕ : U3 so that βpϕ : T3. Given

[[ϕ]]c
⊆ U3(X), we set [βpϕ]]c
= βp([[ϕ]]c
) ⊆ T3(X).


For a F-coalgebra X, and S ∈ Ing(F), we define dc so that dc (x) = {ϕ :
S | x ∈ [[ϕ]]c }. We also define |ϕ|S and S∗ just as before, using the sets |ϕ|S as

the generators of the σ-algebra on S∗. Each dc
is again measurable.

Much of the remaining constructions are similar to what we have already seen. The role of Id ∗ is played by (Pr ∗, Pr ∗, Pr ∗). This turns out to be the car-
1	2	3
rier of the final coalgebra for F. We define dc	: X → (Pr ∗, Pr ∗, Pr ∗)

as (dc
c
Pr 2
Pr 3 ).
(Pr 1 ,Pr 2,Pr 3)
1	2	3

Lemma 4.1 There is a family of measurable maps rS : S∗ → S(Pr ∗, Pr ∗, Pr ∗)

indexed by Ing(F) such that the following hold:
For all coalgebras c : X → FX, rS ◦ dc


(Pr 1 ,Pr 2 ,Pr 3).
1	2	3

rS is injective.
The σ-algebra on S(Pr ∗, Pr ∗, Pr ∗) is generated by the sets ϕ for ϕ : S.
1	2	3

The proof follows closely the work outlined in Lemma 3.6.

Now we have for each i ∈ I a function [nexti]−1 : Pr ∗
→ T ∗
and c∗ =

−1
rTi ◦ [nexti]	. The statement corresponding to that of Lemma 3.9 is that

dc∗
= Id
∗ , so dc∗
= Id	.

Pr i
Pr i
(Pr 1,Pr 2,Pr 3 )
(Pr 1 ,Pr 2 ,Pr 3)

Theorem 4.2 c∗ : (Pr ∗,Pr∗, Pr ∗) → F(Pr ∗,Pr∗, Pr ∗) is a ﬁnal coalgebra of

1	2	3
F.
1	2	3


The proofs are the same, mutatis mutandis.
As the reader has probably guessed, the work here can be generalized to polynomials on MeasI. These are I-indexed family of functors Ti : MeasI → Meas built from the projections, constants for separative spaces, products and sums, and ∆. The work in this section generalizes to show that each polynomial on MeasI has a final coalgebra. The details are not much more than what we have seen.


Further Variations and Extensions of the Basic Con- struction
We have already seen the main construction of final coalgebras for the poly- nomials on Meas built from separative spaces. We also saw (by example) how to generalize this to systems, thereby building the universal Harsanyi type
spaces. The rest of the paper offers variations and extensions of the basic technique.


Extension: Non-separative Spaces
The main point of working with separative spaces is that the points of such a space may be recovered from the σ-algebra (as the set of all singleton intersec- tions) and from the satisfied theories in our language. This allowed us to have
a language for the measurable subsets of various spaces. In the absence of sep-
arativity, we need to do a little more work. We need to add the singleton sets
{m} to the formulas of sort M. Now the semantics of some sentences might not be measurable. So to compensate, we insist that in formulas of the form βpϕ, all of the subterms of constant sort are measurable. This side condition makes the semantics well-defined. The rest of the argument is essentially the same as what we have seen.

Variation: Kripke Polynomial Functors on Set
In this section, we check that the same method gives representations for fi- nal coalgebras for functors on Set built from the identity functor, the finite power set functor, product and coproduct, fixed (finite or infinite) sets, and functions from a fixed set. Following Ro¨ßiger and Jacobs, we call these Kripke polynomial functors (KPF’s) on Set.
The function space construct means that if S is a KPF and E is a set, then SE is a KPF. As a functor, it is given by SE(a) = (S(a))E; this is the set of functions α : E → Sa. And if f : a → b so that Sf : Sa → Sb, then SEf is given by SEf (α) = (Sf ) ◦ α.
We also take Ing(SE) = {SE}∪ Ing(S).
To avoid double subscripts or confusion with our notation P for the power set functor, we shall use Q for the ﬁnite power set functor on Set. Being a functor, we shall apply Q to functions as well as sets, writing, e.g., Qr(X) for the image r[X] of the finite set X under r.
It is well-known in the coalgebra literature that the finite Kripke polyno- mial functors all have final coalgebras. One can prove this by checking that
all such functors are bounded and then using the much more general fact that bounded functors on Set have final coalgebras. Alternatively, one can use a logical approach, as done in papers such as [7,9,11,13]. This is the approach
that we take. However, our work is a bit different than in the cited works since our final coalgebra is based on the satisfied theories rather than the maximal consistent ones in some logical system. This means that our result is actually weaker, since we do not obtain a completeness result. On the other hand, we believe that it is is easier to get the final coalgebra this way. And the general method works even in the absence of a logic, as we have seen in the work on measurable spaces.


Our syntax is constructed so that if for some set A, the associated constant functor A ∈ Ing(T ), then each element a ∈ A is a formula of sort A. Further, if QS ∈ Ing(T ) and ϕ : S, then  ϕ : QS, and if SE ∈ Ing(T ) for some set E, ϕ : S and e ∈ E, then (e)ϕ : SE. Finally, we enrich our syntax to allow for
boolean negation and conjunction in all sorts.

In our semantics, we define [a]]c
[[ ϕ]]c
= {a}, and also
=	Q([[ϕ]]c ).	(6)

As usual, we also use the notation  ϕ for the dual of  ϕ. So


[[ ϕ]]c
=	{w ∈ QSX | w ∩ [[ϕ]]c
/= ∅}.

The semantics of the (e)ϕ construct is
[[(e)ϕ]]c E	=	{f ∈ S(X)E | f (e) ∈ [[ϕ]]c }.	(7)
S	S

The semantics of the boolean connectives are classical.
Most of the rest of the results from earlier in the paper go through with only minor changes, dropping the word “measurable” and anything having to do with the measurable space structure. The only differences are in Lemma 3.6 and the Truth Lemma 3.8. Before we turn to the analogs of those results, we need a general result.
Lemma 5.1 Let C be any category, let (Xi)i∈I be a family of C-objects, as- sume that X =  Xi is their coproduct with ini : Xi → X as the coproduct maps. Let T : C → C be a functor, and let (ci)i∈I be a family of T-coalgebra maps, so ci : Xi → TXi. Then there is a map c : X → TX so that for all i, ini is a T-coalgebra morphism ini : ci → c.
Proof. For each i ∈ I, T ini ◦ ci : Xi → TX. By the universal property of the coproduct, there is some c : X → TX so that for all i, T ini ◦ ci = c ◦ ini . So c is a coalgebra structure map. And as desired, ini is a T -coalgebra morphism. 
The main difference between our work in this section and the earlier work in Section 3 is that this time we prove that the functions rS are surjective before we can prove the Truth Lemma. (Recall that in the measurable space setting we derived the surjectivity of rS in Corollary 3.12.)
Lemma 5.2 There is a family of bijective maps rS : S∗ → S(Id ∗) indexed by
the ingredients of T such that for all coalgebras c : X → TX, rS ◦ dc = Sdc .

The argument for Lemma 5.2 is rather close to what we find in classical work in modal logic.


The same work as in Section 3.5 gives the desired final coalgebra theorem.
Theorem 5.3 For each Kripke polynomial functor T, c∗ : Id ∗ → T (Id ∗) is a ﬁnal coalgebra.

Other spaces
We are confident that the technique here extends to other kinds of concrete categories, such as compact Hausdorff spaces and the Borel probability mea- sure with the weak ∗-topology. This case had been studied in relation to type spaces beginning with [2]. Indeed, we hope to expand the technique as much as possible in the coming months.

Conclusion and future directions
This paper has had two overall points. First, we connect work in the eco- nomics/game theory area with coalgebras. We feel that most, if not all, of the constructions of universal type spaces and related objects may be obtained by our method. We intend that the final version of our paper will show this. The more common method in the area is to construct an ωop-limit and then follow this by a subspace construction. Though we did not discuss the matter here, we feel that the our method is somewhat simpler. As we have indicated, it generalizes easily to other settings. We also already generalized known results from particular functors to polynomials. Since the theories here are connected to logic, it should be possible to formulate logical systems for all the functors involved and prove completeness theorems. But this we leave to future work. The construction of using satisfied theories to obtain final coalgebras is quite old in the area of coalgebra and its predecessors. For coalgebras per se, one can find it in Rutten [14]. The technique is perhaps implicit in Kurz,
Kupke, and Venema [8]; this paper also contains a note that Jacobs’ final coalgebra result in [7] for Kripke polynomials on Set contains an error. Our result does not use maximal consistent sets in a logical system but rather the
satisfied theories. This is simpler, though of course one must do more work to get completeness results. From the side of coalgebra, perhaps what is most original here is taking a language for sets as opposed to (or, in addition to) a language of points. The interplay of the two languages is well worth studying.


References
Patrick Billingsley, Probability and Measure, Second Edition. Wiley Series in Probability and Mathematical Statistics, New York, 1986.


W. B¨oge and T. Eisele, “On solutions of Bayesian games”, International Journal of Game Theory, 8, 1979, 193–215.
Mich`ele Giry, “A categorical approach to probability theory,” in Categorical Aspects of Topology and Analysis, Springer Lecture Notes in Mathematics 915, Berlin-New York, 1982, 68–85.
John C. Harsanyi, “Games with incomplete information played by ‘Bayesian’ players”, in Papers in Game Theory Theory and Decision Library, Volume 28 D. Reidel Publishing Company.
Aviad Heifetz and Dov Samet, “Topology-free typology of beliefs”. Journal of Economic Theory 82 (1998), no. 2, 324–341.
Aviad Heifetz and Dov Samet, “Coherent beliefs are not always types”. Journal of Mathematical Economics 32 (1999), 475–488.
Bart Jacobs, “Many-sorted coalgebraic modal logic: a model-theoretic study.” Theor. Inform. Appl. 35 (2001), no. 1, 31–59.
Clemens Kupke, Alexander Kurz, and Yde Venema, “Stone coalgebras”, in H. P. Gumm (ed.), Proceedings of CMCS 2002.
Alexander Kurz, “Specifying coalgebras with modal logic”, in H. P. Gumm (ed.), Proceedings of CMCS 1998.
	Jean-Fran¸cois Mertens and Shmuel Zamir, “Formulation of Bayesian analysis for games with incomplete information”. International Journal of Game Theory 14 (1985), no. 1, 1–29.
	Martin Ro¨ßiger, “Languages for coalgebras on datafunctors.” Proceedings of CMCS’99 (Amsterdam, 1999), ENTCS 19, Elsevier, Amsterdam, 1999.
	Martin Ro¨ßiger, “Coalgebras and modal logic.” Proceedings of CMCS’2000 (Berlin, 2000), ENTCS 33, Elsevier, Amsterdam, 2000.
	Martin Ro¨ßiger, “From modal logic to terminal coalgebras.” Theoretical Computer Science 260 (2001), no. 1-2, 209–228.
	Jan Rutten, “A calculus of transition systems.” in A. Ponse et al (eds.), Modal Logic and Process Algebra, a Bisimulation Perspective, CSLI Lecture Notes 53, 1995.
