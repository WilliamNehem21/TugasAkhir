Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 329 (2016) 27–38
www.elsevier.com/locate/entcs

Multiobjective Optimization in a Quantum Adiabatic Computer
Benjam´ın Bara´n1 and Marcos Villagra2
Universidad Nacional de Asunci´on
NIDTEC, Campus Universitario, San Lorenzo, C.P. 2619, Paraguay

Abstract
In this work we propose what we consider the first quantum algorithm for multiobjective combinatorial optimization, at least to the best of our knowledge. The proposed algorithm is based on the adiabatic algo- rithm of Farhi et al. and it is constructed by mapping a multiobjective combinatorial optimization problem into a Hamiltonian using a convex combination among objectives. We present mathematical properties of the eigenspectrum of the associated Hamiltonian and prove that the quantum adiabatic algorithm can find Pareto-optimal solutions provided certain convex combinations of objectives are used and the underlying multiobjective problem meets certain restrictions.
Keywords: multiobjective optimization, quantum adiabatic computing, combinatorial optimization

Introduction
Optimization problems are pervasive in everyday applications like logistics, com- munication networks, artificial intelligence and many other areas. Consequently, there is a high demand of efficient algorithms for these problems. Many algorithmic and engineering techniques applied to optimization problems are being developed to make an efficient use of computational resources in optimization problems. In fact, several engineering applications are multiobjective optimization problems, where several objectives must be optimized at the same time. For a survey on multiobjec- tive optimization see for example [8,20]. In this work, we present what we consider the first algorithm for multiobjective optimization using a quantum adiabatic com- puter.
Quantum computation is a promising paradigm for the design of highly efficient algorithms based on the principles of quantum mechanics. Researchers have stud- ied the computational power of quantum computers by showing the advantages it

1 Email: bbaran@cba.com.py
2 Email: mvillagra@pol.una.py, corresponding author.

http://dx.doi.org/10.1016/j.entcs.2016.12.003
1571-0661/© 2016 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

presents over classical computers in many applications. Two of the most well-know applications are in unstructured search and the factoring of composite numbers. In structured search, Grover’s algorithm can find a single marked element among n el-
ements in time O(√n), whereas any other classical algorithm requires time at least
n [10]. Shor’s algorithm can factor composite numbers in polynomial time—any other known classical algorithm factors composite numbers in subexponential time (it is open whether a classical algorithm can factor numbers in polynomial time) [18].
Initially, before the year 2000, optimization problems were not easy to construct using quantum computers. This was because most studied models of quantum computers were based on quantum circuits which presented difficulties for the design of optimization algorithms. The first paper reporting on solving an optimization problem was in the work of Du¨rr and Høyer [7]. Their algorithm finds a minimum
inside an array of n numbers in time O(√n). More recently, Baritompa, Bulger
and Wood [3] presented an improved algorithm based on [7]; this latter algorithm, however, does not have a proof of convergence in finite time. The algorithms of [7] and [3] are based on Grover’s search, an hence, in the quantum circuit model.
Farhi et al. [9] presented a new quantum algorithm and computation paradigm more friendly to optimization problems known as Quantum Adiabatic Computing. This new paradigm is based on a natural phenomenon of quantum annealing [6]; thus, analogously to classical annealing, optimization problems are mapped onto a natural optimization phenomenon, and hence, optimal solutions are found by just letting this phenomenon to take place.
The algorithms of [7] and [3] are difficult to extend to multiobjective optimization and at the same time prove convergence in finite time. Hence, quantum adiabatic computing presents itself as a more suitable model to achieve the follwing two goals:
(i) to propose a quantum algorithm for multiobjective optimization, and (ii) prove convergence in finite time of the algorithm.
In this work, as our main contribution, we show that the quantum adiabatic algorithm of Farhi et al. [9] can be used to find Pareto-optimal solutions in finite time provided certain restrictions are met. In Theorem 4.1, we identify two struc- tural properties that any multiobjective optimization problem must fulfill in order to use the abovementioned adiabatic algorithm.
The outline of this paper is the following. In Section 2 we present a brief overview of multiobjective combinatorial optimization and introduce the notation used throughout this work; in particular, several new properties of multiobjective combinatorial optimization are also presented that are of independent interest. In Section 3 we explain the quantum adiabatic theorem, which is the basis of the adia- batic algorithm. In Section 4 we explain the adiabatic algorithm and its application to combinatorial multiobjective optimization. In Section 5 we sketch a proof of our main result of Theorem 4.1. In Section 6 we show how to use the adiabatic algo- rithm in a concrete problem. Finally, in Section 7 we present a list of challenging open problems. Full proofs of all theorems and lemmas appear in [2].

Multiobjective Combinatorial Optimization
In this section we introduce the notation used throughout this paper and the main concepts of multiobjective optimization. The set of natural numbers (including 0) is denoted N, the set of integers is Z, the set of real number is denoted R and the set of positive real numbers is R+. For any i, j ∈ N, with i < j, we let [i, j]Z denote the discrete interval {i, i + 1,...,j − 1, j}. The set of binary words of length n is denoted {0, 1} .

Deﬁnition
A multiobjective combinatorial optimization problem (or MCO) is an optimization problem involving multiple objectives over a finite set of feasible solutions. These objectives typically present trade-offs among solutions and in general there is no single optimal solution. In this work, we follow the definition of Kung, Luccio and Preparata [12].
Let S1,..., Sd be totally ordered sets and let ≤i be an order on set Si for each i ∈ [1, d]Z. We also let ni be the cardinality of Si. Define the natural partial order relation ≺ over the cartesian product S1 ×· · ·× Sd in the following way. For any u = (u1,..., ud) and v = (v1,..., vd) in S1 ×· · ·× Sd, we write u ≺ v if and only if for any i ∈ [1, d]Z it holds that ui ≤i vi. An element u ∈ S is a minimal element if there is no v ∈ S such that v ≺ u and v /= u. Moreover, we say that u is non- comparable with v if u ⊀ v and v ⊀ u and succinctly write u ∼ v. In the context of multiobjective optimization, the relation ≺ as defined here is often referred to as the Pareto-order relation [12].
Definition 2.1 A multiobjective combinatorial optimization problem (or shortly, MCO) is defined as a tuple Π = (D, R, d, F, ≺) where D is a finite set called domain, R ⊆ R+ is a set of values, d is a positive integer, F is a finite collection of functions {fi}i∈[1,d]Z where each fi maps from D to R, and ≺ is the Pareto-order relation on R (here R is the d-fold cartesian product on R). Define a function f that maps D to Rd as f (x)= (f1(x),..., fd(x)) referred as the objective vector of Π. If f (x) is a minimal element of Rd we say that x is a Pareto-optimal solution of Π. For any two elements x, y ∈ D, if f (x) ≺ f (y) we write x ≺ y; similarly, if f (x) ∼ f (y) we write x ∼ y. For any x, y ∈ D, if x ≺ y and y ≺ x we say that x and y are equivalent and write x ≡ y. The set of all Pareto-optimal solutions of Π is denoted P (Π).
A canonical example of a multiobjective optimization problem is the Two- Parabolas problem. In this problem we have two objective functions defined by two parabolas that intersect in a single point, see Fig.1. In this work, we will only be concerned with a combinatorial version of the Two-Parabolas problem where each objective function only takes values on a finite set of numbers.
Considering that the set of Pareto-optimal solutions can be very large, we are mostly concerned on finding a subset of the Pareto-optimal solutions. Kung, Luc- cio and Preparata [12] give optimal query algorithms to find all Pareto-optimal



Fig. 1. The Two-Parabolas Problem. The first objective function f1 is represented by the bold line and the second objective function f2 by the dashed line. For MCOs, each objective function takes values only on the natural numbers. Note that there are no equivalent elements in the domain. In this particular example, all the solutions between 7 and 15 are Pareto-optimal.
solutions for d = 2, 3 and almost tight upper and lower bounds for any d ≥ 4 up to polylogarithmic factors. Papadimitriou and Yannakakis [15] showed that an approximation to all Pareto-optimal solutions can be found in polynomial time.
For the remaining of this work, < will always be the Pareto-order relation and will be omitted from the definition of any MCO. Furthermore, for convenience, we will often write Πd = (D, R, 7) as a short-hand for Π = (D, R, d, 7). As a final remark, we will assume for this work that each function fi ∈ 7 is computable in polynomial time and each fi(x) is bounded by a polynomial in the number of bits of x.
Some Foundational Properties
In this section we study properties of MCOs that will be necessary later in our work.
Definition 2.2 An MCO Πd = (D, S, 7) is normal if for each fi ∈ 7 there is a unique x ∈ D such that fi(x) = 0 and if fi(x) = 0 and fj(y) = 0, for i /= j, then x /= y.
In a normal MCO, the value of an optimal solution in each fi is 0, and all optimal solutions are different. In Fig.1, solutions 7 and 15 are optimal solutions of f1 and f2 with value 0, respectively; hence, the Two-Parabolas problem of Fig.1 is normal.
Definition 2.3 An MCO Πd is collision-free if given λ = (λ1,..., λd), with each λi ∈ R+, for any i ∈ [1, d]Z and any pair x, y ∈ D it holds that |fi(x) — fi(y)| > λi. If Πd is collision-free we write succinctly as Πλ.
The Two-Parabolas problem of Fig.1 is not collision-free; for example, for solu- tions 5 and 9 we have that f1(5) = f1(9). In Section 6 we show how to turn the Two-Parabolas problem into a collision-free MCO.
Definition 2.4 A Pareto-optimal solution x is trivial if x is an optimal solution of some fi ∈ 7.
In Fig.1, solutions 7 and 15 are trivial Pareto-optimal solutions, whereas any x
between 7 and 15 is non-trivial.

Lemma 2.5 For any normal MCO Πd, if x and y are trivial Pareto-optimal solu- tions of Πd, then x and y are not equivalent.
Let Wd be a set of of normalized vectors in [0, 1]d defined as


Wd =

d
w = (w ,..., w )	[0, 1)d
 i=1
wi = 1)

.	(1)

For any w ∈ Wd, define ⟨f (x), w⟩ = ⟨w, f (x)⟩ = w1f1(x)+ ··· + (wd)fd(x).
Lemma 2.6 Given Πd = (D, R, 7), any two elements x, y ∈ D are equivalent if and only if for all w ∈ Wd it holds that ⟨f (x), w⟩ = ⟨f (y), w⟩.
Lemma 2.7 Let Πd = (D, S, 7) be any MCO. For any w ∈ Wd there exists x ∈ D such that if ⟨f (x), w⟩ = miny∈D{⟨f (y), w⟩}, then x is a Pareto-optimal solution of Πd.
In this work, we will concentrate on finding non-trivial Pareto-optimal solutions. Finding trivial elements can be done by letting wi = 1 for some i ∈ [1, d]Z and then running and optimization algorithm for fi; hence, in Eq.(1) we do not allow for any wi to be 1. The process of mapping several objectives to an single-objective optimization problem is sometimes referred as a linearization of the MCO [8].
From Lemma 2.7, we know that there are Pareto-optimal solutions that are not optimal for any w ∈ Wd. We define the set of non-supported Pareto-optimal solutions as the set N (Π) of all Pareto-optimal solutions x such that ⟨f (x), w⟩ is not optimal for any linearization w ∈ Wd. We also define the set S(Π) of supported Pareto-optimal solutions as the set S(Π) = P (Π) \ N (Π) [8].
Note that there may be non-dominated Pareto-optimal solutions x and y that are non-comparable and ⟨f (x), w⟩ = ⟨f (y), w⟩ for some w ∈ Wd. That is equivalent to say that the objective function obtained from the linearization of an MCO is not an injective function.
Definition 2.8 Any two Pareto-optimal solutions x, y ∈ D are weakly-equivalent if there exists w ∈ Wd such that ⟨f (x), w⟩ = ⟨f (y), w⟩.
Any two equivalent solutions x, y are weakly-equivalent, by Lemma 2.6; the other way, however, does not hold in general. For example, consider two objective vectors f (x)= (1, 2, 3) and f (y)= (1, 3, 2). Clearly, x and y are not equivalent; however, if w = (1/3, 1/3, 1/3) we can see that x and y are indeed weakly-equivalent. In Fig.1, points 10 and 12 are weakly-equivalent.

Quantum Adiabatic Computation
Starting from this section we assume basic knowledge of quantum computation. For a thorough treatment of quantum information science we refer the reader to the book by Nielsen and Chuang [14].

Σ Let H be a Hilbert space with a finite  basis {√|ui⟩}i. For any vector |v⟩ =
acting on H, we define the operator norm of A induced by the l2-norm as A =
max  v  =1 A|v⟩.
The Hamiltonian of a quantum system gives a complete description of its time evolution, which is governed by the well-known Schrodinger’s equation
d
ik dt|Ψ(t)⟩ = H(t)|Ψ(t)⟩,	(2)
where H is a Hami√ltonian, |Ψ(t)⟩ is the state of the system at time t, k is Planck’s
constant and i =	—1. For simplicity, we will omit k and i from now on. If H
is time-independent, it is easy to see that a solution to Eq.(2) is simply |Ψ(t)⟩ =
U (t)|Ψ(0)⟩ where U (t)= e−itH using |Ψ(0)⟩ as a given initial condition. However, when the Hamiltonian depends on time, Eq.(2) is not in general easy to solve and much research is devoted to it; nevertheless, there are a few known special cases.
Say that a closed quantum system is described by a time-dependent Hamiltonian
H(t). If |Ψ(t)⟩ is the minimum energy eigenstate of H(t), adiabatic time evolution keeps the system in its lower energy eigenstate as long as the change rate of the Hamiltonian is “slow enough.” This natural phenomenon is formalized in the Adia- batic Theorem, first proved by Born and Fock [4]. Different proofs where given along the years, see for example [11,13,17,16,1]. In this work we make use of a version of the theorem presented in [1].
Consider a time-dependent Hamiltonian H(s) for 0 ≤ s ≤ 1, where s = t/T so that T controls the rate of change of H for t ∈ [0,T ].
Theorem 3.1 (Adiabatic Theorem [4,11,1]) Let H(s) be a nondegenerate Hamiltonian, let |ψ(s)⟩ be one of its eigenvectors and γ(s) the corresponding eigen- value. For any λ ∈ R+ and s ∈ [0, 1], assume that for any other eigenvalue γˆ(s) it holds that |γ(s) — γˆ(s)| > λ. Consider the evolution given by H on initial condition
|ψ(0)⟩ for time T and let |φ⟩ be the state of the system at T . For any δ ∈ R , if
T ≥ 105 . max{ H′ 3 , H′ ·H′′ } then φ — ψ(1)  < δ.
The Quantum Adiabatic Algorithm
The adiabatic theorem can be used to construct quantum algorithms for optimiza- tion problems. Consider a function f : {0, 1}n → R+ whose optimal solution x¯ gives f (x¯) = 0. Let H1 be a Hamiltonian defined as
H1 =	f (x)|x⟩⟨x|.	(3)
x

Notice that H1|x¯⟩ = 0, and hence, |x¯⟩ is an eigenvector. Thus, an optimization problem reduces to finding the eigenstate with minimum eigenvalue [9]. For any s ∈ [0, 1], let H(s) = (1 — s)H0 + sH1, where H0 is an initial Hamiltonian chosen accordingly. If we initialize the system in the lowest energy eigenstate |ψ(0)⟩, the

adiabatic theorem guarantees that T at least 1/poly(λ) suffices to obtain a quantum state close to |ψ(1)⟩, and hence, to our desired optimal solution. We call H1 and H0 the final and initial Hamiltonians, respectively. The only requirement in order to make use of the Adiabatic Theorem is that H0 and H1 must not commute.
In this section we show how to construct the initial and final Hamiltonians for MCOs. Given any normal and collision-free MCO Πλ = (D, R, 7) we will assume with no loss of generality that D = {0, 1}n, that is, D is a set of binary words of length n.
For each i ∈ [1, d]Z define a Hamiltonian Hfi  = Σx∈{0,1}n fi(x)|x⟩⟨x|. The
collision-free. For any w ∈ Wd, the final Hamiltonian Hw is defined as
Hw = w1Hf1 + ··· + wdHfd

=
x∈{0,1}n
=
x∈{0,1}n
 w1f1(x)+ ··· + wdfd(x) |x⟩⟨x|

⟨f (x), w⟩|x⟩⟨x|.	(4)

Following the works of [9], we choose as initial Hamiltonian one that does not diagonalizes in the computational basis. Let ˆ0 = ( 0 + 1 )/  2 and ˆ1 = ( 0
n
|1⟩)/  2. A state |xˆ⟩ for any x ∈ {0, 1} is obtained by applying the n-fold Walsh-
Hadamard operation F⊗n on |x⟩. The set {|xˆ⟩} is known as the Hadamard basis. The initial Hamiltonian is thus defined over the Hadamard basis as


H0 =
x∈{0,1}n
h(x)|xˆ⟩⟨xˆ|,	(5)

where h(0n) = 0 and h(x) ≥ 1 for all x /= 0n. It is easy to see that the minimum

eigenvalue is nondegenerate with corresponding eigenstate |ˆ0n⟩ = √1
Σx∈{0,1}n |x⟩.

After defining the initial and final Hamiltonians, the Adiabatic Theorem guar- antees that we can find a Pareto-optimal solution in finite time.
Theorem 4.1 Given any normal and collision-free MCO Πλ, if there are no equiv- alent Pareto-optimal solutions, then there exists w ∈ Wd such that the quantum adiabatic algorithm can ﬁnd the Pareto-optimal solution x corresponding to w in ﬁ- nite time. Moreover, if each w is chosen appropriately, then the quantum adiabatic algorithm can ﬁnd all supported solutions.
By Lemma 2.7, all supported solutions can be found by choosing any w ∈ Wd. Thus, to prove Theorem 4.1 we show in the following section that there always exists an appropriate w that makes Hw nondegenerate in its minimum eigenvalue.
Eigenspectrum of the Final Hamiltonian
In this section we sketch a proof of Theorem 4.1. Note that if the initial Hamiltonian does not commute with the final Hamiltonian, it suffices to prove that the final

Hamiltonian is nondegenerate in its minimum eigenvalue [9]. For the remaining of this work, we let σw and αw be the smallest and second smallest eigenvalues of Hw.
Lemma 5.1 For any w ∈ Wd, it holds that σw ≥  i N wiλi. In particular, for any w ∈ (0, 1)d, it holds that σw ≥ ⟨w, λ⟩.
Lemma 5.2 For any w ∈ Wd, let Hw be a Hamiltonian with a nondegenerate minimum eigenvalue. The eigenvalue gap between the smallest and second smallest eigenvalues of Hw is at least ⟨λ, w⟩.
Lemma 5.3 If there are no weakly-equivalent Pareto-optimal solutions, then the Hamiltonian Hw is non-degenerate in its minimum eigenvalue.
We further show that even if Πd has weakly-equivalent Pareto-optimal solutions, we can have a nondegenerate Hamiltonian.
Lemma 5.4 Let x1,..., xl be Pareto-optimal solutions of Πλ that are not pairwise equivalent. If there exists w ∈ Wd such that ⟨f (x1), w⟩ = ··· = ⟨f (xl), w⟩ = σw for some σw ∈ R+, then there exists wj ∈ Wd and i ∈ [1, l]Z such that for all j ∈ [1, l]Z, with j /= i, it holds ⟨f (xi), wj⟩ < ⟨f (xj), wj⟩. In particular, if σw is minimum among all y ∈ D, then wj can be chosen such that ⟨f (xi), wj⟩ is unique and minimum among all y ∈ D.

Lemma 5.5 Let Πλ
be a MCO with no equivalent Pareto-optimal solutions and

let Hw be a degenerate Hamiltonian in its minimum eigenvalue with corresponding minimum eigenstates |x1⟩,..., |xl⟩. There exists wj ∈ Wd and i ∈ [1, l]Z such that

Hwj
is nondegenerate in its smallest eigenvalue with corresponding eigenvector |xi⟩.
From Lemma 5.5 Theorem 4.1 immediately follows.

Application of the Adiabatic Algorithm to the Two- Parabolas Problem
To make use of the Adiabatic algorithm of Section 4 in the Two-Parabolas problem we need to consider a collision-free version of the problem. Let TPλ = (D, R, 7) be a normal and collision-free MCO where λ = (λ1, λ2) ∈ R+ × R+, D = {0, 1}n, R ⊆ R+ and 7 = {f1, f2}. Let x0 and xj0 be the optimal solutions of f1 and f2, respectively. We will use xi to indicate the ith solution of f1 and xji for f2. Moreover, we assume that |x0 — xj0| > 1. This latter assumption will ensure that there is at least one non-trivial Pareto-optimal solution. Note that if |x0 — xj0|≤ 1, the problem only has trivial solutions.
To make TPλ a Two-Parabolas problem, we impose the following conditions.
For each x ∈ [0, x0], the functions f1 and f2 are decreasing;
for each x ∈ [xj0, 2n — 1], the functions f1 and f2 are increasing;
for each x ∈ [x0 + 1, xj0 — 1] , the function f1 is increasing and the function f2
is decreasing.



Fig. 2. A discrete Two-Parabolas problem on six qubits. Each objective function f1 and f2 is represented by the rounded points and the squared points, respectively. The gap vector λ = (0.2, 0.4). The trivial Pareto-optimal points are 20 and 40.
The final and initial Hamiltonians are as in Eq.(4) and Eq.(5), respectively. In particular, in Eq.(5), we define the initial Hamiltonian as


Hˆ0 =
x∈{0,1}n\{0n}
|xˆ⟩⟨xˆ|.	(6)

Thus, the Hamiltonian of the entire system for TPλ is
Hw(s)= (1 — s)H0 + sHw.	(7)
Let Δmax = maxs   d Hw(s)  2 and gmin = mins g(s), where g(s) is the eigenvalue gap of Hw(s). It can be proved that T = O( Δmax ) suffices to find a supported
min
solution corresponding to w [19]. The solution is therefore found in finite time.
The quantity Δmax is usually easy to estimate. The eigenvalue gap gmin is, how- ever, very difficult to compute; indeed, determining for any Hamiltonian if gmin > 0 is undecidable [5].
We present a concrete example of the Two-Parabolas problem on six qubits and estimate the eigenvalue gap. In Fig.2 we show a discretized instance as explained above whereas Table 1 presents a complete specification of all points.
For this particular example we use as initial Hamiltonian 3H0, that is, Eq.(6) multiplied by 3. Thus, the minimum eigenvalue of 3H0 is 0, whereas any other eigenvalue is 3.

In Fig.3 we present the eigenvalue gap of TPλ
for w = 0.54 where we let

w1 = w and w2 = 1 — w1; for this particular value of w the Hamiltonian HF,w
has a unique minimum eigenstate which corresponds to Pareto-optimal solution
32. The two smallest eigenvalues never touch, and exactly at s = 1 the gap is
|⟨w, f (x0)⟩— ⟨w, f (x1)⟩|, where x0 = 32 and x1 = 31 are the smallest and second smallest solutions with respect to w, which agrees with lemmas 5.1 and 5.2.
Similar results can be observed for different values of w and a different number of qubits. Therefore, the experimental evidence lead us to conjecture that in the Two- Parabolas problem gmin ≤ |⟨w, f (x)⟩— ⟨w, f (y)⟩|, where x and y are the smallest and second smallest solutions with respect to w.

Table 1
Complete definition of the Two-Parabolas example of Fig.2 for six qubits.



Fig. 3. Eigenvalue gap (in gray) of the Two-Parabolas problem of Fig.2 for w = 0.54. The eigenvalue gap at s = 1 is exactly w, f (x)  w, f (y) , where x = 32 and y = 31 are the smallest and second smallest solutions with respect to w.
Concluding Remarks and Open Problems
In this work we showed that the quantum adiabatic algorithm of Farhi et al. [9] can be used for multiobjective combinatorial optimization problems. In particular, a simple linearization of the objective functions suffices to guarantee convergence to a Pareto-optimal solution provided the linearized single-objective problem has

an unique optimal solution. However, even if a linearization of objectives does not gives an unique optimal solution, then it is always possible to choose an appropriate linearization that does.
We end this paper by listing a few promising and challenging open problems.
To make any practical use of Theorem 4.1 we need to chose w ∈ Wd in such a way that the optimal solution of the linearization of an MCO has an unique solution. It is very difficult, however, to know a priori which w to chose in order to use the adiabatic algorithm. Therefore, more research is necessary to learn how to select these linearizations. One way could be to constraint the domain of an MCO in order to minimize the number of weak-equivalent solutions.
Another related open issue is how to solve multiobjective problems in the pres- ence of equivalent solutions. A technique of mapping an MCO with equivalent solutions to Hamiltonians seems very difficult; that is because the smallest eigenvalue must be unique in order to apply the adiabatic theorem.
According to Theorem 4.1, we can only find all supported solutions. Other works showed that the number of non-supported solutions can be much larger than the number of supported solutions [8]. Hence, it is interesting to construct a quantum algorithm that could find an approximation to all Pareto-optimal solutions.
Prove our conjecture of Section 6 that the eigenvalue gap of the Hamiltonian of Eq.(7), corresponding to the Two-Parabolas problem, is at most the differ- ence between the smallest solution and second smallest solution for any given linearization of the objective functions.

References
Ambainis, A. and O. Regev, An elementary proof of the quantum adiabatic theorem (2004), arXiv:quant- ph/0411152.
Bar´an, B. and M. Villagra, Multiobjective optimization in a quantum adiabatic computer (2016), arXiv:1605.03152.
Baritompa, W. P., D. W. Bulger and G. R. Wood, Grover’s quantum algorithm applied to global optimization, SIAM Journal on Optimization 15 (2005), p. 11701184.
Born, M. and V. Fock, Beweis des adiabatensatzes, Zeitschrift fu¨r Physik 51 (1926), pp. 165–180.
Cubitt, T. S., D. Perez-Garcia and M. M. Wolf, Undecidability of the spectral gap, Nature 528 (2015),
pp. 207–211.
Das, A. and B. K. Chakrabarti, Quantum annealing and quantum computation, Reviews of Modern Physics 80 (2008).
Du¨rr, C. and P. Høyer, A quantum algorithm for finding the minimum (1999), arXiv:quant-ph/9607014.
Ehrgott, M. and X. Gandibleux, A survey and annotated bibliography of multiobjective combinatorial optimization, OR Spektrum 22 (2000), pp. 425–460.
Farhi, E., J. Goldstone, S. Gutman and M. Sipser, Quantum computation by adiabatic evolution (2000), arXiv:quant-ph/0001106.
Grover, L., A fast quantum mechanical algorithm for database search, in: Proceedings of the 28th Annual ACM Symposium on the Theory of Computing (STOC), 1996, pp. 212–219.

Kato, T., On the adiabatic theorem of quantum mechanics, Journal of the Physical Society of Japan 5
(1950), p. 435.
Kung, H. T., F. Luccio and F. P. Preparata, On finding the maxima of a set of vectors, Journal of the ACM 22 (1975), pp. 469–476.
Messiah, A., “Quantum Mechanics, Volume II,” North Holland, 1962.
Nielsen, M. and I. Chuang, “Quantum Computation and Quantum Information,” Cambridge University Press, 2000.
Papadimitriou, C. and M. Yannakakis, On the approximability of trade-offs and optimal access of web sources, in: Proceedings of the 41st Annual Symposium on Foundations of Computer Science (FOCS), 2000, pp. 86–92.
Reichardt, B., The quantum adiabatic optimization algorithm and local minima, in: Proceedings of the 36th Annual ACM Symposium on Theory of Computing (STOC), 2004, pp. 502–510.
Sarandy, M. S., L.-A. Wu and D. A. Lidar, Consistency of the adiabatic theorem, Quantum Information Processing 3 (2004), pp. 331–349.
Shor, P., Algorithms for quantum computation: discrete logarithms and factoring, in: Proceedings of the 35th Annual Symposium on Foundations of Computer Science (FOCS), 1994, pp. 124–134.
van Dam, W., M. Mosca and U. Vazirani, How powerful is adiabatic quantum computation?, in: Proceedings of the 42nd IEEE Symposium on Foundations of Computer Science (FOCS) (2001), pp. 279–287.
von Lu¨cken, C., B. Bar´an and C. Brizuela, A survey on multi-objective evolutionary algorithms for many-objective problems, Computational Optimization and Applications 58 (2014), pp. 707–756.
