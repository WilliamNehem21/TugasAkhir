Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 298 (2013) 403–425
www.elsevier.com/locate/entcs

Distributed Probabilistic and Quantum Strategies
Glynn Winskel 1
University of Cambridge Computer Laboratory, England

Abstract
Building on a new definition and characterization of probabilistic event structures, a general definition of distributed probabilistic strategies is proposed. Probabilistic strategies are shown to compose, with probabilistic copy-cat strategies as identities. A higher-order probabilistic process language reminiscent of Milner’s CCS is interpretable within probabilistic strategies. W.r.t. a new definition of quantum event structure, it is shown how consistent parts of a quantum event structure are automatically probabilistic event structures, and so possess a probability measure. This gives a non-traditional take on the consistent- histories approach to quantum theory. It leads to an extension to quantum strategies. Probabilistic games extend to games with payoff, symmetry and games of imperfect information.
Keywords: Probabilistic event structure, probabilistic games, probabilistic strategy


Introduction
Concurrent strategies [15] are being investigated as a possible foundation for a gen- eralized domain theory, in which concurrent games and strategies take over the roles of domains and continuous functions. One motivation is to broaden the range of applicability of denotational semantics. Hence it is important to see how concurrent strategies can be adapted to quantitative semantics, to probabilistic and quantum strategies.
Just as event structures can be thought of as models of distributed computation so are probabilistic event structures models of probabilistic distributed processes. Existing definitions of probabilistic event structures [1,10,17] are not general enough to ascribe probabilities to the results of the sometimes partial interaction between strategies. This paper first presents a new workable definition of probabilistic event structures, extending existing definitions. Probabilistic event structures are char- acterized as event structures with a continuous valuation on their domain of con-

1 Email: Glynn.Winskel@cl.cam.ac.uk

1571-0661 © 2013 Elsevier B.V. Open access under CC BY-NC-ND license.
http://dx.doi.org/10.1016/j.entcs.2013.09.024

figurations. Probabilistic event structures possess a probabilistic measure on their configurations. Technically, probabilistic event structures are defined via ‘drop func- tions’ expressing the probability drops across general intervals of configurations of the event structure; drop functions provide a useful mathematical handle on prob- abilistic event structures and strategies.
This prepares the ground for a general definition of distributed probabilistic strategies, based on event structures. A probabilistic strategy for Player is a con- current strategy whose behaviour is described by a probabilistic event structure when projected to just the Player moves. Probabilistic strategies are shown to compose—here ‘drop functions’ come into their own—with probabilistic copy-cat strategies as identities. The result of a play between Player and Opponent in a game will be a probabilistic event structure.
As an illustration of their expressive power, probabilistic strategies are shown to interpret a higher-order probabilistic process language reminiscent of Milner’s CCS. Probabilistic strategies are easily extended to games with payoff and games of imperfect information. Their definition has been partly inspired by the work of Danos and Harmer on probabilistic HO games [3], and in an informal sense the definition here extends theirs from the sequential setting. (A formal connection must await the relation between concurrent games and HO games, being developed within concurrent games with symmetry [2].)
A novel application is to a new definition of quantum event structures and strategies. A quantum event structure is an event structure in which the events are interpreted as projection or unitary operators on a Hilbert space, so that con- current events are associated with commuting operators; a configuration of the event structure is thought of as a partial-order history of the observations of a quantum experiment. Interestingly order-compatible families of configurations of a quantum event structure automatically determine a probabilistic event structures, and so possess probability distributions. This gives a non-traditional take on the consistent-histories approach to quantum theory, which provides consistency condi- tions on histories to pick out those subfamilies of histories over which it is meaning- ful to place a probability distribution. The approach via quantum event structures bypasses the consistency conditions usually invoked [7].
In a quantum game Player and Opponent interact to jointly create a probabilistic distributed experiment on a quantum system. Accordingly a quantum strategy is taken to be a distributed probabilistic strategy on a quantum event structure, according with work on quantum games [6]. There are similarities with the work of Delbecque [4], itself based on probabilistic HO games [3].

Event structures
Event structures and conﬁgurations
An event structure comprises (E, ≤, Con), consisting of a set E, of events which are partially ordered by ≤, the causal dependency relation, and a nonempty consistency

relation Con consisting of finite subsets of E, which satisfy
{e′ ∣ e′ ≤ e} is finite for all e ∈ E,
{e}∈ Con for all e ∈ E,
Y ⊆ X ∈ Con =⇒ Y ∈ Con, and
X ∈ Con & e ≤ e′ ∈ X =⇒ X ∪ {e}∈ Con.
The conﬁgurations, C∞(E), of an event structure E consist of those subsets x ⊆ E which are (Consistent) ∀X ⊆ x. X is finite ⇒ X ∈ Con and (Down-closed) ∀e, e′. e′ ≤ e ∈ x =⇒ e′ ∈ x. Often we shall be concerned with just the finite configurations, C(E).
We say an event structure is elementary when the consistency relation consists of all finite subsets of events. Two events e, e′ which are both consistent and incom- parable w.r.t. causal dependency in an event structure are regarded as concurrent, written e co e′. In games the relation of immediate dependency e d e′, meaning e and e′ are distinct with e ≤ e′ and no event in between, will play an important role. For X ⊆ E we write [X] for {e ∈ E ∣ ∃e′ ∈ X. e ≤ e′}, the down-closure of X; note if X ∈ Con, then [X]∈ Con is a configuration.
Notation 1 Let E be an event structure. We use x−⊂y to mean y covers x in
C∞(E), i.e. x ⊊ y in C∞(E) with nothing in between, and x−—e⊂ y to mean x∪{e}= y
for x, y ∈ C∞(E) and event e ∉ x. We use x−—e⊂ , expressing that event e is enabled
at configuration x, when x−—e⊂ y for some y. We write {x ∣ i ∈ I}↑ to indicate that
a subset of configurations is compatible, i.e. bounded above by a configuration.
Maps and operations on event structures
Let E and E′ be event structures. A map of event structures f ∶ E → E′ is a partial function on events f ∶ E ⇀ E′ such that for all x ∈ C∞(E) its direct image fx ∈ C∞(E′) and
e1, e2 ∈ x & f (e1)= f (e2) (with both defined) =⇒ e1 = e2.
Maps of event structures compose as partial functions, with identity maps given by identity functions. We will say the map is total if the function f is total; then f restricts to a bijection x ≅ fx for x ∈ C(E). A total map of event structures which preserves causal dependency is called rigid.
Products
The category of event structures with maps has products A × B with projections π1 to A and π2 to B. It introduces arbitrary synchronizations between events of A and events of B in the manner of process algebra [13,21].
Pullbacks
Synchronized compositions of event structures A and B are obtained as restrictions
A × B ↾ R. The restriction of an event structure E to a subset of events R, written

E↾R, is the event structure with events E′ = {e ∈ E ∣ [e]⊆ R} and causal dependency and consistency induced by E. We obtain pullbacks as a special case. Let f ∶ A → C and g ∶ B → C be maps of event structures. Defining P =def A × B ↾
{p ∈ A × B ∣ fπ1(p)= gπ2(p)} we obtain a pullback square

P

zz
A	B

C

in the category of event structures. When f and g are total the same construction gives the pullback in the category of event structures with total maps.
Some technology is needed to construct and analyse cleanly products, synchro- nized compositions and pullbacks (for instance, that of stable families [21]). Here it will suffice to have the following lemma giving a characterisation of finite con- figurations of pullbacks of total maps of event structures. (Its proof follows fairly directly from the construction of pullbacks in event structures from pullbacks in stable families [21].)
Lemma 2.1 Let P, π1, π2 form a pullback of total maps f ∶ A → C and g ∶ B → C in the category of event structures. Finite conﬁgurations of P correspond to the composite bijections θ ∶ x ≅ fx = gy ≅ y between conﬁgurations x ∈ C(A) and y ∈ C(B)
s.t. fx = gy for which the transitive relation generated on θ by taking (a, b)≤ (a′, b′) if a ≤A a′ or b ≤B b′ is a partial order; the correspondence taking z ∈ C(P ) to the composite bijection π1z ≅ f π1z = gπ2z ≅ π2z respects inclusion.

Projection
Let (E, ≤, Con) be an event structure. Let V ⊆ E be a subset of ‘visible’ events. Define the projection of E on V , to be E↓V =def (V, ≤V , ConV ), where v ≤V v′ iff v ≤ v′ & v, v′ ∈ V and X ∈ ConV iff X ∈ Con & X ⊆ V . A partial map f ∶ E → E′ of event structures factors into a composition of a partial and total map E → E ↓ V → E′ where: V =def {e ∈ E ∣ f (e) is defined} is the domain of definition of f ; the partial map E → E ↓ V acts as identity on V and is undefined otherwise; and the total map E ↓ V → E′ acts as f .

Preﬁxes and sums
The category of event structures has coproducts, a form of nondeterministic sum; a coproduct ∑i∈I Ei is obtained as the disjoint juxtaposition of an indexed collection of event structures, making events in distinct components inconsistent with each other. In practice, components of a sum are often prefixed by an event. The prefix of an event structure A, written ●.A, comprises the event structure in which all the events of A are made to causally depend on an event ●.

Probabilistic event structures
A probabilistic event structure comprises an event structure (E, ≤, Con) with a continuous valuation on its Scott open sets of configurations.Recall a continuous valuation is a function w from the Scott-open subsets of C∞(E) to [0, 1] which is
(normalized) w(C∞(E)) = 1;	(strict) w(∅) = 0;
(monotone) U ⊆ V =⇒ w(U )≤ w(V );
(modular) w(U ∪ V )+ w(U ∩ V )= w(U )+ w(V ); and
(continuous) w(⋃i∈I Ui)= supi∈Iw(Ui) for directed unions ⋃i∈I Ui.
The idea: w(U ) is the probability of a result in open set U . Continuous val- uations traditionally play the role of elements in probabilistic powerdomains [8]. Continuous valuations are determined by their restrictions to basic open sets x̂ =def {y ∈ C∞(E) ∣ x ⊆ y}, for x a finite configuration. This leads to an equivalent, more workable definition that we explain now. The description of a probabilistic event structure here extends the definitions mentioned in [17]. 2

General intervals and drop functions
Throughout this section assume E is an event structure and v ∶ C(E)→ R. Extend C(E) to a lattice C(E)⊺ by adjoining an extra top element ⊺. Write its order as x ⊑ y and its finite join operations as x ∨ y and ⋁i∈I xi. Extend v to v⊺ ∶ C(E)⊺ → R by taking v⊺(⊺) = 0.
We are concerned with drops in value across general intervals [y; x1, ⋯, xn], where y, x1, ⋯, xn ∈ C(E)⊺ with y ⊑ x1, ⋯, xn in C(E)⊺. The interval is thought of as specifying the set of configurations ŷ∖ (x̂1 ∪⋯∪ x̂n), viz. those configurations above or equal to y and not above or equal to any x1, ⋯, xn. As such the intervals form a basis of the Lawson topology on C∞(E)⊺.
Define the drop functions d(n)[y; x1, ⋯, xn] ∈ R for y, x1, ⋯, xn ∈ C(E)⊺ with
y ⊑ x1, ⋯, xn in C(E)⊺, by induction, taking
d(0)[y; ] =def v⊺(y) and
d(n)[y; x1, ⋯, xn] =def d(n−1)[y; x1, ⋯, xn−1]− d(n−1)[xn; x1 ∨ xn, ⋯, xn−1 ∨ xn] ,
v	v	v
for n > 0.
The following proposition shows how drop functions assign to general intervals [y; x1, ⋯, xn] the value of being in ŷ minus the value of being in x̂1 ∪⋯∪ x̂n, and that the latter is calculated using the inclusion-exclusion principle for sets; notice that an overlap ⋂i∈I x̂i equals ⋁i∈I xi, where ∅≠ I ⊆ {1, ⋯, n}.
Proposition 3.1 Let n ∈ ω. For y, x1, ⋯, xn ∈ C(E)⊺ with y ⊑ x1, ⋯, xn,
d(n)[y; x1, ⋯, xn]= v(y)−	∑	(−1)∣I∣+1v(⋁ xi) .

∅≠I⊆{1,⋯,n}
i∈I



2 Full proofs concerning probabilistic event structures, and the detailed properties of ‘drop functions’ on which they rely, in Sections 3.1 and 3.2, can be found in [21,23].

For y, x1, ⋯, xn ∈ C(E) with y ⊆ x1, ⋯, xn,
d(n)[y; x1, ⋯, xn]= v(y)− ∑(−1)∣I∣+1v(⋃ xi) ,
I	i∈I
where the index I ranges over sets satisfying ∅≠ I ⊆ {1, ⋯, n} s.t. {xi ∣ i ∈ I}↑.
It will be important that drops across general intervals can be reduced to sums of drops across intervals based on coverings, as explained next.
Lemma 3.2 Let y ⊆ x1, ⋯, xn in C(E). Then, d(n)[y; x1, ⋯, xn] is expressible as a sum of terms d(k)[u; w1, ⋯, wk] where y ⊆ u−⊂wi in C(E) and wi ⊆ x1 ∪⋯∪ xn, for all i with 1 ≤ i ≤ k. (x1 ∪⋯∪ xn need not be in C(E).)
Probabilistic event structures
A probabilistic event structure is an event structure associated with a [0, 1]- valuation on configurations such that no general interval has a negative drop.
Definition 3.3 Let E be an event structure. A conﬁguration-valuation on E is function v ∶ C(E)→ [0, 1] such that v(∅) = 1 and which satisfies the drop condition
d(n)[y; x1, ⋯, xn]≥ 0
for all n ≥ 1 and y, x1, ⋯, xn ∈ C(E) with y ⊆ x1, ⋯, xn. A probabilistic event structure comprises an event structure E together with a configuration-valuation v ∶ C(E)→ [0, 1]. 3
By Lemma 3.2, in showing we have a probabilistic event structure it suf- fices to verify the “drop condition” only for general intervals [y; x1, ⋯, xn] where y−⊂x1, ⋯, xn.
Theorem 3.4 A conﬁguration-valuation v on an event structure E extends uniquely to a continuous valuation wv on the open sets of C∞(E) (so v(x)= wv(x̂), for all x ∈ C(E)). Conversely, a continuous valuation on the open sets of C∞(E) restricts to a conﬁguration-valuation on E.
The above theorem also holds (with the same proof) for Scott domains. Now, by [11], Corollary 4.3:
Theorem 3.5 For a conﬁguration-valuation v on E there is a unique probability measure μv on the Borel subsets of C∞(E) extending wv.
In particular, singleton sets of finite configurations are Borel sets for which there is a simple formula expressing their probability:

3 Samy Abbes has pointed out that the “drop condition” appears in early work of the Russian mathemati- cian V.A.Rohlin [16](as relation (6) of Section 3, p.7), and Klaus Keimel that functions satisfying the “drop condition” are called “totally convex” or “completely monotone” in the literature [5]. The rediscovery of the “drop condition” and its reuse in the context of event structures was motivated by Lemma 3.2, tying it to occurrences of events.

Proposition 3.6 Let E, v be a probabilistic event structure. For any ﬁnite conﬁg- uration y ∈ C(E), the singleton set {y} is a Borel subset with probability measure
μv({y}) = inf{d(n)[y; x1, ⋯, xn] ∣ n ∈ ω & y ⊊ x1, ⋯, xn} .

Proof. Let y  ∈	C(E).	Then {y}  =  ŷ ∖ Uy  is clearly Borel as Uy  =def
{x ∈ C∞(E) ∣ y ⊊ x} is open. Hence μv({y}) = v(y)− μv(Uy) where
μv(Uy) =sup{μv(x̂1 ∪ ⋯x̂n) ∣ y ⊊ x1, ⋯, xn}
=sup{	∑	(−1)∣I∣+1v(⋁ xi) ∣ y ⊊ x1, ⋯, xn} ,

∅≠I⊆{1,⋯,n}
i∈I


because Uy is the directed union of {x̂1 ∪ ⋯x̂n ∣ y ⊊ x1, ⋯, xn}, from which the result follows.	◻
In a probabilistic event structure E, v, when y a finite configuration of E has v(y) > 0 and μv({y}) = 0 we can understand y as being a transient configuration on the way to a final result.
Example 3.7 Consider the event structure comprising two concurrent events a and
b. It has configurations and configuration valuation v as shown:



1/2 {a}
¸˛{b}  1/4



∅	1
The probability μv({{a, b}}) of ending at the configuration {a, b} is 1/4; that of terminating at {a} the drop 1/2 − 1/4 = 1/4; that of terminating at {b} the drop 1/4−1/4 = 0 showing that {b} is only a transient configuration; while the probability of terminating at ∅ is the drop 1 − 1/2 − 1/4 + 1/4 = 1/2.	◻
Remark. In the definition of probabilistic event structures there are two different ways to say, for example, that events e1 and e2 do not occur together at a finite
configuration y where y−—e1⊂ x and y−—e2⊂ x : either through {e ,e }∉ Con; or via the
configuration-valuation v through v(x1 ∪x2)= 0. However, this seeming redundancy is exploited later in probabilistic strategies and quantum event structures, when we mix probability with nondeterminism and shall make use of both consistency and the valuation.

Probabilistic strategies
We show how concurrent strategies can be extended with probabilities, first review- ing the needed results from [15].

Strategies
Event structures with polarity
Both games and strategies in a game are represented in terms of event structures with polarity, which comprise (E, pol ) where E is an event structure with a polarity function pol ∶ E → {+, −} ascribing a polarity + (Player) or − (Opponent) to its events. The events correspond to (occurrences of) moves. Maps of event structures with polarity are maps of event structures which preserve polarities.
The dual, E⊥, of an event structure with polarity E comprises the same under- lying event structure E but with a reversal of polarities. Let A and B be event structures with polarity. The operation A  B, of simple parallel composition, juxta- poses disjoint copies of A and B, maintaining their causal dependency and specifying a finite subset of events as consistent if it restricts to consistent subsets of A and
B. Polarities are unchanged. The empty game ∅ is the unit of .

Pre-strategies
Let A be an event structure with polarity, thought of as a game; its events stand for the possible occurrences of moves of Player and Opponent and its causal dependency and consistency relations the constraints imposed by the game. A pre-strategy in A represents a nondeterministic play of the game and is defined to be a total map σ ∶ S → A of event structures with polarity.
A map between pre-strategies, from σ ∶ S → A and τ ∶ T → A, is a map f ∶ S → T such that σ = τf . Accordingly, σ ≅ τ when there is an isomorphism θ ∶ S ≅ T such that σ = τθ.
Let A and B be event structures with polarity. A pre-strategy from A to B is a pre-strategy in A⊥ B. Write σ ∶ A + B  ¸to express that σ is a pre-strategy from A to B. Note that a pre-strategy σ in a game A, a total map σ ∶ S → A, coincides with a pre-strategy from the empty game ∅ to the game A, i.e. σ ∶ ∅ + A .¸
Strategies are defined to be those pre-strategies for which copy-cat behaves as identity w.r.t composition, as we now explain.

Composing pre-strategies
We can present the composition of pre-strategies via pullbacks. Given two pre- strategies σ ∶ S → A⊥ B and τ ∶ T → B⊥ C, ignoring polarities we can consider the maps on the underlying event structures, viz. σ ∶ S → A  B and τ ∶ T → B  C. Viewed this way we can form the pullback in the category of event structures as shown



S C
P
z 
A T


σ idC	z , idA τ
A B C
J 
A C, 

where the map A  B  C → A  C is undefined on B and acts as identity on A and
C. The partial map from P to A C given by the diagram above (either way round the pullback square) factors as the composition of the partial map P → P ↓ V , where V is the set of events of P at which the map P → A C is defined, and a total map P ↓ V → A C. The resulting total map gives us the composition τ ⊙σ ∶ T ⊙S =def P ↓ V → A⊥ C once we reinstate polarities forced by those of A and C.
In T ⊙S we have hidden the synchronization events over B due to the instanti- ation of Opponent moves of T in B by Player moves of S, and vice versa. Later we shall also be concerned with the event structure P , composition before hiding, which we shall denote more descriptively by T ⊛ S.
Concurrent copy-cat
The copy-cat strategy from A to A is an instance of a pre-strategy, and a total map γA ∶ CCA → A⊥ A. It is based on the idea that Player moves, of +ve polarity, always copy previous corresponding moves of Opponent, of −ve polarity. For c ∈ A⊥  A we use c to mean the corresponding copy of c, of opposite polarity, in the alternative component. Define CCA to comprise the event structure with polarity
A⊥  A together with the extra causal dependencies generated by c ≤CC	c for all
events c with pol	 ( )=+ 
A
w.r.t. ≤CC	is consistent in A⊥ A. The copy-cat pre-strategy γA ∶ A + A  ¸is defined
A
A	CCA	A⊥ A where γA is the identity on the common set of
events.
Strategies
The main result of [15] is that two conditions on pre-strategies, receptivity and innocence, are necessary and sufficient for copy-cat to behave as identity w.r.t. the composition of pre-strategies. Receptivity ensures an openness to all possible moves of Opponent. Innocence restricts the behaviour of Player; Player may only introduce new relations of immediate causality of the form ⊖ d ⊕ beyond those already
imposed by the game. A pre-strategy σ is receptive iff σx−—a⊂ & pol (a) = − ⇒ 
A
∃!s ∈ S. x−—s⊂ & σ(s) = a. It is innocent iff s d s′ & (pol (s) = + or pol (s′) = −) implies σ(s) d σ(s′). The main result of [15] is that γB⊙σ⊙γA ≅ σ iff σ is receptive and innocent. Copy-cats γA ∶ A + A  ¸are receptive and innocent.
A strategy is a pre-strategy which is receptive and innocent. We obtain a bicate- gory in which the objects are event structures with polarity—the games, the arrows from A to B are strategies σ ∶ A + B  ¸and 2-cells are total maps of pre-strategies with vertical composition the usual composition of such maps. Horizontal composition is given by the composition of strategies ⊙. For future reference, recall from [15] that a strategy σ ∶ S → A satisfies strong receptivity: whenever σx ⊆− y in C(A) there is a unique x′ ∈ C(S) so that x ⊆− x′ & σx′ = y. 
An event structure with polarity S is deterministic iff
∀X ⊆fin S. Neg [X]∈ ConS =⇒ X ∈ ConS ,

where Neg [X] =def {s′ ∈ S ∣ pol (s′)=− & ∃s ∈ X. s′ ≤ s}. In other words, S is deter- ministic iff any down-closed set of moves is consistent when its subset of Opponent moves is consistent. Say a strategy σ ∶ S → A is deterministic if S is deterministic. Copy-cat strategies γA are deterministic iff the game A is

race-free: for all x ∈ C(A) such that x−—a⊂
+, we have x ∪ {a, a′}∈ C(A).
and x
−—a′⊂
with pol
(a) =− 
and pol
(a′)= 

We obtain a sub-bicategory of deterministic strategies between race-free games—in fact equivalent to an order-enriched category [15,20].
Strategies inherit a duality from pre-strategies. A pre-strategy σ ∶ A + B  ¸corre- sponds to a dual pre-strategy σ⊥ ∶ B⊥ + A  ⊥¸, arising from the correspondence between pre-strategies σ ∶ S → A⊥  B and σ⊥ ∶ S → (B⊥)⊥  A⊥.
A more expansive treatment of strategies is to be found in [21].
Probabilistic strategies
Without information about the stochastic rates of Player and Opponent we cannot hope to ascribe probabilities to outcomes of play in the presence of races, i.e. im- mediate conficts between moves of opposite polarities. Our results on probabilistic strategies depend on restricting to games which are race-free.
It will be convenient to define a probabilistic event structure in which some events are distinguished as Opponent events (where the other events may be Player events or “neutral” events due to synchronizations between Player and Opponent moves). Events which are not Opponent events we shall call p-events. For config- urations x, y we shall write x ⊆p y if x ⊆ y and y ∖ x contains no Opponent events; we write x−⊂py when x−⊂y and x ⊆p y; we similarly write e.g. x ⊆− y, respectively x ⊆+ y, if x ⊆ y and y ∖x comprises solely Opponent, respectively Player, events. We can now extend the notion of configuration-valuation to the situation where events carry polarities.
Definition 4.1 Let E be an event structure in which a specified subset of events are Opponent events. A conﬁguration-valuation on E is a function v ∶ C(E)→ [0, 1] for which v(∅) = 1,
x ⊆− y =⇒ v(x)= v(y)	(1)
for all x, y ∈ C(E), and satisfies the “drop condition”
d(n)[y; x1, ⋯, xn]≥ 0	(2)
for all n ∈ ω and y, x1, ⋯, xn ∈ C(E) with y ⊆p x1, ⋯, xn.
A probabilistic event structure with polarity comprises E an event structure with polarity together with a configuration-valuation v ∶ C(E)→ [0, 1].
As earlier, by Lemma 3.2, it suffices to verify the “drop condition” for general intervals [y; x1, ⋯, xn] where y−⊂px1, ⋯, xn.
Definition 4.2 Let A be a race-free event structure with polarity. A probabilistic strategy v, σ in A comprises S, v, a probabilistic event structure with polarity, and

a strategy σ ∶ S → A. [It follows that S will also be race-free.]
Let A and B be a race-free event structures with polarity. A probabilistic strategy from A to B is a probabilistic strategy in A⊥  B.
We extend the usual composition of strategies to probabilistic strategies. Assume probabilistic strategies σ ∶ S → A⊥ B, with configuration-valuation vS ∶ C(S) → [0, 1], and τ ∶ T → B⊥ C with configuration-valuation vT ∶ C(T ) → [0, 1]. We first define their composition before hiding, as the probabilistic event structure T ⊛ S, v, tentatively taking v ∶C(T ⊛S)→ [0, 1] to be v(x)= vS(π1x)×vT (π2x) for x ∈C(T ⊛S). We next present a key lemma in showing that v is a configuration-valuation. The lemma reduces fulfilling the drop condition for v to fulfilling the drop conditions for vS and vT .
Lemma 4.3 Let v ∶ C(T ⊛S)→ [0, 1] be deﬁned as above. Let y, x1, ⋯, xn ∈ C(T ⊛S) with y−⊂px1, ⋯, xn. Assume that π1y−⊂+π1xi when 1 ≤ i ≤ m and π2y−⊂+π2xi when m + 1 ≤ i ≤ n. Then in C(T ⊛ S),
d(n)[y; x1, ⋯, xn]= d(m)[π1y; π1x1, ⋯, π1xm]× d(n−m)[π2y; π2xm+1, ⋯, π2xn] .
v	vS	vT

Proof. Under the assumptions of the lemma, by Proposition 3.1,
d(m)[π1y; π1x1, ⋯, π1xm]= vS(π1y)− ∑(−1)∣I1∣+1vS( ⋃ π1xi) ,
I1	i∈I1
where I1 ranges over sets satisfying ∅≠ I1 ⊆ {1, ⋯, m} s.t. {π1xi ∣ i ∈ I1}↑. Similarly,
d(n−m)[π2y; π2xm+1, ⋯, π2xn]= vT (π2y)− ∑(−1)∣I2∣+1vT ( ⋃ π2xi) ,
I2	i∈I2
where I2 ranges over sets satisfying ∅≠ I2 ⊆ {m + 1, ⋯, n} s.t. {π2xi ∣ i ∈ I2}↑. Using Lemma 2.1, by the strong receptivity of τ , when ∅≠ I1 ⊆ {1, ⋯, m},
{π1xi ∣ i ∈ I1}↑ in C(S) iff {xi ∣ i ∈ I1}↑ in C(T ⊛ S)
and, similarly by strong receptivity of σ, when ∅≠ I2 ⊆ {m + 1, ⋯, n},
{π2xi ∣ i ∈ I2}↑ in C(T ) iff {xi ∣ i ∈ I2}↑ in C(T ⊛ S) .


Hence

⋃ π1xi = π1 ⋃ xi and	⋃ π2xi = π2 ⋃ xi .

i∈I1
i∈I1
i∈I2
i∈I2

Making these rewrites and taking the product
d(m)[π1y; π1x1, ⋯, π1xm]× d(n−m)[π2y; π2xm+1, ⋯, π2xn] ,

we obtain

vS(π1y)× vT (π2y) − ∑(−1)∣I2∣+1 vS(π1y)× vT (π2 ⋃ xi)

I2	i∈I2
– ∑(−1)∣I1∣+1 vS(π1 ⋃ xi)× vT (π2y)
I1	i∈I1
+ ∑ (−1)∣I1∣+∣I2∣ vS(π1 ⋃ xi)× vT (π2 ⋃ xi) .

I1,I2
i∈I1
i∈I2



But at each index I2,
vS(π1y)= vS(π1 ⋃ xi)
i∈I2

as π1y ⊆− π1 ⋃i∈I
xi. Similarly, at each index I1,
vT (π2y)= vT (π2 ⋃ xi) .
i∈I1

Hence the product becomes
vS(π1y)× vT (π2y) −∑(−1)∣I2∣+1 vS(π1 ⋃ xi)× vT (π2 ⋃ xi)
I2	i∈I2	i∈I2
– ∑(−1)∣I1∣+1 vS(π1 ⋃ xi)× vT (π2 ⋃ xi)
I1	i∈I1	i∈I1
+ ∑ (−1)∣I1∣+∣I2∣ vS(π1 ⋃ xi)× vT (π2 ⋃ xi) .

I1,I2
i∈I1
i∈I2

To simplify this further, we observe that
{xi ∣ i ∈ I1}↑ & {xi ∣ i ∈ I2}↑ ⇐⇒ {xi ∣ i ∈ I1 ∪ I2}↑ .
The “⇐” direction is clear. We show “⇒.” Assume {xi ∣ i ∈ I1}↑ and {xi ∣ i ∈ I2}↑. We obtain {π1xi ∣ i ∈ I1}↑ and {π1xi ∣ i ∈ I2}↑ as the projection map π1 preserves consistency. Hence ⋃i∈I1 π1xi and ⋃i∈I2 π1xi are configurations of S. Furthermore,
by assumption,
π1y ⊆+ ⋃ π1xi and π1y ⊆− ⋃ π1xi .
i∈I1	i∈I2
As S, a strategy over the race-free game A⊥  B, is automatically race-free, we obtain

⋃
i∈I1∪I2
π1xi ∈ C(S) .

Similarly, because T is race-free, we obtain

⋃
i∈I1∪I2
π2xi ∈ C(T ) .

Using Lemma 2.1, together these entail

⋃
i∈I1∪I2
xi ∈ C(T ⊛ S) ,

i.e. {xi ∣ i ∈ I1 ∪ I2}↑, as required. Notice too that

π1 ⋃ xi ⊆− π1	⋃
xi and π2 ⋃ xi ⊆− π2	⋃
xi ,

i∈I1
i∈I1∪I2
i∈I2
i∈I1∪I2



which ensure
vS(π1 ⋃ xi)= vS(π1	⋃


xi) and vT (π2 ⋃ xi)= vT (π2	⋃


xi) ,

i∈I1
i∈I1∪I2
i∈I2
i∈I1∪I2



so that

v( ⋃

xi) = vS(π1 ⋃ xi)× vT (π2 ⋃ xi) .

i∈I1∪I2
i∈I1
i∈I2

We can now further simplify the product to
v(y) −∑(−1)∣I2∣+1 v( ⋃ xi)
I2	i∈I2
– ∑(−1)∣I1∣+1 v( ⋃ xi)
I1	i∈I1
+ ∑ (−1)∣I1∣+∣I2∣ v( ⋃  xi) .
I1,I2	i∈I1∪I2
Noting that any subset I for which ∅ ≠ I ⊆ {1, ⋯, n} either lies entirely within
{1, ⋯, m}, entirely within {m + 1, ⋯, n}, or properly intersects both, we have finally reduced the product to
v(y)− ∑(−1)∣I∣+1v(⋃ xi) ,
I	I
with indices those I which satisfy ∅≠ I ⊆ {1, ⋯, n} s.t. {xi ∣ i ∈ I}↑, i.e. the product reduces to d(n)[y; x1⋯, xn] as required.	◻
Corollary 4.4 The assignment v(x) = vS(π1x)× vT (π2x) to x ∈ C(T ⊛ S) yields a conﬁguration-valuation on T ⊛ S, so a probabilistic event structure T ⊛ S, v.
Proof. Clearly,
v(∅) = vS(π1∅) × vT (π2∅) = 1 × 1 = 1 .
Assuming x−⊂−y in C(T ⊛ S), then either (i) π1x−⊂−π1y and π2x = π2y or (ii) π2x−⊂−π2y and π1x = π1y. In either case, vS(π1x)= vS(π1y) and vT (π2x)= vT (π2y). Combined these two facts yield v(x) = v(y). As x ⊆− y is obtained as the reflexive transitive closure of −⊂− it too entails v(x)= v(y), requirement (1) of Definition 4.1. By Lemma 3.2 we need only verify requirement (2), the ‘drop condition,’ for p- covering intervals, which via Proposition 3.1 we can always permute into the form covered by Lemma 4.3—any p-event of C(T ⊛ S) has a +ve component on one and only one side.	◻
We can now complete the definition of the composition of probabilistic strategies. Note that for x ∈ C(T ⊙S) its down-closure within T ⊛ S forms the configuration [x]∈ C(T ⊛ S).

Lemma 4.5 Let A, B and C be race-free event structure with polarity. Let σ ∶ S → A⊥ B, with conﬁguration-valuation vS ∶ C(S) → [0, 1], and τ ∶ T → B⊥ C with conﬁguration-valuation vT ∶ C(T )→ [0, 1] be probabilistic strategies. Assigning vS(π1[x]) × vT (π2[x]) to x ∈ C(T ⊙S) yields a conﬁguration-valuation which with τ ⊙σ ∶ T ⊙S → A⊥  C forms a probabilistic strategy from A to C.
Proof. We use that v(z) =def vSπ1(z)×vT π2(z), for z ∈ C(T ⊛S), is a configuration- valuation on T ⊛ S. For x ∈ C(T ⊙S),
w(x) =def vSπ1[x]× vT π2[x]= v([x]) .


Consequently,

w(∅) = v([∅]) = v(∅) = 1 .

The function w inherits requirement (1) to be a configuration-valuation from v. Similarly, w inherits requirement (2) from v, as w.r.t. w,
d(n)[y; x1, ⋯, xn]= w(y)− ∑(−1)∣I∣+1w(⋃ xi)
I	i∈I
= v(⋃ y)− ∑(−1)∣I∣+1v([⋃ xi])
I	i∈I
= v(⋃ y)− ∑(−1)∣I∣+1v(⋃[xi])

I
≥ 0 ,
i∈I

whenever y ⊆p x1, ⋯, xn in C(T ⊙S). Above, the index I ranges over sets satisfying
∅≠ I ⊆ {1, ⋯, n} s.t. {xi ∣ i ∈ I}↑.	◻
The assumption that games are race-free is needed for Corollary 4.4 and Lem- mas 4.3, 4.5. Recall that race-freedom of a game A ensures CCA is determinis- tic [20,21] and hence its copy-cat strategy is easily turned into a probabilistic strat- egy, as is any deterministic strategy:
Lemma 4.6 Let S be a deterministic event structure with polarity. Deﬁning vS ∶ C(S) → [0, 1] to satisfy vS(x) = 1 for all x ∈ C(S), we obtain a probabilistic event structure with polarity.
Proof. Clearly, vS(∅) = 1 and
x ⊆− y =⇒ vS(x)= vS(y)= 1 for all x, y ∈ C(S). As S is deterministic,
y ⊆+ x & y ⊆+ x′ =⇒ x ∪ x′ ∈ C(S) ,
for all y, x, x′ ∈ C(S). For the remaining requirement, a simple induction shows that for all n ≥ 1,
d(n)[y; x1, ⋯, xn]= 0

whenever y ⊆+ x1, ⋯, xn. The basis, when n = 1, is clear as
d(1)[y; x]= vS(y)− vS(x)= 1 − 1 = 0
when y ⊆+ x. For the induction step, assuming y ⊆+ x1, ⋯, xn with n > 1,
d(n)[y; x1, ⋯, xn]= d(n−1)[y; x1, ⋯, xn−1]− d(n−1)[xn; x1 ∪ xn, ⋯, xn−1 ∪ xn]= 0 − 0 = 0 ,
from the induction hypothesis.	◻
Corollary 4.7 Let A be a race-free game. The copy-cat strategy on A comprising
γA ∶ CCA → A⊥  A with conﬁguration-valuation vCC	∶ C(CCA) → [0, 1] satisfying
v	( )=	∈ C(	)
A
Combining the results of this section:
Theorem 4.8 Race-free games with probabilistic strategies, with composition and copy-cat deﬁned as in Lemma 4.5 and Corollary 4.7, inherit the structure of a bicategory from that of games with strategies.
A language of probabilistic strategies
As an indication of the expressivity of probabilistic strategies we sketch how they can straightforwardly interpret a simple language of probabilistic processes, reminiscent of a higher-order CCS. For this section only, write σ ∶ A to mean σ is a probabilistic strategy in game A. Probabilistic strategies are closed under the following operations.
Composition σ⊙τ ∶ A  C, if σ ∶ A  B and τ ∶ B⊥  C. Hiding is automatic in a synchronized composition directly based on the composition of strategies.
Simple parallel composition σ  τ ∶ A  B, if σ ∶ A and τ ∶ B. Note that simple parallel composition can be regarded as a special case of synchronized composition: via the identification of σ τ with τ ⊙σ, taking σ ∶ A⊥ + ∅  ¸and τ ∶ ∅ + B  ,¸the operation σ  τ yields a probabilistic strategy. Supposing σ ∶ S → A and τ ∶ T → B and S and T have configuration valuations vS and vT , respectively, then the configuration valuation v for S  T satisfies v(x)= vS(x1)× vT (x2), for x ∈ C(S  T ).
Input preﬁxing ∑i∈I ⊖.σi ∶ ∑i∈I ⊖.Ai, if σi ∶ Ai, for i ∈ I, where I is countable. This prefixes both strategies and games with an initial Opponent move and then forms their sum (as an event structure).

Output preﬁxing ∑i∈I pi ⊕.σi ∶ ∑i∈I ⊕.Ai, if σi ∶ Ai, for i ∈ I, where I is countable, and pi ∈ [0, 1] for i ∈ I with ∑i∈I pi ≤ 1. This prefixes strategies with initial Player moves weighted by probabilities. If ∑i∈I pi < 1, there is non-zero probability of terminating without any move. By design (∑i∈I ⊕.Ai)⊥ = ∑i∈I ⊖.A⊥.

General probabilistic sum More generally we can define Ⓒi∈I piσi ∶ A, for σi ∶ A and
I countable with sub-probability distribution pi,i ∈ I. The operation makes the
+-events of different components conflict and re-weights the configuration-valuation on the components according to the sub-probability distribution. In order for the sum to remain receptive, the initial −ve events of the components over a common event in the game A must be identified.
Relabelling, the composition fσ ∶ B, if σ ∶ A and f ∶ A → B is itself a strategy,
i.e. total, receptive and innocent. (This generalises to certain partial maps f .)
Pullback f ∗σ ∶ A, if σ ∶ B and f ∶ A → B is a map of event structures with polarity, possibly partial, which reflects +-consistency in the sense that

y−—+⊂ x , ⋯,x 
& {fx 
∣ 1 ≤ i ≤ n}↑ =⇒ {x
∣ 1 ≤ i ≤ n}↑ .



The strategy f ∗σ is got by the pullback
S′
f ∗σ


f ′  S ¸
σ

J	J 
A	B¸. 
f
Then, the map f ′ also reflects +-consistency. This fact ensures we define a configuration-valuation vS′ on S′ by taking vS′ (x) = vS(f ′x), for x ∈ C(S′). If σ ∶ S → B is a strategy then so is f ∗σ ∶ S′ → A. Pullback along f ∶ A → B may introduce causal links and events, present in A but not in B. The pullback operation relies on both strategies and +-consistency-reflecting maps being stable under pullback, which we show at the end of this section. The pullback operation subsumes the operations of prefixing ⊖.σ and ⊕.σ and we can recover the previous prefix sums if we also have have sum types—see below.

Sum types If Ai, i ∈ I, is a countable family of games, we can form their sum, the game ∑i∈I Ai as the sum of event structures. If σ ∶ Aj, for j ∈ I, we can create the probabilistic strategy jσ ∶ ∑i∈I Ai in which we extend σ with those initial
−ve events needed to maintain receptivity. A probabilistic strategy of sum type
σ ∶ ∑i∈I Ai projects to a probabilistic strategy (σ)j ∶ Aj where j ∈ I.
Abstraction λx ∶ A.σ ∶ A ⊸ B. Because probabilistic strategies form a monoidal- closed bicategory, with tensor A  B and function space A ⊸ B =def A⊥  B, they support an (linear) λ-calculus, which in this context permits process-passing as in [14].
Recursive types and probabilistic processes can be dealt with along standard lines [18].

The types as they stand are somewhat inflexible. These limitations can be remedied by introducing monads T and new types of the form T (A), though doing this in sufficient generality would involve the introduction of symmetry to games—see Section 7.
In the pullback operation we have relied on certain maps being stable under pullback. The following two propositions make good our debt, using techniques from open maps [9].
Proposition 5.1 If σ ∶ S → B is a strategy then so is f ∗σ ∶ S′ → A.
Proof. Define an ´etale map (w.r.t. to a path category P) to be like an open map, but where the lifting is unique. It is straightforward to show that the pullback of an ´etale map is ´etale. In fact, strategies can be regarded as ´etale maps, from which the proposition follows. Within the category of event structures with polarity and partial maps, take the path subcategory P to comprise all finite elementary event structures with polarity and take a typical map f ∶ p → q in P to be a map such that:
if e dp e′ with e −ve and e′ +ve and both f (e) and f (e′) defined, then f (e) dq f (e′); and
all events in q not in the image fp are −ve.
It can be checked that w.r.t. this choice of P the ´etale maps are precisely those maps which are strategies.	◻
Proposition 5.2 If f ∶ A → B reflects +-consistency, then so does f ′ ∶ S′ → S.
Proof. As +-consistency-reflecting maps are special kinds of open maps, known to be stable under pullback. An appropriate path category comprises: all finite event structures with polarity for which there is a subset M of ≤-maximal +-events
s.t. a subset X is consistent iff X ∩ M contains at most one event of M —all finite elementary event structures with polarity are included as M , the chosen subset of
≤-maximal +-events, may be empty; maps in the path category are rigid maps of event structures with polarity whose underlying functions are bijective on events.◻


Quantum strategies
A more novel application is to a definition of quantum event structures and strate- gies. Throughout let H be a separable Hilbert space over the complex numbers. For operators A, B on H we write [A, B] =def AB − BA.
Quantum event structures
Definition 6.1 A quantum event structure (over H) comprises an event structure
(E, ≤, Con) together with an assignment Qe of projection or unitary operators on

H to events e ∈ E such that for all e1, e2 ∈ E,
e1 co e2 =⇒ [Qe1 , Qe2 ]= 0 .
Given a finite configuration, x ∈ C(E), define the operator Ax to be the compo- sition Qen Qen−1 ⋯Qe2 Qe1 for some covering chain
∅−—e1⊂ x −—e2⊂ x ⋯−—en⊂ x = x
in C(E). This is well-defined as for any two covering chains up to x the sequences of events are Mazurkiewicz trace equivalent, i.e. obtainable, one from the other, by successively interchanging concurrent events. In particular A∅ is the identity operator on H.
An initial state is given by a density operator ρ on H.
We regard w ∈ C∞(E) as a partial quantum experiment—it is ‘partial’ in the sense that it might extend to w′ ⊇ w in C∞(E). An experiment w specifies which unitary operators (events of preparation) and projection operators (elementary posi- tive tests) to apply and in which order. The order being partial permits commuting operators to be applied concurrently, independently of each other, perhaps in a distributed fashion.
Consider a quantum event structure with initial state ρ. While it does not make sense to attribute a probability distribution globally, over the whole space of configurations C∞(E), the next theorem says that with respect to any experiment w there is a probability distribution qw over its possible outcomes. (Below, by an unnormalized density operator we mean a positive, self-adjoint operator with trace less than or equal to one.)
Theorem 6.2 Let E, Q be a quantum event structure with initial state ρ. Each conﬁguration x ∈ C(E) is associated with an unnormalized density operator ρx =def
AxρA† and a value in [0, 1] given by v(x) =def Tr(ρx) = Tr(A† Axρ). For any w ∈
C∞(E), the function v restricts to a conﬁguration-valuation vw on the elementary event structure w (viz. the event structure with events w, and causal dependency and (trivial) consistency inherited from E); hence vw extends to a probability measure qw on Fw =def {x ∈ C∞(E) ∣ x ⊆ w}.
Proof. We show v restricts to a configuration-valuation on Fw. As A∅ = idH,
v(∅) = Tr(ρ) = 1. By Lemma 3.2, we need only to show d(n)[y; x1, ⋯, xn] ≥ 0 when
y−—e1⊂ x , ⋯, y−—en⊂ x in F .
w
First, observe that if for some event ei the operator Qei is unitary, then d(n)[y; x1, ⋯, xn]= 0. W.l.o.g. suppose en is assigned the unitary operator U . Then, Axn = U Ay so
v(xn)= Tr(A† Ax ρ)= Tr(A† U †UAyρ)= Tr(A† Ayρ)= v(y) .

Let ∅ ≠ I ⊆ {1, ⋯, n}. Then, either ⋃i∈I xi = ⋃i∈I xi ∪ xn or ⋃i∈I xi−—en⊂ ⋃i∈I xi ∪ xn.

In the either case—in the latter case by an argument similar to that above,

v(⋃ xi)= v(⋃ xi ∪ xn) .
i∈I	i∈I

Consequently,

d(n)[y; x1, ⋯, xn] =d(n−1)[y; x1, ⋯, xn−1]− d(n−1)[xn; x1 ∪ xn, ⋯, xn−1 ∪ xn]
=v(y)− ∑(−1)∣I∣+1v(⋃ xi)− v(xn)+ ∑(−1)∣I∣+1v(⋃ xi ∪ xn)

I	i∈I
= 0
I	i∈I



—above index I is understood to range over sets for which ∅≠ I ⊆ {1, ⋯, n}.
It remains to consider the case where all events ei are assigned projection opera- tors Pei . As x1, ⋯, xn ⊆ w we must have that all the projection operators Pe1 , ⋯, Pen commute.
As [Pei , Pej ] = 0, for 1 ≤ i, j ≤ n, we can assume an orthonormal basis which extends the sub-basis of eigenvectors of all the projection operators Pei , for 1 ≤ i ≤ n. Let y ⊆ x ⊆ ⋃1≤i≤n xi. Define Px to be the projection operator got as the composition of all the projection operators Pe for e ∈ x ∖ y—this is a projection operator, well- defined irrespective of the order of composition as the relevant projection operators commute. Define Bx to be the set of those basis vectors fixed by the projection operator Px. In particular, Py is the identity operator and By the set of all basis vectors. When x, x′ ∈ C(E) with y ⊆ x ⊆ ⋃1≤i≤n xi and y ⊆ x′ ⊆ ⋃1≤i≤n xi,

Bx∪x′ = Bx ∩ Bx′ .


Also,

Px∣ψ⟩= ∑ ⟨i∣ψ⟩ ∣i⟩ ,
i∈Bx

so
⟨ψ∣Px∣ψ⟩= ∑ ⟨i∣ψ⟩⟨ψ∣i⟩= ∑ ∣⟨i∣ψ⟩∣2 ,



for all ∣ψ⟩∈ H.
i∈Bx
i∈Bx

Assume ρ = ∑k pk∣ψk⟩⟨ψk∣, where the ψk are normalised and all the pk are positive

with sum ∑k pk = 1. For x with y ⊆ x ⊆ ⋃1≤i≤n xi,
v(x) = Tr(A† Axρ)
= Tr(A† P †PxAyρ)
= Tr(A† PxAy ∑ pk∣ψk⟩⟨ψk∣)
k
= ∑ pk Tr(A† PxAy∣ψk⟩⟨ψk∣)
k
= ∑ pk⟨Ayψk∣Px∣Ayψk⟩
k
= ∑ ∑ pk∣⟨i∣Ayψk⟩∣2
i∈Bx k
= ∑ ri ,
i∈Bx
where we define ri =def ∑k pk∣⟨i∣Ayψk⟩∣2, necessarily a non-negative real for i ∈ Bx.
We now establish that
d(n)[y; x1, ⋯, xn]=	∑	ri ,
i∈By ∖Bx1 ∪⋯∪Bxn
for all n ∈ ω, by mathematical induction—it then follows directly that its value is non-negative.
The base case of the induction, when n = 0, follows as
d(0)[y; ]= v(y)= ∑ ri ,
i∈By
a special case of the result we have just established.
For the induction step, assume n > 0. Observe that
By ∖ Bx1 ∪⋯∪ Bxn−1 = (By ∖ Bx1 ∪⋯∪ Bxn ) ∪⋅ (Bxn ∖ Bx1∪xn ∪⋯∪ Bxn−1∪xn ) ,
where as signified the outer union is disjoint. Hence,

∑
i∈By ∖Bx1 ∪⋯∪Bxn−1
By definition,
ri =	∑
i∈By ∖Bx1 ∪⋯∪Bxn
ri +	∑
i∈Bxn ∖Bx1∪xn ∪⋯∪Bxn−1∪xn
ri ,

d(n)[y; x1, ⋯, xn] =def d(n−1)[y; x1, ⋯, xn−1]− d(n−1)[xn; x1 ∪ xn, ⋯, xn−1 ∪ xn]
—making use of the fact that we are only forming unions of compatible configura- tions. From the induction hypothesis,
d(n−1)[y; x1, ⋯, xn−1]=	∑	ri

i∈By ∖Bx1 ∪⋯∪Bxn−1
and d(n−1)[xn; x1 ∪ xn, ⋯, xn−1 ∪ xn]=	∑

ri .

i∈Bxn ∖Bx1∪xn ∪⋯∪Bxn−1∪xn

Hence

d(n)[y; x1, ⋯, xn]=	∑

ri ,

i∈By ∖Bx1 ∪⋯∪Bxn
ensuring d(n)[y; x1, ⋯, xn]≥ 0, as required.
By Theorem 3.5, the configuration-valuation vw extends to a unique probability measure on Fw.	◻
Quantum strategies
A quantum game comprises A, pol , Q,ρ where A, pol is a race-free event structure with polarity, A, Q is a quantum event structure with initial state ρ. A strategy in the quantum game comprises a probabilistic strategy in A, so a strategy σ ∶ S → A together with configuration-valuation v on S.
Given a strategy vS,σ ∶ S → A and counter-strategy vT ,τ ∶ T → A⊥ in a quantum game A, Q, ρ we obtain as their composition before hiding the probabilistic event structure T ⊛ S with configuration-valuation v(x) =def vSπ1(x) × vT π2(x) on x ∈ C(T ⊛ S)—see Corollary 4.4. The event structure T ⊛ S is obtained as a pullback— Section 4.1.3—and is associated with a map f =def σπ1 = τπ2 ∶ T ⊛ S → A. We can interpret f ∶ T ⊛ S → A as the probabilistic experiment which results from the interaction of the strategy σ and the counter-strategy τ . The event structure T ⊛ S carries a probability measure μv. The probability that the play-off of σ against τ produces a result in a Borel subset U of of C∞(A), is given by the Lebesgue integral
∫ qw(U ∩ Fw) dμvf −1(w) .
Strategies in quantum games inherit the types and operations of probabilistic strategies, though additional constructs will be needed to introduce new entangle- ment across simple parallel compositions.
Extensions
As they stand the games here are games of perfect information. In games of imperfect information some moves are masked, or inaccessible, and strategies with dependen- cies on unseen moves are ruled out. It is straightforward to extend concurrent games to games with imperfect information in way that respects the operations of the bi- category of games [22] and does not disturb the addition of probability. A fixed preorder of levels (Λ, ⪯) is pre-supposed. The levels are to be thought of as levels of access, or permission. A Λ-game comprises a game A with a level function l ∶ A → Λ such that if a ≤A a′ then l(a) ⪯ l(a′) for all a, a′ ∈ A. A probabilistic Λ-strategy in the Λ-game is a probabilistic strategy vS,σ ∶ S → A for which if s ≤S s′ then lσ(s) ⪯ lσ(s′) for all s, s′ ∈ S. One interpretation of Λ, pertinent to the treatment of quantum strategies, is as space-time with λ ⪯ λ′ meaning there is a causal curve from λ to λ′.
We can add payoff to a game A as a Borel measurable function X ∶ C∞(A)→ R. Given a probabilistic strategy vS,σ ∶ S → A and counter-strategy vT ,τ ∶ T → A⊥

we obtain their composition before hiding as their pullback T ⊛ S, π1, π2, associated with the map f =def σπ1 = τπ2 ∶ T ⊛ S → A. The event structure T ⊛ S comes equipped with a configuration-valuation v(x)= vS(π1x)× vT (π2x), for x ∈ C(T ⊛ S). The expected payoff is obtained as the Lebesgue integral

Eσ,τ (X)= ∫  X(fx) dμv(x) .

In particular, Blackwell games [12] become a special case of probabilistic Λ- games with payoff. Blackwell games are games of imperfect information for which an appropriate choice of Λ is the infinite elementary event structure:

⊕ 	 ⊕ z, ,  ⊕ z, ⋯,  ⊕ 	 ⊕ z, ⋯, 
,	,	,

⊖ 	c ⊖\zz   c ⊖\zz ⋯  ⊖ 	c ⊖\zz ⋯ 
A Blackwell game is given by A, a race-free concurrent game with payoff X, for which there is a (necessarily unique) polarity-preserving rigid map from A to Λ—this map becomes the level function. Moves in A occur in rounds comprising a choice of move for Opponent and a choice of move for Player made independently. Traditionally, in Blackwell games a strategy (for Player) is a ‘total’ Λ-strategy in such a Λ-game— strategies are restricted to those assigning total probability distributions at each round. In fact, the existing literature is most often concerned with strategies which always progress, which we can express very generally by insisting non ⊆+-maximal finite configurations of the strategy are transient—cf. Proposition 3.6:
Definition 7.1 Say a probabilistic strategy σ ∶ S → A with configuration-valuation v is total when inf{d(n)[y; x1, ⋯, xn] ∣ n ∈ ω & y ⊊+ x1, ⋯, xn} ≠ 0 implies σy is ⊆+- maximal, for all y ∈ C(S).
In the case of Blackwell games total strategies amount to those used traditionally. There are several reasons to consider symmetry in games, situations where dis- tinct plays are essentially similar to one another. Symmetry can help in the analysis of games, by for instance reducing the number of cases to consider. Symmetry can also help compensate for the overly-concrete nature of event structures in represent- ing games; many useful operations on games which are not monads or comonads
w.r.t. strategies become so up to symmetry [19,2] and this leads, for example, to richer type systems. Symmetry on an event structure can be captured through an isomorphism family which expresses when one finite configuration of the event structure is essentially the same as another [19]. It is a straightforward matter to en- sure that configuration-valuations, attributing probability, respect the isomorphism family. The addition of symmetry to games meshes well with the introduction of probability. This should enable a formal connection with the probabilistic games of Danos and Harmer [3] which are based on HO games—allowing copying, so whose relation with concurrent games requires suitable (co)monads to exist, so symmetry.

Acknowledgment
Discussion with Samy Abbes, Samson Abramsky, Nathan Bowler, Peter Hines, Ohad Kammar, Klaus Keimel, Mike Mislove and Prakash Panangaden has been helpful. Daniele Varacca deserves special thanks for our earlier work on probabilis- tic event structures. I gratefully acknowledge the ERC Advanced Grant ECSYM.

References
Abbes, S. and A. Benveniste, True-concurrency probabilistic models: Branching cells and distributed probabilities for event structures, Inf. Comput. 204 (2006), pp. 231–274.
Castellan, S., P. Clairambault and G. Winskel, Symmetry in concurrent games (2013), submitted.
Danos, V. and R. Harmer, Probabilistic game semantics, in: LICS’00 (2000).
Delbecque, Y., Game semantics for quantum data, QPL/DCM 2008, Electr. Notes Theor. Comput. Sci. (2008).
Goubault-Larrecq, J. and K. Keimel, Choquet-kendall-matheron theorems for non-hausdorff spaces, Mathematical Structures in Computer Science 21 (2011), pp. 511–561.
Grabbe, J., An introduction to quantum game theory, arXiv preprint quant-ph/0506219 (2005).
Griffiths, R. B., “Consistent quantum theory,” CUP, 2002.
Jones, C. and G. Plotkin, A probabilistic powerdomain of valuations, in: LICS ’89 (1989).
Joyal, A., M. Nielsen and G. Winskel, Bisimulation from open maps, Inf. Comput. 127 (1996), pp. 164– 185.
Katoen, J.-P., “Quantitative and Qualitative Extensions of Event Structures,” PhD Thesis, University of Twente, 1996.
M Alvarez-Manilla, N. S.-D., A Edalat, An extension result for continuous valuations, Journal of the London Mathematical Society 61 (2000), pp. 629–640.
Martin, D., The determinacy of Blackwell games, Journal of Symbolic Logic 63 (1998), pp. 1565–1581.
Milner, R., “Communication and concurrency,” PHI Series in computer science, Prentice Hall, 1989, I-XI, 1-260 pp.
Nygaard, M. and G. Winskel, Linearity in process languages, in: LICS’02 (2002).
Rideau, S. and G. Winskel, Concurrent strategies, in: LICS 2011 (2011).
Rohlin, V. A., On the fundamental ideas of measure theory, Amer. Math. Soc. Translation 1952 (1952),
p. 55.
Varacca, D., H. Vo¨lzer and G. Winskel, Probabilistic event structures and domains, Theor. Comput. Sci. 358(2-3): 173-199 (2006).
Winskel, G., Event structure semantics for CCS and related languages, in: ICALP’82, LNCS 140
(1982).
Winskel, G., Event structures with symmetry, Electr. Notes Theor. Comput. Sci. 172: 611-652 (2007).
Winskel, G., Deterministic concurrent strategies, Formal Asp. Comput. 24 (2012), pp. 647–660.
Winskel, G., Event structures, stable families and games (2012), Lecture Notes, Cambridge University Computer Laboratory: http://www.cl.cam.ac.uk/∼gw104/EvStrsStFamGames.pdf.
Winskel, G., Winning, losing and drawing in concurrent games with perfect or imperfect information, in: Festschrift for Dexter Kozen, LNCS 7230 (2012).
Winskel, G., Probabilistic and quantum event structures (2013), in preparation for a coming LNCS volume.
