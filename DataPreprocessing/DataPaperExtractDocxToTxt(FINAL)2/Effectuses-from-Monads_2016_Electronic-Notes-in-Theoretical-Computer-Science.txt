Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 325 (2016) 169–183
www.elsevier.com/locate/entcs
Effectuses from Monads
Bart Jacobs
Institute for Computing and Information Sciences (iCIS), Radboud University Nijmegen, The Netherlands.
Web address: www. cs. ru. nl/ B. Jacobs Email: bart@ cs. ru. nl
July 3, 2016

Abstract
Effectuses have recently been introduced as categorical models for quantum computation, with probabilistic and Boolean (classical) computation as special cases. These ‘probabilistic’ models are called commutative effectuses. All known examples of such commutative effectuses are Kleisli categories of a monad. This paper answers the open question what properties a monad should satisfy so that its Kleisli category is a (commutative) effectus. The relevant properties are: strong affineness and partial additivity, together with some non-triviality conditions.
Keywords: monad, effectus, probabilistic computation


Introduction
An effectus is a relatively simple category, with finite coproducts and a final ob- ject, satisfying some elementary properties: certain squares have to be pullbacks and certain parallel maps have to be jointly monic, see (9) and (8) below. These effectuses have been introduced in [8], and give rise to a rich theory that includes quantum computation, see the overview paper [4]. Subclasses of ‘commutative’ effectuses and ‘Boolean’ effectuses have been identified. These Boolean effectuses capture classical (deterministic) computation, and can be characterised as extensive categories, see [4, Sec. 13] for details. This is a non-trivial result. A similar result for commutative effectuses is still missing. It should lead to a characterisation of (categorical) models of probabilistic computation.
This paper builds on [9] and makes a significant step towards a conjectured char- acterisation of these commutative effectuses as Kleisli categories of certain monads. The main result of this paper says that if the monad is strongly affine and partially

1 The research leading to these results has received funding from the European Research Council under the European Union’s Seventh Framework Programme (FP7/2007-2013) / ERC grant agreement nr. 320571

http://dx.doi.org/10.1016/j.entcs.2016.09.037
1571-0661/© 2016 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).

additive, then its Kleisli category is an effectus. Affineness of a monad T means that it preserves the final object: T (1) ~= 1. The property ‘strong affineness’ comes from [9], where it is used to prove a bijective correspondence between predicates and side-effect-free instruments (as in a non-quantum settings). Partial additivity of a monad has been introduced in [7] where it is used to obtain partially additive structure on homsets of a Kleisli category. This result is re-used here, as a step towards constructing effectuses, following [3].
We describe five monads to which our main result applies: distribution, Giry, probabilistic powerdomain, Radon, and expectation. These monads are all ‘prob- abilistic’ in an intuitive sense, and their Kleisli categories are (commutative) ef- fectuses. In future work we hope to find a construction in the other direction, turning a commutative effectus, possibly satisfying some additional properties, into a ‘probabilistic’ monad.
This paper is organised as follows. After some preliminary remarks about cate- gories and monads in Section 2 – 4 we describe the properties of strong affineness and partial additivity of monads in Section 5. Our main result, Theorem 6.3, stat- ing conditions on a monad that make its Kleili category an effectus, is in Section 6. Subsequently, Section 7 shows in some details that the requirements hold for two of the monad examples, namely the probabilistic power monad and the Radon monad.
Categorical preliminaries
This section briefly describes our assumptions about the underlying category that we will be using. It is a distributive category, which is non-trivial in a suitable sense that will be explained below. We recall from [5] that coprojections κi : Xi → X1+X2 in a distributive category are monic, and that the initial object 0 is strict — that is, each map X → 0 is an isomorphism.
Definition 2.1 A category is called distributive if it has finite products (×, 1) and coproducts (+, 0), where products distribute over coproducts, in the sense that the following maps are isomorphisms.
0   !	/0 ×¸X	(A × X)+ (B × X)  dis1=[κ1×id,κ2×id] /(A¸+ B) × X	(1)
We call such a distributive category non-trivial if it satisfies the following two ad- ditional requirements.
For each object X we have: X ~/= 0 iff there is a map x : 1 → X. This implies 1 ~/= 0.
The coprojections κ1, κ2 : 1 → 1 + 1 are disjoint, i.e. form a pullback:
0	/1 ¸

  	 κ2 
(2)

1 κ1 /1 +¸1 
This implies 1 + 1 /~= 1, or equivalently, κ1 /= κ2, using point (i).

Swapping the distributivity map dis1 in (1) yields an associated distributivity map:
(X × A)+ (X × B) dis2=[id×κ1,id×κ2] /X¸× (A + B)
= γ◦dis1◦(γ+γ)
where γ = ⟨π2, π1⟩ is the (product) swap isomorphism. The condition (2) is in fact equivalent to disjointness of all pairs of coprojections κi : Xi → X1 + X2, as can be seen via the following diagram.
Y
z0 	/1 ¸,!	vX˛
  	 κ2 
1,κ,1 /1 +¸1¸¸!+!	2
v!z	/¸ 
X1	κ1	X1 + X2
Monad preliminaries
In this paper we will be working with a monad T = (T, η, μ) on a non-trivial distributive category C. This section describes the notation and terminology that we use for monads.
We shall write Kl(T ) for the Kleisli category of the monad T , and • for Kleisli composition, that is, for composition in Kl(T ), in order to distinguish it from com- position ◦ in the underlying category C. Explicitly for ‘Kleisli’ maps f : X → Y and g : Y → Z in Kl(T ) we have g • f = μ ◦ T (g) ◦ f : X → T (Y ) → T 2(Z) → T (Z). The identity map on an object X ∈ Kl(T ) is given by the unit map η : X → T (X). Each map f : X → Y in C yields a map ‹f › = η ◦ f : X → Y in Kl(T ). This gives a functor ‹−›: C → Kl(T ).
The Kleisli category Kl(T ) inherits coproducts (+, 0) from C, with coprojections of the form ‹κi›: Xi → X1 + X2. We call the monad T non-trivial if, in analogy with diagram (2), the following rectangle is a pullback in C.
0	/T (¸1)


  
T (1)
 T ( κ2)
/T (¸1 + 1)
(3)

T (κ1)
In the terminology that will be used later, this says that the scalars 1 and 0 are not the same.
The lift monad (−) + 1 exists not only on the category C, but also on Kl(T ), with unit and multiplication of the latter described in C as:
X  ‹κ1› /T (¸X + 1)	 ‹[id,κ2]›	/¸

These maps are obtained via the functor ‹−› from the unit and multiplication of the lift monad (−)+1 on C. It is not hard to see that the Kleisli category of the

lift monad (−)+1 on Kl(T ) is the Kleisli category of the monad T j = T ((−)+ 1) on C. Hence we consider the category Kl(T j) as the category of partial maps in Kl(T ). The unit ηj and multiplication μj of T j are given by:


η′ =
‹κ1›
/T (¸X + 1)	T T (X + 1)+ 1	μ′ =
μ○T ([id,‹κ2›])
/T (¸X + 1)

Abstractly, this T j is a monad since there is always a distributive law of monads T (−)+1 ⇒ T (− + 1). In general, given such a law ST ⇒ TS, the composite TS is a monad again. Moreover, the monad S can be lifted toa monad S on Kl(T ), and its Kleisli category Kl(S) is the same as the Kleisli category Kl(TS) of the composite monad.
Kleisli composition in Kl(T j), written as •j, is related to composition • in Kl(T ) via:
g •j f = μj ◦ T j(g) ◦ f = μ ◦ T ([id, ‹κ2›]) ◦ T (g + id) ◦ f
= μ ◦ T ([g, ‹κ2›]) ◦ f = [g, ‹κ2›] • f.
To summarise, we will be working with three different categories with identity and composition notation as described below.
(C, id, ◦)	(Kl(T ), η, •)	(Kl(T j), ‹κ1›, •j).

Monad examples
There are (at least) five monad that are of interest in the current setting: the distri- bution monad D on sets, the Giry monad G on measurable spaces, the expectation monad E on sets, the probabilistic powerdomain monad V on (continuous) dcpos, and the Radon monad R on compact Hausdorff spaces. Due to space restrictions we will only elaborate the last two examples and refer to [9] for the first three.

The probabilistic powerdomain monad V on Dcpo
We write Dcpo for the category of directed complete partial orders (dcpo’s), with (Scott) continuous functions between them. For a dcpo X we write O(X) for the complete lattice of Scott open subsets: upward closed subsets U ⊆ X with: if  i xi ∈ U , then xi ∈ U for some index i. A valuation on the dcpo X is a Scott continuous map φ : O(X) → [0, 1] which satisfies φ(∅) = 0, φ(X) = 1, and φ(U ∪ V )= φ(U )+ φ(V ) − φ(U ∩ V ) for all opens U, V . The requirement φ(X)=1 means that valuations as used here are normalised. Without this requirement we speak of ‘sub-valuations’; they are standardly used in the theory of probabilistic powerdomains. We prefer to use proper, normalised valuations to obtain affineness, see below.
We write V(X) for the set of valuations on a dcpo X, ordered pointwise, with pointwise directed joins.  This yields a dcpo again, and an endofunctor V : Dcpo → Dcpo, where V(f )(φ)(V ) = φ f—1(V ) , for f : X → Y , φ ∈ V(X)

and V ∈ O(Y ). This functor restricts to the category Cdcpo of continuous dcpo’s, see [11, Thm. 8.2], where each element is a directed join of elements way below it. It is not hard to see that V(1) ~= 1 and V(2) ~= [0, 1]. A predicate on X is a map
X → 2 in the Kleisli category Kl(V), and thus corresponds to a continuous function
p : X → [0, 1]. Given a valuation φ : O(X) → [0, 1] on X one can define an integral
p dφ ∈ [0, 1] as join of integrals of simple functions, see [10,11] for details.
This V forms a monad [10,11] on (continuous) dcpo’s, that is, on both the categories Dcpo and Cdcpo. The unit η : X → V(X) is given by η(x)(U )= 1U (x), where 1U : X → [0, 1] is the indicator function for U , with 1U (x)=1 if x ∈ U and 1U (x) = 0 otherwise. The Kleisli extension f∗ : V(X) → V(Y ) of a continuous map f : X → V(X) is given by integration: f∗(φ)(V )= f (−)(V ) dφ.
This monad V is strong, with strength map st1 : V(X) ×Y → V(X ×Y ) given by st1(φ, y)(U ×V )= φ(U )·1V (y). The induced ‘double’ strength dst: V(X)×V(Y ) → V(X × Y ) is given by dst(φ, ψ)(U × V ) = φ(U ) · ψ(V ). This V is a commutative monad, by Fubini for V.
The Radon monad R on CH
We can only describe the essentials of the Radon monad R on the category CH of compact Hausdorff spaces (with continuous maps) and refer to [6] for more in- formation. This monad sends a compact Hausdorff space X to the states on the associated commutative C∗-algebra C(X) of continuous functions X → C. Hence we write R(X) = Stat(C(X)), where states are positive unital maps ω : C(X) → C. This R is a ‘double dual’ monad, with familiar unit and Kleisli extension definitions:
η(x)(φ) = φ(x)	and	f∗(ω)(ψ) = ω λx. f (x)(ψ)	for f : X → R(Y ).

One of the main results of [6] — presented as a probabilistic version of Gelfand duality — states that the Kleisli category Kl(R) is the opposite (CCstarPU)op of the the category of commutative C∗-algebras, with positive unital maps between them. This is a prime example of a (commutative) effectus, see [8,4].
Monad requirements
In this section we assume that T is a monad on a distributive category C. As before, we write T j = T ((−) + 1) for the induced monad on C.
Definition 5.1 The monad T is called affine if T (1) ~= 1, and strongly affine if T
is strong and all rectangles below are pullbacks.
T (X) × Y 	π2	/Y ¸


st1
  
T (X × Y )


T (π2)
ηY
  
T (Y )
(4)

It is not hard to see that a strongly affine monad is affine, see [9] for details.

The following result forms the technical core of this paper.
Lemma 5.2 Let T be strongly affine monad on a non-trivial distributive category
C. The following diagrams are then pullbacks in the Kleisli category Kl(T ).
X 	!	/1 ¸	1	1	X 	!	/1 ¸

‹κi›
  
X + X
‹κi›
/¸ 
‹κ2›
  
‹κ2›
/¸ 
‹κ1›
  
‹κ1›
/¸ 
(5)

!+!
1+1	X +1 !+id
1+1	X +1 !+id
1+1 

For this last (third) pullback we need to assume that the monad T is non-trivial. We can then prove that maps T (κi) are monic in C — making coprojections ‹κi› monic in Kl(T ).
Proof The proof that the diagram on the left in (5) is a pullback is obtained by taking Y = 2 = 1 + 1 in Diagram (4) and using the distributivity isomorphism sep2 = (π1 + π1) ◦ dis—1 : X × 2 → X × 1+ X × 1 → X + X. We leave it to the meticulous reader to check that the following two diagrams commute.
X × 1  id×κ1 /X¸× 2	T (X) × 2 	st1	/T (¸X × 2)

π1	sep2
sep2
T (sep2)
(∗)

X	κ1	/X¸+
T (X)+ T (X)	/T (¸X + X)
[T (κ ),T (κ )]

1	2
We now show that the left diagram in (5) is a pullback in Kl(T ), for i = 1. Let f : Y → T (X + X) satisfy (!+ !) • f = ‹κ1› • !, that is, T (! + !) ◦ f = T (κ1) ◦ η ◦ !. Take fj = T (sep—1) ◦ f : Y → T (X × 2), and consider the pullback (4). We get:


T (π ) ◦ fj = T (π ) ◦ T (sep—1) ◦
(∗)
◦ f = η ◦ κ
!.

2	2	2
f = T (!+ !)	1

Hence there is a unique map g : Y → T (X) in (4) with st1 ◦ ⟨g, κ1 ◦ !⟩ = fj. This g
is the mediating map that we want, since:
f = T (sep2) ◦ fj = T (sep2) ◦ st1 ◦ ⟨g, κ1 ◦ !⟩
(∗)
= [T (κ1),T (κ2)] ◦ sep2 ◦ (id × κ1) ◦ ⟨g, !⟩
(∗)
= [T (κ1),T (κ2)] ◦ κ1 ◦ π1 ◦ ⟨g, !⟩
= T (κ1) ◦ g
= ‹κ1› • g.
Uniqueness is left to the reader.
We continue with the diagram in the middle in (5). The case X ~= 0 trivially holds. If X /~= 0, then we may assume a map x : 1 → X, since the underlying category is non-trivial, see Definition 2.1 (i). Now let f : Y → T (X + 1) satisfy T (!+ id) ◦ f = ‹κ2› ◦ !. Then fj = T (id + x) ◦ f : Y → T (X + X) satisfies

T (!+ !) ◦ fj = T (!+ id) ◦ f = ‹κ2› ◦ !. Using the pullback on the left in (5) we get a g : Y → T (X) with T (κ2) ◦ g = fj. But then:
f = T (id + !) ◦ fj = T (id + !) ◦ T (κ2) ◦ g = T (κ2) ◦ T (!) ◦ g
(∗∗)
= T (κ2) ◦ η ◦ ! =  κ2 • !.


The equation
(∗∗)
= holds because T (1) is final. This finality also yields uniqueness of

the mediating map !.
For the third rectangle in (5) the case X ~= 0 is covered by the requirement that T is non-trivial: if f : Y → T (0 + 1) satisfies T (! + id) ◦ f = T (κ1) ◦ η ◦ !, then f = T (κ2) ◦ η ◦ !, since T (0 + 1) ~= T (1) ~= 1. We thus have T (κ1) ◦ η ◦ != T (κ2) ◦ η ◦ !, so that Y → T (1) factors through 0, via the pullback (3). This implies Y ~= 0, since the initial object in a distributive category is strict [5]. But then we are done. When X ~/= 0 we can use a map x : 1 → X and proceed like for the middle rectangle. Finally, we show that the maps T (κ1): T (X) → T (X + Y ) are monic in
C. If f, g : Y → T (X) satisfy T (κ1) ◦ f = T (κ1) ◦ g, then f = g by uniqueness of the mediating map in the pullback on the right in (5). Obviously, ! • f =! • g, but also:
‹κ1› • f = T (κ1) ◦ f = T (id + !) ◦ T (κ1) ◦ f
= T (id + !) ◦ T (κ1) ◦ g = T (κ1) ◦ f = ‹κ1› • g.	 
If T is an affine monad on C, the initial object 0 ∈ C is both initial and final in Kl(T j). It is always initial, and final since: T j(0) = T (0 + 1) ~= T (1) ~= 1. Hence 0 is a zero object in Kl(T j). In particular, for each pair of objects X, Y ∈ C there is a zero map 0 = 0X,Y : X → T j(Y ) given by:


 ! /¸~	j
T ′(!) /j¸
 ! /¸η○κ2 /¸


We have 0 •j f = 0 = g •j 0 for all maps f, g in Kl(T j). We can now define ‘partial projections’ D1 : X + Y → X and D2 : X + Y → Y in Kl(T j) via cotuples:


D = X + Y  [η○κ1,0]= /T (¸X + 1)	D
η○(id+!)
= X + Y  [0,η○κ1]= /T (¸Y + 1) .
η○[κ2○!,κ1]

These maps are natural in X, Y , in the category Kl(T j). Notice that D1 : 1 + 1 → T (1 + 1) is the unit/identity and D2 : 1 + 1 → T (1 + 1) is the swap map η ◦ [κ2, κ1]. We can then form ‘bicartesian’ maps bc = bcX,Y : T j(X + Y ) → T j(X) × T j(Y ),
as a tuple of the Kleisli liftings of D1, D2. That is,
bc = ⟨ μj ◦ T j(D1), μj ◦ T j(D2) ⟩.	(6)
Definition 5.3 [After [7]] An affine monad T on C is partially additive if these maps bc from (6) are monic in C, and the naturality squares below are pullbacks

in C, for all f : X → A, g : Y → B in C.


T j(X + Y )
  
bc
T ′(f +g)
T (A + B)
  
bc

(7)

T j(X)
  j
	/j¸
  j

× T (Y ) T ′(f )×T ′(g) T (A) × T (B)

The requirement that bc is monic means that the two partial projections D1 : X + Y → X, D2 : X + Y → Y are jointly monic in Kl(T j). In particular, the following two maps in Kl(T ) are jointly monic (see [8, Assump. 1]).

	···=[Q1,κ2]=[id,κ2]	/¸

(1 + 1) + 1
···=[Q2,κ2]=[[κ2,κ1],κ2]
/1 +¸1	(8)


Our next aim is to prove that the Kleisli category Kl(T ) of a strongly affine partially additive monad T on a non-trivial distributive category C is an effectus.


The Kleisli category is an effectus
We proceed towards our main theorem in a number of steps, combining the ap- proaches of [7] and [3] (see also [4, Sect. 8]). We first show how to get a FinPAC (after [2]).

Proposition 6.1 Let T be a strongly affine partially additive monad on a non- trivial distributive category C. The Kleisli category of the monad T j = T ((−)+ 1) is then a ﬁnitely partially additive category (a FinPAC, for short, see [2,4]).

Explicitly, for maps f, g : X → T j(Y ) one says that f, g are orthogonal, written as f ⊥ g, if there is a (necessarily unique) bound b : X → T j(Y + Y ) such that bc ◦ b = ⟨f, g⟩, i.e. such that D1 •j b = f and D2 •j b = g. In that case we define their sum ❽ by f ❽ g = ∇ •j b = T j(∇) ◦ b : X → T j(Y ).
The above proposition says that this partial sum ❽ with the zero map 0 forms a partial commutative monoid (PCM), which is preserved by pre- and post- composition in Kl(T j) and satisfies the ‘untying axiom’ of [2,12,3]: if f ⊥ g then (κ1 •j f ) ⊥ (κ2 •j g).
Proof All this is rather straightforward and can be copied from [7,4]. We only point out that we need the pullback property (7) in the proof of associativity: let f, g, h : X → Y be given in Kl(T j) with f ⊥ g via bound b, and (f ❽ g) ⊥ h via bound c. We thus have D1 •j b = f , D2 •j b = g and D1 •j c = f ❽ g = ∇ •j b,

D2 •j c = h. Consider the following pullback in C.
X	c
d
j z˛	zj_


⟨b,h⟩
T ((Y + Y )+ Y )
  
bc
T ′(∇+id)
/T ¸(Y + Y )
  
bc

j	z˛ j
	/j¸
  j

T (Y + Y ) × T (Y ) T ′(∇)×id T (Y ) × T (Y )
Take dj = T ([[[κ2 ◦ !, κ1 ◦ κ1], κ1 ◦ κ2], κ2]) ◦ d : X → T j(Y + Y ). Then g ⊥ h via dj. Next we take djj = T j([id, κ2]) ◦ d : X → T j(Y + Y ). It proves f ⊥ (g ❽ h) and associativity, in:
f ❽ (g ❽ h) = ∇ •j djj = T (∇ + id) ◦ T ([id, κ2]+ id) ◦ d
= T ([∇, id]+ id) ◦ d
= T (∇ + id) ◦ T ((∇ + id)+ id) ◦ d
= T j(∇) ◦ T j(∇ + id) ◦ d
= ∇ •j c
= (f ❽ g) ❽ h.
The untying axiom follows directly from the way that orthogonality ⊥ is defined: if f ⊥ g, for f, g : X → T j(Y ), say via bound b : X → T j(Y + Y ), then one can take as new bound bj = T j(κ1 + κ2) ◦ b : X → T j((Y + Y )+ (Y + Y )). It is easy to see that bj proves (κ1 •j f ) ⊥ (κ2 •j g).	 
The maps X → 2 = 1 + 1 in Kl(T ) are called predicates on X. Equivalently, these predicates may be described as maps X → T (2) in C, or as maps X → 1 in Kl(T j). There are truth and falsity predicates 1 and 0 defined in C as:
1 =  X  ! /1 ¸κ1 /2 ¸η /T (¸2)	0 =  X  ! /1 ¸κ2 /2 ¸η /T (¸2) 
Orthosupplement is p⊥ = T ([κ2, κ1]) ◦ p, so that p⊥⊥ = p : X → T (2). Predicates on 1, of the form 1 → 2, are called scalars.
In order to prove that the Kleisli category Kl(T ) is an effectus the properties below are crucial. They all apply to the associated category Kl(T j) of partial maps. This emphasis on the partial maps in an effectus is due to [3].
Lemma 6.2 For a monad T as in Proposition 6.1 we additionally have:
if 1 •j f = 0 then f = 0, for each f : X → T (Y + 1);
if (1 •j f ) ⊥ (1 •j g) then f ⊥ g, for all f, g : X → T (Y + 1);
each homset Kl(T j)(X, 1) = Kl(T )(X, 2) = C(X, T (2)) is an effect algebra.
if T is non-trivial, then 1 •j f = 1 implies that f in Kl(T j) is total, i.e. is of the form f = T (κ1) ◦ g, for a necessarily unique map g in Kl(T ).

Proof	(i) The assumption 1 •j f = 0 means T (!+ id) ◦ f = η ◦ κ2 ◦ !. Using the pullback in the middle of (5) we obtain f = ‹κ2› • != 0.
Let (1 •j f ) ⊥ (1 •j g), for f, g : X → T j(Y ), via bound b : X → T j(1 + 1). Then we use the following pullback instance of (7).
X	b
c
zj _		zj_


⟨f,g⟩
T (Y + Y )
  
bc
T ′(!+!)
/T ¸(1 + 1)
  
bc

j z˛  j
	/j¸
  j

T (Y ) × T (Y ) T ′(!)×T ′(!) T (1) × T (1)
The map c is by construction a bound for f, g, showing f ⊥ g.
Since we already know from Proposition 6.1 that each homset of the Kleisli category Kl(T j) is a partial commuative monoid (PCM), we only have to prove the following three points.
For each predicate p we have p ❽ p⊥ = 1.
The predicate p⊥ is unique with this property: p ❽ q = 1 implies q = p⊥.
If 1 ⊥ p, then p = 0.
We shall handle them one by one.
For (a), let p : X → T (2) = T j(1) be a predicate. We take as bound b = T (κ1) ◦ p : X → T j(1 + 1) = T ((1 + 1) + 1). One easily checks that D1 •j b = p and D2 •j b = p⊥, and also that p ❽ p⊥ = ∇ •j b = 1.
In (b) let p ❽ q = 1, say via bound b : X → T j(1 + 1). Then: p ❽ q = 1 =
∇ •j b = T (∇ + id) ◦ b = T (!+ id) ◦ b. The third rectangle in (5) is a pullback in Kl(T ), which we use on the left below.


X	!
c
z2       !	/z1 ¸ 
X	!
d
z1 	z1 

b	‹κ1›
‹κ1›
T (σ)○b
‹κ2›
‹κ2›

z 	/¸	z 	/¸ 

2+1 !+id
1+1	2 +1 !+id
1+1 

We thus have b = T (κ1) ◦ c. But then we are done:
p⊥ = T ([κ2, κ1]) ◦ p = T ([κ2, κ1]) ◦ (D1 •j b)
= T ([κ2, κ1]) ◦ T ([id, κ2]) ◦ T (κ1) ◦ c
= T ([[κ2, κ1], κ2]) ◦ T (κ1) ◦ c
= D2 •j b
= q.
Finally, for (c) let 1 ⊥ p, say via b : X → T j(1 + 1), so that T ([id, κ2]) ◦ b =
D1 •j b = 1 = ‹κ1› ◦ !, as in the above diagram on the right. Consider the

isomorphism σ = ··· = [[κ ,κ ◦ κ ],κ ◦ κ ]: 2 + 1 ~=
2 + 1, so that the outer

···	2	1	1	1	2	−→
diagram on the right commutes:
T (!+ id) ◦ T (σ) ◦ b = T ([[κ2, κ1 ◦ ! ◦ κ1], κ1 ◦ ! ◦ κ2]) ◦ b
= T ([[κ2, κ1], κ1]) ◦ b
= T ([κ2, κ1]) ◦ T ([id, κ2]) ◦ b
= T ([κ2, κ1]) ◦ ‹κ1› ◦ !
= ‹κ2› ◦ !.
Hence T (σ) ◦ b = ‹κ2› ◦ ! by the middle pullback in (5). But then:
p = D2 •j b = T ([[κ2, κ1], κ2]) ◦ T (σ—1) ◦ ‹κ2› ◦ !
= T ([[κ2, κ1], κ2]) ◦ T ([κ2 + id, κ1 ◦ κ1]) ◦ T (κ2) ◦ η ◦ !
= T (κ2) ◦ η ◦ !
= 0.
If T is a non-trivial monad, then the diagram on the right in (5) is a pullback. Hence the assumption 1 •j f = 1 translates to (! + id) • f = ‹κ1› • !, so that there is a unique map g in Kl(T ) with ‹κ1› • g = f , and thus T (κ1) ◦ g = f .
 
Our main result below gives conditions that ensure that a Kleisli category is an effectus, see [8,4]. Briefly, an effectus is a category with finite coproducts and a final
object in which the two maps ···, ··· : (1 + 1) + 1 ⇒ 1+1 in (8) are jointly monic,
·· ··

and in which the following diagrams are pullbacks.
X + Y  id+! /X¸+1 


X 	!	/1 ¸

!+id	!+id
 	/¸ 
‹κ1›	‹κ1›
 	/¸ 
(9)

1+ Y	id+!
1+1	X + Y	!+!
1+1 

Equivalent conditions can be formulated for the associated category of partial maps, see the original [3, Def. 4.4], copied into [4, Def. 51]. The proof below heavily builds on this partial perspective.
Theorem 6.3 A Kleisli category Kl(T ) is an effectus when T is a non-trivial strongly affine partially additive monad on a non-trivial distributive category.
If the monad T is additionally commutative, then its Kleisli category Kl(T ) is a commutative effectus.
Proof Since partial additivity of the monad T implies that we have jointly monic maps (1 + 1) + 1 ⇒ 1+1 in (8), one only has to show that the diagrams in (9) are pullbacks in Kl(T ). This is an application of [3, Thm. 4.10], which re-appears as [4, Thm. 53 (2)], using Proposition 6.1 and Lemma 6.2. The category of total maps in Kl(T j) is then Kl(T ), by Lemma 6.2 (iv).

The statement that the Kleisli category Kl(T ) is a commutative effectus if T is a commutative monad is based on results (and definitions) from [9].	 
The monad examples revisited
Our five monad examples D, G, V, R and E from Section 3 satisfy the assumptions of Theorem 6.3. We concentrate on the probabilistic powerdomain V and the Radon monad R since the others have been studied elsewhere [9].
The probabilistic powerdomain V
We first check that the probabilistic powerdomain V on the category Cdcpo of continuous dcpo’s is strongly affine. We use the result, due to Lawson, that a valuation on the opens O(X) of a continuous dcpo X can be extended in a unique way to a measure on the Borel sets B(X), see [11,1]. We recall that B(X) is the least σ-algebra that contains O(X).
We show that Diagram (4) is a pullback, for T = V. The proof is similar to the one for the Giry monad in [9], but uses the unique extension to Borel sets. Let ψ ∈ V(X × Y ) satisfy V(π2)(ψ) = η(z), for a given element z ∈ Y . This means ψ(X × V ) = ψ(π—1(V )) = V(π2)(ψ)(V ) = η(z)(V ) = 1V (z), for each V ∈ O(Y ).
We write ψ : B(X) → [0, 1] for the unique extension of ψ : O(X) → [0, 1]. Since η extends to a measure on B(X), and ψ(X × −) is also a measure that extends ψ(X × −) we get:
ψ^(X × V ) = 1V (z),	for each V ∈ B(X).	(10)
Our first aim is to show that ψ^ is non-entwined, that is, satisfies ψ^(U × V ) =
ψ(U × Y ) · ψ(X × V ) for all U, V ∈ B(X). We distinghuish two cases.
If z /∈ V , then by monotonicity:


ψ^(U × V ) ≤ ψ^(X × V )
(10)
= 1V (z) = 0.


Hence ψ(U × V )=0= ψ(U × Y ) · ψ(X × V ).
If z ∈ V , then z /∈ ¬V . We note that Borel sets (but not open sets) are closed under negation/complement. Hence with the extension ψ to Borel sets we can reason as follows.


ψ(U × V ) =
=
=
=
=
(10)
=
ψ(U × V )+0 
ψ(U × V )+ ψ(U × ¬V ) as just shown ψ^ (U × V ) ∪ (U × ¬V )  by additivity ψ^(U × Y )
ψ^(U × Y ) · 1V (z)
ψ^(U × Y ) · ψ^(X × V ).

But now we are done since we can take φ = V(π1)(ψ)= ψ(−×Y ) ∈ V(X), satisfying:


st1(φ, z)(U × V ) = φ(U ) · 1V (z)
(10)
= ψ(U × Y ) · ψ(X × V ) = ψ(U × V ).

The associated monad Vj(X)= V(X + 1) contains sub-valuations φ, which need not satisfy φ(X) = 1. The map bc: Vj(X + Y ) → Vj(X) ×Vj(Y ) from (6) is given by bc(φ)= ⟨bc1(φ), bc2(φ)⟩, where bci(φ)(U )= φ(κiU ). This map is clearly injective. We leave it to the reader to verify that the naturality squares are pullbacks.
The Radon monad R
The proof that the Radon monad is strongly affine that is presented below is due to Robert Furber; it is analogous to the proof for V, but uses the Cauchy-Schwartz inequality for positive maps on C∗-algebras. We first note that the strength map st1 : R(X) × Y → R(X × Y ) is determined by st1(ω, z)(φ ⊗ ψ)= ω(φ) · ψ(z). These tensors φ ⊗ ψ = λ(x, y). φ(x) · ψ(y) ∈ C(X × Y ) ~= C(X) ⊗ C(Y ) form a dense subset. Hence the above description of st1 suffices.
We turn to Diagram (4). Let ω ∈ R(X×Y ) and z ∈ Y be given with R(π2)(ω)= η(z). This means that ω(1 ⊗ ψ)= ψ(z), for each ψ ∈ C(Y ), where 1 ∈ C(X) is the function that is constantly 1. The Cauchy-Schwartz inequality for the positive map ω yields:
ω(φ ⊗ ψ) 2 = ω (φ ⊗ 1) · (1 ⊗ ψ) ∗ · ω (φ ⊗ 1) · (1 ⊗ ψ) 
≤ ω (φ ⊗ 1) · (φ ⊗ 1)∗ · ω (1 ⊗ ψ)∗ · (1 ⊗ ψ) 
= ω (φ · φ∗) ⊗ 1 · ω 1 ⊗ (ψ∗ · ψ) 
= ω (φ · φ∗) ⊗ 1 · (ψ∗ · ψ)(z)
= ω (φ · φ∗) ⊗ 1 · ψ(z)∗ · ψ(z).
Hence if ψ(z) = 0, then ω(φ ⊗ ψ) = 0. Consider the function ψj ∈ C(Y ) given by ψj(y) = ψ(z) − ψ(y). Since ψj(z) = 0, we get ω(φ ⊗ ψj) = 0, as just shown, and thus by linearity of ω:
ω(φ ⊗ ψ) = ω(φ ⊗ ψ)+ ω(φ ⊗ ψj) = ω(φ ⊗ (ψ − ψj))
= ω(φ ⊗ ψ(z))
= ω(φ ⊗ 1) · ψ(z)
= ω(φ ⊗ 1) · ω(1 ⊗ ψ).
We can now take as state ρ = R(π1)(ω) ∈ R(X) given by ρ(φ) = ω(φ ⊗ 1). This gives the mediating element that we seek, since:
st1(ρ, z)(φ ⊗ ψ) = ρ(φ) · ψ(z) = ω(φ ⊗ 1) · ω(1 ⊗ ψ) = ω(φ ⊗ ψ).
The monad Rj(X)= R(X + 1) contains the states on C(X +1) ~= C(X) ⊕ C, and thus the subunital positive maps C(X) → C, which are also known as substates.

The map bc: Rj(X + Y ) → Rj(X) × Rj(Y ) is given by bc(ω) = (ω1, ω2), where
ω1(φ)= ω([φ, 0]) and ω2(ψ)= ω([0, ψ]). It is obviously injective.
Conclusions and outlook
Our main result gives sufficient conditions for a monad so that its Kleisli category is an effectus. These conditions are, roughly: strong affineness and partial additivity. This solves a problem that has been open for a couple of years, since the inception of effectus theory. In [9] it is shown that strong affineness of a monad T gives a bijective correspondence between predicates X → 2 in Kl(T ) and instruments f : X → X +X in Kl(T ) which are side-effect-free, in the sense that ∇ • f = id. This part of the definition of a commutativity effectus. In [4, Example 58] one more property is used that is important for probabilistic computation, namely normalisation, giving conditional probability.
We expect that commutativity and normalisation play a role in a categorical characterisation of probabilistic computation that we have as long term goal, as discussed in the introduction to this paper.
Acknowledgement
Thanks to Kenta Cho, Robert Furber, and Bram Westerbaan for helpful discussions, and to the anonymous referees for their critical feedback.

References
M. Alvarez-Manilla, A. Edalat, and N. Saheb-Djahromi. An extension result for continuous valuations.
Journ. London Math. Soc., 61(02):629–640, 2000.
M. Arbib and E. Manes. Partially additive categories and flow-diagram semantics. Journ. Algebra, 62(1):203–227, 1980.
K. Cho. Total and partial computation in categorical quantum foundations. In C. Heunen, P. Selinger, and J. Vicary, editors, Quantum Physics and Logic (QPL) 2015, number 195 in Elect. Proc. in Theor. Comp. Sci., pages 116–135, 2015.
K. Cho, B. Jacobs, A. Westerbaan, and B. Westerbaan. An introduction to effectus theory. see
arxiv.org/abs/1512.05813, 2015.
R. Cockett. Introduction to distributive categories. Math. Struct. in Comp. Sci., 3:277–307, 1993.
R. Furber and B. Jacobs. From Kleisli categories to commutative C∗-algebras: Probabilistic Gelfand duality. Logical Methods in Comp. Sci., 11(2):1–28, 2015.
B. Jacobs. From coalgebraic to monoidal traces. In B. Jacobs, M. Niqui, J. Rutten, and A. Silva, editors, Coalgebraic Methods in Computer Science, volume 264 of Elect. Notes in Theor. Comp. Sci., pages 125–140. Elsevier, Amsterdam, 2010.
B. Jacobs. New directions in categorical logic, for classical, probabilistic and quantum logic. Logical Methods in Comp. Sci., 11(3):1–76, 2015.
B. Jacobs. Affine monads and side-effect-freeness. In I. Hasuo, editor, Coalgebraic Methods in Computer Science (CMCS 2016), number 9608 in Lect. Notes Comp. Sci., pages 53–72. Springer, Berlin, 2016.
C. Jones. Probabilistic Non-determinism. PhD thesis, Edinburgh Univ., 1989.


C. Jones and G. Plotkin. A probabilistic powerdomain of evaluations. In Logic in Computer Science, pages 186–195. IEEE, Computer Science Press, 1989.
E. Manes and M. Arbib. Algebraic Appoaches to Program Semantics. Texts and Monogr. in Comp. Sci.,. Springer, Berlin, 1986.
