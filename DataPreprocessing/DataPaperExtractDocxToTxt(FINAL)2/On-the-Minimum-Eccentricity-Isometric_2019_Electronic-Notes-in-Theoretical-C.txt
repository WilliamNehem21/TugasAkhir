Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 346 (2019) 159–169
www.elsevier.com/locate/entcs

On the Minimum Eccentricity Isometric Cycle Problem
E´tienne Birmel´e1, Fabien de Montgolfier2 and L´eo Planche 3
Laboratoire MAP5, Universit´e Paris Descartes and CNRS, Sorbonne Paris Cit´e, Paris, France 1,3
IRIF, Universit´e Paris Diderot - Paris 7 2,3

Abstract
In this paper we investigate the Minimum Eccentricity Isometric Cycle (MEIC) problem. Given a graph, this problem consists in finding an isometric cycle with smallest possible eccentricity k. We show that this problem is NP-Hard and we propose a 3-approximation algorithm running in O(n(m + kn)) time.
Keywords: isometric cycle; eccentricity; k-domination; k-covering


Introduction
For both graph classification purposes and applications, it is an important issue to summarize a graph into a more simple object such as a tree or a path, or in the case of this article, a cycle. Different constructions and metrics offer such a characterization, for example tree-decompositions and tree-width [8]. Another approach, on which we focus in this article, is to study the problem in terms of domination.
In the path case, the problem consists in finding a path such that every vertex in the graph belongs to or has a neighbor in the path. Several graphs classes were defined in terms of dominating paths. Graphs containing a dominating pair, that is vertices such that every path linking them is dominating are studied in [5]. Graphs such that short dominating paths are present in all induced subgraphs are characterized in [1]. Linear-time algorithms to find dominating paths or dominating vertex pairs were also developed for AT-free graphs [3,4].

1 Email: etienne.birmele@parisdescartes.fr
2 Email: fm@irif.fr
3 Email: leoplanche@gmail.com

https://doi.org/10.1016/j.entcs.2019.08.015 1571-0661/© 2019 Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

Dominating paths do not exist however in every graph. A natural extension of the notion of domination is the notion of k-coverage (also called k-domination). For a given integer k,a path k-covers the graph if every vertex is at distance at most k from the path. The smallest k such that a path k-covers the graph is then a metric as desired.
Another formulation for this metric is the notion of eccentricity. Given a graph G, x ∈ V (G) and S ⊂ V (G), we note d(x, S) = mins∈S dG(x, s). The eccentricity of S, denoted ecc(S), is the smallest k such that for any x ∈ V (G), dG(x, S) ≤ k.
The minimum-eccentricity shortest path (MESP) problem was introduced by Dragan and Leitert [6]. The name is transparent as it consists in finding a shortest path with minimal eccentricity. The study of this problem was originally motivated by its link to the embedding with low distortion of graphs into the line. Dragan and Leitert have shown that this problem is NP-complete, and designed some ap- proximation algorithms, and established its relationship with the Line Embedding problem [6]. The MESP problem is also related with graphs problems arising from biological data set [2].
A problem related to the MESP problem consists in finding an isometric cycle with minimal eccentricity, as defined in [2]. A cycle is isometric if it preserves distances:

Definition 1.1 [Isometric cycle] Let G be a graph and C a cycle of G. dG denotes the distance in G and dC the distance in G[C]. C is an isometric cycle if and only if, for every two vertices u, v of C we have: dG(u, v)= dC(u, v).

In other words, one of the two paths linking u and v in the cycle is a shortest path in the graph. Note that an isometric cycle is necessarily an induced cycle. The problem we are interested in consists in finding an isometric cycle with minimum eccentricity.

Definition 1.2 [Minimum Eccentricity Isometric Cycle Problem (MEIC)] Given a graph G, find an isometric cycle C such that, for every isometric cycle U , ecc(C) ≤ ecc(U ).

A longest isometric cycle may be computed in O(n4.752log(n)) time [7], which gives a polynomial-time 3-approximation for the MEIC problem [2]. It was also shown that a graph admitting an isometric cycle with low eccentricity admits a cycle embedding of low distortion [2].
In this paper, we first show that the MEIC problem is NP-complete. To do so, we propose a reduction of MESP to MEIC. Then we propose a O(n(m + kn)) -time 3-approximation algorithm. This is faster than the O(n4.752log(n)) time algorithm proposed in [2] but with the additional constraint that the size of the isometric cycle of minimal excentricity has to be at least 32 times its eccentricity (see Theorem 4.6). Notice that finding a minimum-eccentricity isometric cycle is useful only in “donut- shaped” graphs, implying the cycle is long and has short eccentricity.

Deﬁnitions and Notations
Through this paper we consider finite connected undirected graphs. For a graph G = (V, E), we use n = |V | and m = |E| to denote the cardinality of the vertex set and the edge set of G. A shortest path between two vertices u and v is a path whose length is minimal among all u, v-paths. Its length (counting edges) is the distance d(u, v). When the precision is needed, we denote dG(u, v) the distance between two vertices u and v in the graph G. Depending on the context, we consider a path either as a sequence, or as a set of vertices. The distance d(v, S) between a vertex v and a set S is the smallest distance between v and a vertex from S. The eccentricity ecc(S) of a set S is the largest distance between S and any vertex of G. The ball of center v and radius r, noted B(v, r), is the set of vertices at distance at most r from v. Given two sets of vertices A and B, we note A \ B the set of vertices of A which are not in B.
NP-completeness
We propose a polynomial reduction of MESP to MEIC.
Let f be the function which associates to a graph with vertices V (G)= {v1, ...vn} a family of graphs f (G)= {H(i,j)∈{1...n}2 } such that for every (i, j) ∈ {1...n}2, H(i,j) is the graph G to which a path Pi,j is added of size 2n between vi and vj.
Lemma 2.1 Given a graph G, the shortest path of minimal eccentricity of G is of eccentricity k if and only if, for any graph of f (G), its isometric cycle of minimal eccentricity is of eccentricity at least k.
Proof. Let us show that for every graph Hi,j in f (G), any isometric cycle of minimal eccentricity contains Pi,j and a shortest path of minimal eccentricity in G between vi and vj.
Claim 1 : Any isometric cycle of minimal eccentricity in Hi,j contains Pi,j.
Consider any cycle C of G. It does not contain any vertex of Pi,j other than vi and vj. The path Pi,j being of length 2n, the eccentricity of the cycle C in Hi,j is of size at least n. Consider now any cycle in Hi,j containing Pi,j and a shortest path between vi and vj. This cycle is isometric and of eccentricity at most n − 2.
Claim 2 : Any isometric cycle of minimal eccentricity in Hi,j contains Pi,j and a shortest path of minimal eccentricity in G between vi and vj.
We have already established that such a cycle C contains Pi,j and a path Q in G between vi and vj. Furthermore, Q or Pi,j has to be a shortest path as C is isometric. The distance dG(vi, vj) being at most n− 1 and Pi,j being of size 2n, Q is thus a shortest path linking vi and vj. Moreover, as every shortest path between any vertex of Pi,j and any vertex of G contains either vi or vj, ecc(C)= eccG(Q), where eccG stands for the eccentricity in the graph G. C being of minimal eccentricity among the isometric cycles, Q is of minimal eccentricity among the shortest paths between vi and vj.	2
Lemma 2.1 implies that the solution of MESP in G may be computed by solving

MEIC in f (G), and the transformation f is clearly polynomial. MESP being an NP-complete problem [6], it follows that :
Theorem 2.2 The problem MEIC is NP-complete.
Preliminary results
We define for every cycle C an arbitrary cyclic orientation and for every u, v vertices of the cycle, we note Cuv and Cvu the two paths in C linking u and v. In order to make proofs clearer, we define the operator ’ as follows :
Definition 3.1 Let G be a graph with an isometric cycle C k-dominating G. For every vertex x in G, xj denotes a vertex of C at distance at most k from x, randomly chosen if several choices are possible.
The following lemma is a crucial preliminary result, which will allow us later to build 3k-dominating cycles if the graph contains an isometric cycle k-dominating it.
Lemma 3.2 Let G be a graph with an isometric cycle C k-dominating G, and u and v be any two vertices in G. Every path between u and v 2k-dominates either Cu′,v′ or Cv′,u′ .
Proof.
Notations used in the proof are illustrated in Figure 1.
Let P be a path between u and v. Suppose that P does not 2k-dominate some vertex b on the path Cu′,v′ and consider any vertex a in Cv′,u′ . We have uj (resp. vj) in the path Ca,b (resp. Cb,a).
Then u is at distance at most k of Ca,b and v is at distance at most k of Cb,a. Moreover, as every vertex of G is at distance at most k of one of those two paths, there exist c and d that are adjacent vertices in P such that cj is in Ca,b and dj in Cb,a.
As d(cj, dj) ≤ d(cj, c)+ d(c, d)+ d(d, dj) ≤ 2k + 1 and C is an isometric cycle, either Cc′,d′ or Cd′,c′ is of length at most 2k + 1 and is thus 2k-dominated by {c, d}. Furthermore b and a are not in the same subpath of C between cj and dj, hence either a or b is 2k-dominated by {c, d}. As b cannot be 2k-dominated by P it follows that a is 2k-dominated by {c, d} hence by P .
The previous claim being true for every a in Cv′,u′ , the lemma follows.	2

Approximation in O(n(m + kn)) time
In this section we develop a new approximation algorithm for the MEIC problem, with a better complexity compared to [2] (Theorem 4) but requiring a graph with a longer isometric cycle.
Consider a graph with an isometric cycle of eccentricity k. Algorithm 1 (FirstCycle) first computes a cycle U 0 of eccentricity at most 3k but non nec-



Fig. 1. Notations used in Lemma 3.2 (left) and in Lemma 4.1 (right)
essarily isometric. Its size is then iteratively reduced while keeping an eccentricity of at most 3k. The algorithm ends when the last computed cycle is isometric.













Algorithm 1: Pseudocode of the algorithm FirstCycle

Lemma 4.1 Let G be a graph with a k-dominating isometric cycle C.
If C is of size at least 26k +6 then FirstCycle(G) returns a cycle U 0 2k- dominating C. Furthermore U 0 is of size at most |C| + 4k and at least |C|− 2k − 2.
Proof.
Notations used in the proof are illustrated in Figure 1.
If FirstCycle(G) returns a cycle U 0, it is the union of two paths P and Pj. Let

m be a vertex in the middle of P (randomly chosen among the two possible ones if
—P— is odd) and assume w.l.o.g. that mj is in Ca′b′ .
Claim 1: P is of length at least 12k. Let aj be a vertex of C furthest from aj.


	
ecc(a) ≥ d(a, aj) ≥ d(aj, aj) − k
C	k ≥ 12k +3 2

As b is a vertex of G furthest from a, we have the result.
Claim 2: B(m, [ |P | ♩) does not disconnect a from b.
Consider any vertex y in Cb′a′ , as mj is in Ca′b′ ,
d(m, y) ≥ d(mj, y) − d(m, mj) ≥ min(d(mj, aj), d(mj, bj)) − k

But

d(mj, aj) ≥ d(a, m) − d(a, aj) − d(m, mj)

|P |
≥[	♩− 2k


d(mj, bj) ≥ d(b, m) − d(b, bj) − d(m, mj)
2
|P |
≥[	♩− 2k

so that

|P |
d(m, y) ≥[ 
2

♩− 3k	|P |
4
|P|


♩ + [

|P |


4
2

♩− 3k > [

|P |♩
4

Cb′a′ is therefore at distance at least [ 4 ♩ of m. Furthermore,

d(a, m)= [
d(b, m)= [
|P |


2
|P |
2
|P |
♩≥[ 
4
|P |
♩≥[ 
4
♩ + 3k
♩ + 3k

It follows that the paths of length k from a to aj and b to bj are at distance greater than [ |P | ♩ + 2k of m. The vertices a and b are thus connected in Gj. This claim implies that FirstCycle(G) returns a cycle.
Claim 3: U 0 2k-dominates C.
Without loss of generality, assume that mj is in Cc′d′ . Let us first show that Pcm 2k-dominates Cc′m′ . To do so, assume that it is not the case. Then, by Lemma 3.2, Pcm 2k-dominates Cm′c′ . The vertex mj being in Cc′d′ , it follows that dj is in Cm′c′ and that there exists a vertex x in Pcm at distance at most 2k from dj. It follows that,
|Pcm| = d(c, x)+ d(x, m)
|Pcm|≥ d(c, d) − 3k + d(d, m) − 3k d(c, m) ≥ d(c, m)+ d(m, d)+ d(d, m) − 6k
6k ≥ 2d(d, m)
As d is a vertex of Pj, it is at distance more than [ |P | ♩ from m, it follows,
|P |
6k ≥[	♩
2
This contradicts the fact that P is of size larger than 12k, hence Pcm 2k-
dominates Cc′m′ . Similarly, we show that Pmd 2k-dominates Cm′d′ , it follows that
P 2k-dominates Cc′d′ .

Lemma 3.2 moreover implies that Pj 2k-dominates either Cc′d′ or Cd′c′ . But, as [ |P | ♩ is greater than 3k, mj cannot be 2k-dominated by a vertex in Gj. As mj is on Cc′d′ , Pj 2k-dominates Cd′c′ . It follows that U 0 2k-dominates C.
Claim 4: |C|− 6k − 2 ≤ |U 0|≤ |C| + 4k
|P| ≤ |Ca′b′ | + 2k as P is a shortest path between a and b. Similarly, as Pj is a shortest path in Gj, |P j|≤ |Cb′a′ | + 2k. Consequently, |P | + |P j|≤ |C| + 4k.
The other inequality is a direct result of Lemma 4.2.
Claim 5: U 0 does not contain the same vertex twice
Assume that a vertex x appears more than once in U 0. As both P and Pj are shortest path, they each contain x at most (and exactly) once. If x is in Pc,m then it is more distant from a than c and it should have been selected at line 8 instead of c. This leads to a contradiction. The same contradiction appears if we assume x in Pm,d.
2
Lemma 4.2 Let G be a graph with an isometric cycle C k-dominating G. Let a
and b be two vertices, possibly a = b, linked by a path P 2k-dominating Ca′,b′ . Then,
|P|≥ |Ca′b′ |− 6k − 2.
In particular, if U is a cycle 2k-dominating C, U is of size at least |C|− 6k − 2.
Proof. Consider any two vertices a and b and a path P linking them and 2k- dominating Ca′,b′ .
Let m be the middle of Ca′,b′ and z a vertex of P which is 2k-dominating m. Ca′,m
being of length at most [ |C| |, |Ca′,m|≤ d(aj, m)+1. Similarly, |Cm,b′ |≤ d(m, bj)+1.
It follows that
|Ca′b′ |≤ d(a , m)+ d(m, b )+2 ≤ (k + |Pa,z| + 2k)+ (k + |Pz,b| + 2k)+2 
≤ |Pa,b| + 6k +2 
The affirmation concerning the cycle follows by choosing a = b.	2
The function FirstCycle creates a cycle U 0, not necessarily isometric, 3k- dominating the graph. Starting with U 0, the size of the cycle is iteratively de- creased by the NextCycle procedure described by Algorithm 2, while keeping the 3k-domination property.
Lemma 4.3 Let G be a graph containing an isometric cycle C, k-dominating G. For every path P, there exists a subpath I(P ) of C such that:
Every vertex of C at distance at most k of P is in I(P ) and the extremities of
I(P ) are such vertices;
P 2k-dominates I(P )
Proof.
Notations used in the proof are ilustrated with figure 2.
Let uj and vj be two vertices of C such that u and v both belong to P and such that P 2k-dominates Cu′v′ (such a pair exists as we may always pick uj = vj).











Algorithm 2: Pseudocode of the algorithm NextCycle

























Fig. 2. Illustration of Lemma 4.3
Assume that there exists a vertex wj not in Cu′v′ and such that w is in P . By Lemma 3.2, P 2k-dominates either Cu′w′ or Cw′u′ . In the first case, Cu′v′ is a subset of Cu′,w′ . In the second case, P 2k-dominates Cw′u′ and Cu′v′ hence Cw′v′ . As vj is in Cu′w′ and uj is in Cw′v′ , the sizes of Cu′w′ and Cw′v′ are strictly larger than the one of Cu′v′ . The length of C being finite, there exists a pair of vertices verifying the property and such that the considered arc is maximal.	2
Lemma 4.4 Assume that |C|≥ 32k + 7. Let U be a cycle of size at most |C| + 4k
which 3k-dominates G and let a and b be two vertices of U.
Then, Ca′b′ and Cb′a′ are both included in either I(Ua,b), or in I(Ub,a).
Proof. Assume that this is not the case. By symmetry, assume that Ca′b′ is neither included in I(Ua,b), nor in I(Ub,a).

Let wj
be the extremity of I(Ua,b) such that Ca′w′
⊂ Ca′b′ and wj
the extremity

of I(Ub,a) such that Ca′w′
⊂ Ca′b′ . By symmetry, assume that Ca′w′
⊂ Ca′w′
and

let us note wj = wj . There exists w ∈ Ua,b such that d(w, wj)= k.

Case 1: d(wj, bj) ≤ 4k +1 
In this case, |Cb′,w′ |≥ |C|− 4k − 2. By definition of wj, Cb′,w′ ⊂ I(Uw,b) hence is 2k-dominated by Uw,b. The Lemma 4.2 then implies that |Uw,b|≥ |Cb′,w′ |− 6k− 2 ≥
|C|− 10k − 4.
By the definition of wj, we also have that Ca′,w′ ⊂ I(Ua,w). Furthermore Cb′,a′ ⊂ I(Ub,a) by Lemma 3.2 as, by hypothesis, I(Ub,a) does not contain Ca′,b′ . Therefore, Cb′,w′ ⊂ I(Ub,w) and by the Lemma 4.2, |Ub,w|≥ |Cb′,w′ |− 6k − 2 ≥ |C|− 10k − 4. Finally, |U| = |Ub,w| + |Uw,b|≥ 2|C|− 20k − 8. As |U|≤ |C| + 4k, it implies that
|C|≤ 24k + 8, which contradicts our hypothesis.
Case 2: d(wj, bj) ≥ 4k +1 
Let z be the vertex of Ca′b′ at distance 4k +1 of wj. U is 3k-dominating G by hypothesis, therefore z is at distance at most 3k of a vertex y of U . The fact that d(wj, z) > 4k then implies that yj is not in Ca′,w′ . We now have to study three different sub-cases, corresponding to y ∈ Ua,w, y ∈ Uw,b and y ∈ Ub,a, but the arguments are very similar.
Let y ∈ Ua,w, as shown on the right of Figure 3.  Let us decompose U as
U = Uy,w ∪ (Uw,b ∪ Ub,y). By definition of wj, I(Uy,w) contains Cy′w′ . Therefore
|Uy,w|≥ |Cy′,w′ |− 6k − 2 ≥ |C|− d(yj, z) − d(z, wj) − 6k − 2 ≥ |C|− 14k − 3.
Moreover, I(Uw,b) contains Cb′,w′ by definition of wj and I(Ub,y) contains Cy′,b′
by definition of wj . Consequently, I(Uw,b ∪ Ub,y) contains Cy′,w′ and |Uw,b ∪ Ub,y|≥ 
|C|− 14k − 3.
Finally, 2(|C|− 14k − 3) ≤ |C| + 4k, meaning that |C| ≤ 32k + 6, which is a contradiction.
Let y ∈ Uw,b. Let us decompose U as U = Uw,y ∪ (Uy,b ∪ Ub,a ∪ Ua,w).
By definition of wj, I(Uw,y) contains Cy′w′ , therefore |Uw,y|≥ |Cy′,w′ |− 6k − 2 ≥
|C|− d(yj, z) − d(z, wj) − 6k − 2 ≥ |C|− 14k − 3.
Furthermore, I(Uy,b) contains Cy′,b′ by definition of wj , I(Ub,a) contains Cb′,a′ by hypothesis and I(Ua,w) contains Ca′,w′ by definition of wj, therefore I(Uy,b ∪ Ub,a ∪ Ua,w) contains Cy′,w′ . Consequently, its length is also greater that |C|− 14k − 2.
It implies again that |C|≤ 32k + 6, which is a contradiction.
Finally, assume now that y ∈ Ub,a. Let us decompose U as U = (Uw,b ∪ Ub,y) ∪
(Uy,a ∪ Ua,w ).
I(Uw,b) contains Cb′,w′ by definition of wj and I(Ub,y) contains Cy′,b′ by definition of wj . Consequently, I(Uw,b ∪ Ub,y) contains Cy′,w′ and |Uw,b ∪ Ub,y|≥ |C|− 14k − 3. Furthermore, I(Uy,a) contains Cy′,a′ as it does not contain Ca′,y′ by hypothesis and I(Ua,w) contains Ca′,w′ by definition of wj. It follows that I(Uy,a∪Ua,w) contains
Cy′,w′ and |Uy,a ∪ Ua,w|≥ |C|− 14k − 3.
Once again, it implies that |C|≤ 32k + 6, leading to a contradiction.	2
Lemma 4.5 Let G be a graph with an isometric cycle C k-dominating G and of size at least 32k + 7.


	
Fig. 3. Notations used in the proof of Lemma 4.4, in case 1 on the left and case 2 on the right
Let Ui be a cycle such that:
Ui 2k-dominates C.
|C|− 6k − 2 ≤ |Ui|≤ |C| + 4k
Then Ui+1 = NextCycle(Ui) has the same properties and |Ui+1| < |Ui|.
Proof. The inequalities concerning the length are straightforward given Lemma 4.2 and the fact that Ui+1 is obtained by replacing an arc of Ui with a path of smaller length.
To prove the 2k-domination, consider the path Q linking the vertices a and b of Ui as selected by the algorithm. By Lemma 3.2, one can assume w.l.o.g. that I(Q) contains Ca′,b′ and therefore 2k-dominates it. Furthermore, Lemma 4.4 implies that

Cb′,a′ is included in I(Ui
) or I(Ui
). By symmetry , assume that it is included in

a,b).

Then, I(Q ∪ Ui
) = C, and it follows that Q ∪ Ui
2k-dominates C and is of

eccentricity at most 3k. The property is verified if Ui+1 = Q ∪ Ui .

If Ui+1 = Q ∪ Ui
, Q ∪ Ui
also 3k-dominates G as it is of a lower eccentricity.

Lemma 4.4 then implies that either Ui	or Q 2k-dominates Cb′a′ , and therefore

i b,a
2k-dominates C.	2

The algorithm FirstCycle requires to compute three BFS trees, its complexity is O(m). The complexity bottleneck is testing the If condition on n2 vertex pairs in Line 3 of NextCycle. The distances dG inside G may be precomputed in O(nm) time using n BFS, while evaluating the distance dUi inside the cycle take constant time if the vertices are numbered. Testing this condition therefore takes O(n2) time. When a pair (a, b) is found the block until Line 6 takes O(m) time, using three BFS again, and is done once. Algorithm 6 (NextCycle) thus takes O(n2) time.
We know by Lemma 4.5 that the length of the cycles of the sequence Ui strictly decreases and is at least |C|−6k−2. As |U 0|≤ |C| +4k, it follows that the sequence converges after at most one execution of FirstCycle and at most 10k + 2 executions of NextCycle. Not forgetting the O(nm)-time distance precomputation, we have :










Algorithm 3: Pseudocode of the algorithm ApproximationCycle
Theorem 4.6 Let a graph with an isometric cycle of eccentricity k and of size l ≥ 32k + 7, an isometric cycle of eccentricity at most 3k may be computed in O(n(m + kn)) time.

References
Bacs´o, G., Z. Tuza and M. Voigt, Characterization of graphs dominated by induced paths, Discrete mathematics 307 (2007), pp. 822–826.
Birmel´e, E´., F. de Montgolfier, L. Planche and L. Viennot, Decomposing a graph into shortest paths with bounded eccentricity, in: 28th International Symposium on Algorithms and Computation (ISAAC), 2017, pp. 15:1–15:13.
Corneil, D. G., S. Olariu and L. Stewart, A linear time algorithm to compute a dominating path in an AT-free graph, Inf. Process. Lett. 54 (1995), pp. 253–257.
Corneil, D. G., S. Olariu and L. Stewart, Linear time algorithms for dominating pairs in asteroidal triple-free graphs, SIAM J. Comput. 28 (1999), pp. 1284–1297.
Deogun, J. S. and D. Kratsch, Dominating pair graphs, SIAM Journal on Discrete Mathematics 15
(2002), pp. 353–366.
Dragan, F. F. and A. Leitert, On the minimum eccentricity shortest path problem, Theoretical Computer Science 694 (2017), pp. 66 – 78.
Lokshtanov, D., Finding the longest isometric cycle in a graph, Discrete Applied Mathematics 157
(2009), pp. 2670–2674.
Robertson, N. and P. D. Seymour, Graph minors. I. Excluding a forest, Journal of Combinatorial Theory, Series B 35 (1983), pp. 39–61.
