Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 338 (2018) 167–184
www.elsevier.com/locate/entcs
Hierarchical Hybrid Logic
Alexandre Madeira
QuantaLab and HASLab INESC TEC, U. Minho CIDMA, U. Aveiro, Portugal
Renato Neves
HASLab INESC TEC, U. Minho
Manuel A. Martins
CIDMA, U. Aveiro, Portugal
Lu´ıs S. Barbosa
QuantaLab and HASLab INESC TEC, U. Minho

Abstract
We introduce HHL, a hierarchical variant of hybrid logic. We study first order correspondence results and prove a Hennessy-Milner like theorem relating (hierarchical) bisimulation and modal equivalence for HHL. Combining hierarchical transition structures with the ability to refer to specific states at different levels, this logic seems suitable to express and verify properties of hierarchical transition systems, a pervasive semantic structure in Computer Science.
Keywords: Hybrid logic, Hierarchical systems.

Introduction
From D. Harel’s statecharts [6] to the mobile ambients [4] proposed by A. Gordon and L. Cardelli, models of hierarchical systems are pervasive in Computer Science. In practice, hierarchical, multi-level transitions often coexist with local ones. The ability to represent both and reason uniformly about them is essential to such models, for example in specific applications such as coordination protocols in the context of distributed systems [1], or to handle software which operates in different modes of execution and is able to commute between them. The global transition structure defines how such systems evolve from a mode (or configuration) to another [8].

https://doi.org/10.1016/j.entcs.2018.10.011
1571-0661/© 2018 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

This paper introduces a hierarchical variant of hybrid logic [2,3] that adds to the modal description of hierarchical transition structures the ability to refer to specific states at any level of description. As discussed by the authors in [8], hybrid logic, which allows one to refer to specific states in a system, became the specification lingua franca for reconfigurable systems. The hierarchical variant proposed here sets the ground for a uniform framework to express and verify properties of any kind of hierarchical transition system.
The paper is organised as follows: after a section on preliminaries, Section 3 introduces hierarchical hybrid logic, HHL. The relevant first-order correspondences are discussed in Section 4. Section 5 discusses bisimulation for this sort of systems and proves a Hennessy-Milner like theorem relating, under the usual conditions of image-finiteness, bisimulation and modal equivalence for HHL. Finally, Section 6 concludes and briefly discusses future work.
Hybrid logic
The qualifier hybrid [2,3] applies to extensions of modal languages with symbols, called nominals, that explicitly refer to individual states in the underlying Kripke frames. A hybrid signature is a pair (Prop, Nom), where Prop and Nom are disjoint sets of symbols of propositional variables and nominals, respectively. The set of hybrid formulas over (Prop, Nom) extends the corresponding modal language with formulas i, which only hold at the state named by i, and @iρ, which asserts that formula ρ holds in the state named by i, for i ∈ Nom. Formally, the set of formulas, denoted by FmHL(Prop, Nom), is defined by the grammar


for i ∈ Nom and p ∈ Prop.
ρ ∶∶= p ∣ i ∣ @iρ ∣
ρ ∣ ¬ρ ∣ ρ ∧ ρ,

Note that the remaining Boolean connectives and the box modality are intro- duced as abbreviations. The set BFmHL(Prop, Nom) of basic formulas is defined by
Prop ∪ Nom ∪{ ρ ∶ ρ ∈ FmHL(Prop, Nom)}
∪ {@iρ ∶ ρ ∈ FmHL(Prop, Nom),i ∈ Nom}
Note that considering the restriction of formulas to the basic ones does not reduce the expressibility power of the logic, since we get again these formulas with the boolean connectives in the upper level (cf. Definition 3).
Models of HL for a signature (Prop, Nom) are Kripke structures with named states, i.e., structures M = (W, R, V ) where W is a set of states, R ⊆ W × W is the accessibility relation, and V ∶ Prop ∪ Nom → P(W ) is a function that interprets propositions and nominals, such that for any i ∈ Nom, V (i) is a singleton. The set of all models over a signature (Prop, Nom) is denoted by ModHL(Prop, Nom).
The satisfaction relation between a model M = (W, R, V ) in ModHL(Prop, Nom) and a formula ρ ∈ FmHL(Prop, Nom) at state w ∈ W , is recursively defined as

follows:
M, w ⊧HL ρ iff w ∈ V (ρ), ρ ∈ Nom ∪ Prop;
M, w ⊧HL @iϕ iff M, V (i) ⊧HL ϕ;
M, w ⊧HL  ϕ iff there is a v ∈ W such that (w, v)∈ R and M, v ⊧HL ϕ;
M, w ⊧HL ¬ϕ iff it is false that M, w ⊧HL ϕ (in symbols, M, w ⊧/HL ϕ);
M, w ⊧HL ϕ ∧ ϕ′ iff M, w ⊧HL ϕ and M, w ⊧HL ϕ′.
As usual, we write M ⊧HL ρ when, for any w ∈ W , M, w ⊧HL ρ, and ⊧HL ρ when
M ⊧HL ρ for all M ∈ ModHL(Prop, Nom).
Applications often justify the introduction of a distinguished state in the un- derlying Kripke structure, regarded as the initial point of evaluation. As discussed in the sequel, such is the case of hierarchical transition systems representing soft- ware configurations: each configuration ‘starts’ at a specific entry point, or initial state. Models for such pointed versions of HL are pairs ((W, R, V ), s) where s ∈ W .
Accordingly, the satisfaction relation is defined by
((W, R, V ), s)⊧ ρ iff (W, R, V ),s ⊧HL ρ . 



Hierarchical hybrid logic
A signature in hierarchical hybrid logic, HHL-signature in short, is a tuple (Prop, Nom, PROP, NOM) where Prop, Nom, PROP and NOM are four disjoint sets of propositions and nominals corresponding to the two levels of assertion, called the ‘lower’ and the ‘upper’ level, respectively.
The set of formulas for a signature (Prop, Nom, PROP, NOM) is organised in a two-levels hierarchy.
Definition 3.1 (HHL-formulas) Let Δ = (Prop, Nom, PROP, NOM) be a HHL- signature. The set FmHHL(Δ) of HHL-formulas is the smallest set such that:
BFmHL(Prop, Nom)⊆ FmHHL(Δ);
PROP ⊆ FmHHL(Δ);
NOM ⊆ FmHHL(Δ);
@ ρ ∈ FmHHL(Δ), for any  ∈ NOM and ρ ∈ FmHHL(Δ);
ρ ∈ FmHHL(Δ), for any ρ ∈ FmHHL(Δ);
¬ρ ∈ FmHHL(Δ), for any ρ ∈ FmHHL(Δ);
ρ ∧ ρ′ ∈ FmHHL(Δ), for any ρ, ρ′ ∈ FmHHL(Δ).
As usual, Boolean connectives and the box modality are defined by abbreviation.
Note also that FmHL(Prop, Nom)⊆ FmHHL(Δ).
Definition 3.2 (HHL-models) Let Δ = (Prop, Nom, PROP, NOM) be a HHL

signature. A Kripke Δ-model is a tuple
M = (W, R, V, (Mw)w∈W ),
where
W is a non empty set of the so called upper, or super, states;
R ⊆ W × W is a binary relation called the upper accessibility relation;
V ∶ PROP ∪ NOM → P(W ) is a function where, for any  ∈ NOM, V () is a singleton. When it is implicitly clear, the element w ∈ V () will be identiﬁed as the set V () itself.
For any w ∈ W, Mw is a HL-pointed model Mw = (Hw, sw), where Hw = (Ww, Rw, Vw)∈ ModHL(Prop, Nom) and sw ∈ Ww.

Fig. 1. An almost trivial HHL model.

Definition 3.3 (HHL-Satisfaction) Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature and M = (W, R, V, (Mw)w∈W ) be a Δ-model. The satisfaction rela- tion between formulas, models and points is recursively deﬁned as follows:
M, w ⊧ ρ iff Hw, sw ⊧HL ρ, for ρ ∈ BFmHL(Prop, Nom);
M, w ⊧  iff w ∈ V (), for  ∈ PROP;
M, w ⊧  iff V ()= {w}, for  ∈ NOM;
M, w ⊧ @ρ iff M, V ()⊧ ρ;
M, w ⊧  ρ iff there is a w′ ∈ W such that (w, w′)∈ R and M, w′ ⊧ ρ;
M, w ⊧ ¬ρ iff it is not the case that M, w ⊧ ρ;
M, w ⊧ ρ ∧ ρ′ iff M, w ⊧ ρ and M, w ⊧ ρ′
As in the standard case we write M ⊧ ρ when, for any w ∈ W , M, w ⊧ ρ, and ⊧ ρ when M ⊧ ρ for all M ∈ ModHHL(Δ). These definitions extend to sets of formulas as expected. Finally, for Γ ∪ {ρ}⊆ FmHHL(Δ), ρ is said to be a global consequence of Γ, Γ ⊧ ρ, if for any model M ∈ ModHHL(Δ), M ⊧ Γ implies M ⊧ ρ.
First-order correspondences
As usual in the introduction of a modal language, this section discusses how for- mulas in hierarchical hybrid logic can be transformed into first-order ones. This is done through the introduction of two possible correspondences: the first one follows the well-known recipe used in the standard translation of modal logic; the second

entails a different, less common perspective taking explicitly into account definabil- ity in each possible world, in other words, by defining which substates belong to a superstate. Beyond the theoretical interest of these correspondences, they pave the way to the effective use of a number of proof assistants.

The standard translation

Definition 4.1 Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature. We de- fine the two-sorted first-order signature Δ∗ = (S, F, P ) as follows:
the set of sorts S = {W, U }, where W is the sort of super-states and U the sort of sub-states.
the set of operation symbols F = {i ∶ W → U ∣ i ∈ Nom} ∪ {  ∶ → W ∣  ∈
NOM}∪ {Init ∶ W → U };
the set of predicate symbols P = {R ∶ W × W, r ∶ W × U × U, Sub ∶ W × U }∪ {p ∶
W × U ∣ p ∈ Prop}∪ { ∶ W ∣  ∈ PROP}.

The purpose of operation symbol Sub is to explicitly relate (sub)states to super- states, defining the inhabitants of each possible super-state. Although this con- struction is not required for defining the standard translation, it plays a role in the alternative translation introduced in the next section.
Definition 4.2 Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature. Given a model M = (W, R, (Mw)w∈W ,V ) ∈ Mod(Δ), we define the model M ∗ as follows:
sorts are realized by the carrier sets M ∗ = W and M ∗ = ⋃w∈W Ww. The definition
for functions and predicates, respectively, is given by
M ∗(w)= Vw(i) for i ∈ Nom
M ∗ = V ( ) for  ∈ NOM

∗
Init
= sw

M ∗(w, w′) iff (w, w′)∈ R
M ∗(w, u, v) iff (u, v)∈ Rw

∗
Sub
(w, u) iff u ∈ Ww

M ∗(w, u) iff u ∈ Vw(p),p ∈ Prop
M ∗(w) iff w ∈ V ( ), ∈ PROP Finally, we obtain the translation of formulas as follows:
Definition 4.3 [Standard translation] The standard translation ST consists of the map
ST ∶ FmHHL(Δ) —→ FmFOL(Δ∗)
recursively defined as follows:


Notation ST ,Init( )(ρ) is used for STX,u(ρ)[X ↦ ,u ↦ Init( )], when clear from context.
Lemma 4.4 Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature and M = (W, R, (Mw)w∈W ,V ) a Δ-model and ρ ∈ FmHL(Prop, Nom). Then, for any w ∈ W, z ∈ Hw,
Hw,z ⊧HL ρ iff M ∗ ⊧FOL STX,u(ρ)[X ↦ w, u ↦ z]
where Mw = (Hw, sw).
Proof. By induction on the structure of formulas.
for ρ = p, p ∈ Prop
Hw,z ⊧HL p
{defn. of ⊧HL}
z ∈ Vw(p)
{defn. of M ∗ and z ∈ Ww }
M ∗(w, z)
{defn of ⊧FOL}
M ∗ ⊧FOL p(X, u)[X ↦ w, u ↦ z]
{defn of ST}
M ∗ ⊧FOL STX,u(p)[X ↦ w, u ↦ z]
for ρ = i, i ∈ Nom
Hw,z ⊧HL i
{defn. of ⊧HL}
z = Vw(i)

{defn. of M ∗}
M ∗(w)= z
{defn of ⊧FOL}
M ∗ ⊧FOL i(X)= u[X ↦ w, u ↦ z]
{defn of ST}
M ∗ ⊧FOL STX,u(i)[X ↦ w, u ↦ z]
for ρ = @iϕ, i ∈ Nom
Hw,z ⊧HL @iϕ
{defn. of ⊧HL}
Hw, Vw(i) ⊧HL ϕ
-	{I.H.}
M ∗ ⊧FOL STX,u(ϕ)[X ↦ w, u ↦ Vw(i)]
{since Vw (i) = M ∗(w)}
M ∗ ⊧FOL STX,i(X)(ϕ)[X ↦ w, u ↦ z]
{defn of ST}
M ∗ ⊧FOL STX,u(@iϕ)[X ↦ w, u ↦ z]
for ρ = ϕ
Hw,z ⊧HL  ϕ
{defn. of ⊧HL}
Hw,v ⊧HL ϕ, for some v ∈ Ww such that (z, v)∈ Rw
{I.H + defn of M ∗}
M ∗ ⊧FOL STX,u(ϕ)[X ↦ w, u ↦ v]
for some v such that M ∗(w, z, v)
{defn of ⊧FOL}
M ∗ ⊧FOL (∃v) r(X, u, v)∧ STX,v(ϕ)[X ↦ w, u ↦ z]
{defn of ST}
M ∗ ⊧FOL STX,u( ϕ)[X ↦ w, u ↦ z]
The cases dealing with conjunction and negation follow directly from the induction hypothesis.	◻

Theorem 4.5 Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature, M = (W, R, (Mw)w∈W ,V ) a Δ-model and ρ ∈ FmHHL(Δ). Then, for w ∈ W,
M, w ⊧ ρ iff M ∗ ⊧FOL STX,u(ρ)[X ↦ w, u ↦ M ∗ (w)]
Proof. The proof proceeds by induction on the structure of formulas. Thus,

for ρ ∈ BFmHL(Prop, Nom)
M, w ⊧ ρ
{defn. of ⊧}
Hw, sw ⊧HL ρ
{since M ∗  (w) = sw and Lemma 4.4}
M ∗ ⊧FOL STX,u(ρ)[X ↦ w, u ↦ M ∗  (w)]

for ρ = @ ϕ,  ∈ NOM
M, w ⊧ @ ϕ
{defn. of ⊧}
M, V ( )⊧ ϕ
-	{I.H. }
M ∗ ⊧FOL ST ,u(ϕ)[X ↦ w, u ↦ M ∗






(V ( ))]

{since V ( ) = M ∗}
M ∗ ⊧FOL ST ,Init( )(ϕ)
{defn. of ST}
M ∗ ⊧FOL STX,u(@ ϕ)[X ↦ w, u ↦ M ∗




(w)]

for ρ = ϕ
M, w ⊧  ϕ
{defn. of ⊧}
M, w′ ⊧ ϕ, for some w′ ∈ W such that R(w, w′)
{I.H. + defn. of M ∗}
M ∗ ⊧FOL STY,v(ϕ)[X ↦ w′,u ↦ M ∗  (w′)], for some w′ ∈ W with M ∗(w, w′)
{defn. of ⊧FOL}
M ∗ ⊧FOL (∃Y ∶ W )R(X, Y )∧ STY,Init(Y )(ϕ)[X ↦ w]
{defn. of ST}

M ∗ ⊧FOL STX,u(
ϕ)[X ↦ w, u ↦ M ∗
(w)]

Again, the cases dealing with conjunction and negation follow directly from the induction hypothesis.	◻

A different perspective
As mentioned above, an alternative translation, not standard in modal logic, will be considered now.
Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature. Then ModFOL(Δ∗) denotes the class of all models of M ∈ Mod(Δ∗) such that for each w ∈ W , MInit(w) and Mi(w), for any nominal i, belong to the universe associated to w, that is MSub(w, MInit(w)) and MSub(w, Mi(w)) for any nominal i. If Nom is finite, we

denote the formula
(∀X ∶ W )(Sub(X, Init(X)) ∧  ⋀
i∈Nom


Sub(X, i(X)))

by D(Δ). And we have, ModFOL(Δ∗)= {M ∈ Mod(Δ∗)∣ M ⊧FOL D(Δ)}.
In what follows in this section we will assume that Nom is finite. Note also that we are allowing that different local models, Ww1 and Ww2 , may have elements in common.
Definition 4.6 Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature. The op- erator
∶ ModFOL(Δ∗)→ ModHHL(Δ)
is defined as follows: given a model M ∈ ModFOL(Δ∗), we construct the model
M ○ = (W ○, R○, (M ○ )w∈W ○ ,V ○) as follows:
W ○ = MW
R○ = MR
for any  ∈ PROP, V ○( )= M 
for any  ∈ NOM, V ○( )= {M }
and for any w ∈ W ○, M ○ = (H○ , s○ ) where H○ = (W ○ , R○ ,V ○) is such that

w	w	w
W ○ = {a ∣ MSub(w, a)}
w	w	w	w

○ = {(a, b)∣ Mr(w, a, b) and MSub(w, a) and MSub(w, b)}
for any p ∈ Prop, V ○(p)= {a ∣ Mp(w, a) and MSub(w, a)}
for any i ∈ Nom, V ○(i)= Mi(w)
○ = MInit(w)
Observe the role of D(Δ) in asserting the definability of the local valuations Vw with respect to its functionality over Nom, as well as with respect to definability of the (local) initial states. In order to obtain a translation that is compatible with the operator ○ the standard translation defined above has to be constrained, leading to the following definition:
Definition 4.7 [(constrained) standard translation]

○
X,u
○
X,u
(p)	= Sub(X, u)∧ p(X, u), p ∈ Prop
(i)	= Sub(X, u)∧ u = i(X), i ∈ Nom

○
X,u
ρ) = (∃v ∶ U )(Sub(X, v)∧ r(X, u, v)∧ ST○
(ρ)), ρ ∈ FmHL(Prop, Nom)

and it is defined as in ST for the remaining cases.
Since we will require that our FOL-models satisfy D(Δ), we may omit the
condition Sub(X, u) in ST○	(i).
Lemma 4.8 Let Δ =  (Prop, Nom, PROP, NOM) be a HHL-signature, M  ∈

ModFOL(Δ∗) and ρ ∈ FmHL(Prop, Nom). Then, for any w ∈ W ○ and z ∈ H○ ,
D	w
H○ ,z ⊧HL ρ iff M ⊧FOL ST○	(ρ)[X ↦ w, u ↦ z]
Proof. The proof is by induction on the structure of formulas. Thus,
for ρ = p, p ∈ Prop

M ⊧FOL ST○
(p)[X ↦ w, u ↦ z]

{defn. of ST○}
M ⊧FOL (Sub(X, u)∧ p(X, u))[X ↦ w, u ↦ z]
{defn. of ⊧}
MSub(w, z) and Mp(w, z)
{ defn. of M ○}
z ∈ V ○(p)
{defn. of ⊧HL}
H○ ,z ⊧HL p
for ρ = i, i ∈ Nom

M ⊧FOL ST○
(i)[X ↦ w, u ↦ z]

{defn. of ST○}
M ⊧FOL (Sub(X, u)∧ u = i(x))[X ↦ w, u ↦ z]
{defn. of ⊧}
MSub(w, z) and z = Mi(w))
{defn. of M ○}
z = V ○(i)
{defn. of ⊧HL}
H○ ,z ⊧HL p
for ρ = @iϕ, i ∈ Nom

M ⊧FOL ST○
(@iϕ)[X ↦ w, u ↦ z]

{defn. of ST○}
FOL	○
X,i(X)
{substitution}

(ϕ)[X ↦ w, u ↦ z]

M ⊧FOL ST○
(ϕ)[X ↦ w, u ↦ Mi(w)]

-	{ I.H.}
H○ , Mi(w) ⊧HL ϕ
{defn. of ⊧HL}
H○ ,z ⊧HL @iϕ

for ρ =
ϕ
M ⊧FOL ST○

( ϕ)[X ↦ w, u ↦ z]

{defn. of ST○}
M ⊧FOL (∃v ∶ U )(Sub(X, v)∧ r(X, u, v)∧ ST○

(ϕ))[X ↦ w, u ↦ z]

{defn. of ⊧}
there is a ∈ MU such that MSub(w, a) and Mr(w, z, a) and

M ⊧FOL ST○
(ϕ)[X ↦ w, v ↦ a]

-	{I.H.}
H○ ,a ⊧HL ϕ, for some a ∈ MU such that MSub(w, a) and Mr(w, z, a)
{by def. of ⊧HL}
H○ ,z ⊧HL  ϕ	◻
Theorem 4.9 Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature, M  ∈
ModFOL(Δ∗) and ρ ∈ FmHHL(Δ). Then, for every w ∈ W
M ○,w ⊧ ρ iff M ⊧FOL ST○	(ρ)[X ↦ w, u ↦ MInit(w)]
Proof.
for ρ ∈ BFmHL(Prop, Nom)

M ⊧FOL ST○
(ρ)[X ↦ w, u ↦ MInit(w)]

{Lemma 4.8 }

H○ , s○
⊧HL ρ

{defn. of ⊧}
M ○,w ⊧ ρ
for ρ = @ ϕ,  ∈ NOM
M ⊧FOL ST○



(@ ϕ)[X ↦ w, u ↦ MInit(w)]

{defn. of ST○}
M ⊧FOL STX,u(ϕ)[X ↦  ,u ↦ Init( )]
-	{I.H.}
M ○,  ⊧ ϕ
{defn. of ⊧}
M ○,w ⊧ @ ϕ

for ρ =
ϕ
M ⊧FOL ST○

( ϕ)[X ↦ w, u ↦ MInit(w)]

{defn. of ST○}
M ⊧FOL (∃Y ∶ W )R(X, Y )∧ ST○

(ϕ))[X ↦ w, u ↦ MInit(w)]

{defn. of ⊧}
there is w′ ∈ MW st MR(w, w′) and

FOL	○
Y,Init(Y )
{substitution}
(ϕ))[Y ↦ w′,u ↦ MInit(w)]

there is w′ ∈ MW st MR(w, w′) and

M ⊧FOL ST○
(ϕ))[Y ↦ w′,u ↦ MInit(w′)]

-	{I.H.}
there is w′ ∈ MW st MR(w, w′) and M ○, w′ ⊧ ϕ
{defn. of ⊧HL}
M ○,w ⊧  ϕ
The cases of conjunction and negation are dealt similarly, easily achieved by direct application of induction hypothesis.	◻
The operator ○ is not in general injective. However it is surjective. Actually, the surjectivity of ○ together with previous theorem guarantees that to prove that a modal formula is valid, it is enough to show that its translation is a valid FOL formula. This is a very useful property, since it allows us to use FOL theorem provers (well developed) to check modal validities. Moreover, given an M ∈ ModHHL(Δ) it is not difficult to see that M = (M ∗)○, and M ∗ ∈ ModFOL(Δ∗).
Corollary 4.10 Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature with ﬁ- nite sets Nom and NOM. Then, for any Γ ∪ {ρ}⊆ FmHHL(Δ), we have
Γ ⊧ ρ iff Γ∗ ∪ D(Δ) ⊧FOL (∀X ∶ W ) ST○	(ρ)
where Γ∗ = {(∀X ∶ W ), ST○	(ρ)∣ ρ ∈ Γ}.
Proof. Suppose that Γ ⊧ ρ. Let M be a Δ∗ first order model of Γ∗ ∪ D(Δ). Then, by Theorem 4.9, M ○ ⊧HL Γ. Hence, M ○ ⊧HL ρ. That is, for all w ∈ W M ○,w ⊧HL ρ. Again, by Theorem 4.9 (in the opposite direction), M ⊧FOL (∀X ∶

○
X,Init(X)
(ρ).

Conversely, suppose Γ∗ ∪ D(Δ) ⊧FOL (∀X ∶ W )ST○	(ρ). Let N be a Δ-
model such that N ⊧ Γ. Since ○ is surjective there is an M ∈ ModFOL(Δ∗) such that N = M ○. Since N ⊧ Γ, by Theorem 4.9, M is a model of Γ∗ ∪ D(Δ). Therefore
M ⊧FOL (∀X ∶ W ) ST○	(ρ). Again, by Theorem 4.9, M ○ = N ⊧ ρ.	◻
Hennessy-Milner Theorem for HHL
Bisimulation is a main tool for the study of transition systems which, on their turn, are pervasive structures in computational phenomena. It is also a good example of the fruitful interaction between modal logic and Computer science. This section characterises a notion of hierarchical bisimulation for models of HHL and proves

a corresponding Hennessy-Milner result relating hybrid equivalence between two models with the existence of a bisimulation relating them.
Definition 5.1 Let Δ = (Prop, Nom, PROP, NOM) be a HHL-signature. An hierarchical bisimulation between two Δ-models M = (W, R, (Mw)w∈W ,V ) and M ′ = (W ′, R′, (M ′ )w∈W ′ ,V ′) consists of a relation  ⊆ W × W ′ such that,
(NOM) for any  ∈ NOM, V ()  V ′()
- for any w ∈ W, w′ ∈ W ′, w  w′ implies:
(ATOMS) for any  ∈ PROP ∪ NOM, w ∈ V () iff w′ ∈ V ′();
(ZIG) for any v ∈ W such that (w, v) ∈ R there is a v′ ∈ W ′ such that v v′ and
(w′, v′)∈ R′;
(ZAG) for any v′ ∈ W ′ such that (w′, v′) ∈ R′ there is a v ∈ W such that v v′
and (w, v)∈ R.
(LOCAL) Mw and M ′ ′ are bisimilar, i.e., there is a relation B w′  ∶ Hw × Hw′
w	w
such that
(init) sw B w′ s′ ′ ;
w  w
(nom) for any i ∈ Nom, Vw(i) B w′ V ′ ′ (i);
- for any u ∈ Hw, u′ ∈ H′ such that u B w′ u′,
(atoms) for any p ∈ Prop ∪ Nom, u ∈ Vw(p) iff u′ ∈ V ′ ′ (p);
(zig) for any v ∈ Hw such that (u, v)∈ Rw there is a v′ ∈ H′ ′ such that v B w′ v′
w	w
and (u′, v′)∈ R′ ′ ;
(zag) for any v′ ∈ H′ ′ such that (u′, v′) ∈ R′ ′ there is a v ∈ Hw such that
w	w
v B w′ v′ and (u, v)∈ Rw.
An example in depicted in Fig. 2. The reader may easily notice the existence of local bisimulations relating the transition systems inside each of the two states of the system in the left with the one in the right, plus a global bisimulation relating precisely those (global) states.


Fig. 2. A HHL-bisimulation.

Lemma 5.2 Let M and M ′ be two HHL-models over the same signature. The set of hierarchical bisimulations between M and M ′ is closed under unions.
Proof. Let  1, 2 ⊆ ∣W ∣× ∣W ′∣ be two bisimulations between models M and M ′. Their union  =  1 ∪ 2 is also an hierarchical bisimulation because
Clearly, all points named by nominals are related by  as they are related both by  1 and  2. Moreover, for any pair (w, w′) such that w  w′ either w  1w′

or w  2w′. As both  1 and  2 are hierarchical bisimulations, clauses of (i.) in Definition. 5.1 hold for  .
A similar argument applies to both (ZIG) and (ZAG) conditions. For clause (iv) let (w, v) ∈ R and w w′. Then, either w 1w′ or w 2w′. Since, 1 and 2 are bisimulations, we have that there is a v′ ∈ W ′ such that v 1v′ or v 2v′. Hence v v′. The condition (ZAG) condition is proved similarly.
◻
Similarly, one may prove that hierarchical bisimulations are closed for compo- sition as well. Bisimulation invariance is, on the other hand, a main, expected result.
Theorem 5.3 (Bisimulation invariance) Let M and M ′ be two HHL-models over the same signature Δ = (Prop, Nom, PROP, NOM) and  a bisimulation be- tween them. Then, for any w w′ and for any ρ ∈ FmHHL(Δ),
M, w ⊧ ρ iff M ′, w′ ⊧ ρ
Proof. The proof is by induction on the structure of the sentences.
ρ ∈ BFmHL(Prop, Nom)
M, w ⊧ ρ
-	{defn. of ⊧}
(Hw, sw) ⊧HL ρ
-	{⋆}
(H′ ′ , s′ ′ ) ⊧HL ρ
-	{defn. of ⊧}
M ′, w′ ⊧ ρ
Step ⋆ comes from the (init) clause in Definition 5.1, sw B w′ sw′ , and the stan- dard bisimulation invariance of (propositional)-hybrid logic (e.g. [14]). However, this proof can be achieved in a complete analogy with the (top-level) cases proved above. For instance, in order to proof the invariance of ρ = i, for i ∈ Nom, we take the bisimilar initial states sw and s′ ′ (by (init)) and we reproduce exactly the same steps of the ρ =  proof, but considering the condition (nom) in the place of (NOM). The other cases are obtained exactly in the same way.
ρ =  ,  ∈ NOM
M, w ⊧ 
{defn. of ⊧}
V ( )= w
{ATOMS of Defn. 5.1}
V ′( )= w′
{defn. of ⊧}

M ′, w′ ⊧ 
ρ =  ,  ∈ PROP
M, w ⊧ 
{defn. of ⊧}
w ∈ V ( )
{ATOMS of Defn. 5.1}
w′ ∈ V ′( )
{defn. of ⊧}
M ′, w′ ⊧ 
ρ = @ ϕ
M, w ⊧ @ ϕ
{defn. of ⊧}
M, V ( )⊧ ϕ
{I.H. + NOM of Defn. 5.1}
M ′,V ′( )⊧ ϕ
{defn. of ⊧}
M ′, w′ ⊧ @ ϕ
ρ = ϕ
M, w ⊧  ϕ
{defn. of ⊧}
M, v ⊧ ϕ for some v ∈ W such that (w, v)∈ R
{I.H. + ZIG for ⇒ + ZAG for ⇐ }
M ′, v′ ⊧ ϕ for some v′ ∈ W ′ such that (w′, v′)∈ R′
{defn. of ⊧}
M ′, w′ ⊧  ϕ	◻
A HHL-model M is image-ﬁnite if for each state w ∈ W , the set {v ∶ (w, v)∈ R} and the sets {v ∶ (u, v) ∈ Rw,w ∈ W }, u ∈ Ww, are finite. Note that no condition is imposed on the cardinality of W .
Theorem 5.4 Let Δ be a HHL-signature and M and M ′ two image-finite Δ- models, respectively. Then, for every w ∈ W and w′ ∈ W ′, the following conditions are equivalent:
M, w ⊧ ρ iff M ′, w′ ⊧ ρ, for any formula ρ ∈ FmHHL(Δ)
There is a bisimulation   between M and M ′ such that w  w′.
Proof. We have just to prove that (i) implies (ii). Let us show that
  = {(w, w′)∈ W × W ′ ∶ for any ρ ∈ FmHHL(Δ), M,w ⊧ ρ iff M ′, w′ ⊧ ρ}

is a bisimulation. The conditions (ATOM) and (NOM) follow directly from the invariance of the sentences ρ ∈ NOM ∪ PROP. Since the image-finitness of HHL- models entails the image-finitness of its local Mw,w ∈ W , we have that the condition (ATOMS) corresponds to the standard Hennessy-Milner result of the propositional hybrid logic (e.g. [14]).
For the (ZIG) condition, assume that w  w′ and let u ∈ W such that (w, u)∈ R. To obtain a contradiction, suppose that there is no u′ ∈ W ′ with (w′, u′) ∈ R′ and u  u′. As in the standard case the image-finite condition makes S′ = {u′ ∶ (w′, u′) ∈ 
R′} finite. Moreover, S′ cannot be empty since in such a case M, w ⊧ ¬	(@  ),
which is incompatible with the fact that M, w ⊧	(@  ) (since (w, u) ∈ R). By
assumption, for every z ∈ S′ there isa formula ψz such that M, u ⊧ ψz and it is false that M ′,z ⊧ ψz. Consider now the conjunction
ψ = ⋀ ψz
z∈S′
of all of these formulas. Hence, we have that M, w ⊧	ψ and M ′, w′ ⊧/	ψ, which
contradicts w w′.	◻

Discussion and future work
In this paper we introduced HHL – a hierarchical variant of hybrid logic. We pre- sented first order correspondence results and proved a Hennessy-Milner like theorem relating (hierarchical) bisimulation and modal equivalence for HHL.
On the more practical side, it is clear that HHL is appropriate to reason about hierarchical transition systems, as they appear in, e.g. reconfigurable programs. The logic, however, is unable to express arbitrary multi-level transitions, thus enforcing a particular specification discipline. Actually, there are some variants (e.g. [9]) whose motivation stems directly from Computer Science applications which may require more complex features. For example, statecharts, already mentioned in the Introduction, comprise different forms of inter-level transitions, including multiple- source and multiple-target ones as well as simultaneous firing of non-conflicting transitions and their prioritisation, which cannot be captured in HHL.
The process of constructing HHL on top of standard propositional hybrid logic can be made generic through hybridisation, a procedure introduced in [12] that consists of taking an arbitrary logic and to systematically develop on top of it the syntax and semantic features of hybrid logic. To be completely general, this is framed in the context of the institution theory of Goguen and Burstall [5], each logic (base and hybridised) being treated abstractly as an institution. Actually, HHL can be obtained through hybridisation of propositional hybrid logic. The latter, however, can be replaced by other logics resulting from the same process being applied to whatever logics are found interesting to specify configurations (states) at the lower level of the hierarchy — e.g., equational, first-order, fuzzy, etc. The application of this idea on the rigorous development of reconfigurable systems was discussed in [7,10,11].

Concerning strictly logical properties, we would like to discuss decidability and completeness properties of HHL. For this reason, we intend to explore, among other things, the finite model property for this logic, as well complete proof calculi, resorting to our previous work [13].
Acknowledgement
This work was supported by ERDF European Regional Development Fund, through the COMPETE Programme, and by National Funds through FCT
- Portuguese Foundation for Science and Technology - within projects POCI-01-0145-FEDER-016692 and UID/MAT/04106/2013, as well by project “SmartEGOV: Harnessing EGOV for Smart Governance (Foundations, Methods, Tools) / NORTE-01-0145-FEDER-000037”, supported by Norte Portugal Regional Operational Programme (NORTE 2020), under the PORTUGAL 2020 Partnership Agreement. A. Madeira and R. Neves are further supported by the FCT individual grants SFRH/BPD/103004/2014 and SFRH/BD/52234/2013 respectively.

References
Richard Banach, Farhad Arbab, George A. Papadopoulos, and John R. W. Glauert. A multiply hierarchical automaton semantics for the iwim coordination model. J. UCS, 9(1):2–33, 2003.
Patrick Blackburn. Representation, reasoning, and relational structures: a hybrid logic manifesto. Logic Journal of IGPL, 8(3):339–365, 2000.
Torben Brau¨ner. Hybrid Logic and its Proof-Theory. Applied Logic Series. Springer, 2010.
Luca Cardelli and Andrew D. Gordon. Mobile ambients. In Maurice Nivat, editor, Foundations of Software Science and Computation Structure, First International Conference, FoSSaCS’98, Lisbon, Portugal, March 28 - April 4, 1998, Proceedings, volume 1378 of Lecture Notes in Computer Science, pages 140–155. Springer, 1998.
Joseph A. Goguen and Rod M. Burstall. Institutions: Abstract model theory for specification and programming. J. ACM, 39(1):95–146, 1992.
David Harel. Statecharts: A visual formalism for complex systems. Sci. Comput. Program., 8(3):231– 274, 1987.
Alexandre Madeira. Foundations and techniques for software reconfigurability. PhD thesis, Universidades do Minho, Aveiro and Porto (Joint MAP-i Doctoral Programme), July 2013.
Alexandre Madeira, Jos´e M. Faria, Manuel A. Martins, and Lu´ıs Soares Barbosa. Hybrid specification of reactive systems: An institutional approach. In G. Barthe, A. Pardo, and G. Schneider, editors, Software Engineering and Formal Methods (SEFM 2011, Montevideo, Uruguay, November 14-18, 2011), volume 7041 of Lecture Notes in Computer Science, pages 269–285. Springer, 2011.
Alexandre Madeira, Manuel A. Martins, and Lu´ıs Soares Barbosa. A logic for n-dimensional hierarchical refinement. In John Derrick, Eerke A. Boiten, and Steve Reeves, editors, Proceedings 17th International Workshop on Refinement, Refine@FM 2015, Oslo, Norway, 22nd June 2015., volume 209 of EPTCS, pages 40–56, 2015.
Alexandre Madeira, Manuel A. Martins, Lu´ıs Soares Barbosa, and Rolf Hennicker. Refinement in hybridised institutions. Formal Asp. Comput., 27(2):375–395, 2015.
Alexandre Madeira, Renato Neves, Lu´ıs Soares Barbosa, and Manuel A. Martins. A method for rigorous design of reconfigurable systems. Sci. Comput. Program., 132:50–76, 2016.
Manuel A. Martins, Alexandre Madeira, R˘azvan Diaconescu, and Lu´ıs Soares Barbosa. Hybridization of institutions. In A. Corradini, B. Klin, and C. Cˆırstea, editors, Algebra and Coalgebra in Computer Science (CALCO 2011, Winchester, UK, August 30 - September 2, 2011), volume 6859 of Lecture Notes in Computer Science, pages 283–297. Springer, 2011.

Renato Neves, Alexandre Madeira, Manuel A. Martins, and Lu´ıs Soares Barbosa. Proof theory for hybrid(ised) logics. Sci. Comput. Program., 126:73–93, 2016.
Balder David ten Cate. Model Theory for Extended Modal Languages. PhD thesis, Institute for Logic, Language and Computation Universiteit van Amsterdam, 2005.
