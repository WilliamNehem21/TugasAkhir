Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 323 (2016) 3–19
www.elsevier.com/locate/entcs
Normalization of N-Graphs via Sub-N-Graphs
La´ıs Andradea,1 Ruan Carvalhob,2 Anjolina de Oliveiraa,3 Ruy de Queiroza,4
a Centro de Inform´atica Universidade Federal de Pernambuco Recife, Brazil
b Depto. de Estat´ıstica e Inform´atica Universidade Federal Rural de Pernambuco Recife, Brazil

Abstract
Alves presented in his PhD thesis a normalization procedure for N-Graphs, a multiple conclusion natural deduction for propositional classical logic proposed by de Oliveira in 2001, with proofs as directed graphs. Here we develop a new normalization for N-Graphs inspired by A. Carbones work in 1999, where she proposed a combinatorial model to study the evolution of proofs during the procedure of cut elimination.
Keywords: N-Graphs, Normalization, Directed graphs, Duplication


Introduction
Whenever one is concerned with the study of proofs from a geometric perspective one can hardly overestimate the pioneering work of Statman in his doctoral the- sis Structural Complexity of Proofs [19]. Drawing on Statman’s legacy, for the last three decades at least two research programmes have approached the study of structural properties of formal proofs from a geometric perspective: (i) the notion of proof-net, given by Girard in [12] in the context of linear logic; and (ii) the no- tion of logical flow graph given by Buss in [6] and used as a tool for studying the exponential blow up of proof sizes caused by the cut-elimination process, in this case giving rise to a programme (1996–2000) proposed by Carbone in collaboration with Semmes [7]. Statman’s geometric perspective has given an important legacy,

1 Email: lsa@cin.ufpe.br
2 Email: rvbc@deinfo.ufrpe.br
3 Email: ago@cin.ufpe.br
4 Email: ruy@cin.ufpe.br

http://dx.doi.org/10.1016/j.entcs.2016.06.002
1571-0661/© 2016 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

namely the idea of extracting structural properties of proofs in natural deduction (ND) using appropriate geometric tools and intuitions. The lack of symmetry in ND presents a challenge for such a kind of study. Of course, the obvious alternative is to look at multiple-conclusion calculi. One can find in the literature different ap- proaches involving such calculi, such as, for example, Kneale’s tables of development
[13] (studied in depth by Shoesmith & Smiley [18]) and Ungar’s multiple-conclusion ND [20]. But then a great challenge remained: normal forms and the normalization procedure.
The system of N-Graphs, a multiple conclusion ND for propositional classical logic developed in the early 2000’s by de Oliveira [14] out of a combination of the techniques developed in the two aforementioned research programmes, has revealed itself as a rather appropriate framework in which to formulate and explore tech- niques for normalizing ND proofs in the form of directed graphs. N-Graphs were motivated by the idea of proofs as geometric objects and aimed towards the study of the geometry of Natural Deduction systems. Following that line of research, we propose a normalization procedure defined as a set of combinatorial operations on graphs that can offer a framework for future combinatorial studies on the proof growth during normalization. The procedure we present in this paper also works as an extension of the normalization defined by Prawitz, i.e. it enjoys the separation and subformula properties.
In her analysis of the blow-up of proof-size after cut elimination in sequent calculus proofs, Carbone defined an operation called duplication and worked with the logical flow graphs extracted from sequent calculus proofs in order to propose a purely combinatorial analysis of cut elimination [8]. Our procedure uses Alves’ original beta and permutative reductions [2], changing reductions with the link with meta-edge. A new set of switchable reductions is presented, combined with an adaptation of the duplication operation for sub-N-Graphs, to handle switchable links. As a result, this new normalization has a stronger parallel with both Prawitz’s normalization and Gentzen’s cut-elimination, offering a good start point for studies on correspondences between those two procedures, like the ones presented by Zucker
[21] and Ungar [20]. This also offers a base to extend Carbone’s results on proof growth during cut-elimination in sequents to a ND system.

N-Graphs
Proposed by de Oliveira [14,15], N-Graphs is a symmetric natural deduction (ND) calculus with the presence of structural rules, similar to the sequent calculus. It is a multiple conclusion proof system for classical logic where proofs are built in the form of directed graphs (“digraphs”). Several studies have been developed on N-Graphs since its first publication in 2001 [14], like Alves’ development on the geometric perspective and cycle treatment towards the normalization of the system
[3] and Cruz’s definition of intuitionistic N-Graphs [9]. A normalization algorithm was presented for classical N-Graphs [1], along with the subformula and separation properties [2]. Also, a linear time proof checking algorithm was proposed [4], and

more recently a new sequentialization proof was presented [10], using an adaptation of the concept of subnets from proof-nets to create the sub-N-Graphs and perform cuts in classical logic proofs with the presence of defocussing switchable links and no axiom links.
Proof-Graphs
The system is defined somewhat like proof-nets. There is the concept of proof- graphs, from which all graphs are constructed with the valid links where each node is the premise and conclusion of at most one link, and the concept of N-Graphs, which are the correct proof-graphs, i.e. the proof-graphs that represent valid proofs. These constructions are analogous to the definition of proof-structure and proof-net, respectively [12].
The links represent atomic steps in a derivation. Focussing links are the ones with two premises and one conclusion, as illustrated by Fig. 1 (Λ— I, ⊥— link, → —E, T — focussing weak and contraction). The defocussing links are the ones with one premise and two conclusions, as shown in Fig. 1 (V—E, T—link, → —I, ⊥—defocussing weak and expansion). All other links are called simple links and have only one premise and one conclusion (Fig. 1).
There are two kinds of edges, “solid” and “meta”, and the second one are labeled with an “m” ((u, v)m). The solid indegree (outdegree) of a vertex v is the number of solid edges oriented towards (away from) it. The meta indegree and outdegree are defined analogously. The set of vertices with indegree (outdegree) equal to zero is the set of premises (conclusions) of the proof-graph G, and is represented by PREMIS(G) (CONC(G)). The set of vertices with solid indegree equal to zero and meta indegree equal to one is the set of canceled hypothesis of G (HY POT (G)).

Fig. 1. Focussing, defocussing and simple links.
A logical link represents a derivation in ND, according to its name (T— link acts as the law of the excluded middle). A structural link expresses the application of a structural rule as it is done in sequent calculus: it enables weakening a proof (T— focussing weak, ⊥— defocussing weak, T— simple weak and ⊥— simple weak), duplicating premises (expansion link) and grouping conclusions in equivalence classes (contrac- tion link). There is no link to emulate the interchange rule because in a proof-graph



Fig. 2. Proof-graphs with cycles.

Fig. 3. Meta edge: an invalid application on the left for ▶ A V B and a sound one on the right for
▶ (A V B) → A, B.

the order of the premises is not important for the application of derivation rules.
The axioms are represented by proof-graphs with one vertex and no edges. A single node labeled by A is already a valid derivation: it represents an axiom in sequent calculus (A ▶ A). In Fig. 2 there are three proof-graphs. The first one is an invalid “proof” for A V B ▶ A Λ B. The others are correct derivations for A V A ▶ A and A ▶ A Λ A (contraction and expansion edges are dotted).

Meta-edge and the scope of the hypothesis
Both Ungar and Gentzen’s systems are formulated in such a way that when the → connective is introduced it may eliminate an arbitrary number of premises (including zero). In N-Graphs this introduction is made in a more controlled way, which also complicates the task of identifying inadequate proof-graphs. For example, the first proof in Fig. 3 is not correct, but the second one is.

Soundness criteria
Similar to Danos-Regnier’s criterion [11], we define the following subgraphs associ- ated to a proof-graph.
Definition 2.1 [Switching] Given a proof-graph G, a switching graph S(G) as- sociated with G is a spanning subgraph 5 of G in which the following edges are removed: one of the two edges of every expansion link and one of the two edges of every contraction link.
Definition 2.2 [Meta-switching, virtual edge] Given a proof-graph G, a meta- switching graph S(G) associated with G is a switching of G in which every link with meta-edge {(u, w), (u, v)m} is replaced by one of the following edges: the one from u to w or an edge from v to w, which is defined as virtual edge.

5 A spanning subgraph is a subgraph G1 of G containing all the vertices of G.

Definition 2.3 [N-Graph derivation] A proof-graph G is a N-Graph derivation (or N-Graph for short) iff every meta-switching graph associated with G is acyclic and connected.
Contraction and expansion links are fundamental in the soundness criteria: the formulas connected by them in a proof-graph must be already connected some other way in order to the proof to be sound. The → —I also plays an important role: the premise of the link (B) and the canceled hypothesis (A) need to be already connected some other way in the proof so it can be sound. Thus the meta-switching must choose to connect A → B to A or B, and the resulting subgraph must be connected and acyclic no mater the choice. In the first proof-graph of Fig. 3 the conclusion of → —I is A → (A V B), so this formula already carries a dependency on A and the meta-edge removes the node from the set of premises of the proof. However, there is another occurrence of A that comes from the same initial node, which is used by the → —E link to obtain a ‘proof’ of ▶ A V B.
The soundness criteria captures this when the meta-switching choses the virtual edge, which links A → (A V B) and A, and the result is not a tree. It does not occur with the other proof-graph of Fig. 3: all the two meta-switchings are acyclic and connected. The soundness and completeness of the system were proved through a mapping between N-Graphs and LK (sequent calculus for classical logic) [14,15,10].
Normalization of N-Graphs
Alves presented in his PhD thesis [2] a normalization procedure for N-Graphs. In- spired in the work of Statman [19], Blute et. al. [5] and others that created graph- ical and topological frameworks to study the normalization of natural deduction, he devised a set of operations divided in two stages: the first that handles gen- eral proof-graphs, i.e. trees and some specific cycles, and the second stage that was constructed to give a thorough treatment of cycle structures. In the end, the proposed procedure has four sets of transformations that eliminate maximum for- mulas/segments and an algorithm (named 3CA) designed to determine whether a cycle has a detour or not.
Here we present a different normalization procedure with some of the reduc- tions defined by Alves (β and permutative weakening reductions) slightly modified and new approaches for the permutative switchable reductions. The topological framework devised to check and transform cycle structures to remove detours was abandoned, but the separation and subformula properties can still be proved for normalized N-Graphs. This new and simpler normalization also uses an opera- tion defined by Carbone [8] called duplication, leading to an extension of her work that can generate a combinatorial model for the study of the proof size during the normalization of N-Graphs.
We call main formula the formula in a reduction between the two links, and peripheral formulas all other formulas from both links. The reduction images are illustrative, and the graphs represented by Gi, i ∈ [1, 4] may be connected (or, in the switchable reductions, some of them must be connected). The switchable links

(contractions and expansions) are illustrated with dotted undirected edges to keep the images cleaner and also highlight their occurrences.
The outline of the procedure is simple: move all I-flavour links down and all E- flavour links up in the N-Graph, considering the natural flow defined by the directed edges. The main goal is to remove all β reductions, i.e. all I-flavour link followed by an E-flavour link. The N-Graph resulting from the application of this procedure will then have properties similar to the ones of a normal ND derivation: normal form and subformula property. As an addition, the procedure is simpler than the original one for N-Graphs and applies operations similar to the ones defined in [8], which can lead us to a familiar territory of combinatorial studies of sequent calculus.
β reductions
Definition 3.1 [Maximum formula] A formula occurrence A is a maximum formula in an N-Graph G if it is the conclusion of an I-flavour link and the premise of an E-flavour link.
The fact that N-Graphs is a multiple conclusion calculus affects the nature of the reductions in a structural way that does not happen with the reductions introduced by Prawitz [16] for Natural Deduction. Once the proofs are represented by graphs, not only trees, the pruning that happens in the proof during the elimination of a maximum formula of the type AV B, for example, cannot be replicated in a multiple conclusion system where the geometrical structure of the proof (connectivity) is fundamental for its correctness.
The β reductions that eliminate maximum formulas have then a “conservative” aspect, as can be seeing in Fig. 4. Additionally, the presence of T and ⊥ links raises a new kind of maximum formula where a non-atomic formula is a conclusion (premise) of a ⊥ (T) link and is followed (preceded) by an elimination (introduction) rule. These aspects of maximum formulas have been presented by Ungar in [20]. We then call all introduction links and ⊥— link as I-flavour links, and elimination links and top — link as E-flavour links [2]. One last kind of β reduction removes a ⊥-link followed by a T-link, removing from the proof what Alves described as a “hole” that compromises the subformula property.
Permutative weakening reductions
In Prawitz’s Natural Deduction a concept of “maximum segment” is defined to ad- dress the maximum formulas that might be hidden in the proof by the propagation of a formula in the tree. It happened exclusively in the V and E elimination rules that use a side formula C to perform the elimination of the connective. Multiple conclusion natural deduction systems usually remove the need of such formula cre- ating a system where introduction and elimination rules are symmetric, somewhat like in sequent calculus. N-Graphs is no different, but these segments may still arise in a proof by the application of structural rules to perform weakening.
Definition 3.2 [Segment, Maximum segment, Structural segment] A segment from



Fig. 4. β reductions: introduction links followed by eliminations.
the vertex u to the vertex v in an N-Graph G is a sequence of directed edges (u0, v0), (u1, v1),..., (un, vn), where u0 = u, vn = v, vi = ui+1. A segment from the occurrence u of the formula A to the occurrence v of the same formula in an N-Graph G is a maximum segment if u is the conclusion of an I-flavour link, v is the premise of an E-flavour link and every other edge in the segment is part of a structural link. The same segment is a structural segment if u is the conclusion of a weakening link and v is the premise of an I-flavour/expansion link, or if u is the conclusion of an E-flavour/contraction link and v is the conclusion of a weakening link.
Here enters the permutative reductions on weakening formulas. The focus of these transformations is to move down I-flavour links and move up E-flavour links (up and down here following the directions of the edges in the directed graph). The maximum formulas that might be hidden in the proof will become explicit and then they can be removed by β reductions. In Fig. 5 we can see the reductions for introduction rules and focussing weakening links. The other reductions can be seen in Appendix A.
Permutative switchable reductions
The switchable reductions are the ones responsible for the exponential blow up of the proof during the normalization procedure. Expansions and contractions can be



Fig. 5. Permutative reductions: introduction links followed by focussing weakenings.

part of a maximum segment, as they are also structural links, and thus need to be permutated with I/E-flavour rules to show possible hidden maximum formulas. Due to the switchable aspect of those links, the permutation needs to be taken with care in order to avoid the transformation of a valid proof-graph into an invalid one.
Before we present the reductions, we need to define the duplication operation for proof-graphs [8]:
Definition 3.3 [Duplication] The duplication D is a binary operation applied to a proof-graph G and a subgraph Gj of G with the property that:
if a vertex of Gj is a focussing point in G, then either its immediate predecessor vertices both lie in Gj or none of them does;
if a vertex of Gj is a defocussing point in G, then either its immediate successor vertices both lie in Gj or none of them does;
at least one premise or conclusion in Gj is both premise and conclusion of switchable links or → —I.
The duplication of Gj in G is a graph D(G, Gj) defined as G except on Gj, which will be replaced by two copies of it and the following extra vertices:
let u be a premise in Gj (i.e., no edge towards it in Gj) and u1, u2 its copies in D(G, Gj). Then a new vertex uj will be created and linked to u1 and u2 with an expansion. If there are edges in G towards u, then link those edges to uj in D(G, Gj).
let v be a conclusion in Gj (i.e., no edge from it in Gj) and v1, v2 its copies in D(G, Gj). Then a new vertex vj will be created and linked to v1 and v2 with a contraction. If there are edges in G from v, then link those edges to vj in D(G, Gj).
The exception to the procedure above is the link from item 3. In this case, we will collapse the vertices u1 and u2 in G − Gj with the copies v1 and v2 of v in Gj.
This operation is a little different from the one Carbone defined for optical flow
graphs. The difference is on how the two copies of Gj, namely Gj and Gj , will
be attached to the original vertices in G. In Fig. 6 we have an illustration of the duplication operation for proof-graphs.
Definition 3.4 [boundary [8], dissolved edge, collapsed vertex] Let G be a graph and Gj be a subgraph of it. We say that a point in G is a boundary point if it does



Fig. 6. Duplication of a proof-graph: the white and 1,2 vertices are boundary points, the dotted edges linked to 1 and 2 are the dissolved edges and 1 and 2 on the left are the collapsed vertices.

not belong to Gj but is linked to points of Gj. The dissolved edge (u, v) ∈ G is an edge removed from D(G, Gj) between u (in the boundary) and v (in Gj), where u was collapsed with the collapsed vertex vi from Gj. In other words, the collapsed vertices are the ones in the boundary that belongs to Gj.
Theorem 3.5 (Duplication of sub-N-Graphs) Let G be an N-Graph and Gj a sub-N-Graph of G. Then D(G, Gj) is an N-Graph.
Proof. Proof by contradiction. Lets assume D(G, Gj) is not an N-Graph. Then we have two cases:
There is a disconnected meta-switching S(D(G, Gj)):
As we know G and Gj are N-Graphs, S(D(G, Gj)) is not disconnected in any of the duplicated components. Also, there is always a path in S(G−Gj) between the collapsed vertices, as those vertices are connected in G by a switchable link. Let u and v be two disconnected vertices in S(D(G, Gj)), and π the path in S(G) from u to v. Then, π ∩ Gj /= ∅, otherwise π would also be present in S(D(G, Gj)). As those vertices are disconnected in S(D(G, Gj)), πj (the conversion of π following the duplication definition) must connect u to a
vertex w1 in Gj and v to the copy w2 in Gj . But, as each copy Gj is connected
1	2	i
in S(Gj), they are also connected to the respective collapsed vertex, and thus
connected through S(G − Gj).
There is a meta-switching S(D(G, Gj)) with a cycle c:
As we know G and Gj are N-Graphs, S(D(G, Gj)) have no cycle in any of the duplicated component Gj nor in G − Gj. Then the connection between G − Gj and the copies must create c. We have two cases:
c is in G − Gj and Gj, a copy of Gj:
We can construct the corresponding cycle cj in S(G) by doing the reverse of the duplication procedure: removing the added vertices and linking the boundary nodes to the original ones in Gj; separating the collapsed vertex vi in c into the original vertices u, v and adding back the dissolved edge (u, v). As G is an N-Graph this cycle cannot exist, thus we arrived at a contradiction.

c is in G − Gj and both Gj
and Gj
copies of Gj:

As c goes through Gj and Gj , and the only connection between those
two copies is through G−Gj, there must be a path π1 ∈ c∩G−Gj from u to v, both in the boundary. As Gj is an N-Graph, there must be a path π2 in Gj from uj to vj, where (u, uj) ∈ G and (v, vj) ∈ G (possible empty if u = v, i.e. π1 = c). Then, we can create a cycle cj in S(G) by linking those two paths with the edges (u, uj), (v, vj), once again arriving at a contradiction.
2	2
In Fig. 7 we can see the reduction for the permutation of introduction rules with the contraction, and also the special case where a contraction is followed by an ex- pansion. All other permutative switchable reductions can be found in Appendix A.

Fig. 7. Switchable reductions: contractions followed by eliminations (first and second columns) and con- tractions followed by expansion (third column).

The critical reductions are the ones with contraction or a → —I link followed by an expansion. In this case we need to duplicate the north (south) empire of the main formula to eliminate an expansion (contraction). These operations are represented in the images by the *.

Normalization
Definition 3.6 [Cut formula] A formula A in an N-Graph G is a cut formula if it is the main formula of a reduction.
Definition 3.7 [Normal N-Graph] An N-Graph G is normal iff there is no maxi- mum formula and no maximum or structural segment. In other words, there is no cut formula in G.
Theorem 3.8 (N-Graph normal form) A segment from a premise or dis- charged hypothesis A to a conclusion B of a normal N-Graph G can be divided in three unique parts:
elimination part, where each edge is part of an elimination link or an expansion.

weak part, where each edge is part of a weakening link.
introduction part, where each edge is part of an introduction link or a contrac- tion.
The weak part is also divided into tree parts, the ﬁrst with E-flavour links, the second with focussing and defocussing links, and the third one with I-flavour links.
Proof. The proof is a thorough examination of all reductions presented in this paper, considering all possible inversions:
expansion after structural link: Figs. A.5 and A.7.
E-flavour after structural link: Figs. A.2, A.4 and A.3.
expansion after contraction: Fig. 7.
E-flavour after contraction: Fig. 7.
expansion after I-flavour: Figs. A.6 and A.7.
I-flavour after E-flavour: Fig. 4.
structural after contraction: Figs. A.5 and A.7.
structural after I-flavour: Figs. 5, A.1.
It is simple to check every reduction reduces an N-Graph G to another N-Graph Gj. The Theorem 3.5 is enough to validate the reductions with duplication of empires. All other reductions can be validated by a careful examination of every switching S(Gj), using the fact that the original S(G) is acyclic and connected.22
Corollary 3.9 (Subformula property) Each formula in a normal N-Graph G
is a subformula of a formula in the set of premises or in the set of conclusion of G.
The subformula property is an extension of the normal form, once we notice no formula is introduced and then eliminated in any segment in the N-Graph.
With the reductions presented earlier we can prove the normalization theorem, which is stronger than the normal form theorem but weaker than the strong nor- malization theorem, following the definitions presented by Prawitz [16].
Theorem 3.10 (Normalization) Every N-Graph derivation reduces to normal form.
Proof. We can prove the normalization theorem by induction on the degree of the cut formulas, the number of cuts with maximum degree in the proof and the number of inversions of the maximum/structural segments (inversions as showed in the proof of Theorem 3.8). When an N-Graph G is reduced to Gj, a maximum formula is removed or the number of inversions in a maximum/structural path decreases. Even if new cut formulas are added by some reduction, we can choose an order to apply the reductions so the degree of the formula in the vertex is always smaller. This can be easily done for the simple reductions by choosing the cut formula with greatest degree, as the peripheral formulas have lower degree than the main formula of the reduction.

The reductions with duplication are a little more complicated, once it can du- plicate a cut formula with the same degree as the main formula. In this case, it is possible to create an infinite reduction sequence. In order to avoid this, we need to select not only the reduction with greatest degree, but also with a north (or south) empire to be duplicated with only cut formulas of lower degree. To prove that it is always possible to find such cut formula we only need to show it is impossible to have a cycle as illustrated in Fig. 8.

Fig. 8. Cycle of cut formulas, but north and south empires links can be arbitrary.

The impossibility of such cycle comes from the application of nesting lemmas defined by [10], arriving at the conclusion eA∗ Ç eA∗, ∗∈ {∨, ∧} for all formulas A in the cycle.
2
In Figure 9 we can see an example of normalization of the N-Graph for A ∨ A ▶ A ∧ A. In this example we have an expansion followed by a contraction that may hide a maximum formula. After the application of a switchable reduction (that demands a duplication operation), the result is an N-Graph in its normal form. This example also shows how our procedure is not a strong normalization: we could have chosen to duplicate the sub-N-Graph A ▶ A ∧ A and the result would be a different N-Graph that is also in its normal form.

Conclusion
We have presented a new normalization procedure for N-Graphs, based only on cut formula reductions to remove maximum formulas and maximum/structural seg- ments. The normal form we arrive at after a sequence of reductions is very similar to the one Prawitz defined in [16], with an analytical and synthetical part repre- sented by the elimination and introduction parts, but stronger as it also fixates weakening links in the weak part of the normal form.
This normal form goes a step closer to the definition of an equivalence rela- tion between N-Graph proofs. Prawitz suggested that an identity relation between derivations could be characterized in terms of reductions [17], and it works well for a proof system without weakening rules like ND. Weakening is essentially a way to combine derivations together and dispensing with some premises or conclusions, so it is permutative in nature with other deduction rules and can make it difficult to




Fig. 9. N-Graph representing the proof of A V A ▶ A Λ A, the normalized one in the right.
define such equivalence relation. The normal form we arrived at with our normal- ization fixates a position for the weakening rules, and thus facilitates the definition of an identity relation.
Proofs with cuts are shorter than cut-free ones. In our procedure this growth happens when a cut is hidden by a vertex that is both the conclusion and premise of switchable links (contraction, expansion and → —I). We need to duplicate a subproof in order to make the maximum formula explicit. This shows how the structural links in N-Graphs can bring some properties from cut-elimination into a natural deduction system. As we use a modified version of the combinatorial operation developed by Carbone [8] to study the permutation of cut rules with contractions in sequent calculus, its behaviour in N-Graphs is similar in combinatorial terms and also reflects the substitution of hypothesis from Prawtiz [17]. This work is then taking a first step into a combinatorial study of the blow up of proof size in a natural deduction proof system.

References
Alves, G. V., de Oliveira, A. G., de Queiroz, R. J. G. B.: Proof-graphs: a thorough cycle treatment, normalization and subformula property. Fundamenta Informaticae 106, 119–147 (2011)
Alves, G. V., de Oliveira, A. G., de Queiroz, R. J. G. B.: Transformations via Geometric Perspective Techniques Augmented with Cycles Normalization. 16th Workshop on Logic, Language, Information and Computation - WoLLIC 2009, 2009, Tokyo, Logic, Language, Information and Computation, 16th International Workshop, WoLLIC 2009. Berlin: Springer, 2009, v. 1, 84–98 (2009)
Alves, G. V., de Oliveira, A. G., de Queiroz, R. J. G. B.: Towards normalization for proof-graphs. Logic Cooloquium, 2005, Torino, Bulletin of Symbolic Logic. United States of America: 2005, v. 11, 302–303 (2005)
Andrade, L., Carvalho, R., de Oliveira, A., de Queiroz, R.: Linear Time Proof Verification on N-Graphs: A Graph Theoretic Approach. 20th Workshop on Logic, Language, Information and Computation - WoLLIC 2013, 2013, Darmstadt, Logic, Language, Information and Computation, 20th International Workshop, WoLLIC 2013. Berlin: Springer, 2013, v. 1, 34–48 (2013)
Blute, R. F., Cockett, J. R. B., Seely, R. A. G., Trimble, T. H.: Natural deduction and coherence for weakly distributive categories. Journal of Pure and Applied Algebra 113 (3), 229–296 (1996).

Buss, S.: The undecidability of k-provability. Annals of Pure and Applied Logic. 53, 72–102 (1991)
Carbone, A., Semmes, S.: Making proofs without Modus Ponens: An introduction to the combinatorics and complexity of cut elimination. Bulletin of the American Mathematical Society 34, 131–159 (1997)
Carbone, A.: Duplication of directed graphs and exponential blow up of proofs. Annals of Pure and Applied Logic 100, 1–67 (1999)
Cruz, M. Q., de Oliveira, A. G., de Queiroz, R. J. G. B., de Paiva, V.: Intuitionistic N-graphs. Logic Journal of the IGPL, Print (2013)
Carvalho, R., Andrade, L., de Oliveira, A., de Queiroz, R.: Sequentialization for N-Graphs via sub-N- Graphs. 21st Workshop on Logic, Language, Information and Computation - WoLLIC 2014, 2014, Valpara´ıso, Chile, Logic, Language, Information and Computation, 21st International Workshop, WoLLIC 2014. Berlin: Springer, 2014, v. 8652, 94–108 (2014)
Danos, V., Regnier, L.: The Structure of Multiplicatives. Archive for Mathematical Logic 28, 181–203 (1989)
Girard, J.-Y.: Linear Logic. Theoretical Computer Science 50, 1–102 (1987)
Kneale, W.: The Province of Logic. Contemporary British Philosophy (1958)
de Oliveira, A. G. Proofs from a Geometric Perspective. PhD Thesis, Universidade Federal de Pernambuco (2001)
de Oliveira, A. G, de Queiroz, R. J. G. B.: Geometry of Deduction via Graphs of Proof. Logic for Concurrency and Synchronisation, R. de Queiroz (ed.), Kluwer, 3–88 (2003)
Prawitz, D.: Natural Deduction. A Proof-Theoretical Study. Volume 3 of Acta Universitatis Stockholmiensis. Almqvist and Wiksell, Stockholm (1965)
Prawitz, D.: Ideas and Results in Proof Theory. Proceedings 2nd Scandinavian Logic Symposium. North-Holland (1965)
Shoesmith, D. J., Smiley, T. J.: Multiple-Conclusion Logic. Cambridge University Press (1978)
Statman, R.: Structural Complexity of Proofs. PhD thesis, Stanford (1974)
Ungar, A.M.: Normalization, Cut-elimination and the Theory of Proofs. CSLI Lecture Notes, Center for the Study of Language and Information, vol. 28 (1992)
Zucker, J. I.: The Correspondence Between Cut-Elimination and Normalization. Annals of Mathematical Logic 7:1-156. (1974)

A	Other normalization reductions

Fig. A.1. Permutative reductions: introduction links followed by defocussing weakenings.






Fig. A.2. Permutative reductions: focussing weakening links followed by eliminations.









Fig. A.3. Permutative reductions: focussing/defocussing weakening links with T-link and ⊥-link.





Fig. A.4. Permutative reductions: defocussing weakening links followed by eliminations.



Fig. A.5. Permutative reductions: focussing/defocussing weakening links with expansions and contractions.







Fig. A.6. Switchable reductions: introduction links followed by expansions.








Fig. A.7. Switchable reductions: contractions and expansions with T-link and ⊥-link.
