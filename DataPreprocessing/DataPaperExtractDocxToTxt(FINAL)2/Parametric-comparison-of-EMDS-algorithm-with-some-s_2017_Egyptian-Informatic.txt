Egyptian Informatics Journal 18 (2017) 141–149








Full length article
Parametric comparison of EMDS algorithm with some symmetric cryptosystems
Mani Arora a,⇑, Sandeep Sharma b, Derick Engles b
a Khalsa College, Amritsar, Punjab, India
b Guru Nanak Dev University, Amritsar, Punjab, India



a r t i c l e  i n f o 

Article history:
Received 22 April 2016
Revised 20 October 2016
Accepted 10 November 2016
Available online 24 November 2016

Keywords:
EMDS
Algorithm Data security Encryption Decryption Reduce cipher Throughput
a b s t r a c t 

Over the last decades owing to the incredible boost in the electronics industry and wireless technology, there has been an extraordinary outburst in the extent of digital data transmitted via the internet by means of handheld chic devices. The hefty amount of transmitted data requires data to be safe and sound in addition to transmission speed should be swift. In this document we have prepared qualitatively crypt- analysis of our proposed technique ’EMDS’ and evaluated against it with further preferred symmetric algorithms. We have analyzed the diverse variety of symmetric algorithms by following the tangible approach and examined dissimilar parameters implicated. This document endows with estimation of ten of the majority of frequent algorithms. A contrast has been carried out connecting those algorithms and EMDS based on diverse parameters.
© 2016 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo
University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/
licenses/by-nc-nd/4.0/).





1. Introduction

Cryptography is considered necessary to solve tribulations con- cerning secrecy, authentication, integrity and fraudulent commu- nity. Owing to incredible boost in transmission of data over the networks by the side of security there is requirement to ensure on dimension of transmitted data so as to condense the utilization of bandwidth and memory space required to store data. If these factors will be restricted it will automatically enhance the pace of transmission [1]. There have been a number of suggestions to cut down the size of cipher text while providing security for asym- metric encryption however there have been extremely inadequate proposals of symmetric encryption cipher technique. EMDS algo- rithm anticipated by us gratifies the problem of huge storage space, amplified bandwidth, energy consumption, transmission speed and security. In this document preferred block cipher algorithms

* Corresponding author.
E-mail addresses: mani_mcain@yahoo.com (M. Arora), Sandeep_gndu@yahoo. com (S. Sharma), derickengeles@yahoo.com (D. Engles).
Peer review under responsibility of Faculty of Computers and Information, Cairo University.


DES, triple DES, IDEA, Blowfish, CAST 128 as well as stream cipher algorithm RC2 and RC5 are examined simultaneously with EMDS algorithm. The performance of various symmetric algorithms is usually determined by using simulation or mathematical methods. In this paper we present the simulation results of various metrics used to measure the performance of proposed and existing sym- metric cryptography algorithms. The performance of EMDS is eval- uated by implementing the algorithm in Java
The purpose of this analysis is to

Compare EMDS with other symmetric algorithms.
Calculate the average cutback in cipher text size as compared to plain text size with reverence to EMDS algorithm

Various techniques for cryptography

In the present time, most symmetric encryption schemes are based on Fiestel network. It consist of number of rounds where each round includes bit shuffling, non linear substitutions (S-boxes) and exclusive OR operations. A short description of diverse Fiestel Network symmetric cryptographic algorithms is as follows.

Simplified Data Encryption Standard (SDES)

Simplified DES (S-DES) is an educational but not a secure block cipher algorithm. It was simplified version of DES formulated by


http://dx.doi.org/10.1016/j.eij.2016.11.004
1110-8665/© 2016 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



Professor Edward Schaefer of Santa Clara University. Encryption algorithm acquires an 8-bit block of plaintext along with a 10-bit key as input and generates an 8-bit block of cipher text as output vice versa decryption algorithm acquires 8 bit cipher text and a 10 bit key as input to create 8 bit original plain text [2].
Major operations of encryption algorithm

An initial permutation (IP).
An intricate function marked as fK, which engages both permu- tation as well as substitution operations furthermore it depends on a key input.
An effortless permutation function that switches (SW) the two halves of the data
The function fK yet again.
To end with a permutation function that is the contrary to the initial permutation (IP—1).
S-boxes
S-boxes offer non linearity to algorithm. It makes use of fixed type (Non Key dependent) of S-boxes.
Number of S-boxes used: 02 (S0 and S1).
Number of operators
It employs merely a particular operator i.e. exclusive OR while computing function fK.
Number of Keys.
It employs merely 01 key of size 10 bits.

Data Encryption Standard (DES)

Frequently and extensively used of all encryption algorithms is data encryption standard. It was designed by IBM in the 1970s and implemented by the National Bureau of standards (NBS) [now the National Institute for Standards and Technology] in 1977 for com- mercial and unspecified government applications .It encrypts and decrypts 64 bit data at a time. The 56 bit cipher key is utilized for both encryption and decryption.[3] It is most generally used for conservative algorithm.
Major operations of encryption algorithm

An initial permutation IP.
Permutations and substitution functions are applied using XOR operator and S-boxes in 16 rounds.
An uncomplicated permutation function is implemented that substitute two halves i.e.32 bit data.
Contrary to initial permutation (IP—1)
S-boxes
Number of S-boxes used: 08(S0, S1–S8).
Number of operators
It uses only single operator i.e. exclusive OR.
Number of keys
It makes use of merely 01 key of size 56 bits.

Triple DES (3DES)

Formulated by Tuchman to preserve privacy and amalgamation of information illustrated by data during transmission or while in storage. Triple data encryption algorithm was chosen for applying in financial applications in ANSI standard X9.17.It is a three level put up using DES at each level to defend in opposition to savage drive attacks, exclusive of devising an utterly latest block cipher algorithm. In addition to it, Triple DES is put into operation with diverse number of keys i.e.

3DES (2):-DES used thrice with two different keys.
3DES (3): DES used thrice with three different keys.

3DES(2)
It acquires 64 bit block of plain text and key of 112 bits as input and generates cipher text of 64 bits. Permutation and substitution functions are applied in 48 rounds.
Major operations of encryption algorithm

Encrypt using key K1.
Decrypt using key K2.
Resulted data is again encrypted using key K1.

S-boxes
Number of S-boxes used: 24.
Number of operators
It employs merely particular operator i.e. exclusive OR.
Number of keys
It exercises 02 keys.

3DES(3)
Triple DES with two keys undergo meet in the middle attack so triple DES with three keys move towards subsistence. Despite the fact that it is more safe and sound but time-consuming than DES. It is applied by Federal organizations to protect receptive data. It captures 64 bit plaintext in addition to 168 bit key to produce cipher text of 64 bits in 48 rounds. Encryption course is an effort of Encryption and decryption process of single DES cipher.
Major operations of encryption algorithm

Encrypt data using DES with key K1 characterized as EK1
Decrypt EK1 with key K2 by means of DES symbolized as DK2
	Yet again DES encryption is executing of DK2 with key K3. Where K1, K2, K3 are independent keys.
S-boxes
Number of S-boxes used: 24.
Number of operators
It utilizes only single operator i.e. exclusive OR.
Number of keys
It uses 03 keys.

International Data Encryption Algorithm (IDEA)

The global Data Encryption Algorithm (IDEA) is a symmetric block cipher projected by Xuejia Lai and James Massey of ETH Zur- ich in 1991. It was anticipated to be a substitution for the Data Encryption Standard. Encryption algorithm acquires a 64-bits block of plaintext in addition to a 128-bit key as input along with it brings into being a 64-bits block of cipher text as output [4]. The strength of IDEA lies with utilization of XOR, binary addition and binary multiplication of 16-bit integers.
Major operations of encryption algorithm

Key Scheduling: Sub key generation algorithm is used to create 52 16bit sub keys as output.
Plaintext is disintegrated into four 16 bit sub blocks.
Three dissimilar categories of operations are executed on split- ted data in 8 rounds.
Addition (+):-Addition of integers modulo 216 with inputs and outputs treated as unsigned 16 bit integers.
Multiplication H:-Multiplication of integers modulo 216 + 1, with inputs and outputs taken care of as unsigned 16-bit integers excluding a block of all zeros is considered as rep- resenting 216.
Bitwise exclusive OR (⊕).



Output transformation: Again operators are used on inter- changed data and sub keys to produce final output.

S-boxes
It use no S-box for substitution.
Number of operators
It utilizes three operators.

Addition(+).
Multiplication H.
Bitwise exclusive OR(⊕).
Number of keys
Its utilization of 01 key.52 subkeys are originated from the pri- mary128 bit key.

Blowfish

Blowfish Algorithm was formulated peculiarly by Bruce Sch- neier. Encryption algorithm acquires a 64-bits block of plaintext and an inconsistent length key as input and produces a 64-bits block of cipher text as output [5]. It is merely appropriate for appli- cations where the key fails to modify frequently, similar to an auto- matic file encryption. This algorithm is one of secure traditional encryption algorithm for execution because both the sub keys and S boxes are formed by course of constant functioning of algo- rithm itself. Its key extent can be as long as 448 bits.
Major operations of encryption algorithm

Key Scheduling: Sub keys and S-boxes are produced .Key ranges from 32 bits to 448 bits is used to create 18 32bit sub keys and four S-boxes.
Plaintext divides into 32 bit halves.
Permutations and substitutions are performed using two prim- itive operations in 16 rounds.
Addition (+):-Addition of words is performed modulo 232.
Bitwise exclusive OR(⊕)
S-boxes
Four S-boxes are used which are generated from key itself.
Number of operators
It uses two operators.

Addition(+).
Bitwise exclusive OR(⊕).
Number of keys
It use 01 key.18 sub keys are crafting from the original key.

CAST-128

CAST 128 Encryption algorithm is pioneered by Carliste, Adams and Stafford Tavared of Entrust Technology in 1996 [6]. It has a fine obstruction to distinctive cryptanalysis, linear cryptanalysis and interrelated key cryptanalysis. It formulates the utilization of key size differing from 40 bits to 128 bits in augmentation of 8 bits each. It functions on 64-bits block of plaintext to generate 64- bits block of cipher text in 16 rounds .It makes use of two sub keys in each round: a 32 Kim and 56 bit Kris and the function F depends on the round.
Major operations of encryption algorithm

Key Scheduling: From key K, 16 pairs of sub keys are figured out.
Plaintext is disintegrated in two halves.
Permutations as well as substitution functions are applied by means of four operators in 16 rounds.

Four operators used are

Addition (+):-Addition of words is performed modulo 232
Subtraction (—):-Inverse operation denoted by -.is per- formed modulo232
Bitwise exclusive OR(⊕)
Left circular rotation:-The cyclic rotation of word x left by y
bits is indicated by xny.

S-boxes
It uses 8 S-boxes, out of which 4 S-boxes are used in encryption and decryption process and 4 are used in sub key generation.
Number of operators
It uses four operators.

Addition (+).
Subtraction (—).
Bitwise exclusive OR (⊕).
Left circular rotation (n)
Number of keys
It uses 01 key.16 pairs of sub keys are produced from the orig- inal key.

RC2

Developed by Ron Rivest. It is a conventional encryption algo- rithm. It is simple to employ on 16-bit microprocessor. It acquires input of 64 bit stored in the 16 bit words and fabricates an output of similar size i.e. of 64 bits. The variable key size is taken one byte up to 128 bytes.
Major operations of encryption algorithm

Sub keys are generated using sub key generation algorithm tak- ing key as input.
Amalgamation and decocting of data is carried out in 18 rounds. It makes use of five primeval operations for amalgamation and decocting.

Six primitive operations are

Addition (+):-Addition of words is performed modulo 232.
Subtraction (—):-Inverse operation denoted by - is per- formed modulo2w.
Bitwise exclusive OR (⊕).
Bitwise complement (~).
Bitwise AND (&).
Left circular rotation:-The cyclic rotation of word x left by y bits is denoted by xny.

S-boxes
It use no S-box for substitutions.
Number of operators
It uses 6 operators.

Addition(+).
Subtraction (—).
Bitwise exclusive OR (⊕).
Bitwise complement (~).
Bitwise AND (&)
Left circular rotation (n).



Number of keys
It applies 01 key where sub keys are created from the original key.

RC5

Formulated independently by Rivest [7].The algorithm is very swift and compliant to the conductors of diverse word lengths. RC5 is word oriented. The fundamental functions work on full words of data at a time. The number of bits in a word is a param- eter of RC5. The Key length being inconsistent thus provides a tradeoff flanked by security and speed. It is apt for devices of small memory. Owing to its trouble-free structure several cryptogra- phers were concerned in cryptanalysis of it. RC5 encrypts blocks of plaintext of length 32, 64, or 128 bits into blocks of cipher text of the same length. The key length varies from 0 to 2040 bits. It acquires three parameters as input. (1) w (word size) (2) r (number of rounds) (3) b (number of bytes in encryption key K)
Major operations of encryption algorithm

Sub keys are produced by means of sub key generation algo- rithm taking key and number of rounds as input.
Plaintext disjunctioned in two halves using two sub keys and operation of addition.
Permutations and substitution function are employs by means of three primitive operations (and their inverses).

Three primitive operations (and their inverses) used are:

Addition:-Addition of words denoted by +, is executed mod- ulo 2w .The inverse operation indicated by -,is subtraction modulo 2w.
Bitwise exclusive-OR: This operation is represented by ⊕.
Left circular rotation: The cyclic rotation of word x left by y
bits is symbolized by xny. The inverse is the right circular rotation of word x by y bits, denoted by xoy.

S-boxes
It uses no S-box for substitutions.
Number of operators
It uses 5 operators

Addition (+)
Subtraction (—)
Bitwise exclusive OR (⊕)
Left circular rotation (n)
Right circular rotation (o)
Number of keys
It use 01 key where sub keys are spawn from the original key.

EMDS technique for cryptography

EMDS is a dictionary technique for encryption and decryption
[8] .It is a modified version of MDS algorithm of encryption [9]. It centralizes on security in addition to a size of data. Its purpose is to condense the cipher text along with security constraints so that bandwidth consumption can be abridged. Furthermore, the less memory space will be requisite to store encrypted message at des- tination machine. EMDS algorithm is implemented in JAVA using the Net Beans IDE. In this algorithm two keys of diverse sizes are utilized to encrypt as well as decrypt the data to preserve a firm security. To a certain extent their sizes are minute however intru- der can’t decode the data till he is able to identify both keys. In this algorithm two dictionaries are used one static and one dynamic.
Static dictionary will be accessible in encrypted mode to both the sender and destination machines .Barely authorized user can decrypt it and still made changes in it. Dynamic dictionary is being formed at runtime and is not transmitted from source to destina- tion machine so that bandwidth utilization can be condensed.
Major operations of encryption algorithm

Read primary dictionary in memory.
Split data into blocks of 2048 words.
Substitutions are carried out using dictionaries.
Split data into blocks of 12 bits.
Operation by means of one operator is executed .The operator used is Bitwise exclusive-OR denoted by ⊕.
S-boxes
Instead of S-boxes, dictionaries are used for substitutions.
Number of operators
It uses 01 operator.

(i) Bitwise exclusive OR (⊕).
Number of keys
It uses 02 keys while dictionary codes perform like sub keys.

Implementation

The above algorithm is implemented via java on core i5 proces- sor M480 @ 2.67 Ghz, 4 GB RAM, 64 bit operating system. The observations are recorded in Table 1. The program acknowledges the plaintext as an input. After a thriving implementation the data is created in encrypted form which can also be supplementary decrypted. It also calculates the size of plaintext given by user and the size of cipher text generated in bytes. It also indicates the transmission speed of data and total encryption and decryption time taken. The snapshots of sender and receiver user interface are given in Figs. 1 and 2.

Result analysis and comparison

EMDS has been cautiously estimated for the following factors and similarity has been made with other encryption algorithms:

Cipher text size

From the experiment average 48% reduction is recorded by means of EMDS algorithm .In other cryptography techniques it is considered that chiefly the cipher text generated has size same that of plain text size or larger than it. To condense the size of cipher text a little hybrid algorithms are anticipated in which data com- pression method is used to lessen the size of plain text and then encrypt the data via encryption algorithm. On the other hand lot of overheads are concerned in it. Due to this we tried to reduce cipher text as well as to provide adequate security in one technique only named ‘EMDS’. Table 2 and Fig. 3 signify plain text size and cipher text size of other cryptography algorithms and EMDS

Encryption key length

It means number of characters in the encryption key. All the block ciphers, which we have studied, are using bits in the key . So, when we talk about length of the key, it means number of bits in the key. E.g.: If Key K = 1010; Length = 4 bits.
Key lengths of these block ciphers have been divided into two categories.


Table 1
Analysis of EMDS technique.


Ps: Plain text size in bytes. Cs: Cipher text size in bytes. Tt: Transmission time in ms. Et: Encryption time in ms.
Dt: Decryption time in ms.
Rd: Amount of data reduced in bytes. Per: Percentage of data reduced.
So average reduction is P per/10 = 48%.


Figure 1. Sender/server.

Cipher with fixed key length.
Cipher with variable key length.

Following Table 3 will give Key lengths of most commonly used block ciphers and EMDS








If we contrast EMDS with above ciphers in terms of key length then there are two key features about it

EMDS is using two keys for encryption and decryption.
Length of two keys are permanent, one key is of 12 bits (depends on code length used in dictionary) and other key is of 7 bits.


Block size

Cryptographic strength (Security) / Block Size.i.e. Larger the block size, secure the cipher.
While Encryption time is inversely proportional to Block sizei.e.
Larger the block size more time it will take to encrypt data.
Block lengths of block ciphers have been separated into two categories.

Cipher with preset Block length (1–8, See table below).
Cipher with inconsistent block length (RC5 and EMDS).

Following Table 4 will give block size of most commonly used block ciphers and EMDS




Figure 2. Receiver.



Table 2
Comparison of cipher text size produced by EMDS and other symmetric algorithms.



70
60
50
40
30
20
10
0




 Plain text size	 Cipher text size
Figure 3. Analysis of cipher text size produced by EMDS and other symmetric algorithms.


Table 3
Analysis of Key length.



Table 4
Block size analysis.


In EMDS Algorithm data is divided into blocks of 7 bits and 12 bits prior to pertain mathematical function on it for final result. At the same time as cryptography strength is unswervingly propor- tional to block size so owing to this basis we have separated data primarily into huge blocks of 2048 words and afterwards for mak- ing algorithm further secure we divided a block into sub blocks of 12 bits and 7 bits.
S-boxes

S-boxes provides non-linearity (it means number of input bits – number of output bits or output bits are not a linear combi- nations of input bits) to the encryption algorithm, In addition to it the S-boxes are used to obscure the relationship between cipher text and key. For example the S-box from DES (S5) mapping 6 bit input to 4 bit output is shown in Table 5. So, we can say S-boxes offer security (Cryptographic strength) to the cipher.
Two types of S-boxes are there.

Fixed S-boxes (Non–Key dependent S-boxes) e.g. SDES, DES, 2DES, 3DES(2), 3DES(3), CAST-128.
	Variable S-boxes (Key dependent S-boxes) e.g. BLOWFISH. Note:-
Variable S-boxes provides more security.
S-boxes are the mainly complicated phase of any cipher.

Table 5 shows the structure of S-box used in DES
We have studied 09 block ciphers, out of which 6 ciphers have S-boxes.
Table 6 will show information on S-boxes of block ciphers RC5, RC2 and IDEA have no S-boxes as fundamental objective of
S-boxes is to generate confusion property, This property will be produced in these cipher by primeval operations. Likewise, in EMDS algorithm there are no S-boxes and the confusion property is attained by using two dictionaries The output given by dic- tionary is in non linear form in contrast to input and afterwards exclusive OR operation is carried out to attain the confusion property.

Number of operators involved

Cryptographic strength (Security) / Mixed Operators.Security of cipher depend on number of operators and their strength, more
the number of operators more secure the cipher. The use of more than one arithmetic and/or Boolean operator complicates crypt- analysis, especially if these operators do not satisfy distributive and associative laws.
Following ciphers use mixed operators.

IDEA
BLOWFISH
RC2
RC5
CAST-128

Following don’t use mixed operators.

SDES
DES
3DES(2)
3DES(3)

Following Table 7 will give information regarding operators.
EMDS algorithm doesn’t employ varied operators. It use only one operator i.e. exclusive OR. In EMDS if we will use mixed oper- ators, it will obscure the technique so it will influence the turn- around time of the algorithm.

Number of keys

It means number of encryption keys used to secure data.


Table 5
The structure of S-box.


Table 6
Analysis of S-boxes.




Table 7
Analysis of number of operators.






Table 8
Analysis of number of keys.





Cryptographic strength (Security) / Number of keys i.e. more number of keys more secure the data. All the block ciphers, which
we have studied, are using 01 key.
Following Table 8 will give number of Keys used by most com- monly used block ciphers and EMDS
Encryption time

It’s the time taken to encrypt the plaintext. The encryption time has major role in the efficiency of any cryptography technique. Cryptography efficiency is inversely proportional to encryption time i.e. less the encryption time taken by algorithm to encrypt data, more efficient will be the algorithm. On comparing results of encryption time taken by EMDS and some prominent algo- rithms, it has been observed that EMDS outperformed other algo- rithms. Results are obtained by observing encryption time taken by algorithms for same size of plain text as shown in Table 9 Also

Table 9
Analysis of Encryption time.




2500
2000
1500
1000
500
0

Plain text size
 DES	 3DES	 AES
 RC2	 RC6	 Blowfish  EMDS
Figure 4. Comparison of encryption time taken by EMDS and other symmetric algorithms.


Table 10

2500	15
2000
1500	10
1000
500	5
0	0


Input size
 DES	 3DES	 AES
 RC2	 RC6	 Blowfish  EMDS
Figure 5. Comparison of decryption time taken by EMDS and other symmetric algorithms.




from Fig. 4 it can be depicted that EMDS has taken less encryption time as compared to other algorithms so it is more efficient.

Decryption time

Decryption time is the time taken by algorithm to decrypt the cipher text at receiver side. The efficiency of decryption algorithm is inversely proportional to decryption time taken by an algorithm
i.e. less the decryption time taken to decrypt the cipher text, more efficient will be the algorithm. The decryption time is determined by executing decryption algorithms of some prominently used symmetric algorithms and comparison among them and EMDS is done as shown in Table 10. From Fig. 5 we can conclude that EMDS takes less decryption time as compared to other symmetric algo- rithms so it is more efficient than other symmetric decryption algorithms.



Table 11
Analysis of throughput of encryption.
Algorithm	Throughput (kb/ms) DES	3.882
3DES	3.511
AES	4.185
RC5	7.343
RC2	3.321
Blowfish	13.307
EMDS	14.607







Figure 6. Comparison of throughput of encryption algorithm of EMDS and other symmetric algorithms.




Throughput of encryption algorithm
Performance of the algorithm can be determined through its throughput. Performance / Throughput i.e. more will be the
throughput of the algorithm, higher will be its performance.
Throughput of encryption algorithm is calculated as follows:
Throughout ¼ Sizeof plaintext
Encryptiontime
Throughput is calculated from the analysis done for encryption time. It can be observed from Table 11 and Fig. 6 that throughput of EMDS encryption algorithm is more than the others.

Conclusion

The performance evaluation consequences show that

The existing symmetric algorithms principally divide data into blocks of 64 bit size prior to performing computation on it. In
EMDS algorithm data is divided into small blocks of 7 bits and 12 bits to recover the speed of encryption as well as decryption. This will also augment its security as data is divided into two diverse types of blocks.
In EMDS algorithm no S-box is used for substitution as a replacement for dictionaries are used to accomplish confusion
property. The output specified by two dictionaries in technique is nonlinear. This endows with more cryptographic strength to cipher.
Analysis of existing symmetric methods signifies that cipher text formed by them is of same size as that of plain text. The
size of cipher text is formed by projected encryption technique is abridged by using dictionary technique. The estimated results



show that the proposed EMDS algorithm is proficient to lessen text by 50% which accommodates to the tributary of immense storage space, augmented bandwidth, energy utilization as well as protection.
The security of EMDS has been enhanced by using two private keys for encryption as well as decryption. The analysis of previ-
ously active algorithms show that generally the cipher use sin- gle key however to attain additional security DES like algorithms were modified as triple DES which utilize 02 or 03 keys .The key length of keys used in EMDS is set aside minute as encryption speed of any algorithm is contrariwise propor- tional to key size so encryption speed of EMDS is extra owing to this factor.
The estimated result shows that EMDS take a lesser amount of time to encrypt and decrypt data as measured up to other algo-
rithms. It has been initiated to be enhanced among existing algorithms in terms of encryption as well as decryption. It is also shown that the proposed algorithms give additional throughputs in contrast to other algorithms.
References

Lv Chuanfeng, Zhao Qiangfu. Integration of data compression and cryptography: another way to increase the information security. AINA workshops 2007, vol. 2.
p. 543–7.
Garg Poonam. A comparison between Memetic algorithm and Genetic algorithm for the cryptanalysis of Simplified Data Encryption Standard Algorithm. Int J Network Secur Appl (IJNSA) 2009;1(1):34–42.
Singh Sambir, Maakar Sunil K, Kumar Sudesh. Enhancing the security of DES algorithm using transposition cryptography techniques. Int J Adv Res Comput Sci Softw Eng 2013;3(6):464–71.
Khovratovich D, Leurent G, Rechberger C. Narrow-bicliques: cryptanalysis of full IDEA. Advances in cryptology – EUROCRYPT 2012 lecture notes in computer science, vol. 7237. Springer-Verlag; 2012.
Schneier B. The blowfish encryption algorithm. Dr. Dobb’s J 1994;19(4):38–40.
Adams Carlisle M. Constructing symmetric ciphers using the CAST design procedure. Des Codes Crypt 1997(12):283–316.
Rivest RL. The RC5 encryption algorithm. In: Proceedings of the second international workshop on fast software encryption (FSE); 1994. p. 86–96.
Arora Mani, Sharma Sandeep, Engles Derick. Efficient key mechanism and reduced cipher text technique for secured data communication. International journal of systems, control and communications, vol. 7. no. 2. Inderscience publisher; 2016. p. 186–96.
Arora Mani, Engles Derick, Sharma Sandeep. MDS algorithm for encryption. J Comput Sci 2015;11(3):479–83.
