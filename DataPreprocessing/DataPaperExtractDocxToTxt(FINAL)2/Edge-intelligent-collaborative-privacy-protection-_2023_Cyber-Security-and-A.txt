Cyber Security and Applications 1 (2023) 100010

		




Edge intelligent collaborative privacy protection solution for smart medical
Jinshan Lai a,‚àó, Xiaotong Song a, Ruijin Wanga, Xiong Li b
a School of information and software engineering, University of Electronic Science and Technology of China, Chengdu 611731, China
b School of Computer Science and Engineering, University and Technology of china, Chengdu 611731, China


a r t i c l e	i n f o	a b s t r a c t

	

Keywords:
Edge intelligent collaboration Privacy protection
Smart medical care Differential privacy
In the era of big data, competent medical care has entered people‚Äôs lives. However, the existing intelligent di- agnosis models have low accuracy and poor universality. At the same time, there is a risk of privacy leakage in the process of health monitoring and auxiliary diagnosis. This paper combines edge computing and federated learning ensure model accuracy and protect patient privacy by proposing an Edge intelligent collaborative pri- vacy protection solution for smart medical (EICPP). First, we offer a lightweight edge intellectual collaborative federated learning framework named KubeFL to support health monitoring and auxiliary diagnosis; secondly, we design a federated learning training model based on device-edge-cloud layering, with complete accuracy of
up to 95.8%; Finally, a differential privacy algorithm for edge-cloud model transmission is proposed, which can
exchange a lower accuracy loss for solid privacy protection.





Introduction

With the increasing number of older adults, the health monitoring and disease diagnosis and treatment of the elderly living alone have be- come a diÔ¨Écult complex problem. For example, the elderly cannot get timely help for a fall or a sudden heart attack at home, and the elderly cannot move to the hospital in time to check whether they have diabetes or other diseases. With the vigorous development of new-generation in- formation technologies such as 5G, big data, cloud computing, Internet of Things, edge computing, and federated learning, the combination of digital, networked, and intelligent facilities and solutions with medi- cal scenarios has enabled innovative medical applications in AI-assisted diagnosis, health management, telemedicine, and other fields. Tencent launched the ‚ÄúDr. Clove‚Äù app [1], which includes three functions: on- line consultation, online drug purchase, and health science populariza- tion, and is committed to providing reliable medical and health informa- tion and services. For some acute diseases or public health emergencies, such as stroke, new coronary pneumonia (Corona Virus Disease 2019, COVID-19), etc., patients can obtain timely and correct treatment ad- vice through telemedicine, to buy time for the treatment of the disease [2,3].
It is a great responsibility to solve the problems of elderly health
care and disease diagnosis and treatment. Smart medical care is the key to solving this problem. The use of wearable devices and mobile phones, combined with advanced technologies such as artificial intelli- gence, can realize functions such as health monitoring and online diag- nosis. However, in practice, in the process of real-time monitoring and
online diagnosis of the elderly combined with competent medical care, the following three problems are often encountered:

The elderly cannot quickly and accurately notify their family mem- bers in case of an accident;
Online intelligent diagnosis has low accuracy and poor universality;
There is a risk of privacy leakage in the process of health monitoring and auxiliary diagnosis;

Specifically, smart medical care takes medical cloud data as the core, uses the Internet of Things and data transmission and exchange as tech- nologies, and combines electronic medical records and electronic health files to build a medical system for medical and health services [4]. How- ever, medical data is extremely privacy-sensitive. Suppose the user‚Äôs original sign data is directly submitted to the cloud data center. In that case, there is a risk of privacy leakage in communication, processing, and storage, such as man-in-the-middle attacks and unintentional view- ing by cloud data center managers or malicious transactions. To this end, federated learning is widely used as a key technology for privacy protection [5]. Federated learning realizes the model training process in which data is not local. Still, the computing power of the mobile medi- cal devices is often limited. Complete neural network training cannot be performed, so it is necessary to use the architecture of edge computing [6,7] to oÔ¨Ñoad most of the computing tasks to the edge server [8‚Äì10]. However, it is also unreliable to transmit all raw data of mobile medi- cal devices to edge servers because edge servers face more security and privacy threats than cloud data centers. In addition, the models trans-


‚àó Corresponding author.
E-mail addresses: 958101695@qq.com (J. Lai), 1098304107@qq.com (X. Song), ruijinwang@uestc.edu.cn (R. Wang), lixiongzhq@163.com (X. Li).

https://doi.org/10.1016/j.csa.2022.100010
Received 1 July 2022; Received in revised form 4 September 2022; Accepted 4 October 2022
Available online 13 October 2022
2772-9184/¬© 2022 The Authors. Published by Elsevier B.V. on behalf of KeAi Communications Co., Ltd. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/)



mitted in the federated learning process also face the threat of inference attacks, and these problems must be solved well [11].
Although federated learning does not exchange data directly and has a higher privacy guarantee than traditional centralized machine learn- ing training, there are still two problems:

Federated learning itself does not provide comprehensive and ade- quate privacy protection. It still faces the threat of information leak-
on the intermediate parameters ‚ñΩùëä = ùúïLoss/ùúïW of model train- age. For example, attack methods can already infer user data based
ing.
Terminal devices are often unable to eÔ¨Éciently and smoothly com- plete local model training tasks, especially mobile medical devices in medical scenarios, with limited computing and storage resources, making it challenging to complete the training of massive neural networks.

In response to the above problems, we propose an edge intelligent collaborative privacy protection scheme (EICPP) for competent medi- cal care and offer a lightweight edge intellectual collaborative feder- ated learning framework KubeFL, which coordinates various devices and technologies from the overall architecture to realize edge brilliant col- laboration Model training in computing mode; use the federated learn- ing training model based on the device-edge-cloud layering, follow the principle that the original data is not local, and eÔ¨Éciently, accurately and safely combine the data collected by each device to help determine whether the elderly fall Whether you may suffer from various chronic diseases, be prepared for prevention. The differential privacy algorithm for edge-cloud model transmission is used to protect user privacy so that attackers with ulterior motives cannot obtain user information and ensure the information security of the entire process.
The KubeFL framework can achieve eÔ¨Écient management of differ- ent entities, eÔ¨Écient and convenient health monitoring, and eÔ¨Écient and timely auxiliary diagnosis; in terms of model accuracy, accurate
success rate is as high as 95%; in addition, in terms of privacy protection, sign recognition can be achieved, and after testing, the total recognition
the federated learning training model based on end-edge-cloud layering is used, and the original data is not local, which reduces the risk of user privacy leakage at the root. Finally, differential privacy is used in up- loading the model to the cloud data center and sending it to the edge serverso that the attacker cannot obtain the detailed data of the train- ing through inference attacks. The privacy and security of the model are guaranteed.


Related work

Federated learning

Traditional machine learning and deep learning require centralized training by service providers after collecting user data. However, user data is closely related to individual users and may directly or indirectly contain sensitive information. If the server provider leaks such sensitive information, it will now threaten the safety of the person, reputation and property of users; another problem is that the data collected by a single service provider is limited, there are regional differences, and the gener- alized application of the model cannot be guaranteed, that is, there is the problem of data silos. In the context of the increasingly prominent con- tradiction between the phenomenon of data silos and data security re- quirements, federated learning emerges as the times require. The learn- ing mechanism for sharing training parameters is only exchanged in the middle stage for raw data. Ideally, the shared parameters obtained by federated learning are similar or better than those obtained by training the data on the central server.
A typical architecture of federated learning for healthcare is shown in Fig. 1.
DiÔ¨Äerential privacy

Differential privacy is an approach in cryptography that aims to maximize the accuracy of data queries when queried from statistical databases while minimizing the chance of identifying their records. It has the following characteristics:

data, the attacker knows the information of ùëõ ‚àí 1 people and tries (1) Imagine a powerful attacker. If there are n people in the source
to get the last person‚Äôs information. In this case, the attacker still cannot get the previous person‚Äôs information. Since such attack- ers hardly exist, differential privacy has a good protection effect.
Based on rigorous data theory. Differential privacy technology can significantly facilitate mathematical tools, quantitative anal- ysis, and proof, and has good scalability.
Extremely high privacy protection performance. Compared with not using any privacy-preserving algorithm, the differential pri- vacy algorithm uses less accuracy drop in exchange for highly high privacy-preserving performance.
The specific definitions are as follows.
If the difference between the two data sets ùê∑, ùê∑‚Ä≤ is only reflected in a single sample, that is, only one record is different, then ùê∑, ùê∑‚Ä≤ is called adjacent data sets. Given an algorithm M: ùê∑ ‚Üí ùëÖ, where the domain of
ùëÄ is ùê∑ and the range is ùëÖ, for any two adjacent datasets ùëë, ùëë ‚àà ùê∑ and the output subset ùë† ‚àà ùëÖ, there are inequalities.
ùëÉ ùëü[ùëÄ (ùëë) ‚àà ùëÜ] ‚â§ ùëí ùúñùëÉ ùëü[ùëÄ (ùëë‚Ä≤ ) ‚àà ùëÜ] + ùõø	(1)
If established, the algorithm M satisfies (ùúñ, ùõø)-differential privacy. ùúñ is the privacy budget; the smaller the ùúñ, the higher the privacy protection level, and the more noise is added. The lower the data availability, ùõø is
is  not  satisfied,  then  ùõø  =  0  called  ùúñ-differential  privacy. the relaxation factor, indicating the probability that the above inequality
Differential privacy methods are usually implemented by adding fuzzy noise, and their essence is to protect sensitive information by adding quantitative randomness to the data. Commonly used noise- adding mechanisms are the Gaussian mechanism and Laplace mecha- nism. In the Gaussian mechanism, we have the following formula.
ùëÄ (ùëë) ‚âú ùëì (ùëë) + ùëÅ (0, ùëÜ 2 ‚àó ùúé2)	(2)
where ùëÄ (ùëë) represents the result after adding noise, ùëÅ (0, ùëÜ 2 ‚àó ùúé2) is a normalized distribution with a mean of 0, a standard deviation of ùëÜùëì ‚àó ùúé and ùëÜùëì is the sensitivity of the function ùëì .
ùëÜùëì = max(ùëë,ùëë ‚Ä≤ ) ||ùëì (ùê∑) ‚àí ùëì (ùê∑ )||2	(3)
By adding noise to the function ùëì , a new function ùëÄ is constructed, and it can be proved that ùëÄ also satisfies (ùúñ, ùõø)-differential privacy.

Scheme

In this section, we describe the system model and our scheme.

System architecture

In our model, there are three entities.
Mobile medical devices: They can collect medical data of users and patients and then upload it to the hospital. Due to limited computing and storage resources, only simple data processing can be performed to train the model. Low eÔ¨Éciency and inaccurate training results;
Hospital servers: servers distributed in various places can perform computing tasks according to the requirements of hospitals and users but that cannot guarantee the security of internal data, there is a risk of data leakage, and due to the geographical location of hospitals due to differences, different user groups and the characteristics of the hospital itself, the information available to each hospital is limited and biased.




Fig. 1. Federated learning framework.


Cloud data center: The cloud data center is a centralized platform that can collect data from various hospitals. It has strong security protection and rich computing and storage resources. However, it is far from users and inconvenient to communicate with them.
The privacy leakage problem in the federated learning training pro- cess can be solved by differential privacy technology, but it also in- creases the computational burden of the client device. If the data is uploaded to the private server of the hospital, there will be a data leak- age problem. If a medical device collects data and completes the model training task yourself and then uploads the model parameters to the pri- vate server of the hospital, although the problem of data leakage can be prevented due to the limited computing and storage resources of mobile medical devices, there will be problems of training eÔ¨Éciency and accu- racy. Considering the above issues, our scheme oÔ¨Ñoads the first part of the training model task to the medical device, and the second part is placed on the private server of the hospital. The cloud center is respon- sible for aggregating the model and storing the model so that the data of the end device is not uploaded to a third party, and the model train- ing task is also processed. Successful completion can protect the original data of users and patients from leaking. The overall framework is shown in Fig. 2.

Training process

The specific workflow of a complete medical model training is shown in Fig. 3, which mainly includes the following processes:
The hospital collects data from the medical records or wearable de- vices of users and patients;
The hospital checks whether the collected data meets the model training requirements ;
If the requirements are met for model training, if not, continue to collect data until the requirements are met;
After meeting the requirements, upload the data to the hospital server for model training;
Upload and store the trained model to the cloud center server; the model can be obtained by accessing the cloud center server when the model is needed in the future.
The training algorithm flow is as follows.
In Algorithm 1, we introduce the overall flow of training and the in- teraction between the three entities. As can be seen from Algorithm 2, the mobile terminal device trains part of the model and sends the train- ing results to the hospital server, and at the same time, receives the gra- dient to update the model parameters. Then the hospital server trains the complete model, uploads the gradient to the cloud server, receives

Algorithm 1 Training process.


1: The central server distributes the initial model to many hospital pri- vate servers
2: The private server of the hospital splits the model and distributes the first half of the model to mobile medical devices
vided  into  different  groups  ùê∑1 , ùê∑2 ‚Ä¶ùê∑ùëò  (ùê∑ùëñ  =  (ùëãùëñ, ùëåùëñ )) 3: Mobile medical device collects user and patient data, which are di-
4: These data are input into the designed deep neural network model
5: The mobile medical device sends the output results and labels of the front part of the model to the private server of the hospital
6: The private server of the hospital trains the remaining model and adds the differential disturbance to the result and sends it to the central cloud server
7: The central cloud server aggregates and updates the model and dis- tributes it to the hospital server for the next round of training






Fig. 2. Framework of federated learning based on device-edge-cloud hierarchy.


Fig. 3. Medical model training workflow.



Algorithm 2 Local training.
1: Initialize client model parameter ùëäùëõùëúùë°ùëí
2: for each medical device do
3:	Divide the data into k groups ùê∑1 , ùê∑2 ‚Ä¶ùê∑ùëò
4:	for i in range t do
5:		Input ùëäùëõùëúùë°ùëí and ùê∑ùëñ into the first n layers of neural network to get output ùëÇùëõ
6:	Add the noise to ùëÇùëõ to get ùëÇ‚Ä≤
7:	Upload the labels ùëåùëñ of the ùëÇùëò and ùê∑ùëñ data groups to the hos-
pital‚Äôs server
8:	Receive ‚ñΩùêøùëúùë†ùë†(ùëÇ‚Ä≤ ) = ùúïùêøùëúùë†ùë†‚àïùúï(ùëÇ‚Ä≤ ) from the hospital server
ùëò	ùëò
9:	Update parameter ùëäùëõùëúùë°ùëí
10:	ùëäùëõùëúùë°ùëí‚àíùëõùëíùë§ = ùëäùëõùëúùë°ùëí‚àíùëúùëôùëë ‚àí ùúÇùêøùëúùë†ùë†(ùëÇ‚Ä≤ ) ‚àó ‚ñΩùëÇ‚Ä≤ (ùëäùëõùëúùë°ùëí‚àíùëúùëôùëë )
ùëò	ùëò


the gradient aggregated by the cloud server to update the parameters, and sends the gradient to the mobile terminal device. In Algorithm 4, the cloud aggregates the gradients uploaded by the hospital server and adds differential noise, and then sends it back to the hospital server for the next round of training.



Experimental analysis

In this section, we use python to conduct simulation experiments, analyze the simulation experiments‚Äô accuracy, eÔ¨Éciency, and privacy, and compare and analyze with other federated learning schemes.


Algorithm 3 Parameter update of edge server.


1: for each dege server do
2:	Download the parameter ùëäùëêùëôùëúùë¢ùëë of the cloud center server global
model
3:		Assign the parameter ùëäùëêùëôùëúùë¢ùëë of the global model of the cloud center server to the local model parameter ùëä‚Ñéùëúùë†ùëùùëñùë°ùëéùëô
4:	Receive the label ùëåùëñ of the ùëÇ‚Ä≤ and ùê∑ùëñ data groups from the end
device
5:	Update the parameters
6:	ùëä‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëõùëíùë§ = ùëä‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëúùëôùëë ‚àí ùúÇ‚ñΩùêøùëúùë†ùë†(ùëä‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëúùëôùëë )
7:	Pass ‚ñΩùêøùëúùë†ùë†(ùëÇ‚Ä≤ ) back to the end device until the required accu-
racy


Algorithm 4 Cloud aggregation algorithm.
1: Initial recognition of the global model parameter ùëäùëêùëôùëúùë¢ùëë
2: for i in range p do
3:	Randomly select hospitals from q hospitals into the set ùëçùëù
4:	Assign ‚ñ≥W to the empty set
5:	for j in range ùëçùëù do
6:	Pass ùëäùëêùëôùëúùë¢ùëë to hospital j
7:	The hospital obtains the updated parameter ùëä ùëó


Fig. 4. Accuracy of EICPP on breast cancer dataset.


Experimental configuration

To verify the effect of EICPP in terms of accuracy and privacy protec- tion, we use PyTorch to conduct simulation tests on the fully connected network using the breast cancer dataset [12]. To facilitate experiments, we assign the first layer of the model to medical devices for training and get the accuracy, recall, precision, and F1 values; at the same time, we compare with FedAvg and FedMA to get the comparison value of accu- racy of different methods; adjust different privacy budgets at the same time, and test the accuracy of models under different separate privacy budgets variety.
Specifically, we use four Raspberry Pis with the ubuntu operating system as mobile medical devices, two PCs with the ubuntu operating system as hospital servers, and Trend Cloud as cloud servers. Among them, the memory of the Raspberry Pi is 2 GB, and the PC‚Äôs memory is 4 GB.

Precision analysis

To test the precision of EICPP, we conduct experiments from sev- eral dimensions of accuracy (Accuracy), recall (Rec), precision (Pre), and harmonic mean (F1) and obtain the experimental results as shown below. As shown in Fig. 4, with the increase in training discussion, the model‚Äôs accuracy increases rapidly, reaching more than 90% around the 12th round. After 30 rounds of training, the final accuracy rate can get 95.47%; it can be seen that the recall rate show the same upward trend and can finally go 0.955 from Fig. 5; similarly, as can be seen from Fig. 6, the precsion of the model can reach 0.959; from Fig. 7 can be obtained that the harmonic mean of the model can 0.957; from the above four dimensions, it can be seen that EICPP can achieve quite a high accuracy

through cooperative computing with the terminal device
‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëõùëíùë§
on the breast cancer data set, which is of great help for clinical medical

8:	The cloud center server will receive ùëä ùëó
from the hos-
diagnosis and treatment.

pital‚Äôs server
9:	ùëó
‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëõùëíùë§
pare the difference between ùëä ùëó
‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëõùëíùë§
, the cloud center server will com-
and ùëäùëêùëôùëúùë¢ùëë
In addition, we also compare the accuracy with FedAvg and FedMA, using the breast cancer dataset. The obtained accuracy comparison chart is shown in Fig. 8. It can be seen from the figure that after 30 rounds,

‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëõùëíùë§
10:	ùëó	ùëó
ùëëùëñùëì ùëì	‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëõùëíùë§
11:	ùëó
‚Ñéùëúùë†ùëùùëñùë°ùëéùëôùëõùëíùë§  12:	Add the noise to ‚ñ≥W to get ‚ñ≥ W‚Ä≤ 13: ùëäùëêùëôùëúùë¢ùëëùëõùëíùë§ = ùëäùëêùëôùëúùë¢ùëëùëúùëôùëë + 1‚àï(|ùëçùëû |) ‚ñ≥ ùëä ‚Ä≤
14: Send ùëäùëêùëôùëúùë¢ùëëùëõùëíùë§ to hostpital server
‚Äì ùëäùëêùëôùëúùë¢ùëë
the accuracy of the model that under breast cancer dataset tends to con- vergethe. Specifically, accuracy rate growth rate of EICPP is higher than that of FedAvg and FedMA. EICPP is close to convergence around the 14th round, FedMA is close to confluence around the 20th round, and FedAvg is only relative to the 24th round reaching a junction. At the same time, from comparing the accuracy rate at the final intersection, it can be seen that EICPP can get 95.47%, FedMA can go 82.56%, and


	


Fig. 5. Pre of EICPP on breast cancer dataset.



Fig. 6. Rec of EICPP on breast cancer dataset.
Fig. 7. F1 of EICPP on breast cancer dataset.


Fig. 8. Comparison of the accuracy rates of the three schemes under breast cancer data.




Table 1
Comparison of EICPP and PPFLEC .


FedAvg can only reach 70.35%. It can be seen that the accuracy of EICPP is much higher than the existing federated learning scheme. In medical diagnosis scenarios that require high precision.
In addition, we compare the accuracy of EICPP and PPFLEC [11] on the Mnist dataset [13] and Cifar10 dataset [14], the latter is a privacy protection scheme under ‚Äúcloud-edge-end,‚Äù and obtained the accuracy comparison chart as shown in Table 1.
Under the two datasets, the accuracy rates of EICPP are 95.36% and 67.2%, respectively, while PPFLEC is only 91.52% and 65.5%. We can
Table 2
Convergence time comparison table of three schemes .



conclude that EICPP has a higher accuracy rate and is more suitable for high precision and privacy protection. Edge computing scenarios.

Efficiency analysis

To test the convergence eÔ¨Éciency of EICPP, we train the three schemes on the same device and record the time required for the model to converge, as shown in Table 2.
As can be seen from Table 2, FedAvg has the longest convergence time, while FedMA has made improvements on FedAvg, and the time is shortened by about 300 s, while the EICPP model takes the least con- vergence time, only 1050 s, which is 550 s less than FedAvg. FedMA is






Fig. 9. Comparison chart of model accuracy under different privacy budgets.


250 s less, which shows that it has high eÔ¨Éciency in model convergence and can be applied to real-time medical scenarios.

Privacy analysis

To test the impact of different privacy budgets on the accuracy of EICPP, we set different privacy budgets to test the accuracy of EICPP under different privacy budgets, as shown in Fig. 9.
As seen from Fig. 9, when the privacy budget is 2, the model has the highest accuracy when it converges.When the privacy budget is 0.5, the accuracy is the lowest, which proves that the larger the privacy budget, the most negligible impact on the model accuracy. The higher the accu- racy rate however, the privacy protection effect will weaken when the privacy budget is too large. Therefore, it is necessary to evaluate the re- lationship between the model accuracy rate and the privacy protection degree for different scenarios to set the privacy budget to achieve the desired effect.
To sum up, EICPP can protect patients‚Äô privacy in medical scenar- ios. At the same time, it can achieve a high model accuracy and realize intelligent diagnosis and treatment. Further, EICPP can not only be ap- plied in medical scenarios; other scenarios that need to balance both privacy and accuracy can be used, such as intelligent model training in electricity and banking.

Conclusion and future work

This paper proposes an edge intelligent collaborative privacy protec- tion scheme for competent medical care with high accuracy and training
eÔ¨Éciency. At the same time, parameters can be adjusted according to different scenarios to achieve different degrees of privacy protection, which can well solve the current problems faced by medical diagnoses- issues such as low accuracy, low training eÔ¨Éciency, and data leakage. In the future, we will study the impact of different model partitions on model accuracy and improve our KubeFL framework to improve model accuracy.

Declaration of Competing Interests

The authors declare that they have no conflict of interest.

Acknowledgment

This work is supported by Sichuan Science and Technology Program (2020YFG0475, 2018GZ0087, 2019YJ0543, 22DZX0046).
References

G. Nittari, R. Khuman, S. Baldoni, G. Pallotta, G. Battineni, A. Sirignano, F. Amenta,
G. Ricci, Telemedicine practice: review of the current ethical and legal challenges, Telemed. e-Health 26 (12) (2020) 1427‚Äì1437.
A.E. Loeb, S.S. Rao, J.R. Ficke, C.D. Morris, L.H. Riley III, A.S. Levin, Departmental experience and lessons learned with accelerated introduction of telemedicine during the COVID-19 crisis, J. Am. Acad. Orthop. Surg. (2020).
Y. Li, Y. Song, W. Zhao, X. Guo, X. Ju, D. Vogel, Exploring the role of online health community information in patients decisions to switch from online to oÔ¨Ñine medical services, Int. J. Med. Inform. 130 (2019) 103951.
M. Leyva-V√°zquez, M.A. Quiroz-Mart√≠nez, Y. Portilla-Castell, J.R. Hechavarr√≠a-H- ern√°ndez, E. Gonz√°lez-Caballero, A new model for the selection of information tech- nology project in a neutrosophic environment, Neutrosophic Sets Syst. 32 (2020) 343.
X. Xia, F. Chen, Q. He, J. Grundy, M. Abdelrazek, H. Jin, Online collaborative data caching in edge computing, IEEE Trans. Parallel Distrib. Syst. 32 (2) (2020) 281‚Äì294.
M. Zwolenski, L. Weatherill, The digital universe: rich data and the increasing value of the internet of things, J. Telecommun. Digit. Econ. 2 (3) (2014). 47-1
P. Bellavista, L. Foschini, D. Scotece, Converging mobile edge computing, fog com- puting, and IoT quality requirements, in: 2017 IEEE 5th International Conference on Future Internet of Things and Cloud (FiCloud), IEEE, 2017, pp. 313‚Äì320.
S. Zhang, P. He, K. Suto, P. Yang, L. Zhao, X. Shen, Cooperative edge caching in user-centric clustered mobile networks, IEEE Trans. Mob. Comput. 17 (8) (2017) 1791‚Äì1805.
Y. Zhao, W. Wang, Y. Li, C.C. Meixner, M. Tornatore, J. Zhang, Edge computing and networking: a survey on infrastructures and applications, IEEE Access 7 (2019) 101213‚Äì101230.
J. Qadir, B. Sainz-De-Abajo, A. Khan, B. Garcia-Zapirain, I. De La Torre-Diez, H. Mah- mood, Towards mobile edge computing: taxonomy, challenges, applications and fu- ture realms, IEEE Access 8 (2020) 189129‚Äì189162.
R. Wang, J. Lai, Z. Zhang, X. Li, P. Vijayakumar, M. Karuppiah, Privacy-preserving federated learning for internet of medical things under edge computing, IEEE J. Biomed. Health Inform. (2022).
Z. Mushtaq, A. Yaqub, S. Sani, A. Khalid, Effective k-nearest neighbor classifications for wisconsin breast cancer data sets, J. Chin. Inst. Eng. 43 (1) (2020) 80‚Äì92.
L. Deng, The MNIST database of handwritten digit images for machine learning research [best of the web], IEEE Signal Process. Mag. 29 (6) (2012) 141‚Äì142.
A. Krizhevsky, G. Hinton, et al., Learning multiple layers of features from tiny images (2009).
