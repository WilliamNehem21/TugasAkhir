Electronic Notes in Theoretical Computer Science 210 (2008) 75–83	
www.elsevier.com/locate/entcs
Towards a Quantum Calculus (Work in Progress, Extended Abstract) Philippe Jorrand1 Simon Perdrix2
Leibniz Laboratory IMAG-INPG
Grenoble, France

Abstract
The aim of this paper is to introduce a general model of quantum computation, the quantum calculus: both unitary transformations and projective measurements are allowed; furthermore a complete classical control, including conditional structures and loops, is available. Complementary to its operational semantics, we introduce a pure denotational semantics for the quantum calculus. Based on probabilistic power domains [4], this pure denotational semantics associates with any description of a computation in the quantum calculus its action in a mathematical setting. Adequacy between operational and pure denotational semantics is established. Additionally to this pure denotational semantics, an observable denotational semantics is introduced. Following the work by Selinger, this observable denotational semantics is based on density matrices and super-operators. Finally, we establish an exact abstraction connection between these two semantics.
Keywords: Quantum computing models, quantum semantics, classically controlled quantum computation.


Introduction
In the quantum gate array model, the computational part of a quantum information processing task is performed by unitary transformations. In the one-way quantum computer [9], computations rely upon one-qubit projective measurements followed by unitary Pauli corrections. The measurement calculus [3] has been introduced as a formal model for one-way quantum computation. The aim of this paper is to intro- duce a unified and generalized model of quantum computation, the quantum calcu- lus: unified because both unitary transformations and one-qubit measurements (i.e. the main ingredients of one-way quantum computations) are allowed, and general- ized in terms of quantum operations and in terms of classical control. The quantum calculus allows any admissible transformation or general measurement (including

1 Email: philippe.jorrand@imag.fr
2 Email: simon.perdrix@imag.fr

1571-0661 © 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2008.04.019

unitary transformations and multi-qubit projective measurements). Classical con- trol and conditional structures depending on classical outcomes of measurements are also allowed, including loops.
Beyond unification and generalization, one of the aims of the quantum calculus is to provide a formal framework to deal not only with unitary-based and one- way quantum computations, but also with measurement-only quantum computation [6,8], where only projective measurements are allowed during the main three stages of a computation:
Initialization → Transformations → Observation
In quantum circuits, the transformation stage is realized by means of unitary transformations whereas observation requires measurements; in one-way quantum computations, transformations are by means of one-qubit measurements, and uni- tary transformations are grouped in the initial preparation of the cluster state, and in corrections at the end of the transformation stage; finally, in measurement- only quantum computation, no unitary transformations are allowed at any stage, all transformations are realized by means of projective measurements. In terms of classical control, a quantum circuit is an unconditional sequence of unitary trans- formations, whereas the measurement calculus requires adaptive measurements (i.e the measurement basis depends on previously obtained classical outcomes), but no iteration is possible. The classical control within the measurement calculus can therefore be represented in a finite tree, where each path from the root corresponds to a possible sequence of classical outcomes obtained during the computation. In the case of measurement-only quantum computation, since loops depending on the classical outcomes of measurements are required, the classical control can take the form of a graph instead of a tree.
Contrary to quantum circuits and measurement-calculus, the quantum calcu- lus allows representations of these three different models of quantum computations. Moreover a restriction of the quantum calculus where only projective measurements are allowed, the measurement-only quantum calculus turns out to be an adequate formal framework for measurement-only quantum computations. This formal frame- work is helpful for proving the universality of some families of projective measure- ments in measurement-only quantum computation.
In this paper we introduce the quantum calculus and its restriction to projective measurements, the measurement-only quantum calculus. Complementary to its op- erational semantics, we introduce a denotational semantics of the quantum calculus, based on probabilistic power domains [4], in order to associate with any descrip- tion of a computation in the quantum calculus its action in a mathematical setting. Adequacy between the operational and denotational semantics is established. This denotational semantics does not take into account quantum properties like indistin- guishability of some probability distributions over quantum states 3 , contrary to the solutions developed by Kashefi [5] and Selinger [10]. Thus, following the work by

3 It is well-known that distribution probability 1/2 on stat√e  |0⟩ and 1/2 on state |1⟩ is indistingu√ishable

from distribution probability 1/2 on state |+⟩ = (|0⟩ + |1⟩)/ 2 and 1/2 on state |−⟩ = (|0⟩− |1⟩)/ 2

Selinger, we introduce another denotational semantics based on density matrices. Moreover we establish an exact abstraction connection between these two semantics.
Quantum Calculus Patterns
The basics of quantum computing are not given in this extended abstract. The reader may refer to [7] for an introduction to quantum computing.

Deﬁnitions
Following the terminology of the measurement calculus, computations in the quan- tum calculus are described by means of quantum calculus patterns (often simply called patterns in the rest of this paper). First we introduce the notion of quantum action on a given Hilbert space H:
Let L(H, H') be the set of morphisms from H to H'. An action a from H to H'

is:

where M ∈ L(H, H').

a := M | M, a

Definition 2.1 (Quantum Calculus Pattern) A quantum calculus pattern  is a quadruplet (K, I, F, R), where K is a finite set of processes, I, F  K are sets of respectively initial and final processes, and R is a finite set of process definitions of the form:

q = [a].q (+ [a].q)∗
where each q K F appears exactly once in the left hand side position, moreover every process appearing in R is in K. Finally, there exists a set of Hilbert spaces   , q  K  such that, for each process definition q =  [a ].q of R, each ai is an action from q to qi , moreover the completeness condition  i ai‡ = IdHq has to be verified, where a‡ is a map acting on morphisms, defined as:

M‡ = M†M
(M, a)‡ = M‡ + a‡
Example 2.2 For any unitary transformation U over H, let PU = ({i, f}, {i}, {f}, R), R

i = [U ].f
One can show that the completeness condition is verified, so U is a quantum calculus pattern.
Definition 2.3 (Measurement-only Pattern) A Measurement-only Quantum Calculus Pattern   = (K, I, F, R) is a Quantum Calculus Pattern where actions are projective measurements only.

Example 2.4 Let P = ({i, q, f}, {i}, {f}, R), with R:

i = [|0⟩⟨0|].f + [|1⟩⟨1|].q q = [|+⟩⟨+| , |−⟩⟨−|].i

Operational semantics
A natural state space for the operational semantics of such a model of computation is S = {⟨q, |φ⟩⟩ | q ∈ K ∧ |φ⟩ ∈ H1}, where H1 = {|φ⟩ ∈ Hq | || |φ⟩ || = 1} . The
probabilistic operational semantics over S is defined as follows:


⟨q, |φ⟩⟩ −−−−−−−→ q', √

M |φ⟩


where −→p  denotes a probabilistic transition which occurs with probability p when- ever the system is in state q, φ . The above transition occurs if a process definition of the form q = ... + [..., M,.. .].q' + ... appears in R.

Denotational Semantics
Pure denotational semantics
The definition of a denotational semantics for the quantum calculus patterns follows the traditional approach to that form of semantics (see, e.g., [1]).
A directed complete partial order (DCPO) is a partial order (D, ±) such that
every directed subset X of D has a least upper bound HX. If D, E are two DCPOs, a function f : D → E is continuous if it is monotonic and for every directed subset X ⊆ D, f (HX) = Hf (X).
Theorem 3.1 (Fixed point theorem) Let D be a DCPO with bottom, and let f : D  D be continuous. Then f has a least ﬁxed point, that is the set of d  D for which f (d) = d is nonempty and has a minimum.
Since quantum calculus patterns have a probabilistic evolution, the denotational semantics is based on probabilistic power domains of valuations [4].

Definition 3.2 A discrete valuation on a set X is a function ν : X → R+.
A discrete valuation uniquely defines a (continuous) valuation : ∀Y ⊆ X, ν(Y ) = 
y∈Y ν y
For any x ∈ X, ηx : X → R+ is defined as follows:

η (y) =	1	if x = y
x	0	otherwise

We write V ≤1(X) the set of discrete valuations ν over X satisfying ν(X)  1. For any ν, μ  V ≤1(X), ν  μ iff  Y   X, ν(Y )  μ(Y ). The purpose is to have V ≤1(X) contain the probability distributions over X.
Property 1 [4] (V ≤1(X),	) is a DCPO with bottom element the constant valua- tion 0.
Definition 3.3 (Kleisli extension) Given f : X → V ≤1(Y ), the function fo :
V ≤1(X) → V ≤1(Y ) is defined as

fo = λν.λy.	ν(x).f (x)(y)
x∈X

The denotational semantics [. ] defined in this section is a pure denotational semantics because the semantic domain is based on valuations over pure quantum states, as opposed to the semantics defined in section 3.2 which is based on density matrices.
For a given quantum calculus pattern P = (K, I, F, R), and a given E ⊆ K, let
SE = {⟨q, |φ⟩⟩ | q ∈ E ∧ |φ⟩∈ Hq}.
We are now ready to define the denotational semantics of quantum calculus patterns:
Definition 3.4 (Pure denotational semantics) For a given quantum calculus pattern P = (K, I, F, R):
For any action a from H to H', [[a]] : H→ V ≤1(H') is:


[[M ]] = λ |φ⟩ . ⟨φ| M†M |φ⟩ η√
Notice that [M ]](|φ⟩) = 0 if ⟨φ| M†M |φ⟩ = 0.

M|φ⟩ (φ|M†M|φ⟩


[[M, a]] = λ |φ⟩ . ([[M ]](|φ⟩)+ [[a]](|φ⟩))
∀q ∈ F, [[q]] : Hq → V ≤1(SF ) is

[[q]] = λ |φ⟩ .η⟨q,|φ⟩⟩
Notice that for every q ∈ F , [[q ] is a continuous function.
q	K  F , let  q = [  q	V ≤1( F )] be the set of continuous functions from	q
to V ≤1( F ). Let	be the cartesian product of all q’s for q	K	F . Elements of	are K	F -tuples g	of continuous functions such that g	.
For any q ∈ K \ F , if q = Σi[ai].qi is in R, let χq : E → Eq:

χq = λ⟨gp⟩p∈K\F . ,
i|qi∈K\F

Let Ψ : E → E be the function:
gqoi ◦ [[ai]] +	[[qi]]o ◦ [[ai]]⎞
i|qi∈F


Ψ = λX. ⟨χq(X)⟩q∈K\F
Since, the DCPO structure carries over to the sets of continuous functions
Eq, for any q ∈ K \ F , and over cartesian product, (E, ±) is a DCPO where
⟨fq⟩q∈K\F ± ⟨gq⟩q∈K\F if for any q ∈ K \ F , and for any |φ⟩ ∈ Hq, fq(|φ⟩) ±
gq φ
Moreover, Ψ is continuous, thus, according to the fixed point theorem, for every
q ∈ K \ F , let [q]] : Eq be such that :

⟨[[q]]⟩q∈K\F = Fix (Ψ)
Let (Xn)n∈N be an increasing sequence such that X0 =	and Xn+1 = Ψ(Xn), then


[[P]] : SI → V ≤1(SF ) is
⟨[[q]]⟩q∈K\F = limn→∞Xn [[P]] = λ⟨q, |φ⟩⟩ .[[q]](|φ⟩)

Adequacy between operational and denotational semantics is established by the following theorem:
Theorem 3.5 (Adequacy) For any pattern P = (K, I, F, R), for any ⟨q, |φ⟩⟩ ∈ SI, and for any ⟨p, |ψ⟩⟩∈ SF ,
⟨q, |φ⟩⟩ →∗p ⟨p, |ψ⟩⟩ ⇐⇒ [[P]](⟨q, |φ⟩⟩)(⟨p, |ψ⟩⟩) = p

Observable Denotational Semantics
The denotational semantics for quantum calculus patterns introduced in the previ- ous section does not take into account quantum properties like indistinguishability of some probability distributions over quantum states. For instance, probability dis-
tribution 1 2 on state 0 and 1 2 on state  1 is indistinguishable from probability distribution 1/2 on state + = ( 0 + 1 )/√2 and 1/2 on state   = ( 0   1 )/√2.
Notice that the denotational semantics developed by Kashefi [5] and Selinger [10]
takes into account this phenomenon. Following Selinger, we introduce a denota- tional semantics based on density matrices. Let D(H) be the set of density matrices over H, i.e. the set of positive matrices ρ ∈ L(H, H) such that Tr(ρ) ≤ 1. For any ρ1, ρ2 ∈ D(H), ρ1 ± ρ2 if and only if ρ2 − ρ1 is positive.
Theorem 3.6 [10] (D(H), ±) is a DCPO.
For a given pattern	= (K, I, F, R), and for any q ,..., q	K, let	q	=
{q1,...,qd}
D(Hq1 ) × ... × D(Hqd ) be a set of d-tuples of density matrices. For any E ⊆ K, SE is isomorphic to a set of functions which associate with any q ∈ E an element of Hq. As a consequence, functional notations will be used to represent elements of SE.

In the pure denotational semantics, the domain SE is nothing but a set of pairs composed of a quantum state and a classical process, because discrete distribution makes sense with both quantum states and classical processes. In the observable denotational semantics, the quantum states will be abstracted into density matrices which encodes probability distributions. Such an encoding can be exported to the classical part of the computation, like in [10]. The main idea consists in considering the set of classical processes {q0,..., qd} as basis states. The whole Hilbert space of this system is then  q0  ...  qd . The density matrices over this large Hilbert space are block diagonal.  As a consequence, tensor product can be replaced by
cartesian product, leading to	q	.
{q0,...,qd}
One can prove, whenever E is finite, that (Sq , ±) is a DCPO, where ± is defined
pointwise.
In definition 3.7, an observable denotational semantics [.]]q over density matrices is given.
Definition 3.7 (Observable denotational semantics) For a given quantum calculus pattern P = (K, I, F, R):
For any action a from H to H', [[a]]q : D(H) → D(H') is : 

[[M ]]q = λρ.MρM†


[[M, a]]q = λρ.([[M ]]q(ρ)+ [[a]]q(ρ))
∀q ∈ F , [[q]]q : D(Hq) → Sq ,
[[q]]q = λρ.λp.δq,pρ

q	q
∀q ∈ K \ F , let Eq = [D(Hq) → SF ] be the set of continuous functions from
D(Hq) to Sq . Let Eq be the cartesian product of all Eq’s for q ∈ K \ F . Elements
of Eq are |K \ F|-tuples ⟨gq⟩ ∈K\F of continuous functions such that gq ∈ Eq. For
any q ∈ K \ F , if q = Σ [ai].qi is in R, let χq : Eq → Eq:



q
q
i|qi∈K\F

Let Ψq : Eq → Eq be the function:



gqi
[[ai]]q +	[[qi]]q ◦ [[ai]]q⎞ i|qi∈F


Ψq = λX. χq (X) 
Since, the DCPO structure carries over to the sets of continuous functions
q	q
Eq, for any q ∈ K \ F , and over cartesian product, (E , ±) is a DCPO where fq q K F	gq q K F if for any q K F , and for any ρ D( q), fq(ρ) gq(ρ). Moreover, Ψq is continuous, thus, according to the fixed point theorem, for every q ∈ K \ F , let [q]]q : Eq be such that :



[[.]]q
SI	SF
ˆ	ˆ

αI


V ≤1(SI )
αF

[[.]]o	)	≤1


Fig. 1. [.]]q is an exact α-abstraction of [.]]o



 [[q]]q 


q∈K\F

= Fix Ψq 

Let (Xn)n∈N be an increasing sequence such that X0 =	and Xn+1 = Ψq(Xn), then


[[P]]q : Sq → Sq is
 [[q]]q 

q∈K\F
= limn→∞Xn

I	F
[[P
]]q =
λs.
[[
q∈I
q]]q(s(q))

Like in the previous section, it is easy to check that combinators used in the semantics are continuous, thus the least fixed point used to define [.]]q does exist.

Exact abstraction
The relationship between semantics [.]] and [[.]]q is established by way of an abstrac- tion function:
Definition 3.8 For a given pattern P = (K, I, F, R), and for any E ⊆ K, let
αE : V ≤1(SE) → Sq  be an abstraction function s.t. :


αE = λν.λq.
|φ⟩∈Hq
ν(⟨q, |φ⟩⟩) |φ⟩⟨φ|

Theorem 3.9 [[.]]q is an exact α-abstraction of [[.]]o, i.e. for any pattern	= (K, I, F, R),

[[P]]q ◦ αI = αF ◦ [[P]]o
The proof is based on continuity of αE for any E ⊆ K.
Perspectives
One of the main perspectives is to use the quantum calculus, and more precisely the measurement-only quantum calculus, in order to prove properties of measurement- based quantum computations, for instance in terms of universal families of projective measurements. This is work in progress.

Another perspective is to study equivalences of quantum calculus patterns (in- tuitively two quantum calculus patterns 1, 2 are equivalent if [ 1]] = [[ 2]]), and more precisely which transformations on quantum calculus patterns preserve their semantics, leading perhaps to a notion of normalization. However, finding trans- formations of patterns for solving loops (i.e. transforming recursive definitions of processes, like q = M.q + .. ., into non-recursive definitions) turns out to be a great challenge. Approximation based on abstract interpretation [2] may be a helpful technique to achieve these transformations.

References
Abramsky, S. and A. Jung, Domain theory, in: S. Abramsky, D. Gabbay and T. S. E. Maibaum, editors,
Handbook of Logic in Computer Science Volume 3, Oxford University Press, 1994 pp. 1–168.
URL http://web.comlab.ox.ac.uk/oucl/work/samson.abramsky/handbook.pdf

Cousot, P. and R. Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, in: Conference Record of the Fourth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (1977), pp. 238–252.
URL	http:
//www.di.ens.fr/~cousot/publications.www/CousotCousot-POPL-77-ACM-p238--252-1977.pdf
Danos, V., E. Kashefi and P. Panangaden, The measurement calculus, arXiv:quant-ph/0412135 (2004).
URL http://arxiv.org/abs/quant-ph/0412135
Jones, C. and G. D. Plotkin, A probabilistic powerdomain of evaluations, in: LICS, 1989, pp. 186–195.
URL http://homepages.inf.ed.ac.uk/gdp/publications/Prob_Powerdomain.pdf

Kashefi, E., Quantum domain theory — definitions and applications, in: Proceedings of the International Conference on Computability and Complexity in Analysis, number 302 – 8/2003 in Fernuniversit¨at Hagen Informatik Berichte, 2003.
URL http://web.comlab.ox.ac.uk/oucl/work/elham.kashefi/papers/qdomain.pdf

Nielsen, M. A., Universal quantum computation using only projective measurement, quantum memory, and preparation of the 0 state, Phys. Rev. A 308 (2003), pp. 96–100.
URL http://arxiv.org/abs/quant-ph/0108020

Nielsen, M. A. and I. L. Chuang, “Quantum computation and quantum information,” Cambridge University Press, New York, NY, USA, 2000.
Perdrix, S., State transfer instead of teleportation in measurement-based quantum computation, International Journal of Quantum Information 3 (2005), pp. 219–223.
URL http://arxiv.org/abs/quant-ph/0402204

Raussendorf, R., D. E. Browne and H. J. Briegel, Measurement-based quantum computation with cluster states, Physical Review A 68 (2003), p. 022312.
URL http://arxiv.org/abs/quant-ph/0301052
Selinger, P., Towards a quantum programming language, Mathematical Structures in Computer Science
14 (2004), pp. 527–586.
URL http://www.mscs.dal.ca/~selinger/papers/qpl.pdf
