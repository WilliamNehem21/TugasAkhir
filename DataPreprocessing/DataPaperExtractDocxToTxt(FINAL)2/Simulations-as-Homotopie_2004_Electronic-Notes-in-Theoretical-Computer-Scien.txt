Electronic Notes in Theoretical Computer Science 100 (2004) 65–93  
www.elsevier.com/locate/entcs


Simulations as Homotopies
Kathryn Hess
Swiss Federal Institute of Technology, Switzerland
Paul-Eug`ene Parent
University of Ottawa, Canada
Andrew Tonks
London Metropolitan University, UK
Krzysztof Worytkiewicz
Montreux, Switzerland

Abstract
We exhibit a model structure on 2-Cat, obtained by transfer from sSet across the adjunction
C2 ○ Sd2 E Ex2 ○ N2. A certain class of homotopies in this model structure turns out to be in 1-to-1 correspondence with strong simulations among labeled transitions systems, formalising the geometric intuition of simulations as deformations. The correspondence still holds in the cubical setting, characterising simulations of higher-dimensional transition systems (HDTS).
Keywords: Algebraic topology, model categories, 2-categories, cubical and simplicial sets, labeled transition systems, simulation, higher-dimensional transition systems

Introduction
Thorough understanding of computational agents with coordinated activities overlapping in time, also known as concurrent processes, is crucial in today’s world of number-crunching supercomputers and critical systems. A popu- lar approach to concurrent processes is to consider them in terms of process calculi, which are rewriting systems equipped with algebraic rules subject to


1571-0661 © Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2004.08.016


inductive/coinductive reasoning (c.f. [19]). This approach, essentially an at- tempt to generalize the λ-calculus, did clarify an impressive number of issues, though from a very specific viewpoint, tightly bound to a formal syntax. It is therefore desirable to develop a more general approach.
This work investigates the potential of algebro-topological techniques in classical concurrency theory. Specifically, we employ categorical homotopy theory `a la Quillen based on the notion of model category (c.f. [22] [15][14]).
In order to fix the ideas, we first focus on labeled transition systems (cf. [20]).
The latter have been extensively studied from a categorical angle (cf. for instance [16]), so which category and which model structure (cf. [22]) for homotopies of labeled transition systems?  The present account is based on
our recent discovery of a model structure on the category 2-Cat (c.f. [17]).
An notion of homotopy with respect to this model structure agrees on relevant instances with a specific yet less widespread characterisation of simulation (cf. [12]).
Once the 1-dimensional case laid out, we treat the general case i.e. higher- dimensional transition systems a.k.a. HDTS’s. Intuitively, the latter are groups of computational agents exhibiting varying degrees of coordination. Let cSet be the category of cubical sets. The category of HDTS’s is a certain subcategory of the slice category cSet/L for a suitable L ∈ cSet. Consider for instance the HDTS
 a ¸¸¸

α 
a' j
,,,,,
¸β
¸¸z 
αβ	a''
     

β  ,,vc z z  α
b
consisting of 2 agents with uncoordinated parallel activity ⇒ (the 2-cube) leading from state a to state b, labeled by αβ and with suitably labeled inter- leavings (the 1-cubes), the whole being coherent by virtue of the face relations. The labels, taken from L, indicate the nature of the activities. Observe that if the agents were coordinated the 2-cube ⇒ would be missing, i.e. the stan- dard cubical homology of this automaton would be non-trivial in dimension 1. A simulation of HDTS’s can be seen as a lifting in the category of cubical 2- categories, for which we have established an appropriate model category struc- ture. The latter is the cubical version of the above-mentioned 1-dimensional case.
The paper is organized as follows. Section 2 provides some background material, in particular on barycentric subdivision as well as on 2-categories and their (2-categorical) nerves. Section 3 introduces labeled transition systems


and their simulations. The link between the latter and oplax transformations as noticed by Hermida is explained. Section 4 goes into the heart of the matter. A novel model structure on 2-Cat is described. A simulation is then characterized as a right homotopy. The reader unfamiliar with the lore of model categories may wish at this point to consult say the first two chapters of [15] in order to get acquainted with the jargon. Section 5 generalizes the setup to cubical sets and cubical 2-categories. Section 6 draws some conclusive remarks.

2-Categories
We introduce some facts and terminology related to the topic of 2-categories, in a rather lengthy manner drawn from [25]. It is not a standard way to present 2-categories, yet it allows a better understanding, in particular of the process of 2-categorification to be introduced in section 4.

2-graphs
Definition 2.1 Let A be a category. A preglobular object A in A is a N- indexed sequence

··· Ai
domi− 1 


 A i−1  ··· 
codi−1

of objects and morphisms subject to the identities
domi ◦ domi+1 = domi ◦ codi+1 codi ◦ domi+1 = codi ◦ codi+1
A is n-truncated if i < n. An n-graph is a n-truncated preglobular set.
Remark 2.2 Since an n-graph is just a presheaf, n-Grph is a topos for each
n ∈ N. In particular, n-Grph is complete and cocomplete.
Definition 2.3


A graph is a 1-graph with dom
graph and a, b ∈ H0 , then
def
= dom0 and cod
def
= cod0. Let H be a


def
H (a, b) = {u ∈ H1 | dom (u) = a ∧ cod (u) = b}
Let G be a 2-graph. As in the case of graphs, the elements of G0 are called vertices or objects and those of G1 arrows, edges or 1-morphisms.

The elements of G2 are called 2-cells or 2-morphisms. G’s underlying

graph |G| is given by its 1-truncation G
 dom  
1 	 G 0
cod

Given x, y ∈ G0, G (x, y)is the graph with


G (x, y)0
G (x, y)1
def
= {f ∈ G1 | dom0 (f ) = x ∧ cod0 (f ) = y}
def
= {α ∈ G2 | dom1 (α) , cod1 (α) ∈ G (x, y)0}

and with domx,y , codx,y : G (x, y)1 → G (x, y)1 given by


domx,y (α)
codx,y (α)
def
= dom1 (α)
def
= cod1 (α)


Properties and concepts defined with respect to G (x, y) (and of its more struc- tured counterparts to be introduced below) are called local. For instance, a morphism of graphs h : G → H is locally injective if h1 |G(x,y) is an injective function for each x, y ∈ G0.

Derivation schemes and sesquicategories.
Definition 2.4 A derivation scheme is a 2-graph D such that the underlying graph |D| is a category. The composition in |D| is denoted ◦ and written inﬁx in the evaluation order. Morphisms of derivation schemes are morphisms of 2-graphs that are functors on the underlying categories.
Proposition 2.5 Derivation schemes and their morphisms form the category
Der. There is an adjunction
  Fder 
_.
Der 	⊥ 2˛-G  rph
Uder
Let G be a 2-graph. The free derivation scheme FderG is given by
|Fder (G)| = FCat (|G|)
Let x, y ∈ G0. A situation involving an α ∈ G (x, y)1 such that dom (α) = f and cod (α) = g is customarily drawn as
f
	z 
 cz¸,
g
Definition 2.6 A sesquicategory S is a derivation scheme such that S (x, y)
is a category for all x, y ∈ S0. The composition in S (x, y) is denoted • and


is written inﬁx in the evaluation order. For each x', x,y ∈ S0 there is the operation
Wleft : S (x', x) × S (x, y) → S (x', y)
and for each x, y, y' ∈ S0 there is the operation
Wright : S (x, y) × S (y, y') → S (x, y')
Both operations are called whiskering and are denoted ◦ by abuse of notation.
Wleft is subject to the identities
given


the equation holds;
given

the equation holds;
given
f
x   id  x  α zy 
	
g


α ◦ idx = α


u
x'   f	 x  id zy 
	
u


idu ◦ f = idu◦f



u

''  f'   '  f		zy 


the equation
x	x	x	cα z¸,
u


holds;
given
α ◦ (f ◦ f') = (α ◦ f ) ◦ f'


u
  f		 c α zzz

x'	 x v 
 ¸y ,

cβ z
w


the equation holds;

(β • α) ◦ f = (β ◦ f ) • (α ◦ f )


the rules governing Wright are deﬁned symmetrically;
given
f
x	f  x  α zy  g  z 
g
the equation g ◦ (α ◦ f ) = (g ◦ α) ◦ f holds.
Morphisms of sesquicategories, called sesquifunctors, are morphisms of the underlying derivation schemes which are locally functors and which preserve whiskering.
The equations of a sesquicategory guarantee in particular that there is no harm to write the 2-cells as strings like

gm ◦· · ·◦ g1αfn ··· f1
Proposition 2.7 Sesquicategories and sesquifunctors organize in the category
Sesqu. There is an adjunction
F¸secsqu
Sesqu ⊥	_D er
Usesqu
A free sesquicategory F D over a derivation scheme D is given by formally adding all the whiskering composites and all the vertical composites in a con- sistent way. That is, the 2-cells F D2 along with their whiskering and vertical composition can be presented by the set of generators D2, the rules

α ∈ D (x, y)	f : x' → x
α ◦ f ∈ FD (x', y)
α ∈ D (x, y)	g : y → y'
g ◦ α ∈ FD (x, y')


ι, κ ∈ FD (x, y)	codxy (ι) = domxy (κ)
κ • ι ∈ FD (x, y) and the equations of definition 2.6.
Recall next that a congruence ∼ on a category A is a family

{∼X,Y ⊆ A (X, Y ) × A (X, Y )}X,Y ∈A
of equivalence relations such that

f ∼ g ⇒ v ◦ f ∼ v ◦ g

and
f ∼ g ⇒ f ◦ u ∼ g ◦ u


Definition 2.8 Let S be a sesquicategory. A sesquicongruence on S is a local congruence which is preserved by whiskering.
Observe that any congruence on S’s underlying category is a sesquicongruence.

Proposition 2.9 An arbitrary intersection of sesquicongruences is again a sesquicongruence. Any family of local relations ∼x,y on a sesquicategory S generate a sequicongruence ∼. The quotient S/ ∼ is again a sesquicategory.

2-categories.
Definition 2.10 Let S be a sesquicategory and x, y, z ∈ S0. The latter satisfy the interchange law if any diagram of the form
f	f'
	z	z 
 cz¸, cz¸,


veriﬁes the equation
g	g'


(g' ◦ α) • (α' ◦ f ) = (f' ◦ α) • (α' ◦ g)	(∗)

A 2-category is a sesquicategory in which the interchange law holds for every triple of objects. A 2-functor is a sesquifunctor among 2-categories. 2-categories and 2-functors are bundled in the category 2-Cat.
A 2-category A admits in particular a ”horizontal” composition of 2-cells where α' ◦ α is given by either side of (∗), giving rise to a family of functors

: A (y, z) ×A (x, y) → A (x, z)

indexed by triples x, y, z ∈ A0. This is the way 2-categories are usually intro- duced in the literature (c.f. [3]). Any category is a 2-category with identities as only 2-cells.
Proposition 2.11 There is an adjunction
 F2-Cat 
2-Cat ⊥ ˛Se squ
U2-Cat
It is easy to see that constructing the free 2-category on a sesquicategory amounts to quotienting the latter by the sesquicongruence generated by the equations enforcing the interchange law for all triples of objects. We thus have the series of adjunctions



 F2-Cat
_.
F¸secsqu
  Fder 
_.

2-Cat ⊥ ˛Se squ ⊥
_D er 	⊥ 2˛-G  rph

U2-Cat
Usesqu

def
Uder

Definition 2.12 Let G be a 2-graph and F = F2-Cat ◦FSesqu ◦FDer. The free
2-category FG on G is given by this functor.

Limits and colimits in 2-Cat.
Proposition 2.13 2-Cat is complete and cocomplete.
Products, equalizers and coproducts are easy. The existence of coequalizers can be seen at hand of a result in enriched category theory. In the 1970’s, John Gray’s student Harvey Wolff showed that, given a symmetric monoidal category V, the category of small V-categories V-Cat is monadic over the category of small V-graphs. A corollary thereof is that V-Cat is cocomplete provided V is (c.f. [28]). This result applies to the present case since 2- categories are Cat-categories and the well-known fact that Cat is cocomplete can be shown using the same argument (viz. a category is a Set-category).
Following Gray (c.f. [11, I.1.3,p.2]), the argument for Cat can be sketched as follows. Let
( )0 : Cat → Set
be the “underlying set functor”. The latter has a right adjoint sending a set to the corresponding trivial connected groupoid, i.e. a category with all homsets containing precisely one morphism. Let
 F  
 	  
G
be a diagram in Cat. If this diagram admits a coequalizer, then the underlying set of the latter has to be (in bijection with) K0 in the coequalizer diagram
 F0 
A	B	0 K 

0 	 0	0
G0
in Set, this since ( )0 is a left adjoint. Next, given M /= N ∈ K0, let EM,N be the coproduct
   B (B1, B' ) ×· · ·× B (Bn, B' )
1	n

over all finite sequences B1, B' ,... Bn, B' such that K0 (B1) = M , K0 (B') = 
1	n	i
K0 (Bi+1) for all 1 ≤ i ≤ n and K0 (B' ) = N . Let

cM,N : EM,N → EM,N


be the morphism given by universal property from the homset-wise composi- tions
'	'	''	''
cB,B',B'' : B (B, B ) × B (B ,B ) → B (B, B )
for all triples (B, B', B''). On the other hand, let
mixM,N : DM,N → EM,N
be the morphism given by universal property from all possible insertions of the morphisms


and
FA,A' : A (A, A ) → B (FA, FA )

GA,A' : A (A, A ) → B (GA, GA )

Let KM,N be the coequalizer object of the pair (c ◦ mix, mix). The assignment

K (M, N
def
) = K

M,N
yields a category K with K0
as set of objects. This category

is the coequalizer object of the diagram above. The purpose of the construction is to take into account possible “new” morphisms arising from identifications of objects. The case M = N is treated similarly, by adding the terminal to the coproduct EM,N and choices of units to mix.
Proposition 2.14 (Gray) The functor U1 : 2-Cat → Cat which forgets the 2-cells has a right adjoint.
The right adjoint turns a homset in a trivial connected groupoid.
By proposition 2.14 an argument formally identical to the above consider- ations shows that 2-Cat has all coequalizers. All one needs to do is to replace sets with categories. When analyzing both variants, it is striking that only morphisms, limits and colimits in Set respectively in Cat are involved. It is precisely the reason why the argument works in a uniform way for Cat and 2-Cat. Wolff showed that it is the case for all monoidal closed V’s.
As a useful alternative, proposition 2.14 paves the way to a 2-Cat-version of Gabriel’s and Zisman’s construction of colimits in Cat (c.f. [6, ”Dictio- nary”, p.4]). The advantage here is that the calculation of a colimit can be carried out directly, without having to express it in terms of coequalizers and coproducts as above. This provides a finer control over the construction.

Transition Systems and their Simulations
Transition systems
Definition 3.1 Let Σ be a set. A transition system
S = (S, i, →⊆ S × Σ × S)


over the alphabet Σ consists of a set of states S, of an initial state i ∈ S and of a transition relation →⊆ S × Σ × S.
A morphism of transition systems over Σ is a label-preserving function among the sets of states.
Proposition 3.2 Transition systems over Σ and their morphisms form a cat- egory TSΣ.
Although definition 3.1 is the usual one, transition systems can be pre- sented in many equivalent ways. In what follows we will use two other vari- ants.

Simulations and Open Maps.

Proposition 3.3 Let the coslice pGrph
pointed graphs and
def
= 1 \ Grph be the category of

( )1 : pGrph → Set
the functor sending a graph to its set of edges. This functor has a right adjoint
( )• : Set → pGrph
sending a set Σ on the one-vertex graph Σ• such that (Σ•)1 = Σ.
Definition 3.4 Let Σ be a set. The locally injective slice pGrph /i Σ• ⊆ pGrph / Σ• is the full subcategory of the slice pGrph / Σ• with the locally injective graph morphisms as objects.
Proposition 3.5 There is an isomorphism of categories
TSΣ ∼= pGrph /i Σ•
Consider a transition system S ∈ TSΣ. Let GS be a graph with S as its set of vertices and with
(x,α,y)	,

as its set of edges. Observe that there is the graph morphism s : GS → Σ• given on edges by the assignment (x, α, y) '→ α. It is then immediate that the assignment S '→ s extends to a functor TSΣ → pGrph /i Σ• and easy to see that this functor is an isomorphism of categories.
In what follows, we will be using the same notation for either point of view provided by proposition 3.5. As a matter of notation, we write xσy as a shorthand indicating that the pair (x, y) ∈ X × Y are related by σ ⊆ X × Y .


Definition 3.6 Let S and S' be transition systems. A presimulation S ~ S'
is a relation σ : S ~ S ' such that
'
. xσx ∧ ∃y ∈ S.x → y ⇒ ∃y ∈ S .x →	y ∧ yσy


It is a simulation if
also holds.

iσi'

Definition 3.7 Let S and F ⊆ B be categories. F is a S-skeletal subcategory of B if one (hence all) of its skeletons is isomorphic to S.
Let ∆ be the simplicial category, i.e. the category of finite ordinals and mono- tone maps. In definition 3.8 to follow, finite ordinals are seen as graphs pointed at 0.
Definition 3.8 Let D Ç pGrph be a ∆-skeletal subcategory. A morphism of pointed graphs h : G → H is open if h0 is surjective and h ∈ RLP (D1).
Proposition 3.9 The following are equivalent
The morphism of pointed graphs h : G → H is open;
h0 is surjective and for each H e f : x → y and a ∈ G with h (a) = x there is G e u : a → b such that h (u) = f .
Proposition 3.10 Let S and S' be transition systems. There is a simulation
S ~ S' if and only if there is a commuting square
  R ¸¸¸

r1 
 , s
G ¸¸¸
¸¸¸
¸¸r2
¸z 
H
     

S ¸z , S'
Σ•
in pGrph with r1 open.
Observe that the square in proposition 3.10 is a span in pGrph /i Σ•. Propo- sition 3.10 is a variant of the celebrated characterization of bisimulations due to Joyal, Winskel & Nielsen (c.f. [16]).

A Relational Structure
Observe that, putting the issue of the initial state aside, the usual presentation of a labeled transition system S = (→⊆ S × Σ × S) amounts to an indexed set of relations(→α⊆ S × S)α∈Σ . Given the 2-category of sets and relations Rel (in fact a category with homsets ordered by inclusion of relations), it


is not that hard to see that (→α⊆ S × S)α∈Σ gives rise to a morphism of monoids S : Σ∗ → Rel (S, S).  This morphism can also be seen as a (2-
)functor S : Σ∗ → Rel. On the other hand, the presimulation condition is equivalent to

∀α ∈ Σ. →α ◦σop
⊆ σop
'
◦→	(∗)

Claudio Hermida used this observations in order to characterize presimulations (c.f. [12]).
Definition 3.11 Let A be a 2-category and f, g ∈ A1.
A lax square (u0, u1, α) from f to g is given by the diagram
x   u0  y 
f	α  ,g
 
J	J 
x	u1  y 
A cylinder (θ0, θ1) from (u0, u1, α)to (v0, v1, β) is given by the diagram

where (g ◦ θ0) • α = β • (θ1 ◦ f )
Proposition 3.12 Let A be a 2-category. There is a 2-category Cyl (A) given by the data
Objects: A1
Arrows: lax squares
2-cells: cylinders
equipped with a 2-functor ⟨dom, cod⟩ : Cyl (A) →A × A.
Following Jean B´enabou, we call Cyl (A) the 2-category of cylinders over A (cf. [2]). The name stems from the ”geometry” of 2-cells. Notice that Cyl (A) is a “lax” generalization of the familiar category of arrows.
Definition 3.13 Let F, G : A → B be 2-functors. An oplax transformation
α : F ⇒ G is given by the data
for each x ∈A a morphism B е αx : F (x) → G (x);

for each morphism Ae f : x → y a 2-cell
F (x)  αx  G (x)


F (f )
 ccαcfr

G(f )

J		J 
 
F (y)  αy  G (y)
subject to the coherence conditions
αf' • (G (θ) ◦ αx) = (αy ◦ F (θ)) • αf for each 2-cell θ : f ⇒ f' : x → y;
(αg ◦ F (f )) • (G (g) ◦ αf ) = αg◦f for each f : x → y and g : y → z.
The way B´enabou originally introduced lax and oplax transforms in the more general setting of bicategories and lax functors was in terms of a classiﬁer, viz. a bicategory of cylinders (c.f. [2]). In the 2-categorical setting of interest here we state it as a characterization:
Proposition 3.14 The following are equivalent
There is an oplax transformation α : F ⇒ G;
There is a 2-functor σ : A→ Cyl (B) such that
Cyl(B)
σ¯,,,,,, ¸

,,,,,,,
<dom,cod>
J 

commutes.
A	<G,F >
B × B

Now a concise way to express the presimulation condition (∗) is
Theorem 3.15 (Hermida)Let S and T be transition systems. The following are equivalent
there is a simulation S ~ T;

there is an oplax transformation T ⇒ S.

A homotopical Characterization of Simulation
Lemma 4.1 Let F : C → F be a functor and A ∈ F. The assignment
A '→ F (F ( ) , A)


op
determines a functor F∗ : F → SetC . If F is cocomplete then F
has a left

adjoint F! and F factors through F!
by the Yoneda embedding y : C → SetCop .

Indeed, if it exists, F! = LanyF is the pointwise left Kan extension of F along
y.



op
S
y


The condition of F being cocomplete is thus sufficient but not necessary, yet it is verified in most of the cases of interest, including the ones encountered in this paper.

2-nerve and 2-categoriﬁcation.
Definition 4.2 Let [n] ∈ ∆ and δn be the derivation scheme given by the data
def
|δn| = F ([n]);
def
δn2 = { i, j, k  | 0 ≤ i < j < k ≤ n} where
dom1 (  i, j, k  ) = ⟨j, k⟩◦ ⟨i, j⟩
and
cod1 (  i, j, k  ) = ⟨i, k⟩
The 2-category [n| is (F2-Cat ◦ Fsesqu) (δn) quotiented by the relations
  i, k, l  • (⟨k, l⟩◦  i, j, k  ) =  i, j, l  • (  j, k, l  ◦ ⟨i, j⟩)
Remark 4.3 The 2-category [n| can be described as follows:
objects: {0,... n};
morphisms: totally ordered sequences ⟨k < ··· < l⟩ : k → l such that
0 ≤ k and l ≤ n;
2-cells: superset relation on the above sequences; along with the obvious compositions.
Proposition 4.4 The construction [ | : ∆ → 2-Cat is functorial and deter- mines an adjunction

C2 E N2
def


def

The functoriality is immediate while C2 = [ |! and N2
= [ |∗ (c.f. lemma

4.1). Following Ross Street, we call the [n|’s 2-orientals (c.f. [24]). N2 is
called 2-nerve and C2 2-categoriﬁcation.
Remark 4.5 Given a simplicial set K, C2 (K) is the free 2-category on the 2-graph determined by (Ki)0≤i≤2 (and the relevant faces), quotiented by the relations given by K3 and those given by the relevant degeneracies.

As an example, let F be a category and N1 : Cat → sSet the usual categorical nerve. C2N1 (F)can be characterized as follows: the objects are those of F, the arrows are generated by those of F (they are formal composites), while the 2-cells are generated by the collection
αf,g : g ◦ f ⇒ g ◦A f
subject to the relations

αg◦f,h • (h ◦ αf,g ) = αf,h◦g • (αg,h ◦ f )

Definition 4.6 Let A and B be 2-categories and F : A→B a morphism of 2-graphs. F is a normal lax functor provided
it is locally a functor;
it preserves horizontal identities;
for any f ∈ A (x, y) and g ∈ A (y, z) there is a 2-cell
γf,g : F (g) ◦ F (f ) ⇒ F (g ◦ f )
such that, given h ∈ A (z, a), the equation
γg◦f • (F (h) ◦ γf,g) = γf,h◦g • (γg,h ◦ F (f ))
holds.
The equations in condition (iii) are referred to as coherence conditions. It is well-known that lax functors compose and that this composition is associative. A 2-functor is evidently a special case of a lax one.
Remark 4.7 Let NLax ([n] , A)be the set of normal lax functors from [n] to
A. Then
N2 (A)n = NLax ([n] , A)
and N2 acts on 2-functors by postcomposition.
The standard model structure on sSet.
Definition 4.8 Let M be a category. L, R ⊆ M1 form a weak factorization system (L, R) if
any morphism f ∈ M1 factors as f = r ◦ l with r ∈R and l ∈ L;
R = RLP (L) and L = LLP (R).
Definition 4.9 M is a model category if it is complete, cocomplete and has three distinguished classes of morphisms C, W, F ⊆ M1 such that

(C, F ∩ W)and (C∩ W, F ) are weak factorization systems;
C, F and W are closed under retracts in M→;
if two of the morphisms in a commuting triangle are in W so is the third one.
It is firmly established terminology to call morphisms in F ﬁbrations with →
as notation, those in C coﬁbrations with > as notation and those in W weak
equivalences with −→∼  as notation. It is also customary to call morphisms in
F ∩ W acyclic ﬁbrations and those in C∩ W acyclic coﬁbrations.
Given g : ∆ → Top the functor assigning the affine n-tetrahedron to [n],
def
the geometric realization |K| of a simplicial set K is given by |K| = g! (K)
(c.f. lemma 4.1). It is well known that sSet is a model category with weak
equivalences precisely those simplicial maps which induce isomorphisms of homotopy groups under the geometric realization, and with cofibrations being all the monos.
Definition 4.10 Let M be a cocomplete category and I ⊆ M1.
Let λ be an ordinal. A (λ, I)-suite in M is a cocontinuous functor λ → M
such that all its values on morphisms are in I.
A ∈ M is small with respect to I if there is a cardinal κ such that the covariant hom-functor M (A, ) preserves colimits of all (λ, I)-suites for all regular cardinals λ ≥ κ .
I permits the small object argument if the domains of morphisms in I
are small with respect to I.
Definition 4.11 A model category M is cofibrantly generated if there are sets of morphisms I, J ⊆ M1 permitting the small object argument and such that


and
F ∩ W = RLP (I)

F = RLP (J)

I is called the set of the generating cofibrations while J is called the set of generating acyclic cofibrations, this since
Proposition 4.12 Morphisms in I are coﬁbrations while those in J are acyclic coﬁbrations.
It is well-known that sSet is cofibrantly generated. Given the standard n-
def
simplex ∆ [n] = ∆ ( , [n]), it is easy to see that it has precisely one non-
def
degenerate simplex ⟨n⟩ = (0,..., n) in dimension n and precisely n + 1 non-
def
degenerate simplices ⟨k⟩ = (0,..., n)\(k) in dimension n−1. The n-boundary

∂∆ [n] is ∆ [n] with ⟨n⟩ removed while the k-th horn Λk [n] is ∂ [n] with ⟨k⟩
removed. The set of sSet’s generating cofibrations is the set of inclusions

{∂ [n] ‹→ ∆ [n]}n∈N
while the set of sSet’s generating acyclic cofibrations is the set of inclusions

Λk [n] ‹→ ∆ [n]
0≤k≤n n∈N\{0}
Local presentability of 2-Cat.
Definition 4.13 Let C be a category and M ⊆ C1 be the collection of all monos. An epi e is strong if e ∈ LLP (M). Suppose further that C has coproducts. A family (Gi)i∈I of objects indexed by the set I is a strong family of generators provided


[f ]i∈I,f∈C(Gi,C) :	 
i∈I,f∈C(Gi,C)

dom (f ) → C

is a strong epi for each C ∈ C. Such a family is called a generator if it is indexed by the singleton set.
Lemma 4.14 Let 22 be the 2-category
f

x

22 is a strong generator in 2-Cat.
	z 
 cz¸,
g

Definition 4.15 A cocomplete category C is locally α-presentable for a reg- ular cardinal α if it has strong family of generators (Gi)i∈I such that the co- variant hom-functor C (Gi, ) preserves α-ﬁltered colimits for all i ∈ I. The smallest α for which it is the case is called the rank of presentability of C and denoted π (C). C is called locally presentable if it is locally α-presentable for some regular cardinal α.
Proposition 4.16 2-Cat is locally presentable with π (2-Cat) = ℵ0.
2-Cat is cocomplete by proposition 2.13 and has a strong generator by lemma
4.14. It is easy to see that 2-Cat (22, ) preserves filtered colimits.
Proposition 4.17 Let C be a locally presentable category. There is a set of objects G ⊆ C0 such that

the covariant hom-functor C (A, ) preserves ﬁltered colimits for every
A ∈ G;
every object in C is a ﬁltered colimit of those in G.
The set G is usually different from the strong family of generators required by the definition. It is however obtained from the latter by a transfinite construction completing (the full subcategory determined by) G with respect to α-limits for a regular cardinal α > π (C).
Locally presentable categories were introduced and extensively studied by Peter Gabriel and Friedrich Ulmer in their beautiful 1970’s treatise (c.f. [5]). They became very popular among homotopy theorists in the 1990’s since in a locally presentable category every object is small with respect to any set of morphisms.

A Thomason model structure on 2-Cat.
Definition 4.18 Let M be a model category and
  L 
,c
C	⊥ M¸
R
be an adjunction. R creates a model structure on C if there is a model structure on C such that FC = R−1 (FM) and WC = R−1 (WM).
Proposition 4.19 Let M be a coﬁbrantly generated model category with J the set of generating acyclic coﬁbrations and L E R be as in deﬁnition 4.18 with in addition C a locally presentable category. Suppose further that
R preserves ﬁltered colimits;
for any f ∈ J and for any pushout g of L (f ), R (g)is a weak equivalence. Then R creates a coﬁbrantly generated model structure on C.
A slightly stronger version of proposition 4.19 appears in Tibor Beke’s [1].
Definition 4.20 Let A and B be 2-categories s.t. A ⊆ B. A is a 2-sieve if for any a ∈ A0
cod (f ) = a ⇒ f ∈ A1 for all f ∈ B1;
cod ◦ dom (α) = (cod ◦ cod) (α) = a ⇒ α ∈ A2 for all α ∈ B2. 2-cosieves are deﬁned dually.
Definition 4.21 Let 2˜-Cat be the category of 2-categories and normal lax functors. Let A and B be 2-categories. An inclusion i : A ‹→ B is a weak immersion if

A is a 2-sieve;
there is a 2-cosieve W such that A⊆W ⊆ B;
i : A ‹→W admits a retraction r;
there is a normal lax functor ε : [1] ×W → W such that
W ¸  i0 [1 ] ×W ¸i1 , W

¸¸¸¸¸
idW ¸¸¸¸
     
ε   i◦r

zJ , s
W
commutes in 2˜-Cat and further that ε|[1]×A is strict and ε (0 ≤ 1, ida) = 
ida for all a ∈ A.
Definition 4.22 Let M be a model category. A weak pushout square in M is a commuting square such that the comparison map from the inscribed pushout is a weak equivalence:
A	 B 
     
 ,   
B ¸+,A ¸C

     

C 
¸¸¸¸∼¸
¸¸¸zJ 
D

Lemma 4.23 The image under N2 of a pushout square of a weak immersion along an arbitrary 2-functor is a weak pushout square.
Theorem 4.24 Ex2 ◦ N2 creates a model structure on 2-Cat.
Proof. It is well-known that 2-Cat is finitely presentable and that Ex pre- serves filtered colimits. It is easy to see that N2 preserves filtered colimits, so it remains to establish condition (ii) of proposition 4.19. Let ik,n : Λk [n] ‹→
∆ [n] be a horn inclusion. It can be shown that C2 (Sd2 (ik,n)) is a weak immer- sion and that N2C2 (Sd2 (ik,n)) is a weak equivalence in sSet, so the assertion follows from lemma 4.23 by 2-of-3. 
Clearly, lemma 4.23 is the ”workhorse” here. We call the model struc- ture of theorem 4.24 the 2-Thomason model structure (c.f. [17]) since it is conceptually similar to a model structure on Cat due to R.W.Thomason (cf. [26]).

Simulations as homotopies.
Definition 4.25 Let M be a model category.
P is a path object on B if there is a commuting diagram


 ¸P,¸¸¸¸

~ 
   
B
p
¸¸¸z 
∆	 B × B

Given f, g : A → B, there is a right homotopy f  g if there is a path object over B such that ⟨f, g⟩ factors through p:
,,,,, P¸
,,,,	p
,,,	J 

A	<f,g>
B × B

Recall from proposition 3.12 that Cyl (A) is B´enabou’s “2-category of cylin- ders” which classifies oplax transformations.
Proposition 4.26 Cyl (A) is a path object on A in the 2-Thomason model structure.
Definition 4.27 Let S and T be transition systems. Let pRel be the 2- category of pointed sets and pointed relations. The 2-category ΨS,T is given as follows.
objects: the pointed sets (S, ιS) and (T, ιT )

morphisms: generated by S (α) α∈Σ ∪ T (α) α∈Σ ∪ pRel (T, S)0 (c.f. section 3.3)
2-cells: generated by pRel (T, S)1
The endomorphisms of ΨS,T are the transition relations, thus not pointed.
Lemma 4.28 The following are equivalent
There is a simulation S ~ T;
there is a σ : Σ∗ → Cyl (ΨS,T) such that
Cyl(ΨS,T)
σˆ,,,,,, ¸

,,,,,,,
ˆ ˆ

 Ψ S,T
<dom,cod>
J 
× ΨS,T

commutes.
<T,S,>

We are now in position to characterize precisely simulations as homotopies.
Theorem 4.29 The following are equivalent
there is a simulation S ~ T;
there is a right homotopy T^  S^ in the 2-Thomason model structure.

Higher-dimensional Transition Systems
In this section we address the issue of true concurrency in transition systems. Traditionally, as for instance in the seminal work of Robin Milner (c.f. [20]), concurrency is modeled by non-deterministic choice. By definition, this inter- leaved semantic does not distinguish between actions overlapping in time and actions chosen non-deterministically for other reasons. In real life however, non-deterministic choice without concurrency is in fact at least as common as concurrency itself. It can be explicitly programmed, say in stochastic algo- rithms, or be implicit, as in the case of sequential programs reacting to user input or to data measured by some sensors. On the other hand, representing concurrency purely in terms of non-deterministic choices is only realistic under the assumption that the processes to be represented share no more than one processor.
Nonetheless, concurrent systems are ubiquitous in today’s world. One can for instance consider the Internet as a concurrent system, yet smaller-scale de- vices ranging from million-dollar number-crunchers to desktop shared-memory servers equipped with a couple to half a dozen processors are quite common as well. A truly concurrent semantics of concurrent systems distinguishes be- tween actions overlapping in time and non-deterministically chosen actions. The approaches achieving this goal in a more or less satisfactory way are man- ifold, including those based on petri nets, event structures (c.f. [27],[21],[23]) or even chemical abstract machines (c.f. [7]). In this section, we focus on an approach using coherent families of independence relations on actions per- formed by a transition system. It turns out that the former can be organised as cubical sets (c.f. [8],[9]).
A possible way to realize this program is to label transitions with sequences over the alphabet Σ (c.f. [10]). The computational reading behind the setup is as follows: an n-cube A is seen as a transition with label (ω1,..., ωn) and represents unconstrained parallel activity 1 of n processes pi leading from some global state 2 to another, each pi performing the action ωi. In line with this computational interpretation, we call n-cubes n-transitions when appropriate. It may be useful to think of such a situation as a concurrent system where each pi executes on a distinct processor, accessing local memory only. The faces of A represent interleaved activity coherent with the maximal degree of concurrency given by the n-transition. That is, faces of A model all possible schedules of its actions when fewer than n processors are available. Degeneracies may be thought of as the opposite situation: there are more processors available

1 There is no interaction like semaphore acquisition or message-passing involved.
2 The values of all registers and memory locations are generally considered as a global state.


than processes running, so some processors idle. A further typical situation involving interleaved execution is mutual exclusion 3 .
We first introduce higher-dimensional transition systems or HDTS ’s in a traditionally syntactic way, then develop the topic as in sections 3 and 4.

Higher-dimensional transition systems.
Definition 5.1 Given a set Σ and ω = (ω ,...,ω ) ∈ Σ∗, let |ω| def  n.
1	n	=
Suppose from now on Σ totally ordered and let


ω |= (Σ, ≤)
def
⇐⇒ ω1 ≤ ··· ≤ ωn

Let further * ∈/ Σ, ω = (ω1,..., ωn) ∈ (Σ ∪ {*})∗, ω ⊆ ω be the word obtained from ω by removing all the occurrences of * and


!Σn
def
= {ω ∈ (Σ ∪ {*})
| |ω| = n ∧ ω |= (Σ, ≤)}



Finally, let and

def
δi (ω1,..., ωn) = (ω1,..., ωi−1, ωi+1,..., ωn)

def
εi (ω1,..., ωn) = (ω1,..., ωi−1, *, ωi,..., ωn)

Definition 5.2 A higher-dimensional transition system or HDTS
S =  S, i, T = (Tn)n∈N 
over the alphabet Σ consists of a set of states S, of an initial state i ∈ S and of a family of transition relations T = (Tn)n∈N where Tn ⊆ S×!Σn × S, such that given n ∈ N, the projection ln : Tn →!Σn, and 1 ≤ i ≤ n, there are functions
∂−, ∂+ : Tn → Tn−1
i	i
verifying ln−1 ∂− (t) = ln−1 ∂+ (t) = δi (ln (t)) and functions
ϵi : Tn → Tn+1

verifying ln+1 (ϵi (t)) = εi (ln (t)) subject to the coherence conditions
∂p∂q = ∂q  ∂p where i < j and p, q ∈ {−, +};
i  j	j−1 i
ϵiϵj = ϵj+1ϵi where i ≤ j;

3 There is interaction like semaphore acquisition or message-passing and it is enforced by the operating system.




∂pϵj =
⎪⎨ ϵ ∂p

where i > j and p ∈ {−, +}

i	j  i−1
⎪⎪⎩ id	where i = j
The coherence conditions of definition 5.2 are called cubical identities. A transition system is obviously a low-dimensional particular case of a HDTS.
Proposition 5.3 A morphism of HDTS’s over Σ is a function among the sets of states preserving the labels and the initial state. HDTS’s and their morphisms form a category HDTSΣ.
Definition 5.4 Let T and T' be HDTS’s. A simulation T ~ T' is a relation
σ : T ~ T ' such that


∀n ∈ N.x (σ) x'
(ω1,...,ωn)
∧ x −−−−−→ x
⇒ ∃y'
∈ T '.y 
(σ) y'
(ω1,...,ωn)
∧ y −−−−−→ y


(ω1,...,ωn)
Observe that the cubical identities ensure that all the interleavings of x −−−−−→
x' are simulated too.

Simulations and open maps.
Definition 5.5 A cubical set K is a sequence
+
i  

··· Kn ¸єi ,
—
i
Kn−1  ··· 
  

of sets and functions where 0 ≤ i ≤ n − 1, subject to the identities
∂p∂q = ∂q  ∂p where i < j and p, q ∈ {−, +}
i  j	j−1 i
ϵiϵj = ϵj+1ϵi where i ≤ j



∂pϵj =
⎪⎨ ϵ ∂p

where i > j and p ∈ {−, +}

i	j  i−1

⎪⎪⎩ id	where i = j
def
Given A ∈ K , let dom (A	∂  ... ∂	and cod (A



def ∂+ ... ∂+


. Given

n	n	) =	0	0
n	) =	0
n−1



def
`  ˛¸  x



x, y ∈ K0, let Kn (x, y) = {A ∈ Kn | domn (A) = x ∧ codn (A) = y}
Similarly to a simplicial set, which is a presheaf over the simplicial category, a cubical set is obviously a presheaf over a category of “ideal cubes” viz. the


cubical category . Cubical sets are thus objects of the topos cSet while the pointed ones are objects of pcSet. The ∂’s are called (positive respectively negative) faces while the ϵ’s are called degeneracies. Again in analogy to simplicial sets, elements of Kn are called n-cubes.
Proposition 5.6 The sequence (!Σn)n∈N of deﬁnition 5.1 is a cubical set with
faces ∂− = δi respectively ∂+ = δi and with degeneracies ϵi = εi.
i	i
Definition 5.7 Let pcSet /i !Σ ⊆ pcSet / !Σ be the full subcategory of the slice pcSet / !Σ such that, given k ∈ pcSet /i !Σ, kn |K(x,y) is injective for each n ∈ N and each x, y ∈ K0.
Proposition 5.8 There is an isomorphism of categories

HDTSΣ ∼= pcSet /i !Σ

The automata with parallelism or HDA (higher-dimensional automata) intro- duced by Eric Goubault live in the slice cSet /i !Σ (c.f. [10] for the most recent account). A HDTS over Σ is thus a pointed HDA k : K →!Σ, subject to a local injectivity condition.
Definition 5.9 Let (S, <) be a strict total order. Given x, y ∈ S let


def
x ≺ y ⇐⇒ x < y ∧ / ∃z ∈ S. x < z < y

Definition 5.10 Let D ⊆ pcSet be the full subcategory with objects P ∈ D
such that
there is a subset S ⊆ P0 which is a ﬁnite strict total order;
the point is given by the smallest element of S;
given x, y ∈ S
x ⊀ y ⇒ ∀n ∈ N. Pn (x, y) = ∅ ;
given x ≺ y there is nx,y ∈ N such that there is precisely one Tx,y ∈
Pnx,y (x, y). This Tx,y is not a face and Pn (x, y) = ∅ for n < nx,y;
given z ∈ S and x ≺ y ≺ z, Tx,y and Ty,z have y as the only common face;
any other non-degenerate n-cube in P is a face of precisely one Tx,y. Objects of D are called paths.
Definition 5.9 states that paths are series of n-transitions glued at the end- points of their main diagonals as for instance in






y 	 x 
¸z1,
 
 x 
 ¸x4 ,
 
 z 

 ¸,2,,
     

	
 ¸,2,,	3	2 
     

y1 	 y3 
,,	,,

y4		 yJ 
	 ¸6,

x1 	 y5 
where S = {x1 < x2 < x3 < x4}. It is easily seen from this example that S
induces a partition on K0 \ S.
Definition 5.11 (pcSet)1 e h : M → K is open provided h ∈ RLP (D) and
h0 is surjective.
Proposition 5.12 The following are equivalent.
h is open;
h0 is surjective and 6n ∈ N, A ∈ Kn. EC ∈ Mn. hn (C) = A.
Proposition 5.13 The following are equivalent.
there is a simulation K ~ L;
there is a span
  R ¸¸¸

r1 
 , s
K ¸¸¸
¸¸¸¸
¸¸r2
¸z 
 L
    

k

in pcSet /i !Σ with r1 open.

5.3	Simulations as homotopies.
def
Proposition 5.14 Let c2-Cat =
¸z , sl
!Σ




2-Cat op be the category of cubical 2-

categories. There is a model structure on c2-Cat with Уc2-Cat and Jc2-Cat
taken levelwise.
It is not true that every model structure carries over pointwise to functor categories, yet it is the case for cofibrantly generated structures when the indexing category is small (c.f. Hirschhorn [14, th. 11.6.1]). It follows that


the 2-Thomason model structure carries over to c2-Cat by virtue of cofibrant generation and the smallness of . We call the resulting model structure cubical 2-Thomason model structure.
Proposition 5.15 Let A be a cubical 2-category. There is a cubical 2-category Cyl (A) such that Cyl (A)n = Cyl (An). This cubical 2-category is a path ob- ject in the cubical 2-Thomason model structure.
An observation similar to the one in section 3 can be made at this point. Let K be a HDTS over Σ given by k : K →!Σ. There is a cubical monoid !Σ∗ where
(!Σ∗) =!Σ∗
with obvious faces and degeneracies and for each n ∈ N a morphism of monoids

kn : !Σ∗ → Rel (K0, K0) determined by its action on generators
(ω1,..., ωn) '→  (domn (A) , codn (A)) | A ∈ k−1 (ω1,..., ωn)}
Lemma 5.16 Let K and L be HDTS’s. There is a cubical 2-category ΨK,L
with ΨK,L given by the following data
objects: K0 ∪ L0;
morphisms: generated from
 kn (ω) | ω ∈!Σ∗ } ∪ ln (ω) | ω ∈!Σ∗ } ∪ pRel (L0, K0)
2-cells: generated from pRel (L0, K0)1 by whiskering.
Faces and degeneracies are constant on pRel (L0, K0) while



∂p k
(ω  def k
(∂p (ω))



∂p l
(ω  def l
(∂p (ω))



ϵ  k
(ω  def k
(ϵ (ω))



ϵ  l
(ω  def l
(ϵ (ω))

where the ∂’s on the right hand side are face maps of !Σ∗, as in

L0
¯ln(ω) _
J 
L0



 ∂+ 


L0
_ ¯ln−1(∂+(ω))
J 
L0

r' _ ⊆ _ r
zz"$
r' _ ⊆ _ r
zz"$

K0	K0


Theorem 5.17 The following are equivalent.
There is a simulation K ~ L;
The diagram of cubical 2-categories
Cyl(ΨK,L)
σ¯ ,,,,,, ¸



commutes.
,,,,,,,,
<l,k>

 Ψ K,L
<dom,cod>
J 
× ΨK,L

	
There is a right homotopy l  k with respect to the cubical 2-Thomason model structure.
Conclusion
Given transition systems S and T, it is at any rate sensible to ask if there is a simulation. A specific instance is of particular interest: as Hermida recently put forward (cf. [13]), it is the case that given S and a relational modal formula φ, the truth of φ |= S amounts to a simulation Φ ~ S where Φ is a transition system built from φ. Hence, by theorem 4.29, it amounts to a homotopy Φ ~ S, so looking for an obstruction can be assimilated to model-checking.
It is easy to see that ⟨dom, cod⟩ : Cyl (A) → A × A is not a fibration in the 2-Thomason model structure, so its fibrant replacement with a very good cylinder object is required in order to formulate the relevant lifting problem. What remains to do is to develop an appropriate obstruction theory. There has been some work in this direction by Dwyer et.al. (cf. [4]) but their notion of obstruction may be too coarse to be used in this context.
A good notion of obstruction is subject of an ongoing investigation. The future will show if any of this turns out to be of relevance for program veri- fication, in particular the setup should then accommodate fixpoints i.e. the modal logic should be able to handle the expressiveness of a modal µ-calculus. Nevertheless, we believe that this line of research might very well lead to new insights and techniques.
Last but not least, the Thomason model structure on 2-Cat is of indepen- dent mathematical interest we plan to elaborate upon, in particular to outline the (quite significant) differences with the model structure on 2-Cat recently introduced by Steve Lack (cf. [18]).

Acknowledgement
The fourth named author gratefully acknowledges Claudio Hermida for the


inspiration.

References
T. Beke. Sheafifiable homotopy model categories, part II. Journal of Pure and Applied Algebra, 164(3):307–324, 2001.
J. B´enabou.	Introduction to Bicategories, volume 47 of Lecture Notes in Mathematics. Springer, 1967.
F. Borceux. Handbook of Categorical Algebra 1. Cambridge University Press, 1994.
W. Dwyer, D. Christensen, and D. Isaksen. Obstruction theory in model categories. Preprint (Notre Dame), 2001.
P. Gabriel and F. Ulmer. Lokal Pr¨asentierbare Kategorien, volume 221 of Lecture Notes in Mathematics. Springer, 1971.
P. Gabriel and M. Zisman. Calculus of fractions and homotopy theory. springer, 1967.
G.Boudol and G.Berry. The chemical abstract machine. Theoretical Computer Science, 96:217– 248, 1992.
E. Goubault. G´eom´etrie du Parall´elisme. PhD thesis, E´cole Polytechnique, 1995.
E. Goubault. Durations for truly-concurrent transitions. Lecture Notes in Computer Science, 1058, 1996.
E. Goubault. Labeled cubical sets and asynchronous transitions systems: an adjunction. In
A. Kurz, editor, Electronic Notes in Theoretical Computer Science, volume 68. Elsevier Science Publishers, 2002.
J. W. Gray. Formal Category Theory: Adjointness for 2-Categories. Number 391 in Lecture Notes in Mathematics. Springer, 1974.
C. Hermida. Simulations as modules. Unpublished, 1997.
C. Hermida. A categorical outlook on relational modalities and simulations. Presented at IMLA’02, July 2002.
P. Hirschhorn. Model Categories and Their Localizations. American Mathematical Society, 2003.
M. Hovey. Model Categories, volume 63 of Mathematical Surveys and Monographs. American Mathematical Society, 1999.
A. Joyal, M. Nielsen, and G. Winskel. Bisimulation and open maps. Information and Computation, 127, 1996.
K.Hess, P.E.Parent, A.Tonks, and K.Worytkiewicz. A model structure `a la Thomason on 2-Cat. To appear.
S. Lack. A Quillen model structure for 2-categories. K-Theory, 2002.
R. Milner. A Calculus of Communicating Systems, volume 92 of Lecture Notes in Computer Science. Springer-Verlag, 1980.
R. Milner. Communication and Concurrency. Prentice Hall, 1989.
M. Nielsen, G. Plotkin, and G. Winskel. Petri nets, event structures and domains. Theoretical Computer Science, 13:85–108, 1981.
D. Quillen. Homotopical Algebra, volume 43 of Lecture Notes in Mathematics. Springer, 1967.


W. Reisig. Petri Nets. EATCS Monographs on Theoretical Computer Science. Springer-Verlag, 1985.
R. Street. The algebra of oriented simplexes. J. Pure Appl. Algebra, 49:283–335, 1987.
R. Street. Handbook of Algebra, chapter Categorical Structures, pages 529–577. Elsevier Science, 1996.
R. W. Thomason. Cat as a closed model category. Cahiers de Topologie et G´eometrie Diff´erentielle, 21(3):305–324, 1980.
G. Winskel. Event structures. In W. Brauer, W. Reisig, and G. Rozenberg, editors, Petri Nets: Applications and Relationships to Other Models of Concurrency, volume 255 of LNCS, pages 325–392. Springer-Verlag, 1987.
H. Wolff. V-cat and V-graph. J. of Pure and Applied Algebra, 4:123–135, 1974.
