Electronic Notes in Theoretical Computer Science 134 (2005) 3–18	
www.elsevier.com/locate/entcs


Towards a General Solution to Drawing Area-Proportional Euler Diagrams
Stirling Chow 1 ,2	Frank Ruskey 3
Department of Computer Science University of Victoria Victoria, B.C., Canada

Abstract
We present a deterministic algorithm for drawing Euler diagrams using n simple polygons so that the regions have a prescribed area. Our solution works for all Euler diagrams that have a region of common intersection (i.e., region {1, 2,. . . , n}), and for any weight function. When there is no region for {1, 2,. . . , n}, the algorithm can still be applied, but will sometimes create an Euler diagram where the curves are self-intersecting.
Keywords: diagrams, drawing, area-proportional, Euler, Venn


Introduction
An Euler diagram is said to be area-proportional if the diagram’s regions have areas that are directly proportional to a specified weight function. Figure 1 shows an area-proportional Euler diagram for three pos/neg tests for glaucoma where, for example, the region representing the 7 patients who tested positive exclusively with Retinal Test #1 has exactly twice the area of the region representing the 14 patients who tested positive on all three tests.
When used for data visualization, area-proportional Euler diagrams lever- age viewers’ perceptual capabilities (i.e., comparing areas) in addition to their

1 Research supported in part by an NSERC Canada Graduate Scholarship.
2 Email: schow@cs.uvic.ca
3 Research supported in part by NSERC.

1571-0661 © 2005 Published by Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2005.02.017



Retinal Test #1

Fig. 1. Conformance data for three glaucoma diagnostic tests; the region within a curve represents patients who tested positive (adapted from an example by Artes and Chauhan [2]).

Fig. 2. An example of a 5-Venn diagram where all regions have equal area.
cognitive capabilities (i.e., reading labels). Although studies need to be per- formed, it is believed that a “good” area-proportional Euler diagram should be more effective at conveying information than a comparable standard Euler diagram. Area-proportionality may also have applications to the general Euler diagram generation problem. For example, Flower et al. [6] have developed a hill-climbing algorithm that begins with an arbitrary Euler diagram and re- peatedly applies small changes to increase the diagram’s suitability according to various metrics. An area-proportional Euler diagram in which every region has equal area (see Figure 2) may converge faster to a solution than one in which the areas have a large variance.
At GD 2003, we presented algorithms for drawing area-proportional Euler diagrams for two and three sets [4]. In this paper, we introduce a new algo-


rithm for drawing area-proportional Euler diagrams for any number of sets. We begin by introducing some definitions.
Definition 1.1 Let C = {c1, c2,... , cn} be a set of n simple closed curves in the plane. Given any subset R ⊆ {1, 2,... , n}, let the region R be
region(R)= ⎧⎨  i∈R int(ci), if R /= ∅;

n
i=1
ext(ci),  if R = ∅,

where int(ci) and ext(ci) are the open interior and exterior of ci, respectively.
Let the regions of C be
regions(C)= {R | R ⊆ {1, 2,... , n} and region(R) is non-empty}
When the context is clear, we may refer to R by listing its enclosing curves (e.g., region {1, 3, 4} ≡ region 134).
Definition 1.2 An Euler diagram for S ⊆ P({1, 2,... , n}) is a set C of at most n simple closed curves in the plane such that
regions(C)= S ∪ {∅}
and
region(R) is connected for all R ∈ regions(C)
Since region(∅) is non-empty, we may omit ∅ from S.
Figure 3 shows an example of an Euler diagram for S = {1, 2, 3, 4, 15, 24, 124}.
Note that region ∅ is the unbounded portion of the plane.
Definition 1.3 A Venn diagram with n curves, referred to as an n-Venn diagram, is an Euler diagram for S = P({1, 2,... , n}).
Figure 2 is an example of a 5-Venn diagram since it has regions for all 32 possible subsets of {1, 2,... , 5}.
Definition 1.4 An area-proportional Euler diagram for S ⊆ P({1, 2,... , n}) and weight function ω : S → R+ is an Euler diagram for S such that


area(R1) area(R2)
ω(R1)
=
ω(R2)
for any R1, R2 ∈ S\{∅},

where area(R) is a measure of region R’s area in some unit system.
Since region ∅ is unbounded, it is ignored when considering area-proportionality; however, a specific area can be assigned to region ∅ by bounding the diagram



Fig. 3. An example of an Euler diagram.
in a rectangle (or expanding the diagram’s perimeter if the smallest enclosing rectangle yields too large an area).
In the above definitions, an Euler diagram’s curves can be any shape as long as they are simple (i.e., do not self-intersect). Our algorithm produces Euler diagrams where the curves are simple polygons.
We can now proceed to define the problem that this paper addresses.
Definition 1.5 The Area-Proportional Euler Diagram Problem consists of the following input/output pair:
INPUT:	S ⊆ P({1, 2,... , n}) and ω : S → R+
OUTPUT:	An area-proportional Euler diagram for S and ω.

Structure Generation
An Euler diagram defines certain relationships between the curves and the regions. This section describes how to generate a representation of the struc- ture of an Euler diagram so that, for example, the following questions can be answered:
Which curves intersect each other?
Which regions does a curve pass through?
Which regions are adjacent to each other?
Generating an Euler diagram’s structure becomes the first step in drawing the diagram so we begin by defining what we mean by “the structure of an Euler diagram.”


Definition 2.1 Let C be an Euler diagram and define the projection of C to be the set of points in the plane
proj(C)= {(x, y) | (x, y) ∈ ci for some ci ∈ C}
In other words, proj(C) is the union of C’s curves.
For example, to produce a projection of the Euler diagram in Figure 3, we simply ignore the curves’ colors.
Definition 2.2 Let C be an Euler diagram and define the Euler Graph of C to be the edge-labelled directed plane multigraph G(C) whose vertices are the points of intersection 4 in proj(C) and whose edges are the curve segments in proj(C). If a curve segment is a simple closed curve, then arbitrarily choose a point on the curve to be a vertex.
Each edge is labelled by the curves that map to its respective segment.
The edges are oriented clockwise about their respective curves. In case of a conflict, the edge is considered to be bidirectional.
Definition 2.3 Let C be an Euler diagram and define the Euler Dual of C to be the vertex and edge-labelled directed plane multigraph G∗(C) where G∗(C) is the planar dual of G(C).
Each edge is labelled the same as its corresponding edge in G(C), and each vertex is labelled by the region represented by its respective face in G(C).
An edge e = (u, v) is directed u → v if label(v) ⊂ label(u), v → u if
label(u) ⊂ label(v), and u ↔ v if neither case holds.
Figure 4 shows the Euler Graph and Dual of the Euler diagram in Figure
3. Note how a clockwise traversal of a vertex in G∗(C) visits the dual edges in the same order as a clockwise traversal of the associated face in G(C) visits the non-dual edges.
Definition 2.4 Let G be a plane graph and define the planar map of G to be the graph that results from omitting positional information from G while preserving the cyclic order of edges about each vertex.
The planar maps of G(C) and G∗(C) encode important structural informa- tion about C while omitting the curve coordinates, and they provide a useful decomposition for solving the Area-Proportional Euler Diagram Problem:
Given regions S and weight function function ω,

4 p = (x, y) is a point of intersection if ∀ ϵ > 0, the disk centered at p of radius ϵ contains three non-colinear points.


15







3








2

1

Fig. 4. The Euler Graph and Dual of the Euler diagram in Figure 3.

Construct a planar map of the Euler Graph whose dual vertices are
S;
Embed the planar map in the plane so that the face representing region ∅ is the unbounded outer face and the bounded faces have areas proportional to ω.
The first step generates the structure of the Euler diagram, and the second step draws the Euler diagram. The following discussion describes a number of methods for creating the planar map of an Euler Graph for which S =


	

Fig. 5. Edwards’ construction of n-Venn diagrams for n = 3, 4, 5.
P({1, 2,... , n}) (i.e., the planar map of a Venn diagram). After describing the process of drawing such diagrams, we will address the issue of how to remove the unwanted regions.
In 1989, Anthony Edwards [5] published an iterative method for drawing Venn diagrams for any number of curves. Edwards’ construction begins with a base diagram for three curves. Additional curves are added one-at-a-time so that they bisect every region and weave around the center circle (see Figure 5). The resulting diagram of n curves has 2n regions representing all possible combinations of the curves.
Because of its iterative nature and simple rule for adding a curve, Edwards’ construction can be easily implemented in a program to generate the respective planar map. All that is needed is a planar map data structure (e.g., an adjacency list graph representation where the ordering of edges in the linked- list is significant), and a routine for updating the adjacency list as each curve is added. Since Edwards’ diagrams are planar graphs with 2n faces and degree 4 vertices, the resulting graph has 2n − 2 vertices and 2n+1 − 4 edges by an application of Euler’s formula [7] (see Figure 6).
Another technique for generating the planar map of an Euler Graph with all possible regions is to use symmetric chain decompositions of the Boolean
lattice [1]. Let SCD = {c1, c2,.. .} be the  n  chains of the degree n
Boolean lattice. Let cmin and cmax be the chains that contain ∅ and 12 ··· n, respectively. Construct a planar map of the Euler Dual by orienting each chain from its maximal to minimal element, placing the chains side-by-side, and then




Fig. 6. The Euler Graph and Dual for Edwards’ 4-Venn construction.
connecting the minimal element of each chain to ∅ and the maximal element of each chain to 12 ··· n. The dual of the planar map will be the planar map
of G(C) and will have 2n faces representing all the possible regions,  2
vertices, and 2n +  n  − 2 edges as shown in Figure 7.

Diagram Drawing
An Euler diagram is said to be ray monotone if there exists a point in region
{1, 2,..., n} from which all rays intersect each curve exactly once. The fol- lowing generalization of results by Bultena et al. [3] establishes a connection between the Euler Dual and ray monotonicity; they form the basis for our drawing algorithm.
Lemma 3.1 An Euler diagram C is monotone if, and only if, G∗(C) is acyclic and has a single source and a single sink.
Lemma 3.2 Let C be an Euler diagram with n curves and a region R =



12	23	13	14	24	34







Fig. 7. A SCD construction of an Euler Graph for 4-Venn.
12 ··· n. If C is monotone, there exists a ray monotone drawing of C such that all rays emanating from a point in R intersect each curve exactly once.
Both Edwards’ and the symmetric chain decomposition construction pro- duce monotone Euler diagrams. The following example, based on Edwards’ construction of 4-Venn (see Figure 6), illustrates how our drawing algorithm works.
We begin by choosing any path in G∗ from the source to the sink and cut the associated edges in G to form G' (see Figure 8). Because G is monotone, G' will be an acyclic digraph.
Let TS = L1, L2,... , Lk be the layers of a topological sort of G' = (V, E) where Li ⊂ V is the set of minimal vertices (i.e., those for whom all in-edges




Fig. 8. An arbitrary path in the dual and the associated cut in the graph of Figure 6.
have been visited), from the ith step of the sort. In our example,
TS = {1, 14}, {2}, {3}, {11}, {7}, {8},
{4, 12}, {5}, {6}, {13}, {9}, {10}.
Uniformly distribute 2k rays about a common point x and assign Li to ray 2i − 1. Draw a regular 2k-gon with area ω(12 ··· n) (see Figure 9).
Because G is monotone, every region except ∅ and 12 ··· n has a face comprised of two directed paths; we will refer to a face’s source and sink as the vertices where the paths diverge and converge, respectively (see Figure 10). We will also refer to one of the paths as the “free path” and the other as the “fixed path”.
By drawing region 12 ··· n first and visiting the remaining regions in the topological order of G∗, we establish the invariant that when we draw region R, all regions that have in-edges to R have been drawn and all regions that
have out-edges from R have not been drawn. In other words, one of the two directed paths in R’s face will be fixed (the one that is part of the current drawing), while the other path will be free to expand along the rays.




17 {6}
19 {13}


21 {9}




15 {5}	23 {10}




13 {4,12}






11 {8}
1 {1,14}






3 {2}



9 {7}


7 {11}

5 {3}

Fig. 9. The drawing of region 1234 of Figure 6.

Fig. 10. An example showing face 12’s two directed paths and source/sink.

Figure 11 shows the state of the diagram when region 12 is visited. Region 12’s source and sink define the rays along which its free path can expand. In this example, we show a uniform expansion algorithm where the free path is moved a distance δ along each ray. A formula for δ that yields the neces- sary area is easily derived using trigonometry, and the resulting computation requires the solution of a quadratic equation.
A drawback of uniform expansion is that the diagram becomes unnecessar- ily jagged. A better solution is to smooth the free path by allowing δ to vary from ray-to-ray. Although more complicated to derive, computing δ again reduces to solving a quadratic equation. Figure 12 shows a 4-Venn diagram where each region has equal area and a non-uniform δ is used.




17 {6}
19 {13}


21 {9}



15 {5}






13 {4,12}






11 {8}
23 {10}
s



1 {1,14}
δ



t
3 {2}



9 {7}


7 {11}

5 {3}

Fig. 11. The iterative drawing algorithm when R = 12.

Fig. 12. 4-Venn diagram with equal areas and non-uniform δ.
Structure Generation Revisited
In the previous sections, we described an algorithm that generates and draws area-proportional Venn diagrams. What happens with the algorithm when it tries to draw a region R for which ω(R)= 0?
In this case, the computation of the distance of the free path from the fixed path yields δ = 0. In other words, the two paths overlap as shown in Figure 13, and the face representing region R is empty (i.e., it doesn’t exist); this is exactly what we want to represent ω(R) = 0. We’ll refer to this as

compressing face R.
Because of the diagram’s monotonicity, segments of the same curve cannot be present on both the free and fixed paths of a non-12 ··· n face; therefore, compressing the face cannot destroy the simplicity of the curve polygons, and the result will be a valid Euler diagram. If face 12 ··· n is compressed, depending on which other faces have been compressed, a self-intersection may result as shown in Figure 14.
Based on the above, we can think of an area-proportional Euler diagram as being an area-proportional Venn diagram where some of the regions have zero weight. To generate the structure of an Euler diagram, we first gener- ate the structure of its associated Venn diagram. Then for each unwanted region, we compress the associated face and update the dual. As long as the region of common intersection remains, the resulting dual will represent a valid monotone Euler diagram. The structure of the Euler diagram can be post-processed (e.g., to remove some of the overlapping edges and seperate high-degree vertices), and then fed back through the drawing procedure to render an area-proportional Euler diagram as shown in Figure 15.

Conclusion
We have presented an algorithm that solves a large subset of the Area-Proportional Euler Diagram Problem. The first step generates the structure of a monotone Euler diagram for a given set of regions and is fundamental for solving many other Euler diagram problems. The second step takes the structure and draws
it so that the regions have a specified area. Our solution works for all Euler diagrams that have a region representing the intersection of all curves and for all weight functions. Our method also yields heuristic solutions for many cases where there is no region of common intersection.
Our focus has been on achieving area-proportionality largely without re- gard for aesthetics. Since the drawings are designed to convey information, aesthetics and usability are extremely important. There are a number of al- gorithm parameters that can be altered in order to produce different drawings (e.g., the structure generation algorithm, the ray placement, and the free path drawing method). Some of our future work will involve exploring how these parameters affect the final drawing with the goal to determine a strategy for selecting the parameters that produce the “best” result. Further study is needed to ascertain which features of a diagram might make it the “best” representation of of a given data set; in all likelihood, this will depend on the context/application in which the diagram is used.
Readers are encouraged to try our implementation of the algorithm which is



Fig. 13. Compressing the face highlighted with yellow.



Fig. 14. An example of two compressions of region 1234: The first is valid, the second introduces a self-intersection because region {blue,red,green} is also compressed.

Fig. 15. An Euler Diagram for S = {1, 12, 123, 1234}.


available at the authors’ website: http://theory.cs.uvic.ca/venn/DrawEuler/. The screen shots that appear in this paper were captured from this application.

References
Aigner, M., Lexicographic matching in Boolean algebras, Journal of Combinatorial Theory, Series B 14 (1973), pp. 187–194.
Artes, P. H. and B. C. Chauhan, Longitudinal changes in the visual ﬁeld and optic disc in glaucoma, Progress in Retinal and Eye Research Articles in Press, Corrected Proof.
Bultena, B., B. Gru¨nbaum and F. Ruskey, Convex drawings of intersecting families of simple closed curves, 11th Canadian Conference on Computational Geometry (1999), pp. 18–21.
Chow, S. and F. Ruskey, Drawing area-proportional Venn and Euler diagrams, in: G. Liotta, editor, Proceedings of Graph Drawing 2003, Lecture Notes in Computer Science 2912 (2004),
pp. 466–477.
Edwards, A. W., Venn diagrams for many sets, New Scientist 7 (1989), pp. 51–56.
Flower, J., P. Rodgers and P. Mutton, Layout Metrics for Euler Diagrams, in: Seventh International Conference on Information Visualization (IV03) (2003), pp. 272–280.
URL http://www.cs.kent.ac.uk/pubs/2003/1652
Ruskey, F., A survey of Venn diagrams, Electronic Journal of Combinatorics 4 (1997 (update 2001)), DS#5.
