Electronic Notes in Theoretical Computer Science 191 (2007) 49–72	
www.elsevier.com/locate/entcs

Semiring Neighbours:
An Algebraic Embedding and Extension of Neighbourhood Logic
Peter H¨ofner 1 ,2
Institute for Computer Science Universita¨t Augsburg
D-86135 Augsburg, Germany

Abstract
In 1996 Zhou and Hansen proposed a first-order interval logic called Neighbourhood Logic (NL) for specifying liveness and fairness of computing systems and defining notions of real analysis in terms of expanding modalities. After that, Roy and Zhou developed a sound and relatively complete Duration Calculus as an extension of NL.
We present an embedding of NL into an idempotent semiring of intervals. This embedding allows us to extend NL from single intervals to sets of intervals as well as to extend the approach to arbitrary idempotent semirings. We show that most of the required properties follow directly from Galois connections, hence we get many properties for free. As one important result we obtain that some of the axioms which were postulated for NL can be dropped since they are theorems in our generalisation. Furthermore, we discuss other interval operations like Allen’s 13 relations between intervals and their relationship to semiring neighbours. Then we present some possible interpretations for neighbours beyond interval settings. Here we discuss for example reachability in graphs and applications to hybrid systems. At the end of the paper we add finite and infinite iteration to NL and extend idempotent semirings to Kleene algebras and ω algebras. These extensions are useful for formulating properties of repetitive procedures like loops.
Keywords: Neighbourhood Logic, Temporal Logic, ITL, IL, Semiring, Quantale, Kleene Algebra, Omega Algebra.


Introduction
Chop-based interval temporal logics, such as ITL [10] and IL [8] are useful for the specification and verification of safety properties of real-time systems over time intervals. In these logics, one can easily express properties such as
“if φ holds for an interval, then there is a subinterval where ψ holds”.
As it is shown in [26], these logics cannot express all desired properties. For example (unbounded) liveness properties such as

1 This work was partly supported by DFG (German research Foundation)
2 Email: hoefner@informatik.uni-augsburg.de

1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2006.09.040

“eventually there will be an interval where φ holds”
is not expressible in these logics. Surprisingly, these logics cannot even express state transitions. Obviously, such properties are essential for describing and specifying real-time systems. As it is shown in [26], the reason is that the modality chop, denoted by -, is a contracting modality, in the sense that the truth value of φ-ψ on [b, e] only depends on subintervals of [b, e]:
φ-ψ holds on [b, e] iff
there exists m ∈ [b, e] such that φ holds on [b, m] and ψ holds on [m, e].
Hence, in 1996, Zhou and Hansen have introduced extra atomic formulas to propose a first-order interval logic, called Neighbourhood Logic (NL) [27,28], for specifying liveness and fairness of computing systems and also defining notions of real analysis in terms of expanding modalities. These atomic formulas relate time intervals to their (left and right) interval neighbours. In 1997, Roy and Zhou presented a sound and relatively complete Duration Calculus as an extension of NL [23]. They had already shown that the basic unary interval modalities of [12] and the three binary interval modalities (C, T and D) of [24] could be defined using the modalities of NL. Hence they presented an embedding of the logics of [12] and
[24] in NL. Unfortunately the use of NL yields long formulas which are difficult to read, to understand and to calculate with. An “unreadable” example is given by the chop operator in the next section.
To overcome this deficiency, we present in this paper an algebraic embedding of NL into the semiring of intervals presented e.g. in [14]. This embedding allows us to extend NL from single intervals to sets of intervals as well as to extend the approach to arbitrary idempotent semirings. The former step extends NL in the sense that one can formulate properties for sets of intervals (which is a nice extension), but also paves the way to axiomatise NL in an algebraic way. The latter step allows us to shift and re-use the knowledge of NL to other areas of Computer Science as we will show in later sections. Because of work in [27] our extension is also an extension of the logics of [12] and [24]. Before we embed NL in Section 3, we recapitulate the main ideas of Neighbourhood Logic in Section 2. In Section 4 we show that most of the required properties follow directly from Galois connections, hence we get properties for free. As one important result we obtain that some of the axioms which were postulated for NL can be dropped since they are theorems in our generalisation. Afterwards, in Section 5, we discuss how the chop operator as well as Allen’s 13 relations between intervals [1,2] are connected to our algebraic framework. In Section 6 we briefly present some possible interpretations of neighbours in other models. Here we discuss for example reachability in graphs and applications to hybrid systems. At the end of the paper, in Section 7, we add finite and infinite iteration to NL by extending the semiring model to Kleene algebras and ω algebras. These extensions are useful for formulating repetitive properties and procedures like loops in programs.

About Neighbourhood Logic
In [27] Zhou and Hansen introduce left and right neighbourhoods as new primitives to define other unary and binary modalities of intervals in a first-order logic. For this, we need intervals as carrier sets. That is why we define intervals over a poset T of time points in the usual way as
[b, e] =df {a | b ≤ a ≤ e} , where b ≤ e , 
a, b, e ∈ T and (T, +, 0) is assumed to be a commutative monoid. Note that we only consider non-empty intervals. Furthermore, we postulate a subtraction − on T sat- isfying for any interval [b, e] the equations e − b ≥ 0 and e − b =0 ⇔ e = b. Hence, it is possible to calculate the length l of the interval [b, e] as e − b 3 . Sometimes the length is also called duration of [b, e]. Additionally, T has to be cancellative with respect to +, i.e., a + c = b + c ⇒ a = b. For example one can use IR, the set of real numbers, as T.


Following [27] the two simple expanding modalities follows:
lφ and
rφ are defined as

rφ holds on [b, e] iff there exists δ ≥ 0 such that φ holds on [e, e + δ],
lφ holds on [b, e] iff there exists δ ≥ 0 such that φ holds on [b − δ, b],
or, by setting a =df b − δ and c =df e + δ,
rφ holds on [b, e] iff there exists c ≥ e such that φ holds on [e, c],
lφ holds on [b, e] iff there exists a ≤ b such that φ holds on [a, b].
Here φ is a formula of NL. More precisely, the set of terms θ, θi ∈ Term is defined by the abstract syntax [26]
θ ::= x|v|fn(θ1,... , θn) ,
where x stands for global variables, v for temporal variables and f for global function symbols. Here x is called global since its meaning is independent of time and time intervals; v is a called temporal since it represents real-valued interval functions, i.e., the functions’ domains are time intervals. A special temporal variable is l which returns the length of the respective interval as its value. At last, fn stands for n-ary functions on real-numbers, which are again independent of time and time intervals. Using this definition of terms, the set of formulas of NL is then defined by


φ ::= X|Gn(θ1,... , θn)|¬φ|φ ∨ ψ|(∃ x)ψ|
lφ|
rφ , 

where Gn stands for global n-ary relation symbols and X for temporal propositional letters. Since, except for G and X, the definition is standard, we give a brief interpretation of these two symbols. Gn represents n-ary truth-valued ({true, false})

3 Note: − need not be the inverse of +; − only has to fit well with interval composition. As example we can define e − b as 0 if e = b and 1 otherwise.

functions on real numbers, which is independent of time and time intervals. A temporal propositional letter is a truth-valued interval function, i.e., it depends on time intervals. More details as well as examples can be found e.g. in [26]. The use of intervals instead of time points has the advantage that time points can be modelled as intervals [b, e] with b = e and therefore intervals are more general.
With the modality	r( L) one can reach the left (right) neighbourhood of the
beginning (end) point of an interval:
φ	lφ	rφ	φ

z   }|	{z	}|	{ 
b	e
z	}|	{z  }|	{
e	c

In contrast to the chop operator the neighbourhood modalities are expanding

modalities, i.e., they are not contracting operators. Thus
L and
r depend not on

subintervals of an interval [b, e], but on intervals “outside”. To simulate situations inside an interval one has to combine these modalities. In [27] it is shown that the modalities of [12] and [24] as well as the chop operator can be expressed by the neighbourhood modalities. For example, using the interval’s length l, therefore - can be defined as

φ-ψ ⇔ (∃ x, y)((l = x + y) ∧
L  r((l = x) ∧ φ ∧
r((l = y) ∧ ψ))) ,	(1)

where (l = x + y) stipulates that the two consecutive right expansions of lengths x and y exactly cover the original interval. In Section 5, we will see a much easier characterisation using semirings and our embedding of NL.

Embedding Neighbourhood Logic into Semirings
In this section we show an algebraic embedding of NL into the setting of semirings. Before this we recapitulate the algebraic background and illustrate our definitions with the algebra of time intervals, which will be the base for our embedding.
Basic Deﬁnitions
As already mentioned we will use sets of intervals as elements of our algebra. This shift to sets extends NL in the manner that we can now formulate expressions and properties for sets of time intervals and not only for single intervals. To formulate properties concerning single intervals one can use the singleton set that only consists of one interval. Additionally, as we will see later, it turns out that this shift yields the well-known algebraic structure of a semiring (see e.g. [13]). Let us have a look at the structure
INT =df (P(I), ∪, ;, ∅, 1l) ,
where I =df {[b, e] | b ≤ e, b, e ∈ T} is the set of all intervals, 1l =df {[b, b] | b ∈ T} is the set of all “one point intervals” and ; : P(I) × P(I) → P(I) is the elementwise interval composition, where two intervals [a, b] and [c, d] are composable with result [a, d] iff b = c. In other words the intervals are composeable iff the interval [c, d] is part of the “right neighbourhood” of [a, b], or, symmetrically, iff [a, b] is part of the “left neighbourhood” of [c, d].

In the remainder we repeat the basic definitions of semirings and related alge- braic structures and operators since, as we will see, INT is such a structure. More details about semirings, domain semirings, etc. can be found in [6,9,13].
A semiring is a quintuple (S, +, · , 0, 1) such that (S, +, 0) is a commutative monoid and (S, ·, 1) is a monoid such that · is distributive over + and strict , i.e., 0 · x = 0 = x · 0. The semiring is idempotent if + is, i.e. x + x = x. On idempotent semirings the relation x ≤ y ⇔df x + y = y is a partial order, called the natural order on S. The definition implies that 0 is the least element and + and · are isotone with respect to ≤. If S has a greatest element, we denote it by T. It is straightforward to show that INT forms an idempotent semiring, where the natural order coincides to the subset order, 0 to the empty set, 1 to 1l and the greatest element to the set of all intervals I.
An idempotent semiring S is called a quantale if S is a complete lattice under the natural order and · preserves arbitrary suprema. Following Conway [4] one might also call a quantale a standard Kleene algebra. A quantale is called Boolean if the underlying lattice is Boolean, i.e., the lattice is equipped with a complement function, which is denoted by . An important semiring (that is even a quantale) is, next to INT, REL(M ), the algebra of binary relations over a set M under union and relational composition.
A test semiring (quantale) is a pair (S, test(S)), where S is an idempotent semi- ring (a quantale) and test(S) ⊆ [0, 1] is a Boolean subalgebra of the interval [0, 1] of S such that 0, 1 ∈ test(S) and join and meet in test(S) coincide with + and ·. This definition corresponds to that of Kozen [18]. In INT an element is a test iff it is a subset of 1l, i.e., the element only consists of point intervals. We will use x, y, z for arbitrary S-elements and p, q, r,... for tests. By ¬ we denote complementation in test(S). As above, a, b, c,... are used for time points and are often used as starting and end points of intervals.
We introduce a domain operator that assigns to a set of intervals the test of all its starting points, i.e., for x ∈ P(I) we want
 x = {[b, b] | [b, e] ∈ x} .
Abstractly, a domain semiring (quantale) is a pair (S, ), where S is a test semiring (quantale) and the domain operation  : S → test(S) satisfies
x ≤ x · x ,	(d1)	 (p · x) ≤ p .	(d2)
The relevant consequences of  are shown in [6]. To further explain (d1) and (d2) we note that their conjunction is equivalent to each of
 x ≤ p ⇔ ¬p · x ≤ 0 ,	(gla)	 x ≤ p ⇔ x ≤ p · x ,	(llp)
which constitute elimination laws for domain. (gla) says that ¬p · x is the greatest left annihilator of x. (llp) says that p · x is the least left preserver of x. Moreover, domain is universally disjunctive and hence strict, i.e., 0 = 0. Furthermore we can

strengthen (d1) to the equation


x =  x · x .	(d1')

The domain operator need not exist on every test semiring [19], but in the case of quantales, and therefore in INT, domain is guaranteed to exist. Most publica- tions concerning semirings with domain (e.g. [6]) claim another additional axiom. Therefore our form of domain is sometimes also called predomain.
A corresponding codomain operation ’ : S → test(S) can be defined analogously and can be seen as the domain operation in the opposite semiring, where opposition just changes the order of multiplication. In INT, the codomain operator charac- terises the ending points, i.e., x’ = {[e, e] | [b, e] ∈ x}. In particular, a codomain semiring (quantale) is a pair (S, ’), where S is a test semiring (quantale) and the codomain operation ’ : S → test(S) fulfils
x ≤ x · x’ ,	(cd1)	(x · p)’ ≤ p .	(cd2)
Again,the conjunction of these two equations is equivalent to each of
x’ ≤ p ⇔ x · ¬p ≤ 0 ,	(gra)	x’ ≤ p ⇔ x ≤ x · p .	(lrp) Here, (gra) says that x · ¬p is the greatest right annihilator of x, whereas (lrp)
says that x · p is the least right preserver of x.
S is called a bidomain semiring (quantale) if it has both domain and codomain operations. In bidomain semirings we have the following separability property:
x’ · y ≤ 0 ⇔ x’ · y ≤ 0 ⇔ x · y ≤ 0 .	(sep)
Proof. The first assertion holds by shunting 4 and (gla): x’ · y ≤ 0 ⇔ y ≤ ¬x’ ⇔
x’ · y ≤ 0; the second (x’ · y ≤ 0 ⇔ x · y ≤ 0) by shunting and (gra).	 
In any quantale the left residual x/y and the right residual x\y exist and are characterised by the Galois connections
z ≤ x/y ⇔df z · y ≤ x	and	z ≤ x\y ⇔df x · z ≤ y . 
In INT the first of these operations is characterised pointwise by t ∈ V /U ⇔ ∀ u ∈ U : t ; u ∈ V (provided t ; u is defined). The second one is symmetrical. Based on the left and right residuals, in a Boolean quantale the right detachment x[y and the left detachment x♩y can be defined as
x[y =df x/y	and	x♩y =df x\y . 
In general, we call a Boolean semiring, where detachments exist, a detachment semiring . The pointwise characterisation of right detachment in INT is t ∈ V [U

4 Shunting means for p, q, r ∈ test(S), that p ≤ q · r ⇔ p + ¬q ≤ r (see e.g. [11]).

⇔ ∃ u ∈ U : t ; u ∈ V . Informally, V [U cuts intervals from U off the right ends of intervals of V , where possible. By de Morgan’s laws the Galois connection for / transforms into the exchange law

x[y ≤ z ⇔ z · y ≤ x	(exc)

that generalises the Schr¨oder rule of relational calculus. More details concerning residuals and detachments can be found in [21].

From Detachments and Domain to Neighbourhoods
In the remainder of the section we show how to embed NL into semirings. We start by deriving a connection between the neighbourhood modalities of [26] and detachments. Therefore, we have a look at the special case of V [U where V = I (the set of all intervals) and U = Iφ =df {[b, e] | [b, e] ∈ I, φ holds on [b, e]} (the set of all intervals where φ holds) and derive an algebraic expression for the right
neighbourhood modality	rφ using detachments.

rφ holds on [b, e] ⇔ ∃ [e, u2] ∈ I such that φ holds on [e, u2]
⇔ ∃ [u1, u2] ∈ Iφ : u1 = e
⇔ ∃ [u1, u2] ∈ Iφ : [b, e]; [u1, u2] is defined
⇔ ∃ [u1, u2] ∈ Iφ : ([b, e]; [u1, u2]) ∈T 
⇔ [b, e] ∈ T[Iφ .

Looking again at the figure of page 4, it is easy to observe the “graphical” con- nection between the modalities of NL and detachments. Similarly, we get for left neighbourhoods
Lφ holds on [b, e] ⇔ [b, e] ∈ Iφ♩T .
Hence, in a quantale, we can generalise the neighbourhood modalities to sets of intervals by setting

rφ holds on x ∈ P(I) ⇔ x ≤ T[Iφ ,	(2)
Lφ holds on x ∈ P(I) ⇔ x ≤ Iφ♩T .	(3)

Nearly all results given by Zhou, Hansen and Roy can be adapted easily to the semiring of intervals INT. Later on we discuss a situation where the embedding is a bit more complicated.
On the other hand, we know that INT also forms a bidomain semiring. As shown above, the domain (codomain) characterises the starting points (end points)

of intervals. This implies another view of
rφ and
Lφ.

rφ holds on {[b, e]} e E [u1, u2] ∈ Iφ : [b, e]; [u1, u2] is defined
e E [u1, u2] ∈ Iφ : e = u1
e {[b, e]}’ ≤ Iφ,


In general we get an alternative definition of
Lφ and
rφ.

rφ holds on x ∈ У(I) e x’ ≤ Iφ ,	(4)
Lφ holds on x ∈ У(I) e x ≤ I ’ ,	(5)
and therefore we get the equivalences x ≤ Iφ♩T e x ≤ I ’ and x ≤ T[I	e x’ ≤
 Iφ in INT. This relation holds generally between detachments and domain in any detachment semiring when, like INT, it is modal , i.e., satisfies (x · y) = (x · y). To show this and further results we first need the following auxiliary lemma.
Lemma 3.1 [6] In a semiring S we have the following equivalences:
x · p ≤ 0 e x ≤ x · чp e x ≤T · чp
p · x ≤ 0 e x ≤ чp · x e x ≤ чp ·T 
Now, we are able to prove the desired result.
Lemma 3.2 If S forms a detachment semiring as well as a bidomain semiring and has a greatest element T, then
T[y ≤ T[ y = T· y	and	y♩T ≤ y’♩T = y’ · T.
x ≤ T[y ⇒ x’ ≤ y	and	x ≤ y♩T ⇒ x ≤ y’.
If S is modal, we get equations in (a) and equivalences in (b).
Proof. We only show the left (in)equalities. The right ones are symmetrically. First we get by isotony, annihilation and (d1')
x · y ≤ 0 ⇒ x · y · y ≤ 0 · y e x · y ≤ 0 .	(6)
Now we use the principle of indirect inequality and get by (exc), (6) and (exc) again
T[y ≤ w e w · y ≤ 0 ⇐ w · y ≤ 0 e T[ y ≤ w . 
The second assertion holds since in general z[p = z · p. The proof can be found
e.g. in [21].
By (a), Lemma 3.1 and (lrp):
x ≤ T[y ⇒ x ≤T · y e x ≤ x · y e x’ ≤ y . 
If S is modal, we have x · y ≤ 0 e x · y ≤ 0 (see e.g. Lemma 5.7 in [6]) and therefore the second step in the proof of (a) and the first step of (b) become equivalences.


After this short excursus about relationships between detachment and (co)domain, we continue to embed NL. As a first result we note that at least one of the eight axioms, which are claimed in [27] can be dropped, since it is a theorem in domain semirings. Further simplifications on calculations are given in Section 4.1 after introducing a more general framework of neighbourhoods.

Theorem 3.3
(φ V ψ) e
φ V	ψ, where
is either
r or	L.

Hence Axiom 4 of [27], which postulates the distributivity of now a conclusion.
over disjunction, is

The proof will be given in Section 4 in a more general environment (see Lemma 4.7).

Now we will discuss the box operators  L φ =df ~
L~φ and  r =df ~
L~φ of

Zhou and Hansen in detachment and bidomain semirings, respectively. Here, ~ is the negation of truth values, i.e., ~(true) = false and ~(false) = true. In [26,27,28] it is denoted, as usual, by ч. We have used ~, since ч clashes with the negation symbol for tests. The meaning of  L φ and  rφ is the following:
  rφ holds on [b, e] iff φ holds on all right neighbours of [b, e] ,
 L φ holds on [b, e] iff φ holds on all left neighbours of [b, e] .

Again we start with the pointwise characterisation of  in INT. Note that INT is a Boolean algebra and therefore the equation T = 0 holds.


  rφ holds on [b, e] e ~
r~φ holds on [b, e]

e ~([b, e] ∈ T[I∼φ) e [b, e] /∈ T[I∼φ
e [b, e] ∈ T[I∼φ
e [b, e] ∈ 0/I∼φ ,

where I∼φ =df Iφ is the set of all intervals where φ does not hold. Using the same generalisation as above we get
  L φ holds on x ∈ У(I) e x ≤ I∼φ\0 e I∼φ ; x ≤ 0 ,
  rφ holds on x ∈ У(I) e x ≤ 0/I∼φ e x ; I∼φ ≤ 0 .
Using modality we immediately get a (co)domain view for boxes:
  L φ holds on x ∈ У(I) e (I∼φ)’ ; x ≤ 0 ,	(7)
  rφ holds on x ∈ У(I) e x’ ; (I∼φ) ≤ 0 .	(8)
The equivalence in modal detachment semirings between the two settings of  L ( r) is immediate by definition of modality and (sep).

Calculations with (co)domain instead of detachments is more general because we do not use residuals and detachments and therefore do not need to assume their existence. That is the reason why we use the bidomain interpretation in the remainder.

In [27] the authors introduce the composed neighbourhood modalities
r  Lφ

and	L  rφ and call them converses. Since these are quite unhandy in calculations,

we show that they are again diamonds closely related to
L and
r. First we want

to illustrate the meaning of	r  Lφ.
r  Lφ
 		 	 	   
b	a	e	where a = e − δ
`	˛¸	x
Here, [a, e] is a postfix of [b, e]. However, one should mention that it is also possible that [b, e] is a postfix of [a, e].
r  Lφ
 	 	     	   
a	b	e	where a = e − δ
`	˛¸	x
In contrast to neighbourhoods, where some starting points have to be equal to some

end points of sets of intervals, here only end points occur. The end points of
L  rφ

have to form a subset of the ones of φ. Now we have a look at
the (co)domain interpretation of (4) and (5).
r  Lφ ( L
rφ) using


φ holds on x e x’ ≤  I


lφ 

e x’ ≤ {[b, e] | {[b, e]}≤ I ’}
e x’ ≤ {[b, b] | [b, b] ∈ I ’}
e x’ ≤ I ’ ,
L  rφ holds on x e  x ≤ Iφ .


We see in our setting the characterisation of
r Lφ and
L  rφ is no more compli-

cated than that of the single neighbourhood modalities. The four neighbourhood

operators ( L,
r ,	L  r ,
r  L) represent all combinations for comparing domain

and codomain and therefore motivate the generalised definition in the next section.

Generalised Neighbourhoods and some Properties
Starting with the definitions of neighbourhoods given in Section 3 and motivated by NL we give general definitions which work on bidomain semirings. In the remainder, we shorten the proofs and show the calculations only for one of multiple similar cases.
Definition 4.1 Let S be a bidomain semiring and x, y ∈ S. Then

x is a left neighbour of y	(or x ≤
x is a right neighbour of y	(or x ≤
x is a left boundary of y	(or x ≤
x is a right boundary of y	(or x ≤
n L y for short) iff x’ ≤ y, n ry for short) iff  x ≤ y’, b L y for short) iff  x ≤ y, b ry for short) iff x’ ≤ y’.

We will see below that the use of ≤ is justified. Now we have a closer look at the definition and its interpretation in INT. For example 4.1.(a) describes the situation where for each element [a, b] of x there exists at least one interval in y with starting
point b. Hence	rφ holds on x if and only if all elements of x are left neighbours of
intervals in Iφ. Therefore we call such elements left; whereas the original notation of [23] is right. The change in direction (left, right) follows from exactly changing
that point of view.	rφ starts with an interval of x and has a look at elements of
Iφ at its right which satisfy φ. Contrarily, our definitions start with elements of Iφ (intervals where φ holds) and look at all intervals which are composable to the left of such intervals.
In Definition 4.1 we do not postulate modality of S, which we used when motivat- ing and deriving the formulas in Section 3. Hence we get more general calculations. Of course we cannot use the equivalences given for detachment semirings given in Lemma 3.2. Starting from our definitions of neighbours and boundaries we calcu- late an explicit form of these operations if the existence of a greatest element T is guaranteed.
Lemma 4.2 If T exists, neighbours and boundaries can be expressed by

n L y = T· y , 
b L y = y ·T ,
n ry = y’ ·T ,
b ry = T· y’ .

Consequently, ( n L y)’ = y, ( n ry) = y’, ( b L y) = y and ( b ry)’ = y’.
Proof. By definition, (lrp), and Lemma 3.1:
x ≤ n L y e x’ ≤ y e x ≤ x · y e x ≤T · y .	 
In the case where we have also a complement function on S, we define perfect neighbours and boundaries. Here a complement function  : S → S has to satisfy the following three equations
x = x , (c1)	x + x = T , (c2)	x ≤ y e y ≤ x , (c3)

We call a semiring with a complement semiring. Note that complement semirings form a larger class than Boolean algebras even if we define meet by x H y =df x + y. The reason is that we do not postulate the distributivity laws for join and meet. In the remainder we assume S to be a complement bidomain semiring. Therefore, we can freely use (co)domain as well as the complement operation.

Definition 4.3
x is a perfect left neighbour of y	(or x ≤ n L y)	iff	x’ · y ≤ 0,
x is a perfect right neighbour of y	(or x ≤ n ry)	iff	y’ · x ≤ 0,
x is a perfect left boundary of y	(or x ≤ b L y)	iff	 x · y ≤ 0,
x is a perfect right boundary of y	(or x ≤ b ry)	iff	x’ · y’ ≤ 0.
(a) and (b) correspond to the box-operators of NL. By (c) and (d) we have an additional extension of NL. These two definitions provide “box-operators” for the converses of neighbourhood modalities, which are not defined in the semantics of NL in [26]. To justify the definitions above we have
Lemma 4.4 Each perfect neighbour (boundary) is a neighbour (boundary):


 n Ly ≤
n Ly ,	 n ry ≤
n ry ,	 b Ly ≤
b Ly ,	 b ry ≤
b ry . 

Proof. First we get by 1 = T = (x + x) = x + x and by shunting ч x ≤ x.
x ≤ n L y
e	{[ definition and shunting ]}
x’ ≤ ч y
⇒	{[ calculations above and (c1) ]}
x’ ≤ y
e	{[ definition ]}
x ≤ n L y	 
Like neighbours/boundaries we can characterise the box operations in an explicit form.
Lemma 4.5 Perfect neighbours and boundaries can be expressed by
 n L y = T· ч y ,	 n ry = чy’ ·T ,
 b L y = ч y ·T ,	 b ry = T· чy’ .
Consequently, ( n L y)’ = ч y, ( n ry) = чy’, ( b L y) = ч y and ( b ry)’ = чy’.
Proof. By definition, (sep), and Lemma 3.1:
x ≤ n L y e x’ · y ≤ 0 e x · y ≤ 0 e x ≤T · ч y .	 
In the remainder of this section we show some properties of (perfect) neighbors and boundaries and compare them to properties of NL. To reduce calculations we

introduce
and © as parameterised versions that can be instantiated by either

n L ,
n r,
b L or
b r and n L , n r , b L or b r , respectively. The instantiation must be

consistent for all occurrences of
and ©. The following proofs are only done for one

instance of
or ©; for all other instances they are similar. If the “direction” of

or © is important we use formulas like	L and ©r where only one degree of freedom
remains. The above explicit forms show that boxes and diamonds are connected

via the de Morgan dualities
©y =


y	and


y = ©y ;

hence they form proper modal operators. Additionally, we show that diamonds and boxes are lower and upper adjoints of Galois connections:
Lemma 4.6 Diamonds and boxes form the following Galois connections.
Lx ≤ y e x ≤ ©ry ,	rx ≤ y e x ≤ ©Ly . 


Proof.

n L x ≤ y

e	{[ de Morgan duality ]}
 n L x ≤ y
e	{[ (c3) ]}
y ≤ n L x
e	{[ definition of n L and (c1) ]}
y’ · x ≤ 0
e	{[ definition of n r ]}
x ≤ n ry	 
Looking at the proof, we observe that for perfect neighbours we get the exchange rule for Boxes
x ≤ n L y e y ≤ n rx .	(bexc)

Simpliﬁcations of Neighbourhood Logic
Since Galois connections are useful as theorem generators and dualities as theo- rem transformers (see e.g. [3]) we get many properties of (perfect) neighbours and (perfect) boundaries for free. For example we have, with x H y = x + y,

Corollary 4.7 (a)
and © are isotone.

is disjunctive and © is conjunctive, i.e.,

(x + y) =	x +
y ,	©(x H y) = ©x H ©y . 

We also have the cancellative laws

L ©r x ≤ x ≤ ©r
Lx , 
r ©L x ≤ x ≤ ©L
rx . 

With Lemma 4.7.(b) we have now proved the claim given in Theorem 3.3. So at least one axiom of the Neighbourhood Logic of Zhou and Hansen is a theorem in the generalised setting of bidomain semirings.
Since 0 is the least element with respect to ≤ and domain as well as codomain are strict, 0 is a neighbour and boundary of each element. Furthermore, special neighbours and boundaries are summarised in
Lemma 4.8


1 =	T = ©T = T,
0 = ©0 = 0.

x ≤ 0 e x ≤ 0.

By isotony we get x ≤
Lx and x’ ≤
rx. Additionally, we have that x is a

left (right) boundary of itself, i.e., x ≤
b L x and x ≤
b rx.

By the Galois connections and (a) we get T≤ ©y e T ≤ y.

Lemma 4.8.(c) cannot be translated from hold, since in general x /= ч x.
to ©, i.e., x ≤ b x, x ≤ n L x,... do not

In sum, nearly all theorems of NL given in [23,26,27] hold in the generalisation. Most of them are already proved by the Galois connection and the Lemmas above. We give a translation table between [26] and our approach in the Appendix.
With Corollary 4.7.(c) we have already shown a cancellation law for neighbours. Using the explicit forms of neighbours we can calculate many more cancellative laws that are summarised in the second table of the Appendix. Within the calculations

the relation   y =
y turns out to be very useful. Furthermore, the “inner”

operator dominates the “outer” one; i.e., in those cases, where ©	or	© fulfils one

of the cancellation laws, the expression is the same as
and ©©, resp.

As an example of a proof and to show that Axiom 6 of [27], which postulates that left and right neighbourhoods of an interval always end and start at the same point, is also a theorem, we show

Lemma 4.9
n L n ry =
b ry = n L n ry.

Proof. Using the explicit forms, (p · T) = p and p ·T = чp · T, we get
n L n ry = T· (y’ · T) = T· y’ = b ry , 

 
 n L n ry = T· ч ’ · T) = T· ч (чy’ · T) = T· ччy’ =
b ry .	 

There are many more simplifications and extensions for NL which we do not discuss here. We only want to derive a much simpler form of r r L L φ (read “for all intervals: φ”). This expression was used in [23,26] for a deduction theorem and is hard to understand and very unhandy (for example because of its size). In our no- tation we have to look at n L n L n r n r Iφ. Unfortunately, the following simplification is not valid for all bidomain semirings. We say that the greatest element T weakly dominates tests iff for all p ∈ test(S)\{0}
 T· (p · T)’ = 1	and	 (T· p) · T ’ = 1	(WTT)
It can easily be checked that INT as well as REL(M ) satisfy (WTT). This shortens the expression n L n L n r n ry enormously.
Lemma 4.10 If S satisﬁes (WTT) then


(a)

n L n L


n r n

ry =

n r n r n L
n y = ⎧⎨ 0	if y = 0 
⎩ T	otherwise,


(b) n


L n


L n


r n

ry =

n r n r n L
n y = ⎧⎨ T	if y = T
⎩ 0	otherwise.

Proof.
We get


n L n L n r n ry =


n L b r n ry =

 
T· (T· (y · T) ) by Lemma 4.9 and 4.2.

Now we can use (WTT) and get the claim.

Immediate by n L n L n r n ry = n L n L n r n ry, by T = 0 and (a).	 

Since in all cases except y = 0 the result of
n L n L n r n ry is the greatest element

T which is, in INT, the set of all intervals, the way of speaking (“for all intervals”) is justified. Note that it is also possible that a bidomain semiring fulfils only one of

the equations of (WTT). Then only one of
n L n L n r n ry and
n r n r n L n L y needs

to satisfy Lemma 4.10 and therefore possibly
n L n L n r n ry /= n r n r n L n L y . 
The last properties we want to discuss reflect those situations where © collapses
to 0 and	becomes the greatest element. We call an element x surjective if 1 ≤ x’

and total if 1 ≤ x.
Lemma 4.11
x is surjective iff


rx = T iff ©rx = 0.

x is total iff
Lx = T iff ©Lx = 0.

The proof is immediate by Lemma 4.2 and 4.5.
Beyond Neighbours
So far, we have discussed semiring neighbours and boundaries, their properties and their connection to NL. This section gives a short overview over further interval operations in our algebraic treatment. In particular we will have a look at the chop operator as well as Allen’s 13 relations between intervals [1,2].
As mentioned in the introduction, φ-ψ holds on [b, e] iff there is m ∈ [b, e] such that φ holds on [b, m] and ψ holds on [m, e]. Equation (1) shows the connection to NL. In the treatment of the semiring INT this becomes
φ-ψ holds on z e E x, y : z = x ; y Λ x ≤ Iφ Λ y ≤ Iψ
e z ≤ Iφ ; Iψ
This interpretation of chop is much easier than (1) and coincides well with the stan- dard definition of chop in the setting of semirings. All the explicit treatment of the intervals’ lengths in (1) can be skipped, since they are encoded in the concatenation of intervals, abstractly in the equation z = x · y.
Now, let us have a look at Allen’s relations [1,2]. They play an important role in temporal and modal logics. It is well known that there are 13 different relations between intervals on a linear ordering (and few more on a partial ordering). We restrict ourselves to the 7 possibilities presented in Figure 1, whereas the missing ones are obtained by symmetry:



Fig. 1. Possible relationships

Obviously, starts and finishes coincide with boundaries; meets can be expressed easily by neighbours (i left neighbour of k and k right neighbour of i) and equal can be expressed by = in the setting of semirings. Now let’s have a closer look at before. Apparently we have for intervals or sets of intervals
i before k e E j : i meets j Λ j meets k
and therefore we get in the algebraic treatment


i before k e i ≤
n L n L k Λ k ≤
n r n ri . 


Since domain and codomain only characterise the starting and end points in INT, these operations are not able to characterise the remaining relations. In Section 3 we used detachments to derive algebraic versions of the neighbourhood modalities. As shown there, in INT, detachments cut off parts of intervals. Therefore detachments are very useful for characterising the remaining relations of Allen. We assume S to be a quantale, since there detachments and meet are guaranteed to exist. By straightforward calculations we get
i during k e i ≤ T♩k[T ,
i overlaps k e (T♩i[T) H (T♩k[T) /= 0 .

Note that the right hand side of the algebraic formula of during is the same as one of von Karger’s temporal diamonds [14,17]. Our characterisation of overlaps includes the case that i meets k. If one wants to have a proper overlapping, one can use (T♩i[T) H (T♩k[T) H 1l /= 0 instead. Another (equivalent) characterisation of overlaps is to use neighbours (boundaries) for finishes (starts) and the relation
i overlaps k e E : j finishes i Λ j starts k . 

Recapitulating, we have that bidomain semirings are able to embed NL in an algebraic framework. In particular, we used the semiring of intervals INT. To get

more relationships for intervals, we have to postulate more properties for our al- gebra. It has turned out, that, using quantales (see Section 3.1), Allen’s interval relations can be embedded, too.

Other Interpretations of Neighbours
In this section we have a look at the interpretations of (perfect) neighbours and (perfect) boundaries in other semirings. We will show that the interpretations vary from interval properties already shown by Zhou, Hansen and Roy over reachability in graphs to an application to hybrid systems. These interpretations are possible only, since we have abstracted NL from intervals to semirings. All semirings, which we will present are well known. Further details about them can e.g. found in [7,16].
Neighbours in the Algebras of Formal Languages and Binary Relations
Formal languages can be made into a semiring by setting
LAN(Σ) =df (У(Σ∗), ∪,., ∅, {ε}) ,
where У(Σ∗) denotes the set of languages over some finite alphabet Σ, ∪ denotes set union and L1.L2 = {vw | v ∈ L1,w ∈ L2}, where vw is the concatenation of v and w. Furthermore ∅ denotes the empty language and ε the empty word.
Since test(LAN(Σ)) is discrete, i.e., test(LAN(Σ)) = {∅, {ε}}, we have
 L = L’ = ⎧⎨ {ε} if L /= ∅
⎩ ∅	otherwise
Thus we have, as in all bidomain semirings with discrete test set,

L = ⎧⎨ 0 if L = ∅
⎩ T otherwise ,
©L = ⎧⎨ T if L = T
⎩ 0 otherwise .



That is why all diamonds ( n L ,
n r ,
b L ,
b r ) as well as all boxes collapse to one sort

of diamonds and boxes, respectively.
In REL(M ) the situation is also easy. Before calculating the neighbours there, we recapitulate the definition of the semiring of binary relations.
Consider an arbitrary set M and the structure
REL(M ) =df (У(M × M ), ∪, ◦, ∅, Δ) ,
where ∪ denotes again set union, ◦ denotes relation composition, ∅ is the empty relation and Δ denotes the identity relation {(m, m) | m ∈ M }. Then REL(M ) forms an idempotent semiring where the natural order coincides with the subset relation and T = M × M .

REL(M ) can be extended to a bidomain semiring by defining test(REL(M )) =df
{R | R ⊆ Δ} and the (co)domain function, similarly as in INT, as
 R = {(p, p) | (p, x) ∈ R}	and	R’ = {(p, p) | (x, p) ∈ R} .
For an element P ∈ test(REL(M )), P ◦T restricts the first components, i.e., P ◦T =
{(p, x) | (p, p) ∈ P, x ∈ M }, whereas T◦ P restricts the second components, the range. Now, we are able to calculate the right neighbour explicitly.
n rR = R’ ◦T = {(x, y) | Ew : (w, x) ∈ R, y ∈ M }
is the set of all pairs (x, y) for which there is a pair r ∈ R such that the composition
of r and (x, y) is defined. So, n r R is the set of pairs that can be composed to R

from the right, whereas
n L contains all pairs that can be composed to R from the

left. For n r R we calculate
 n r R = ч

’
◦T 

= {(x, y) | (x, x) ∈ч ’	∈ M }
= {(x, y) | (x, x) /∈ ’	∈ M }
(R) , y 
= {(x, y) |∀ w : (w, x) /∈ R, y ∈ M }
= {(x, y) |∀ w : (w, x) ∈ R, y ∈ M } .

Hence, roughly spoken, n rR is the set of all pairs, whose “predecessors” (elements which can be composed from the left) all are elements of R. As already mentioned, REL(M ) satisfies (WTT). Thus, we have the cancellative laws of Lemma 4.10.

Reachability – Neighbours in the Path Algebra
Following [6] we can describe graphs as elements of an idempotent bidomain semi- ring. Consider a set of vertices Σ. Then subsets of Σ∗ can be viewed as sets of possible graph paths. The partial operation of join or fusion product of elements of Σ∗ is defined as
ε dα ε
ε dα (y.t) is undefined (s.x) dα ε is undefined
(s.x) dα (y.t) = ⎧⎨ s.x.t	if x = y
⎩ undefined otherwise
for all s, t ∈ Σ∗ and x, y ∈ Σ. It describes the “gluing” of paths at a common point. This operation is extended to subsets of Σ∗ by
S dα T = {s dα t|s ∈ S, t ∈ T, s dα t is defined} .

Then PAT(Σ) =df (У(Σ∗), ∪, dα, ∅, Σ ∪ {ε}) forms an idempotent semiring which can be extended to a bidomain semiring, where  describes the starting points of the
paths, i.e.,
 S = {x|(x.s) ∈ S}∪ ⎧⎨ ε	if ε ∈ S
⎩ ∅	otherwise .
Analogously, ’ characterises sets of end points. n r S is the set of all vertex sequences

that start in an end point of S. In other words reachable through S.
n r S describes all paths that are

Similarly to the calculations in REL(M ) we get n r by

 n r S = ч
’
dα T

= {x.t | x ∈ч ’
∈ T}

= {x.t | x /∈
’
(S) , x.t
∈ Σ∗}



= {x.t |∀ s ∈ Σ∗ : s.x /∈ S, t ∈ Σ∗}
= {x.t |∀ s ∈ Σ∗ : s.x ∈ S, t ∈ Σ∗}

Hence n r S is the set of those paths which can only be reached from S, not from
S. Therefore n r describes a kind of non-reachability from S and guaranteed reach- ability from S. All other (perfect) neighbours and boundaries characterise other kinds of reachability. The characterisations of reachability in graphs do not lead to better reachability algorithms. By the above calculations we only want to show that neighbours also occur in graphs and therefore we can shift knowledge from NL to graphs and vice versa.
Neighbours in PRO – Applications in Hybrid Systems
In [16] we have introduced an algebra of processes. Processes are sets of trajectories and are very useful for describing hybrid systems in an algebraic way. In the paper we use both finite and infinite trajectories. Admitting the latter ones entails that we have no full idempotent semiring anymore, since · is only left-strict. The situation changes when we restrict ourself to finite trajectories.
Again we briefly repeat the definitions. A trajectory is a pair (d, g), where d ∈ T and g : [0, d] → V , where V is a set of values. Here, we only use intervals with finite length and therefore have only finite trajectories. We define composition of trajectories (d1, g1) and (d2, g2) as


(d ,g ) · (d ,g ) = 
⎧⎨ (d1 + d2, g) if g1(d1)= g2(0)

1	1	2	2
df
undefined	otherwise

with g(x) = g1(x) for all x ∈ [0, d1] and g(x + d1) = g2(x) for all x ∈ [0, d2]. Composition is lifted to processes pointwise, i.e., for processes A, B we have A · B =df {a · b | a ∈ A, b ∈ B, a · b is defined}. The set of all trajectories is denoted

by TRA and we denote for a value v ∈ V the corresponding zero-length trajectory by v =df (0, g), where g(0) = v. Then the structure
PRO =df (У(TRA), ∪, ∅, ·,I,  , ’)
forms a bidomain quantale with test(PRO) = У({v | v ∈ V }), A = {g(0) | (d, g) ∈ A} and A’ = {g(d) | (d, g) ∈ A}. Since trajectories include intervals of the form [0, d] as one component, first, the behaviour of (perfect) neighbours and (perfect) boundaries seems to be as in INT. However the interval composition in PRO is defined everywhere, in contrast to those in INT. And in fact the behaviours are not comparable. As the second component, trajectories contain functions, hence (perfect) neighbours and boundaries should be as in PAT. And in fact the behaviour of neighbours and boundaries are similar to those of PAT. That is why we do not want to discuss neighbours in PRO. However they are very useful in calculations for hybrid systems. A longer example for an explicit hybrid system using neighbours is partly done in [15] but also part of our future work (cf. Section 8).

Adding Finite and Infinite Iteration
Following [5] every quantale can be extended to a Kleene algebra by the definition x∗ =df μy . x · y + 1, where μf denotes the least fixed point of f . If the quantale is even a completely distributive lattice then it can be extended to an ω-algebra by setting xω =df νy.x · y as the greatest fixed point of x · y. Hence INT as well as PRO form Kleene and ω-algebras. In the remainder we want to discuss the effects of ∗ and ω on the neighbour modalities. First we want to recapitulate the basic definitions.
A Kleene algebra is a pair (S, ∗), where S is an idempotent semiring and ∗
satisfies the following unfold and induction laws.
1+ x · x∗ ≤ x∗ ,	(∗-1)	1 + x∗ · x ≤ x∗ ,	(∗-2)
y + x · z ≤ z ⇒ x∗ · y ≤ z ,  (∗-3)	y + z · x ≤ z ⇒ y · x∗ ≤ z .  (∗-4)
An ω-algebra is a pair (S, ω), where S is a Kleene algebra and ω satisfies
xω ≤ x · xω ,	(ω-1)	z ≤ y + x · z ⇒ z ≤ xω + x∗ · y . (ω-2)
The star operation characterises finite iteration and ω infinite iteration. So, for example, one can describe loops and other repeating procedures with these opera- tors. A Kleene algebra (ω-algebra) is called bidomain iff the underlying semiring is a bidomain semiring. If we set a+ =df a · a∗, we get useful properties for neighbours and boundaries.
Lemma 7.1 If S forms a Kleene algebra, then


(y∗) = T and
(y+) =	y,

x∗ ≤
Ly e 1 ≤ y and x∗ ≤
ry e 1 ≤ y’,

x+ ≤
y e x ≤	y.

The proof is straightforward. In ω-algebras the situation is much more complicated, since the domain/codomain operators do not behave symmetrically. Hence we first have a look at ω and domain.
Lemma 7.2
(xω) ≤ x.
If x is dense, i.e., x ≤ x · x, we have (xω) =  x.
If x is dense, we have x’ ≤ (xω)’
Proof.
(xω) =  (x · xω) ≤ x.
By (ω-2) we get x ≤ x · x ⇒ x ≤ xω and the claim follows by isotony.
Again by (ω-2) and isotony.	 
Now we briefly discuss the interaction between the ω-operator and neighbours or boundaries
Lemma 7.3

xω ≤
n ry ⇒ x ≤
n ry,  and xω ≤
b L y ⇒ x ≤
b L y.

If x is dense, we have x ≤
Proof.
y ⇒ xω ≤	y.

By definition, Lemma 7.2, and definition again:

xω ≤
n ry e (xω) ≤ y’ ⇐ x ≤ y’ e x ≤
n ry . 

Similar to (a).	 

In particular, from (a) and (b) we get, for dense x, xω ≤
n ry e x ≤
n ry and

xω ≤
b L y e x ≤
b L y.

Applying ∗ and ω to all the models of Section 6, we have now the opportunity to equip them with iteration operators. Especially for PRO the omega operator is very helpful, since most of hybrid systems are characterised by infinite (loop-based) computations.

Conclusion and Outlook
In this paper we started with the Neighbourhood Logic developed by Zhou and Hansen. We showed how to embed NL into the theory of semirings. With the help of the embedding we showed that at least two axioms can be dropped in the definition of NL and that neighbours can be expressed in a much more general framework, namely in bidomain semirings, and satisfy important Galois connections. Afterwards we showed that the algebraic setting can also be used for characterising further interval operations. In particular, we gave a common framework for NL and Allen’s 13 interval relations. Then we discussed neighbours and boundaries in many different models. We showed properties of reachability in the path algebra and a useful interpretation for hybrid systems. At the end we showed how the neighbours

and boundaries interact with finite and infinite iteration in the structures of Kleene algebra and ω-algebra.
M¨oller developed the theory of lazy semirings [20], which relax the structure of semirings by giving up strictness and right-distributivity. This allows to handling infinite elements and subsumes theories like Dijkstra’s computation calculus. In
[16] we presented an algebra for hybrid systems using lazy semirings. This model handles finite as well as infinite trajectories. Thus we started to adapt neighbours and boundaries to the framework of lazy semirings [15]. Doing this we have a further application for NL in a theory where we can express unlimited processes and, in general, infinite elements. As one of our first results we get that neighbours and boundaries occur in an algebraic version of the branching time logic CTL as the existential and universal temporal operator [15,22]. The first aim of further work in this area is on the one hand to get more applications for neighbours and boundaries in both settings (full and lazy semirings) and, on the other hand, using a concrete example of a hybrid system and investigate wether neighbours can be used for properties of safety and liveness. Finally it has to be checked, if our algebraic setting helps to find the answer wether NL is decidable (which is still an open question).

Acknowledgements
I am very grateful to Bernhard Mo¨ller and Kim Solin for their valuable comments and remarks, as well as fruitful discussions. My thanks go also to the three anony- mous referees who provide useful comments.

References
J.F. Allen. Maintaining Knowledge about Temporal Intervals. Communications of the ACM, 26(11):822–843, 1983.
J.F. Allen and P. Hayes. A Common-sense Theory of Time. Proceedings of the 9th International Joint Conference on Artificial Intelligence, 528–531, Morgan Kaufmann, 1985.
R. Backhouse. Galois Connections and Fixed Point Calculus. Algebraic and Coalgebraic Methods in the Mathematics of Program Construction, 89–148, Springer 2002.
J.H. Conway. Regular Algebra and Finite Machines. Chapman and Hall, 1971.
J. Desharnais and B. M¨oller. Characterizing Determinacy in Kleene Algebra. Special Issue on Relational Methods in Computer Science, Information Sciences — An International Journal, 139:253–273, 2001.
J. Desharnais, B. M¨oller and G. Struth: Kleene Algebra with Domain. ACM Trans. Computational Logic (to appear 2006). Preliminary version: Universit¨at Augsburg, Institut fu¨r Informatik, Report No. 2003-07, June 2003.
J. Desharnais, B. M¨oller and G. Struth: Modal Kleene Algebra and Applications – A Survey. J. Relational Methods in Computer Science 1, 93–131 (2004).
B. Dutertre. Complete Proof Systems for First-order Interval Temporal Logic. IEEE Press, Tenth Annual IEEE Symb. on Logic in Computer Science, 36–43, 1995.
J.S. Golan. The Theory of Semirings with Applications in Mathematics and Theoretical Computer Science. Longman, 1992.
J.Y. Halpern, B. Moszkowski and Z. Manna. A Hardware Semantics Based on Temporal Intervals. Diaz
J. (ed.) ICALP’83, Lecture Notes in Computer Science 154. 278–291, Springer 1983.

D. Gries and F.B. Schneider. A Logical Approach to Discrete Math. Springer 1993.
J.Y. Halpern and Y. Shoham. A Propositional Modal Logic of Time Intervals. Proceedings of the First IEEE Symposium on Logic in Computer Science. IEEE Press, Piscataway, NJ, 279–292.
U. Hebisch and H.J. Weinert. Semirings - Algebraic Theory and Applications in Computer Science. World Scientific, Singapur, 1998.
P. Ho¨fner. An Algebraic Semantics for Duration Calculus. Proc. 10th ESSLLI Student Session, Edinburgh, 2005, 99–111. Extended version: From Sequential Algebra to Kleene Algebra: Interval Modalities and Duration Calculus. Universit¨at Augsburg, Institut fu¨r Informatik, Report No. 2005- 05, March 2005.
P. H¨ofner and B. Mo¨ller. Lazy Semiring Neighbours and some Applications. In R. Schmidt (ed.): RelMiCS /AKA 2006. Lecture Notes in Computer Science 4136, 207–221, Springer, 2006.
P. H¨ofner, B. M¨oller: Towards an Algebra of Hybrid Systems. In W. MacCaull, M. Winter and I. Duentsch (eds.): Relational Methods in Computer Science. Lecture Notes in Computer Science 3929, 121–133, Springer 2006.
B. von Karger: Temporal Algebra. Habilitation thesis, University of Kiel 1997.
D. Kozen. Kleene Algebra with Tests. Trans. Prog. Languages and Systems, 19(3):427–443, 1997.
B. M¨oller. Complete Tests do not Guarantee Domain. Universit¨at Augsburg, Institut fu¨r Informatik, Report No. 2005-06, March 2005.
B. M¨oller. Kleene getting lazy. Science of Computer Programming, Special issue on MPC 2004 (to appear). Previous version: B. M¨oller: Lazy Kleene algebra. In D. Kozen (ed.): Mathematics of program construction. Lecture Notes in Computer Science 3125, 252–273, Springer 2004.
B. M¨oller. Residuals and Detachments. Universit¨at Augsburg, Institut fu¨r Informatik, Report No. 2005- 20, December 2005.
B. M¨oller, P. H¨ofner, G. Struth: Quantales and Temporal Logics. In M. Johnson and V. Vene (eds.):Algebraic Methodology and Software Technology. Lecture Notes in Computer Science 3929, 263– 277, Springer 2006.
S. Roy and C.C. Zhou. Notes on Neighbourhood Logic. Technical Report 97, The United Nations University UNU/IIST, February 1997.
Y. Venema. A Modal Logic for Chopping Intervals. J. of Logic and Computation 1(4):453–476, 1990.
C.C. Zhou, D. Van Hung, and Li Xiaoshan. A Duration Calculus with Infinite Intervals. In Fundamentals of Computation Theory, 16–41, 1995.
C.C. Zhou and M.R. Hansen. Duration Calculus – A Formal Approach to Real-Time Systems. Springer, Monographs in Theoretical Computer Science, 1996.
C.C. Zhou and M.R. Hansen. An Adequate First Order Interval Logic. Lecture Notes in Computer Science, 1536:584–608, 1998.
C.C. Zhou and M.R. Hansen. An Adequate First Order Interval Logic. Technical Report 91, The United Nations University UNU/IIST, 1996.

A  Appendix
Translation Table
The following table gives an overview about the relationship between the Lemmas presented in this paper and the concerning Lemmas of [26]. It shows that nearly all Lemmas of Zhou and Hansen are conclusions of the Galois connection. Please note that the summarised meaning follows the notation of [26].

Table A.1
Translation table between [26] and our approach


Table of Cancellative Laws
Table A.2 summarises all cancellative laws. For example, n r n L y =

Table A.2
Cancellative laws for neighbours and boundaries


b L y.
