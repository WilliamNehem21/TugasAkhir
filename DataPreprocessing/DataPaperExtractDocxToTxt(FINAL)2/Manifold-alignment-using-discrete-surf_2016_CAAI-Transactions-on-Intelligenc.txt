Available online at www.sciencedirect.com
ScienceDirect


CAAI Transactions on Intelligence Technology 1 (2016) 285e292
http://www.journals.elsevier.com/caai-transactions-on-intelligence-technology/
Original Article
Manifold alignment using discrete surface Ricci flow
Zhongxin Liu a, Wenmin Wang a,*, Qun Jin b
a School of Electronic and Computer Engineering, Shenzhen Graduate School, Peking University, China
b Faculty of Human Sciences, Waseda University, Japan
Available online 19 October 2016

Abstract

Manifold alignment is useful to extract the shared latent structure among multiple data sets and the similarity among different datasets. As many kinds of real world data can be analyzed using low dimensional representations, manifold alignment algorithms can be used in a wide range of applications, such as data mining. In this paper, we propose a three-stage approach to manifold alignment using discrete surface Ricci flow. Our approach transforms the original intrinsic manifolds to hyper spheres using conformal mapping in the first stage, and then zooms these hyper spheres into the same scale and aligns them in the following stages. We describe in details about our algorithm, its theoretical principles, our experimental results, and the comparison to previous alignment methods. To prove the effectiveness of our algorithm, three kinds of ex- periments are presented, including a toy dataset, one containing parallel corpus of parliament proceedings and another containing both images and texts. With these experiments, the latent utility in discovering the similarity among different kinds of data sets can be demonstrated, whether within the same kind of data or across different kinds of modals of data.
Copyright © 2016, Chongqing University of Technology. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

Keywords: Cross-lingual retrieval; Cross-media retrieval; Dimensionality reduction; Manifold alignment



Introduction

With the increasing popularity of multimedia and the increasing volume of data, manifold alignment is helpful to extract the shared latent structure among multiple data sets, and to extract the similarity among different data sets. How- ever, the features of different data sets may be disparate, which causes the difficulty to extract the correspondence in the original high dimensional space.
Manifold alignment algorithms are based on the mapping approaches which project high dimensional data into their latent low dimensional structures, such as manifold learning. The most widely used linear projection algorithms include principle component analysis (PCA) algorithm [29], isometric mapping (Isomap) algorithm [23], local linear embedding (LLE) [22], Laplacian Eigenmaps [1], locality preserving

* Corresponding author.
E-mail addresses: liuzhongxin1990@126.com (Z. Liu), wangwm@ece. pku.edu.cn (W. Wang), jin@waseda.jp (Q. Jin).
Peer review under responsibility of Chongqing University of Technology.
projections (LPP) algorithm [12], local tangent space align- ment (LTSA) algorithm [35], adaptive manifold learning [36], Hessian Eigenmaps (HLLE) [6], hierarchical manifold learning algorithm [2] and inductive manifold learning [13].
On the basis of manifold learning algorithms which explore the latent low dimensional structure in a single data set, manifold alignment algorithms are useful to find the similarities of the latent low dimensional structures among different data sets.
A lot of manifold alignment algorithms have been pro- posed. Ham, Lee and Saul [10] aligned the manifolds leveraging a set of correspondences. Wang and Mahadevan
[24] proposed a method based on Procrustes Analysis, which results in a mapping that is defined everywhere rather than just on the training data points. After then Wang and Mahadevan [27] described a framework that constructs functions mapping data instances from different high dimensional data sets to a new lower dimensional space, simultaneously matching the instances in correspondence and preserving pairwise distances between instances within the original data set. Li, Lv and Yi [15] provided an


http://dx.doi.org/10.1016/j.trit.2016.10.002
2468-2322/Copyright © 2016, Chongqing University of Technology. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC- ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



algorithm to preserve the local geometry of the original data set, in which the sparse reconstruction weight matrix of each manifold is established by sparse manifold clustering and embedding (SMCE) method. Yang, Xu and Zhang [31] pre- sented an alignment algorithm using local tangent space alignment. This algorithm can be helpful to keep the local structure in the neighborhood of the feature points. Wang and Mahadevan [26] proposed a general framework for the al- gorithms of manifold alignment. This framework combines three important viewpoints into manifold algorithms. The first one is the methods of probability, such as Procrustes Analysis, which is helpful to analysis the distribution of data. The next one is semi-supervised learning, which is widely used in data mining. The third one is semi-definite pro- gramming, which can provide a wider range of use than linear programming algorithms. Manifold alignment algo- rithms based on supervised learning [34], semi-supervised learning [14,30] and unsupervised learning [25] have been proposed as well. Wang and Mahadevan [28] proposed the multi-scale manifold algorithm, which can analyze the properties of data in multiple scales, using wavelet analysis. As manifold alignment algorithms have attracted much attention, the application to real world problems, which pro- cess sparse high-dimensional data, has also been studied. Yang and Crawford [32] proposed an approach to combining alignment algorithms with remote sensing. This algorithm is
designed to process multi-temporal hyper-spectral data.
However, there are still some problems to be solved. When the original high dimensionalities are relatively small and the volumes of data sets are quite large, it can be imagined that the surface of the manifolds are composed of numerous wrinkles. Consequently, it is difficult to construct a smooth function to describe the surfaces of these manifolds. To the contrary, when the original high dimensionalities are quite large and the volumes of data sets are relatively small, the data sets become extremely sparse. In this circumstance, it is nearly impossible to determine the structure of these manifolds. As described above, it is a big challenge to align these high dimensional data sets because of the irregular structure of their intrinsic low dimensional manifolds.
Although a lot of attention has also been paid to the research of deforming the irregular surfaces into flatten structures, the proposed methods can only be effective in restricted situations. For example, the Mobius Voting algorithm, proposed by Lip- man and Funkhouser [16], is designed for three-dimensional spaces, rather than high dimensional spaces.
In this paper, we propose an approach based on discrete surface Ricci flow to solve the problems discussed above. In our approach, the original intrinsic manifolds of the data sets are transformed to hyper spheres via conformal mapping. The relative distances between each pair of data points on the surfaces are preserved, and then these hyper spheres are aligned. The generated manifolds are zoomed into the same scale, and then they are aligned to minimize the distance be- tween each pair of corresponding points.
The rest of this paper is organized as follows. In Section 2, the theoretical background is presented. Section 3 gives a set
of notations necessary to describe our manifold alignment algorithm. Section 4 shows the whole structure and the details of our manifold alignment algorithm based on discrete surface Ricci flow. Section 5 gives our analysis that proves the effectiveness of the proposed algorithm. Experimental results and discussions are given in Section 6. Finally, Section 7 provides concluding remarks.

Theoretical background

In this section, we briefly introduce the theoretical back- ground of Riemannian metric and discrete surface Ricci flow.

the Riemannian metric is a tensor g = (gij), which is positive Definition 1. (Riemannian metric). Suppose S is a surface, definite, and defines an inner product for the tangent spaces of S.
Definition 2. (Gaussian curvature). Let S be a surface with a Riemannian metric g and (x, y) be isothermal coordinates of S, then the Gaussian curvature is defined as
k(x; y)= Dgu(x; y)	(1)
where Dg is the LaplaceeBeltrami operator induced by the
original metric g,.

Curvature is determined by the Riemannian metric and different metrics induce different curvatures. Both Gaussion curvature and the total curvature are widely used to measure the properties of surfaces. The total curvature is solely deter- mined by the topology, as shown in Theorem 1. Riemannian metric in Teichmuller space is well defined and computable. Theoretic treatments can be found in [7].
Theorem 1. (Gauss-Bonnet) Let (S, g) be a metric surface, the total curvature is
Z KdAg + Z kgds = 2pc(S)	(2)
S	vS
where dAg is the element area of the surface, c(S) is the Euler number of the surface, K is the Gaussian curvature, and kg is
the geodesic curvature.
Ricci flow is a powerful curvature flow method, invented by Hamilton [11] for the proof of the Poincare´a conjecture [19,20,21]. Intuitively, it describes the process to deform the Riemannian metric according to curvature such that the curva- ture evolves like a heat diffusion process.The theoretic foun- dation for surface Ricci flow has been laid down for both smooth surfaces [4,11], and discrete meshes [5]. Surface Ricci flow and circle packing are discussed in detail in [8]. The theoretic results for inversive circle packing metric can be found in [9].
In our manifold alignment algorithm, surfaces are approx- imated by piecewise linear triangular meshes. In the following section, the smooth surface Ricci flow is generalized to the discrete setting.
Suppose M (V, E, F) is a simplicial complex (triangle mesh) with vertex set V, edge set E, and face set F,



respectively. The discrete Gaussian curvature is defined as angle deficient.
Definition 3. (Discrete Gaussian curvature) Suppose M is a mesh with a discrete metric, which is in Euclidean background geometry. [vi, vj, vk] is a face in M and represents the corner angle at vi on the face. The discrete Gaussian curvature of vi is defined as
8>< 2p — P qjk; viøvM
strictly 1/4-pinched curvature, where n ≥ 4, then M is dif- feomorphic to a space sphere form.

Notations

Representation of the original data sets
A = [a1, …, am] is a matrix that is composed of p rows and
m columns. In this matrix, ai is determined by p features.

Ki =	jk
(3)
B = [b1, …, bn] is another matrix that is composed of q

>: p —
qi ; vi∈vM
jk
rows and n columns. In this matrix, bi is determined by q
features.

A circle packing associates each vertex with a circle. The circle at vertex vi is denoted as ci. The two circles ci and cj on an edge [vi, vj] are disjoint, or intersect each other at acute angle.
The generalized circle packing metric is defined as follows.
Definition 4. (Generalized circle packing metric) A gener- alized circle packing metric on a mesh M is to associate each vertex vi with a circle ci, whose radius is gi, associate each edge [vi, vj] with a nonnegative number Iij. The edge length is given by
Both A and B represent the original high-dimensional data
set. The correspondences between A and B can be stated as follows. The data point ar is related to bs, where r is an integer between 1 and m, and s is an integer between 1 and n.

Some necessary manifolds used in our algorithm

A* and B* represents the transformed manifolds related to A and B, correspondingly. Both A* and B* can be considered as hyper spheres with the original high dimensionality, and
they are necessary to construct the triangle meshes in our

l  = qgﬃﬃﬃ2ﬃﬃﬃ+ﬃﬃﬃﬃﬃgﬃﬃﬃ2ﬃﬃﬃ+ﬃﬃﬃﬃﬃ2ﬃﬃIﬃﬃﬃﬃgﬃﬃﬃﬃgﬃﬃﬃﬃ
(4)
algorithm.

ij	i	j
ij i j
A' and B' represent the processed manifolds related to A
and B correspondingly. These two manifolds denote the tri-

G = {gi}; I = {Iij}. A discrete conformal deformation is to The circle packing metric is denoted as (G, I, M), where change radii gi s only, and preserve inverse distance Iijs. The
discrete Ricci flow is defined as follows. Let us denote ui as:
ui = loggi	(5)
Definition 5. (Discrete Ricci flow) Given a circle packing
metric (G, I, M), the discrete Ricci flow is
angle meshes for manifold A and B.

A'' and B'' are the reshaped manifolds that are deformed using discrete surface Ricci flow from manifold A' and B’. The correspondence between A'' and B'' is the same as that between A and B. All of the manifolds mentioned above are
shown in Fig. 1.
Our alignment algorithm

dui = K — K
(6)
In this section, we propose an alignment algorithm, which is


dt   i   i

where Ki is the user-defined curvature at vertex vi.As dis- cussed in the following theorem, high dimensional manifolds can also be mapped to hyper spheres.

Theorem 2. (Brendle. S., Schoen. R. [3]) Let (M, g) be an n- dimensional compact Riemannian manifold with point-wise
composed of three stages, i.e., the conformal transformation stage, the scale adjusting stage, and the alignment stage. As the surface structures of manifolds are quite complex, it can be too difficult to find a proper function to describe its shape exactly. Therefore, we intend to transform the original intrinsic mani- folds in the first stage, after which they can be assumed to approximate hyper spheres. Then in the following stages, it is the hyper spheres that are to be adjusted and aligned, rather than




Fig. 1. Workflow of our alignment algorithm.



the original manifolds. This alignment process can be easier to implement because of the simplicity of surfaces.
The workflow of our alignment algorithm is shown in Fig. 1, in which the meanings for the symbols A, B, A*, B*,
A', B', A'' and B'' have been described in the previous section.
Algorithm 1. Conformal Mapping Using Ricci Flow
which are two hyper spheres having the same dimensionality with A and B. We calculate the centroid a of the manifold A, and transform each data point on A so that the distance be- tween each data point ac is the same as the largest one. This generated manifold is A*. A* is a hyper sphere with radius r and a means the centroid of manifold A. The correspondence between B and B* is similar.

Step 1. Compute edge lengths lij from the current vertex radii gi, gj and the fixed edge weight fij using the cosine law
r = max
1≤i≤p
ai — a
1
a = p ×
ai
1≤i≤p
(10)

for the background geometry, where:
In the second step, we estimate the triangle meshes of A
and B, with the help of A* and B*. For each pair of data point

gjk = lki + lij — ljk
g =  1 X g jk
a and a from manifold A, denote their corresponding points

fijk ∈F
(7)
on A* as a* and a*. If the distance between a* and a* on A* is

i	j	i	j

l2 = g2 + g2 + 2gigj cosfij
Step 2. Compute the corner angles qjk in each face fijk from the
current edge lengths by using the cosine law according to the background geometry.

Step 3. Compute the discrete Gaussian curvature Ki of each vertex vi, using (3).

Step 4. Update ui of each vertex vi as follows:
ui = ui + εi × Ki — Ki	(8)
greater than a threshold, ai and aj are considered to be
manifold A with this relationship is the manifold A' described above. The relationship between B and B' is similar. disconnected on A. The manifold generated by strengthening
In the third step, we deform the manifolds A' and B' using
Ricci flow. The generated manifolds are A’’ and B'' corre- described in Algorithm 1. The manifolds A'' and B'' are ready spondingly. The algorithm involved in the third step is to be used in the alignment process.

4.2. Stage 2: scale adjusting stage
In this stage, we zoom the generated manifolds A'' and B'' into



where Ki is the target Gaussian curvature.
Step 5. Normalize the metrics. Let s =	ui, then
ui = ui — n s
where n is the total number of vertices.

(9)
on A'' so that it can be zoomed into the same scale as manifold B’’. the same scale. In order to accomplish it, we adjust the coordinates The scaling factor is related to the radius of the intermediate
manifolds A* and B*, which are exactly hyper spheres.
the original manifolds A' and B' to the same scale, according Let the radius of A* and B* be rA and rB. Then we transfer to the ratio of rA and rB, as shown in the following equation.

a'' = rB × a''
(11)

Step 6. Update the radius gi of each vertex vi, using (5).
Step 7. Repeat the steps from 1 through 6 until the maximal curvature error falls below a threshold data (it is set to be 0.01 in our experiments).

Stage 1: triangulation and conformal transformation stage

In this stage, we aim to transform the original manifolds to hyper spheres. As we intend to convert the problem of aligning two manifolds with complex structures to the problem of aligning two hyper spheres, it is important to preserve the structure features on the manifolds. We preserve the local structures on the manifolds in this stage. In other words, the relative distances between each data point with the data points in its neighborhood and the intersection angles formed by the edges connected to each data point are preserved. The pres- ervation is of great help when aligning these hyper spheres.
This stage can be divided into three steps. In the first step, the original manifolds A and B are transformed to A* and B*,

i	rA	i
As depicted in Equation (11), if the intermediate manifolds
manifolds  A''  and  B''  to  be  in  the  same  scale. A* and B* has the same radius, we consider the generated
Then in the next stage, the adjusted manifolds A'' and B''
will be used to alignment.

4.3. Stage 3: alignment stage

In this stage, we align the hyper spheres obtained in the previous stage. As the structure of hyper spheres are easier to recognize than the original manifolds, we can rotate the hyper spheres to let the labeled data points be as close to each other as possible in the original high dimensional space.
Then these hyper spheres are mapped to low dimensional spaces, we perform this mapping with a Laplacian Eigenmaps algorithm. We can calculate the low dimensional coordinate for each data point and for each unlabeled data point, the most appropriate matching data point is assumed to be the nearest
point on the other manifold. Let A''low and B''low represent the low dimensional representations of A'' and B''. In the low


dimensional space, an orthonormal matrix P is to be deter-	In these equations, r means the radius of hyper sphere A* and

mined, which minimizes the Frobenius norm ¨A''
— Blow
P¨.
a means the centroid of manifold A.

The details of this stage are shown in Algorithm 2.
Algorithm 2. Alignment in Low Dimensionality
r = max 
1≤i≤p
ai — a
1
a = p ×
ai
1≤i≤p
(17)

Step 1. Transform the coordinates of the matrices A’’low and
B’’low, so that their centroids are both at the same position after translation. Let the original coordinate of their centroids be the
exist 0 ≤ l1; l2 ≤ 1; 0 ≤ m ≤ 1; l1 + l2 = 1 that satisfies By substituting them into Equation (15), we can find that there the following equation.

average of their data points, as shown in Equations (12) and (10).	r	r	r

P  ''
l1 ×
+ l2 ×	= m ×
a — a
(18)

center A''
 = A
low =
Alow i
  '' 
j
(12)

center B''
 = B

low =
Alow
''
low i
  ''
(13)
Therefore, in this circumstance, it is reasonable to assume ai
and ak to be connected directly. The point aj and ak can be assumed connected as well. While ai and aj are connected via ak, rather than directly.


 Blow 
  l1r	
  l2r	
  mr	

× ait +	× ajt =

a — a	a — a	a
— a × akt	(19)

(Blow
T  ''
low
, as shown in Equation (14).
Our theorem is proven.

U X V = SVD  B''
T  “
low
	(14)
6. Experimental results

Step 3. The matrix P = UVT is expected.
5. Theoretical analysis

As mentioned above, in our algorithm, we transform the manifolds A and B into hyper spheres in the first step. The distances between each pair of points on these hyper spheres are used to determine the connectivity of points on A and B. Therefore, it is of great significance to guarantee that the transformation preserves properties regards to connectivity on A and B. In this section, we analyze this problem and state it as the following theorem.
Theorem 3. Let ai and aj be two points on manifold A.
Denote their corresponding points on manifold A* as and a*a*.

To test the effectiveness of our alignment algorithm, we use three data sets. The first one is Protein, which is a small data set. The second one is the European Corpus, which is a large data set used for cross-lingual retrieval. The third one is the Wikipedia's featured articles, which is used for cross-media retrieval. Both toy data set, which is easy to be drawn directly, and real world data sets, which are more complex, are used in our experiment. The experimental results using these data sets are discussed below.

Protein

It is well known that protein 3D structure reconstruction is

i  j

impossible to find an integer k, 1 ≤ k ≤ m, such that for some If ai and aj are connected directly on manifold A, then it is
scalar l and m, a*, a* and a* satisfies Equation (15). In the
useful for Nuclear Magnetic Resonance (NMR) protein
structure determination. It can learn a map from distances to coordinates. NMR techniques can learn multiple models,

i	j	k

equation, a* means the t-th coordinate of point a*, with
1 ≤ t ≤ p; 0 ≤ l1; l2 ≤ 1; 0 ≤ m ≤ 1; l1 + l2 = 1.
l a* — a + l  a* — a = m a* — a	(15)
rather than a single structure. The models which are related to
the same protein should be similar.
Therefore, comparison between these models in the results can tell whether the NMR technique can determine protein




Proof. We prove this theorem by contradiction. First assume there exists k, l and m that satisfies Equation (15) mentioned above. With the correspondence between manifolds A and A*, we can get the following equations.
In this part of experiment, we study the Glutaredoxin
protein PDB-1G7O. This protein is composed of 215 amino acids in total and its three-dimensional structure has 21 models. Two of these models are selected for testing. Model
1 is denoted as the original manifold A, and model 2 is

*	r
it
× (ait
— a)+ at
denoted as the original manifold B. These original manifolds are shown in Fig. 2 (A).
In order to align these two manifolds, we select 1/10 amino

a* = 	r	 × a — a + a

*	r
kt
× (akt — a)+ at
on each manifold is 22, which are known to be matched. Other
193 data points are assumed to be unlabeled, and they are used for testing.



Fig. 2. Alignment results using protein dataset.


As shown in Fig. 2 (B), the low dimensional representation shows that our algorithm can align these manifolds well.

Cross-lingual retrieval

In this part of experiment, we use the data set of European Parliament Proceeding Parallel Corpus (Europarl Corpus),
which contains the data from the year 1996e2011. This corpus is composed of numerous kinds of language, we select the parallel corpus of English and Italian, and extract the docu- ments that contains more than 90 words. There are 2500 pairs of documents that satisfy this condition, each English docu- ment is represented by the most commonly used 1000 English words, and each Italian document is also represented by the



Fig. 3. Test on Europarl Corpus Dataset (20% instances are in the given correspondence).



most commonly used 1000 Italian words. Therefore, these original data points can be considered to come from a 1000 dimensional space.
We select other three typical algorithms for comparison: first one is the Procrustes alignment algorithm using LPP (Locality Preserving Projections), second one is the alignment algorithm preserving global geometry, and third one is the baseline algorithm. The baseline algorithm can be stated as follows.
Assume that there are n correspondences in the training data set, then the document x can be represented by a vector V whose length is n. In this vector, V(i) represents the similarity between x and the i-th document in the training correspon- dences. The baseline algorithm maps the documents from different collections into the same embedding space Rn.
The effectiveness of alignment algorithms can be described as follows. For each English document, we select k Italian documents that are most similar with it. The effectiveness of these algorithms is represented by the probability for the true match to be among these k most similar documents. All of these algorithms map the data into a 100 dimensional space.
The accuracy of our algorithm is shown in Fig. 3. As shown in this figure, our algorithm Conformal Mapping can perform well using the Europarl Corpus data set.

Cross-media retrieval

In this experiment, we rely on Wikipedia's featured articles. This is a continually updated collection of articles that have been selected and reviewed by Wikipedia's editors. The arti- cles are accompanied by one or more pictures from the Wikimedia Commons, supplying a pairing of the desired kind. In addition, each featured article is categorized by Wikipedia into one of 29 categories. These category labels were assigned to both the text and image components of each article. Since some of the categories are very scarce, we considered only the 10 most populated ones.
Each article was split into sections, based on its section headings, and each image in the article assigned to the section in which it was placed by the article author. This produced a set of short and focused articles, usually containing a single image. The dataset was finally pruned by removing the sections without any image. The final corpus contains a total of 2866 documents. A

Table 1
Summary of the dataset of Wikipedia featured articles.

Table 2
Retrieval performance of the experiments.



random split was used to produce a training set of 2173 docu- ments, and a test set of 693 documents, as shown in Table 1.
To prove the effectiveness of our algorithm under the situation of cross-media retrieval, we selected different kinds of algorithms to compare with ours, including the random selection, the semi- definite manifold alignment algorithm [28], the parallel field alignment retrieval (PFAR) algorithm [18], the local regression and global alignment (LRGA) algorithm [33] and the temporal- spatial clustering (TSC) algorithm for text and image [17].
These selected algorithms can cover most of the widely used methods, such as linear/nonlinear algorithms, regression algorithms and manifold alignment algorithms. Among the above mentioned algorithm, the algorithms of LRGA and TSC can be considered as applications of manifold alignment al- gorithm to solve the problem of cross-media retrieval. Comparing with these algorithms, the effectiveness of pro- cessing the correspondence between images and texts using our algorithm can be proven.
The experimental results are show in Table 2. We use the MAP value as a criterion to evaluate these algorithms. It can be seen from the results that our algorithm can perform well on the problem of cross-media retrieval.

7. Conclusion

In this paper, we have proposed a manifold alignment al- gorithm using discrete surface Ricci flow, in order to transform a surface with a complex structure into a hyper sphere and then align these hyper spheres. The experimental results show that our algorithm can perform well on both small and large data sets. The alignment algorithm can not only explore the similarity of data of the same kind, but also can help find the similarity among different kinds of data.
In order to align two manifolds with complex structures, one of the most critical steps is constructing the triangle meshes to approximate intrinsic manifolds. However, when the intrinsic dimensionalities of manifolds are quite high, there may be more than one proper approach to construct the tri- angle meshes. Therefore, for future works, we will focus on searching for the approach to construct the most proper tri- angle meshes, which can both be efficient and approximate the manifold accurately, when the intrinsic structure is complex.
As is well known, the approximation of a surface includes two kinds of important aspects, i.e., the approximation of position and normal bundle. These two aspects are of much



significance in manifold alignment algorithms as well. The calculation of correspondences among different data sets can be regarded as the alignment of position in high dimensional spaces. However, alignment of the normal bundle among the latent manifolds can be helpful to understand the properties of data sets, such as semantic information.
As the semantic information of images or texts has attracted a lot of attention, the alignment algorithms among different kinds of data have faced with challenges because of semantic gap. For example, problems such as the relation between the singularity of geometrical structure on the low dimensional manifold of images and the difference of meaning of an image to all the other, may be meaningful to study.

References

M. Belkin, P. Niyogi, Neural Comput. (2003) 1373e1396.
K.K. Bhatia, et al., Med. Image Comput. Comput. Assist. Interv. (2012) 512e519.
S. Brendle, R. Schoen, Acta Math. 200 (2008) 1e13.
B. Chow, J. Differ. Geom. 33 (2) (1991) 325e334.
B. Chow, F. Luo, J. Differ. Geom. 63 (1) (2003) 97e129.
D.L. Donoho, C. Grimes, Locally linear embedding techniques for high- dimensional data, in: Proceedings of the National Academy of Sciences of the United States of America, 2003, pp. 5591e5596.
F.P. Gardiner, N. Lakic, Am. Math. Soc. (2000). Technical Report, Nov. 5.
X. Gu, S. Wang, J. Kim, Y. Zeng, Y. Wang, H. Qin, D. Samaras, in: Proceedings of the IEEE International Conference on Computer Vision, 2007.
R. Guo, Local Rigidity of Inversive Distance Circle Packing, 2009 arXiv: 0903.1401v2.
J. Ham, D. Lee, L. Saul, Annu. Conf. Uncertain. Artif. Intell. 10 (2005) 120e127.
R.S. Hamilton, Math. General Relativ. 71 (1988) 237e262.
X.F. He, P. Niyogi, Adv. Neural Inf. Process. Syst. (2004) 153e160.
K. Kim, D. Lee, Pattern Recognit. (2014) 470e479.
R. Jia, J. Electr. Eng. 12 (4) (2014).
X. Li, C.J. Lv, Z. Yi, Manifold alignment based on sparse local structures of more corresponding pairs, in: Proceedings of the Twenty-third Inter- national Joint Conference on Artificial Intelligence, AAAI Press, 2013.
Y. Lipman, T. Funkhouser, ACM 28 (3) (2009) 72.
Y. Liu, et al., Cross retrieval method based on temporal-spatial clustering and Multimodal Fusion, in: Proceedings of the Fourth International Conference on the Internet Computing for Science and Engineering, 2009, pp. 78e84.
X.B. Mao, et al., Parallel field alignment for cross media retrieval, in: Proceedings of the Twenty-first ACM International Conference on Multimedia, 2013, pp. 897e906.
G. Perelman, The Entropy Formula for the Ricci Flow and its Geometric Applications, 2002 technical report, arXiv.org.
G. Perelman, Ricci Flow with Surgery on Three-manifolds, 2003 tech- nical report, arXiv.org.
G. Perelman, Finite Extinction Time for the Solutions to the Ricci Flow on Certain Three-manifolds, 2003 technical report, arXiv.org.
S.T. Roweis, L.K. Saul, Science (2000), pp. 2323-+.
J.B. Tenenbaum, V. de Silva, J.C. Langford, Science (2000), pp. 2319-+.
C. Wang, S. Mahadevan, Manifold alignment using Procrustes analysis,
in: Proceedings of the 25th International Conference on Machine Learning, ACM, 2008, pp. 1120e1127.
C. Wang, S. Mahadevan, Int. Jt. Conf. Artif. Intell. 38 (4) (2009) 1273e1278.
C. Wang, S. Mahadevan, AAAI Fall Symposium (2009) 79e86.
C. Wang, S. Mahadevan, Manifold alignment preserving global geome- try, in: Proceedings of the Twenty-seventh International Joint Conference on Artificial Intelligencem, AAAI Press, 2013, pp. 1743e1749.
C. Wang, S. Mahadevan, Multiscale Manifold Alignment, Technical Report, University of Massachusetts, 2010.
S. Wold, K. Esbensen, P. Geladi, Chemom. Intelligent Laboratory Syst. (1987) 37e52.
L. Xiong, F. Wang, C. Zhang, “Semi-definite Manifold Alignment”, Machine Learning: ECML 2007, Springer Berlin Heidelberg, 2007, pp. 773e781.
G.L. Yang, X. Xu, J.M. Zhang, Mainifold Alignment via local tangent space alignment, in: International Conference on Computer Science and Software Engineering, 2008, pp. 928e931.
H.L. Yang, M.M. Crawford, Hyper Image Signal Process. Evol. Remote Sens. (2011) 1e4.
Y. Yang, et al., Ranking with local regression and global alignment for cross media retrieval, in: Proceedings of the 17th ACM International Conference on Multimedia, 2009, pp. 175e184.
D. Zhai, H. Chang, S. Shan, et al., in: British Machine Vision Confer- ence, 2010, pp. 1e11.
Z.Y. Zhang, H.Y. Zha, J. Shanghai Univ. Engl. Ed. (2004) 406e424.
Z.Y. Zhang, J. Wang, H.Y. Zha, in: IEEE Trans. Pattern Anal. Mach. Intell., 2012, pp. pp.253e265.


Zhongxin Liu received the B.S. degree in software engineering from Nankai University, Tianjin, China in 2012 and the M.S. degree in computer application technology from Peking University, Beijing, China in 2015. Since 2015, he has been a Software Engineer with the Baidu Co., Ltd, Beijing, China. His research interests include recommender systems, information retrieval, machine learning, computer vision, image processing, robotics and multi-agent systems.



Wenmin Wang received the Ph.D. degree in computer architecture from the Harbin Institute of Technology, Harbin, China, in 1989. After completing the Ph.D. degree, he was an Assistant Professor and an Associate Professor at the Harbin University of Science and Technology, Harbin, China, as well as the Harbin Institute of Technology. Since 1992, he gained about 18 years of oversea industrial experiences in Japan and America, in where served as a Staff Engineer, Chief Engineer, General Manager of Software Division, etc., for various companies. In 2009, he became a Professor
at the School of Electronic and Computer Engineering, Peking University, Shenzhen, China. His current research interests include computer vision, multimedia retrieval, artificial intelligence, and machine learning.


Qun Jin is currently a tenured full professor at the Department of Human Informatics and Cognitive Sciences, Faculty of Human Sciences, Waseda Uni- versity, Japan. He has been engaged extensively in research works in the fields of computer science, in- formation systems, and social and human informatics. He seeks to exploit the rich interdependence between theory and practice in his work with interdisciplinary and integrated approaches. Dr. Jin has published more than 200 refereed papers in the world-renowned aca- demic journals and international conference pro-
ceedings in the related research areas. His recent research interests cover human-centric ubiquitous computing, behavior and cognitive informatics, data analytics and big data security, personal analytics and individual modeling, cyber-enabled applications in e-learning and e-health, and computing for well- being. He is a member of IEEE, IEEE CS, and ACM, USA, IEICE, IPSJ, and JSAI, Japan, and CCF, China.
