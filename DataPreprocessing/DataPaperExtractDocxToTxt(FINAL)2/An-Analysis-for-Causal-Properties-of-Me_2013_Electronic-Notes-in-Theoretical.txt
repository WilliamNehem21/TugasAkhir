Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 299 (2013) 15–31
www.elsevier.com/locate/entcs

An Analysis for Causal Properties of Membrane Interactions
Chiara Bodei, Roberta Gori, Francesca Levi
Dip. di Informatica, Universit`a di Pisa, Via Pontecorvo, 3 - Pisa, Italy
{chiara,gori,levifran}@di.unipi.it


Abstract
We present here an analysis, based on Abstract Interpretation [7], obtained by defining a finite computable approximation of the causal semantics proposed in [4] for the Mate/Bud/Drip (MBD) Brane Calculus [6]. The causal semantics in [4] is able to address different kinds of causal dependencies: structural, synchro- nisation and the so-called environment causality. Our analysis, being a safe (over)-approximation of such causal semantics, besides modelling all possible evolutions of the system, can be used to formally prove causal properties among membrane interactions.
Keywords: Brane calculus, abstract interpretation, systems biology

Introduction
Understanding the causal relationships among the actions performed by a process is a relevant issue for all process algebras used in Systems Biology, for determining which events are necessary for another event to occur. We could benefit from this kind of information in several ways, for instance, for determining the order of some events thus limiting the size of the system to be explored. When studying a particular biological phenomenon, this would allow to only analyse the events that may have an impact on the phenomenon in hand. In drug research, for example, the study of causal relations can help in characterizing the relationships amongst molecules in a biochemical interaction network. This information can be exploited for determining the chemical species that are involved in causing the phenomenon of interest thus identifying possible drug targets.
Among the different process algebras proposed for Systems Biology, Brane cal- culus [6] is able to describe the behaviour of dynamically nested membranes and have resulted particularly useful for modelling and reasoning about a large class of biological systems, such as the one of the eukaryotic cells that, differently from the prokaryotes, possesses a set of internal membranes. For these reasons, in her

1571-0661 © 2013 Elsevier B.V. Open access under CC BY-NC-ND license.
http://dx.doi.org/10.1016/j.entcs.2013.11.003

seminal work [4] Busi proposes a causal semantics for the Mate/Bud/Drip (MBD) fragment of Brane Calculus to formally address different kinds of causal dependen- cies: the standard structural and synchronisation causality, arising from the prefix structure of terms and from the synchronisation of complementary actions, and the environment causality related to the membrane structure and due to the MBD primitives. However, the introduction of annotations on causes into the standard semantics limits its practical application for the investigation of the causal depen- dencies arising in biological systems. Actually, the transition system enriched with causal information is generally quite huge (or even infinite).
In this context, resorting to static analysis techniques is a typical way to extract information on the run-time behaviour by reducing the computational cost of dy- namic techniques, particularly high when dealing with the intrinsic complexity of biological systems. Pushing forward some ideas developed in [3], we propose here an analysis for MBD, obtained by applying Abstract Interpretation (AI) [7] tech- niques. The analysis has polynomial complexity and is based on the definition of an abstract version of the causal semantics of [4]. The analysis of a system provides approximate information on all derivatives of the initial system and a description of the set of possible causal dependencies among reduction steps. Being a safe over- approximation of the causal behaviour, our analysis can be applied for proving that a reduction step does not depend on another one.
Note that addressing causality is generally a hard task. The analyses presented in [16,10,2,17] predict over-approximate information on all the derivatives of the ini- tial system. These techniques guarantee invariant properties, showing that certain events will not happen in each state of the transition system, but cannot capture causal properties. The first attempt in this direction is made in [18], where a con- textual CFA for Bioambients [21] is introduced and in [19] where a pathway analysis is exploited for investigating causal properties. In [3], the contextual CFA for MBD is able to capture some kind of causal dependencies, giving some causal structure to the usually flat CFA results. Causality and temporality aspects in Bioambients are addressed by the analyses introduced in [11,12], based on AI techniques. This approach is more expensive from a computational point of view and, as the one in [19], relies on the abstraction of the transition system. There are other biologically- oriented calculi potentially of interest for our approach, such as an extension [15] of κ-calculus [9], the Calculus of Looping Sequences [1] and Beta Binders [20], whose causality issues have been addressed in [14], starting from [8]. A nice survey on calculi for biology can be found in [13].
The rest of the paper is organised as follows. We present, in Section 2, the standard MBD semantics, in Section 3, the causal semantics for MBD, while in Section 4, we introduce the analysis. For lack of space, we present the formal definitions for MBD without replication and we briefly discuss in Section 5 the extensions required for the full calculus. Some concluding remarks can be found in Section 6.

P, Q ::= o | P ○ Q | σQP ¢Γ	systems Sys
σ, τ  ::= 0 | σ|τ | aλ.σ	membrane processes Proc
a, b  ::= maten | maten | budn | budn(σ) | drip(σ) actions Act
˜ ˜	˜	˜	˜ Γ

P, Q ::= o | P ○ Q | σ˜QP ¢
systems with causes S˜ys

σ˜, τ˜
::= 0 | σ˜|τ˜ | (K, I, E) :: aλ.σ	processes with causes Proc

Table 1
Syntax of Labelled MBD (above) and of MBD with Causes (below).

An overview on MBD Brane Calculus
The actions of the MBD fragment of Brane Calculi [6] are inspired by membrane fusion, called mating, and splitting, called dripping/ budding, when splitting off one/zero internal membrane, respectively. We introduce the syntax and the se- mantics for MBD, considering a labelled version of the calculus. As usual in static analysis, labels are exploited in the definition of the analysis (presented in Sect. 4) and do not affect the dynamic semantics of the calculus. As already mentioned, we consider the calculus without replication.
A membrane system consists of nested membranes, where each membrane is associated to a membrane process. The syntax of labelled MBD is described in the upper part of Tab. 1, with n taken from a countable set N of names, and where we write P ∈ Sys for systems, σ ∈ Proc for membrane processes, and a ∈ Act for actions. Each membrane is annotated with a membrane label Γ ∈ Lˆabn and each action with a process label λ ∈ Labr .
We therefore need two distinct sets of labels: the set of process labels Labr ,
ranged over by α, β .. ., and the set of membrane labels Lˆabn, ranged over
by Γ, Δ, ..., that, given a set of basic labels Labn is defined as the least
set s.t.: (i) Labn ⊆ Lˆabn; and (ii) if Γ, Δ ∈ Lˆabn and λ, μ ∈ Labr , then
mate(Γ, Δ, λ, μ), bud(Γ, Δ, λ, μ), drip(Γ, λ) ∈ Lˆabn.
We comment on the primitives specific for MBD, as the other constructs are standard in process calculi. The system σQP ¢Γ describes a membrane, decorated by the label Γ, that contains the system P and performs the membrane process σ, describing its interaction capabilities. The construct aλ.σ defines a sequential process that executes an action a, decorated by λ, and then behaves as the process σ. Here a denotes an action (or co-action) for fusion or splitting. We adopt standard syntactical abbreviations, like aλ for aλ.0, QP ¢Γ for 0QP ¢Γ, and σQ¢Γ for σQ⬦¢Γ.
Labels will be also exploited in our causal MBD semantics (in Sect. 3): in particular, the process labels related to the actions involved in each reaction are used to generate the fresh cause name associated with the corresponding reduction step. To this aim, we require that systems are well-labelled, i.e., that all the process labels occurring in a system are distinct. In the following, we consider only well- labelled systems and processes.
The semantics of the calculus is given by the reduction rules in Tab. 2, modulo the structural congruence rules, here omitted because standard (see [6]). Besides
the standard reduction rule for congruence (Struct), and the contextual rules
to propagate reductions across parallel composition (Par) and membrane nesting




Table 2
Reduction Semantics for (Well-labelled) MBD.
(Brane), there are the axioms specific of the MBD fragment. Rule (Mate) mod- els the fusion of two parallel membranes labelled by Δ and Γ that exercise the actions mateλ and mateμ., resp. The membrane introduced by the fusion takes the
n	n
label mate(Δ, Γ, λ, μ) and is associated to the parallel composition of the residual
processes of the two membranes. In the rule (Bud) a membrane with label Γ ex- pels a child membrane labelled by Δ, by performing the actions budμ(ρ) and budλ,
n	n
resp. The membrane labelled by Δ is wrapped inside a new membrane with la-
bel bud(Δ, Γ, λ, μ) and associated to the process ρ. Finally, in the rule (Drip), a membrane labelled by Δ, by performing the action dripλ(ρ), creates a new empty membrane labelled by drip(Δ, λ) and associated to the process ρ.

Causal Semantics for MBD
In [4], Busi describes and classifies different kinds of causal dependencies in MBD. As in all process algebras, there is the standard structural causality arising from the prefix structure of terms and the one, synchronisation causality, arising from the synchronisation of complementary actions. Furthermore, there are the causal dependencies coming from the membrane structure and due to the MBD primitives. In particular, the mate reaction introduces a quite subtle kind of causality, called environment causality. Actually, after the fusion of two membranes the environment is modified so that the interaction possibilities of their child membranes may result increased.
More in details, after the fusion of two membranes it is possible that: (i) two child membranes become siblings and, therefore, can perform a mate that was not possible before; and (ii) a child membrane moves out from the parent membrane by performing a bud reaction that was not possible before. Hence, such interactions of the child membranes causally depend on the mate realised by the parent membranes. By contrast, a drip reaction realised by a child membrane can be considered causally independent from the mate operation, because it can be executed regardless of the fact that the fusion of the parent membranes has been performed.
The causal semantics for MBD in [4], is based on the idea of annotating each reaction step with the following causal information:

a fresh name k in a set of causes K that represents the name associated to the reaction;
a set of causes H ⊆ K that includes the names associated to the already occurred reactions, that represent the immediate causes of the current reaction.
Note that the set of all the causes can be obtained by transitive closure of the immediate causal relation. The syntax of the calculus is enriched with causal infor- mation, to propagate the cause name associated to each reduction step to the next interactions.
We simplify and adapt the causal semantics in [4], to make simpler the definition of its abstract version. The main difference is that we obtain the cause name k associated to a reaction step from the process labels related to the involved actions. The well-labelling condition guarantees that k is fresh.
We define the systems with causes by introducing information on causes in la- belled systems. We first introduce our version of the set of cause names K = Labr ∪ (Labr × Labr ) and a related set of decorated causes K± = {kx | k ∈ K,x ∈ {+, −}}. 1 Sets Yi of decorated causes can be combined with the opera- tor ⊗ : ℘(K±) × ℘(K±) → ℘(K), as follows:
Y1 ⊗ Y2 = {k | kx ∈ Y1, ky ∈ Y2, with x, y ∈ {+, −},x /= y}
The syntax of systems with causes S˜ys and of processes with causes P˜roc is defined in the lower part of Tab. 1, where (K, I, E) ∈ K^ with K^ = ℘(K) × ℘(K±) × ℘(K±). The causal information, put in front of each sequential processes, is given by the triple (K, I, E). The component K represents the set of immediate causes of the process aλ.σ, while components I and E report sets of decorated causes representing its internal and external causes, resp.. Decorated causes are specifically introduced to handle environment causality and thus to treat the causal dependencies originated by the fusion of two membranes. More in details, they are used to assign the cause associated to the mate of two membranes to the future mate and bud interactions of the child membranes, provided that such interactions have become possible as a consequence of the fusion of the parent membranes. Intuitively, in a decorated cause hx the cause name h refers to a mate reaction that has previously occurred, while the sign x ∈ {−, +} is used to distinguish one membrane that has merged from the other one. Moreover, an internal cause hx ∈ I shows that the membrane associated to the process aλ.σ was a child membrane of the one related to x that has realised the mate associated to h. Similarly, an external cause hx ∈ E shows that the process aλ.σ comes from the one related to x that has realised the mate associated to h.
For simplicity, we omit the empty triple (∅, ∅, ∅) in front of sequential processes. By abuse of notation, a labelled process (resp. system) can be interpreted, when required, as a process with empty causes (resp. a system with empty causes).
k;H
The causal semantics is given in terms of the causal transition relation −→, where

1 For simplicity, when a set of (decorated) causes is a singleton, we omit the surrounding parentheses.

k;H
P
cause name k ∈ K, and with the set of immediate causes H ⊆ K. We first in- troduce an auxiliary operator that distributes the causal information on sequential subprocesses and on systems.
Definition 3.1 Given a triple (K, I, E) ∈ K^, the operator (K, I, E) d is inductively defined on P˜roc and S˜ys as follows:
(K, I, E) d 0=0	(K, I, E) d o = o

(K, I, E) d σ˜|τ˜ = (K, I, E) d σ˜ | (K, I, E) d τ˜
(K, I, E) d (P˜ ○ Q˜)= (K, I, E) d P˜
(K, I, E) d Q˜

(K, I, E) d (K′,I′,E′) :: aλ.σ =	(K, I, E) d σ˜QP˜¢Γ = ((K, I, E) d σ˜)QP˜¢Γ
(K ∪ K′,I ∪ I′,E ∪ E′) :: aλ.σ
The causal transition system is defined up to causal structural congruence (that is the expected one) and to causal reduction rules, obtained by decorating the rules of Tab. 2 with information on causes. Tab. 3 presents the causal version of the MBD axioms and omits the obvious adaptation of the rules (Par), (Brane) and (Struct) in Tab. 2.





(K1,I1,E1) I> mate h.ơ
∆

ơ0
(K2,I2,E2) I> mate µ.τ
Γ

τ0




Fresh name cause associated to mate synchronisation



((λ,µ),I1,E1) I> ơ |((λ,µ),I2,E2) I> τ
h in (I1 Ⓒ I2) if the two membranes have become siblings after the mate h
mate(∆,Γ,h,µ)



(∅, (λ,µ)+, ∅) I> P
˚ (∅, (λ,µ)-, ∅)
∅, (λ,µ)+) I> ơ0 |

∅ λ,µ) ) I> 0


They become sibl ngs after the mate (h,µ)
They become parent−child after the mate (h,µ)




Fig. 1. Illustration of the (Matec) rule (where tildes are omitted for simplicity in systems and processes.)
In the rule (Matec) (illustrated in Figure 1) two membranes (labelled by Δ
and Γ resp. 2 ) realise a fusion, synchronising on co-actions mateλ and mateμ.
The reduction step is associated to the fresh cause name k derived from the labels λ and μ, and has in the set of immediate causes the immediate causes of both actions, and all the causes h ∈ I1 ⊗ I2, derived by suitably combining the

2 For brevity, from now on, we will write membrane Δ instead of membrane labelled Δ. Similarly, we will write reaction k instead of reaction associated to k

internal causes of both actions: if hx ∈ I1 and hy ∈ I2, with x /= y, then the two membranes have become siblings as a consequence of the mate reaction h. Therefore, the mate reaction k causally depends on reaction h.
The information on causes is propagated into the resulting system as follows. Both continuations of mate and co-mate have k as immediate cause and inherit both internal and external causes from the previous action. Both internal and external causes related to k are introduced in order to assign cause k to the future mate and bud interactions of the child membranes. More in details, the child membranes coming from the membrane Δ (resp. Γ) take internal cause k+ (resp. k−). Finally, external causes are assigned to the remaining processes coming from one of the two merging membranes. Again, cause k+ is propagated in the process coming from the membrane Δ, while k− is propagated in the process coming from the membrane Γ.
In the rule (Budc) a membrane Γ expels a child membrane Δ, by synchronising
on co-actions budλ and budμ(ρ). The reduction step is associated to the fresh
cause name k, derived as in rule (Matec). The set of immediate causes contains the immediate causes of both actions, and the causes h ∈ E1 ⊗ I2 that are derived by combining the external causes of the cobud and the internal causes of the bud action. Actually, if hx ∈ E1 and hy ∈ I2, with x /= y, then the movement of the child membrane out from the parent membrane has become possible after the execution of the mate reaction h. Hence the bud reaction associated to k causally depends on the mate h. Propagation of causes is as follows. The continuations of the two actions acquire causes as before. The new membrane that encloses the membrane Δ is associated to the process ρ, that has k as immediate cause and inherits, from the cobud, the internal causes I1, needed to control the possible future mate interactions of the new membrane.
In the rule (Dripc) a membrane Δ splits off an empty membrane, performing an action dripλ(ρ). The reduction step is associated to the fresh cause name λ and to the set of immediate causes of the drip action. Differently from the previous cases, a drip reaction is causally independent from the previously mate reactions realised by the parent membranes. Causes are propagated as in rule (Budc).
The causal semantics of a system P is defined as a Labelled Transition System (LTS) obtained by transitive closure from the system with empty causes, corresponding to P .
We present some illustrative examples for the causal semantics, taken from [4]. We focus on environment causality, discussing the effect of a mate reaction on the future interactions (mate and bud) of the child membranes. For a more precise approximation, we assume that in the initial systems all membrane labels belong to Labn.
Example 3.2 We consider the system

P  = mateν Qmateμ |mateζQ¢Θ ◦ mateβQ¢Φ¢Δ ◦ mateδ Qmateλ Q¢Ψ¢Γ
1	n	m	o	o	n	m




Table 3
MBD Axioms with Causes.

composed by the two parallel membranes Δ and Γ. The first membrane contains two child membranes Θ and Φ, while the second one contains the membrane Ψ. Initially, the two top-level membranes are willing to realise a mate reaction on n (with corresponding actions maten and maten), while the two membranes Θ and Φ are willing to realise a mate on o. Analogously, the membranes Θ and Ψ want to realise a mate on m. It should be clear that the mate reactions on n and on o do not causally depend one on the other, because the membranes Θ and Φ are initially siblings inside the membrane Δ. By contrast, the mate reaction on m causally depends on the mate on n, because the membranes Θ and Ψ become siblings only after the fusion of the parent membranes.
The causal semantics of the system P1 reflects this behaviour, as shown by the following computation. The other computations are similar.


P  h1 ;∅	+	μ	+
ζ	Θ	+
β  Φ	−

λ  Ψ Π


1 −−−→ Q((∅, h1 , ∅) :: matem|(∅, h1 , ∅) :: mateo)Q¢
(∅, h1 , ∅) :: mateo Q¢
(∅, h1 , ∅) :: matemQ¢ ¢

h2 ;{h1 }	+  +
ζ  Π1	+
β  Φ Π h3 ;∅
Π2 Π

−−−−−−→ Q((∅, h1 , h2 ) :: mateoQ¢
(∅, h1 , ∅) :: mateo Q¢ ¢
−−−→ QQ¢ ¢
where

h1 = (ν, δ), h2 = (μ, λ), h3 = (ζ, β), Π= mate(Δ, Γ, ν, δ), Π1 = mate(Θ, Ψ, μ, λ), Π2 = mate(Π1, Φ,ζ,β)

The mate reaction on n is associated to the cause name h1 and has an empty set of immediate causes. Internal causes related to h1 are propagated into the processes associated to the child membranes of the membrane Π resulting from the fusion. In particular, the membranes Θ and Φ acquire internal cause h+, while the membrane
Ψ acquires internal cause h−.
The mate reaction on m is associated to h2 and has {h1} as set of immediate causes, derived by combining the internal causes of the mate and co-mate (h+ and h−, resp.). The sign of decorated causes shows that the two membranes have become siblings as a consequence of the mate on n.
The mate reaction on o is associated to h3 and has an empty set of immediate causes. Differently from the previous case, the mate and the co-mate carry the same internal cause h+ revealing that the two membranes were siblings also before the
mate on n.

Example 3.3 We consider the system
P2 = mateν |budλ (ρ1)Qbudμ Q¢Θ ◦ budζQ¢Φ¢Δ ◦ mateδ |budβ(ρ2)Q¢Γ
n	m	m	o	n	o
As in Example 3.2 the system is composed by two parallel membranes Δ and Γ that are ready to interact, performing a mate reaction on n. In this case, the membrane Δ contains two child membranes Θ and Φ that are willing to realise a bud reaction. The child membrane Θ can perform an action budm, while the child membrane Φ can perform an action budo. The membrane Δ offers the co-action budm(ρ1) so that the bud reaction on m can be performed independently from the mate on n. By contrast, the membrane Φ cannot realise the bud before the mate of the parent membranes. Hence, the bud reaction on o causally depends on the mate on n.
The behaviour of the system is reflected by the causal semantics, as shown below.


P  h1 ;∅	+	λ

—	β	+

μ  Θ	+
ζ  Φ Π

2 −−−→ (∅, ∅, h1 ) :: budm(ρ1)|(∅, ∅, h1 ) :: bud0 (ρ2))Q(∅, h1 , ∅) :: budmQ¢ ○ (∅, h1 , ∅) :: budoQ¢ ¢

h2 ;{h1 }
Φ Ψ1	+	λ
+	μ  Π

−−−−−−→ (h2, ∅, ∅) :: ρ2QQ¢ ¢
(∅, ∅, h1 ) :: budm(ρ1)Q(∅, h1 , ∅) :: budm¢

h3 ;∅
−−−→ (h2, ∅, ∅) :: ρ2QQ¢
Φ¢Ψ1
(h3, ∅, ∅) :: ρ1QQ¢
Θ¢Ψ2
Q¢Π
where

h1 = (ν, δ), h2 = (ζ, β), h3 = (μ, λ), Π= mate(Δ, Γ, ν, δ), Ψ1 = bud(Φ, Π,ζ,β), Ψ2 = bud(Θ, Π, μ, λ)

The mate reaction on n is as in Example 3.2. Internal and external causes related to h1 are propagated into the resulting system. More precisely, the processes asso- ciated to the membranes Θ and Φ that were child membranes of Δ acquire internal cause h+. In addition, the residual processes associated to the two membranes Γ and Δ acquire external causes. The processes in parallel with the mate take h+,
while the ones in parallel with the co-mate take h−.
The bud reaction on o is associated to h2 and has set of immediate causes {h1}, derived by combining the external causes of the co-bud and the internal causes of the bud (h+ and h− resp.). The decorated causes show that the bud reaction on o
1	1
has become possible as a consequence of the mate on n.
The bud reaction on m is associated to h3 and has an empty set of immediate causes. Differently from the previous case, both the bud and the co-bud carry the same decorated cause h+, showing that the bud reaction on m was possible also
before the mate on n.

The Abstraction
The aim of the analysis is to compute an over-approximation of all derivatives of a system with causes, together with an over-approximation of the set of causes associated to each reaction step. Following the AI approach the analysis is based on the definition of an abstract version of the causal semantics. This semantics is given by transitions among abstract states that report approximate information on systems with causes. More precisely, an abstract state provides a description of the possible hierarchical structure of membranes and of the processes with causes, associated to each membrane.

Abstract Labelled MBD and MBD with Causes. The approximation is based on an abstraction of membrane labels that is necessary to guarantee that the set of labels generated in the abstract causal semantics is finite. We introduce
the abstract version of the set of basic membrane labels Lab○	= Labn ∪ {@},
with a special symbol @ representing the outermost membrane.	Then we de-
ˆ	○	○

fined as the least set s.t.: (i) Lab○	⊆ ˆ
○	○ ∈ ˆ○
then

mate(Γ○, Δ○), bud(Γ○, Δ○), drip(Γ○) ∈ ˆ○
The approximation introduced by Lˆabn is not enough since the interactions between membranes may introduce arbitrarily nested membrane labels such as, for example, mate(bud(drip(Γ○), Δ○), Ψ○). We therefore introduce a further abstrac- tion by considering the set of abstract membrane labels parametric w.r.t. d with d ∈ N+ as,

ˆ	○	○	ˆ	○

where depth(Δ○) gives the maximal number of nested constructors mate, bud and
○	○	○	○	ˆ
drip occurring in Δ , e.g. depth(mate(bud(drip(Γ ), Δ ), Ψ )) = 3. The set Labn
contains all the abstract membrane labels with depth no greater than d and the new membrane labels: mate(T, T), bud(T, T) and drip(T) that approximate all the membrane labels of the same form having depth greater than d.

The relation between membrane labels
ˆ
Lˆabn and abstract membrane labels
•

Labn can be formalised by introducing the abstract version Δ
follows:
if Δ ∈ Labn then Δ• = Δ;
of a label Δ, as

if Δ  =  #(Γ, Ψ, λ, μ) with #  ∈  {mate, bud}, then Δ•	=  #(Γ•, Ψ•) if
depth(#(Γ•, Ψ•)) ≤ d; Δ• = #(T, T) o.w.;
if Δ = drip(Γ, λ) then Δ• = drip(Γ•) if depth(drip(Γ•)) ≤ d; Δ• = drip(T) o.w.
The abstraction of membrane labels induces a corresponding abstraction on la- belled systems and on systems with causes. We omit the syntax of abstract labelled
systems Sys○ and of abstract systems with causes S˜ys , obtainable from the corre-
sponding concrete ones (see Tab. 1), by replacing membrane labels with abstract membrane labels. We write P○ ∈ Sys○ and P˜○ ∈ ˜○
and systems with causes, resp.. The abstract version P• (resp. P˜•) of a labelled sys-
tem P (resp. of a system with causes P˜) is obtained by substituting each membrane
Δ with its abstract version Δ•.
Abstract States. An abstract state represents approximate information about systems with causes and reports information on the parent-child relation between membranes and a description of the processes with causes associated to each mem- brane. Formally, it is defined as a function that assigns to each abstract membrane label: (a) a set of abstract membrane labels representing the membranes that may be child membranes; and (b) a set of sequential processes with causes representing

the process with causes that may be associated to the membrane. The component
(b) is described by a conﬁguration.
Definition 4.1 [Configurations and Abstract States]

Let C○ ⊆ P˜roc s.t., for each σ˜
∈ C○, σ˜
= (K, I, E) :: aλ.τ . We say that C○

is a conﬁguration iff, for each (K1, I1, E1) :: aλ.τ, (K2, I2, E2) :: aλ.τ ∈ C○ then
K1 = K2, I1 = I2 and E1 = E2. We use C○ for the set of configurations.
○	ˆ	ˆ	○	○
An abstract state is a partial function S : Labn → ℘(Labn) × C . We use £
for the set of abstract states.
Using a standard notation for partial functions, an abstract state S○ can be
alternatively described by a set of pairs:   ◦	◦ {(Γ○, (M○, C○))| S○(Γ○) =
Γ ∈dom(S )
(M○, C○)}. The information (Γ○, (M○, C○)) associated to Γ○ provides the set of abstract membrane labels M○ and the configuration C○.
In order to compare approximations in terms of precision, we assume two partial orders on configurations C○ (denoted by ±C) and on abstract states £○ (denoted by ±○). The approximation orders can be defined in a standard way, based on set inclusion and reasoning component-wise and point-wise. We also consider the corresponding least upper bounds (l.u.b.), denoted by HC and H○.
We can now explain the representation of an abstract system with causes in terms of an abstract state. The relation is formally represented by the translation function
○	ˆ	˜	○
an abstract system with causes P˜○ w.r.t. an abstract membrane Δ○ (representing the enclosing membrane). The function uses, in turn, a translation function on processes with causes t○ : P˜roc → C○ that returns a configuration.



Table 4
Translation Functions for Abstract Systems and Processes with Causes.

It is immediate to define a corresponding function that relates systems with causes and abstract states, giving the abstract state that is the best approximation.

We define an abstraction function αSys : S˜ys → £○ s.t. for P˜
t○(@, P˜•).
∈ S˜ys, αS˜ys(P˜) = 

Abstract LTS. The abstract causal semantics is given in terms of the causal tran-
k;H
sition relation ——→○ among abstract states. The abstract transitions are obtained
by introducing for abstract states inference rules that model the possible mate, bud and drip interactions between membranes. To obtain a more precise approxima-

tion of the possible interactions (specifically in the case of mate), we introduce an additional piece of information, formalised by a relation between process labels in the set of incompatibility relations I○ ⊆ ℘(Labr × Labr ). The pair (λ, μ) says that the two sequential processes aλ.τ and bμ.σ can never occur in parallel on the same membrane, during any possible execution. The information on incompatible pairs is exploited in the abstract version of rule mate to determine the set of sequential processes with causes that may be associated to the membrane resulting from the fusion of two membranes.
For the abstract semantics, we introduce the following auxiliary operators:


d	d

◦	◦	◦	◦  ◦	◦	◦	◦	◦

parent : S
× LˆabM → ℘(LˆabM) s.t. parent(S , Δ )= {Γ
| S (Γ )= (M
,C ) and Δ
∈ M }



(K, I, E) dC C◦ = {(K, I, E) d σ˜ | σ˜ ∈ C◦}
(K, I, E) dS (M◦,S◦)= .◦ ◦	◦ {(Δ◦, (∅, (K, I, E) dC C◦))| S◦(Δ◦)= (M◦,C◦)}
The first operator returns the set of membrane labels reported as possible parents of an abstract membrane Δ○ in an abstract state S○. The second operator returns the subset of a configuration C○ containing the sequential process with causes that are compatible with a process label λ according to an incompatibility relation R○. Finally, the last operators dC and dS propagate the causal information given by a triple (K, I, E) ∈ K^ to configurations and to the set of configurations associated to a set of abstract membrane labels M○ in an abstract state S○.

In the abstract inference rules, we write R○ ▶ S○
k;H
S○ to denote a transition

1 ——→○ 2
from the abstract state S○ to the abstract state S○, assuming that R○ ∈ I○ is
the incompatibility relation. We focus on the abstract version of the inference rule
(Matec) that is presented in Tab. 5. The rules (Bud○) and (Drip○) are similarly
c	c
derived from their concrete versions.
The Rule (Mate○) models the fusion of two membranes (Δ○ and Γ○) that may
c	λ◦	μ◦
synchronise on actions maten  and maten . This requires that: (i) the abstract
membranes Δ○ and Γ○ are reported as possible siblings (with common parent repre- sented by membrane Φ○); (ii) the configurations C○ and C○, describing the processes
1	2
associated to Δ○ and Γ○, contain the mate and comate actions, resp.. The abstract
reaction step is described by a cause name and by a set of immediate causes com- puted as in the concrete case.
The resulting abstract state enriches abstract state S○ with information report- ing the effects of the possible fusion of the two membranes. The membrane that represents the mate of the two membranes is described by an abstract membrane label Ψ○, obtained by approximating mate(Δ○, Γ○) according to its depth. The membrane label Ψ○ is added as a possible child of the common parent of the two membranes Δ○ and Γ○ (i.e. Φ○). Further, we need to introduce information on the possible children of the membrane Ψ○ and on the set of processes that may be asso- ciated to the membrane Ψ○. More precisely, the abstract membrane Ψ○ acquires all the possible child membranes of membranes Δ○ and Γ○. The processes with causes associated to Ψ○ are described by the configuration C○ that contains a set of se- quential processes with causes inherited from the configurations of the membranes




Table 5
Rule (Mate◦) of the Abstract Causal Semantics.

Δ○ and Γ○. Such a configuration contains the translation of the continuation of the mate and of the comate actions. In addition, it contains the processes with causes
that may run in parallel with action mateλ◦	μ◦	○
n  (resp. maten ) associated to Δ (resp. to
Γ○). In both cases, the set of processes is computed from the corresponding config-
uration (C○ and C○, resp.), by exploiting the information on incompatible pairs of
1	2
process labels given by relation R○. Finally, the cause name k related to the mate
and the corresponding external and internal causes (k+ and k−) are propagated as in the concrete case.
The abstract causal semantics of a system P is defined as an abstract LTS,

obtained by transitive closure from the abstract state α
sition relation —→
S˜ys
(P•). The abstract tran-

is derived by applying the abstract inference rules w.r.t. the
incompatibility relation rel○(P•) provided by the function rel○ : Sys○ → I○, pre- sented in Tab. 6. The definition relies on two related functions rel○ : Proc○ → I○ and rel○ : Act → I○. The incompatibility relation is extracted by analysing the syntax of abstract labelled system P• and guarantees that the property expressed by incompatible pairs of process labels holds for P and for all derivatives of P . In the following, we indicate with L˜T S○(P ) the abstract LTS of system P .
Causal Analysis. The analysis provides an over-approximation of all derivatives of a system with causes, together with a description of the possible causal depen- dencies among reaction steps. This information is derived from the abstract causal semantics describing the approximate behaviour of a system. More precisely, the result of the analysis gives an abstract state and a set of causal dependencies be-



rel◦(o)= ∅	rel◦(0) = ∅
rel◦(Q◦|Q◦)= rel◦(Q◦) ∪ rel◦(Q◦)	rel◦(σ|τ )= rel◦(σ) ∪ rel◦(τ )
1  2	1	2
rel◦(σQQ◦¢Γ◦ )= rel◦(Q◦) ∪ rel◦(σ)	rel◦(aλ.σ)= rel◦(a) ∪ rel◦(σ) ∪ {(λ, λ)}∪ {(λ, μ)|μ ∈ lab(σ)}

where rel◦(a)=	∅	if a ∈ {maten, maten, budn},
rel◦(ρ) if a ∈ {budn(ρ), drip(ρ)}.

Table 6
Incompatibility Relation, where lab(σ) stands for the set of process labels occurring in σ.

tween cause names. The causal dependencies are formally described by relations in the set of causality relations defined as D○ = ℘(K× K). A pair (k, h) shows that a reaction step associated to the abstract cause name k may causally depend on a reaction step associated to h. The set of all the causes associated to a reaction step can be obtained by transitive closure of the immediate causal relation.
Definition 4.2 We define a function A○ : Sys → £○ × D○ such that for P ∈ Sys

with L˜T S○(P ) = (X○, —→○ ,α 
S˜ys

(P•)), A○(P ) = (H○ ◦
S○, closure({(k, h) | h ∈

It can be shown that the analysis is a safe approximation of the causal behaviour. Intuitively, each derivative of the initial system is safely approximated by the ab- stract state and each causal dependency arising in the causal semantics is captured by the abstract causal dependencies.
We show the application of the analysis to the examples introduced in Sect. 3, assuming that the depth parameter is d = 3.
Example 4.3 We consider the system commented in Example 3.2,
P  = mateν Qmateμ |mateζQ¢Θ ◦ mateβQ¢Φ¢Δ ◦ mateδ Qmateλ Q¢Ψ¢Γ
n	m	o	o	n	m
The analysis of P1 is described by the causality relation D○ = {(h2, h1)} and by the abstract state S○ illustrated in Tab. 7. The table gives for each abstract membrane label the set of possible child membranes (on the left) and the configuration (on the right). For instance the third line must be read as: the membrane Γ may 4 include the membrane Ψ and it may be associated with the process with empty causes mateδ . The analysis result allows us to prove that the mate on n and the mate on o do not causally depend on any other reaction. This is established by the causality relation D○ by observing that the mate on n and on o are associated to cause names h1 and h3, respectively.
Example 4.4 We consider the system commented in Example 3.3,
P  = mateν |budλ (ρ )Qbudμ Q¢Θ ◦ budζQ¢Φ¢Δ ◦ mateδ |budβ(ρ )Q¢Γ

n	m	1	m	o
n	o	2



3 We use closure(D◦) to indicate the transitive closure of a relation D◦ ∈ D◦.
4 Recall that this is an over-approximation.


Table 7
Abstract State S◦ of Ex. 3.2, where h1 = (ν, δ), h2 = (μ, λ), and h3 = (ζ, β).

Table 8
Abstract State S◦ of Ex. 3.3, where h1 = (ν, δ), h2 = (ζ, β), h3 = (μ, λ).

The analysis result of P2 is described by the causality relation D○ = {(h2, h1)} and by the abstract state S○ depicted in Tab. 8. As in Ex. 4.3, the result allows us to prove that the mate reaction on n and bud reaction on m do not causally depend on any other reaction.
Extensions for Dealing with Replication
The framework proposed here is designed to handle the MBD calculus with repli- cation. To deal with replication, we need to introduce some modifications in the concrete and in the abstract semantics. First of all, we need a labelling technique to ensure the well-labelling condition of systems that is fundamental for generating fresh cause names. This can be simply obtained by adopting a partitioned set of process labels and by decorating the copies of a system, introduced by the unfolding of replication, with distinct process labels belonging to the same partition. More- over, to guarantee that the analysis can be computed in a finite number of steps, we need to apply abstraction techniques to process labels. In particular, the process labels can be simply approximated by considering the equivalence classes induced by the partition of the set of process labels. The abstraction of process labels induces, in turn, a corresponding abstraction on labelled process, on cause names and there- fore on process with causes. All the presented technical definitions can be suitably extended to this more general case.

Conclusions
We have presented an analysis based on Abstract Interpretation techniques for approximating the causal semantics proposed in [4] for the MBD fragment of Brane Calculus [6]. Our analysis can be used to statically verify causality properties of MBD systems and could therefore help to understand the causal relationships among membranes interactions. Specifically, the analysis can be applied to show that a reaction step does not depend on another one. In this paper we have applied the analysis to simple MBD systems that represent critical situations for environment causality, as explained in [4].
In future work, we plan to extend our causal analysis to the full Brane calculus [6]. Moreover, we would like to investigate the causal relations occurring among events in biological pathways, such as the ones presented in [5,22].

References
R. Barbuti, G. Caravagna, A. Maggiolo-Schettini, P. Milazzo, and G. Pardini. The calculus of looping sequences. In Proc. of SFM’08, LNCS 5016, 387–423, Springer, 2008.
C. Bodei. Control Flow Analysis for Beta-binders with and without Static Compartments. In Theoretical Computer Science 410(33-34): 3110-3127, Elsevier, 2009.
C. Bodei and L. Brodo. Brane Calculi Systems: A Static Preview of their Possible Behaviour. In Proc. of Membrane Computing and Biologically Inspired Process Calculi (MeCBIC’11), CoRR abs/1108.3429, 2011.
N. Busi. Towards a Causal Semantics for Brane Calculi. In What is it About Government that Americans Dislike, pp. 1945–1965, University Press, 2007.
N. Busi and C. Zandron Modeling and analysis of biological processes by mem(brane) calculi and systems. In Proc. of the Winter Simulation Conference (WSC’06), pp. 1646–1655, 2006.
L. Cardelli. Brane calculi - interactions of biological membranes. In Proc. of Computational Methods in Systems Biology (CMSB’04), LNCS 3082, pp. 257–280, 2005.
P. Cousot and R. Cousot. Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints. In Proc. Fourth ACM Symp. Principles of Programming Languages (POPL’77), pp. 238–252, 1977.
P. Degano and C. Priami. Non Interleaving Semantics for Mobile Processes. In Theoretical Computer Science 216(1-2): 237-270, 1999.
V. Danos and C. Laneve. Graphs for core molecular biology. In Proc. of Computational Methods in Systems Biology (CMSB’03), LNCS 2602, pp. 34–46, 2003, Springer.
R. Gori and F. Levi. A New Occurrence Counting Analysis for BioAmbients. Proc. of Asian Symposium on Programming Languages and Systems (APLAS’05), LNCS 3780, pp. 381-400, 2005.
R. Gori and F. Levi. An Analysis for Proving Temporal Properties of Biological Systems. Proc. of Asian Symposium on Programming Languages and Systems (APLAS’06), LNCS 4279, pp. 234–252, 2006.
R. Gori and F. Levi. Abstract interpretation based verification of temporal properties for BioAmbients,
Information and Computation(8): 869-921, 2010.
M.L. Guerriero and D. Prandi and C. Priami and P. Quaglia. Process Calculi Abstractions for Biology.
In Algorithmic Bioprocesses Natural Computing Series, pp 463-486, Springer, 2009
M.L. Guerriero and C. Priami. Causality and Concurrency in Beta-binders. In TR-01- 2006 The Microsoft Research - University of Trento Centre for Computational and Systems Biology, 2006.
C. Laneve and F. Tarissan. A Simple Calculus for Proteins and Cells, In Proc. of BioConcur’03, ENTCS 171 (2), pp. 139-154, 2007.

H. R. Nielson, F. Nielson and H. Pilegaard. Spatial Analysis of BioAmbients. LNCS 69-83 In Proc. of Static Analysis Symposium (SAS’04), LNCS 3148, pp. 69–83, Springer, 2004.
F. Nielson, H. Riis Nielson, C. Priami, and D. Schuch da Rosa. Control Flow Analysis for BioAmbients. In Proc. of BioConcur’03, ENTCS 180(3), pp. 65–79, Elsevier, 2007.
H. Pilegaard, F. Nielson, H. Riis Nielson. Context Dependent Analysis of BioAmbients. In Proc. of Emerging Aspects of Abstract Interpretation, 2006.
H. Pilegaard, F. Nielson, H. Riis Nielson. Pathway analysis for BioAmbients. In The Journal of Logic and Algebraic Programming 77(1-2): 92-130, 2008.
C. Priami and P. Quaglia. Beta binders for biological interactions. In Proc. of Computational Methods in Systems Biology (CMSB’04), LNCS 3082, pp. 20–33, Springer, 2005.
A. Regev, E.M. Panina, W. Silverman, L. Cardelli, and E.Y. Shapiro. BioAmbients: An abstraction for biological compartments. In Theoretical Computer Science 325(1): 141-167, Elsevier, 2004.
A. Vitale and G. Mauri. Communication via Mobile Vesicles in Brane Calculi. ENTCS 171 (2) (2007), 187-196, Elsevier.
