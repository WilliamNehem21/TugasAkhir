Electronic Notes in Theoretical Computer Science 46 (2001)
URL: http://www.elsevier.nl/locate/entcs/volume46.html 32 pages


Digital Straightness

Azriel Rosenfeld 1
Center for Automation Research, University of Maryland College Park, Maryland, USA
Reinhard Klette 2
CITR, University of Auckland, Tamaki Campus Auckland, New Zealand


Abstract
A digital arc is called ‘straight’ if it is the digitization of a straight line segment. Since the concept of digital straightness was introduced in the mid-1970’s, dozens of papers on the subject have appeared; many characterizations of digital straight lines have been formulated, and many algorithms for determining whether a digital arc is straight have been defined. This paper reviews the literature on digital straightness and discusses its relationship to other concepts of geometry, the theory of words, and number theory.


Introduction
The computer representation of lines and curves has been an active subject of research for nearly half a century [3,4,5,14]. Related work even earlier on the theory of words [1] (specifically, on mechanical or Sturmian words) remained unnoticed in the pattern recognition community. This paper reviews the subject of digital straightness with respect to its interactions with other disciplines (many of which are listed in [44]), as well as its role within the pattern recognition literature itself.
We consider the digitization of rays
γα,β = {(x, αx + β):0 ≤ x < +∞}
in the set N2 = {(i, j): i, j ∈ N} of all grid points with non-negative integer coordinates in the plane. As a simplification we assume that 0 ≤ α ≤ 1; this

1 Email: ar@cfar.umd.edu
2 Email: r.klette@auckland.ac.nz
◯c 2001 Published by Elsevier Science B. V. Open access under CC BY-NC-ND license.
1




3	2	1

4	0

5	6	7

Fig. 1. Segment of a digital ray, defined by grid-intersection digitization (as calcu- lated by the Bresenham algorithm [6]).

is possible due to the symmetry of the grid. Such a ray generates a sequence of intersection points ρ0, ρ1, ρ2,... of γα,β with the vertical grid lines at n  0. Let (n, In) Z2 be the grid point nearest to ρn. (If there are two nearest grid points, we take the upper one.) Formally,
Iα,β = {(n, In): n ≥ 0 ∧ In = [αn + β + 0.5♩} ,
and iα,β = iα,β(0)iα,β(1)iα,β(2) ... is a digital ray with slope α and intercept
β, where differences between successive In’s define chain codes:


iα,β
(n) = In+1
— In
=	0,	if In = In+1
1,	if In = In+1 − 1
, for n ≥ 0 .


Code 0 is interpreted as a horizontal grid increment and 1 specifies a diagonal increment in the grid N2; see Fig. 1.
A finite or infinite 8-arc 3 is irreducible iff its set of grid points does not remain 8-connected after removing a point which is not an end point.
Theorem 1.1 (Rosenfeld 1974) A digital ray is an irreducible 8-arc.
Proof. A ray γα,β, with 0 α  1, intersects grid lines x = n, once each. Its intercepts with any two successive lines x = n and x = n+1 differ vertically by α; hence the digitizations of these successive intercepts also differ vertically by 1. Thus the successive grid points of the digital ray are 8-neighbors. Removing the grid point at any x = n would leave grid points at x = n  1 and x = n + 1 disconnected with respect to the 8-neighborhood.	✷
The digital ray iα,β is generated by ray γα,β. If β − β' is an integer then iα,β = iα,β' . Thus we may assume that intercepts are limited to 0 ≤ β ≤ 1 without loss of generality. Evidently i0,β = 000 ... and i1,β = 111 .. ..

3 If p = (x, y) is a grid point, an 8-neighbor of p is any grid point q = (i, j) with d∞(p, q) = max x  i , y  j = 1. An 8-arc is a finite or infinite sequence of grid points such that any point is an 8-neighbor of its predecessor in the sequence.


Theorem 1.2 (Bruckstein 1991) For irrational α, Iα,β uniquely determines both α and β. For rational α, Iα,β uniquely determines α, and β is determined up to an interval.
Proof. For arbitrary α, α', β, β', Iα,β = Iα',β' implies α = α' since otherwise the vertical distance between αx + β and α' + β' would become unbounded as x goes to infinity, i.e. the In-values would differ starting at some large enough n.
If α is irrational then the set of all vertical intercepts of αx + β modulo 1, x  0, is dense in [0, 1]. Therefore, for every ε > 0 there exist n0 and m0 such that
αn0 + β − [αn0 + β♩ < ε , 
αm0 + β − [αm0 + β♩ > 1 − ε , 
and changing β by ε would result in a change in Iα,β. Therefore, for irrational
α, Iα,β also uniquely determines β.
If α is rational then the set of all vertical intercepts of αx + β modulo 1, x  0, is finite, i.e. β is determined only up to an interval, and the length of the interval depends upon α.	✷
This theorem states that a digital ray iα,β always determines α uniquely. A digital ray is rational if it has a rational slope, and it is irrational if its slope is irrational. For a specification of the intercepts β see the discussion of
[29] in Section 5.
We use the alphabet A = 0, 1,..., 7 (or a subset of it) and a geometric interpretation of its elements as indicated in Fig. 1. Digital rays are (right) infinite words over 0, 1. We recall a few basic definitions from the theory of words [35,59]. A (finite) word over A is a finite sequence of elements of A. The length |u| of the word u = a1a2 ... an, ai  A, is the number n of letters ai in
u. The empty word ε has length zero. The set of all words defined on alphabet A is denoted by A٨. A word v is a factor of a word u iff there exist words v1, v2 such that u = v1vv2. A word v is a subword of a word u iff v = a1a2 ... an, ai ∈ A, and there exist v0, v1,..., vn ∈ A٨ such that u = v0a1v1a2 ... anvn .
Let X   A٨. The set of all inﬁnite words w = u0u1u2 .. ., with ui
X  ε , is denoted by Xω. For v  A٨ and w  Aω the concatenation vw is well defined, v is a preﬁx of vw and w is a suﬃx of vw. A finite word v is a factor of an infinite word w if w = uvw1.
An integer k  1 isa period of a word u = a1a2 ... an, ai  A, if ai = ai+k for i = 1,...,n  k. The smallest period of u is called the period of u. An infinite word w  Aω is periodic if it is of the form w = vω, for some non- empty word v  A٨. A word w  Aω is eventually periodic if it is of the form w = uvω, for u  A٨ and a non-empty word v  A٨. A word w  Aω is aperiodic if it is not eventually periodic.
It has been known since [13]that grid-intersection digitization of rays γα,β produces periodic digital rays if the slope α is rational, and aperiodic finite sequences if it is irrational:

“When a slope is an irreducible rational fraction, the string is periodic, and the length of a period is the denominator of the fraction. For example, one period of the string for the straight line with slope 2/5 can be expressed as 01010, 00101, 10010, 01001, or 10100. Which of these periods is chosen is not important, because the bounds of the period can be placed anywhere.”
Theorem 1.3 (Brons 1974) Rational digital rays are periodic and irrational digital rays are aperiodic.
If v is the shortest word such that w = vω then v is called the basic segment of w and v is the period of w. [13]specifies an algorithm for calculating the basic segment of any rational digital ray, for β = 0. For example, the slope 2/5 does not specify a basic segment uniquely, but a rational slope α together with an intercept β do. [26] specifies an algorithm for calculating the basic segment of an arbitrary rational digital ray, using α and β as inputs.
This paper is structured as follows: Section 2 reviews alternative defini- tions of digital rays or digital straight lines, and specifies digitized lines by distances between tangential lines. Self-similarity studies in the context of pattern recognition are reviewed in Section 3, and in the context of the theory of words in Section 4. Number-theoretical results are briefly listed in Section 5. A review of recognition algorithms for digital straight segments is presented in Section 6. Section 7 concludes the paper.

Alternative Definitions and Tangential Lines
An alternative way of defining a digital ray is as the boundary of either the upper or lower dichotomy of N2 defined by a ray separation. Formally, let
Uα,β = {(n, Un): n ≥ 0 ∧ Un = [αn + β|}	and
Lα,β = {(n, Ln): n ≥ 0 ∧ Ln = [αn + β♩}
and uα,β(n)= Un+1 −Un and lα,β(n)= Ln+1 −Ln for n ≥ 0. The chain code sequence uα,β is the upper digital ray, and the chain code sequence lα,β is the lower digital ray generated by γα,β. The slope specifies rational and irrational lower or upper digital straight lines, which are always irreducible 8-arcs in N2. Lα,β = Iα,β−0.5, i.e. any lower digital ray is also a digital ray, and vice versa. If αn + β is not an integer then Un = Ln + 1. Otherwise, Un = Ln; the digital rays uα,β and lα,β will differ in this case, and γα,β has an integral point at n. If γα,β has no integral points, then uα,β = iα,β−0.5 = lα,β. If γα,β has integral points and α is rational then there exists β' such that Uα,β = Iα,β' . Finally, if γα,β has integral points and α is irrational, then Uα,β and Lα,β differ by subsequences of length two only. For practical purposes, the classes of
digital rays, upper digital rays, and lower digital rays coincide.
Arithmetic geometry, as established in [49], specifies digital hyperplanes by double Diophantine inequalities, allowing a uniform approach to studying n-dimensional digital hyperplanes. In the two-dimensional case, let a, b be



3	2	1

4	0

5	6	7

Fig. 2. Segments of lower and upper digital 4-rays, which follow boundaries of the upper and lower dichotomies, which are linearly separated by a ray.
relatively prime integers, i.e. gcd(a, b) = 1, let c, d be integers, and let
Da,b,c,d = {(i, j) ∈ Z2 : c ≤ ai − bj < c + d} .
The set Da,b,c,d is called a digital bar with slope a/b, lower bound c and arith- metical width d.
Theorem 2.1 (Reveill´es 1991) Any set of grid points Da,b,c,max{|a|,|b|} coincides with a set of grid points assigned to a digital straight line, and conversely, for any digital straight line there are parameters a, b, c such that the set of grid points assigned to this digital straight line coincides with Da,b,c,max{|a|,|b|}.
This theorem also means that d = max a , b  specifies an irreducible 8-arc. 4 Due to our general assumption of considering only lines with slope 0 ≤ a/b ≤ 1, we have 0 ≤ a ≤ b and d = b. All grid points in Da,b,c,b are between two lines ax − by = c and ax − by = c + b − 1, i.e. y = αx + β and y = αx + β − (1 − 1 ), for α = a/b and β = −c/b. These two lines define a pair of tangential lines with respect to the given set Da,b,c,b of grid points (this proves Corollary 2.3).
Iα,β, Uα,β and Lα,β can also be used to introduce digital 4-rays [44], which are 4-arcs:

◦
α,β
(n) =	0,	if In = In+1
02,	if In = In+1 − 1

where a horizontal increment in N2 is encoded by 0, and 2 specifies a vertical

increment. Analogously we define upper digital 4-rays u◦
(n) and lower digital

4-rays l◦ (n), all for n ≥ 0. See Fig. 2 for an illustration of upper and lower

digital 4-rays. We still have i◦
= 000 .. ., but i◦
= 020202 .. .. Again, the

classes of digital 4-rays, upper digital 4-rays, and lower digital 4-rays coincide for practical purposes.
Digital 4-rays are actually just images under a morphism defined on digital rays. A morphism or substitution ϕ : A٨	B٨ is a function with ϕ(xy) = ϕ(x)ϕ(y), for all x, y	A٨. A morphism is uniquely determined by its values for all letters in the alphabet. A morphism is nonerasing if a letter is always mapped into a nonempty word. A nonerasing morphism ϕ : A٨ → B٨ defines a

4  Digital straight lines are called naive lines in arithmetic geometry.


function, also called a morphism, from Aω to Bω by ϕ(a(0)a(1) ... a(n) .. .)= 
ϕ(a(0))ϕ(a(1))	ϕ(a(n))	Digital 4-rays may also be defined by specifying
a morphism on A٨
ϕ : 0 '→ 0
1 '→ 02
mapping digital rays into digital 4-rays. 5 The theory of words studies mor- phisms on infinite words.
Definition 2.2 A digital straight segment (DSS for short) is a geometrically interpreted non-empty factor of a digital ray, and a digital 4-straight segment (4-DSS for short) is a non-empty factor of a digital 4-ray, using the appropriate geometric interpretation of its chain code.
A digital straight segment u connects two grid points p = (mp, np),q = (mq, nq) ∈ N2, mp < mq, iff the geometric interpretation of u = u(1) ... u(mq − mp + 1) specifies a sequence of horizontal and diagonal steps which leads from p to q.  For an 8-arc u = u(1)u(2) ... u(n) of length n let G(u) =
{p0, p1,..., pn−1} be the assigned set of grid points such that p0 = (0, 0) and u connects p0 with pn−1 via a sequence of horizontal and diagonal steps which passes through p1,..., pn−2. An early algorithm for generating a digital straight segment connecting two arbitrary grid points p and q was published in [11]. Theorem 2.1 implies:
Corollary 2.3 A word u   0, 1 ٨ is a DSS iff the set G(u) of assigned grid points lies on or between two parallel lines having a distance less than 1, measured in the y-axis direction. 6
The geometric characterization of digital 4-straight segments has been dis- cussed in [42], based on results on the ‘nearest support below or above’ of a digital straight segment in [30]. There are two possible diagonals in grid squares; see Fig. 3. The main diagonal for a pair of parallel lines is the one which maximizes the dot product with the normal to the lines. The main diagonal distance between two parallel lines is measured in the direction of the main diagonal. The following theorem specifies an unproven statement in [42]:
Theorem 2.4 A ﬁnite 4-arc u ∈ {0, 2}٨ is a digital 4-straight segment iff its assigned set of grid points G(u) is betw√een or on a pair of parallel lines having
a main diagonal distance of less than	2.
Proof. Let µ be a mapping from	0, 1, 2 ٨ into	0, 1, 2 ٨ defined by replac- ing any factor 02 by 1.	Following the definition of digital 4-rays, a word

5  As another example, rule X studied in [44] for digital 4-rays is actually a morphism
ϕX : 0 '→ 2
2 '→ 0

6  This is already shown in [15] using the chord property of Theorem 3.2; see also [30,36].



Fig. 3. Two parallel lines l1 and l2 contain a 4-arc between them; a < √2 is the main diagonal distance between the lines. Vector n is the normal to l1, and v is the unit vector along the main diagonal.
u  0, 1, 2 ٨ is a 4-DSS iff µ(u) is a DSS. We also use Corollary 2.3 which characterizes DSSs by distance 1 (in the y-direction) between a pair of tan- gential lines. The main diagonal for 4-arcs u  0, 2 ٨ makes angle 135◦ with the x-axis.
As√sume a pair γ1, γ2 of parallel lines having main diagonal distance less
٨
than	2. Consider a finite 4-arc u ∈ {0, 2} with an assigned set of grid points
G(u) between or on this pair of parallel lines. If the slope α of these lines is either 0 or 1, then the 4-arc is either u = 0n or u = (02)n, i.e. a 4-straight segment. Now assume 0 < α < 1. The word µ(u) allows the lower line (say γ2) to move into line ζ, closer to γ1 by a parallel shift, such that γ1,ζ are a pair of tangential lines for G(µ(u)), and the distance between these two lines in the y-direction is less than 1, i.e. µ(u) is a DSS and u is a 4-DSS.
Now assume a 4-arc u	0, 2 ٨ such that the minimum diagonal distance in direction 135◦ between a pair of parallel lines is greater than or equal to 2, i.e. u contains at least one subword 22. Then µ(u) is not a DSS, and u not a 4-DSS.		✷
The two parallel lines at minimum diagonal distance specify a pair of tangential lines with respect to a given digital 4-straight segment. Note that a finite 4-arc is also a finite 8-arc, but being√between a pair of parallel lines
having a main diagonal distance of less than	2 does not mean that this 4-arc
is also a digital straight segment because it is not an irreducible 8-arc. A pair of tangential lines with respect to a set Da,b,c,b of grid points has intercepts
which differ by 0 < 1 − 1 < 1, i.e. this pair of parallel lines also has a main
diagonal distance of less than	2.
Finally we briefly review another option for specifying digital straightness. Besides sequences of grid points we may also consider sequences of grid squares for defining digitized rays or straight lines [17]. Assume a uniform mosaic in the Euclidean plane defined by square isothetic closed cells C having grid points p  Z2 as their center points and edges of length 1. A family of cells is edge connected iff the set of center points of these cells is 4-connected. 7

7 To be precise, these cells should be called 2-cells, because their vertices are called 0-cells
and their edges are 1-cells in the theory of cellular complexes [58].



Fig. 4. A cellular straight segment.
Definition 2.5 A cellular straight line is a family F of cells C defined by a straight line γ: every cell in F has a non-empty intersection with γ, and γ is contained in the union F of all cells contained in F . A cellular straight segment is defined by a straight line segment γ in the same way.
See Fig. 4 for an illustration of cellular straightness. The distance between a pair of parallel lines is measured in the direction of the normal to the lines. Let S be a bounded set in the plane and θ a direction with 0 ≤ θ < 2π. The width wθ(S) is defined to be the minimum distance between a pair of parallel lines such that S is completely between them, and θ is the direction of the normal to them. Let R2×2 be a square formed by four cells.
Theorem 2.6 (Fam and Sklansky 1977) An edge-connected family F of cells is cellularly straight iff there exists a direction θ with wθ(  F ) ≤ wθ(R2×2).
The width wθ( F ) as specified in this theorem is related to a pair of tangential lines with respect to the given family of cells. Altogether we have stated three theorems specifying pairs of tangential lines for digital straight segments, digital 4-segments, and cellular straight segments.

Self-Similarity Studies in Pattern Recognition
Self-similarity properties of digital rays or digital straight segments have been studied in pattern recognition with a major focus on geometric characteriza- tions and efficient algorithms. Chain code sequences are finite or (right or two-sided) infinite words over A = 0, 1,..., 7 , and the interpretations of the elements in A are the directions to the eight neighbors of a grid point (in a systematic, e.g. clockwise, order). An initial formulation of necessary conditions for self-similarity of digital straight lines (defined by generalizing the concept of digital rays to two-sided infinite words) is given in [9]:
“To summarize, we thus have the following three specific properties which all chains of straight lines must possess [4]:
(F1) at most two types of elements can be present, and these can differ only by unity, modulo eight;
(F2) one of the two element values always occurs singly;

(F3) successive occurrences of the element occurring singly are as uniformly spaced as possible.”
These properties (actually listed as (1), (2) and (3) in the historic source) were illustrated by examples and based on heuristic insights. The imprecise criterion (F3) is not suitable for a formal proof, as stated, e.g., in [18].
proposed grammars for chain code generation of rational digital rays based on criteria (F1), (F2) and (F3). A publication in the same year, [14], provided a first formal characterization of digital straight lines which also allowed a further specification of property (F3).
Definition 3.1 A set G of grid points satisfies the chord property iff for any two different points p and q of G, and any point r on the (real) line segment pq between p and q, there exists a grid point t ∈ G such that d∞(r, t) = max(|xr − xt|, |yr − yt|) < 1.
Theorem 3.2 (Rosenfeld 1974) A ﬁnite irreducible 8-arc u  0, 1 ٨ is a digital straight segment iff its assigned set of grid points G(u) satisﬁes the chord property.
Proof. First we show that G(u) satisfies the chord property if u is a digital straight segment (Theorem 1 in [14]). Let p, q be points of G(u). The line segment pq intersects grid lines x = n that lie between p and q. Thus for any
point r = (x, y) of pq, we have |n − x| ≤ 1 for some point (n, m) ∈ G(u). It
suffices to show that whenever pq crosses a line x = n, the point t = (n, m) of G(u) on that line lies at vertical distance y m < 1 above or below the crossing point r = (n, y).
Let u be a nonempty factor of a digitization of ray γα,β, i.e. neither p or
q can be > 1 vertically above or ≥ 1 vertically below γα,β. Let r = (n, y) be
ar ≥ 0 vertically above γα,β (or br ≥ 0 vertically below γα,β). It follows that
0 ≤ ar ≤ 1 (or 0 ≤ br < 1). If r is above t, then γα,β intersects x = n at a
vertical distance 0 ≤ at < 1 above (or at) t, and we have y − m ≤ ar + at < 1. If r is below t, then γα,β intersects x = n at a vertical distance 0 ≤ bt ≤ 1
below (or at) t, and we have m − y ≤ br + bt < 1.
Now we show that u is a digital straight segment if G(u) satisfies the chord property. The following proof is due to [33], which uses the Transversal Theorem by Santalo´ [2]:
Consider a finite family F of parallel straight segments in the plane R2. If every three segments in F have a common transversal, then there is a transversal common to all the segments in F.
A transversal of a straight segment σ in R2 is a straight line in R2 which intersects σ but is not incident with σ.
Assume that the 8-arc u connects grid point (n, y0) with grid point (n + m, ym), with m > 0 and ym  y0  m. In case ym  y0 = m we have a diagonal, and the chord property implies that G(u) contains exactly all grid points along this diagonal, i.e. u is a digital straight segment.

Assume ym − y0 ≤ m− 1 from now on. Let Ti,0 ≤ i ≤ m, be the set of all grid points in G(u) on grid line x = i. The chord property implies that Ti /= ∅ for 0 ≤ i ≤ m, and that for any i, 0 ≤ i ≤ m, there are two integers li and ui such that Ti is the set of all grid points (n + i, y) with li  y  ui. We assign a (real) straight segment L(p) to any grid point p = (x, y):
L(p)= {(x, v):	y − 0.5 < v ≤ y + 0.5} .
Let Li be the union of all straight segments L(p) of all grid points p in Ti, for 0 ≤ i ≤ m. We have
Li = {(n + i, v):	li − 0.5 < v ≤ ui + 0.5} ,
and these straight segments form a family  = L0,..., Lm which satisfies the precondition of the Transversal Theorem:
Clearly L0,..., Lm are parallel straight segments. Consider three segments
Li, Lj, Lk with 0 ≤ i < j < k ≤ m. Consider two grid points p ∈ Li and
q ∈ Lk. The straight segment pq intersects the grid line x = j in a point
r = (j, yr). By the chord property, there is a grid point t = (xt, yt) ∈ G(u) such that d∞(r, t) < 1, i.e. t is also on the grid line x = j, i.e. xt = j. Let s be the midpoint of the straight segment rt, and let ε = yt  yr /2. Consider a straight line γ parallel to pq and passing through point s. Then γ intersects the grid line x = i at xp + ε or xp − ε, and x = k at xq + ε or xq − ε. Because ε < 0.5 it follows that γ intersects L(p), L(t) and L(q), i.e. it intersects Li, Lj, and Lk.
By the Transversal Theorem it follows that there is a straight line γ in- tersecting all the segments Li, with 0  i  m. It remains to show that such a line generates all the grid points in G(u) following the grid-intersection digitization definition.
Each set Ti contains a grid point pi such that γ intersects L(pi). We have p0 = (n, y0) and pm = (n + m, ym). Let q0 and qm be the intersection points of γ with L(p0) and L(pm), respectively, i.e. q0 = (n, y0 + λ) and qm = (n + m, ym + µ), with −0.5 < λ, µ ≤ 0.5. The horizontal distance between q0 and qm is m, and the vertical distance is |y0 + λ − ym − µ| ≤ y0  ym + λ  µ   m  1+ λ  µ < m. The straight segment q0qm forms an angle smaller than 45◦ with the horizontal line, i.e. its grid-intersection digitization is specified by intersections with the vertical grid lines x = n + i, 0 ≤ i ≤ m.
The grid-intersection digitization of q0qm generates the sequence of grid points p0, p1, ..., pm, and all these grid points lie in the given set G(u) because γ is a transversal of all segments Li, 0 ≤ i ≤ m. Because u is an irreducible 8-arc it follows that G(u) only contains the points p0, p1, ..., pm.	✷
There are infinitely many irreducible two-sided infinite 8-arcs that satisfy the chord property without being digital straight lines, for example 0ω10ω, or (in general) ‘sparse’ occurrences of 1’s in 0ω. The above theorem was used in

to derive the following necessary conditions for (the chain code sequences of) digital straight segments: 8
(R1) “The runs have at most two directions, differing by 45◦, and for one of these directions, the run length must be 1.
(R2) The runs can have only two lengths, which are consecutive integers. (R3) One of the runs can occur only once at a time.
(R4) ..., for the run length that occurs in runs, these runs can themselves have only two lengths, which are consecutive integers; and so on.”
These properties (actually listed as 1), 2), 3) and 4) in the historic source) still do not allow a formulation of sufficient conditions for the characterization of a digital straight segment, but they specify (F3) by a recursive argument on run lengths.
The property of evenness (i.e. ‘on a digital straight segment the digital slope must be the same everywhere’), as discussed in [32], is equivalent to the chord property (see Section 4 regarding balanced words which specify evenness).
It was later proved [15]that point sequences generated by the Brons algo- rithm possess the chord property, and [16,18] that the formal language L of digital straight segments is context-sensitive. This implies that linear-bounded or cellular automata may be specified for the recognition of digital straight segments using ‘string rewriting rules’. A result in the theory of words [46] says that the complement {0, 1}٨  L of the set of all digital straight segments is a context-free language.
Criteria (F1–F3) are defined in a precise way in [20]following the recursion idea in (R1–R4). To prepare for this definition, we first introduce the following concepts:
Let s = (s(i))i∈I be a finite or infinite word over N, for an index interval I  Z. A letter (number) k is singular in s iff it appears in s, and for all i  I, if s(i)= k then s(i  1) = k and s(i + 1) = k, if i  1 and i + 1 are in I. A letter k is nonsingular in s iff it appears in s and is not singular in s. A word s is reducible iff it contains no singular letter, or any factor of s containing only nonsingular letters is of finite length. Assume s to be reducible, and let R(s) be
the length of s, if s is finite and contains no singular letter, or
the word that results from s by replacing all factors of nonsingular letters in s, which are between two singular letters in s, by their run lengths, and by deleting all other letters in s, or
the letter a if s = aω.
A recursive application of this reduction operation R produces a sequence of words: s0 = s, and sn+1 = R(sn), for all or just a finite sequence of n ∈ N.

8  A run is a maximum-length factor an, for a ∈ A.


The definition as used in [20]is as follows (formulation following [39]):
Definition 3.3 A chain code sequence c of a two-sided infinite 8-arc satisfies the DSL property iff c0 = c and cn+1 = R(cn) are reducible words, for n ∈ N; and any sequence cn, n ≥ 0, satisfies the following two conditions:
(L1) There are at most two different letters a and b in cn, and if there are two, then |a — b| = 1 (counting modulo 8 in the case of c0).
(L2) If there are two different letters in cn, then at least one of them is singular in cn.
Following this definition for the case of digital straight lines, it was possible [20] to derive a definition of a digital straight segment property that allowed the formulation of a necessary and sufficient condition for such chain code sequences. Possible finite words of nonsingular letters at both ends of a finite word require special attention. Let l(s) and r(s) denote the run lengths of nonsingular letters to the left of the first singular letter, or to the right of the last singular letter, respectively, for a finite word s. The following definition is a citation from [39]:
Definition 3.4 A finite chain code sequence c satisfies the DSS property iff c0 = c satisfies conditions (L1) and (L2), and any nonempty sequence cn = R(cn−1), for n ≥ 1, satisfies (L1) and (L2) and the following two conditions:
(S1) If cn contains only one letter a, or two different letters a and a + 1, then
l(cn−1) ≤ a + 1 and r(cn−1) ≤ a + 1.
(S2) If cn contains two different letters a and a + 1, and a is nonsingular in cn, then if l(cn−1)= a + 1 then cn starts with a, and if r(cn−1)= a + 1 then cn ends with a.
[26] proves that an algorithm which accepts exactly those 8-arcs satisfy- ing the DSS property recognizes just the chain code sequences of all finite, irreducible 8-arcs that have the chord property. This concluded in 1982 the process of specifying Freeman’s informal constraints (F1-F3), providing an important set of constraints for the design of efficient DSS recognition pro- cedures. We cite (without proof at this stage, but see the continued-fraction discussion later on):
Theorem 3.5 (Wu 1982) A ﬁnite 8-arc is a digital straight segment iff its chain code sequence satisﬁes the DSS property.
Note that [26] does not contain a theorem but statements about an algo- rithm specified by a flow-chart. However, it is easily seen that this algorithm is actually an implementation of the DSS property as cited above, i.e. [26] actually contains a proof of Theorem 3.5, covering the generation of straight lines having rational or irrational slopes.
[26] also considers the case of infinite code sequences and shows that any finite factor of a two-sided infinite chain code sequence c satisfies the DSS prop-

erty iff there is exactly one straight line with slope α and intercept β defining
c by grid-intersection digitization. Based on this result, [39]concluded:
Theorem 3.6 (Hu¨bler 1989) A two-sided inﬁnite 8-arc is a digital straight line iff its chain code sequence satisﬁes the DSL property.
Wu’s proof of Theorem 3.5 shows the equivalence of the chord property and the DSS property for irreducible finite 8-arcs; this proof is based on number theory and consists of many case discussions. Researchers therefore tried to find shorter, ‘more elegant’ proofs of Wu’s theorem.
Material for a concise proof of Wu’s theorem based on properties of Farey series was published in 1984 in [29], again in the form of an algorithm 9 . Proofs of Wu’s theorem based on continued fractions were published in 1991 in two independent papers [44,51]; see also [53]. The use of continued fractions for modelling digital rays was already discussed in 1974 in [13].
Assume a rational digital straight line with slope a0/a1, with integers a0 > a1 > 1. The rational number a0/a1 can be represented as a finite continued fraction,
a0	1
= [q ,q ,...,q ]=	,

a	1	2
n	q + 	1	

1	1	q2+
1
. . .
	1	
qn−1+  1 
n

with integer coefficients qi > 0, for 1	i	n. The Euclidean algorithm can
be used to derive such continued fractions:

a0
= q1
1
a1
= q2
2
+ a2
a1
+ a3
a2
with	0 < a2
a1
with	0 < a3
a2
< 1 ,

< 1 ,

.	,

an−2 an−1
= qn−1
 an 
+
an−1
 an 
with	0 <		< 1 , an−1

an−1
an
= qn
with	an+1
=0 .

Irrational numbers can be represented by infinite continued fractions.
Continued fractions are used in [44,51]to characterize digital straight lines. Related results in number theory [40] have been of use in these studies. We review the related definitions and results as given by K. Voss in [53].
We consider a straight line passing (w.l.o.g.) through the origin and having rational slope a/b, with gcd(a, b) = 1. The characteristic triangle of such a line is given by the vertices (0, 0), (a, 0), (0, b). The concatenation T1 ⊗ T2 of two characteristic triangles T1 and T2 is a characteristic triangle defined by

9 The DSL property is called ‘linearity conditions’ in this article. See also our discussion of [29] in Section 5.


the slope a/b with a = 1 (a1 + a2) and b = 1 (b1 + b2), for an integer c such
c	c
that gcd(a, b)= 1.
The numerical value of a continued fraction can also be expressed in the form of multiples of qn,
a0 = [q ,q ,...,q ]= αnqn + βn ,

1	2	n
1
γnqn
+ δn

where αn, βn, γn, δn are defined by the coefficients q1, q2,..., qn−1. For n =1 we have α1δ1 — β1γ1 = —1 . For n ≥ 1 we have


[q ,q ,...,q 
,q	]= αn+1qn+1 + βn+1
= αn (qnqn+1 + 1)+ βnqn+1 ,

1	2	n−1
n+1
γn+1
qn+1
+ δn+1
γn (qn
qn+1
+ 1)+ δn
qn+1



and thus
αn+1qn+1 + βn+1
γn+1qn+1 + δn+1
= (αnqn + βn) qn+1 + αn .
(γnqn + δn) qn+1 + γn

This means that the slope a0
1
= [q1, q2,..., qn] of a characteristic triangle can

be expressed as
(αn−1qn−1 + βn−1) qn + αn−1
(γn−1qn−1 + δn−1) qn + γn−1
= (αn−1qn−1 + βn−1) (qn — 1) + αn−1 (qn−1 + 1)+ βn−1 .
(γn−1qn−1 + δn−1) (qn — 1) + γn−1 (qn−1 + 1)+ δn−1
Therefore, the characteristic triangle defined by slope a0/a1 is equal to the result of repeated concatenation ⊗ of one characteristic triangle with slope [q1, q2,..., qn−1 + 1] and qn  1 triangles with slope [q1, q2,..., qn−1], which may be expressed by the formula
[q1, q2,..., qn]= [q1, q2,..., qn−1 + 1] ⊗ (qn — 1) · [q1, q2,..., qn−1] .
This allows us to prove Freeman’s conjecture and Rosenfeld’s refined hypoth- esis as follows:
[q1, q2, ..., qn]= (qn−1 · [q1, q2, ..., qn−2] ⊗ [q1, q2, ..., qn−2 + 1]) 
⊗(qn — 1) · ((qn−1 — 1) · [q1, q2, ..., qn−2] ⊗ [q1, q2, ..., qn−2 + 1]) .
The isolated code number is [q1, q2,..., qn−2 + 1], and [q1, q2,..., qn−2] is the other (‘non-isolated’) code number of a straight line passing through the origin and having rational slope. The run lengths qn−1 and qn−1 — 1 differ by 1.
Note that this proof covers only digital straight segments that are factors of rational rays, and this is actually the class of all DSSs; see Corollary 4.4.

Periodicity Studies in the Theory of Words
Self-similarity studies have a long history in number theory and astronomy. The theory of words [35,59] is a more recent discipline which also contains many interesting results on self-similarity, often with a special focus on irra- tional straight rays. Rational digital rays are specific periodic infinite words, and irrational digital rays are aperiodic infinite words which are studied under the name of Sturmian words. 10 This section gives basic definitions and results as presented in [59]. We also cite a few proofs for purposes of illustration.
Let w be a finite or infinite word over A = {0, 1}. Let F (w) be the set of all factors of w, and let Fn(w) be the set of all factors of w of length n. The complexity function of w is defined by
P (w, n) = card(Fn(w)), for n ≥ 0 .
P (w, 0) = 1 (the empty word is always a factor), and P (w, 1) is the number of letters appearing in w. For an infinite word w, P (w, n)  P (w, n + 1) since every factor of length n can be extended to the right by at least one letter. Fur- thermore, Fm+n(w) ⊆ Fm(w)Fn(w) implies P (w, m + n) ≤ P (w, m)P (w, n).
Consider an infinite periodic word w with period k. Then P (w, n)  k, for all n  0, i.e. the complexity of a periodic word is limited by its period. The following theorem from [12] shows that the inverse conclusion is true as well, and generalizes these statements to eventually periodic words. Rational digital rays are periodic infinite words as stated in Theorem 1.3. For example, 10ω is not periodic but is eventually periodic, and it is not a rational straight ray either.
Theorem 4.1 (Coven and Hedlund 1973) The following conditions on an inﬁnite word w are equivalent:
w is eventually periodic,
P (w, n)= P (w, n + 1) for some n ≥ 0 ,
P (w, n) < n + k	1 for some n	1, where k is the number of letters appearing in w,
P (w, n) is bounded.
Proof. (i) ⇒ (iv): Let w = uvω. Then P (w, n) ≤ |uv|, for all n ≥ 0.
(iv) ⇒ (iii): Let P (w, n) < p for all n ≥ 0. If k is the number of letters appearing in w then P (w, 1) = k < p, i.e. p ≥ k + 1. Then P (w, p— k + 1) < p.
(iii) ⇒ (ii): Assume (ii) is not true, i.e. P (w, m — 1) < P (w, m), for all m ≥ 0; then we would have n + k— 1 > P (w, n) ≥ P (w, 1) + n— 1= k + n— 1, for some n ≥ 1, which is impossible.

10 Named after the mathematician C.F. Sturm (1803-1855). We follow [59] with respect to the definition of Sturmian words. Some authors also used the name ‘Sturmian words’ for lower digital straight lines; see, for example, [52].


(ii) ⇒ (i): Consider the factor graph Gn(w) which is a labelled graph with vertex set Fn(w) and edge set E = {(bu, a, ua) : a, b ∈ A ∧ bua ∈ Fn+1(w)}. There is at least one edge starting at each vertex in Gn(w) because every factor of length n is a prefix of a factor of length n + 1. Since P (w, n) = P (w, n + 1) there is actually exactly one edge leaving each vertex, i.e. any strongly connected component of Gn(w) is a simple circuit. The word w is the label of an infinite path passing through Gn(w), i.e. it will loop trough a fixed circuit after some prefix, i.e. its labels are eventually periodic.    ✷
A sequence (vn)n≥0 of finite words over an alphabet A converges to an infinite word w if every prefix of w is a prefix of all but a finite number of words vn. For example, the sequence 0n1n converges to 0ω.
Let f0 = 0, f1 = 01 and fn+1 = fnfn−1, for n ≥ 2. The sequence of lengths
|fn| is the Fibonacci sequence F1 = 1, F2 = 2, F3 = 3, F4 = 5,... The sequence (fn)n≥0 converges to the Fibonacci word
f = 0100101001001010010100100101001001...
and, for example, 01001 is a prefix of fn for n	4. The Fibonacci word can also be defined by a morphism: for
ϕ : 0 '→ 01
1 '→ 0
we have f = ϕω(0).
Definition 4.2 A Sturmian word is an infinite word w = a1a2a3 ... over a binary alphabet A that has exactly n + 1 factors of length n, for every n ≥ 0.

Any suffix of a Sturmian word is again a Sturmian word. The Fibonacci word is Sturmian. The Thue-Morse word t = µω(0) = 0110100110010110 .. ., with
µ : 0 '→ 01
1 '→ 10
is another example of a Sturmian word.
A Sturmian word w is defined by P (w, n)= n + 1, for n  0. According to Theorem 4.1, any aperiodic word has complexity P (w, n)  n + 1, for n  0,
i.e. Sturmian words have minimal complexity P (w, n) among aperiodic infinite words. The value P (w, 1) = 2 shows that w is defined on a binary alphabet, here A = {0, 1}.
A right special factor of an infinite word w is a finite word u such that u0 and u1 are factors of w. A word w is Sturmian iff it has exactly one right special factor of each length n  0. The empty word is always the special right factor of length zero. For the Fibonacci word f we have: 11 is not a factor, so 0 is the only right special factor of length one; 000 and 011 are not factors, so 10 is the only factor of length two; etc.

The height h(w) ofa word w A٨ is the number of letters equal to 1 in w. Given two words v and w of the same height, δ(v, w)= h(v) h(w) is their balance. A set X  A٨ of words is balanced iff v = w implies δ(v, w)  1 for all pairs of words v, w  X. 11 An infinite word w is balanced if its set of factors is balanced.
The slope of a nonempty word w is the number π(w)= h(w)/|w|. We have
π(uv)=  |u| π(u)+  |v| π(v) .
|uv|	|uv|
It is possible to show [59] that an infinite word w is balanced iff, for all non- empty factors u, v of w, we have


1
|π(u) — π(v)| < |u| +
1
.
|v|

This shows that the sequence of slopes is a Cauchy sequence, i.e. a balanced infinite word possesses a uniquely defined slope based on the slopes of its finite prefixes. Let w be an infinite balanced word, and let wn be the prefix of length n of w, for n ≥ 1. Then the sequence (π(wn))n≥1 converges for n →∞ . For example, for the Fibonacci word f we have h(fn)√= Fn−2 and |fn| = Fn, and
Fn−2/Fn converges to π(f )= 1/τ 2 with τ = (1 +	5)/2.
Digital rays, i.e. infinite words, are defined for rational or irrational slope by using the slope of the generating ray. The following theorem from [1] was actually formulated for mechanical words, which is what digital rays are called in the theory of words.
Theorem 4.3 (Morse and Hedlund 1940) Let w be a digital ray with slope α. Then w is balanced of slope α.
Proof. Let w be a lower digital ray. The height of a factor u = w(n) ... w(n+
p — 1) is the number h(u)= [α(n + p)+ β♩— [αn + β♩; thus
α · |u|— 1 < h(u) < α · |u| +1 ,	i.e. [α · |u|♩ ≤ h(u) ≤ 1+ [α · |u|♩ .
This shows that h(u) takes only two consecutive values when u ranges over w
factors of fixed length, i.e. w is balanced. Moreover, it follows that
h(u)	1
— α = |π(u) — α| <	,
|u|	|u|
and thus π(u)	α for u	, and α is the slope of w as defined for balanced words.			✷
Note that the inequality π(u)	α < 1/ u also provides a criterion for evaluating the accuracy of an estimated slope based on a finite digital straight

11 [32] calls non-balanced words uneven and shows that an infinite 8-arc has the chord property iff it has no uneven finite factors.


segment. An alternative method of evaluating the accuracy of an estimated slope will be discussed at the end of Section 5. This inequality π(u)  α < 1/ u also allows us to state that ‘rational digital rays are sufficient for studies in pattern recognition’:
Corollary 4.4 Any digital straight segment is a factor of a rational digital ray.
Proof. An interval in [0, 1) of width 1/|u|, containing an irrational number
α, also contains rational numbers α' satisfying |π(u) — α'| < 1/|u|.	✷
We conclude this section by citing the main theorem on irrational digital rays:
Theorem 4.5 (Morse and Hedlund 1940) The following conditions are equiv- alent for an inﬁnite word w:
w is Sturmian,
w is balanced and aperiodic,
w is an irrational digital ray.
Note that a balanced infinite word is not always a digital ray when the slope is rational. For example, 01ω is not a digital ray. It has slope 1, but l1,β = 1ω. Only (purely) periodic infinite balanced words are rational digital rays.
Counts and Spirographs
We have already cited several studies in which number theory has contributed to studies on digital straightness. The following theorem from [48]is from the theory of words:
Theorem 5.1 (Mignosi 1991) The number of balanced words of length n is
n
1+	(n +1 — i)φ(i) ,
i=1
where φ is Euler’s totient function.
A finite word u is balanced iff it is a factor of some irrational digital ray [59]. Due to Corollary 4.4 it follows that any finite balanced word u is also a factor of some rational digital ray, i.e. Theorem 5.1 actually specifies the number of digital straight segments of length n starting at the origin (0, 0). The technical report [52]contains an alternative proof of Theorem 5.1 and also an algorithm for random generation of lower digital straight segments of length n.
[41] considers the same set of segments u of lower digital rays, defined by
0  x  n, 0  α  1, and 0  β < 1, i.e. the first grid point in the set G(u) of assigned grid points is (0, 0), and G(u) contains exactly n + 1 grid points.

In [41] it is shown that the number of such digital straight segments passing through the origin is
(1)	· n	+ O n · log n .
3	2
The Euler function φ(i) tends to 6i/π2, i.e. the formula in Theorem 5.1 may be transformed into Equ. (1). Suggestions about using Farey series for modelling digitized lines were already made in [7,13,16,31]. A Farey series F (n) of order n ≥ 1 is defined as the ascending series of irreducible fractions between 0 and 1 whose denominators do not exceed n, i.e. all rational numbers a0/a1, with
0  a0  a1  n and a0 and a1 relatively prime, sorted in increasing order. For example, for n = 5 we have the sequence


0 1 1 1 2
, , , , ,
1 5 4 3 5
1 3 2
, , ,
2 5 3
3 4 1
, , 
4 5 1

In [16]it is shown that digital straight segments of length n, passing through the origin, are in one-one correspondence with the nth Farey series. This is actually already a proof of Equ. (1).
There is an obvious one-one correspondence between the set of digital line segments starting at (0, 0) and the set of linear partitions of an n n orthogonal grid, where a linear partition of a set S is defined to be any partition of S into sets X and S X by a line γ such that the sets X and S X belong to different halfplanes defined by line γ. Of course, any digital straight segment consisting of n + 1 points and beginning at (0, 0) defines exactly one linear partition, but there are also further linear partitions of the n  n grid which do not correspond to digital rays starting at (0, 0).
The number of linear partitions of an m  n orthogonal grid is considered in [43]. There it is shown that the number of such partitions is equal to

(2)
3
π2 · m · n	+ O(m · n · log n) + O(m · n · log log n)

where it is assumed that m  n. This result can be understood as the ‘ca- pacity’ of a digital picture of size m  n with respect to digital rays, i.e., it shows how many digital rays can be discriminated by digitization on an m  n orthogonal grid.
Both asymptotic formulas, for the number of digital straight segments and for the number of linear partitions, can be derived by using well-known formu- las for average values of number-theoretical functions and Riemann-Stieltjes integration.
Dorst and Duin [29]developed a theory of spirographs for establishing links between digital rays and number theory (Farey series, continued fractions). Figure 5 shows on the right a ray y = αx, with 0 < α < 1, passing through grid point (0, 0) and intersecting grid line x = 0 in the interval [0, 1), and a few parallel shifts of this ray. For any grid line x = n there is exactly one grid point (n, yn) such that ray y = αx + βn passes through (n, yn) and intersects grid



D 








4 2
3 1
0
0	1	2	3	4	5	6
Fig. 5. Five intersection points (left) for grid lines n = 0, 1,..., 4, mapped into a spirograph (right).
line x = 0 in the interval [0, 1). Spirographs 12 are diagrams which visualize and model the distribution of these intersection points in [0, 1). See Fig. 5 on the right: Assume a circle with perimeter 1 and mark a first vertex on this circle representing the intersection point for grid line x = 0, i.e. β0 = 0. In clockwise orientation, proceed from the first vertex to a second vertex on this circle at radial distance α representing the intersection point for grid line x = 1, etc.
Definition 5.2 A spirograph S(α, n) is a set of n points on a circle with unit perimeter, marked 0, 1,...,n — 1, and defined by parallel rays with slope α intersecting grid lines x = 0,x = 1,...,x = n — 1 at grid point positions.
For simplicity we identify these points in S(α, n) with their marks. If α is rational then there is only a finite number of such rays, creating a finite set of intersection points in [0, 1), with a periodic repetition of these intersection points for n to infinity, and thus only a bounded number of marked points on the spirograph, for any n. The topology of a spirograph S(α, n) is the order modulo n of the marked points on the circumference of the circle.
The intervals between intersection points in [0, 1), for α rational, specify intervals of intercepts β such that y = αx + β leads to the same lower digital ray for all values β within the same interval (see Theorem 1.2).
The distance Dα(i, j) between two points i, j  S(α, n), 0  i, j < n, is the length of the arc extending anticlockwise from i to j:
Dα(i, j)= (i — j)α — [(i — j)α♩ .
The smallest distance Dright to the right (clockwise) of point 0 ∈ S(α, n) is Dright = min{Dα(i, 0) : i /= 0 Λ i ∈ S(α, n)}. Let iright = min{k /= 0 : k ∈ S(α, n) Λ Dα(k, 0) = Dright} be the point determining this minimum distance. Similarly, let Dleft = min{Dα(0, i) : i /= 0 Λ i ∈ S(α, n) Λ Dα(0, i) /= 0} and ileft = max{k /=0: k ∈ S(α, n) Λ Dα(0, k)= Dleft}.

12 The name is that of a children’s toy for drawing curves.



Emax
1




0 0	1	
Fig. 6. Right: the maximum error for β is 1 or 0.5, respectively for α = 0 or α = 0.5. Left: maximum error of β as a function of estimated α-value, for n = 6 [29].


Now we are prepared to state a few results from [29] using their theory of spirographs. We select those related to the possible accuracy of estimating the slope and the intercept of a generating ray as a function of the length of the given digital straight segment.
By definition, Dright = αiright  αiright and Dleft = αileft  αileft . There- fore the bounds on α that preserve the topology of the spirograph are

[αiright♩ ≤ α < [αileft♩ ,
iright	ileft

and these bounds for α are the best rational approximations for α with frac- tions whose denominator does not exceed n — 1. The proof of this fact can be based on the property that [αiright♩/iright and [αileft♩ , with iright and ileft obtained from spirograph S(α, n), are two successive fractions in the Farey series F (n — 1).
The intercept estimation problem is illustrated on the right in Fig. 6. Every pair of values of α, 0  α < 1, and n, n   1, allows an interval of β-values,
0  β < 1 of possible intercepts such that the given lower straight line segment of length n is a digitization of ray αx + β. The width of this interval is defined to be the maximal possible error Emax(α, n). The calculation of error diagrams, see the left of Fig. 6 for an example, is possible based on spirograph studies. The maximum error Emax(α, n) is defined by the maximum arc length in spirograph S(α, n):

Theorem 5.3 (Dorst and Duin 1984) We have Emax(α, n) = Dright + Dleft, where the distances Dright and Dleft are calculated in spirograph S(α, n + 1).

The formula Dright + Dleft = [αileft|— [αiright♩ + α(iright — ileft), with values from S(α, n + 1), allows a simple calculation of the errors Emax(α, n). If α is a fraction a/b in the Farey series F (n), then Emax(a/b, n)= 1/b.

Algorithms for DSS Recognition
By now there have been many publications on (efficient) DSS recognition al- gorithms. The computational problem is as follows: The input is a sequence of chain codes i(0), i(1),... with i(k)  0, 1 , k  0. An off-line DSS recog- nition algorithm decides for finite words u  0, 1 ٨ whether u is a digital straight segment or not. An on-line DSS recognition algorithm reads successive chain codes i(0), i(1),... and specifies the maximum length k  0 such that i(0), i(1),..., i(k) is a digital straight segment, and i(0), i(1),..., i(k), i(k + 1) is not. A recognition algorithm has linear run time behavior (a linear algo- rithm for short), i.e. it runs in O(n) time, if it performs at most O(|u|) basic computation steps for any finite input word u ∈ {0, 1}٨. Analogous defini- tions can be given for 4-DSS recognition algorithms. An on-line algorithm is linear if it uses in the average a constant number of operations for any incom- ing chain code symbol. Linear off-line algorithms for DSS recognition based on the DSS property (as defined in Definition 3.4) were published in 1981 in [20] and in 1982 in [26]. 13 A linear off-line algorithm for cellular straight segment recognition, based on convex hull construction, is briefly sketched in [24]. Two linear on-line algorithms for DSS recognition were published in 1982 by Creutzburg, Hu¨bler and Wedler [21,22]; one of them is an on-line version of the off-line algorithm published in [20]. Algorithms for polygonal approxima- tions of digitized curves, not directly related to models of digital straightness (see, for example, [10,19,23]), will not be reviewed here.
The general problem of decomposing a 4- or 8-arc into a sequence of 4- DSSs or DSSs, which includes 4-DSS or DSS recognition as a subproblem, is discussed in, e.g. [42,50,54,57]. Obviously, linear on-line DSS recognition algorithms will support linear decomposition algorithms, but linear off-line algorithms will only allow quadratic run-time behavior.
The design of a DSS recognition algorithm may be based on a unique characterization of digital straight segments, such as
(C1) the original definition of a DSS based on grid-intersection digitization,
(C2) a characterization by pairs of tangential lines (special cases: (C2.1a) Theorem 2.1, (C2.1b) Corollary 4, (C2.2) Theorem 2.4, and (C2.3) The- orem 2.6,
(C3) the equivalence with the chord property, see Theorem 3.2, or
(C4) the DSS property, see Theorem 3.5,
and further characterizations have also been used for the design of DSS recog- nition algorithms. Approaches following (C4) are normally called linguistic techniques. For an early version of a linguistic DSS recognition algorithm see [16] (however, this was not yet based on the correct DSS property, which became known later).

13 [32] discusses a flaw in the Wu algorithm.


CC0 = 11011101110111011110111011101111011101110
11110111011101110111101110111011110111
s(0) = 0,	n(0) = 1,	l(0) = 2,	r(0) = 3
CC1 = 33343343343334334
s(1) = 4,	n(1) = 3,	l(1) = 3,	r(1) = 0
CC2 = 2232
s(2) = 3,	n(2) = 2,	l(2) = 2,	r(2) = 1
CC3 = ε
Fig. 7. Input example for algorithm CHW 1982a [21,22].
We review in detail one of the historically first linear on-line algorithms for DSS recognition as published in 1982 in [21,22] which utilizes the DSS property (C4).

The input sequence is CC = i(0)i(1)i(2) ... i(n), i(k) ∈ A = {0, 1,..., 7} for 0 ≤ k ≤ n. Let CC0 = CC, and, if CCk−1 /= ε (the empty word) then CCk = R(CCk−1) where R denotes the reduction operation specified above for defining the DSL and DSS properties in Section 3. Let l(k) and r(k) be the run lengths of nonsingular letters to the left of the first singular letter in CCk, or to the right of the last singular letter; see Definition 3.4. Let s(k) be the singular element in CCk if there is one, otherwise let s(k)= —1, and let n(k) be the second element in CCk if there is one, otherwise let n(k) = —1. See Fig. 7 for an example. The input chain code CC0 is now represented by a syntactic code, which is
0
1
for the example in Fig. 7. A syntactic code consists of integers in four columns s, n, l, r. The DSS property (see Definition 3.4) specifies constraints on these integers such that the given word CC = i(0)i(1)i(2) ... i(n) may be classified as being a DSS or not. Before starting to read a word CC, all values in columns s and n are initialized to be  1, and all values in columns l and r are initialized to be 0. Now assume that the syntactic code has already been calculated for an input sequence of length greater than or equal to zero, and assume that letter d is read as the next chain code of the input sequence. Let N(k, a, b) be true iff a  b = 1 for k   1, and a  b (mod8) = 1 for k = 0. The algorithm uses different tests which follow straightforwardly from the DSS property:
T1(k, d): n(k)= —1 Λ s(k)= —1 Λ
[k > 0 → l(k — 1) ≤ d +1 Λ r(k — 1) ≤ d + 1]
T2(k, d): n(k) /= —1 Λ s(k)= —1 Λ T2.1(k, d) Λ T2.2(k, d)

T2.1(k, d): d = n(k)
T2.2(k, d): N(k, d, n(k)) Λ [k > 0 →
{l(k — 1) ≤ n(k) ∨ (l(k — 1) = d Λ l(k) /= 0}Λ 
{r(k — 1) ≤ n(k) ∨ (r(k — 1) = d Λ r(k) /= 0}]
T3(k, d): d = s(k) Λ r(k)=0 Λ
l(k)=1 Λ s(k + 1) = —1 Λ n(k + 1) ≤ 1 Λ [k > 0 →
l(k — 1) ≤ s(k) Λ {r(k — 1) ≤ s(k) ∨ r(k — 1) = n(k)}]
T4(k, d): d = n(k) Λ [s(k + 1) = —1 → r(k) ≤ n(k + 1)] Λ
[s(k + 1) /= —1 → r(k)+1 ≤ n(k + 1) ∨
{r(k)+1 = s(k + 1) Λ r(k + 1) /= 0}]
T5(k, d): d = s(k) Λ r(k) /=0 
The algorithm is specified in Fig. 8. The algorithm ‘inserts’ every new element d into the syntactic code as long as the incoming chain code sequence satisfies the DSS property.
Algorithm CHW 1982a runs in linear time: CCk+1   1/2  CCk , for k  0 and any incoming DSS chain code. There is only one loop in this algorithm, in the case that a new element needs to be added to one of the CCk’s. Therefore, the run time t(n), for inputs of length n = CC0 , is on the order


O (|CC0| + |CC1| + ... + |CClog n|)= O
log2 n n


2k
k=0
= O (n) .



100	for m =0 until k	2 do r(m)= s(m + 1)
if k =0 then r(k	1) = d
return “no”
Fig. 8. DSS recognition algorithm CHW 1982a based on syntactic codes.


u7
1	l7
0
2

0	1	2	3	4	5	6	7
Fig. 9. Digitization polygon for u = 0100100.

It also follows that the number of relevant integers in the syntactic code is limited by O (log n), because the index m of the last non-empty word CCm satisfies m ≤ log2n. A stronger inequality is
n ≥ 1	1 √	√ m

(	+	2)(1 +
2	4
2)	— 2 .

For example, n = 2377 ... 5739 only requires reduced chain code words CCk for k  m = 9. Of course, representing a digital straight segment by the two end points of one of its possible preimages is an even shorter representation. A discussion of the time efficiency of DSS recognition algorithms may also be accompanied by a discussion of their memory requirements.
We conclude this section with brief reviews of some other DSS recognition algorithms (many more have been published which will be not reviewed here due to space limitations, e.g. [25,34,37,38,45,47,55,56]). The intention is a polygonalization of 8-arcs by segmenting them into maximum-length DSS’s.

The second linear on-line algorithm, published in [21,22], uses the possible preimages, see approach (C1) above: as long as the union of all possible preimages is non-empty we may continue reading the next chain code element of the given 8-arc.
As in the proof of Theorem 3.2 we consider a family of parallel segments (x, lx)(x, ux) of grid lines x = 0,x = 1,...,x = n for a given digital straight segment u ∈ {0, 1}٨ of length n connecting grid point p0 = (0, 0) with grid point pn, passing through grid points p1,..., pn−1. However, this time we assume that 0.5 lx  ux < n+0.5 specify segments of grid lines x = 0,x = 1,...,x = n, being the union of all intercepts of these grid lines with possible preimages (i.e. straight line segments) of u with respect to grid intersection digitization, i.e. x — 0.5 ≤ lx ≤ ux < x + 0.5. A segment (x, lx)(x, ux) may degenerate into a single point, i.e. lx = ux, and the segment (x, lx)(x, ux) must not contain the grid point px, for x = 0, 1,..., n; see Fig. 9 for an example. The point sequence (0, u0), (1, u1),..., (n, un), (n, ln), (n  1, ln−1),..., (0, l0) defines the digitization polygon of straight line segment u. Because a segment

(x, lx)(x, ux) may degenerate into a single point, the digitization polygon need not be simple. Note that the segments (0, u0)(n, ln) and (0, l0)(n, un) are contained in this digitization polygon.
Now assume that u is extended by another chain code a   0, 1 . The 8-arc ua is a DSS iff it possesses a digitization polygon. The linear on-line algorithm CHW 1982b, specified in detail in [21,22], uses the digitization polygon of u to update this for ua if possible, or returns “no” otherwise if there is no digitization polygon for ua. The algorithm was also published in [36].

[27] also specifies a linguistic technique (i.e. type (C4)) for segmenting an 8-arc into DSSs. As in CHW 1982a, the algorithm S 1983 involves only integer operations following the syntactic rules specified in the DSS property. A parser checks the rules related to one layer k, and (eventually) activates a parser for the next layer k + 1. Several parsers at different levels may be active simultaneously.
This specifies a different point of view on the approach implemented in CHW 1982a, which may support a more obvious implementation of the syn- tactic rules specified in the DSS property.
The maximum number m of layers is bounded by 4.785 log10n + 1.672, and this maximum is taken on in cases of digital rays having slope a/b where a and b are consecutive Fibonacci numbers [8], but the average depth is less than half of this value [8].
[27] reports on experiments comparing polygons, whose vertices are the break points of segmented 8-arcs, with polygonal preimages used to obtain these 8-arcs by grid-intersection digitization (Bresenham algorithm). It states an ambiguity in detecting maximum-length DDSs defined by these break points.

[30] has been cited already above with respect to its material on pairs of tangential lines for 8-arcs. It specifies a DSS recognition algorithm which follows approach (C2.1b). Assume an 8-arc u ∈ {0, 1}٨ of length n con- necting grid point p0 = (0, 0) with grid point pn, passing through grid points p1,..., pn−1. Critical points form a minimal subset of G(u)= p0, p1,..., pn defining a pair of tangential lines having a minimum distance in the y-axis direction (and G(u) between or on these lines). An 8-arc u is a DSS iff this distance between such a pair of tangential lines is less than 1; see Corollary 4.
W.l.o.g. assume that u possesses four critical points q1, q2, r1, r2 ∈ G(u) where q1q2 specifies a nearest support below and r1r2 a nearest support above

u. Then u is uniquely specified either by n and q1, q2, or by n and r1, r2. [30] describes a linear off-line (!) algorithm for calculating the nearest support below and/or above. A final test (Corollary 4) decides whether or not u is a DSS.
This algorithm is also used to specify a linear off-line (!) algorithm for calculating the digitization polygon (see algorithm CHW 1982b). [30] also discusses the calculation of digitization polyhedra for digital straight segments in three-dimensional space.

[36] specifies three different linear on-line DSS recognition algorithms. The first one is a slightly improved version of algorithm CHW 1982b. The sec- ond one also follows approach (C1); however, this time the grid-intersection digitization definition is used to perform DSS recognition based on solving a separability problem for a monotone polygon.
Assume an 8-arc u ∈ {0, 1}٨ of length n connecting grid point p0 = (0, 0) with grid point pn, passing through grid points p1,..., pn−1. Let pk = (k, Ik), for k = 0, 1,..., n. The weak digitization polygon of u is defined by ver- tices (0, I0 + 0.5), (1, I1 + 0.5),..., (n, In + 0.5), (n, In — 0.5), (n — 1, In−1 —
0.5),..., (0, I0 0.5). The weak digitization polygon of an 8-arc u is monotonic in the x-direction. The separability problem is now as follows: The arc u is a DSS iff the upper polygonal chain (0, I0 + 0.5), (1, I1 + 0.5),..., (n, In + 0.5) of its weak digitization polygon may be separated from its lower polygonal chain (n, In  0.5), (n 1, In−1 0.5),..., (0, I0 0.5) by a straight line not inter- secting the upper or lower polygonal chain. [36] details a linear on-line algo- rithm for solving this separability problem for extended 8-arcs ua, a  0, 1 , based on a solution of the separability problem for u. Note that this sepa- rability problem may also be stated as a visibility problem (visibility of edge (0, I0 — 0.5)(0, I0 + 0.5) from edge (n, In — 0.5)(n, In + 0.5), or vice versa).

The third linear on-line DSS recognition algorithm proposed in [36]follows (C2.1b); it is similar to (and independent of the publication of) the linear off-line algorithm AK 1985. Algorithm CHS 1988b uses the critical points calculated for u to calculate updated critical points for the extended 8-arc ua, a  0, 1 , if possible, and returns “no” otherwise. The algorithm is quite short, allowing a quick implementation. [36]also contains a geometric analysis of possible or impossible locations of critical points. For example, if a critical point of word u is cancelled later on in an extended word uv, it cannot become a critical point again for extensions of uv.



[42] discusses the recognition of digital 4-straight segments (the boundaries of cellular complexes) following approach (C2.3). It specifies the calculation of a narrowest strip, defined by the nearest support below and above, and briefly sketches a linear on-line DSS recognition algorithm (see also the linear off-line algorithm AK 1985, and the linear on-line algorithm CHS 1988b, both for 8-arcs). Algorithm K 1990 is reported in greater detail in [57].

[50] discusses a linear off-line DSS recognition algorithm following the lin- guistic approach (C4). It starts with the linear off-line Wu algorithm [26]and corrects the flaw detected in [32]. The paper [50] also contains basic research on digital straightness.

A linear on-line DSS recognition algorithm is described in [54]which follows the (C2.1a) approach (note: their ‘naive line’ is identical to a digital straight line), i.e. it is based on an updated test of a double Diophantine equation which is basically similar to a test of whether the grid point set G(u) is in a narrowest strip (see algorithm K 1990) of arithmetical width max{|a|, |b|}.
Conclusions
A straight line seems to be a simple object. Our review (which is not yet complete) demonstrates that digital straight lines are actually a very chal- lenging subject, and many interesting results are known to date. Missing is still a comprehensive and comparative performance evaluation of the DSS recognition algorithms suggested so far in the literature. A statistical analysis of measured time complexities would also be of interest. The random DSS generation algorithm of [52]may be used for input data.
The segmentation of a (closed) 8-curve into maximum-length DSS’s de- pends upon the starting point and orientation of the traversal. It would be of interest to analyze the possible variations of these segmentations.
Acknowledgments: The authors thank Filippo Mignosi for informing us about [59], a forthcoming book on the theory of words.

References
M. Morse and G. A. Hedlund. Symbolic dynamics II: Sturmian sequences.
Amer. J. Math., 61:1–42, 1940.
L. A. Santalo´. Complemento a la nota: un teorema sˆobre conjuntos de paralelipipedos de artistas paralelas. Publ. Inst. Mat. Univ. Nac. Litoral, 2:49– 60, 1940.
J. Loeb. Communication theory of transmission of simple drawings. In
W. Jackson, editor, Communication Theory, pages 317–327. Butterworths, London, 1953.
H. Freeman. Techniques for the digital computer analysis of chain-encoded arbitrary plane curves. In Proc. Natl. Elect. Conf., volume 17, pages 421–432, 1961.
J. Bresenham. An incremental algorithm for digital plotting. In Proc. ACM Natl. Conf., 1963.
J. Bresenham. Algorithm for computer control of a digital plotter. IBM Systems J., 4:25–30, 1965.
U. C. Montanari. A method for obtaining skeletons using a quasi-Euclidean distance. J. ACM, 15:600-624, 1968.
D. E. Knuth. The Art of Computer Programming, Vol. 2, pages 309, 316–332. Addison-Wesley, Reading, Mass., 1969.
H. Freeman. Boundary encoding and processing. In B. S. Lipkin and
A. Rosenfeld, editors, Picture Processing and Psychopictorics, pages 241–263. Academic Press, New York, 1970.
G. U. Montanari. A note on minimal length polygonal approximation to a digitized contour. Comm. ACM, 13:41–47, 1970.
G. B. Reggiori. Digital computer transformations for irregular line drawings. Technical Report 403-22, New York University, April 1972.
E. M. Coven and G. A. Hedlund. Sequences with minimal block growth. Math. Systems Theory, 7:138–153, 1973.
R. Brons. Linguistic methods for description of a straight line on a grid.
Computer Graphics Image Processing, 2:48–62, 1974.
A. Rosenfeld. Digital straight line segments. IEEE Trans. Computers, 23:1264–1269, 1974.
C. Arcelli and A. Massarotti. Regular arcs in digital contours. Computer Graphics Image Processing, 4:339–360, 1975.
J. Rothstein and C. Weiman. Parallel and sequential specification of a context sensitive language for straight line grids. Computer Graphics Image Processing, 5:106–124, 1976.


A. Fam and J. Sklansky. Cellularly straight images and the Hausdorff metric. In Proc. Conf. on Pattern Recognition and Image Processing, pages 242–247, 1977.
T. Pavlidis. Structural Pattern Recognition. Springer, New York, 1977.
J. Sklansky and V. Gonzalez. Fast polygonal approximation of digitized curves. Pattern Recognition, 12:327–331, 1980.
A. Hu¨bler, R. Klette, and K. Voss. Determination of the convex hull of a finite set of planar points within linear time. EIK, 17:121–140, 1981.
E. Creutzburg, A. Hu¨bler and V. Wedler. On-line Erkennung digitaler Geradensegmente in linearer Zeit. In Proc. GEOBILD’82, Wiss. Beitr¨age der FSU Jena, pages 48–65, 1982.
E. Creutzburg, A. Hu¨bler and V. Wedler. On-line recognition of digital straight line segments. In Proc. 2nd Intl. Conf. AI and Inf. Control Systems of Robots, Smolenice, Czechoslovakia, pages 42–46, 1982.
G. Dettori. An on-line algorithm for polygonal approximation of digitized plane curves. In Proc. Intl. Conf. on Pattern Recognition, pages 739–741, 1982.
C. E. Kim. On cellular straight line segments. Computer Graphics Image Processing, 18:369–391, 1982.
A. Rosenfeld and C. E. Kim. How a digital computer can tell whether a line is straight. American Mathematical Monthly, 89:230–235, 1982.
L. D. Wu. On the chain code of a line. IEEE Trans. Pattern Analysis and Machine Intelligence, 4:347–353, 1982.
S. Shlien. Segmentation of digital curves using linguistic techniques. Computer Vision, Graphics, Image Processing, 22:277-286, 1983.
T. A. Anderson and C. E. Kim. Representation of digital line segments and their preimages. In Proc. Intl. Conf. on Pattern Recognition, pages 501–504, 1984.
L. Dorst and R. P. W. Duin. Spirograph theory: A framework for calculations on digitized straight lines. IEEE Trans. Pattern Analysis and Machine Intelligence, 6:632–639, 1984.
T. A. Anderson and C. E. Kim. Representation of digital line segments and their preimages. Computer Vision, Graphics, Image Processing, 30:279–288, 1985.
H.-U. D¨ohler and P. Zamperoni. Compact contour codes for convex binary patterns. Signal Processing, 8: 23–39, 1985.
S. H. Y. Hung. On the straightness of digital arcs. IEEE Trans. Pattern Analysis and Machine Intelligence, 7:1264–1269, 1985.


C. Ronse. A simple proof of Rosenfeld’s characterization of digital straight line segments. Pattern Recognition Letters, 3:323–326, 1985.
R. Shoucri, R. Benesch, and S. Thomas. Note on the determination of a digital straight line from chain codes. Computer Vision, Graphics, and Image Processing, 29:133–139, 1985.
M. Lothaire (ed.). Combinatorics on Words, 2nd ed. Cambridge University Press, 1987.
E. Creutzburg, A. Hu¨bler and O. Sy´kora. Geometric methods for on-line recognition of digital straight segments. Computers and Artificial Intelligence, 7:253–276, 1988.
S. X. Li and M. H. Loew. Analysis and modeling of digitized straight-line segments. In Proc. 9th Intl. Conf. on Pattern Recognition, pages 294–296, 1988.
W. G. Kropatsch and H. Tockner. Detecting the straightness of digital curves in O(N ) steps. Computer Vision, Graphics, and Image Processing, 45:1–21, 1989.
A. Hu¨bler. Diskrete Geometrie fu¨r die digitale Bildverarbeitung. Habil.- Schrift, Friedrich-Schiller-Universita¨t Jena, 1989.
M. C. Irwin. Geometry of continued fractions. Amer. Math. Monthly, 96:696– 703, 1989.
J. Koplowitz, M. Lindenbaum, and A. Bruckstein. The number of digital straight lines on an N N grid. IEEE Trans. Information Theory, 36:192– 197, 1990.
V. A. Kovalevsky. New definition and fast recognition of digital straight segments and arcs. In Proc. Intl. Conf. on Pattern Recognition, pages 31– 34, 1990.
D. M. Acketa, J. D. Zˇuni´c. On the number of linear partitions of the (m, n)- grid. Information Processing Letters, 38:163–168, 1991.
A. M. Bruckstein. Self-similarity properties of digitized straight lines.
Contemp. Math., 119:1–20, 1991.
S. Chattopadhyay and P. P. Das. A new method of analysis for discrete straight lines. Pattern Recognition Letters, 12:747–755, 1991.
S. Dulucq and D. Gouyou-Beauchamps. Sur les facteurs des suites de Sturm.
Theoret. Comput. Sci., 71:381–400, 1991.
M. Lindenbaum and J. Koplowitz. A new parametrization of digital straight lines. IEEE Trans. Pattern Analysis and Machine Intelligence, 13:847–852, 1991.
F. Mignosi. On the number of factors of Sturmian words. Theoret. Comput. Sci., 82:71–84, 1991.


J.-P. Reveill`es. G´eom´etrie discr`ete, calcul en nombres entiers et algorithmique. Th`ese d’´etat, Univ. Louis Pasteur, Strasbourg, 1991.
A. W. M. Smeulders and L. Dorst. Decomposition of discrete curves into piecewise segments in linear time. Contemporary Math., 119:169–195, 1991.
K. Voss. Coding of digital straight lines by continued fractions. Comput. Artif. Intell., 10:75–80, 1991.
J. Berstel and M. Pocchiola. Random generation of finite Sturmian words. LIENS - 93 -8, D´epartement de Math´ematiques et d’Informatique, Ecole Normale Sup´erieure, LITP - Institute Blaise Pascal, 1993.
K. Voss. Discrete Images, Objects, and Functions in Zn. Springer, Berlin, 1993.
I. Debled-Rennesson and J.-P. Reveill´es. A linear algorithm for segmentation of digital curves. Intl. J. Pattern Recognition Artificial Intelligence, 9:635–662, 1995.
J. Yuan and C. Y. Suen. An optimal O(n) algorithm for identifying line segments from a sequence of chain codes. Pattern Recognition, 28:635–646, 1995.
J. Franc¸on, J.-M. Schramm, and M. Tajine. Recognizing arithmetic straight lines and planes. In Proc. DGCI, LNCS 1176, pages 141–150. Springer, Berlin, 1996.
R. Klette and B. Yip. The length of digital curves. Machine Graphics & Vision, 9:673–703, 2000 (extended version of: R. Klette, V. V. Kovalevsky,
B. Yip. Length estimation of digital curves. In Proc. Vision Geometry VIII,
SPIE 3811, pages 117–129).
R. Klette. Cell complexes through time. In Proc. Vision Geometry IX, SPIE 4117, pages 134–145, 2000.
M. Lothaire (ed.). Algebraic Combinatorics on Words. Cambridge University Press, to appear.
