Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 344 (2019) 101–118
www.elsevier.com/locate/entcs

Proper Multi-Type Display Calculi for Rough Algebras
Giuseppe Greco
Utrecht University - Utrecht, the Netherlands
Fei Liang
School of Philosophy and Social Development, Shandong University - Shandong, China
Krishna Manoorkar
Indian Institute of Technology - Kanpur, India
Alessandra Palmigiano
Delft University of Technology - Delft, the Netherlands University of Johannesburg - Johannesburg, South Africa

Abstract
In the present paper, we endow the logics of topological quasi Boolean algebras, topological quasi Boolean algebras 5, intermediate algebras of types 1-3, and pre-rough algebras with proper multi-type display calculi which are sound, complete, conservative, and enjoy cut elimination and subformula property. Our proposal builds on an algebraic analysis and applies the principles of the multi-type methodology in the design of display calculi.
Keywords: Rough sets, topological quasi Boolean algebras, topological quasi Boolean algebras 5,
pre-rough algebras, intermediate algebras, canonical extensions, multi-type calculi, proper display calculi.


Introduction
Rough algebras and related structures arise in tight connection with formal models of imperfect information [24], and have been investigated for more than twenty years using techniques from universal algebra and algebraic logic, giving rise to a

1 The research of the fourth author is supported by the NWO Vidi grant 016.138.314, the NWO Aspasia grant 015.008.054, and a Delft Technology Fellowship awarded in 2013.

https://doi.org/10.1016/j.entcs.2019.07.007
1571-0661/© 2019 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

rich theory which develops the algebraic semantics, duality, representation and proof theory of their associated logics (cf. e.g. [1,20,4,25,26]). In particular, sound and complete sequent calculi have been introduced for these logics in [25,26]. However, the cut rule in these calculi is not eliminable. Very recently, sequent calculi with cut elimination and a non-standard version of subformula property have been introduced in [22] for some of these logics, but not for the logic of the so-called intermediate algebras of type 3 (cf. [25], Definition 2.11). In these calculi, the subformula property is non-standard because each logical connective has four introduction rules, two of which are non-standard and introduce the given logical connective under the scope of negation.
In the present paper, we introduce a family of proper display calculi for the logics associated with the classes of ‘rough algebras’ 2 discussed in [25]; namely, topological quasi Boolean algebras (tqBa), topological quasi Boolean algebras 5 (tqBa5), intermediate algebras of types 1-3 (IA1, IA2, IA3), and pre-rough algebras (pra) (cf. Definition 2.1).
We apply the methodology of multi-type calculi, the main feature of which is the systematic use of notions and insights from algebraic logic, duality and representa- tion to solve problems in structural proof theory. Multi-type calculi are introduced in [10,8,9], motivated by [14,11], and have proven effective in endowing a wide range of diverse and differently motivated logical systems, spanning from basic lattice logic
[18] to inquisitive logic [12], with calculi for which soundness, completeness, con- servativity, cut elimination and subformula property are guaranteed uniformly by the general theory. This methodology has contributed to create an overarching en- vironment in which the algebraic proof theory of paraconsistent logics such as semi De Morgan logic [15] and bilattice logic [16,21] can be studied in connection with very well known and well behaved logics such as linear logic [19] and first order logic [27]. Multi-type calculi also allow to capture a wide class of axiomatic extensions of given logics [17], and therefore provide a powerful and flexible environment for the design of new families of logics, such as those introduced in [2] to reason about agents’ resources and capabilities, which pave the way to novel applications of alge- braic and proof-theoretic methods in non-classical logics to formalization problems in fields ranging from artificial intelligence to the social sciences.
The first contribution of the present paper is an equivalent presentation of rough algebras, based on so-called heterogeneous algebras [3]. Intuitively, heterogeneous algebras are algebras with more than one domain, and their operations might span across different domains. The classes of heterogeneous algebras corresponding to rough algebras have three domains, respectively corresponding to (abstract repre- sentations of) general sets and upper and lower deﬁnable sets of an approximation space. Each of these three domains corresponds to a distinct type. The modal op- erators capturing the lower and upper definable approximations of a general set are then modeled as heterogeneous maps from the general type to one of the two de- finable types. The equivalent heterogeneous presentations of rough algebras come

2 Although the name ‘rough algebras’ has a specific meaning in this literature (reported in Definition 2.1), in the present paper we find it convenient to use it as the generic name for the class of topological quasi Boolean algebras and its subclasses.

naturally equipped with a multi-type logical language, and are characterized by axiomatizations which can be readily recognized to be analytic inductive (cf. [17, Definition 55]), and hence, by the general theory of multi-type calculi, can be ef- fectively captured by proper multi-type display calculi which are sound, complete, conservative, and enjoy cut elimination and standard subformula property, given that the introduction rules for all connectives are standard. The introduction of these calculi is the second contribution of the present paper.
Compared with [22], the multi-type methodology allows for more modularity, which not only has made it possible to account for the logic of IA3 (which could not be encoded in an analytic rule otherwise, see Footnote 6), but will also make it pos- sible to extend the present theory so as to cover weaker versions of rough algebras based on e.g. semi De Morgan algebras [15], or even general lattices [5,13], which will account for the proof-theoretic aspects of the logics of rough concepts. More generally, thanks to the multi-type methodology, the logics of rough algebras have been embedded into the wider context of the logics which are properly displayable. Properly displayable logics are studied as a class, and several metatheoretic results, such as semantic cut elimination, finite embeddability property, finite model prop- erty, can be given uniformly for large subclasses. Moreover, the modularity of the proof theoretic environment of properly displayable logics makes it possible to make different logics interact in a systematic way, so as to obtain e.g. dynamic epistemic logics based on the logics of rough algebras. This opens new interesting possibilities to enrich the theory of the logics of rough algebras.
Preliminaries
Varieties of rough algebras
Definition 2.1 (cf. Section 2 [26]) T = (L, I) is a topological quasi-Boolean algebra
(tqBa) if L = (L, ∨, ∧, ¬, T, ⊥) is a De Morgan algebra and for all a, b ∈ L,
T1. I(a ∧ b) = Ia ∧ Ib,	T2. IIa = Ia,	T3. Ia ≤ a,	T4. IT = T.
For any a ∈ T, let Ca := ¬I¬a. We consider the subclasses of tqBas defined as in the following table.




IA1
tqBa tqBa5 IA2




IA3

pre-rough
rough
A rough algebra is a complete and completely distributive pre-rough algebra.
Lemma 2.2 Any tqBa T = (L, ∨, ∧, ¬, I, T, ⊥) satisﬁes the following equalities:
(i) I(Ia ∨ Ib) = Ia ∨ Ib	(ii) C(Ca ∧ Cb) = Ca ∧ Cb.
Proof. (i) I(Ia ∨ Ib) ≤ Ia ∨ Ib is a straightforward consequence of T3. As to the

converse direction, it is enough to show that Ia ≤ I(Ia V Ib) and Ib ≤ I(Ia V Ib). Let us show the first of these inequalities. From T1 it immediately follows that I is monotone. Hence Ia ≤ Ia V Ib implies IIa ≤ I(Ia V Ib). Hence, by T2, Ia ≤ IIa ≤ I(Ia V Ib). Analogously one proves Ib ≤ I(Ia V Ib). The proof for (ii) is dual.    □
Below, we use the abbreviated names of the algebras written in “blackboard bold” (e.g. TQBA, etc.) to indicate their corresponding classes. When it is unam- biguous, we will use rough algebras as the generic name for these classes.
The logics of rough algebras
Fix a denumerable set Atprop of propositional variables, let p denote an element in Atprop. The logics of rough algebras share the language 5 which is defined recursively as follows:
A ::= p |T|±| ¬A | IA | CA | A ∧ A | A V A.
Definition 2.3 The logic H.TQBA of the class TQBA is defined by adding the following axioms to De Morgan logic:
IA s A,	IA s IIA,	I(A ∧ B) s IA ∧ IB,	IA ∧ IB s I(A ∧ B),	T s IT
CA s ¬I¬A,	¬I¬A s CA,	¬C¬A s IA,	IA s ¬C¬A.
We consider the following extensions of H.TQBA corresponding to the subclasses of
TQBA reported above:

Let H denote any of the logics in the table above (second column), and A denote its corresponding class of algebras in the table above (first column, same row as H).

Theorem 2.4 (Completeness) H is sound and complete with respect to A, that is, if A s B is an 5-sequent, then A s B is derivable in H iff h(A) ≤ h(B) for all T e A and every interpretation h : 5→ T.
Towards a multi-type presentation: algebraic analysis
In this section, we equivalently represent rough algebras as heterogeneous algebras.
The kernels of rough algebras
For any tqBa T (cf. Definition 2.1), we let KI := {Ia | a e L} and KC := {Ca | a e L}, and let ι :L → KI and γ :L → KC be defined by the assignments a ›→ Ia and a ›→ Ca, respectively. Let eI : KI ‹→ L and eC : KC ‹→ L denote the natural embeddings. Axioms T1, T2, and T3 imply that I :L → L is an interior operator and C :L → L

is a closure operator on L seen as a poset. Hence, by general order-theoretic facts (cf. [7, Chapter 7]), eI (resp. eC) is the left (resp. right) adjoint of ι (resp. γ), in symbols: eI c ι and γ c eC, i.e. for any α e KI, ξ e KC and a e L,
eIα ≤ a	iff	α ≤ ιa	γξ ≤ a	iff	ξ ≤ eCa.	(1)
The following equations are straightforward consequences of the definitions of the maps and (1):
ι(eIα) = α	eI(ιa) = Ia	γ(eCξ) = ξ	eC(γa) = Ca.	(2)
Definition 3.1 For any tqBa T = (L, V, ∧, I, ¬, T, ±),  the left-kernel KI = (KI, ∪, ∩, 1I, 0I) and the right-kernel KC = (KC, п, п, 1C, 0C) are such that, for all α, β e KI, and all ξ, χ e KC,
K1. α ∪ β := ι(eI α) V eI β)	K3. 1I := ιT	Kj1. ξ п χ := γ(eCξ V eCχ)	Kj3. 1C := γT
K2. α ∩ β := ι(eI α ∧ eI β)	K4. 0I := ι±	Kj2. ξ п χ := γ(eCξ ∧ eCχ)	Kj4. 0C = γ±
If T is a tqBa5, we define ~: KI → KI and – : KC → KC by the following equation: K5.	~ α := ι¬eIα	Kj5.	–ξ := γ¬eCξ
The next lemma captures the relationship between a tqBa and its kernels via the properties of their connecting maps:
Lemma 3.2 For any tqBa T,
ι : T - KI and γ : T - KC are surjective maps which satisfy the following equa- tions: for all a, b e L,
ιa ∩ ιb = ι(a ∧ b),	ιT = 1I,	ι± = 0I;
γa ∪ γb = γ(a V b),	γT = 1C,	γ± = 0C.
eI : KI → T and eC : KC → T are injective maps which satisfy the following equations:
eIα ∧ eIβ = eI(α ∩ β),	eIα V eIβ = eI(α ∪ β);
eCξ ∧ eCχ = eC(ξ п χ),	eCξ V eCχ = eC(ξ п χ);
eI1I = T,	eI0I = ±,	eC1C = T,	eC0C = ±.
Proof. We only prove 1(a) and 2(a), the arguments for 1(b) and 2(b) being dual. The identities in 2(c) easily follow using K3, K4, Kj3, Kj4 and the definition of T. The surjectivity of ι is an immediate consequence of the definition of KI (cf. begin- ning of Section 3.1). In what follows, we show that ι satisfies 1(a).
ιa ∩ ιb	=	ι(eιa ∧ eιb)	K2
=	ι(Ia ∧ Ib)	(2)
=	ιI(a ∧ b)	T1
=	ιeι(a ∧ b)	(2)
=	ι(a ∧ b)	(2)
The remaining identities in 1(a) can be shown analogously using K3 and K4. Let us show that eI satisfies 2(a) and 2(c). For any α, β e KI, let a, b e L be such that α = ιa and β = ιb.


The next propositions and lemmas provide a ‘multi-type’ characterization of defining properties of axiomatic extensions of tqBas in terms of additional properties of the kernels or of their connecting maps:
Proposition 3.3 If T is a tqBa5, then KI  KC.
Proof. Let f : KI → KC be defined as f := γeI. To show that f is surjective, let
ξ e KC, and let ξ = γa for some a e L,
γa	=	γeC γa	adjunction
=	γCa	(2)
=	γICa	T5
=	γeI ιeC γa	(2)
=	γeI ιeC ξ	(ξ = γa)
=	f ιeC ξ	( f := γeI )
Since both γ and eI are monotone, so is f := γeI. To finish the proof, we need to show that for all α, β e KI, if γeI(α) ≤ γeI(β), then α ≤ β. Since eC is an order embedding, the assumption can be equivalently rewritten as eCγeI(α) ≤ eCγeI(β), Let a, b e L such that α = ιa and β = ιb. Then we can equivalently rewrite the assumption as eCγeIιa ≤ eCγeIιb. Since I := eIι and C := eCγ, we can again equivalently rewrite the assumption as CIa ≤ CIb, and hence, by T5, as Ia ≤ Ib, that is, eIιa ≤ eIιb. Since eI is an order-embedding, this yields ιa ≤ ιb, that is, α ≤ β, as required. This finishes the proof that KI KC as lattices. Finally, we need to show that f (~ α) = – f (α) for any α e KI. For such an α, let a e L s.t. α = ι(a).


f ~ α	=	γeI ~ α
=	γeI ~ ιa
=	γeI ι¬eI ιa
=	γeI ι¬Ia
=	γI¬Ia
=	γIC¬a
=	γC¬a
– f α	=	γ¬eC f α
=	γ¬eC γeI α
=	γ¬eC γeI ιa
=	γ¬CeI ιa
=	γ¬CIa
=	γI¬Ia
=	γIC¬a
=	γC¬a
□

By the proposition above, we can drop the subscripts in KI (or KC) and in eI and eC, and refer to K as the kernel of T. The following lemma has a straightforward proof which uses K5:
Lemma 3.4 (1) If T is a tqBa5, then e~α = ¬eα;
(2) If T is an IA1, then ι(a V b) = ιa ∪ ιb.
Proposition 3.5 If T is a tqBa5, then K is a De Morgan algebra. Moreover, if T
is an IA1, then K is a Boolean algebra.
Proof. For any α, β e KI, let a, b e L such that α = ιa and β = ιb. Let us show that
~~ α = α and ~ (α ∪ β) =~ α∩~ β.


Using K5, K3, (2) and T7, one can show the identities ~ 1I = ι¬e1I = ι¬eιΤ = ι¬IΤ = ι± = 0I. The argument for ~ 0I = 1I can be given dually. Hence, KI is a De Morgan algebra. If T is an IA1, in order to show that KI is a Boolean algebra, we only need to show ~ α ∪ α = 1I.
In the present subsection, we show that the properties that we have verified to hold for rough algebras, their kernels and connecting maps yield an equivalent presenta- tion of rough algebras
Definition 3.6 A heterogeneous tqBa (htqBa) is a tuple H = (D, LI, LC, eI, eC, ι, γ)
such that:
H1 D = (D, V, ∧, ¬, Τ, ±) is a De Morgan algebra;
H2 LI = (LI, ∪, ∩, ~, 0I, 1I) and LC = (LC, п, п,–, 0C, 1C) are bounded distributive lattices; H3 eI : LI ‹→ D and eC : LC ‹→ D are lattice homomorphisms;
H4 ι : D → LI and γ : D → LC satisfy the following identities:
ι(a ∧ b) = ιa ∩ ιb	ιΤ = 1	ι± = 0	γ(a V b) = γa п γb	γΤ = 1	γ± = 0; H5 eI c ι	γ c eC		ιeIα = α		γeCξ = ξ; 3
H6 eCγa = ¬eIι¬a.
ι	γ


LI	eI
D	eC	LC

The heterogeneous algebras corresponding to the subclasses of tqBas considered in Section 2.1 are defined as follows:

3 Condition H5 implies that ι is surjective and e is injective.


In what follows, we use the abbreviated names of the heterogeneous algebras written in “blackboard bold” (e.g. HTQBA, etc.) to indicate their corresponding classes. A heterogeneous algebra H is perfect if every lattice reduct in the signature of H is perfect, 4 and every join (resp. meet) preserving (resp. reversing) map in the signature of H is completely join (resp. meet) preserving (resp. reversing).
Definition 3.7 If T = (L, I) is a tqBa, we let T+ := (L, KI, KC, eI, eC, ι, γ), where:
KI and KC are the left and right kernels of T (cf. Definition 3.1);
eI : KI ‹→ L and eC : KC ‹→ L are defined as the embeddings of the domains of KI
and KC into the domain of L;
ι : L → KI and γ : L → KC are defined by ι(a) = Ia and γ(a) = Ca respectively.
If T = (L, I) is a tqBa5, KI and KC can be identified and also eI and eC can, hence we write T+ := (L, K, e, ι, γ).
Definition 3.8 If H = (D, LI, LC, eI, eC, ι, γ) is an htqBa, we let H+ := (D, I, C) where the unary operations I and C on D are defined by the assignments a ›→ eIιa and a ›→ eCγa respectively.
Let A denote a class of rough algebras (cf. Section 2.1), and HA its corresponding class of heterogeneous algebras.
Proposition 3.9	(i) If T e A, then T+ e HA;
If H e HA, then H+ e A;
T  (T+)+	and	H  (H+)+.

3.3  Canonical extensions of heterogeneous algebras
As discussed in other papers adopting the multi-type methodology (cf. e.g. [15,19]), canonicity in the multi-type environment serves both to provide complete semantics for the analytic extensions of the basic logic (i.e. extensions obtained by adding analytic inductive axioms) and to prove the conservativity of their associated display

calculi. In what follows, we let Dδ, Lδ, and Lδ
denote the canonical extensions of

I	C
the algebras D, LI, and LC respectively, and eδ, eδ , ιπ, and γπ denote the extensions

of e , e
I	C
, ι, and γ respectively. 5

I	C

4 A distributive lattice is perfect if it is complete, completely distributive and completely join-generated by the collection of its completely join-prime elements.
5 The order-theoretic properties of eI , eC, ι and γ guarantee that they are smooth, that is, for each of them, σ-extension and π-extension coincide. However, the different notations in the superscripts are meant to emphasize that while the smoothness of the embeddings is used in the canonicity proofs, it is not needed in the case of ιπ and γσ.

Definition 3.10 If H = (D, LI, LC, eI, eC, ι, γ) e HA is an htqBa, then the canonical
extension of H is the heterogeneous algebra Hδ = (Dδ, Kδ, Kδ , eδ, eδ , ιπ, γσ).
I	C  I  C
The defining conditions of the heterogeneous algebras of Definition 3.6 can be expressed as analytic inductive inequalities (cf. Definition 4.3), and each such in- equality is canonical. Hence:
Proposition 3.11 If H e HA, then Hδ is a perfect element of HA.
ιπ	γσ














Fig. 1. Extending heterogeneous algebras to canonical extensions
In Section 6.1, soundness of each multi-type calculus will be proven w.r.t. perfect
HAs.

Multi-type language for heterogeneous rough alge- bras
Heterogeneous algebras provide a natural interpretation for the following multi-type language 5MT consisting of terms of types D, KI and KC (the kernel-type negations apply to the language of H.TQBA5 and its extensions).

D e A ::= p | ◦Iα | ◦Cξ |T|±| A ∧ A | A V A | ¬A
KI e α ::= ■I A | 1I | 0I | α ∪ α | α ∩ α | ~α	KC e ξ ::= ◆C A | 1C | 0C | ξ п ξ | ξ п ξ | –ξ
The logic H.TQBA5 can be also captured in a simpler language consisting of the two types D as above and K as follows:
K e α ::= ■I A | ◆C A | 1 | 0 | ~α | α ∪ α | α ∩ α.

Analytic inductive 5MT-inequalities
In the present section, we specialize the definition of analytic inductive inequalities (cf. [17, Definition 55]) to the multi-type language 5MT. This definition also applies to the algebraic language of htqBas that interprets it, so that we will talk about analytic inductive term-inequalities. We will make use of the following auxiliary
definition: an order-type over n e N is an n-tuple s e {1, ∂}n. For every order type s, we denote its opposite order type by s∂, that is, s∂(i) = 1 iff s(i) = ∂ for every 1 ≤ i ≤ n. The connectives of the language above are grouped into the following families / := /D ∪ /MT ∪ /KI ∪ /KC and G := GD ∪ GMT ∪ GKI ∪ GKC :


For any f e / (resp. g e G), we let nf e N (resp. ng e N) denote the arity of f (resp. g), and the order-type s f (resp. sg) on nf (resp. ng) indicate whether the ith coordinate of f (resp. g) is positive (s f (i) = 1, sg(i) = 1) or negative (s f (i) = b, sg(i) = b). The order-theoretic motivation for this grouping is that the algebraic
interpretations of / -connectives (resp. G-connectives) preserve finite joins (resp. meets) in each positive coordinate and reverse finite meets (resp. joins) in each negative coordinate. For any term s(p1,... pn), any order type s over n, and any 1 ≤ i ≤ n, an s-critical node in a signed generation tree of s is a leaf node +pi with s(i) = 1 or –pi with s(i) = b. An s-critical branch in the tree is a branch ending in an s-critical node. For any term s(p1,... pn) and any order type s over n, we say that +s (resp. –s) agrees with s, and write s(+s) (resp. s(–s)), if every leaf in the signed generation tree of +s (resp. –s) is s-critical. We will also write +sj < ∗s (resp. –sj < ∗s) to indicate that the subterm sj inherits the positive (resp. negative) sign from the signed generation tree ∗s. Finally, we will write s(sj) < ∗s (resp. sb(sj) < ∗s) to indicate that the signed subtree sj, with the sign inherited from ∗s, agrees with s (resp. with sb).
Definition 4.1 [Signed Generation Tree] The positive (resp. negative) genera- tion tree of any 5MT-term s is defined by labelling the root node of the generation tree of s with the sign + (resp. –), and then propagating the labelling on each re- maining node as follows: For any node labelled with 4 e/ ∪ G of arity n4 ≥ 1, and for any 1 ≤ i ≤ n4, assign the same (resp. the opposite) sign to its ith child node if s4(i) = 1 (resp. if s4(i) = b). Nodes in signed generation trees are positive (resp. negative) if are signed + (resp. –).
Definition 4.2 [Good branch] Nodes in signed generation trees are called Δ- adjoints, syntactically left residual (SLR), syntactically right residual (SRR), and syntactically right adjoints (SRA), according to the specification given in Table 1.
A branch in a signed generation tree ∗s, with ∗e {+,–}, is a good branch if it is the concatenation of two paths P1 and P2, one of which may possibly be of length 0, such that P1 is a path from the leaf consisting (apart from variable nodes) only of
PIA-nodes (for explanations on terminology, we refer to [23, Remark 3.24]), and P2
consists (apart from variable nodes) only of Skeleton-nodes.

+	≤	–
Skeleton	Skeleton


PIA

+p	s1

+p	s2
PIA

Definition 4.3 [Analytic inductive inequalities, cf. [17, Definition 55]] For any order type s and any irreflexive and transitive relation <Ω on p1,... pn, the signed generation tree ∗s (∗e {–, +}) of a term s(p1,... pn) is analytic (Ω,s)-inductive if
every branch of ∗s is good (cf. Definition 4.2);
for all 1 ≤ i ≤ n, every m-ary SRR-node occurring in any s-critical branch with leaf pi is of the form s(s1,..., s j–1, β, s j+1 ..., sm), where for any h e {1,..., m}\ j:
sb(sh) < ∗s (cf. discussion before Definition 4.2), and
pk <Ω pi for every pk occurring in sh and for every 1 ≤ k ≤ n.
An inequality s ≤ t is analytic (Ω,s)-inductive if the signed generation trees +s and –t are analytic (Ω,s)-inductive. An inequality s ≤ t is analytic inductive if is analytic (Ω,s)-inductive for some Ω and s.

In each setting in which they are defined, analytic inductive inequalities are a subclass of inductive inequalities (cf. [17]). In their turn, inductive inequalities are canonical (that is, preserved under canonical extensions, as defined in each setting, cf. [6]). Hence, the following is an immediate consequence of the general canonicity of inductive inequalities.

Theorem 4.4 Analytic inductive 5MT-inequalities are canonical.


Translating the original language of rough algebras into the multi-type language
The toggle between the single-type algebras and their corresponding heterogeneous algebras is reflected syntactically by the translation (·)t : 5→ 5MT defined as follows:

pt	=	p		±t	=	±		Tt	=	T	 (¬A)t =	¬At (A ∧ B)t = At ∧ Bt	(A V B)t = At V Bt	(IA)t = ◦C■I At	(CA)t = ◦I◆C At Recall that T+ denotes the heterogeneous algebra associated with the given algebra
T (cf. Definition 3.7). The following proposition is proved by a routine induction
on 5-formulas.

Proposition 4.5 For all 5-formulas A and B and every 5-algebra T, T |= A ≤
B  iff  T+ |= At ≤ Bt.

We are now in a position to translate the axioms and rules of any logic H defined in Section 2.2 into 5MT.














I
A s B	~	◦I ■I A s ◦I ■I B and ◦C ◆C A s ◦C ◆C B implies A s B
~	eI ιa ≤ eI ιb and eC γa ≤ eC γb implies a ≤ b	(x)
Since eI and eC are order-embeddings, eIι(a) ≤ eIι(b) and eCγ(a) ≤ eCγ(b) are respectively equivalent to ι(a) ≤ ι(b) and γ(a) ≤ γ(b), and hence the quasi-inequality
(x) can be equivalently rewritten as the following quasi-inequality, which defines the
class HIA3:
ι(a) ≤ ι(b) and γ(a) ≤ γ(b) implies a ≤ b.
By applying adjunction, the inequalities in the antecedent can be equivalently rewritten as a = eC(γ(b)) ∧ a and b = b V eI(ι(a)). Hence, the initial quasi-inequality can be equivalently rewritten as the following 5MT-inequality:
a ∧ eCγ(b) ≤ eIι(a) V b.	(3)
The inequality above is analytic inductive 6 , and hence it can be used, together with the other axioms of heterogeneous algebras, which, as observed in Section 3.3, are analytic inductive, to generate the analytic structural rules of the calculi introduced in Section 5, with a methodology analogous to the one introduced in [17]. As we will discuss in Section 6.2, the inequalities (i)-(ix) are derivable in the appropriate calculi obtained in this way.

Proper display calculi for the logics of rough algebras
In this section, we introduce proper multi-type display calculi D.A for the logics associated with each class of algebras A mentioned in Section 2.1. The language of these calculi has types D and KI and KC, and is built up from structural and operational (aka logical) connectives. Heterogeneous connectives ◦I, ◦C, ■I , ◆C are
interpreted as eI, eC, ι,γ in heterogeneous algebras respectively. Each structural con-
nective is denoted by decorating its corresponding logical connective with ˆ (resp. ˇ or ˜). Below, we adopt the convention that unary connectives bind more strongly than binary ones.

Language
Structural and operational terms:

6  Notice that applying similar steps in the single-type environment would give rise to the inequality
A ∧ CCB ≤ B V Ib IB (where C and Ib respectively denote the right adjoint of C and the left adjoint of I) which is inductive but not analytic.

⎧⎪⎪⎨ A ::= p |T|±| ◦I α | ◦C ξ | ¬A | A ∧ A | A V A
D ⎪⎪⎩ X ::= A | ±ˇ | Tˆ | ◦˜ Π | ◦˜ Γ | ¬˜ X | X ∧ˆ X | X Vˇ X | X >ˆ X | X →ˇ X
⎧⎪⎪⎨ α ::= ■I A | 1I | 0I | α ∩ α | α ∪ α | (~α)
KI ⎪⎪⎩ Γ ::= α | ■ˇ X | ◆ˆ X | 0ˇ | 1ˆ | Γ ∩ˆ Γ | Γ ∪ˇ Γ | Γ эˆ Γ | Γ ˇэ Γ | ( ~˜ Γ)
⎧⎪⎪⎨ ξ ::= ◆C A | 1C | 0C | ξ п ξ | ξ п ξ | (–ξ)
KC ⎪⎪⎩ Π ::= ξ | ◆ˆ X | ■ˇ X | 0ˇ | 1ˆ | Π пˆ Π | Π пˇ Π | Π ˇh Π | Π hˆ Π | (–˜ ξ)
The formulas and structures in brackets in the table above pertain to the language of D.TQBA5 and its extensions.
Interpretation of structural connectives as their logical counterparts 7
structural and operational pure D-type connectives:
structural and operational pure KI-type and KC-type connectives:
As mentioned above, the language of D.TQBA5 and its extensions includes the following structural and operational pure KI-type and KC-type connectives:

structural and operational multi-type connectives, and their algebraic counter- parts:


Rules
In what follows, we will use X, Y, W, Z as structural D-variables, Γ, Δ, Λ as structural KI-variables, and Π, Σ, Ω as structural KC-variables. The proper multi-type display calculus D.TQBA includes the following axiom and rules: 8
Identity and Cut:


Id 	
 X s A	A s Y  Cut
 Γ s α	α s Δ  Cut
Π s ξ	ξ s Σ  CutK

D  p s p
X s Y
D	Γ s Δ	KI


Π s Σ	C

Pure D-type display rules:
resD  X ∧ˆ Y s Z	
Y s X →ˇ Z


	X s Y Vˇ Z  resD
Y >ˆ X s Z


galD  ¬˜ X s Y 
¬˜ Y s X


 X s ¬˜ Y  galD
Y s ¬˜ X

Pure KI-type and KC-type display rules:

resK
 Γ ∩ˆ Δ s Λ	
	Γ s Δ ∪ˇ Λ resK
resK
 Π пˆ Σ s Ω	
	Π s Σ пˇ Ω resK



I	Δ s Γ ˇэ Λ
Multi-type display rules:
Δ эˆ Γ s Λ	I


C	Σ s Π ˇh Ω


Σ hˆ Π s Ω	C



7  In the synoptic table, the operational symbols which occur only at the structural level will appear between round brackets.
8 For the sake of conciseness, we adopt the convention that the position of the name of rules – on the left or on the right of the inference line – is relevant to correctly identify each given rule. For instance, the name of each logical rule is placed on the right or on the left of the inference line, depending on whether the given rule is a right- or a left-introduction rule. Some structural rules have a double inference line, meaning that the rule is an abbreviation of two rules (one to be read top-down and the other bottom-up). In this case, we use one and the same name for both rules.

ad	 ◦˜I Γ s Y	

	Y s ◦˜I Γ ad

ad		Y s ◦˜C Π

 ◦˜C X s Π	 ad

DKI	Γ s ■ˇ I Y
◆ˆ I Y s Γ
DKI
DKC
◆ˆ C
Y s Π
X s ■ˇ C Π
DKC

Pure-type structural rules: these include standard Weakening (W), Contraction (C), Commutativity (E) and Associativity (A) in each type. We do not report on them. 9

  X s Y  cont
¬˜ Y s ¬˜ X
Tˆ 		X s Y  X ∧ˆ Tˆ s Y
 X s Y	 ±ˇ X s Y Vˇ ±ˇ

	Γ s Δ
1I Γ ∩ˆ 1ˆI s Δ
 Γ s Δ	 0ˇ Γ s Δ ∪ˇ 0ˇI
	Π s Σ
1C Π пˆ 1ˆC s Σ
 Π s Σ	 0ˇ Π s Σ пˇ 0ˇC

Multi-type structural rules:

◦˜ 1ˆ
	Tˆ s Y 
 Γ s ■ˇ I ±ˇ  ■ˇ Tˆ
◆ˆ ˆ  ◆ˆ C Tˆ s Π
 X s ±ˇ	
◦˜ 0

I I  ◦˜I 1ˆI s Y


Γ s 0ˇI	I
C T	1ˆ s Π


X s ◦˜C 0ˇC	C C

 ◦˜I Γ s ◦˜I Δ
◦˜I
Γ s Δ
 ◦˜C Π s ◦˜C Σ Π s Σ
◦˜C
◆ˆ C
◆ˆ C X s ■ˇ C Y
■ˇ C	X s Y
◆ˆ I X s ■ˇ I Y X s Y
◆ˆ I
■ˇ I

 X s ◦˜I ■ˇ I ¬˜ Y 
IC
X s ¬˜ ◦˜C ◆ˆ C Y
 X s ◦˜C ■ˇC ¬˜ Y 
IC
X s ¬˜ ◦˜I ◆ˆ I Y
◦˜C ◆ˆ C ¬˜ X s Y
CI
¬˜ ◦˜I ■ˇ I X s Y
◦˜I ◆ˆ I ¬˜ X s Y
CI
¬˜ ◦˜C ■ˇ C X s Y

Logical rules: those for the pure-type connectives are standard and omitted; those for multi-type connectives:

 ◆ˆ I A s Γ
I  ◆I A s Γ

	Γ s A	 ◆I
◆ˆ Γ s ◆ A

I  ◦˜I α s X 
I α s X

I   A s Γ	
I A s ■ˇ I Γ
 Γ s ■ˇ I A  ■I
Γ s ■I A

C  ◦˜C ξ s X 
C ξ s X

I	I


 ◆ˆ C A s Π

	Π s A	 ◆

 X s ◦˜I α ◦I

	A s Π	

 Π s ■ˇC A  ■C

 X s ◦˜C ξ  ◦C

C  ◆C A s Π
◆ˆ C Π s ◆C A	C
X s ◦I α
C  ■C A s ■ˇ C Π
Π s ■C A
X s ◦C ξ

The calculus D.TQBA5 is obtained by adding the following rules to D.TQBA:
Display rules:

galK
 ~˜ Γ s Δ
 Γ s ~˜ Δ galK
galK
 –˜ Π s Σ 
 Π s –˜ Σ  galK

I  ~˜ Δ s Γ
Δ s ~˜ Γ	I
C  –˜ Σ s Π
Σ s –˜ Π	C

Pure KI-type and KC-type structural rules:

contI   Γ s Δ 
~˜ Δ s ~˜ Γ
  Π s Σ	 contC
–˜ Σ s –˜ Π

Multi-type structural rules:
 X s ◦˜I ■ˇ I Y 
◦˜I
X s ◦˜C ■ˇ C Y
Logical rules for ~ and – :

■ˇ I


 X s ◦˜I ~˜ Γ
X s ¬˜ ◦˜I Γ


◦˜I ~˜


 X s ◦˜C –˜ Π
X s ¬˜ ◦˜C Π


◦˜C –˜

~  ~˜ α s Γ
~α s Γ
 Γ s ~˜ α ~
Γ s ~α
–˜ α s ξ
–
– α s ξ
Π s –˜ ξ
–
Π s – ξ

The proper display calculi for the axiomatic extensions of H.TQBA5 discussed
in Section 2.2 are obtained by adding the analytic structural rules indicated in the following table to the calculus D.TQBA5.


9 In what follows, we use subscripts (indicating the type) to distinguish the rules for lattice operators in different type rules.

Properties
Throughout this section, we let H denote any of the logics defined in Section 2.2; let A and HA denote its corresponding class of single-type and heterogeneous al- gebras, respectively, and let D.A denote the display calculus for H. The verifica- tion of the properties of every D.A follows very closely those of analogous proper- ties of other calculi designed using the general methodology of multi-type calculi (cf. e.g. [19,15,18,16]). For this reason, we only sketch them.

Soundness on perfect HA algebras
In the present subsection, we outline the verification of the soundness of the rules of D.A w.r.t. the semantics of perfect elements of HA (see Definition 3.6). The first step consists in interpreting structural symbols as logical symbols according to their (precedent or succedent) position, as indicated at the beginning of Section
5. This makes it possible to interpret sequents as inequalities, and rules as quasi- inequalities. For example, the rules on the left-hand side below are interpreted as the quasi-inequalities on the right-hand side:

		X s Y	W s Z	 ia3 X ∧ˆ ◦˜C ◆ˆ C W s ◦˜I ■ˇ I Y Vˇ Z
~	∀a∀b∀c∀d[(a ≤ c & b ≤ d) → a ∧ eCγ(b) ≤ eI ι(c) V d].

The verification of the soundness of the rules of D.A then consists in verifying the validity of their corresponding quasi-inequalities in any perfect element of HA. The verification of the soundness of pure-type rules and of the introduction rules following this procedure is routine, and is omitted. The soundness of the rule ia3 above is verified by the following ALBA-reduction, which shows that the quasi- inequality above is equivalent to the inequality (3), which, as discussed in Section 4, is valid on every H e HIA3.
∀p∀q[p ∧ eC γ(q) ≤ eI ι(p) V q]
iff	∀p∀q∀a∀b∀c∀d[(a ≤ p & b ≤ q & p ≤ c & q ≤ d) → a ∧ eC γ(b) ≤ eI ι(c) V d]
iff	∀a∀b∀c∀d[(a ≤ c & b ≤ d) → a ∧ eC γ(b) ≤ eI ι(c) V d].
The validity of the quasi-inequalities corresponding to the remaining structural rules follows in an analogous way.

Completeness
Let Aτ s Bτ be the translation of any 5-sequent A s B into the language of D.A which composes the translation introduced in Section 4 with the correspondence between algebraic operations and logical connectives indicated in table (iv) of Section 5.1.
Proposition 6.1 For every H-derivable sequent A s B, the sequent Aτ s Bτ is deriv- able in D.A.


T7.
We only show the derivations of rule T8, axioms T6, and one direction of axiom
T8.	IA s IB and CA s CB imply A s B  ~  ◦I■I A s ◦I ■I B and ◦C◆C A s ◦C

C B imply A s B



C ◆C A s ◦C ◆C B
        
IdD + ◆C + ◦C + CutD
        
 ◦˜C ◆ˆ C A s ◦˜C ◆C B 
◦˜C
I ■I A s ◦I ■I B IdD + ■I + ◦I + CutD
      
◦˜I ■I A s ◦˜I ■ˇ I B
◦˜I	■ A s ■ˇ B
I

adDK
 ◆ˆ C A s ◆C B	
  A s A	B s B	 ia3
 ◦˜I ■I A s B 

C	 A s ◦˜C ◆C B 
A ∧ˆ ◦˜C ◆ˆ C B s ◦˜I ■ˇ I A Vˇ B
I  ◦I ■I A s B	B s B 

A s A
◦C
A s ◦ ◆ B

      
∧ + V
V
■ A B
B ˇ B

C C	∧	l	r
I I  V  s  V	C

A ∧ˆ A s A ∧◦C ◆C B

       
A ∧◦C ◆C B s ◦I ■I A V B
I ■I A V B s B	D

CD	 A s A ∧◦C ◆C B	A ∧◦C ◆C B s B 
A s B

CutD
CutD

T6.	Ts IA V ¬IA  ~  Ts ◦I■I A V¬ ◦I ■I A	T7.	I(A V B) cs IA V IB  ~
I■I (A V B) cs ◦I■I A V ◦I■I B
I   A s A	

 ■I A s ■ˇ I A  ■I
	■I A s ■I A  1ˆ
V  A s A	B s B 
I 	A V B s A Vˇ B	

I A ∩ˆ 1ˆI s ■I A	I
 ■I (A V B) s ■ˇ I (A Vˇ B)  ■ˇ ∪ˇ

ˆ	ˇ	cgri
	■I (A V B) s ■ˇ I A ∪ˇ ■ˇ I B  I


◦˜   1I s ~˜ ■I A ∪ ■I A	

■ˇ A ˆ ■	ˇ
resKI

I ◦˜I 1ˆI s ◦˜I ( ~˜ ■I A ∪ˇ ■I A)
  I  э  I (A V B) s ■I B  ■I


           
◦˜ + ad	+ W + C + ◆ˆ ■ˇ
 ■ˇ I A эˆ ■I (A V B) s ■I B	 resK

 I	DKI	I  I	
	◦˜I 1ˆI s ◦˜I ~˜ ■I A Vˇ ◦˜I ■I A  res
 ■I (A V B) s ■ˇ I A ∪ˇ ■I B 
■ (A V B) s ■ B ∪ˇ ■ˇ A
I
EKI

◦˜ ~˜ ■ A >ˆ ◦˜ 1ˆ
D
s ◦˜ ■ A
	I	I	I  resKI

  I	I	I I	I I  ◦I
 ◦˜I ~˜ ■I A >ˆ ◦˜I 1ˆI s ◦I ■I A	 resD
 ■I B эˆ ■I (A V B) s ■ˇ I A  ■I
I B эˆ ■I (A V B) s ■I A

res

 ◦˜I 1ˆI s ◦˜I ~˜ ■I A Vˇ ◦I ■I A 
D
KI
 ■I (A V B) s ■I B ∪ˇ ■I A  EK

 ◦˜I 1ˆI s ◦I ■I A Vˇ ◦˜I ~˜ ■I A 	ˆ
  ■I (A V B) s ■I A ∪ˇ ■I B	 I

 Tˆ s ◦I ■I A Vˇ ◦˜I ~˜ ■I A  ◦˜I 1I
◦˜I

◦˜ ■ (A V B) s ◦˜ (■ A ∪ˇ ■ B)

T	ˇ	I I
  
I  I	I
       

	T s ◦I ■I A V ◦˜I ~˜ ■I A  resD
 ◦I ■I A >ˆ T s  ◦˜I ~˜ ■I A  ◦˜I ~˜
 ◦I ■I A >ˆ T s  ¬˜ ◦˜I ■I A	 resD
 T s ◦I ■I A Vˇ ¬◦I ■I A  V
T s ◦I ■I A V¬◦I ■I A

◦˜I + adDKI + W + C + ◆ˆ I ■ˇ I
           
◦˜I ■I (A V B) s ◦˜I ■I A Vˇ ◦˜I ■I B resD+ ◦˜I +E
I ■I (A V B) s ◦I ■I A V◦I ■I B

In between the dashed inference lines we list the names of all the rules needed to reconstruct the entire derivation.



Conservativity

To argue that D.A is conservative w.r.t. H we follow the standard proof strategy discussed in [17,14]. Let sH denote the syntactic consequence relation correspond- ing to H and |=HA denote the semantic consequence relation arising from (perfect) heterogeneous algebras in HA. We need to show that, for all 5-formulas A and B, if Aτ s Bτ is a D.A-derivable sequent, then A s B is derivable in H. This claim can be proved using the following facts: (a) The rules of D.A are sound w.r.t. perfect members of HA (cf. Section 6.1); (b) H is complete w.r.t. the class of perfect algebras in A (cf. Proposition 2.4); (c) A perfect element of A is equivalently presented as a perfect member of HA so that the semantic consequence relations arising from each type of structures preserve and reflect the translation (cf. Proposition 4.5). Let A, B be 5-formulas. If Aτ s Bτ is D.A-derivable, then by (a), |=HA Aτ s Bτ. By (c), this implies that |=A A s B, where |=A denotes the semantic consequence relation arising from the perfect members of class A. By (b), this implies that A s B is derivable in H, as required.

Cut elimination and subformula property
In the present section, we briefly sketch the proof of cut elimination and subformula property for D.A. As hinted to earlier on, proper display calculi have been designed so that the cut elimination and subformula property can be inferred from a meta- theorem, following the strategy introduced by Belnap for display calculi. The meta- theorem to which we will appeal for each D.A was proved in [9].

All conditions in [9, Theorem 4.1] except Cj
are readily satisfied by inspecting

the rules. Condition Cj
requires to check that reduction steps are available for

every application of the cut rule in which both cut-formulas are principal, which
either remove the original cut altogether or replace it by one or more cuts on for-

mulas of strictly lower complexity. In what follows, we only show Cj
for the unary

connectives.
Pure D-type connectives:
.
. π1




.
. π2



.
. π2
galD  ¬˜ A s Y 



.
. π1
 X s ¬˜ A  galD

 X s ¬˜ A  ¬	¬  ¬˜ A s Y 
 ¬˜ Y s A	A s ¬˜ X  CutD

 X s ¬A	¬A s Y  CutD
X s Y	~
 ¬˜ Y s ¬˜ X  cont
X s Y

The cases for ~α and – ξ of D.TQBA5 and its extensions are standard and similar to the one above.


Multi-type connectives:
.
. π1


.
. π2

.
. π1
Γ s ■ˇ A


.
. π2

.	.		I	 adDK	.

 Γ s ■ˇ I A  ■I
Γ s ■ A
I 	A s Y	
■ A s ■ˇ Y
◦˜I Γ s A
I

◦˜ Γ s Y
A s Y

	I	I	I	
Γ s ■ˇ I Y	~
adDKI   I	
Γ s ■ˇ I Y
.	.

.
. π1
.
. π2
. π1
	X s ◦˜I α
. π2
ad	 ◦˜I α s Y	

.	.	ˆ X	adDKI
DKI	ˇ Y

 X s ◦˜I α
 ◦˜I α s Y 
 ◆I  s α	α s ■I	

◦I
X s ◦ α
◦I
α s Y
◆ˆ X s ■ˇ Y

	I	I	
X s Y	~
The cases for ◆C A and ◦Cξ are analogous.

References
  I	I	 ◆ˆ I ■ˇ I
X s Y


Mohua Banerjee and Mihir Kumar Chakraborty. Rough sets through algebraic logic. Fundamenta Informaticae, 28(3, 4):211–221, 1996.
Marta B´ılkova´, Giuseppe Greco, Alessandra Palmigiano, Apostolos Tzimoulis, and Nachoem Wijnberg. The logic of resources and capabilities. The Review of Symbolic Logic, 1(2):371–410, 2018.
Garrett Birkhoff and John D. Lipson. Heterogeneous algebras. Journal of Combinatorial Theory, 8(1):115–133, 1970.
Stephen D. Comer. Perfect extensions of regular double stone algebras. Algebra Universalis, 34(1):96– 109, 1995.
Willem Conradie, Sabine Frittella, Krishna Manoorkar, Sajad Nazari, Alessandra Palmigiano, and Nachoem M. Wijnberg. Rough concepts. 2019, submitted.


Willem Conradie and Alessandra Palmigiano. Algorithmic correspondence and canonicity for non distributive logics. Annals of Pure and Applied Logic, 2019, to appear.
Brian A. Davey and Hilary A. Priestley. Introduction to lattices and order. Cambridge University Press, 2002.
Sabine Frittella, Giuseppe Greco, Alexander Kurz, and Alessandra Palmigiano. Multi-type display calculus for propositional dynamic logic. Journal of Logic and Computation, 26 (6):2067–2104, 2016.
Sabine Frittella, Giuseppe Greco, Alexander Kurz, Alessandra Palmigiano, and Vlasta Sikimi´c. Multi- type sequent calculi. In A. Indrzejczak, J. Kaczmarek, and M. Zawidski, editors, Proceedings Trends in Logic XIII, volume 13, pages 81–93, 2014.
Sabine Frittella, Giuseppe Greco, Alexander Kurz, Alessandra Palmigiano, and Vlasta Sikimi´c. A multi- type display calculus for dynamic epistemic logic. Journal of Logic and Computation, 26 (6):2017–2065, 2016.
Sabine Frittella, Giuseppe Greco, Alexander Kurz, Alessandra Palmigiano, and Vlasta Sikimi´c. A proof- theoretic semantic analysis of dynamic epistemic logic. Journal of Logic and Computation, 26(6):1961– 2015, 2016.
Sabine Frittella, Giuseppe Greco, Alessandra Palmigiano, and Fan Yang. A multi-type calculus for inquisitive logic. In J. Va¨¨an¨anen, A. Hirvonen, and R. de Queiroz, editors, International Workshop on Logic, Language, Information, and Computation, LNCS 9803, pages 215–233. Springer, arXiv preprint 1604.00936. 2016.
Giuseppe Greco, Peter Jipsen, Krishna Manoorkar, Alessandra Palmigiano, and Apostolos Tzimoulis. Logics for rough concept analysis. Proceedings of the eight Indian Conference on Logic and its Applications (ICLA 2019), LNCS 11600, arXiv preprint 1811.07149, 2019, forthcoming.
Giuseppe Greco, Alexander Kurz, and Alessandra Palmigiano. Dynamic epistemic logic displayed. In Proceedings of the 4th International Workshop on Logic, Rationality and Interaction (LORI-4), pages 135–148. Springer, 2013.
Giuseppe Greco, Fei Liang, M. Andrew Moshier, and Alessandra Palmigiano. Multi-type display calculus for semi De Morgan logic. In J. Kennedy and R. de Queiroz, editors, International Workshop on Logic, Language, Information, and Computation, pages 199–215. Springer, 2017.
Giuseppe Greco, Fei Liang, Alessandra Palmigiano, and Umberto Rivieccio. Bilattice logic properly displayed. Fuzzy Sets and Systems, doi: 10.1016/j.fss.2018.05.007, 2018.
Giuseppe Greco, Minghui Ma, Alessandra Palmigiano, Apostolos Tzimoulis, and Zhiguang Zhao. Unified correspondence as a proof-theoretic tool. Journal of Logic and Computation, 28(7):1367–1442, 2018.
Giuseppe Greco and Alessandra Palmigiano. Lattice logic properly displayed. In J. Kennedy and
R. de Queiroz, editors, International Workshop on Logic, Language, Information, and Computation, pages 153–169. Springer, 2017.
Giuseppe Greco and Alessandra Palmigiano. Linear logic properly displayed. ArXiv preprint 1611.04184. Submitted.
Tadeusz B. Iwinski. Algebraic approach to rough sets. Bullettin of the Polish Academy of Sciences. Mathematics, 35:673–683, 1987.
Fei Liang. Multi-type algebraic proof theory. PhD thesis, Delft University of Technology, 2018.
Minghui Ma, Mihir Kumar Chakraborty, and Zhe Lin. Sequent calculi for varieties of topological quasi-Boolean algebras. In International Joint Conference on Rough Sets, pages 309–322. Springer, 2018.
Alessandra Palmigiano, Sumit Sourabh, and Zhiguang Zhao. Sahlqvist theory for impossible worlds.
Journal of Logic and Computation, 27(3):775–816, 2017.
Zdzisaw Pawlak. Rough sets. International journal of computer & information sciences, 11(5):341–356, 1982.
Anirban Saha, Jayanta Sen, and Mihir Kumar Chakraborty. Algebraic structures in the vicinity of pre-rough algebra and their logics. Information Sciences, 282:296–320, 2014.
Anirban Saha, Jayanta Sen, and Mihir Kumar Chakraborty. Algebraic structures in the vicinity of pre-rough algebra and their logics ii. Information Sciences, 333:44–60, 2016.
Apostolos Tzimoulis. Algebraic and proof-theoretic foundations of the logics for social behaviour. PhD thesis, Delft University of Technology, 2018.
