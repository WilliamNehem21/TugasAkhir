	Electronic Notes in Theoretical Computer Science 167 (2007) 157–177	
www.elsevier.com/locate/entcs

Computable Riesz Representation for the Dual of C[0; 1]
Hong Lu1 ,2
Department of Mathematics Nanjing University
Nanjing 21009, PR. China
Klaus Weihrauch1 ,3
Department of Mathematics and Computer Science University of Hagen
Hagen, Germany

Abstract
By the Riesz representation theorem for the dual of C[0; 1], for every continuous linear operator
F : C[0; 1] → R there is a function g : [0; 1] → R of bounded variation such that
F (f )= Z f dg  (f ∈ C[0; 1]) .

The function g can be normalized such that V (g) =  F . In this paper we prove a computable version of this theorem. We use the framework of TTE, the representation approach to computable analysis, which allows to define natural computability for a variety of operators. We show that
there are a computable' operator S mapping g and an upper bound of its variation to F and a
computable operator S mapping F and its norm to some appropriate g.
Keywords: Computable analysis, integration, Riesz representation theorem


1 The author has been partially supported by the National Natural Science Foundation of China, NSFC 10 420 130 638 and the Deutsche Forschungsgemeinschaft, DFG: CHV 113/240/0-1.
2 Email: luhong@nju.edu.cn
3  Email: klaus.weihrauch@fernuni-hagen.de





1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2006.08.012

Introduction
The Riesz representation theorem is one of the fundamental theorems in Func- tional Analysis and General Topology.
Theorem 1.1 (Riesz representation theorem[2]) For every continuous linear operator F : C[a, b] → R there is a function g : [a, b] → R of bounded
variation such that



and
F (f )= ∫ f dg	(f ∈ C[a, b])

V (g)= F  .

As usual, C[a, b] is the set of continuous functions h : [a, b] → R on the real interval [a, b], equipped with the norm  h  = maxa≤x≤b |h(x)|. Its dual C'[a, b] is the set of continuous linear functions F : C[a, b] → R. The norm of F ∈ C'[a, b] is defined by F  = sup{|F (h)| | h ∈ C[a, b], h  = 1}.  f dg is the Riemann-Stieltjes integral and V (g) is the total variation of g : [a, b] → R. Let BV[a, b] be the set of functions g : [a; b] → R of bounded variation.
On the other hand, for every function g : [a, b] → R of bounded variation the operator f '→  f dg is linear and continuous on C[a, b]. Therefore, the dual space of the space C'[a, b] can be identified with a space of (appropriately normalized) functions of bounded variation on [a, b].
There are more abstract versions of the Riesz representation theorem, for example, for complex valued continuous functions with compact support on a locally compact Hausdorff space instead of C[a, b] and linear positive operators F [6]. In this article we study aspects of computability of the above simple version which can be found e.g. in [2]. We prove a computable version of this theorem in the framework of TTE. For given natural representations of the spaces we prove that there are computable operators mapping F to g and mapping g to F . For formulating and proving we use the concepts of Type-2 Theory of Effectivity, the representation approach to Computable Analysis [9]. Some aspects of computability of functions of bounded variation have been already studied in [5,11]
For convenience we consider only functions on the unit interval [0; 1]. The generalization to arbitrary intervals is straightforward.
In Section 2 we estimate the rate of convergence of a sequence of finite sums approximating the Riemann-Stieltjes integral. Section 3 contains the construction of a function g of bounded variation from F . In Section 4 we outline shortly some concepts of TTE and define the (multi-)representations of the sets we will use. The last section contains the main theorems. Because of the detailed preparations their proofs ar short.

Riemann-Stieltjes Integral
In this section we consider the definition of the Riemann-Stieltjes Integral (see for example [7]) and estimate the rate of convergence of a sequence of finite sums converging to the integral. We will need this rate for proving computability.
Let a, b be real numbers such that a < b. A partition of the interval [a; b] is a sequence Z = (x0, x1,... , xn) such that a = x0 < x1 < ... < xn = b. The partition Z has precision k, if xi − xi−1 ≤ 2−k for 1 ≤ i ≤ n. A partition

Z' = (x' , x' ,... , x' ) is finer than Z, if {x0, x1,... , xn}⊆{x' , x' ,... , x'
}. A

0	1	m	0	1	m
selection for Z is a sequence T = (t1,... , tn) such that xi−1 ≤ ti ≤ xi. For a
real function g : [a; b] → R define
n
S(g, Z) :=	|g(xi) − g(xi−1)|.	(1)
i=1
The variation of g is defined by
V (g) := sup{S(g, Z)|Z is a partition of [a; b]}.	(2)
A function g : [a; b] → R is of bounded variation if its variation V (g) is finite. In the following let f : [a; b] → R be continuous function and let g : [a; b] →
R be a function of bounded variation. For any partition Z = (x0, x1,... , xn) of [a; b] and any selection T for Z define
n
S(g, f, Z, T ) :=	f (ti)(g(xi) − g(xi−1)).	(3)
i=1
Every continuous function f : [a; b] → R has a (uniform) modulus of continuity, i.e., a function m : N → N such that |f (x) − f (y)| ≤ 2−k if
|x − y|≤ 2−m(k).
Lemma 2.1 Let f : [a; b] → R be continuous function with modulus of conti- nuity m : N → N. Let g : [a; b] → R be a function of bounded variation. Then there is a number I ∈ R such that
|I − S(g, f, Z, T )|≤ 2−kV (g)
for each partition Z of [a; b] with precision m(k + 1) and each selection T for
Z.
Proof: First, we prove that for any two partitions Z1, Z2 of [a; b] with precision
m(k + 1) and selections T1 and T2, respectively,
|S(g, f, Z1, T1) − S(g, f, Z2, T2)|≤ 2−kV (g) .

Let Z1 = (x0, x1,... , xn) with selection T1 = (t1,... , tn) and let Z' be a refinement of Z1 with selection T '. Then Z' can be written as


x0 = y1, y1,... , y1
= x1 = y2, y2,... , y2
= x2 ... ... = yn, yn,... , yn
= xn

0	1	j1
0	1	j2
1	jn

(j1,... , jn ≥ 1) and T ' as
t1, t1,... , t1 , t2, t2,... , t2 ,... ... t1 , t1 ,... , tn .
2	j1	1  2	j2	n  n	jn
such that yi	≤ ti ≤ yi. Then
l−1	l	l
|S(g, f, Z1, T1) − S(g, f, Z',T ')|

= Σ
f (t )
g(x ) − g(x
) − Σ
ji
f (ti)
 g(yi) − g(yi	)

i	i
i=1
i−1
i=1
l	l
l=1
l−1

= Σ
ji
f (t )
g(yi) − g(yi
) − Σ
ji
f (ti)
 g(yi) − g(yi	)

i=1
i	l
l=1
l−1
i=1
l	l
l=1
l−1

= Σ
ji
f (t ) − f (ti)
  g(yi) − g(yi	)

i=1 n
i	l	l
l=1 ji
l−1

≤ Σ Σ f (ti) − f (ti)  g(yi) − g(yi	) 
≤ 2−k−1 Σ Σ g(yi) − g(yi	)	since |ti − ti|≤ 2−m(k+1)

≤ 2−k−1V (g)
Now let Z' be a common refinement of Z1 and Z2 and let T ' be a selection for
Z'. Then
|S(g, f, Z1, T1) − S(g, f, Z2, T2)|
≤ |S(g, f, Z1, T1) − S(g, f, Z',T ')| + |S(g, f, Z2, T2) − S(g, f, Z',T ')|
≤ 2−kV (g)
Next, for each i ∈ N let Zi be a partition of [a; b] with precision m(i + 1) and a selection Ti. Then for i > j,
|S(g, f, Zi, Ti) − S(g, f, Zj, Tj)|≤ 2−jV (g) .
Therefore, the sequence (S(g, f, Zi, Ti))i is a Cauchy sequence converging to some I ∈ R. If Z is a partition with precision m(k + 1) and selection T , then for each i > k 

|I − S(g, f, Z, T )|≤ |I − S(g, f, Zi, Ti)| + |S(g, f, Zi, Ti) − S(g, f, Z, T )|
≤ 2−iV (g)+ 2−kV (g) ,
hence |I − S(g, f, Z, T )|≤ 2−kV (g).	 
Definition 2.2 [Riemann-Stieltjes integral]
∫ f dg := I (the real number defined in Lemma 2.1)

Construction of a Function of Bounded Variation
In this section for a given continuous linear operator F : C[0; 1] → R we construct a function g' : ⊆[0; 1] → R of variation F  such that F (h)= h dg for every h ∈ C[0; 1] and every extension g : [0; 1] → R of g' of bounded variation.
Let F : C[0; 1] → R be a linear continuous operator on the set C[0; 1] of continuous functions f : [0; 1] → R.  For a function h ∈ C[0, 1], and 0 ≤ a < b ≤ 1 define the function hab ∈ C[0, 1] as follows. The graph of hab is the union of the graph of h from 0 to a, the line from the point (a, h(a)) to (a + (b − a)/3, 0), the line from this point to the point (b − (b − a)/3, 0), the line from this point to (b, h(b)) and the graph of h from b to 1 (see Figure 1).
   hab










Fig. 1. The (a, b)-cut hab of h

Lemma 3.1 Suppose h ∈ C[0, 1], ε > 0 and 0 ≤ c < d ≤ 1. Then there are
a, b ∈ Q such that c < a < b < d and |F (h − hab)| < ε.
Proof: Suppose this is false. Then there are infinitely many pairwise disjoint intervals (ai; bi) in the interval (c; d) such that |F (h − haibi )| ≥ ε. For each
i ≤ N define
h := ⎧ h − haibi	if F (h − haibi ) ≥ 0
⎩ −(h − haibi ) otherwise.

Since haibi   ≤   h ,	hi   ≤ 2  h  .	Choose N  > 2  F 	h  /ε.	Since

N
i=0
hi  = maxN
hi ≤ 2  h  , |F (ΣN
hi)|≤F  ΣN
hi  ≤ 2  F h  .

On the other hand, since F (hi) ≥ ε, |F (ΣN
hi)| = | ΣN
F (hi)| =

N
i=0
F (hi) ≥ N · ε > 2 F	h . Contradiction.	 

The function dab := h−hab has a support in [a; b] and a very small “weight”
|F (dab)|. It cuts the function h into two pices ha and hb with disjoint supports such that F (h) and F (ha + hb) are almost the same. Such a cut is possible eveywhere in the interval [0; 1].
Let an approximate partition be a sequence π = (a1, b1,... , an, bn) (n ≥ 1) of rational numbers such that 0 < a1 < b1 < ... < an < bn < 1. Let b0 := 0 and an+1 := 1. An approximate partition π induces an approximate decomposition of the function 1I, 1I(x) = 1 for 0 ≤ x ≤ 1, into continuous functions f0,... , fn ∈ C[0, 1], which are polygons defined by the vertices of their graphs as follows (see Figure 2).

Fig. 2. Decomposition of 1I by a partition (a1, b1 ,..., an, bn)
For 1 ≤ i < n,
b1 − a1
f : (0, 1), (a , 1), (a +	), (1, 0),
0	1	1	3

f : (0, 0), (b − bi − ai , 0), (b , 1), (a
bi+1 − ai+1
, 1), (a	+	, 0), (1, 0),

i	i	3
i	i+1
i+1	3

f : (0, 0), (b − bn − an ), (b
, 1), (1, 1).

n	n	3	n
By the next lemma the function 1I can be partitioned into finitly many functions fi of Norm 1 with disjoint support, such that  |F (fi)| is arbitrarily close to F , and, in addition, for a given interval J ∈ L there is some i such that (ai; bi)⊆J .
Lemma 3.2 Let F  : C[0; 1] → R be continuous.  For every ε > 0 and every open interval in J ⊆[0; 1] there is an approximate partion π = (a1, b1,... , an, bn) such that

n
 F  − ε <	|F (fi)|≤F  ,	(4)
i=0
(∀ i, 1 ≤ i ≤ n) bi − ai < ε	(5)
and	(∃ i, 1 ≤ i ≤ n) [ai; bi]⊆J.	(6)
Proof: Let ε' := ε/(2 + F ). Since  F  = sup{F (h)| h  = 1}, there is some h ∈ C[0; 1] such that h =1 and
 F  − ε' < F (h).	(7)
Since h is uniformly continuous there is some ε1 > 0 such that
ε1 < ε' and |h(x) − h(y)| < ε' for |x − y|≤ ε1.	(8) Divide the interval (0; 1) into consecutive intervals (cj; dj) (j = 1,... , n) such that c1 = 0, dj = cj+1 and dn = 1 of length ≤ min(ε1, length(J ))/3. Ap-
ply Lemma 3.1 in turn to each of these intervals (cj; dj) (j = 1,... , n) with precision ε'/n. The result is a partition as shown in Figure 3.

Fig. 3. Approximate decomposition of 1I via h.
Notice that the ranges from ai to bi correspond to the range from a to b in Figure 1 and that the distance from Ei to (bi, 0) is (bi − ai)/3 and the distance from ai+1 to Fi is (bi+1 − ai+1)/3. For 1 ≤ i ≤ n − 1 define hi and gi as follows. The graph of hi is the union of the line segments from (0, 0) to Ei, from Ei to Ci, from Di to Fi and from Fi to (1, 0) and the section of graph(h) from Ci to Di. The graph of gi is the union of the line segments from (0, 0) to Ei, from Ei to Ai, from Ai to Bi, from Bi to Fi and from Fi to (1, 0), where the ordinate of Ai and Bi is min{h(x) | bi ≤ x ≤ ai+1}. The functions h0, g0, hn and gn are defined accordingly.
By the construction and Lemma 3.1 for the approximate partition π = (a1, b1,... , an, bn),
(∃ i)[ai; bi] ∈ J,	(9)
ai+1 − bi < ε1   for i = 1,... , n	(10)
N
and |F (h) −	F (hi)| < ε'.	(11)
i=0

It remains to prove (4). By (10) and (8),  hi − gi  ≤ ε' for 0 ≤ i ≤ n and
hence  Σn  (hi − gi)  ≤ ε' (since the (hi − gi) have disjoint supports). We
obtain
n



and
|F (	(hi − gi))|≤ ε'  F 	(12)
i=0
 F  − F Σ gi ≤ F (h) − F Σ gi + ε'	by (7)
≤ |F (h) − F (Σ hi)| + |F (Σ hi) − F Σ gi| + ε'

< ε' + |F (	(hi − gi))| + ε'	by (11)
i=0
≤ ε'(2 + F ) ≤ ε	by (12).

For i = 0,... , n let fi be the function from the decomposition of 1I induced by the approximate partition π = (a1, b1,... , an, bn). If gi =0 then |F (gi)| = 0 ≤ |F (fi)|. Otherwise,


|F (g )| = |F (|g |)| = g
 |gi|
|F (	)|g
|F (|f |)|≤ |F (f )|

i	i	i		i	i	i i
Since F  − F Σ gi < ε (see above),
F	− ε < F Σ gi = Σ F (gi) ≤ Σ |F (gi)|≤ Σ |F (fi)| .
Finally, for each i there is some αi ∈ {−1, 1} such that |F (fi)| = F (αifi). Since   αifi  = 1,
Σ |F (fi)| = Σ F (αifi)= F (Σ αifi) ≤ F  .
Thus we have proved (4).
Since the adjacent intervals (cj, dj) have length ≤ length(J )/3, there is some i such that [ai; bi]⊆J . This proves (6). Finally bi − ai ≤ di − ci < ε1 < ε' < ε.	 
In tΣhe proof the differences ai+1 − bi are made small in order to get Σ hi close
cutting remain small according to Lemma 3.1.
We introduce some terminology. For d ∈ C[0; 1] let supp(d) (the support of d) be the closure of the set {x | d(x) /= 0}. For 0 ≤ a < b ≤ 1 let (a; b)/3 := (a + (b − a)/3; b − (b − a)/3). The slanted step at (a, b) is the function s ∈ C[0; 1] the graph of of which is a polygon with the vertices (0, 1), (a, 1), (b, 0), (1, 0). Let v(s) := (a; b)⊆[0, 1].

In Lemma 3.2 the operator F has small values for every function the sup- port of which does not intersect the supports of the functions fi, see also Figure 2.
Corollary 3.3 Let π be the approximate partition from Lemma 3.2.
If d ∈ C[0; 1] such that supp(d)⊆  n  (ai; bi)/3 then |F (d)|≤ ε  d  .
If s, s' are slanted steps s.th. v(s), v(s')⊆(ai; bi)/3 for some 1 ≤ i ≤ n, then |F (s) − F (s')|≤ ε.
Proof:  i.	This is true for d = 0.	Assume d   = 1.	There are signs
σ, σi ∈ {−1, 1} such that |F (fi)| = F (σifi) and F (σd) = |F (d)|.	Since

 σd + Σn
(σifi)  = 1,
n	n

|F (d)| + Σ |F (fi)| = F (σd)+ Σ F (σifi))

i=0

= F	σd +
i=0
Σi=0

(σifi)

Since  F	− ε ≤ Σn

≤ F  .
|F (fi)| by (4), |F (d)| ≤ ε.	If  d   > 0, consider

Apply i. to d := (s − s').	 

Lemma 3.4 For every linear and continuous F	:	C[0; 1]	→		R and every open interval J ⊆[0; 1] there are a sequence (πk)k∈N		, πk	=

(ak, bk, ak, bk,... , ak , bk
), of approximate partitions, a sequence (ik)k∈N, 1 ≤

1	1	2	2	nk	nk
ik ≤ nk, of indices and a sequence (sk)k∈N of slanted steps such that for all k,
nk
−k	k
i
i=0
(∀ i) bk − ak < 2−k ,	(14)
i	i
(a0 ; b0 )⊆J ,	(15)
i0	i0
[ak+1 ; bk+1 ] ⊆ (ak ; bk )/3	(16)

ik+1
ik+1
ik	ik

v(sk)⊆(ak ; bk )/3 .	(17)
ik	ik
Proof: For π0 and i0 apply Lemma 3.2 to ε = 2−0 =1 and J . For πk+1 and
ik+1 apply Lemma 3.2 to ε = 2−k−1 and J ' := (ak ; bk )/3. The slanted steps
ik	ik
sk can be chosen appropriately.	 

Lemma 3.5 For the slanted steps sk in Lemma 3.4, |F (sm) − F (sl)| ≤ 2−k
if k ≤ l ≤ m.
Proof: This follows from Corollary 3.3.i and (16,17).	 

Definition 3.6 For the operator F and the interval J let (πk)k∈N, (ik)k∈N and (sk)k∈N be the sequences from Lemma 3.4. Define
xJ :=  [ak ; bk ],	yJ := lim F (sk) .	(18)
By (16) and Lemma 3.5, the numbers xJ and yJ are well-defined and
(∀ k) |yJ − F (sk)| ≤ 2−k .	(19)
Let (Ki)i∈N be a canonical numbering of the set of all open subintervals (c, d)⊆[0; 1] with c, d ∈ Q. For each i let xKi and yKi be real numbers defined via sequences (πk)k∈N and (ik)k∈N according to Lemma 3.4 and (18). Then the set of all xKi is dense in [0; 1]. Let
G0 := {(xKi, yKi ) | i ∈ N} ,	(20)
G' := G0 ∪ {(0, 0), (1,F (1I))} .	(21)
Lemma 3.7	(i) The set G0 is the graph of a continuous function g0.
(ii) The function g' with graph G' has variation V (g')= F .
Here, as a generalization of (2), we define the variation V (g') of the function
g' with dom(g')⊆[0; 1] by
V (g') := sup{S(g', Z)|(∃ x0,... , xn ∈ dom(g'))
Z = (x0,... , xn) is a partition of [0; 1]} .
Proof: First we show:

lim
i→∞
yi = y	if	(x, y), (x0, y0), (x1, y1),... ∈ G0 and	lim
i→∞
xi = x	(22)

Let ε > 0. The pair (x, y) is determined by some sequence of approximate partitions (πk)k according to Lemma 3.4 and Definition 3.6. Therefore, there some number k and a slanted step sk such that
(x − ε; x + ε)⊆(ak ; bk )/3 for some ε > 0 ,	(23)
ik	ik
|y − F (sk)| ≤ 2−k  and v(sk)⊆(ak ; bk )/3 .	(24)
ik	ik
There is some j such that |x − xj| < ε/2. Let (π¯m)m be the sequence of ap- proximate partitions defining (xj, yj) and let s¯m be the slanted steps according to Lemma 3.4. Let i be a number such that i > k and 2−i < ε/2. By (19)
|yj − F (s¯i)|≤ 2−i and v(s¯i)⊆(x − ε; x + ε) .	(25)

By (23,24,25),

v(sk), v¯(si)⊆(ak ; bk )/3 .

ik	ik
By Corollary 3.3, |F (sk) − F (s¯i)|≤ 2−k Therefore,
|y − yj|≤ |y − F (sk)| + |F (sk) − F (s¯i)| + |F (s¯i) − yj|
≤ 2−k + 2−k + 2−i
≤ 2−k+2 .
This proves (22).
Suppose (x, y), (x, y') ∈ G0. Apply (22) to (x, y) and the sequence
(x, y), (x, y'), (x, y), (x, y'),... .

Then the sequence y, y', y, y',... converges, hence y = y'. Therefore, G0 is the graph of a function g0 which is continuous by (22).
ii. First we show S(g', Z) ≤  F  for any partition Z = (x0, x1,... , xn) in dom(g'). Let yi := g'(xi) and ε > 0. Let c < (xi − xi−1)/2 for i = 1,... , n.
For every i there is some slanted steps si such that
ε
v(si)⊆(xi − c; xi + c) and |F (si) − yi|≤ 2n .	(26)
Then
|y − y | = |F (s )| + |F (s ) − y | ≤ |F (s )| + ε ,

1	0	1

1	1	1	2n

ε

|yn − yn−1| = |F (1I) − F (sn)| + |F (sn) − yn−1|≤ |F (1I − sn)| + 2n
and for 1 < i < n,
|yi − yi−1|≤ |yi − F (si)| + |F (si) − F (si−1)| + |F (si−1) − yi−1|


Therefore,
n
≤ |F (si
— si−1
ε
)| +2	.
2n


n−1

Σ |yi − yi−1| ≤ |F (s1)| + Σ |F (si − si−1)| + |F (1I − sn)| + ε


There are signs αi ∈ {−1, 1} such that |F (s1)| = F (α1s1), |F (1I − sn)| = F (αn(1I − sn)) and |F (si − si−1)| = F (αi(si − si−1)) for 1 < i < n. Since α1s1 +  n−1(αi(si − si−1)) + αn(1I − sn)  = 1,

n
S(g', Z)=	|g'(xi) − g'(xi−1)|
i=1
n−1
= |F (s1)| +	|F (si − si−1)| + |F (1I − sn)| + ε
i=2
n−1
= F (α1s1)+	F (αi(si − si−1)) + F (αn(1I − sn)) + ε
i=2

= F  α1s1 +
n−1

i=2
(αi(si − si−1)) + αn(1I − sn)	+ ε

≤ F  + ε. 
Since this is true for all ε > 0 and all Z, V (g') ≤ F .
For the other direction it suffices to show that (∀ε > 0)(∃Z)  F  − 
ε  ≤  S(g', Z).	By Lemma 3.2 there is an approximate partition π  =
(a1, b1,... , an, bn) such that F  − ε/3 ≤ Σn	|F (fi)| (Figure 2).	For
1 ≤ i ≤ n define slanted steps ui and vi by the vertices of their graphs as follows:
ui : (0, 1), (ai, 1), (ai + (bi − ai)/3, 0), (1, 0)
vi : (0, 1), (bi − (bi − ai)/3, 1), (bi, 0), (1, 0) .
Then
f0 = u1,  fi = ui+1 − vi (for 1 ≤ i < n) and fn = 1I − vn	(27)
Since the first projection of G0 is dense in (0; 1) (20), for 1 ≤ i ≤ n there are pairs (xi, yi) ∈ G0 and slanted steps si such that
xi ∈ (ai; bi)/3,  v(si)⊆(ai; bi)/3	and |F (si) − yi|≤ ε'	(28)
for ε' := ε/(6n). We consider the partition Z := (0 = x0, x1,... , xn, xn+1 = 1).
Let αi, βi, γi ∈ {−1, 1} be signs and let
h := β0u1 + γ1(s1 − u1)
n−1
+	(αi(vi − si)+ βi(ui+1 − vi)+ γi(si+1 − ui+1))
i=1
+αn(vn − sn)+ βn(1I − vn)
Choose the signs such that F (β0u1) ≥ 0, F (γ1(s1 − u1)) ≥ 0, ...,
F (βn(1I − vn)) ≥ 0. It is seen easily that h  = 1. Since |F (fi)| = F (βifi),

F (h) := |F (f0)| + |F (s1 − u1)|
n−1
+	(|F (vi − si)| + |F (fi)| + |F (si+1 − ui+1)|)
i=1
+|F (vn − sn)| + |F (fn)| .
We obtain
n
 F  − ε/3 ≤	|F (fi)|≤ F (h) ≤ F  ,
i=0

and therefore,

n−1

|F (s1 − u1)| +	(|F (vi − si)| + |F (si+1 − ui+1)|)+ |F (vn − sn)|≤ ε/3 .(29)
i=1
Finally,
n
 F  − ε/3 ≤	|F (fi)
i=0
n−1
= |F (u1)| +	|F (ui+1 − vi)| + |F (1I − vn)|	by (27)
i=1
≤ |y1| + |F (s1) − y1| + |F (u1) − F (s1)|
n−1
+	(|F (ui+1 − si+1)| + |F (si+1) − yi+1| + |yi+1 − yi|
i=1
+|yi − F (si)| + F (si − vi)|)
+|F (1I) − yn| + |yn − F (sn)| + |F (sn) − F (vn)|
n+1
≤	|yi − yi−1| + 2nε' + ε/3	by (28, 29)
i=1
= S(g', Z)+ 2nε' + ε/3 .
We obtain F  − ε ≤ S(g', Z).	 
Let g : [0, 1] → R be a function of bounded variation which extends g'.
Lemma 3.8 For every continuous function h : [0, 1] → R, F (h)=	h dg.
Proof: Let K ∈ N. There is some a ∈ N such that V (g) ≤ 2a. Let m : N → N be an increasing modulus of continuity of the function h. We construct a partition Z of precision m(K +2+ a) and a selection T for Z such that
|F (h) − S(g, h, Z, T )|≤ 2−K−1 .	(30)
Then by Lemma 2.1, |F (h) − ∫ h dg|≤ |F (h) − S(g, h, Z, T )| + |S(g, h, Z, T ) −

h dg| ≤ 2−K−1 + 2−K−1−aV (g) ≤ 2−K. Since this is true for all K, F (h) = 
h dg.
Let ε := 2−K−1/((2n + 1)  h  +  F ). Since h is unifomly continuous there is some ε' > 0 such that |h(x) − h(x')| ≤ ε if |x − x'| ≤ ε'. By Corollary 3.3,
Lemma 3.4 and (19) there are
– (x0, y0), (x1, y1),... , (xn+1, yn+1) ∈ G',
rational numbers ci < di (1 ≤ i ≤ n)
and slanted steps ui, vi (1 ≤ i ≤ n)
such that Z = (0= x0, x1,... , xn+1 = 1) is a partition with
xi − xi−1 < ε'/2 for i = 1,... ,n + 1	(31) and for i = 1,... , n,
ci < xi < di,  di − ci < (xj − xj−1)/2 for 1 ≤ j ≤ n + 1,	(32)
v(ui), v(vi) ∈ (ci; di),  v(ui) < v(vi),	(33)
|F (ui) − yi| < ε,  |F (vi) − yi| < ε,	(34)
|F (d)| < ε  d   if	supp(d)⊆[ci; di] .	(35)


ˆ v. .1.. 
.
. .A.. . .
B	fi C
v.i. .
.
v. .n..	ˆ
.

u1 ..
..
..
..
..
..
0 。	..

. . . 



/’
ui−1




D
 `
. . .v.
. .i−1
. . . .
. . . .


. . . .



. . . .




. . .E
. .
ui	..
..
..
..
..
..
F	.
..

. . . 
un ..
..
..
..
..
..
..	)1

c1 x1
ˆ
d1 /
i−1
 
xi−1
//’ ci
i−1
xi  di	cn xn dn
ˆ



f (ti)
。
h	G	H
L	hi
I	J gi
 F

ˆ
< 2ε1
v
)

M D	ti	xi
Fig. 4. Approximate decomposition of 1I via h.

In Figure 4 the slanted step vi−1 is given by the line segments via the points (0, 1), A, E, (1, 0) and ui by (0, 1), C, F, (1, 0). Let
f1 := u1, fi := ui − vi−1 (2 ≤ i ≤ n), fn+1 := 1I − vn .	(36) For example, fi is given by the points (0, 0), D, B, C, F, (1, 0).
In each interval (ci−1; di−1) (i = 2,... , n+1) we “pull” the function h down
as shown in the lower part of Figure 4 where the arc from L to G is pulled

down to L, M, D, G. Let ei−1 be the continuous function such that ei−1(x)= 0 for x left to L and right to G and ei−1(x) = 0 is the length the function h has been pulled down at x otherwise. Then
supp(ei)⊆(ci; di) and ei  ≤ h   for 1 ≤ i ≤ n.	(37)
The function h − Σn	ei can be written as Σn+1 hi with pairwise disjoint
supports. In Figure 4 the function hi is given by the sequence of vertices (0, 0), D, G, H, F, (1, 0).
Let T = (t1,... , tn+1) be a selection for Z. Define
gi := h(ti)fi [0 ≤ i ≤ n + 1] .	(38)
In Figure 4 the function gi is given by the sequence of vertices (0, 0), D, I, J, F, (1, 0).

By (35,37), |F (ei)| ≤ ε  h  . Since h = Σn
ei + Σn+1 hi


 F (h) − F
 Σn+1
= Σ
F (e ) ≤ Σ

|F (e )|≤ nε h .	(39)

i
i=1

i=1		 
i
i=1

Since |xi − xi−1| ≤ ε'/2,  hi − gi	≤ ε, hence  Σn+1 hi − Σn+1 gi   ≤ ε.



n+1
F	hi	− F
¨	i=1

n+1

i=1
gi ¨

≤ F  ε.	(40)

By (36,38),
F (g1)= h(t1)F (u1),
F (gi)= h(ti)(F (ui) − F (vi−1))	(2 ≤ i ≤ n), F (gn+1)= h(tn+1)F (1I − vn) .
By (34),

	 Σn+1
— S(g, h, Z, T )
n+1
= 
n+1
F (g ) −	h(t )(y − y	)

i
i=1
i=1
i	i	i
i=1
i−1








As a summary,
= |h(t1)(F (u1) − y1)
n
+	h(ti)(F (ui) − F (vi−1) − (yi − yi−1))
i=2
+h(tn+1)(F (1I − vn) − (F (1I) − yn))|
n
≤ |h(t1)|ε +	2|h(ti)|ε + |h(tn+1)|ε
i=2
≤ (n + 1) h ε. 

|F (h) − S(g, h, Z, T )|≤ nε h  + F  ε + (n + 1) h ε = 2−K−1 .



The Computability Background
For studying computability we use the representation approach (TTE) to Computable Analysis [9]. Let Σ be a finite alphabet. Computable functions on Σ∗ (the set of finite sequences over Σ) and Σω (the set of infinite sequences over Σ) are defined by Turing machines which map sequences to sequences (fi- nite or infinite). On Σω finite or countable tupling will be denoted by ⟨ ⟩ [9]. Sequences are used as “names” of abstract objects. We generalize the concept of representations in [9] to multi-representations and consider computability of multi-functions w.r.t. multi-representations (see [10] for the definition, which differs from that in [8], and [3] for an application).
A multi-function is a triple f = (A, B, Rf ) such that Rf ⊆A × B, which we will denote by f : ⊆A ⇒ B. For X⊆A let f [X] := {b ∈ B | (∃a ∈ X)(a, b) ∈
R} and for a ∈ A define f (a) := f [{a}]. Notice that f is well-defined by the
values f (a)⊆B for all a ∈ A. We define dom(f ) := {a ∈ A | f (a) /= ∅}. For muli-functions f : ⊆ A ⇒ B and g : ⊆ C ⇒ D we define the composition
g ◦ f : ⊆ A ⇒ D by
a ∈ dom(g ◦ f ): ⇐⇒ a ∈ dom(f ) and f (a)⊆dom(g) ,	(41)
g ◦ f (a)	:=	g[f (a)] .	(42)
Notice that (42) without (41) corresponds to ordinary relational composition of Rf and Rg. For a multi-function f ⊆M1 ⇒ M0 we will usually interpret
f (x)⊆B as the set of “acceptable” values for the argument x ∈ M1.
Definition 4.1 [multi-representation]
A multi-representation of a set M is a surjective multi-function δ : ⊆Σω ⇒ M .
A multi-representation δ : ⊆Σω ⇒ M can be considered as a naming system for the points of a set M , where each name can encode many points.
Therefore, x ∈ δ(p) is interpreted as “p is a name of x”. We generalize the concept of realization of a function or multi-function w.r.t. (single-valued) representations [9] to multi-representations as follows [10]:
Definition 4.2 [realization]
For multi-representations γi : ⊆ Yi ⇒ Mi (i = 0,... , k), abbreviate Y  :=
Y1 × ... × Yk, M := M1 × ... × Mk, and γ(y1,... , yk): γ1(y1) × ... × γk(yk).
Then a function h : ⊆ Y → Y0 is a (γ, γ0)-realization of a multi-function
f : ⊆ M ⇒ M0, iff for all p ∈ Y and x ∈ M ,

x ∈ γ(p) ∩ dom(f ) =⇒ f (x) ∩ γ0 ◦ h(p) /= ∅ .	(43)
The multi-function f is called (γ, γ0)-computable, if it has a computable (γ, γ0)-realization.
(We will say (γ1,... γk, γ0)-computable instead of (γ, γ0)-computable, etc.)
Fig. 5 illustrates the definition. Whenever p is a γ-name of x ∈ dom(f ), then h(p) (the sequence of symbols computed by a machine for h) is a γ0-name of some y ∈ f (x).


p
/\.
/ \
h	) h(p)
/\.
/ \

/  \
/	\
γ /	\
/	\
/	\1
/r




ccccs
/  \
/	\
/	\γ0
/	\
/	\1
/r

vccc
. zzz
zfzzz,
v
.
∃ y ∈ f (x) ∩ γ0 ◦ h(p)

Fig. 5. h(p) is a name of some y ∈ f (x), if p is a name of x ∈ dom(f ).
For two multi-representations δi⊆Σω ⇒ Mi (i = 1, 2), δ1 ≤ δ2 (“reducible to”) iff (∀ p ∈ dom(δ1)) δ1(p)⊆δ2h(p) for some computable function h : ⊆Σω →
Σω.
If multi-functions on represented sets have realizations, then their com- position is realized by the composition of the realizations. In particular, the computable multi-functions on represented sets are closed under composition. Much more generally, the computable multi-functions on multi-represented sets are closed under flowchart programming with indirect addressing [10]. This result allows convenient informal construction of new computable func- tions on multi-represented sets from given ones.
For the real numbers we use the Cauchy representation ρ : ⊆Σω → R, for the set of continuous real functions on the unit interval the Cauchy rep- resentation δC : ⊆Σω → C[0; 1] defined via the dense set of rational polygons
(Definitions 4.1.5 and 6.1.9 in [9]). For the space C˜ of continuous functions
F : C[0; 1] → R there is a canonical representation [δC → ρ] (Definitions 3.1.13 in [9]). For this representation we have the type conversion lemma (Theorem 3.3.15 in in [9]).
Lemma 4.3 (type conversion) For every representation δ of the space C˜, the function eval: (F, h) '→ F (h) is (δ, δC, ρ)-computable, iff δ ≤ [δC → ρ].

Since the dulal C'[0; 1] is a subset of C˜, we can use the representation [δC → ρ] for it. The norm   : C'[0; 1] → R is ([δC → ρ], ρ<)-computable (a ρ<-name of x ∈ R is an (encoded) increasing sequence of rational numbers converging to x [9]). The multi-function UB : C'[0; 1] ⇒ R, a ∈ UB(F ) ⇐⇒  F  < a,
is ([δC → ρ], ρ)-computable. But the norm is not ([δC → ρ], ρ)-computable [1]
since the space (C'[0; 1],   ) is not separable [4].
For the set B = {m | m : N → N} we consider the representation δB defined by δB(p) = m, iff p = 1m(0)01m(1)01m(2)0 ... . By Lemma 6.2.7 in [9], a modulus of continuity m can be computed for every function h ∈ C[0; 1]:
Lemma 4.4 The multi-function MC : C[0; 1] ⇒ B such that m ∈ MC(h) iff
m : N → N is a uniform modulus of continuity of h : [0; 1] → R is (δC, δB)-
computable.
Finally, for the set BV[0; 1] of functions g : [0; 1] → R of bounded variation we define a multi-representation δBV by g ∈ δBV(p) iff p =
⟨r0, r1, p0, q0, p1, q1,.. .⟩ such that
g(0) = ρ(r0),  g(1) = ρ(r1),
{ρ(pi) | i ∈ N} is dense in [0; 1], gρ(pi)= ρ(qi) for i ∈ N .
Remember that by Lemma 2.1 the values of g on a dense set are sufficient to approximate f dg for continuous f .

The Main Results
First, we show that Riemann-Stieltjes integration h dg is computable in h and g. As an additional information for the computation we use some upper bound of V (g), the variation of g.
Theorem 5.1 Deﬁne the operator S : ⊆BV[0; 1]×R → C'[0; 1] by dom(S) :=
{(g, b) | V (g) < b} and and S(g, b)(h)=	h dg for all h ∈ C[0; 1]. Then S is
(δBV, ρ, [δC → ρ])-computable.
Proof: First we show how h dg can be computed from g, b and h. We assume that the function g is given by some δBV-name p = ⟨r0, r1, p0, q0, p1, q1,.. .⟩, the bound b by some ρ-name and the continuous functionb h by some δC-name. For h we can compute some uniform modulus m of continuity (Theorem 6.2.7 in [9]). ¿From b we can compute some l ∈ N such that b ≤ 2l. ¿From g, k and l we can compute points
(x0, y0), (x1, y1),... , (xn, yn) ∈ graph(g) such that π = (x0, x1,... , xn) is a partition of precision m(k +1+ l). For the selection T := (x1,... , xn) for π

according to (3) we can compute

n
S(g, h, Z, T ) :=	f (xi)(yi − yi−1).
i=1
By Lemma 2.1,
S(g, h, Z, T ) − ∫ h dg ≤ 2−k−lV (g) ≤ 2−k−lb ≤ 2−k .

Therefore, from g, b and h we can compute a sequence (zk)k∈N of real numbers such that |zk −	h dg| ≤ 2−k. Since the limit o∫f such sequences is
is (δBV, ρ, δC, ρ)-computable. By type conversion, Theorem 3.3.15 in [9], the operator S is (δBV, ρ, [δC → ρ])-computable.	 


Theorem 5.2 Deﬁne the operator S' : ⊆C'[0; 1] × R ⇒ BV[0; 1] by
g ∈ S'(F, c), iff c = F  = V (g) and F (h)=	h dg for all h ∈ C[0; 1]. Then
S' is ([δC → ρ], ρ, δBV)-computable.

Proof: We assume that F is given by some [δC → ρ]-name and c by some ρ-name. We want to compute some δBV-name p = ⟨r0, r1, p0, q0, p1, q1,.. .⟩ of some appropriate function g.  Since by Lemma 4.3 (F, h) '→ F (h)
is computable, the function, mapping each approximate partition π  =
(a1, b1,... , an, bn) to Σn	|F (fi)|, see Section 3, is computable.  Since ex-
istence is guaranteed by Lemma 3.2, for each interval J with rational end points and for each k by exhaustive search some approximate partiton π can be computed such that
n
 F  − 2−k <	|F (fi)|≤ F  ,	(44)
i=0
(∀ i, 1 ≤ i ≤ n) bi − ai < 2−k	(45)
and	(∃ i, 1 ≤ i ≤ n) [ai; bi]⊆J.	(46)
Since existence is guaranteed by Lemma 3.4, For each m a sequence (πk)k∈N ,

πk = (ak, bk, ak, bk,... , ak , bk
), of approximate partitions, a sequence (ik)k∈N,

1	1	2	2	nk	nk
1 ≤ ik ≤ nk, of indices and a sequence (sk)k∈N of slanted steps can be computed
such that for all k,

nk
−k	k
i
i=0
(∀ i) bk − ak < 2−k ,
i	i
(a0 ; b0 )⊆Km ,
i0	i0
[ak+1 ; bk+1 ] ⊆ (ak ; bk )/3

ik+1
ik+1
ik	ik

v(sk)⊆(ak ; bk )/3 .
ik	ik
Then according to Lemma 3.5 and Definition 3.6 numbers xKi and yKi can be computed.
Therefore, from F and c = F  sets
G0 := {(xKi, yKi ) | i ∈ N} ,
G' := G0 ∪ {(0,F (0)), (1,F (1I))}
can be computed such that Lemmas 3.7 holds true. Computing means to find r0, r1, pi, qi ∈ Σω such that ρ(r0) = 0, ρ(r1) = F (1I), ρ(pi) = xKi and ρ(qi)= yKi . Then for any function g : [0; 1] → R of bounded variation which extends g',
g ∈ δBV(p),	p := ⟨r0, r1, p0, q0, p1, q1,.. .⟩
There is an extension g[0; 1] → R of g' such that V (g) = V (g') = F . For x ∈ [0; 1] \ dom(g') define g(x) := lim{g'(x') | x' < x}. By Lemma 3.8, F (h)= h dg for all h ∈ C[0; 1].
Therefore, the operator S' is ([δC → ρ], ρ, δBV)-computable.	 

The above proof uses the norm of F explicitly. As we have already men- tioned in Section 4, F  cannot be computed from F .

References
Brattka, V., Computable versions of the uniform boundedness theorem, in: Z. Chatzidakis,
P. Koepke and W. Pohlers, editors, Logic Colloquium 2002, Lecture Notes in Logic 27 (2006).
Goffman, C. and G. Pedrick, “First Course in Functional Analysis,” Prentince-Hall, Englewood Cliffs, 1965.
Grubba, T. and K. Weihrauch, A computable version of Dini’s theorem for topological spaces, in: P. Yolum, T. Gu¨ng¨or, F. Gu¨rgen and C. O¨ zturan, editors, Computer and Information Sciences - ISCIS 2005, Lecture Notes in Computer Science 3733 (2005), pp. 927–936, 20th International Symposium, ISCIS, Istanbul, Turkey, October 2005.
Heuser, H., “Funktionalanalysis,” B.G. Teubner, Stuttgart, 1986, 2. edition.
Ko, K.-I., “Complexity Theory of Real Functions,” Progress in Theoretical Computer Science, Birkha¨user, Boston, 1991.
Rudin, W., “Real and Complex Analysis,” McGraw-Hill, New York, 1974, 2nd edition.

Schechter, E., “Handbook of Analysis and Its Foundations,” Academic Press, San Diego, 1997.
Schr¨oder, M., Admissible representations for continuous computations, Informatik Berichte 299, FernUniversit¨at Hagen, Hagen (2003), dissertation.
Weihrauch, K., “Computable Analysis,” Springer, Berlin, 2000.
Weihrauch, K., Multi-functions on multi-represented sets are closed under flowchart programming, in: T. Grubba, P. Hertling, H. Tsuiki and K. Weihrauch, editors, Computability and Complexity in Analysis, Informatik Berichte 326 (2005), pp. 267–300, proccedings, Second International Conference, CCA 2005, Kyoto, Japan, August 25–29, 2005.
Zheng, X. and R. Rettinger, Effective Jordan decomposition, Theory of Computing Systems
38 (2005), pp. 189–209.
