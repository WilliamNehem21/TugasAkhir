

Electronic Notes in Theoretical Computer Science 242 (2009) 31–42
www.elsevier.com/locate/entcs

Performance Evaluation of Sensor Medium Access Control Protocol Using Coloured Petri Nets
Mohammad Abdollahi Azgomi1	Ali Khalili2
Performance and Dependability Engineering Lab.
Department of Computer Engineering Iran Univaersity of Science and Technology
Tehran, Iran

Abstract
Formal modeling techniques can be used for analysis of wireless sensor networks (WSNs). Coloured Petri nets (CPNs) that is an extension of Petri nets is a powerful modeling technique. In this paper, we present a CPN model for modeling and performance evaluation of a medium access control protocol in WSNs named sensor- medium access control protocol (S-MAC). S-MAC is an energy-aware MAC protocol with nodes scheduling.
The proposed model for this protocol uses the hierarchical modeling capability of CPNs. By using CPNs in this case study and the proposed method for modeling packet broadcast, we have demonstrated the possibility of modeling and evaluation of any other MAC protocol in WSNs or mobile ad-hoc networks (MANET).
Keywords: Medium Access Control Protocols, Coluored Petri Nets, Wireless Sensor Networks, Formal Methods


Introduction
Wireless sensor networks (WSNs) consist of a set of small, cheap, and low-power sensor nodes that use wireless technology for communications. Comparing to other types of networks, WSNs have some notable limitations, such as processing ability, memory capacity and battery life-time. As a result of these limitations and the requirements for some new protocols, much research is engaged in this field [1].
The general approach for analysis of WSNs is to use the existing simulation tools or simulators, such as OPNET [13], NS-2 [11] and etc. For using these tools, we must consider that the result of simulating an algorithm may be different, depending on the selected tool, because of important divergence between simulators [3]. An

1 Email: azgomi@iust.ac.ir
2 Email: al khalili@comp.iust.ac.ir

1571-0661 © 2009 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2009.06.021

alternative to simulation is to employ formal modeling and analysis techniques. Using these techniques, both performance evaluation and model checking can be performed. While this approach is widely used in traditional networks, advanced WSNs algorithms and protocols present a set of challenges to be formally modeled by the existing methods and tools, some of which are addressed in [12].
Coloured Petri nets (CPNs) [7], which are an extension of Petri nets, are an appropriate modeling language. CPNs have a graphical notation that is based on an underlying mathematical definition and provide several analysis methods, including simulation, state space analysis and invariant analysis. A major benefit of using CPNs is to obtain complete and unambiguous specifications of system behavior.
As a case study, we have used CPNs and CPN-Tools [4] for performance evalu- ation of sensor-medium access control protocol (S-MAC). The results are presented in this paper.
The remainder of the paper is organized as follows. In section 2, some back- ground information is provided. In section 3, the related works are introduced. Section 4, describes the modeling approach used in the case study and the conse- quent results are given in section 5. Finally, some concluding remarks are mentioned in section 6.

Background
In this section, we give some preliminaries. First, a summary about Coloured Petri Nets is given and then informal description of S-MAC protocol will be provided.

Coloured Petri Nets
Coloured Petri nets (CPNs) is an extension of Petri Nets (PNs) which is well known for its capability and flexibility in modeling complex systems.
The structure of a Petri net is a bipartite directed graph describing the structure of a discrete event system, while the dynamics of the system is described by the execution of the Petri net. A Petri net is coloured if the tokens are distinguishable.

Definition 2.1 A Coloured Petri net is a tuple CPN = (Σ, P,T, A, N, C, G, E,IN ) satisfying the following requirements:
Σ is a finite set of non-empty types, called colour sets,
P is a finite set of places,
T is a finite set of transitions,
A is a finite set of arcs such that P ∩ T = P ∩ A = T ∩ A = ∅,
N : A → P × T ∪ T × P is a node function,
C : P → Σ is a colour function,
G is a guard function which is defined from T into expressions such that
∀t ∈ T : [T ype(G(t)) = Bool ∧ Type(V ar(G(t))) ⊆ Σ],

E is an arc function which is defined from A into expressions such that
∀a ∈ A : [T ype(E(a)) = C(p(s))MS ∧ Type(V ar(E(a))) ⊆ Σ] where p(a) is the place of N (a) and CMS denotes the set of all multi-sets over C,
IN is an initialization function which is defined from P into expressions such that
∀p ∈ P : [T ype(IN (p)) = C(p(s))MS ∧ V ar(IN (p)) = ∅]
where:
-Type(expr) denotes the type of an expression,
-V ar(expr) denotes the set of variables in an expression,
-C(p)MS denotes a multi-set over C(p).

The CPNs is extended by time gives the possibility to describe the dynamic properties of a system in the time space by introducing global clock which represent the model time as a discrete (e.g. integers) value. Each token within a timed color set, carry a time value that called time stamp. The time stamp describes the earliest model time which the token can be used.
Creating large, intricate nets can be a cumbersome task. But similar to mod- ular programming, the construction of CPNs can be broken into smaller pieces by utilizing substitution transitions. Conceptually, nets with substitution transitions are nets with multiple layers of detail. A simplified net gives a broad overview of the system and by substituting transitions of this top-level net with sub-nets, more detail could be brought into the model. More information about Timed CPNs and Hierarchical CPNs could be found in [8].
There are some tools for constructing and evaluation of CPN models. One of them is CPN-Tools [4] which is a well-known and powerful tool for modeling and analysis of CPNs and supports timed color set, hierarchical net using substantial transitions, net simulation and performance analysis using monitors and analysis state space by means of a CTL-like temporal logic.
Sensor Medium Access Control Protocol
Since we will use the specification and operations of S-MAC in the next sections, we will briefly review this protocol in the following paragraphs, which is based on [15].
The open system interconnection (OSI) model defines a layered architecture for network protocols. The medium access control (MAC) layer is responsible for de- termining which node is allowed to access underlying layer (i.e. physical medium) at any moment. One fundamental task of a MAC protocol is to avoid simultaneous transmissions (i.e. collision) and the basic mechanism used for reducing the possi- bility of collision in contention based MAC is referred to as carrier sense, multiple access (CSMA). In this mechanism each node, before starting a transmission, senses the medium to find it clear and then starts its transmission.
In wireless environment, IEEE 802.11 protocol [6] is a family of standards which introduces a number of MAC schemes and the physical (PHY) layer for WLAN.

The primary MAC scheme of the standard is called distributed coordination func- tion (DCF) and has two variants: basic access (BA) and request to send/clear to send (RTS/CTS). The BA scheme (that is also known as two-way handshaking scheme), has the simplicity advantage, but the possibility of (large) data packet is somewhat high and thus can cause to waste energy and degrade performance. In RTS/CTS scheme, the same sensing/randomized back-off procedure of the BA scheme is used but an additional handshake is involved using RTS and CTS control packets (as a result, this scheme is referred to as four-way handshake). After sensing that the medium is free, a station wishing to send data packets over the medium sends an RTS packet, which includes information on the duration of subsequent transmissions. On reception of an RTS, the destination replies with a CTS packet. The sender will start the transmission of actual data packets on reception of the CTS confirmation. Every neighboring node overhearing the RTS/CTS exchange is aware of the future communication duration hence refrains from attempting to access the medium for the whole duration of the communication.
The IEEE 802.11 is used in some wireless sensor networks. Considering the attributes and limitations of WSNs, we need some special protocols that designed for them. In WSNs, one of the important requirements is efficient usage of energy to prolong network lifetime and must be considered in any aspect of communication protocols, routing algorithms and query processing approach. The so called S-MAC scheme [15], is designed to reduce energy consumption of communicating nodes. It is based on a simple observation that for most WSN applications, the sensed data streams are generated at low frequency (there is nothing to be sensed at most of the time.).
Designing S-MAC aims at reducing energy consumption from all sources of en- ergy waste (i.e. idle listening, collision, overhearing and control overhead). The protocol is based on two distinct operational states for sensing nodes, an energy expensive LISTEN mode where the radio of a node is switched on, and an energy saving SLEEP mode in which the radio is turned off. Each node uses a periodic listen/sleep schedule to switch between LISTEN/SLEEP operational modes. A complete LISTEN/SLEEP cycle is referred to as a frame and the duty cycle is the ratio of the listen interval to frame length which can be adapted according to the ap- plication requirements. The S-MAC scheme is concerned with two different aspects: choosing and maintaining of sleeping schedules for each node (usually referred to as coordinated sleeping) and collision avoidance.
Coordinated Sleeping. Each node maintains a schedule table where the LISTEN/SLEEP period of each of its neighbors is recorded. When a node wants to send some data to one of its neighbors, it will start the RTS/CTS protocol during the LISTEN phase of the destination node, whose details are retrieved from the schedule table. The schedule table is built in a distributed fashion, through broadcasting of SYNC packets between neighboring nodes. A SYNC packet contains the sender’s chosen schedule. Each node either chooses its own schedule or follows a schedule received from one of its neighbors. As soon as a node picks a schedule, it broadcasts it so that all neighbors can update their table. Although the aim of coordinated

sleeping is to synchronize neighboring nodes on a single and shared schedule, it is possible for neighboring nodes to have different schedules. This happens whenever a node that has announced its own schedule receives a different schedule from one of its neighbors. Anyhow, a node may receive different schedules from its neighbors and in this case, it must behave based on its schedule table for sending a packet to any node.
Collision Avoidance. This is achieved through the 802.11 MAC. The RTS/CTS protocol is used to avoid collision for unicast packets, whereas a random- ized carrier sense is used to prevent simultaneous transmission of broadcast packets (i.e. SYNC). A unicast data packet follows the sequence RTC/CTS/DATA/ACK. After a successful RTS/CTS exchange, the corresponding sender and receiver will temporarily ignore their sleeping schedule until the data transmission is complete. They will then revert to SLEEP mode, until their next LISTEN mode is scheduled. This technique with the aid of network allocation vector (NAV) variable can solve the hidden terminal problem.



Related Works

A lot of results are reported in literature, which have used formal techniques for modeling and analysis of traditional networks. In [10], Petri nets are used for mod- eling IEEE 802.3 protocol in a traditional local area network (LAN) to construct a detailed model. The model is used to evaluate some performance measures. In [2], a high-level Petri net named finite population queuing system Petri nets (FPQSPN) is introduced for modeling and simulation of medium access control layer in computer networks.
Given the increasing sophistication of WSN algorithms and the difficulty of mod- ifying an algorithm once the network is deployed, there is a clear need to use formal methods to validate system performance or functionality prior to implementing such algorithms [12]. In published works, different approaches have been used for spec- ifying and modeling sensor networks. In these works, based on the requirements for performance evaluation or model checking purposes, a modeling technique has been selected and employed. Some new extensions of Petri nets are also proposed for these purposes, which use some extra information in places [9] or dynamic con- figuration capability [5] in Petri nets structure. Such extensions, attempt to extend Petri nets to model dynamic behavior of WSNs, such as mobility of nodes, node death (as a result of battery limitation) or node failures. But for evaluation of a protocol in a real network, these extensions are not tool support. In [14], Petri nets are used for modeling and simulation of a routing protocol in a mobile ad-hoc network (MANET). In this work, a topology approximation mechanism is proposed to address mobility problem and performs simulation to show that this mechanism can indeed mimic the mobility of a MANET.




Fig. 1. Topology of the model, two-hop network with two sources and two sinks.
modeling S-MAC with CPNs
In this section, we describe our proposed Coloured Petri Net (CPN) model for S-MAC. The global model has been constructed taking the advantage of the hier- archical capabilities of CPNs [7]. Hierarchical CPNs allows the construction of a large model as a set of smaller models connected to each other using well-defined interfaces (i.e. substitution transitions). In this way, a complex model, like the one we will present in this section, can be reduced to constructing some smaller models. The model aims to be as detailed as possible (i.e. it tries to model all operations of the MAC layer and scheduling of nodes).
Like [15], topology of the model is a two-hop network with two sources and two sinks, as shown in Fig.1. Packets from the sources, A and B, flow through the node C and will end at sinks, D and E. Each node has a buffer containing received packets. For simplicity, we assumed that the size of the buffer is one packet. In addition, the collision may occur in network. Consider that this collision can occur only in control packets (i.e. SYNC or RTS/CTS) and data packets do not collide. We assume that the transmission media is ideal and noise-free and thus, every sent packet will receive to its destination node. It may also encounter a collision. We have also assumed that there is not any queueing and back-off delay as in [15]. We assumed that the propagation and processing delays can be ignored, too. In this case, only carrier sense delay, transmission delay and sleep delay are taken into account. Consider that transmission delay depends on packet size and is a constant value for each type of packet and thus large packets (e.g. data packets) have a larger transmission delay than small packets (e.g. control packets).
To describe the model, we will first explain the main part of the model and higher level of the model hierarchy. Then sub-models will be described. For constructing and analyzing the model, CPN-Tools is used.

CPN Model for Wireless Channel
In wireless media model, if a node sends a packet, the media must broadcast it to all nodes. Each node can ”hear” the packet if and only if the source of the packet is one of the neighbors. In this model, when a node transmits a packet, the packet is delivered by all nodes according to their sequence numbers. When a node gets a packet, checks the source of the packet and if it is a neighbor node, it will ”hear” the packet. Anyhow, the packet is given to the channel for delivering to the next node. If the packet is delivered by all nodes, the channel drops the packet.




Fig. 2. Main part of wireless channel model of the network (nodes are modeled as substitution transitions).

Because there is no propagation delay, this operation must be performed without any time consumption and all nodes will deliver the packet at the same time. Here, we assume that nodes have not any movement, but considering this approach for modeling broadcast behavior, we can have mobile nodes (e.g. in mobile wireless sensor or ad-hoc network). In mobile networks, neighboring detection is performed dynamically based on physical location of nodes and radio transmission range.
Fig.2 shows model of the wireless channel and network nodes as substitution transitions for the network. The hierarchical capability of CPNs provides scalability of the model in the network.

CPN Model of Nodes
In this subsection we describe CPN sub-models for node scheduling, table of neigh- bors scheduling, sending a message and listening to channel.

Node Scheduling
In S-MAC protocol, each node has a constant sleep and wakeup period. First (and after a small random period of time), each node chooses his own scheduling and announces it to its neighbors using a SYNC message. The SYNC message shows the beginning of the wakeup time. In sleep mode, nodes turn off the radio to save energy. In wakeup period, a node for transmitting a packet must sense the channel and if the channel is free (physically and virtually), it sends RTS packet and waits for CTS confirmation. Then, it sends the data packet and waits for the acknowledgment. The basic part of the model is shown in Fig.3. The right side of the figure illustrates neighbors schedule table and the left side, models the synchronization procedure.














Fig. 3. Basic part of node scheduling model.

Table of Neighbors Scheduling
In each node, there exists a table that contains scheduling information of its neighbors. Model of this table is illustrated in right side of Fig.3. When a SYNC packet is received by a node, the required information can be obtained from the packet for updating schedule table. By assuming predefined and constant values for sleep and wakeup periods, each node can update and maintain this table indepen- dently and achieve target node scheduling at any time.

Sending a Message
Transmitting a message to a neighbor node is performed based on neighbors schedule table. In this case, after determining channel state, if the channel is free, the packet will be sent based on the information retrieved from schedule table. Fig.4 shows the basic part of message transmission model.

Listening to Channel
The basic part of listening to the channel model is illustrated in Fig.5. After receiving a packet, the receiver node updates its channel state. Collision is occurred if two (or more) packets in a neighborhood are sent to the channel simultaneously. The channel is physically free if there is no packet on the channel and virtually free if NAV variable is clear.

Hierarchical Model
The hierarchical structure of the composed CPN model is illustrated in Fig.6. The wireless channel model is in the highest level of the model hierarchy that models the physical layer and broadcast communications. In the next level, models of network

nodes exists that model basic behavior of the nodes and in the lowest level, there are some sub-models that model the nodes behavior in detail.
In general, using hierarchical structure of CPNs facilitates modeling complicated and large systems. In addition, this capability provides scalability to easily change the topology of the network and the number of nodes.


Fig. 4. The basic part of message transmission model that shows the message transmission procedure stages (channel state retrieval, sending RTS, receiving CTS and sending ACK).


Fig. 5. The basic part of listening to the channel model.

Simulation Results
After constructing the model, we can extract the related performance measures using model simulation. In CPN-Tools, this goal can be achieved using the monitor mechanism. A monitor is a mechanism in CPN-Tools that is used to observe, inspect, control, or modify the simulation of a CPN model and the desired measures. In our study of S-MAC protocol, performance measures include energy consumption and packet delivery delay. For example, result of the model simulation for average energy consumption in source nodes for transmission of some constant data packets versus message inter-arrival time with duty cycle 20% and 50% is shown in Fig.7. Since we use a light traffic load, idle listening dominant the total energy consumption and S-MAC periodic sleep plays a key role for energy saving. In S-MAC with duty cycle 20%, each node is in listen mode approximately in 20% of time and thus energy consumption is lower than S-MAC with duty cycle 50% because of lower idle listening energy. More measures may be defined and computed in a similar way.








Fig. 6. Hierarchical architecture of the CPN model (for a network with five nodes).


1500
1400
1300
1200
1100
1000
900
800
700
600
500
400
300
200
100
0


1	2	3	4	5
Message Interarrival(s)

Fig. 7. Simulation results for average energy consumption in source nodes versus message inter-arrival time.

Conclusions
In this paper, we presented a CPN model for S-MAC protocol. S-MAC is a medium access control protocol introduced for wireless sensor networks with the aim of reducing energy consumption. Using the hierarchical capability of CPNs, we have modeled a wireless environment (wireless media and network nodes). Then, we have evaluated some performance measures by using CPN-Tools and its simulation features.
Results of this case study can help the design process of a real network. Modeling enough details in this model, shows the capabilities of CPNs for modeling and evaluation of wireless sensor and ad-hoc networks. Using a hierarchical CPN model, increases the flexibility and scalability of constructing a model for wireless sensor networks.
As a future work, we intend to construct a comprehensive model for mobile ad-hoc network. We are attempting to add a routing protocol to this model by employing the hierarchical capability of CPNs.
Another interesting area of research is to use CPNs and the model checking capabilities of CPN-Tools. This feature is quite useful in WSNs for verification of protocols.

References
Akyildiz, I.A., Su, W., Sankarasubramaniam, Y., Cayirci, E. A Survey of Sensor Networks, IEEE Communication Magazine, Vol. 40 (2002), 102-115.
Capek, J., “Petri Net Simulation of Non-deterministic MAC Layers of Computer Communication Networks,” Ph.D. Thesis, Czech Technical University, 2003.
Cavin, D., Sasson, Y., Schiper, A., On the Accuracy of MANET Simulators, Proc. of POMC, ACM Press (2002), 38-43.
CPN Tools, URL: http://wiki.daimi.au.dk/cpntools/ .
Graff, C.J., Giardina, C., Dynamic Petri Nets: A New modeling Technique for Sensor and Distributed Concurrent Systems, Proc. of the IEEE Military Communications Conference, (2005).
I.S.Department, Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specification, IEEE Std. 802.11, (1999).
K. Jensen. “Coloured Petri Nets. Basic Concepts, Analysis Methods and Practical Use,” Volume 1, Springer-Verlag, 1992.
K. Jensen. “Coloured Petri Nets. Basic Concepts, Analysis Methods and Practical Use,” Volume 2, Springer-Verlag, 1995.
Luo, Y., Tsai, J.J.P., A Graphical Simulation System for Modeling and Analysis of Sensor Networks, Proc. of the 7th IEEE Int’l Symp. on Multimedia (2005).
Morera, P.H., Gonzalez, T.M.P., A CPN Model of the MAC Layer,In K.Jensen (ed.): Proceedings of the 2nd Workshop on Practical Use of Coloured Petri Nets and Design/CPN, Aarhus (1999), 153-172.
NS-2 network simulator, URL: http://www.isi.edu/nsnam/ns/ .
Olveczky, P.C., Thorvaldsen, S. , Formal Modeling and Analysis of the OGDC Wireless Sensor Network Algorithm in Real-Time Maude, Lecture Notes in Computer Science , Vol. 448 (2007), 1611-3349.
OPNET Modeler, URL: http://www.opnet.com/solutions/network rd/modeler.html.


Xiong, C., Murata, T., Tsai, J., Modeling and Simulation of Routing Protocol for Mobile Ad hoc Networks Using Coloured Petri Nets, Proc. of Workshop on Formal Methods Applied to Defense Systems (2002), 145-153.
Ye, W., Heidemann, J., Estrin, D., An Energy-Efficient MAC Protocol for Wireless Sensor Networks, IEEE/ACM transaction on networking, Vol. 12 No. 3 (2004).
