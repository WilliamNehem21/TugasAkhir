

Electronic Notes in Theoretical Computer Science 273 (2011) 33–50
www.elsevier.com/locate/entcs

A Hybrid Public Announcement Logic with Distributed Knowledge
Jens Ulrik Hansen1,2
Programming, Logic and Intelligent Systems Research Group and Science Studies Research Group
Roskilde University, P.O. Box 260, DK-4000 Roskilde, Denmark

Abstract
In this paper the machinery of Hybrid Logic and the logic of public announcements are merged. In order to bring the two logics together properly the underlying hybrid logic has been changed such that nominals only partially denote states. The hybrid logic contains nominals, satisfaction operators, the downarrow binder as well as the global modality. Following this, an axiom system for the Hybrid Public Announcement Logic is presented and using reduction axioms general completeness (in the usual style of Hybrid Logic) is proved. The general completeness allows for an easy way of adding distributed knowledge. Furthermore, it turns out that distributed knowledge is definable using satisfaction operators and the downarrow binder.
Keywords: Hybrid Logic, Public Announcement Logic, Distributed Knowledge, Completeness, Reduction Axioms, Epistemic Logic.


Introduction
When Arthur Prior introduced Hybrid Logic, it was in the context of temporal logics (see [3]), and since then several applications in temporal logics have been found for Hybrid Logic ([5]). However, Hybrid Logic can be viewed as an extension of any kind of modal logic, such as Epistemic Logic. Thus, it is a natural step to extend Epistemic Logic to a hybrid version, but this step has rarely been taken. This paper remedies this insufficiency.
A recent trend in Epistemic Logic is to model the dynamics of knowledge. There are several ways of doing this, and Dynamic Epistemic Logic (DEL) is one type that

1 This paper has occurred in many draft versions and several people have commented on various versions among others Olivier Roy, Jiahong Guo, Mai Ajspur, and Sine Zambach. The participants of the ILLC seminar on Logics for Dynamics of Information and Preferences 2009, the HYLOCORE 2009 workshop, and the HyLo 2010 workshop have also provided useful comments on presentations of this work. A special thanks to Torben Brau¨ner for many useful comments and suggestions on all the versions of the paper. Finally, thanks to a number of anonymous reviews for very useful comments. The author is partially funded by the Danish Natural Science Research Council through the HYLOCORE project.
2 Email: jensuh@ruc.dk

1571-0661 © 2011 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2011.06.011

has received increased attention (see for instance the textbook [16]). The simplest fragment of DEL is Public Announcement Logic (PAL), which adds modalities for the action of public announcement to epistemic logic. The main concern of this paper is to combine PAL with Hybrid Logic.
PAL is obtained by adding modalities of the form [ϕ] (for all formulas ϕ of the language) to the language of Epistemic Logic. The reading of the formula [ϕ]ψ is “after public announcement of ϕ, ψ is true” and the semantics specify that [ϕ]ψ is true in a state in a model if, and only if, ψ true at that state in the submodel obtained by restricting the domain to states where ϕ is true. A central part of Hybrid Logic is the nominals, which are special propositional variables that are interpreted as only being true in one state. In this way we can name and refer to specific states of a model. When combining PAL with Hybrid Logic the immediate problem is that when moving to submodels the states that some nominals name/denote might be removed, and thus conflict with the requirement that nominals must be true in exactly one state. This problem can be overcome by only letting nominals partially denote states. General completeness results from Hybrid Logic can then be transferred to PAL. A by-product of this is a straightforward way of adding modal operators such as distributed knowledge to the logic.
Besides this paper, only a handful of other contributions appear to exist on com- bining Dynamic Epistemic Logic with Hybrid Logic. In the paper [13] all epistemic actions (of full DEL) are internalized. This is done by adding the epistemic actions to the domain of the models, on the same level as epistemic states, and then use a hybrid language to refer to them. However, in the process of modeling epistemic scenarios this may result in a blow-up of the models, which must now also contain the epistemic actions. This is not in line with the usual way of using Kripke mod- els, where the states represent different ways the world might be or different states a system might be in. In [12] a public announcement logic with nominals, global modality, modalities for intentions and preferences is introduced. In that paper, to deal with the interplay between nominals and the public announcement operators, the truth condition for nominals is only changed in the updated models. Thus the updated models are not genuine models for the language. We deal with this defi- ciency in this paper by letting nominals partially denote states in the original model as well; an approach also taken in [7].
In addition to the question of how to combine Hybrid Logic and epistemic mod- elling, there is the question of the usefulness of Hybrid Logic in epistemic modelling. The usefulness is illustrated by modal logics for games, for instance. [11] introduces a logic with modalities for preferences, knowledge, and intentions as well as the global modality and nominals. It is shown that the notion of Nash equilibrium is definable in this language and that nominals are necessary in this definition (see [11], Fact 5.5.9). In [15] Nash equilibrium is also defined using distributed knowledge, preference modalities and nominals.
Hybrid Logic can also be used to clarify some of the implicit assumptions made when modelling knowledge by Kripke semantics. For instance @iϕ → Ka@iϕ is a validity expressing that if ϕ is true at a state (named by i), then agent a knows this.

Furthermore, if the state named by j is accessible from the state named by i all the agents know this, i.e. @iKˆaj → Kb@iKˆaj is valid. Thus the hybrid machinery clarifies the implicit assumption that all the agents know what the model looks like. Uncertainty only comes from the fact that they do not necessarily know in which
state of the model they are in.
For a hybrid epistemic logic with the downarrow binder ↓x. 3 we can express that an agent knows all the (relevant) facts at a given state without specifying what they are. The formula ↓x.Kax thus expresses that agent a is completely informed in the current state. This cannot be expressed in basic Epistemic Logic if there are infinitely many propositional symbols, nor if the intended model is infinite. Imagine a scenario where agent a writes down a natural number (potentially any natural number) and agent b does not see which number. A Kripke model of this scenario will consist of all the natural numbers corresponding to all the possible numbers a could write down. Expressing in classical epistemic logic that agent b knows that a knows what number he writes down would require an infinite disjunction (Kb(Ka0 ∨ Ka1 ∨ Ka2 ∨ ...)), where in hybrid logic the formula Kb ↓x.Kax does the trick.
The main focus of this paper is another advantage of introducing hybrid machinery into PAL. From a proof theoretical point of view classical Hybrid Logic fixes a great deal of the problems of classical modal logic. In the case of PAL the proof theory also becomes much nicer when we move to a hybrid version, as already demonstrated by the paper [7].
The structure of this paper is as follows: In section 2 Hybrid Logic with partially denoting nominals is introduced and axiomatized. Next, a hybrid version of PAL is presented, and a sound and complete axiomatization is given (section 3). In section 4 we add distributed knowledge to the logic. In the process it is also shown that distributed knowledge can be defined using satisfaction operators and the downarrow binder. Finally, concluding remarks and further directions of research are given in section 5. Some of the proofs are left out but can be found in [8].
A hybrid logic with partial denoting nominals
The basic idea behind letting nominals partially denote states is that they are true in at most one state instead of exactly one state. But problems arise with the formula @iϕ, stating that ϕ is true at the state denoted by i. If the nominal i does not denote a state, what should the truth value of @iϕ be? There seems to be only two obvious answers, either @iϕ is true in all states or it is false in all states. 4 We choose the first and thus take the formula @iϕ to be true if the nominal i denotes a state and ϕ is true there. The dual operator of @i, denoted by @i (i.e.

3 The intuition behind the operator ↓x. is that it names the current state x and by doing so it allows us to return to the state later on.
4 If i does not denote any states in a model it does not point out anything else than the empty set, thus it seems only fair to make @iϕ true in the entire model or false in the entire model independent of ϕ.



@iϕ := ¬@i¬ϕ), then corresponds to the second choice. The two choices for @iϕ make the logic differ from classical hybrid logic, since @ is no longer self-dual. We will also add the global modality E to the language, where Eϕ is interpreted as “there is some state in the model where ϕ is true”. Since the semantics of this operator do not depend on the nominals, no problem arises by adding this. When adding the modalities E and A (A being the dual of E), the choice of the semantics for @iϕ can be seen as the choice between making @iϕ equivalent to E(i ∧ ϕ) or A(i → ϕ). When nominals only partially denote states these two formulas are no longer equivalent. Since we will have that @iϕ is equivalent to E(i ∧ ϕ) and @iϕ is equivalent to A(i → ϕ), we see that the satisfaction operator has been split into an existential modality @i and a universal modality @i. Besides the global modality we will also add the downarrow binder. Thus we add formulas of the form ↓x.ϕ to the language, having the intuitive reading “naming the current state x makes ϕ true”. In adding ↓x., we also allow x and @xϕ to occur as formulas and we are thus faced with the same problems of denotation. However now the denotation of a state variable as x is taken care of by assignments and not by the model. Hence we now have to allow partial functions as assignments.
Syntax and semantics
To define the language, we assume a set of propositional variables PROP, a countable infinite set of nominals NOM, and a countable infinite set of state variables SVAR. Since the enterprise is Epistemic Logic, we will denote the modal box operators by Ka, where a is an agent from a finite set A of agents.
Definition 2.1 The syntax of the full language of Hybrid Logic with Partially Denoting Nominals, denoted by PH(@, ↓, E), is given by
ϕ ::= p | u | ¬ϕ | (ϕ ∧ ψ) | Kaϕ | @uϕ |	↓x.ϕ | Eϕ,
where p ∈ PROP, u ∈ NOM ∪ SVAR, x ∈ SVAR and a ∈ A. 5
We will also be interested in sub-languages of this full language. The language without the global modality E will be denoted by PH(@, ↓) and if we also omit the downarrow binder (and thus also omit the cases for the state variable x) we will denote the language by PH(@). Finally this language added the global modality
will be denoted by PH(@, E). 6 Furthermore we will use the following abbreviations of @i for ¬@i¬ and Kˆa for ¬Ka¬.
These languages do not differ from classical Hybrid Logic in the syntax, but their semantics differ. The notion of a frame is the usual one; a frame is a pair
⟨W, (Ra)a∈A⟩ such that Ra is a binary relation on the non-empty set W . 7 Given a

5 In the following we will use i, j, k to range over nominals, x, y to range over state variables, and u, s, t to range over both nominals and state variables.
6 As usual in hybrid logic @iϕ can be defined as E(i ∧ ϕ), thus the @i operators are superfluous when we have E. Still, we prefer to keep the @i operators in the language to make the forthcoming axiomatization more uniform and easier to read.
7 Note that we do not require that Ra is an equivalence relation as usually done in epistemic logic. However, this requirement can easily be added and will be discussed later on.

frame we can build a model upon it and define truth relative to it.
Definition 2.2 Given a frame ⟨W, (Ra)a∈A⟩, a model based upon it is a tuple M = ⟨W, (Ra)a∈A,V ⟩, such that V : PROP∪NOM → P(W ) satisfies that |V (i)|≤ 1, for all i ∈ NOM. An assignment in M is a partial function g : SVAR → W . (By “x ∈ dom(g)” we will denote that x is in the domain of the partial function g.)
Definition 2.3 Let M = ⟨W, (Ra)a∈A,V ⟩ be a model, w ∈ W and g an assignment in M. The semantics of ϕ is inductively defined by:


The logic of this semantics will be denoted by KrH(@,↓,E) (and similar for the sublanguages). The notions of satisfiability and validity are defined as usual. Note, that if we have a language without the downarrow binder, we do not need assign- ments, and we will simply omit them.
Some classical validities of Hybrid Logic fail in this new semantics. For instance the formula @ii is no longer valid. Furthermore @i@jϕ is no longer equivalent to @jϕ, however, @i@jϕ → @jϕ remains valid. As already mentioned, self-duality of @ also fails, and this makes the validity ¬@iϕ ↔ @i¬ϕ fail. @i¬ϕ → ¬@iϕ is valid though and so is @iϕ → ¬@i¬ϕ, which can been seen as expressing that the satisfaction operator @i is functional.
Even though KrH(@,↓,E) is different from classical Hybrid Logic, we can recover a version of classical Hybrid Logic within KrH(@,↓,E). Note that, the formula @ii (or equivalent Ei) is true exactly when the nominal i denotes a state. Thus putting @ii as an antecedent to classical hybrid validities will yield validities in KrH(@,↓,E), for instance the formulas @ii → (@jϕ ↔ @i@jϕ), @ii → (@iϕ ↔ ¬@i¬ϕ), and @ii → E(i ∧ ϕ) ↔ A(i → ϕ) becomes valid. Note also that all classical Hybrid Logic models are models for KrH(@,↓,E), thus all validities of KrH(@,↓,E) are validities of classical Hybrid Logic.
The validities and equivalences just discussed are used in most proof systems for Hybrid Logic, thus to give a proof system for Hybrid Logic with Partial Denoting Nominals, different axioms and rules are required.

Complete proof systems
We will now give Hilbert-style proof systems for the hybrid logics with partially denoting nominals. We will start by discussing the logic with nominals, satisfaction operators, and downarrow binders KrH(@,↓) and completeness for this. Complete- ness of the logic KrH(@) can be obtained in a similar manner. Finally we briefly discuss how the global modality can be added as well as how completeness with respect to other classes of frames can be obtained.
The proof systems is shown in figure 1 and follow those of [4] and [1] with some modifications. Existing axioms and rules have been modified to cope with the partially denoting nominals and these have also caused two new axioms to be add (Denote and Collapse). 8 Note that we are working in a multi-modal language with a modality Ka for each a ∈ A and thus for axioms and rules involving Ka we have one axiom/rule for each a ∈ A.
We use standard terminology for Hilbert-style proof systems. A proof of ϕ in KrH(−) (“−” denotes any combination of @, ↓, and E) is a finite sequence of formulas ending with ϕ such that every formula in the sequence is either an axiom of KrH(−) or follows from previous formulas in the sequence using one of the proof rules. We denote this by ▶KPH(−) ϕ. For a set of formulas Γ, Γ ▶KPH(−) ϕ holds if there are ψ1, ..., ψn ∈ Γ such that ▶KPH(−) ψ1 ∧ ... ∧ ψn → ϕ. Given a set of formulas Σ, let KrH(−) + Σ denote the logic obtained from KrH(−) by adding all the formulas in Σ as axioms. That ϕ is provable in the logic KrH(−) + Σ will be denoted by ▶KPH(−)+Σ ϕ. A set of formulas Γ is said to be KrH(−) + Σ-inconsistent if Γ ▶KPH(−)+Σ ⊥, and KrH(−) + Σ-consistent otherwise. A formula ϕ is pure if it does not contain any propositional variables or state variables. A set of formulas Σ is called substitution-closed, if it is closed under uniform substitution of nominals by nominals. 9

The completeness proof for KrH(@,↓)
We start out by stating a Lindenbaum lemma.
Lemma 2.4 (Lindenbaum lemma) Let Σ be a set of pure PH(@, ↓)-formulas. Every KrH(@,↓) + Σ-consistent set of formulas Γ can be extended to a maximal KrH(@,↓) + Σ-consistent set Γ+ (in a new language obtained by adding countable many new nominals), such that
Γ+ contains a nominal.
For all @uKˆaϕ ∈ Γ+ there is a nominal j, s.t. @uKˆaj ∈ Γ+ and @jϕ ∈ Γ+.
Proof. This is standard just using the modified rules, see [4] or [1].	2
8 Additionally, contrary to [4], we have left out a substitution rule. The reason is that the validities of PAL are not closed under substitution ([p]p is a validity for all propositional variables p, but [ϕ]ϕ is not a validity for arbitrary formulas ϕ.) and thus when we want to add the public announcement machinery we cannot have a substitution rule.
9 For instance, if Σ is substitution-closed and @i(p → (j ∧ Kaj)) ∈ Σ then also @k(p → (l ∧ Kal)) ∈ Σ for all nominals k and l.



Fig. 1. The Hilbert-style proof systems for KPH(@) and its extensions.

We can now construct a Henkin-style model from maximal consistent sets with the help of the following lemma, which is easy to prove.
Lemma 2.5 The following are derivable in the logic KrH(@,↓):

i) @us → (@uϕ ↔ @uϕ)
@us → @su
(@uu ∧ @ss) → (@sϕ ↔ @u@sϕ)
@us → (@uϕ ↔ @sϕ)
(@us ∧ @st) → @ut
Definition 2.6 Let Γ be a maximal consistent set of PH(@, ↓)-formulas. Define NΓ = {u ∈ NOM ∪ SVAR | @uu ∈ Γ} and an equivalence relation ∼ on NΓ by: u ∼ s iff @us ∈ Γ (and denote the equivalence class of u by |u|). Then the canonical

model MΓ = ⟨W, (Ra)a∈A,V ⟩ and the canonical assignment gΓ are defined by
W  = {|u| | u ∈ NΓ};
|u|Ra|s| iff @uKˆas ∈ Γ	for all a ∈ A;
V (p) = {|u|∈ W | @up ∈ Γ}		for all p ∈ PROP; V (j) = {|u|∈ W | @uj ∈ Γ}	for all j ∈ NOM; gΓ(x) = |x|	for all x ∈ SVAR ∩ NΓ.
A few comments about why this is well-defined are in order. First of all note that by the Denote rule and ii) of lemma 2.5, if @us ∈ Γ then u, s ∈ NΓ. That the relation ∼ is an equivalence relation (and thus W is well-defined) follows from the construction of NΓ and ii) and v) of lemma 2.5. That Ra is well-defined follows from
iv) of lemma 2.5 and the Bridge axiom. Finally that V is well-defined for p ∈ PROP
follows from iv) of lemma 2.5, and for i ∈ NOM by ∼ being an equivalence relation.
~ being an equivalence relation also guaranties that gΓ is a well-defined assignment. Note that if @ii ∈/ Γ then V (i) = ∅ and thus i does not denote. Similar for state variables.
An essential part of the completeness proof is the following truth lemma:
Lemma 2.7 (Truth lemma) Let Γ be a maximal consistent set of PH(@, ↓)- formulas satisfying item (2) of the Lindenbaum lemma. Then for all u ∈ NΓ and all PH(@, ↓)-formulas ϕ
MΓ, |u|, gΓ |= ϕ iff @uϕ ∈ Γ.	(1)
Proof. The proof goes by induction on ϕ. When ϕ is a p or j for a p ∈ PROP or j ∈ NOM, (1) follows directly from the definition of V . When ϕ is on the form x for a x ∈ SVAR, (1) follows from ∼ being an equivalence relation.
The induction step. If ϕ is on the form ψ ∧ χ or ¬ψ, the proof is easy. Assume now that ϕ has the form @sψ. Note that if @u@sψ ∈ Γ then @sψ ∈ Γ by weak-agree and thus s ∈ NΓ by Denote. Then by induction it follows that MΓ, |s|, gΓ |= ψ, which again implies that MΓ, |u|, gΓ |= @sψ. If MΓ, |u|, gΓ |= @sψ then there is a sj ∈ NΓ such that MΓ, |sj|, gΓ |= ψ and V (s)= |sj| if s is a nominal and gΓ(s)= |sj| if s is a state variable. By the definition of V and gΓ this implies that @s′ s ∈ Γ and by the induction hypothesis that @s′ ψ ∈ Γ. But now it follows from iv) of lemma
2.5 that @sψ ∈ Γ. From the assumption about i and @s′ s ∈ Γ and lemma 2.5 ii) and Denote it follows that @uu, @ss ∈ Γ. But then by iii) of lemma 2.5, @u@sψ ∈ Γ follows.
The case ϕ is of the form Kˆaψ. If MΓ, |u|, gΓ |= Kˆaψ, then there is a s ∈ NΓ
such that |u|Ra|s| and MΓ, |s|, gΓ |= ψ. By definition of Ra, @uKˆas ∈ Γ and by
the induction hypothesis @sψ ∈ Γ. But then by the bridge axiom it follows that @uKˆaψ ∈ Γ. Now assume that @uKˆaψ ∈ Γ. Then since Γ satisfies item (2) of the Lindenbaum lemma it follows that there is a nominal j such that @uKˆaj ∈ Γ and @jψ ∈ Γ. Note that by Denote j ∈ NΓ. Now by the definition of Ra and V and the induction hypothesis it follows that MΓ, |u|, gΓ |= Kˆaψ.

Finally for the case where ϕ is of the form ↓x.ψ. First note that MΓ, |u|, gΓ |=↓ x.ψ if and only if MΓ, |u|, gΓ |= ψ[x := u] due to a substitution lemma that can easily be proven. 10 But then by the induction hypothesis it follows that MΓ, |u|, gΓ |=↓x.ψ if and only if @uψ[x := u] ∈ Γ. And finally by the DA axiom it follows that MΓ, |u|, gΓ |=↓x.ψ if and only if @u ↓x.ψ ∈ Γ. This concludes the proof.	2
A frame F validates a set of formulas Σ, if M |= Σ for all models M based on
F. With this notion we state a Frame lemma:
Lemma 2.8 (Frame lemma) Let Σ be a substitution-closed set of pure PH(@, ↓)- formulas and let Γ be a KrH(@,↓) +Σ maximal consistent set of PH(@, ↓)-formulas satisfying item (1) and (2) of the Lindenbaum lemma. Then the underlying frame of MΓ validates all the formulas in Σ.
Proof. See Lemma 7.1 of [2].	2
We are now finally capable of proving the completeness theorem.
Theorem 2.9 (Completeness of KrH(@,↓)) Let Σ be a substitution-closed set of pure PH(@, ↓)-formulas. Every set of PH(@, ↓)-formulas that is KrH(@,↓) + Σ- consistent is satisﬁable in a model whose underlying frame validates all the formulas in Σ.
Proof. Assume that Γ is KrH(@,↓) + Σ-consistent. Then it can be extended to a maximal KrH(@,↓) + Σ-consistent set Γ+ by the Lindenbaum lemma. Since there is a nominal i ∈ Γ+ by item (1) of the Lindenbaum lemma it is easy to see that for all ϕ ∈ Γ, @iϕ ∈ Γ+ by the Introduction axiom. But then by the truth lemma it follows that MΓ+ , |i|, gΓ+ |= Γ. By the frame lemma the underlying frame of MΓ+ validates all the formulas in Σ and we are done.	2
2.2.2  Completeness for KrH(@,E,−) and with respect to other frame classes
In the case of completeness with respect to the global modality E, we once more follow the lines of [4]. We take one of the modalities in our multi-modal logic to be E 11 and add the axiom GM of figure 1. To see why this suffices, note that E is just a normal modal operator for which the intended accessibility relation is the universal relation on the domain. The formula @ii → Ei is a pure formula, so adding all substitution instances, as in the axiom GM, automatically gives completeness with respect to the class of frames @ii → Ei defines. Hence, all that is left to notice is that @ii → Ei defines the universal relation on the domain. However, this can easily be proven and we obtain:
Theorem 2.10 (Completeness of KrH(@,E,−)) Let Σ be a substitution-closed set of pure PH(@, E, −)-formulas.  Every set of PH(@, E, −)-formulas that is
10 Let Int(u) stand for g(u) if u is a state variable and V (u) if u is a nominal. Then the substitution lemma can be stated as: Let M = ⟨W, R, V ⟩ be a model, ϕ a formula, and u ∈ SVAR ∪ NOM. Then for all w ∈ W and all assignments g with g(x)= Int(u): M, w,g |= ϕ iff M, w,g |= ϕ[x := u].
11 Elaborated, we add an extra agent e to A and write E instead of Kˆe. Thus, in the proof system we also include all the axioms and rules from figure 1 involving Ka, for E.

KrH(@,E,−) + Σ-consistent is satisﬁable in a model whose underlying frame vali- dates all the formulas in Σ.
In Epistemic Logic one usually wants to put extra conditions on the relations Ra, for instance transitivity, reflexivity, and euclideaness. The logic obtained by requiring all these properties will be denoted S5rH(−) and if only transitivity and reflexivity are required, the logic will be denoted by S4rH(−). When modal logic is used to reason about beliefs, one usually replaces the reflexivity requirement of S5rH(−) by requiring seriality of Ra instead, and the logic obtained in this way will be denoted KD45rH(−). Now if one wants to work with these logics instead of just KrH(−), complete Hilbert-style proof systems can easily be obtained from theorems 2.9 and 2.10, since all the properties can be defined by pure formulas. i → Kˆai defines reflexivity, KˆaKˆai → Kˆai defines transitivity, Kˆai → KaKˆai defines euclideaness, and KˆaT defines seriality, which is all well known in the Hybrid Logic literature.
Hybrid Public Announcement Logic
We now combine Hybrid Logic with Partially Denoting Nominals with PAL. As before we assume the sets PROP, NOM, SVAR and A. The full language HPAL(@, ↓
, E) of the Hybrid Public Announcement Logic is given by:
ϕ ::= p | u | ¬ϕ | (ϕ ∧ ψ) | Kaϕ | @uϕ |	↓x.ϕ | Eϕ | [ϕ]ψ,
where p ∈ PROP, u ∈ NOM ∪ SVAR, x ∈ SVAR, and a ∈ A. For the sub-languages we will use the same conventions as before.
The notion of a model M = ⟨W, (Ra)a∈A,V ⟩ is the same as for PH(@, ↓, E). The definition of the semantic entailment M, w,g |= ϕ is a combination of definition
2.3 for PH(@, ↓, E) and the following clause:
M, w,g |= [ϕ]ψ	⇐⇒	M, w,g |= ϕ implies that M|ϕ, w, gϕ |= ψ,
where the definition of the model M|ϕ = ⟨W|ϕ, R|ϕ,V |ϕ⟩ is:

W|ϕ	= {v ∈ W | M, v,g |= ϕ} Ra|ϕ	= Ra ∩ (W|ϕ × W|ϕ)
V |ϕ(p) = V (p) ∩ W|ϕ
V |ϕ(i) = V (i) ∩ W|ϕ,
and the assignment gϕ is obtained from g by restricting its domain to the set {x ∈
dom(g) | g(x) ∈ W|ϕ}.
The logic of this semantics will be called the full Hybrid Public Announcement Logic and will be denoted by KHrAL(@,↓,E). Note that M|ϕ is just the model M restricted to the states where ϕ is true. The problem of adding nominals to PAL now becomes immediately clear: If a nominal i denotes a state where ϕ is not true, i does



Fig. 2. The Hilbert-style proof system for KHPAL(@,↓,E).
not denote any state in the model M|ϕ. The problem arises for state variables as well. This is the main reason for introducing Hybrid Logic with Partially Denoting Nominals in this paper. 12
We will provide the logic with a Hilbert-style proof system and show complete- ness in the usual way for PAL, i.e we will provide a truth-preserving translation from KHrAL(@,↓,E) into KrH(@,↓,E). This is interesting in its own right, since it shows that Hybrid Public Announcement Logic is not more expressive than the underlying hybrid epistemic logic (which is also the case in standard PAL, see [16]). The proof system is given in Figure 2 and is an extension of the one for KrH(@,↓,E) with ad- ditional reduction axioms for the public announcement operator. These reduction axioms are the usual ones from PAL plus new ones for the hybrid operators.
Moving a ↓x.-operator from within the scope of a [ϕ]-operator to the outside can lead to accidental binding of x in [ϕ]. Hence the requirement in the Announcement and downarrow axiom. However, this is not really a limitation because we can always rename bound variables without changing the truth value of a formula. When encountering a formula [ϕ] ↓x.ψ where x appears in ϕ, we can replace all occurrences of x in ψ by a new state variable y to get ψj and obtain an equivalent formula [ϕ]↓y.ψj, where y does not occur in ϕ. With this assumption the reduction axiom for the downarrow binder is sound. The soundness of the reduction axioms for the satisfaction operator, the global modality and the downarrow binder is stated

12 There is another way of defining the semantics for the public announcement operator [ϕ]. Instead of removing states where ϕ is not true, one simply removes access to these states, i.e. restrict the accessibility relations. In standard PAL these approaches are equivalent, but in Hybrid Logic using either satisfaction operators or the global modality, we are capable of reaching states which are not accessible via the accessi- bility relations and thus the two approaches differ. However, this alternative approach has strange validities involving the satisfaction operator and the global modality as consequence. For instance, it might be the case that agent a does not know p at the state i before an announcement. But, after it is announced that the actual state is not i it becomes true that @iKap. I.e. [чi](@iϕ → @iKaϕ) would be valid in this alternative approach, which seems contra intuitive.

in the following lemma:
Lemma 3.1 The following holds for all HPAL(@, ↓, E) formulas ϕ and ψ:
[ϕ]@uψ is equivalent to ϕ → @u(ϕ ∧ [ϕ]ψ).
[ϕ]Eψ is equivalent to ϕ → E(ϕ ∧ [ϕ]ψ).
If the state variable x does not occur in the formula ϕ, then [ϕ]↓x.ψ is equivalent to ↓x.[ϕ]ψ.
Proof. 1) Since ⟨ϕ⟩ψ and ϕ ∧ [ϕ]ψ are equivalent (as in standard PAL), one only needs to show that [ϕ]@uψ is equivalent to ϕ → @u⟨ϕ⟩ψ. This is shown by the following equivalences:
M, w,g |= [ϕ]@uψ
iff	M, w,g |= ϕ ⇒ M|ϕ, w, gϕ |= @uψ
iff	M, w,g |= ϕ ⇒ (∃v ∈ W|ϕ s.t. M|ϕ, v, gϕ |= u ∧ M|ϕ, v, gϕ |= ψ)
iff	M, w,g |= ϕ ⇒ (∃v ∈ W s.t. M, v,g |= ϕ ∧ M, v,g |= u ∧ M|ϕ, v, gϕ |= ψ) iff	M, w,g |= ϕ ⇒ (∃v ∈ W s.t. M, v,g |= u ∧ M, v,g |= ⟨ϕ⟩ψ)
iff	M, w,g |= ϕ ⇒ M, w,g |= @u⟨ϕ⟩ψ iff	M, w,g |= ϕ → @u⟨ϕ⟩ψ
This is similar to 1.
Let a model M = ⟨W, (Ra)a∈A,V ⟩, a state w ∈ W and an assignment g in M be given. Let also formulas ϕ and ψ be given such that the state variable x does not occur in ϕ. Note that since x does not occur in ϕ, for all assignments h and hj such that they only differs on x, M, w,h |= ϕ if and only if M, w, hj |= ϕ (for all models M and states w). We now have the following equivalences, where gj is just
like g except that gj(x)= w and gj is just like gϕ except that gj (x)= w:

M, w,g |= [ϕ]↓x.ψ	iff	M, w,g |= ϕ ⇒ M|ϕ, w, gϕ |=↓x.ψ

iff	M, w,g |= ϕ ⇒ M|ϕ, w, gj
iff	M, w, gj |= ϕ ⇒ M|ϕ, w, gj
|= ψ
|= ψ

iff	M, w, gj |= [ϕ]ψ
iff	M, w,g |=↓x.[ϕ]ψ,	2
The soundness of the proof system follows from the soundness of KrH(@,↓,E) together with the soundness of the reduction axioms. For the completeness of the proof system, we first define a translation t : HPAL(@, ↓, E) → PH(@, ↓, E). The translation uses the reduction axiom to translate away all public announce- ment operators, for instance is t([ϕ]Kaψ) = t(ϕ → Ka[ϕ]ψ). On all other logical connectives and operators t does nothing, for instance t(Kaϕ) = Kat(ϕ). In the case of the downarrow binder a little more care has to be taken due to the be- fore mentioned possibility of accidentally binding. In this case the translation is t([ϕ]↓x.ψ)= t(↓xj.[ϕ](ψ[x := xj])), where xj is a new state variable not occurring in

ϕ or ψ. Note that the translation is not defined inductively on the usual complexity of a formula, for the public announcement operator we split into sub cases. There- fore we cannot prove results regarding t by induction on usual formula complex- ity. However, the complexity of the formula immediately succeeding the public an- nouncement operator decreases trough the translation, and this we can use. A new complexity measure c : HPAL(@, ↓, E) → N can be defined such that c decreases for every step of the translation, for instance c([ϕ]@iψ) > c(ϕ → @i(ϕ ∧ [ϕ]ψ)). The details are omitted, see [16] or [9]. Using this complexity measure we can easily prove that every formula of HPAL(@, ↓, E) is provably equivalent to its translation:
Lemma 3.2 For all HPAL(@, ↓, E) formulas ϕ,
▶KHPAL(@,↓,E) ϕ ↔ t(ϕ)

From this lemma together with soundness of the proof system, it follows that all formulas is also semantically equivalent to their translation:
Lemma 3.3 For all HPAL(@, ↓, E) formulas ϕ, all models M = ⟨W, R, V ⟩, all
w ∈ W, and all assignments g,
M, w,g |= ϕ	⇐⇒	M, w,g |= t(ϕ)
Note that translating pure formulas from HPAL(@, ↓, E) results in pure formu- las in PH(@, ↓, E). A general completeness result now follows:
Theorem 3.4 (Completeness for KHrAL(@,↓,E)) Let Σ be a substitution-closed set of pure HPAL(@, ↓, E)-formulas. Every set of HPAL(@, ↓, E)-formulas that is KHrAL(@,↓,E) + Σ-consistent is satisﬁable in a model whose underlying frame validates all the formulas in Σ.
Proof. Assume that Γ is KHrAL(@,↓,E) +Σ-consistent. For a set of HPAL(@, ↓, E)- formulas X, let t(X) := {t(ϕ) | ϕ ∈ X}. Then t(Γ) is KrH(@,↓,E) + t(Σ)-consistent, for assume otherwise: Then there are ϕ1, ..., ϕn ∈ Γ such that ▶KPH(@,↓,E)+t(Σ) t(ϕ1 ∧ ... ∧ ϕn) → ⊥. But then also ▶KHPAL(@,↓,E)+Σ t(ϕ1 ∧ ... ∧ ϕn) → ⊥ (using lemma 3.2 on formulas in Σ) and by lemma 3.2, ▶KHPAL(@,↓,E)+Σ ϕ1 ∧ ... ∧ ϕn → ⊥, which is a contradiction to Γ being KHrAL(@,↓,E) + Σ-consistent. Now by theorem
2.9 t(Γ) is satisfiable in a model M (which is also a model for HPAL(@, ↓, E)), and
by lemma 3.3 it follows that Γ is also satisfiable in M.
Finally, for all pure formulas ϕ ∈ Σ, t(ϕ) is a pure formula. Thus by theorem
2.9 the underlying frame of M validates all of the formulas t(ϕ) ∈ t(Σ). But by lemma 3.3 the underlying frame then also validates all ϕ ∈ Σ.	2
We could have left out any of the operators ↓x., E and thus got completeness for any of the weaker logics. Theorem 3.4 also provides completeness with respect to other classes of frames defined by pure formulas and thus we obtain public an- nouncement logics such as S4HrAL(@,↓,E) and S5HrAL(@,↓,E).

Adding distributed knowledge
Often notions of group knowledge are important when modeling knowledge in multi- agent settings. Distributed knowledge is such a notion and we will add it to KHrAL(−) in this section. In addition we will show that distributed knowledge is definable using satisfaction operators and the downarrow binder.
To add distributed knowledge we add to the language a modal operator DB, for every non-empty subset B ⊆ A. The semantics of DB is:
M, w,g |= DBϕ	iff	for all v ∈ W ; if (w, v) ∈ b∈B Rb then M, v,g |= ϕ.
The dual operator of DB will be denoted by DˆB . Note that the semantics of DB is given in term of intersection of relations, which in PDL is not modally definable though it is axiomatizable. 13 However, with nominals intersection becomes easy to modally define, and this we will use.
The standard way of extending PAL with new modalities begins with adding the new modalities to the underlying epistemic logic and finding a complete axiomati- zation of this combined logic. Then reduction axioms for the new modalities have to be found and shown to be sound. In many cases, using the generality of theorem 3.4, we can shorten this process considerably and add new modalities directly to KHrAL(−) without having to show completeness of the underlying logic and sound- ness of new reduction axioms. We will demonstrate this by adding distributed knowledge to KHrAL(−). This is done by adding pure formulas that completely axiomatize distributed knowledge. The proof system of the logic KHrAL(−,D) is shown in figure 3.

Fig. 3. The alternative Hilbert-style proof system for KPH(−,D).

This approach is similar to one used for adding the global modality to KrH(@,−). We have to make sure that the pure formulas (DK) defines the right class of frames,
i.e. frames for which RB =  b∈B Rb. However, there is a little more subtleness to

13 There is no axiom that for all frames ⟨W, R1, R2, R3⟩ can force R1 = R2 ∩ R3, see for instance [10]. However the logic obtained by adding distributed knowledge, interpreted as intersection, to epistemic logic can be axiomatized, see for instance [6].

this than in the case of KrH(−). Theorem 3.4 only insures that the axioms DK becomes valid in the underlying frame of MΓ and not necessarily in all subframes of that frame. However if a frame satisfies that RB = b∈B Rb then all subframes also satisfy this property, and we have:
Lemma 4.1 DˆB i x  b∈B Kˆbi is valid on a frame ⟨W, (Ra)a∈A, (RB)B/=∅,B⊆A⟩ if
and only if RB =  b∈B Rb holds in the frame and all subframes.
Thus we obtain completeness of the system of figure 3 from theorem 3.4:
Theorem 4.2 (Completeness for KHrAL(−,D)) Let Σ be a set of pure HPAL(−, D)-formulas.  Every set of HPAL(−, D)-formulas that is KHrAL(−,D) + Σ-consistent is satisﬁable in a model whose underlying frame validates all the formulas in Σ.
To see that this is a real issue for completeness, look at the modality [a; b] defined
by:

M, w,g |= [a; b]ϕ	iff	for all v ∈ W ; if (w, v) ∈ Ra; Rb then M, v,g |= ϕ,

where Ra; Rb denotes the composition of the relations Ra and Rb defined by Ra; Rb =
{(x, y) | ∃z : (x, z) ∈ Ra ∧ (z, y) ∈ Rb}. In classical Hybrid Logic this is definable by the pure axiom ⟨a; b⟩i x ⟨a⟩⟨b⟩i. This axiom is easily seen to be valid exactly on the class of frames where Ra;b = Ra; Rb. However, just because Ra;b = Ra; Rb holds on a frame, does not necessarily imply that it also holds on all subframes. 14 Thus in the scope of a public announcement operator [ϕ] the modality [a; b] will change its meaning in the sense that it does not necessarily quantify over the composition of the relations Ra and Rb anymore. The problem lies in the fact that composition is not an operation that is preserved when going to submodels contrary to intersection.

The deﬁnability of distributed knowledge using satisfaction operators and the downarrow binder
In the case of the logics KrH(@,↓,−) (or KHrAL(@,↓,−)) it turns out that distributed knowledge is locally definable:
Proposition 4.3 Let B ⊆ A contain at least 2 elements 15 , let a ∈ B, let ϕ be a PH(@, ↓, −)-formula and let x and y be different state variables that do not occur in ϕ. Then for all models M = ⟨W, (Ra)a∈A,V ⟩, all assignments g in M and all w ∈ W:
M, w,g |= DBϕ	iff	M, w,g |= ↓x.Ka ↓y. @x(∧b∈B\{a}Kˆby) → ϕ .

14 Take for instance the frame ⟨W, Ra, Rb, Ra;b⟩, where W = {x, y, z}, Ra = {(x, y)}, Rb = {(y, z)} and Ra;b = {(x, z)}. This frame satisfies that Ra;b = Ra; Rb, but in the subframe only containing the states x and z, we still have (x, z) ∈ Ra;b although (x, z) ∈/ Ra; Rb.
15 If B only contains b then clearly DB is definable as Kb.

Proof. The proof is given by the following equivalences, where gj is just like g except that gj(x) = w and gjj is just like gj except that gjj(y) = v (thus gjj is just like g except that gjj(x)= w and gjj(y)= v):

iff∗ ∀v ∈ W [∀b ∈ B(wRbv)	⇒ M, v, gjj |= ϕ] iff	∀v ∈ W [∀b ∈ B(wRbv)	⇒ M, v,g |= ϕ] iff	M, w,g |= DBϕ,
where we in “iff∗” have used that x and y do not occur in ϕ.	2
Thus when adding distributed knowledge to the logic KHrAL(@,↓,—) we can simply take the formula DBϕ to be an abbreviation for the formula ↓ x.Ka ↓
y. @x(∧b∈B\{a}Kˆby) → ϕ . Furthermore, as a corollary, adding distributed knowl-
edge does not add to the expressive power of KrH(@,↓,—) or KHrAL(@,↓,—):
Corollary 4.4 The	logics	KrH(@,↓,—)	(KHrAL(@,↓,—))	and	KrH(@,↓,D,—)
(KHrAL(@,↓,D,—)) are equally expressive.

Conclusion and further work
In this paper it has been shown that nominals, satisfaction operators, the downar- row binder, the global modality, and distributed knowledge can be added to Public Announcement Logic. Furthermore general completeness results for extensions with pure formulas, a well celebrated result in Hybrid Logic, also transfer to the case of Hybrid Public Announcement Logic. The completeness is shown using reduction axioms as in classical PAL. Hence the public announcement operator does not in- crease the expressive power when added to Hybrid Logic. Using the terminology of [14], classical Hybrid Logic is not closed under relativization because nominals might lose their references in submodels, but relaxing Hybrid Logic to a logic with only partially denoting nominals, Hybrid Logic does become closed under relativization.

The fact that the nice properties of Hybrid Logic are preserved in the combina- tion with PAL adds significantly to the proof theory of PAL. We have demonstrated this by adding distributed knowledge via pure formulas. It was also noted that adding modalities by pure formulas is a little more subtle than in classical Hybrid Logic, due to the fact that some operations, such as composition, is not preserved when going to submodels. This can be put more formally in a general framework (see [8]). Finally it was shown that distributed knowledge could actually be defined using satisfaction operators and the downarrow binder. That Hybrid Logic has much to offer the proof theory of PAL is also demonstrated by the tableau system developed in [7], but surely there is still much more that Hybrid Logic can offer to the proof theory of PAL. This is left for future research.
Another line of further research is to add common knowledge to the Hybrid Public Announcement Logic. The question of extending the logic from Public An- nouncement Logic to full Dynamic Epistemic Logic is left for further research as well. The problem here is that in full Dynamic Epistemic Logic there are epistemic actions that can expand a state into several states, and thus it is not clear anymore what nominals should denote.

References
Carlos Areces and Balder ten Cate. Hybrid logics. In Patrick Blackburn, Johan van Benthem, and Frank Wolter, editors, Handbook of Modal Logic, pages 821–868. Elsevier, Amsterdam, 2007.
Patrick Blackburn. Internalizing labelled deduction. Journal of Logic and Computation, 10(1):137–168, 2000.
Patrick Blackburn. Arthur Prior and hybrid logic. Synthese, 150(3):329–372, 2006.
Patrick Blackburn and Balder ten Cate. Pure extensions, proof rules, and hybrid axiomatics. Studia Logica, 84(2):277–322, 2006.
Patrick Blackburn and Mroslava Tzakova. Hybrid languages and temporal logic. Logic Journal of of the IGPL, 7(1):27–54, 1999.
Ronald Fagin, Joseph Y. Halpern, Yoram Moses, and Moshe Y. Vardi. Reasoning about knowledge. The MIT Press, Cambridge, Mass., 1995.
Jens Ulrik Hansen. Terminating tableaux for dynamic epistemic logics. In Proceedings of the 6th workshop on Methods for Modalities (M4M-6), Electronic Notes in Theoretical Computer Science, volume 262, pages 141–156. Elsevier, 2010.
Jens Ulrik Hansen. A hybrid public announcement logic with distributed knowledge – extended version.
Manuscript available from the author’s webpage, 2011.
Barteld Kooi. Expressivity and completeness fir public update logics via reduction axioms. Journal of Applied Non-Classical Logics, 17(2):231–153, 2007.
Solomon Passy and Tinko Tinchev. An essay in combinatory dynamic logic. Information and Copmutation, 93(2):263–332, 1991.
Olivier Roy. Thinking Before Acting. Intentions, Logic, Rational Choice. PhD thesis, Institute for logic, Language and Computation, Universiteit van Amsterdam, Amsterdam, The Netherlands, February 2008. ILLC Dissertation series DS-2008-03.
Olivier Roy. A dynamic-epistemic hybrid logic for intentions and information changes in strategic games. Synthese, 171(2):291–320, 2009.
Balder ten Cate. Internalizing epistemic actions. In M Martinez, editor, Proceedings of the NASSLLI- 2002 student session, pages 109–123. 2002.

Johan van Benthem and Daisuke Ikegami. Modal fixed-point logic and changing models. In A. Avron,
N. Dershowitz, and A. Rabinovich, editors, Pillars of Computer Science: Essays Dedicated to Boris (Boaz) Trakhtenbrot on the Occasion of his 85th Birthday, LNCS 4800, page 146 165. Springer, Berlin, 2008.
Johan van Benthem, Sieuwert van Otterloo, and Olivier Roy. Preference logic, conditionals, and solution concepts in games. In H. Lagerlund, S. Lindstrm, and R. Sliwinski, editors, Modality Matters: Twenty- Five Essays in Honour of Krister Segerberg, Uppsala Philosophical Studies 53, pages 61–76. University of Uppsala, Uppsala, 2006.
Hans van Ditmarsch, Wiebe van der Hoek, and Barteld Kooi. Dynamic Epistemic Logic. Syntese Library volume 337. Springer, The Netherlands, 2008.
