Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 325 (2016) 313–333
www.elsevier.com/locate/entcs
The Algebra of Partial Equivalence Relations
Fabio Zanasi1
Institute for Computing and Information Sciences (iCIS) Radboud University Nijmegen
The Netherlands

Abstract
Recent work by the author with Bonchi and Sobocin´ski shows how PROPs of linear relations (subspaces) can be presented by generators and equations via a “cube construction”, based on letting very simple structures interact according to PROP operations of sum, fibered sum and composition via a distributive law. This paper shows how the same construction can be used in a cartesian setting to obtain presentations by generators and equations for the PROP of equivalence relations and of partial equivalence relations.
Keywords: PROP, distributive law, string diagram, partial equivalence relation, Frobenius algebra


Introduction
PROPs (product and permutation categories [21]) are symmetric monoidal cate- gories with objects the natural numbers. In the last two decades, they have become increasingly popular as an environment where to study diverse computational mod- els in a compositional, resource sensitive fashion. To make a few examples, they have recently featured in algebraic approaches to Petri nets [7,26], bigraphs [8], quantum processes [11] and signal flow graphs [2,4,1].
PROPs can be used to specify both the syntax and the semantics of systems. A “syntactic” PROP T is generated starting from a symmetric monoidal theory (Σ, E), which intuitively is an algebraic specification for operations with multiple inputs and outputs; arrows of T are freely constructed by composition of operations in the signature Σ, and then quotiented by the equations in E. On the other hand, a “semantic” PROP S is specified with a direct definition of its arrows, typically in terms of some mathematical object of interest. A full completeness result is a precise correspondence between these two perspectives, in the form of an isomorphism

T −→∼=
S.	(1)



1 Email: fzanasi@cs.ru.nl

http://dx.doi.org/10.1016/j.entcs.2016.09.046
1571-0661/© 2016 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

In this situation, we say that (Σ, E) presents S. Examples of (1) are ubiquitous and play a foundational role in most of the aforementioned research threads. For instance, the theory of commutative monoids presents the PROP of functions; the theory of Hopf algebras presents the PROP of integer matrices; the theory of Frobe- nius algebras presents the PROP of 2-Dimensional cobordisms.
In recent years, increasingly more elaborated examples have been tackled using modular reasoning principles. An illustrative case is the theory of interacting Hopf algebras IH, which characterises the PROP LRelk of k-linear relations [5]. This result inspired recent investigation in the foundations of the ZX-calculus [3,14] and in categorical control theory [2,4,1]. What is most interesting for our purposes is that the isomorphism IH ∼= LRelk can be obtained as a universal arrow through a “cube” construction, based on seeing the two PROPs as the result of the interaction of simpler theories by means of operations of sum, fibered sum and composition. This modular account is a valuable source of information about the structural properties of the theories of interest: for instance, it shows that LRelk is the result of combining PROPs of spans and of cospans of linear maps, and the equations of IH essentially describe this interaction.
The central idea of this work is to show how the same cube construction can be used to characterise other PROPs of relations: whereas [5] focuses on the linear case, we shall study the cartesian case, both total and partial. In the total case, we construct a modular characterisation for the PROP ER of equivalence relations starting from PROPs of spans and cospans of (injective) functions, see (5) below. This will show an isomorphism between ER and the PROP IFr freely generated by a quotient of the theory of special Frobenius algebras [9], which plays a foundational role in many recent works [23,2,1,11].


IFr −→∼=
ER	(2)


To give an idea of how the isomorphism (2) works, an arrow of IFr, for which we shall use the 2-dimensional representation as a string diagram, as on the left below, shall represent an equivalence relation on the sets of variables associated with its left and right ports, as on the right below. Two variables are in the same equivalence class if they are linked in the graphical representation.


v1 v2
v3	u2	'→
3
u4 u5
an equivalence relation with classes [v2], [v1, v3, u1, u2, u3], [u4, u5].

The dotted lines hint at the fact that, as a result of our modular perspective, any diagram of IFr will enjoy a factorisation in terms of simpler theories, whose interaction is what the axioms of IFr describe.
Building on this result, we will shift to the partial case. First, we use PROP composition to construct a presentation PMn (partial commutative monoids) for the PROP PF of partial functions. Then, we will show that the PROP PER of partial



HA + HAop 	 HA¸op ; HA
op _c ∼=	 ¸ .
Mn + Mnop 	 Mn¸op ; Mn
op _c ∼=	 ¸.

HA ; HA
IH	∼=
∼=	 
Mn ; Mn
1	∼=
∼=	 

∼=	Matk + Matop   	 Sp¸an(Matk )	∼=
F + Fop 	 	 Sp¸an(F)

   _c
   _c

Cospan(Matk)	 LR¸elk
Un + Unop 	 Un¸op ; Un
Cospan(F)
Un + Unop 	 Un¸op ; Un

op_c ∼=	  .
_c ∼=	 .

Mn ; Mn
IFr¸
∼=	PMn ; PMnop 	 IPF¸r	∼=

∼=	∼=
∼=	In + Inop 	 	 Sp¸an(In)	∼=	In + Inop 	 	 Sp¸an(In)

   _c
   _c
  .

Cospan(F)
Cospan(PF)	 PE¸R


Figure 1. An overview of the various cube constructions considered in this paper. From the top-left corner: the linear case, yielding a characterisation for the PROP LRelk of k-linear relations (see [5]); the degenerate cartesian case, collapsing to the terminal PROP (Remark 4.11); the (non-degenerate) cartesian case, yielding a characterisation for the PROP ER of equivalence relations (Theorem 4.2); the partial cartesian case, yielding a characterisation for the PROP PER of partial equivalence relations (Theorem 5.4). In the main text we shall write PROPs of spans and cospans in factorised form to emphasise their provenance from distributive laws, e.g. Span(F) as Fop ; F ans Cospan(F) as F ; Fop .
equivalence relations (PERs) 2 arises as the result of merging PROPs of cospans of partial functions and of spans of injective functions, see (10) below. As for the case of ER, an isomorphism arises from this modular account: it will relate PER and the syntactic PROP IPFr, yet another variation of the theory of special Frobenius algebras.
IPFr −→∼= PER
In a nutshell, the diagrammatic rendition of partial equivalence relations given by
IPFr enhances the total case by integrating connectors ,  for partiality.
Related work. The use of partial equivalence relations in program semantics dates back to the seminal work of Scott [24]. They have been used extensively in the semantics of higher order λ-calculi (e.g., [17,28]) and, more recently, of quantum computations (e.g., [18,15]). Note that in most of these applications PERs are the objects of the category of interest, whereas in the PROP PER they are the arrows, with relational composition, and only defined on ﬁnite domains. In fact, our emphasis is on the modular techniques to characterise PER (and their applicability to similar families of structures) rather than on the use of PERs in semantics.
Algebraic presentations for categories of equivalence relations have been studied in the last two decades by a few authors. A characterisation for ER in terms of Frobenius structures is given in [13], with a proof based on finding a normal form for string diagrams. The same result appears in a recent manuscript [12], which is based, like our work, on treating equivalence relations as jointly-epi cospans. This idea, as well as its algebraic implications, is studied in the earlier paper [6] as part of a taxonomy of span/cospan categories over Set.
The present work is part of the author’s PhD thesis [29], defended in October 2015. Differently from the aforementioned papers, our approach focuses on a modu-

2 Recall that a relation on a set X is a PER if it is symmetric and transitive — equivalently, if it is an equivalence relation on a subset Y ⊆ X.

lar reconstruction of ER: its presentation is built from the interaction of very simple algebraic theories, by the use of PROP operations. In particular, Lack’s technique for composing PROPs [19] is pivotal. Also, we extend our methodology to the anal- ysis of partial functions and partial equivalence relations, in a way that to the best of our knowledge did not appear before in the literature.
It is also worth mentioning that there is a pleasant symmetry between the analy- sis of equivalence relations and (plain) relations. Whereas the former are jointly-epic cospans and are modeled by separable Frobenius algebras with an additional axiom from the theory of bialgebras, the latter are jointly-mono spans and are modeled by bialgebras with the addition of an axiom from the theory of separable Frobenius algebras [20]. Interestingly, the combination of the two theories in their entirety collapses to the terminal PROP, see Remark 4.11 below. 3
Synopsis. In §2 we recall the basics of the theory of PROPs. § 3 introduces the PROP operations of sum, fibered sum and (iterated) composition, with the example of partial functions (Ex. 3.3). § 4 constructs the cube (5) necessary for the characterisation of equivalence relations (Th. 4.2). § 5 completes the picture with the characterisation (10) of partial equivalence relations (Th. 5.4).
Prerequisites and notation. We assume familiarity with basic category the- ory (see e.g. [22]) and the definition of symmetric strict monoidal category [22,25] (often abbreviated as SMC). We write f ; g : a → c for composition of f : a → b and g : b → c in a category C. It will be sometimes convenient to indicate an arrow

f∈C
f : a → b of C as x −−→
y or also ∈C , if names are immaterial. For C an SMC, ⊕

is its monoidal product, with unit object I, and σa,b : a ⊕ b → b ⊕ a is the symmetry
associated with a, b ∈ C. We write 0 for ∅ and n +1 for {1,..., n,n + 1}.
PROPs
Our exposition is founded on PROPs (product and permutation categories [21]).
Definition 2.1 A PROP is a symmetric strict monoidal category with objects the natural numbers, where ⊕ on objects is addition. PROPs form a category PROP with morphisms the identity-on-objects symmetric strict monoidal functors.
A typical way of constructing a PROP is starting from a symmetric monoidal theory (SMT): it is a pair (Σ, E), where Σ is a signature of generators o : n → m with arity n and coarity m. The set of Σ-terms is obtained by composing generators in Σ, the unit id : 1 → 1 and the symmetry σ1,1 : 2 → 2 with ; and ⊕. That means, given Σ-terms t : k → l, u : l → m, v : m → n, one constructs new Σ-terms t ; u : k → m and t ⊕ v : k + n → l + n. The set E of equations contains pairs (t, tj : n → m) of Σ-terms with the same arity and coarity.
There is a natural graphical representation for Σ-terms using the formalism of string diagrams [25]. A Σ-term n → m is pictured as a box with n ports on

3 This observation is also relevant for algebraic approaches to quantum processes, see e.g. [16, Th. 5.6].

the left and m ports on the right. Composition t ; s is rendered graphically as
and t ⊕ s as	. The symmetric monoidal structure is generated from
, representing id 1 : 1 → 1, , representing id 0 : 0 → 0, and , representing
σ1,1 : 2 → 2.
An SMT (Σ, E) freely generates a PROP T by letting arrows n → m in T be Σ-terms modulo E. We say that (Σ, E) isa presentation of a PROP S when S ∼= T . When Σj ⊆ Σ and Ej ⊆ E, there is an evident inclusion PROP morphism from the PROP T j generated by (Σj, Ej) to the one T generated by (Σ, E), for which henceforth we reserve notation T j ,˛  T ¸.
Example 2.2
In the SMT (ΣM , EM ) of commutative monoids, ΣM contains a multiplication  : 2 → 1 and a unit  : 0 → 1. Equations EM assert associativity (M1), commutativity (M2) and unitality (M3).
=  (M1)	 =  (M2)	 = 	(M3)
(ΣM , EM ) presents the PROP F whose arrows n → m are total functions from n to m, with n = {1,..., n}. Writing Mn for the PROP freely generated
by (ΣM , EM ), the isomorphism Mn ∼= F is defined by interpreting string diagrams as graphs of functions. For instance, the diagram on the
right represents the function 3 → 3 mapping 1 on the left to 2 on the  right and 2, 3 on the left to 1 on the right.
The SMT (ΣC, EC) of cocommutative comonoids is based on a comultiplication  : 1 → 2 and a counit  : 1 → 0. EC is the following set of equations.
= 	(C1)	 = 	(C2)	 = 	(C3)
We write Cm for the PROP freely generated by (ΣC, EC). There is an evident isomorphim Cm ∼= Mnop given by “vertical rotation” of string diagrams. Therefore, (ΣC, EC) presents Fop.
The PROP Fr of special Frobenius algebras [9] is generated by the theory (ΣM ΣC, EM  EC  F ), where F is the following set of equations.
 =  = 	(F1)	 = 	(F2)
The PROP B of (commutative/cocommutative) bialgebras is generated by the theory (ΣM  ΣC, EM  EC  B), where B is the following set of equations.


= 	(B1)
=	(B2)
= 	(B3)
=	(B4)

Remark 2.3 The assertion that (ΣM , EM ) is the SMT of commutative monoids— and similarly for other SMTs appearing in our exposition—can be made precise

by establishing a correspondence between commutative monoids in a symmetric monoidal category C and objects F (1) identified by symmetric monoidal functors F : Mn → C, often called models or algebras of Mn. As models are not central in our work, we refer the reader to [19] for more information.
PROP operations
The following table summarises three operations on given PROPs T1 and T2. Sup- posing that they are presented by SMTs (Σ1, E1) and (Σ2, E2) respectively, the second column describes a presentation for the PROP resulting from the operation.

We now illustrate the three operations. The simplest, the sum, just combines the two theories without adding any interaction.
The fibered sum mimics a kind of construction typical in algebra, from geometric gluing constructions of topological spaces to amalgamated free products of groups. The idea is to identify some structure T3 that is in common between the two theories. In all applications, the assumption is that Σ3 ⊆ Σ1 ∩ Σ2 and E3 ⊆ E1 ∩ E2: the quotient ≡Σ3 identifies o1 ∈ Σ1 and o2 ∈ Σ2 when o1 = o2 is in Σ3, and ≡E3 acts similarly on equations. On PROPs, this operation amounts to pushing out the inclusion morphisms T1 ¸,rzT3 ,˛ T2¸from the PROP T3 freely generated by (Σ3, E3). The composition enhances the sum with compatibility conditions between T1
and T2. Also this operation mimics a standard pattern in algebra: e.g. a ring is
given by a monoid and an abelian group, subject to equations that ensure that the former distributes over the latter. Formally, the operation T1 ; T2 is defined in [19] by understanding PROPs T1, T2 as monads in a certain bicategory [27], and then compose them via a distributive law λ : T2 ; T1 → T1 ; T2. The resulting monad T1 ; T2 is also a PROP, enjoying a presentation as the quotient of T1 + T2 by the equations Eλ encoded by the distributive law. The set Eλ is simply the graph of

λ, which can be seen as a set of directed equations ( ∈T2
∈T1 ) ≈ ( ∈T1
∈T2 ) telling

how arrows of T2 distribute over arrows of T1. In fortunate cases, like the examples below, it is possible to present Eλ by a simpler, or even finite, set of equations, thus giving a sensible axiomatisation of the compatibility conditions expressed by λ.
Example 3.1

The PROP F of functions can be described as the composite Su ; In, where Su
and In are respectively the PROP of surjective and of injective functions [19].

The witnessing distributive law λ : In ; Su → Su ; In maps a function ∈In
∈Su

to its epi-mono factorisation ∈Su
∈In .
−−→−−→

−−→−−→
In more syntactic terms, using the isomorphism F ∼= Mn, this result says that Mn is the composite Mu ; Un, where Mu ∼= Su is the PROP freely gener- ated by the SMT ({ }, {(M1), (M2)}) and Un ∼= In by the SMT ({}, ∅). The distributive law explains the origin of equation (M3) of Mn, which indeed describes how to move the generator   of Un past the one   of Mu.
There is a distributive law λ : Fop ; F → F ; Fop mapping a pair ∈Fop ∈F ,
−−−→−−→
i.e. a span ∈F ∈F , to (a choice of) its pushout cospan ∈F ∈F , i.e. a pair

∈F ∈Fop
[19]. Because Mn ∼= F and Cm ∼= Fop, this yields a composite PROP

−−→−−−→
Mn ; Cm, presented as Mn + Cm modulo the equations arising from the dis- tributive law. By definition of λ, such equations can be read from pushout squares in F. For instance:


1 .
2
z1 ˛.

z1 ˛

    z  1


z 1 ˛  yields	;  =  ;
z1 	


where the second diagram is obtained from the pullback by applying the iso- morphisms F ∼= Mn and Fop ∼= Cm. In fact, Lack [19] shows that in order to present λ it suffices to check three pushout squares, corresponding to equa- tions (F1)-(F2). Therefore, Mn ; Cm is isomorphic to Fr (Example 2.2), and both have a concrete description in terms of cospans, i.e. the arrows of F ; Fop.
Dually, there exists a distributive law λ : F ; Fop → Fop ; F, defined by pullback in F [19], which yields the PROP Fop ; F of spans. All the equations arising by this distributive law can be proven from (B1)-(B4), yielding Fop ; F ∼= B.
Composing distributive laws
For our developments it is useful to generalise PROP composition to the case when there are more than two theories interacting with each other. The following result, a variation of a theorem by Cheng [10], is proven in [29, §2.4.6].
Proposition 3.2 Let F, H and G be PROPs presented by SMTs (ΣF , EF ),
(ΣH, EH) and (ΣG , EG ) respectively. Suppose there are distributive laws
λ : H ; F → F ; H	χ : H ; G → G ; H	ψ : G ; F → F ; G


satisfying the following “Yang-Baxter” equation:
Hψ	˛H ; F ; G   λG	 F¸; H ; G	Fχ
H ; G ; F



  ; G ; H


(3)

	  Gλ	 ¸
χF	G ; H ; F	G ; F ; H	ψH
˛F 

then the following two are distributive laws:

 H ; F ;	λG

Fχ
; H ;
; G ; H	 G ; H ;
Gλ	; F ;
ψH	; G ; H 


yielding the same PROP F ; G ; H. Furthermore, call Eλ, Eχ and Eψ the sets of equations encoding the three laws. Then F ; G ; H is presented by the signature ΣF  ΣH  ΣG and equations EF  EH  EG  Eλ  Eχ  Eψ.
Example 3.3 We show how the PROP PF of partial function can be presented modularly using iterated distributive laws. First, we introduce a new PROP Cu, generated by the signature {  } and no equations: modulo the different colouring, it is just Unop. Following the recipe of Proposition 3.2, we now combine Cu, Un and Mu via three distributive laws:
λ : Un ; Cu → Cu ; Un	χ : Un ; Mu → Mu ; Un	ψ : Mu ; Cu → Cu ; Mu
Using the isomorphisms Un ∼= In, Cu ∼= Inop and Mu ∼= Su, we can define χ by epi- mono factorisation as in Example 3.1(a); therefore, the resulting PROP Mu ; Un is Mu+Un quotiented by (M3). Because pullbacks in F preserve both monos and epis, we define λ and ψ by pullback in F. It is readily seen that λ and ψ are presented, respectively, by the first and the second equation below:
= 	(P1)	 = .	(P2)
Also, λ, χ and ψ verify the Yang-Baxter equation (3) and thus Proposition 3.2 yields a PROP Cu ; Mu ; Un presented as the quotient of Cu + Mu + Un by (M3), (P1) and (P2). By analogy with the total case Mn ∼= Mu ; Un, we shall use PMn (partial commutative monoids) as a shorthand for Cu ; Mu ; Un.
We now claim that PMn ∼= PF. To see this, observe that partial functions

f∈PF
n
i∈In
f∈F

−−−→ m are in bijective correspondence with spans n →−− z −−→ m: the injection
i tells on which elements z of n the function f is defined. Since Inop ∼= Cu and F ∼= Mn ∼= Mu ; Un, this correspondence yields the desired isomorphism PF ∼= Inop ; F ∼= Cu ; Mu ; Un ∼= PMn.
As a last remark, note that the factorisation property of PMn allows to interpret any arrow of this PROP as the graph of a partial function, where 
indicates partiality. For instance, the diagram on the right represents
the function 4 → 3 undefined on 1 and mapping 2, 4 to 2 and 3 to 3.
A presentation of equivalence relations
This section builds modularly a presentation for the PROP ER of equivalence rela- tions, using the operations introduced in § 3. In defining ER, we use the following notation: [e♩ is the symmetric and transitive closure of a relation e and dTY is the restriction of an equivalence relation d on a set X to a subset Y ⊆ X.

Definition 4.1 Let ER be the PROP whose arrows n → m are the equivalence relations on n  m. Given e1 : n → z and e2 : z → m, the composite e1 ; e2 : n → m is defined in steps as follows.
e1 ∗ e2 :=	{(v, w) | ∃u. (v, u) ∈ e1 ∧ (u, w) ∈ e2} e1 ⬦ e2 :=	e1 ∪ e2 ∪ [e1 ∗ e2♩
e1 ; e2 :=	e1 ⬦ e2Tn m
The monoidal product e1 ⊕ e2 is given by disjoint union of e1 and e2.
In words, for composition one first defines an equivalence relation e1 ⬦ e2 on n z m by gluing together equivalence classes of e1 and e2 along common witnesses in z, then obtains e1 ; e2 by restricting to elements of n  m. Here is an example:


4	 5 ¸; 5	 5 ¸	=	4	 5.¸

Our approach in characterising ER stems from the observation that cospans can be interpreted as “redundant” equivalence relations. This becomes particularly neat when representing cospans as string diagrams via the characterisation Fr ∼= F ; Fop (Example 3.1(b)), as below.


.	(4)

The dotted line emphasizes the fact that Fr factorises as Mn ; Cm. Both string di- agrams in (4) define an equivalence relation e on 5  7 by letting (v, w) ∈ e if the port associated with v and the one associated with w are linked in the graphical representation. For instance, 1, 2 ∈ 5 on the left boundary are in the same equiv- alence class as 1, 2, 3 ∈ 7 on the right boundary, whereas 5 ∈ 5 and 4 ∈ 7 are the only members of their equivalence class.
Observe that the two representations of e in (4) only differ for the sub-diagram
, which indeed does not play any role in the interpretation and stands for an “empty” equivalence class. Equation (B4) will be employed to express the redun- dancy of . Let us call IFr (irredundant Frobenius algebras) the PROP defined as the quotient of Fr by (B4). Our discussion leads to the following claim.
Theorem 4.2 IFr ∼= ER.
The isomorphism of Theorem 4.2 shall arise as a universal arrow in the following “cube” diagram in PROP, provided that the top and bottom square are pushouts.




Fr
∼=	[ι1,ι2]


In + In

 IF¸r
 C¸u ; Un
∼=
  
In¸ ; In


(5)

  ¸c	
F ; Fop
Π
First we explain the PROP morphisms in (5). Those of the top face are defined by inclusion of the corresponding SMTs and the rear vertical isomorphisms have been introduced in Examples 3.1-3.3. Thus we focus on the bottom face.
Definition 4.3
morphisms κ1 : In → Inop ; In, κ2 : Inop → Inop ; In, ι1 : In → F ; Fop and
ι2 : Inop → F ; Fop are given by

f
κ (n
id	f
f	f	id

1	−→ m)= (n →− n −→ m)	κ2(n −→ m)= (n →− m −→ m)

f
ι (n
f	id
f	id	f

1	−→ m)= (n −→ m →− m)	ι2(n −→ m)= (n −→ n →− m).

Π: F ; Fop → ER is defined on a cospan n p
q
z →−
m by




f
(v, w) ∈ Π(n →−



g
z −→


iff
⎧⎪⎪p(v)= q(w)	if v ∈ n, w ∈ m p(v)= p(w)	if v, w ∈ n
⎪⎩q(v)= q(w)	if v, w ∈ m.


(6)



Υ: Inop ; In → ER is defined on a span n  f∈In
g∈In
z −−−→
m as the reflexive and

symmetric closure of {(v, w) | f−1(v)= g−1(w)}.
It is lengthy but conceptually simple to verify that Π and Υ are indeed functorial assignments — details are reported in [29, Appendix A].
Informally, Π implements the idea of interpreting a cospan as an equivalence relation. For Υ, the key observation is that spans of injective functions can also be seen as equivalence relations. Once again, the graphical representation of an arrow
of Inop ; In as a string diagram in Cu ; Un can help visualising this fact. A factorised arrow of Cu ; Un as on the right can be interpreted as the equivalence
relation associating 1 on the left boundary with 2 on the right boundary, 3 on the left with 1 on the right and letting 2 on the left, 3 on the right be the only representatives of their equivalence class.
Note that this interpretation would not work the same way for spans of non-injective
functions, as their graphical representation in Fop ; F may involve  and  — more on this in Remark 4.11.
As explained above, Theorem 4.2 will follow from the following two lemmas.
Lemma 4.4 The top face of (5) is a pushout.
Proof The PROP Cu ; Un is defined as in Example 3.3, by pullback in In, whence it is presented as the quotient of Un + Cu by (B4). Therefore, by definition, the

SMT of IFr consists of the SMTs for Fr and Cu ; Un, modulo the identification of generators and equations of Un + Cu. This is the situation described by the fibered sum operation of § 3, which implies the statement of the lemma.	2
Lemma 4.5 The bottom face of (5) is a pushout.
We will get to the proof of Lemma 4.5 in steps. First, we need an understanding of when two cospans are identified by Π. (4) gives us a lead: two cospans represent the same equivalence relation precisely when they are the same modulo (B4). Now, since (B4) arises by a distributive law F ; Fop → Fop ; F defined by pullback in F (Example 3.1(b)), one could be tempted of claiming that Π identifies two cospans precisely when they have the same pullback. However, this approach identifies too
much. A counterexample is given by cospans represented by  and , which have the same pullback  but express different partitions of 2. The correct approach is subtler: since we only need to rewrite  as  , it suffices to pull back the region of the cospan where all sub-diagrams of shape   lie. Formally, we

decompose a cospan ∈F
∈F as ∈Su
∈In
∈In
∈Su
using the factorisation F ∼= Su ; In

(Example 3.1(a)), and then pull back the middle cospan ∈In ∈In . This removes all
−−→→−−
sub-diagrams of shape	, as in the following riproposition of (4).
Su In In Su	Su In In Su

→→	→  →


(7)



We crystallise our approach with the following definition.


Definition 4.6 We say that two cospans n	p1∈F
q ∈F
→−−−
m and n	p2∈F

q ∈F
→−−−	m are equal modulo-zeros if there is an epi-mono factorisation

e1∈Su m1∈In m1∈In e1∈Su
p1 q1
e2∈Su m2∈In m2∈In e2∈Su
p2 q2

−−−−→−−−−→→−−−−→−−−−  of
−→→−, and one
−−−−→−−−−→→−−−−→−−−−  of
−→→−

m1  m1	m2  m2

such that −−→→−− and −−→→−−
have the same pullback and e1 = e2, e1 = e2.

p	p	q	q
Remark 4.7 It may be insightful to remark that two cospans are equal modulo- zeros precisely when they are in the equivalence relation generated by
−→ z →− m  ∼  n	z −→ zj →− z →− m , where h is an injection.
p	q	p	h	h	q


The idea is that z −→h
zj →−h
z plays a role akin to a repeated use of equation (B4) in

the diagrammatic language: it deflates the codomain of [p, q]: n + m → z so as to “make it surjective”.
Our proof of Lemma 4.5 relies on showing that Π equalizes two cospans precisely when they are equal modulo-zeros. As a preliminary step, we need to establish some

properties holding for any Γ, Δ and X making the following diagram commute.
In + Inop 	[κ1, κ2]	 In¸op ; In
(8)
F ; Fop
Lemma 4.8 Given a PROP X and a commutative diagram (8), the following hold.
p  q	f g	f g	p  q
If −→→− is a cospan in In with pullback (in In) →−−→, then Γ(→−−→)= Δ(−→→−).

If p1 q1
p2 q2
p1 q1

Δ( p2 q2

If p1  q1
p2 q2
p1 q1
p2 q2

f g	p  q	f g	p  q
If →−−→ is a span in In with pushout (in F) −→→−, then Γ(→−−→)= Δ(−→→−).
Proof
p  q
We have that Δ(−→→−) = Δ(ι1p ; ι2q) = Δι1p ; Δι2q = Γκ1p ; Γκ2q =
f g
Γ(κ1p ; κ2q)= Γ(→−−→).

f g
Let
p1 q1
p2 q2
f g	p1 q1

f
and Γ(
g )= Δ( p2
q2 ). The statement follows.

By assumption n p1
q  m and n p2
q
→− m have epi-mono factorisations

ep	p	1	q	ep	p	2	q	1	1
n −→−−→ z →−−→− m and n −→−−→ r →−−→− m respectively, where −−→→−− and
2	2
p	q
−−→→−− have the same pullback. Then:

p1 q1
ep	p
eq
ep  id
1	1
p	q	id	q

Δ(−→→−)= Δ(−→−−→→−−→−)= Δ(−→→−); Δ(−−→→−−); Δ(−→→−)

(ii)
2
p  id
2	2
p	q	id	q
ep	p
eq
p2 q2

= Δ(−→→−); Δ(−−→→−−); Δ(−→→−)= Δ(−→−−→→−−→−)= Δ(−→→−).
Analogous to (i).	2
Lemma 4.8 states that any commutative diagram (8) equalizes all cospans that are equal modulo-zeros. In our cube (5), also the converse statement holds.
Lemma 4.9 The following are equivalent

n p1	q1
p2	q2

−→ z →− m and n −→ r →− m are equal modulo zeros.

Π( p1
q1 )= Π( p2
q2 ).

Proof Since bottom face of (5) commutes (see Lemma A.1 in the Appendix), Lemma 4.8 yield the direction (a) ⇒ (b). For the converse direction, a routine check shows that the definition of Π enforces the two cospans to have epi-mono factorisations with the desired properties. For details, see Appendix A.	2
We now have all the ingredients to show that the bottom face of (5) is a pushout.
Proof of Lemma 4.5 Commutativity is given by Lemma A.1, thus it remains to show the universal property. Suppose that we have a commutative diagram as

in (8). It suffices to show that there exists a PROP morphism Θ: ER → X with ΘΥ = Γ and ΘΠ = Δ – uniqueness is automatic by fullness of Π (Lemma A.2).
p  q
Given an equivalence relation e : n → m, there exist a cospan −→→− such that

p  q	p  q
p′  q′

Π(−→→−) = e. We let Θ(e) = Δ(−→→−). This is well-defined: if −→→− is another

p′  q′
p  q	p′ q′

cospan such that Π(−→→−)= e then Lemma 4.9 says that −→→− and −→→− are equal
p  q	p′ q′
modulo-zeros and thus, by Lemma 4.8, Δ(−→→−) = Δ(−→→−). This argument also
shows that, generally, ΘΠ = Δ. Finally, Θ preserves composition:


j	p q
p′  q′
p  q	p′ q′

Θ(e ; e )= Θ(Π(−→→−); Π(−→→−)) = Θ(Π((−→→−); (−→→−)))

p  q	p′ q′
p  q	p′ q′	j

= Δ((−→→−); (−→→−)) = Δ(−→→−); Δ(−→→−)= Θ(e); Θ(e ).

f g	p  q
We conclude by showing ΘΥ = Γ: given a span →−−→ in In, let −→→− be its pushout
f g	p  q	p  q	f g
span in F. By Lemma 4.8.(iv), Γ(→−−→)= Δ(−→→−)= ΘΠ(−→→−) = ΘΥ(→−−→).  2
We can now conclude the characterisation of ER.
Proof of Theorem 4.2 The top and the bottom face of (5) are pushouts by Lemma 4.4 and 4.5. This yields a unique PROP morphism IFr → ER making the diagram commute. Since the other vertical arrows in (5) are isomorphisms, then IFr → ER is also an isomorphism.	2
Remark 4.10 As hinted by the rightmost diagram in (7), one can give an alter- native characterisation of ER as the composite PROP Su ; Inop ; In ; Su. This would rely on defining the appropriate distributive laws and combine them using Propo- sition 3.2: the resulting equations are precisely those of IFr. Then, showing that factorised arrows of Su ; Inop ; In ; Su are in bijective correspondence with equiva- lence relations in ER completes the proof that IFr ∼= ER. In our exposition we preferred to use the “cube” construction (5), as it applies also to linear and partial functions (cf. § 6). Also, it yields the isomorphism IFr ∼= ER as a universal arrow.
Remark 4.11 Our construction merges the theory of cospans of functions and of spans of injective functions to form the theory of equivalence relations. One may wonder what happens with a more symmetric approach, namely if we consider spans of arbitrary functions. Mimicking the cube construction (5) would result in the following diagram in PROP, where the top and the bottom face are pushouts.
,˛  ¸B
  > 

Fr
 T ¸	~=

~=	F + F
   c
  
F ¸; F
(9)

F ; Fop 	 . ¸ 
The SMT for T includes the SMTs for Fr and B, allowing us to prove


(M3),(C3)
=
(F1)
=
(B2)
=
(B1)
=
(B4)
=	.

This derivation trivialises the theory, as it implies that any two arrows of the same type are equal. Thus T , as well as the pushout object of the bottom face in (9), is the terminal object in PROP: for any PROP S there is a unique morphism that

maps any arrow n ∈S
m into the unique arrow with that source and target in T .

A presentation of partial equivalence relations
Building on the results of the previous section, we shall now characterise the PROP PER of partial equivalence relations (PERs) via another cube construction. In defin- ing PER, we write dom(e) for the set Y ⊆ X of elements on which a partial equiv- alence relation e on X is defined. Also, we reuse the operation −⬦− introduced in defining ER (Definition 4.1).
Definition 5.1 Let PER be the PROP with arrows n → m partial equivalence relations on n  m. Given e1 : n → z, e2 : z → m, the composite e1 ; e2 is defined by
Ω(e1,e2) := {u ∈ n  m | ∀w ∈ z. (u, w) ∈ e1 ⬦ e2 ⇒ w ∈ dom(e1) ∩ dom(e2)}
e1 ; e2 :=	e1 ⬦ e2TΩ	.
(e1,e2)
The monoidal product e1 ⊕ e2 is given by disjoint union.
In words, composition in PER is defined as in ER, but e1 ; e2 is left undefined on elements that, while gluing e1 and e2 into e1 ⬦ e2, fall into the same equivalence class as an element of z on which either e1 or e2 is undefined. Here is an example in which the composite e1 ; e2 turns out to be everywhere undefined:




3	 4 ¸; 4	 2 ¸	=	3		 2.¸
We now discuss what SMT will present PER. As we did for equivalence relations, we first establish some preliminary intuition on the diagrammatic rendition of PERs. For functions, partiality was captured graphically by incorporating an additional generator  (Example 3.3). The strategy for PERs is analogous: for the elements on which a PER e is defined, the diagrammatic description is the same given for equivalence relations in (4); the elements on which e is undefined will correspond instead to ports where we plug in  (if on the left) or  (if on the right).
Therefore, the string diagrammatic theory for PERs will involve Fr expanded with generators  ,  , subject to suitable compatibility conditions. This plan concretises into the PROP of “partial” special Frobenius algebras, whose definition relies on the PROP PMn discussed in Example 3.3.
Definition 5.2 The PROP PFr is defined as PMn + PMnop quotiented by equa- tions (F1), (F2) and the following two.


 =  = 	(PFR1)	 = 	(PFR2)
Intuitively, (PFR1) (together with (P1) and (P2) from PMn and their counter- parts in PMnop) is the algebraic rendition of the “cancellation property” that we observed in the composition of partial equivalence relations.
As a partial version of Fr, we expect PFr to characterise cospans of partial functions. To phrase this statement, note that PF is equivalently described as the coslice category 1/F (that is, the skeletal category of pointed finite sets and functions) and thus has pushouts inherited from F. We can then form the PROP PF ; PFop of cospans in PF via a distributive law PFop ; PF → PF ; PFop defined by pushout, analogously to the case of functions (Example 3.1(b)).
Proposition 5.3 PFr ∼= PF ; PFop.
Proof For soundness of PFr, one simply needs to check that (PFR1) and (PFR2) can be read off pushout squares in PF, analogously to Example 3.1(c). Conversely, completeness amounts to show that any equation that can be read off pushout squares in PF is provable in PFr. The key insight is that any such pushout can be decomposed into simpler pushout squares only involving the generators of PFr. Thus it suffices to check that the interaction of generators is covered by the axioms of PFr. We leave further details for Appendix A.	2
Now that we have an algebraic theory of cospans of partial functions, we can approach PERs by removing redundancy. Let us call IPFr (irredundant partial Frobenius algebras) the quotient of PFr by (B4).
Theorem 5.4 IPFr ∼= PER.
We proceed analogously to the case of equivalence relations. The isomorphism of Theorem 5.4 arises as a universal arrow in the following diagram in PROP, provided that the top and the bottom face are pushouts.
Un + Cu ,˛	 F¸r ,˛	 P¸Fr
>
~=
Cu ; Un ,˛	 IF¸r ,˛	 IP¸Fr	~=

~	~
[ι ,ι ]
(10)

~=
[κ1,κ2]
In + Inop	1 2
 F ;¸Fop
Π
Λ	 PF¸; PFop
Π′

op   c
   c

In	; In	Υ
 ER¸	 PE¸R

The leftmost cube is just (5). We now specify Λ, Ξ and Πj.

For Λ, recall that there is a functor R : PF → F which maps n to n + 1 and f : n → m to the function n +1 → m + 1 sending to ∈ 1 the elements on which f is undefined. Now, R has a left adjoint L : F → PF: the obvious embedding of functions into partial functions. We define Λ as the embedding

of F ; Fop into PF ; PFop induced by L. This is a functorial assignment because left adjoints preserve pushouts.
Similarly, we let Ξ be the obvious embedding of ER into PER. This assignment is functorial because composition in PER behaves as composition in ER on PERs that are totally defined.
The PROP morphism Πj : PF ; PFop → PER is the extension of Π: F ; Fop → ER
to partial functions, defined by the same clause (6). Note that the generality
of PER is necessary: the value e of Πj on a cospan p  q in PF is possibly not
−→→−
a reflexive relation, since p and q may be undefined on some elements of n, m.
Proof of Theorem 5.4 The leftmost top and bottom squares of (10) have been proven to be pushouts in Lemmas 4.4 and 4.5. The rightmost top square is readily seen to be a pushout by definition of the SMTs involved, similarly to the proof of Lemma 4.4. It thus remains to show that the rightmost bottom square is also a pushout. It clearly commutes by definition of Π, Πj, Ξ and Λ. To complete the
proof, because Λ is an embedding, it suffices to check that Ξ(e)= Πj( p  q ) precisely


p′  q′	op

p′  q′
−→→−
p′ q′	p  q

when there exist −→→− in F ; F	such that e = Π(−→→−) and Λ(−→→−) =−→→−. We
leave the (simple) details to Appendix A.
Finally, since the top and the bottom face of (10) are pushouts and the vertical arrows are isomorphisms, the universal arrow IPFr → PER is also an isomorphism.2

Conclusions
Our work combines PROPs of spans and cospans of functions to give an algebraic characterisation for PROPs of equivalence relations. What we find most striking is that the same “cube” pattern leads to similar results in the total and partial cartesian case, explored here, and in the linear case, investigated in [5]. It seems that we are scratching the surface of a more general construction, which needs some further insights to be better understood — as we saw, it collapses with spans of non-injective functions (Remark 4.11). We leave this investigation for future work.
Acknowledgement
Thanks to Filippo Bonchi, Pierre-Louis Curien, Peter Selinger, Pawel Sobocin´ski and the anonymous referees for useful comments and discussion. The author ac- knowledges support from the ERC under the European Union’s Seventh Framework Programme (FP7/2007-2013) / ERC grant no 320571.

References
Baez, J. C. and J. Erbele, Categories in control, CoRR abs/1405.6881 (2014).

Bonchi, F., P. Sobocin´ski and F. Zanasi, A categorical semantics of signal flow graphs, in: Concurrency Theory - 25th International Conference, CONCUR 2014. Proceedings, 2014, pp. 435–450.


Bonchi, F., P. Sobocin´ski and F. Zanasi, Interacting bialgebras are Frobenius, in: Foundations of Software Science and Computation Structures - 17th International Conference, FOSSACS 2014, 2014,
pp. 351–365.
Bonchi, F., P. Sobocin´ski and F. Zanasi, Full abstraction for signal flow graphs, in: Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, POPL 2015, 2015, pp. 515–526.
Bonchi, F., P. Sobocin´ski and F. Zanasi, Interacting Hopf algebras, Journal of Pure and Applied Algebra (2016), to appear.
URL http://arxiv.org/abs/1403.7048
Bruni, R. and F. Gadducci, Some algebraic laws for spans (and their connections with multi-relations), in: RelMiS 2001 (2001).
Bruni, R., H. C. Melgratti and U. Montanari, A connector algebra for P/T nets interactions, in:
CONCUR ‘11 (2011), pp. 312–326.
Bruni, R., U. Montanari, G. D. Plotkin and D. Terreni, On hierarchical graphs: Reconciling bigraphs, gs-monoidal theories and gs-graphs, Fundam. Inform. 134 (2014), pp. 287–317.
Carboni, A. and R. F. C. Walters, Cartesian bicategories I, J Pure Appl Algebra 49 (1987), pp. 11–32.
Cheng, E., Iterated distributive laws., Math. Proc. Camb. Philos. Soc. 150 (2011), pp. 459–487.
Coecke, B. and R. Duncan, Interacting quantum observables: categorical algebra and diagrammatics, New Journal of Physics 13 (2011), p. 043016.
Coya, B. and B. Fong, Corelations are the prop for extraspecial commutative Frobenius monoids, CoRR
abs/1601.02307 (2016).
Doˇsen, K. and Z. Petri, Syntax for split preorders, Annals of Pure and Applied Logic 164 (2013),
pp. 443–481.
Duncan, R. and K. Dunne, Interacting Frobenius algebras are Hopf, CoRR abs/1601.04964 (2016).
Hasuo, I. and N. Hoshino, Semantics of higher-order quantum computation via geometry of interaction, in: Proceedings of the 26th IEEE Symposium on Logic in Computer Science, LICS, 2011, pp. 237–246.
Heunen, C. and J. Vicary, Lectures on categorical quantum mechanics (2012).
URL  www.cs.ox.ac.uk/files/4551/cqm-notes.pdf

Jacobs, B., “Categorical Logic and Type Theory,” Number 141 in Studies in Logic and the Foundations of Mathematics, North Holland, Amsterdam, 1999.
Jacobs, B. and J. Mandemaker, Coreflections in algebraic quantum logic, Foundations of Physics 42
(2012), pp. 932–958.
Lack, S., Composing PROPs, Theor App Categories 13 (2004), pp. 147–163.
Lafont, Y., Equational reasoning with 2-dimensional diagrams, in: H. Comon and J.-P. Jounnaud, editors, Term Rewriting, Lecture Notes in Computer Science 909, Springer Berlin Heidelberg, 1995 pp. 170–195.
Mac Lane, S., Categorical algebra, B Am Math Soc 71 (1965), pp. 40–106.
Mac Lane, S., “Categories for the Working Mathematician,” Springer, 1998.
Rosebrugh, R., N. Sabadini and R. Walters, Generic commutative separable algebras and cospans of graphs, Theory and applications of categories 15 (2005), pp. 164–177.
Scott, D., Data types as lattices, in: G. H. Mu¨ller, A. Oberschelp and K. Potthoff, editors, Proceedings of the International Summer Institute and Logic Colloquium, Kiel 1974 (1975), pp. 579–651.
Selinger, P., A survey of graphical languages for monoidal categories, Springer Lecture Notes in Physics
13 (2011), pp. 289–355.
Sobocin´ski, P., Nets, relations and linking diagrams, in: Algebra and Coalgebra in Computer Science - 5th International Conference, CALCO 2013, 2013, pp. 282–298.
Street, R., The formal theory of monads, J Pure Appl Algebra 2 (2002), pp. 243–265.
Streicher, T., “Semantics of type theory : correctness, completeness, and independence results,” Progress in theoretical computer science, Birkh¨auser, Boston, 1991.
Zanasi, F., “Interacting Hopf Algebras: the theory of linear systems,” Ph.D. thesis, Ecole Normale Sup´erieure de Lyon (2015).

A	Omitted Proofs
The following lemma is used in § 4.

Lemma A.1 The bottom face of (5) commutes.

Proof It suffices to show that it commutes on the two injections into In+Inop, that

means, for any f : n → m in In, Υ( id
f	f
) = Π(
id ) and Υ( f
id ) = Π( id f ).

These statements are clearly symmetric, so it is enough to check one:


Υ( id f
—1	—1

=	{(v, w) | f (v)= w ∨ f (w)= v ∨ v = w}
f ∈ In

f  id

=	{(v, w) | f (v)= w ∨ f (w)= v ∨ f (v)= f (w)} = Π(−→→−).
2

Proof of Lemma 4.9 We complete the proof in the main text by showing that
(b) ⇒ (a). For this purpose, it is useful to first verify the following properties:
for all u, uj ∈ n, p1(u)= p1(uj) if and only if p2(u)= p2(uj)
for all v, vj ∈ m, q1(v)= q1(vj) if and only if q2(v)= q2(vj)
for all u ∈ n, v ∈ m, p1(u)= q1(v) if and only if p2(u)= q2(v)
Let p1[n] be the number of elements of n that are in the image of p1, and similarly for p2[n]. Then p1[n]= p2[n].
q1[n]= q2[n].
For statement (i), observe that, by definition of Π, for any two elements u, uj ∈ n the
pair (u, uj) is in Π( p1  q1 ) if and only if p (u)= p (uj). Similarly, (u, uj) ∈ Π( p2  q2 )
−→→−	1	1	−→→−
if and only if p (u)= p (uj). Since by assumption Π( p1  q1 )= Π( p2  q2 ), we obtain
2	2	−→→−	−→→−
(i). A symmetric reasoning yields (ii). The argument for statement (iii) is analogous:
for i ∈ {1, 2} and u ∈ n, v ∈ m, by definition of Π, (u, v) ∈ Π( pi  qi ) if and only
−→→−
if p (u)= q (v). Since Π( p1  q1 )= Π( p2  q2 ), we obtain (iii). Statement (iv) is an
i	i	−→→−	−→→−
immediate consequence of (i), and (v) of (ii).
Now, by virtue of properties (i)-(v), it should be clear that we can define epi-

1	1	1	1
p	p	q	q
2	2	2	2
p	p	q	q
p1	q1

mono factorisations n −→−−→ z →−−→− m and n −→−−→ r →−−→− m of n −→ z →− m
and n p2	q  m respectively, with the following properties.
→−
e1 and e2 are the same function, with source n and target p1[n]= p2[n]. Also
p	p
e1 and e2 are the same function, with source m and target q1[m]= q2[m].
q	q
For all u ∈ p1[n] = p2[n] and v ∈ q1[n] = q2[n], m1(u) = m1(v) iff m2(u) = 

m2(v).



1	1	2	2
q	p	q
p	q	p

It remains to prove that −−→→−− and −−→→−− have the same pullback. For this

purpose, let the following be pullback squares in In:
h 	f1  q ¸[n]	h 	f2  q ¸[n]

g1	1
g2	2

p [n]
 ¸ 
	 ¸ 

1 	1	z
p
p1[n]	2	r
p

By the way pullbacks are computed in In (i.e., in F), using (vii) we can conclude that
m1g2 = m1f2 and m2g1 = m2f1. By universal property of pullbacks, this implies
p	q	p	q

that the spans g1 f1
and g2 f2
are isomorphic.	2

The following observation is used in the proof of Lemma 4.5.
Lemma A.2 Π: F ; Fop → ER is full.
Proof Let c1,..., ck be the equivalence classes of an equivalence relation e on n m.
p	q
We define a cospan n −→ k →− m by letting p map v ∈ n to the equivalence class ci
to which v belongs, and symmetrically for q on values w ∈ m. It is routine to check
p  q
that Π(−→→−)= e.	2
Next, we give more details on the proof of Proposition 5.3. The hard part is to check that the equation associated with any pushout diagram in PF is provable by the equations of PFr. The key observation is that we can confine ourselves to just pushouts involving the generators of PMn.
Before making this formal, we illustrate the idea of the argument with the fol- lowing example. The leftmost diagram below is a diagram representing a span
f g	f g
→−−→ (left), which we transform into a cospan (right) pushing out →−−→, only using
equations of PFr.

→	→→ →
⇒	⇒
→	→	→ → →
⇒	⇒
→	→ → → →
⇒

f
The steps are as follows.  First, we expand
g
and
as f1 f2
and g1 g2 g3

respectively, in such a way that each fi and gi contains at most one generator of
PF and PFop. In the next steps, we proceed pushing out spans fi gj  whenever
→−−→
possible: graphically, this amounts to apply valid equations of PFr of a very simple kind, namely those describing the interaction of a single (or no) generator of PFop with one (or none) of PF. Note that pushing out spans of this form always gives
p  q
back a cospan −→→− with p, q containing at most one generator, meaning that the
procedure can be applied again until no more spans appear. The resulting diagram (the rightmost above) is the pushout of the leftmost one by pasting properties of pushouts. Therefore, we just proved that the equation
→	→ → → →
=

arising by the distributive law PFop ; PF → PF ; PFop is provable in PFr.
We now formalise the argument sketched above. Let us call atom any diagram of

f
PMn of shape
b g
, where f and g consist of components	and	composed

−→−→−→
together via ⊕ or ; , and b is either  or a generator of PMn. The following lemma establishes that PFr is complete for pushouts involving atoms.
f g
Lemma A.3 Let →−−→ be a span in PF where f and g are in the image (under
the isomorphism PMn ∼= PF) of atoms and suppose that the following is a pushout square.

f	r
m .
g
zn ˛
(A.1)


Then (i) p and q are also in the image of atoms and (ii) the associated equation is provable in PFr.
Proof The two points are proved by case analysis on all the possible choices of generators of PMn and (PMn)op.	2
Proof of Proposition 5.3 Fix any pushout square (A.1) in PF and pick expansions f = f1 ; ... ; fk and g = g1 ; ... ; gj, with each fi and gi in the image of an atom. We can calculate the pushout above by tiling pushouts of atoms as follows:

f1	z
 
g1
z  g2

z¸ 
z. . .¸ 
z¸ 
... 
... 
z¸ 
(A.2)

Point (i) of Lemma A.3 guarantees that each inner square only involves arrows in the image of some atom and Point (ii) ensures that all the associated equations are provable in PFr. It follows that also the equation associated with the outer pushout (A.2) is provable.	2
We complete the proof sketch of Theorem 5.4 given in the main text. The following is the key lemma.

p  q
Lemma A.4 Let e ∈ ER[n, m] and
PF ; PFop. The following are equivalent.

Ξ(e)= Πj( p  q ).
−→→−∈

−→→−
There are cospans p1  q1 , ... , pk  qk  in F ; Fop[n, m] such that

−→→−
−→→−
e = Π( p1
q1 )

Λ( p1 q1
p2 q2

Π( p2 q2
p3 q3

−→→−)= Π(−→→−)
...... 
Λ( pk  qk	p  q

Proof First we observe that, because Λ is an embedding, Λ( pi
qi )= Λ( pi+1
qi+1
)

implies pi  qi

pi+1

qi+1
−→→−
−−−→→−−

−→→−=−−−→→−−. It follows that (ii) is equivalent to the statement that (iii)

p′  q′	op
p′  q′
p′ q′	p  q

there exist −→→−∈ F ; F  [n, m] such that e = Π(−→→−) and Λ(−→→−) =−→→−.
It is very easy to show that (iii) implies (i):



p′  q′
comm. of (10)	j
p′  q′
(iii)
j p  q

Ξ(e)
= ΞΠ(−→→−)
=	Π Λ(−→→−)
= Π (−→→−).

For the converse direction, suppose that we can show (*) the existence of

p′  q′	op
p′ q′	p  q

−→→−∈ F ; F [n, m] such that −→→−= Λ(−→→−). Then the following derivation gives
statement (iii):


(i)
j p q
(*)	j
p′  q′
comm. of (10)
p′  q′

Ξ(e)
= Π (−→→−)
= Π Λ(−→→−)
=	ΞΠ(−→→−).



p′  q′
Indeed, because Ξ is an embedding, the derivation above implies that e = Π(−→→−).
Therefore it suffices to show (*). For this purpose, we just need to prove that both
p∈PF	q∈PF
n −−−→ z and m −−−→ z are total functions. Let u be an element of n: since

Πj( p  q
j p  q

−→→−) = Ξ(e) and Ξ embeds equivalence relations into PERs, then Π (−→→−) is
in fact an equivalence relation, meaning that u belongs to some equivalence class of
the partition induced by Πj( p  q ). It follows by definition of Πj that p : n → z is
−→→−
defined on u. With a similar argument, one can show that q : m → z is defined on
p  q
all elements of m and thus both p and q are total functions. This implies that −→→−
is in the image of the embedding Λ.	2
Proof of Theorem 5.4 In order to complete the proof of the main text, it re- mains to show that the leftmost bottom face of (10) is a pushout. First, recall that pushouts in PROP can be calculated as in Cat. In particular, (10) involves cate- gories all with the same objects and identity-on-objects functors. This means that the pushout object is the quotient of ER and F ; Fop along the equivalence relation generated by

p  q	p′ q′
p′ q′
p′ q′	p  q

{(e, −→→−) | there is −→→− such that Π(−→→−)= e and Λ(−→→−)= −→→−}. (A.3)

Lemma A.4 proves that Πj and Ξ map n e∈ER
p
m and n
q
m to the same arrow

exactly when they are in the equivalence relation described above. This means that
PER indeed quotients by (A.3) and thus is the desired pushout object.	2
