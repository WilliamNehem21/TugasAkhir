Original Article
Multi-objective cooperative scheduling: An application on smart grids
Khouloud Salameh a,b, Richard Chbeir a,⇑, Haritza Camblong b
a Univ. Pau & Pays Adour, LIUPPA, 64600 Anglet, France
b University of Basque Country, Donostia 20018, Spain
a r t i c l e
i n f o
Article history:
Received 15 September 2017
Revised 25 October 2017
Accepted 26 October 2017
Available online 28 October 2017
Keywords:
Multi-objective optimization
Smart Grid
Scheduling
a b s t r a c t
As the size of the Smart Grid (SG) grows, the economic signiﬁcance of power generation, consumption
and storage scheduling becomes more and more apparent. A proper scheduling for electricity generation,
consumption and storage will also ensure the reliability of the SG and extend the operational lives of its
constituent units. Besides, it can achieve economical and ecological beneﬁts for the SG. In this work, we
propose a multi-objective cooperative scheduling consisting of two main modules: (1) the Preference-
based Compromise Builder and (2) the Multi-objective Scheduler. The Preference-based Compromise
Builder aims at generating the best balance or what we call ‘the compromise’ between the preferences
or associations of the sellers and the buyers that must exchange power simultaneously. Once done,
the Multi-objective Scheduler aims at proposing a power schedule for the associations, in order to
achieve three-dimensional beneﬁts: economical by reducing the electricity costs, ecological by minimiz-
ing the toxic gas emissions, and operational by reducing the peak load of the SG and its components, and
by increasing their comfort. Conducted experiments showed that the proposed algorithms provide con-
vincing results.
� 2017 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University. This is an
open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
1. Introduction
The Information and Communication Technologies (ICT) repre-
sent unprecedented opportunities to move the power systems into
a new era of reliability and efﬁciency that will contribute to oper-
ational, economical and ecological improvements. During this
transition period, it is important to implement adequate tech-
niques allowing to ensure that the beneﬁts envisioned from the
SG (cf. Fig. 1) become a reality. Commonly considered as a key
mechanism towards a more efﬁcient and cost effective SG, the
Demand Side Management (DSM) [6,16] refers to the planning
and implementation of the utility companies’ programs1 designed
to directly or indirectly inﬂuence the consumer consumption in
the aim of reducing the system peak load and electricity costs.
DSM
techniques
can
be
mainly
gathered
in
two
main
categories:
– The load shifting [12] which involves shifting the power con-
sumption from on-peak to off-peak periods
– The energy efﬁciency and conservation [2] which encourages con-
sumers to reduce their consumption in order to reduce their
electricity bills and the peak load.
Although important the emergence of tools provided by the
energy efﬁciency and conservation approaches, such as TiDomus
[7], we focus here on the load shifting, and more speciﬁcally on
the power scheduling, since it has been observed that it is easier
to motivate users to reschedule their needs rather than asking
them to reduce their consumption [12]. Several approaches have
been provided in the literature to address the power scheduling
problem [11,19,15,1,5,17]. However, and to the best of our knowl-
edge, none of the them fully addresses the following challenges:
– Operational Challenges: Several limitations can be mentioned
regarding the operational aspect:
1. The consumer discomfort: while the consumers are enjoy-
ing their reduced electricity bills when shifting their con-
sumption from on-peak to off-peak periods, they might risk
https://doi.org/10.1016/j.aci.2017.10.005
2210-8327/� 2017 The Authors. Production and hosting by Elsevier B.V. on behalf of King Saud University.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
⇑ Corresponding author.
E-mail addresses: khouloud.salameh@univ-pau.fr (K. Salameh), richard.chbeir@
univ-pau.fr (R. Chbeir), aritza.camblong@ehu.eus (H. Camblong).
Peer review under responsibility of King Saud University.
Production and hosting by Elsevier
1 A utility company is a company that engages in the generation and the
distribution of electricity for sale generally in a regulated market.
Applied Computing and Informatics 15 (2019) 67–79
Contents lists available at ScienceDirect
Applied Computing and Informatics
journal homepage: www.sciencedirect.com
discomfort related to the delay time of receiving their
desired power.
2. The local peaks: while trying to reduce the whole SG peak
load, it is essential to consider the individual SG components’
peak loads as well. This would conduct to increase the relia-
bility of the components and decrease the local failure risks.
3. The consumption wise: the current shifting programs
[11,19,15,5] provide consumption scheduling without con-
sidering the production nor the storage scheduling (with
the exception of few approaches [1,17]) which negatively
impact their efﬁciency in shaping the peak load, reducing
the electricity bills and minimizing the gas emissions effects.
– Economical Challenges: Knowing that the electricity price
relies on the demand and supply over a speciﬁc period [10],
an adequate scheduling is expected to shift loads during periods
of high market prices (peak hours) and consequently minimize
the electricity costs.
– Ecological Challenges: A signiﬁcant power production from
pollutant energy sources leads to a signiﬁcant toxic gas emis-
sions. Hence, it is essential to provide a power production
scheduling allowing to reduce the bad emissions and effects
on the environment by reducing the simultaneous toxic power
production.
To address the aforementioned challenges, we introduce here
MOCSF, a ‘Multi-Objective Cooperative Scheduling Framework’
designed for the power scheduling in the SG. MOCSF aims at
scheduling a set of couples, each consisting of a seller and buyer,
working together in a mutual spirit so to ensure a better reduction
of the economical, operational and ecological costs and impacts
within the SG. In addition, our approach presents several advan-
tages over existing approaches, namely:
1. It provides a scheduling coverage able to consider all of the
power consumption, production and storage entities of the SG,
2. It
considers
multiple
energy
sources
(unlike
existing
approaches [11,19,15,1,5,17] that studied the interaction of
the consumers with only one energy source),
3. It takes into account the SG components’ preferences unlike
current approaches [19,1,17] that consider them partially.
The rest of this paper is organized as follows. Section 2 provides
details about existing power scheduling techniques and their
drawbacks regarding aforementioned challenges. Section 3 details
the ‘MOCSF’ modules. An illustrative example is provided after
each step to ease the understanding of each module. In Section 4,
the experiments conducted to validate our approach and the main
results obtained are presented. Section 5 concludes the paper.
2. Related work
Many approaches have been proposed in the literature to solve
the power scheduling problem. Current approaches can be catego-
rized into two main groups [8]: semi-automatic schedulers
[11,19,5] and automatic schedulers [17,15,1] schedulers. In the
semi-automatic schedulers, the consumers inject their desired
preferences (e.g., desired temperature, appliances start time pref-
erences, etc.) during the scheduling, contrarily to the automatic
schedulers where there is no human intervention. In our work,
we will be focusing on six scheduling approaches, that vary in their
scheduler,
optimization
problem
type,
appliances
types
and
objectives.
2.1. Semi-automatic schedulers
In [11], the authors developed a distributed power consumption
scheduling algorithm aiming at reducing the electricity bills and
balancing the total power demand when multiple consumers share
a single energy source. To do so, the authors formulated a game-
theory technique, where the players are the consumers and the
strategies are their corresponding power consumption schedules
(represented as vectors). The objective function of each consumer
n when choosing the strategy xn is deﬁned as follows:
Min
X
H
h¼1
Ch
X
n2N
X
a2An
xh
n;a
 
!
ð1Þ
where Ch is the cost function, assumed to be strictly convex for each
h 2 H, and H ¼ 24. xh
n;a is the schedule of the appliance a, owned by
the player n, at hour h. The pseudo-code of the distributed algo-
rithm proposed is provided in cf. Algorithm 1.
Algorithm 1. Executed by each consumer n 2 N
Acronyms
Diseco
economical dissatisfaction
Disecolo
ecological dissatisfaction
Disop
operational dissatisfaction
Sðe; wÞ
satisfaction
Seco
economical satisfaction
Secolo
Ecological Satisfaction
Sop
operational satisfaction
DE
digital ecosystem
Dis
dissatisfaction
DSM
Demand Side Management
e
edge
ICT
Information and Communication Technologies
PG
purchase graph
S
schedule
SG
smart grid
W
set of weights
68
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
For each player n 2 N, the power consumption scheduling is
generated randomly. The intuition behind this choice is that the
authors considered that, at the beginning, a player n has no prior
information about others players. Then, a loop is executed until
the algorithm converges. Within the loop, the objective function
is resolved using an IPM algorithm [3], resulting a new schedule
for each player. The same process is repeated until there is no
new announced schedule for all the players. Simulations results
showed that the proposed distributed algorithm can reduce the
electricity bills and the peak of average ratio.
In [19], the authors developed a meta-heuristic scheduling algo-
rithm, aiming at reducing the dissatisfaction and the energy cost of
a set of homes in a district, and the variance of the grid. To do so,
the authors divided the home appliances into two categories:
power-shiftable and time-shiftable appliances. The objective func-
tion is formulated as follows:
Min
X
T
t¼1
X
S
j¼1
IijðtÞ � UijðtÞ þ a � ðcðtÞ �
X
S
j¼1
PijðtÞÞ
"
þ b �
X
T
t¼1
X
S
j¼1
� PijðtÞ � 1=jTj �
X
N
i¼1
X
T
t¼1
X
S
j¼1
PijðtÞ
 
!2 #
ð2Þ
where T is the set of time interval, N is the set of households, S is the
set of electric appliances, IijðtÞ is a binary variable denoting the
working status of the appliance j in the household i at time
t; UijðtÞ is the dissatisfaction caused by operating the appliance i in
the household i at time t;cðtÞ is the electricity sale price at time t,
and PijðtÞ is the working power of the appliance j in the household
i at time t.
The dissatisfaction function UijðtÞ represents the difference
between the desired temperature and the actual indoor tempera-
ture for the space heater at time t, and the difference between
the desired hot water temperature and the actual hot water tem-
perature for the water heater at time t.
The authors used the Cooperative Particle Swarm Optimization
(CPSO) (cf. Fig. 2) to ﬁnd the optimal scheduling of the appliances.
Experimental results showed the positive impact of the households
coordination in decreasing the peak loads and reducing the power
costs.
In [5], the authors developed a power consumption scheduling
aiming at reducing the electricity bills of the consumers with a
minimum impact on their consumption preferences. The authors
considered that the scheduler needs to determine the consumption
vector Xi ¼ ½xi;1; xi;1; . . . ; xi;H� for each unit i in the determined zone
horizon H, where H consists of M segments comprised of m time
intervals, i.e., H ¼ M � m. Then, a shrinking horizon optimization
problem [4] has been deﬁned as follows:
SðjÞðHÞ ¼
X
jm
h¼jm�mþ1
SðthÞ þ
X
jm
h¼jmþ1
^SðthÞ
ð3Þ
where SðjÞðHÞ is the total electricity cost in the jth optimization step,
Pjm
h¼jm�mþ1SðthÞ is the energy cost for m intervals in the jth time seg-
ment based on actual electricity prices, and Pjm
h¼jmþ1^SðthÞis the esti-
mated energy cost based on the forecasted electricity prices for
subsequent time intervals. Note that the user preferences are con-
sidered by including the time intervals where energy scheduling
is performed for unit i. Without giving details about the obtained
results, the authors assume that the proposed model can minimize
the electricity consumption costs while including the consumers’
preferences.
2.2. Automatic schedulers
In [15], the authors formulated an optimization model for
households power scheduling, aiming at reducing the electricity
costs and the peak load of the grid. To do so, the authors integrated
the incentive and inconvenience concepts. The incentive is offered
to the users during peak times to encourage them to reduce their
consumption, while the inconvenience seeks to reduce the differ-
ence between the baseline and the optimal appliances schedule.
The objective function is deﬁned as follows:
Min
X
T
t¼1
X
I
j¼1
½Piðct � Uopt
i;t � bt � dðUbl
i;t � Uopt
i;t ÞÞ � D:t þ ðUbl
i;t � Uopt
i;t Þ
2�
ð4Þ
where Pi is the rated power of the appliance i; Uopt
i;t is the new on/off
status of the appliance i at time t; Ubl
i;t is the baseline on/off status of
the
appliance
i
at
time
t; I ¼ 10; T ¼ 144; dðUbl
i;t � Uopt
i;t Þ ¼ 1
if
Fig. 1. Smart Electricity Network (Source: www.actia.com, 2017).
Fig. 2. CPSO conﬁguration and operation.
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
69
ðUbl
i;t � Uopt
i;t Þ > 0 and dðUbl
i;t � Uopt
i;t Þ ¼ 0 if ðUbl
i;t � Uopt
i;t Þ < 0. The formu-
lated model is solved using the MINLP algorithm, which utilizes
the Mixed Integer Programming (MIP) [18] and the Non-Linear Pro-
gramming (NLP) [3]. Simulations results showed that using this
model, the consumers realized 25% of electricity cost reduction.
Noting that this percentage is affected by several factors, such as
the number of shiftable appliances and the prices of the on-peak
and off-peak times.
In [17], the authors developed a power storage scheduling algo-
rithm aiming at managing the storage in the grid in a way of saving
energy and reducing the reliance on the non-renewable energy
sources. To do so, the authors formulated a game-theorist tech-
nique, where the players are the consumers and the strategies
are their storage schedule vectors. The objective function of each
player i when choosing the strategy si is deﬁned as follows:
Piðsi; s�iÞ
X
H
h¼1
ðsh
i þ l
h
i Þ
ð5Þ
where si is the storage schedule vector of all the players expect
i; Piðsi; s�iÞ is the power price determined using a continuous and
supply curve, and l
h
i is the amount of power required by the player
i at time h. The Nash equilibrium of the game correspond to the
storage schedule si that minimizes the global generator costs given
by Ph¼1
H
R qh
0 bhðxÞdx, where bhðÞ is the supply curve and qh is the total
amount of power traded by all the players at time h. Simulation
results showed that it is possible to realize an electricity bill saving
of 13% per consumer with a storage capacity of 4 kW.
Similar to [15], the authors in [1] proposed an energy storage
and loads scheduling algorithms aiming at reducing the electricity
costs and the peak load hours. In this study, the electricity load
analysis is done by grouping the day periods into three time zones
each representing a cluster. Each cluster represents the loads
expected to be launched during a given period. The cost required
to satisfy the power needs of a given cluster j, consisting of K appli-
ances is given by:
Cj ¼
X
K
m¼1
X
h2Tj
fðEh;m þ Bc
h;m � Bd
h;mÞ � rhg
ð6Þ
where Eh;m is the power purchased from the utility grid by a con-
sumer m to meet its electrical appliances’ power needs at period
h, Bc
h;m and Bd
h;m are the charging and discharging power proﬁles of
the consumer m for the same period h, and rh is the market power
price at a period h. An optimal load and storage scheduling should
satisfy the consumers’ requirements at the lowest cost in each per-
iod without harming the grid stability. To do so, the objective func-
tion has been deﬁned as follows:
Min
X
3
j¼1
ðCjÞ
ð7Þ
Here, linear programming was applied in resolving the optimization
problem. Simulation results showed a 20% of peak load reduction
and a 17% of costs savings.
2.3. Discussion
Table 1 shows a comparison between the existing DSM
approaches highlighting their strengths and drawbacks with
respect to the aforementioned challenges. On can observe the
following:
– Scheduling
coverage:
All
the
existing
DSM
approaches
[11,19,15,1,5,17] focused only on the power consumption
scheduling, with the exception of [1,17] that addressed the stor-
age scheduling as well. However, none of them covers the
power production scheduling.
– Consumer satisfaction: Few approaches [1,17,19] took into
account the consumers’ satisfaction. In [19], the consumers’
comfort is ensured by reducing the gap between the desired
and the actual hot water, and between the desired and the
actual indoor temperature. However, in [1,17], the satisfaction
is measured by the delay time between the desired start time
and the real operation of its household appliances. Contrariwise
to [11,15,5], where this aspect was completely absent.
– Multiple energy sources: To the best of our knowledge, all the
DSM approaches [11,19,15,1,5,17] target the interaction of the
consumers while assuming having only one utility grid and con-
sequently one energy source.
– Restricted
goal:
Another
limitation
of
all
the
existing
approaches is that they do not cope with the three objectives
(operational, ecological, and economical) of a successful DSM.
In almost all the approaches [11,19,15,1,5,17], the goal was
mainly to reduce the electricity costs (economical aspect). In
[11,19],
the
peak
load
reduction
(operational
aspect)
is
addressed aiming at reducing the peak hours in the power grid.
However, none of the approaches considers the gas emission
reduction (ecological aspect).
All these limitations lead us to develop a new DSM cooperative
model, allowing the scheduling of the power production, consump-
tion and storage while considering the three-objective aspect of
the DSM and the components’ preferences.
3. Multi-objective cooperative scheduling
In this section, we detail our ‘Multi-Objective Cooperative
Scheduling Framework’ or MOCSF aiming at reducing electricity
bills, peak loads and environmental bad effects, while enhancing
the comfort of the SG components. In order to conceive a coopera-
tive environment, MOCSF takes as input a set of couples, or what
we call: seller-to-buyer associations, each consisting of a seller
and buyer having mutual beneﬁts in working together, with their
desired schedules reﬂecting their operational preferences in terms
of: start time, end time and power quantity (to sell or to buy). The
main reason behind this choice relies on the fact that we do not
want to schedule the sellers and the buyers randomly but we
rather want to maintain the power exchange between the sellers
and the buyers having the biggest interest in working together
(the interest can be expressed via an objective function that takes
Table 1
Comparing existing DSM approaches.
Scheduling Coverage
Satisfaction
Multiple Energy Sources
Restricted Goal
Rad et al. [11]
Partial
�
�
Partial
Koukam et al. [19]
Partial
Partial
�
Partial
Ditiro et al. [15]
Partial
+
�
Partial
Peruknishnen et al. [17]
Partial
Partial
�
Partial
Christopher et al. [1]
Partial
�
�
Partial
Amin et al. [5]
Partial
+
�
Partial
Our Approach
+
+
+
+
70
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
into account the ecological, economical and operational parame-
ters). Several approaches have been proposed in the literature to
provide appropriate associations [13,14]. Our approach is based
on [14], where the authors provided a dedicated clustering algo-
rithm aiming at gathering the components that have mutual ben-
eﬁts. To do so, they proposed a Digital Ecosystem DE cooperative
model for SG management, that consists of two main modules:
(1) the Alliances Builder and (2) the Seller2Buyer matcher. The Alli-
ances Builder provides an appropriate clustering algorithm, aiming
at gathering all the DE heterogeneous components, having similar
needs and preferences. Once done, the Seller2Buyer matcher is
applied inside each cluster and between clusters, targeting a better
collaboration inside the SG. Note that, their needs and preferences
are expressed via a three-dimensional objective function that takes
into account the operational aspect by reducing the transmission
power losses wasted over the distribution lines and maintaining
a power balance (between the generation and the consumption),
the economical aspect by minimizing the environmental impact
due to the conventional energy sources, and the ecological aspect
by ensuring a stable energy trading via a cost reduction.
For the rest of our paper, we will be using the following exam-
ple: Let us consider an SG consisting of 9 components having the
power generation (g), demand (d) and storage (s) as shown in
Table 3. After classifying the SG components, they will be put into
three main categories: the sellers willing to sell their power sur-
plus (nR1 ! nRþ
1 , nR4 ! nRþ
2 ; nR6 ! nRþ
3 ; nR8 ! nRþ
4 ), the buyers
willing to buy their power needs (nR2 ! nR�
1 ; nR3 ! nR�
2 ; nR5 !
nR�
3 ; nR9 ! nR�
4 ), and the self-satisﬁed components (nR5 ! nR0
1)
(c.f. Table 2.).
After applying a clustering algorithm aiming at gathering the SG
components having mutual interests in working together based on
the minimization of an objective function that takes into account
the ecological, economical and operational costs, the result is a
set of couples or seller-to-buyer associations as follows:
Association 1 : ðnRþ
1 ;nR�
3 Þ�nRþ
1 should sell nR�
3 a quantity of 14 kW
Association 2 : ðnRþ
1 ;nR�
1 Þ�nRþ
1 should sell nR�
1 a quantity of 3kW
Association 3 : ðnRþ
4 ;nR�
1 Þ�nRþ
4 should sell nR�
1 a quantity of 1kW
Association 4 : ðnRþ
4 ;nR�
2 Þ�nRþ
4 should sell nR�
2 a quantity of 2kW
8
>
>
>
<
>
>
>
:
As shown in Fig. 3, MOCSF consists of two main modules:
Preference-based
compromise
builder
and
Multi-objective
Scheduler detailed in what follows.
3.1. Preference-based compromise builder
As mentioned before, the input of this module is a set of seller-to-
buyer associations, each composed of a seller and a buyer. Note that,
each seller or buyer might belong to one or several associations.
While sellers and buyers of the same association have to exchange
power, each one of them has its own preferences to be respected
so to establish a successful cooperative SG. Hence, the ﬁrst step
towards each association scheduling is to ﬁnd the best balance or
what we call the compromise, between the preferences of the
related seller and buyer. Let us consider the ﬁrst association
(nRþ
1 ; nR�
3 ) of the illustrative example. nRþ
1 and nR�
3 should be sched-
uled together, however nRþ
1 may have several preferences that are
different from nR�
3 ’s: for instance, this latter prefers to buy power
at 7:00 am, while nRþ
1 prefers to sell its surplus at 8:00 am. Hence,
our goal is to ﬁnd the trade-off between the sellers and the buyers
preferences. The problem becomes more and more complicated
when each seller and buyer exchanges power with several compo-
nents (since each can belong to several associations). For instance,
nRþ
1 belongs to another association as well, (nRþ
1 ; nR�
1 ), where nR�
1
prefers also to buy power at 7:00 am. Hence, our module should pro-
pose an optimal distribution of the sellers’ available power at each
time t, in that it can meet its preferences and the buyers preferences,
as well. Note that, for privacy reasons, a component has no prior
information with whom he will exchange power, he can only precise
the quantity he needs to sell or buy at each time t.
Before detailing the process, we present ﬁrst some deﬁnitions
used in our study. Each component nR,2 coud be a seller nRþ or a
buyer nR� having respectively power surplus and power need.
Deﬁnition 1 (Schedule [S]). A schedule S consists of the power
exchanged vector sR ¼ ½s1
R; s2
R; . . . ; sT
R�, where st
R denotes the corre-
sponding power quantity (in kW) that an entity R is willing to
exchange, at a time t over a period T r
Deﬁnition 2 (PurchaseGraph [PG]). A PurchaseGraph PG is an ori-
ented graph (V; E; S; EV) consisting of representingpower scheduling
of vertices vi
and associations e j
i
where each vertice vi
2
V ¼ fnRþg [ fnR�g represents a component, each edge e j
i connects
a seller vi 2 fnRþg to a buyer vj 2 fnR�g with the total power quan-
tity in EV exchanged between them, and each vertice vi or edge e j
i is
associated to one desired schedule, denoted sinit 2 S, and one opera-
tional schedule sop 2 S. The desired schedule designates the compo-
nent operational preferences expressing its willing power quantity
to exchange at each time t within a period T. The operational sched-
ule designates the proposed schedule (provided by our algorithm).
Note that, 8 nR 2 {PGk} ) nR R {PG–k}. To simplify in what follows,
– e:nRþ designates the edge seller,
– e:nR� designates the edge buyer,
– e:EV designates the edge total power quantity,
– sinit
nR designates the component desired schedule,
– sop
nR designates the component operational schedule,
– sinit
e
designates the edge desired schedule, and
– sop
e designates the edge operational schedule.
r
Table 2
Example of 9 components of an MG.
Component
Generation (g)
Demand (d)
Storage (s)
nR1
17
0
0
nR2
2
35
1
nR3
4
10
1
nR4
20
0
5
nR5
5
5
0
nR6
0
0
3
nR7
6
20
0
nR8
5
3
1
nR9
10
20
5
Table 3
Resulting components after of the Classiﬁcation module.
Component
Generation (g)
Demand (d)
Storage (s)
Gap (G)
nR1 (nRþ
1 )
17
0
0
+17
nR2 (nR�
1 )
2
35
1
�32
nR3 (nR�
2 )
4
10
1
�5
nR4 (nRþ
2 )
20
0
5
+25
nR5 (nR0
1)
5
5
0
0
nR6 (nRþ
3 )
0
0
3
+3
nR7 (nR�
3 )
6
20
0
�14
nR8 (nRþ
4 )
5
3
1
+3
nR9 (nR�
4 )
10
20
5
�5
2 Self-satisﬁed components are not included here.
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
71
Deﬁnition 3 (Satisfaction [Sas]). .The satisfaction of an edge e is
deﬁned according to the operational, economical, and ecological
satisfactions of its vertices (its connected seller and buyer). It con-
siders the sellers and buyers’ comfort (operational), the power
peak load (operational), the electricity bills (economical) and the
environmental impacts (ecological). Although it can be deﬁned
using different aggregation functions (e.g., maximum, average,
etc.), we adopted the weighted sum function to combine the
different objective aspects costs, allowing the user to tune the
weight of each criterion. Formally:
Sðe;WÞ ¼ W:wop �SopðeÞþW:weco �SecoðeÞþW:wecolo �SecoloðeÞ
ð8Þ
where:
– SopðeÞ represents the operational satisfaction of e,
– SecoðeÞ represents the economic satisfaction of e,
– SecoloðeÞ represents the ecological satisfaction of e, and
– W
is
a
set
of
three
weights,
denoted
as:� wop; weco;
wecolo �; wop þ weco þ wecolo ¼ 1 and ðwop; weco; wecoloÞ P 0
r
Thus, the satisfaction of a PG consisting of M edges is deﬁned as
follows:
SðPG; WÞ ¼
X
M
i¼0
Sðei; WÞ
ð9Þ
Similarly, the satisfaction of an SG consisting of N number of PG
is deﬁned as follows:
SðSG; WÞ ¼
X
N
i¼0
SðPGi; WÞ
ð10Þ
Note that, in our study, we are aiming to minimize the opera-
tional, ecological and economical dissatisfactions (Dis) as follows:
Disðe; WÞ ¼
1
1 þ Sðe; WÞ 2 ½0; 1�
DisðPG; WÞ ¼
1
1 þ SðPG; WÞ 2 ½0; 1�
DisðSG; WÞ ¼
1
1 þ SðSG; WÞ 2 ½0; 1�
ð11Þ
where the lower is the dissatisfaction (tends to 0), the higher is the
satisfaction.
Deﬁnition 4 (Operational Satisfaction[Sop]). The operational sat-
isfaction of an edge e, denoted Sopðe; WÞ, is deﬁned as:
Sopðe; WÞ ¼ W:wa � ComfortðeÞ þ W:wb � VarianceðeÞ
þ W:wc � VarianceðPGÞ
ð12Þ
where
W
is
a
set
of
three
weights,
denoted
as:� wa; wb; wc �; wa þ wb þ wc ¼ 1 and ðwa; wb; wcÞ P 0, and PG
is the PurchaseGraph to which e belongs. r
Thus, the operational satisfaction of a PG consisting of M edges
is deﬁned as follows:
SopðPG; WÞ ¼
X
M
i¼0
Sopðei; WÞ
ð13Þ
Similarly, the operational satisfaction of an MG consisting of N
number of PG is deﬁned as follows:
SopðSG; WÞ ¼
X
N
i¼0
SopðPGi; WÞ
ð14Þ
Note that, the operational dissatisfactions (Disop) is deﬁned as
follows:
Disopðe; WÞ ¼
1
1 þ Sopðe; WÞ 2 ½0; 1�
DisopðPG; WÞ ¼
1
1 þ SopðPG; WÞ 2 ½0; 1�
DisopðSG; WÞ ¼
1
1 þ SopðSG; WÞ 2 ½0; 1�
ð15Þ
where the lower is the operational dissatisfaction (tends to 0), the
higher is the operational satisfaction.
Deﬁnition 5. [Comfort [ComfortðeÞ]] The comfort of an edge e, is
the waiting time penalization of its vertices, deﬁned as:
ComfortðeÞ ¼
X
T
t¼1
Avgðe:nRþ:Op:Penalty � jsop
e ½t� � sinit
e:nRþ½t�j
þ e:nR�:Op:Penalty � jsop
e ½t� � sinit
e:nR�½t�jÞ
ð16Þ
where Penalty is the waiting time penalty of the seller nRþ and the
buyer nR�; jsop
e ½t� � sinit
e:nRþ½t�j is the difference between the initial
desired schedule and the real operation of the seller nRþ, and
jsop
e ½t� � sinit
e:nR�½t�j is the difference between the initial desired sched-
ule and the real operation of the buyer nR�. r
Note that, the penalty is a positive weighting factor, which
represents the waiting time ﬂexibility of the component. If the
penalty is zero, this means that the component does not penalize
the delay between its desired and operational schedule. The high-
est is the penalty, the most the component is delay time
constraining.
Deﬁnition 6 (Variance e [VarianceðeÞ]). The variance of an edge e,
denoted VarianceðeÞ is the peak load ratio of its vertices, deﬁned as:
Fig. 3. Multi-objective cooperative scheduling framework.
72
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
VarianceðeÞ ¼
X
T
t¼1
sop
e ½t� �
X
T
t¼1
sop
e ½t�
jTj
0
B
B
B
B
@
1
C
C
C
C
A
2
ð17Þ
r
Note that, the variance is a positive value reﬂecting the power
load dispersion all along T. The highest is the variance, the higher
are the peak loads probabilities.
Deﬁnition 7 (Variance PG [VarianceðPGÞ]). The variance of a PG,
denoted VarianceðPGÞ is the peak load ratio of its edges, deﬁned as:
VarianceðPGÞ ¼
X
T
t¼0
X
M
i¼0
Sop
e ½t� �
X
T
t¼0
X
M
i¼0
Sop
e ½t�
jTj
0
B
B
B
B
@
1
C
C
C
C
A
2
ð18Þ
where M is the number of e in PG r
Deﬁnition 8 (Variance SG [VarianceðSGÞ]). The variance of an MG,
denoted VarianceðSGÞ is the peak load ratio of the PGs forming the
SG, deﬁned as:
VarianceðSGÞ ¼
X
T
t¼1
X
N
j¼1
X
M
i¼1
PGj:sop
ei ½t� �
X
T
t¼1
X
M
i¼1
PGj:sop
ei ½t�
jTj
0
B
B
B
B
@
1
C
C
C
C
A
2
ð19Þ
where N is the number of PG in SG and Mis the number of e in PG r
Deﬁnition 9 (Economical Satisfaction [Seco]). The economical sat-
isfaction of an edge e, denoted SecoðeÞ, is deﬁned as:
SecoðeÞ ¼
X
T
t¼1
Avgðsop
e ½t��MG:Op:PwrCost½t�
þe:nRþ:Op:LaunchCount �ðe:nRþ:Eco:SUCost þe:nRþ:Eco:SDCostÞ
þe:nR�:Op:LaunchCount �ðe:nR�:Eco:SUCost þe:nRþ:Eco:SDCostÞÞ
ð20Þ
where PwrCost½t� is the electricity price at a time t and LaunchCount
is the number of launches of the sellers and buyers belonging to e,
during T. Note that, all these parameters are represented in our
OntoMG. r
Similarly for Diseco,
DisecoðeÞ ¼
1
1 þ SecoðeÞ 2 ½0; 1�
DisecoðPGÞ ¼
1
1 þ SecoðPGÞ 2 ½0; 1�
DisecoðSGÞ ¼
1
1 þ SecoðSGÞ 2 ½0; 1�
ð21Þ
where, the lower is the economical dissatisfaction (tends to 0), the
higher is the economical satisfaction.
Deﬁnition 10. [Ecological Satisfaction [Secolo]] The ecological
satisfaction of an edge e, denoted SecoloðeÞ, is deﬁned as:
SecoloðeÞ ¼
X
T
t¼1
sop
e ½t� � e:nRþ:Ecolo:GasEss � SG:Op:GasEssCost
ð22Þ
The ecological satisfaction depends on the toxic gas emissions
GasEss emitted during the power production, and the cost GasEss-
Cost per unit of gas emission. Note that, all these parameters are
modeled in our OntoMG ontology.r
Thus, the ecological satisfaction of a PG consisting of M edges is
deﬁned as follows:
SecoloðPGÞ ¼
X
M
i¼0
SecoloðPGÞ
ð23Þ
Similarly, the ecological satisfaction of an MG consisting of N
number of PG is deﬁned as follows:
SecoloðSGÞ ¼
X
N
i¼0
SecoloðSGÞ
ð24Þ
Note that, the ecological dissatisfactions (Disecolo) is deﬁned as
follows:
DisecoloðeÞ ¼
1
1 þ SecoloðeÞ 2 ½0; 1�
DisecoloðPGÞ ¼
1
1 þ SecoloðPGÞ 2 ½0; 1�
DisecoloðSGÞ ¼
1
1 þ SecoloðSGÞ 2 ½0; 1�
ð25Þ
where the lower is the ecological dissatisfaction (tends to 0), the
higher is the ecological satisfaction.
An overview of the Preferences-based Compromise Builder
module is shown in Fig. 4 consisting of three main components:
(1) Candidate components’ prescheduling, (2) Final components’
prescheduling, and (3) Compromise prescheduling. They are
detailed below.
3.1.1. Candidate components’ prescheduling
The aim of this module is to dissociate the desired schedule of
each seller/buyer, so as to distribute the power quantity at each
time t (its capacity of selling/buying) between the components
with which, it must exchange, without exceeding nor being inferior
to its desired capacity at time t. The pseudo-code of the candidate
components’ prescheduling is provided in Algorithm 2. Brieﬂy, for
each seller/buyer, we retrieve the list of edges to which the seller/
buyer belongs. Then, we generate the list of all the possible permu-
tations of the retrieved edges (Lines 7–16). For each possible per-
mutation list of edges at a time t, we verify if the seller/buyer
has enough power to sell/to buy to the buyer/from the seller of
the same edge (Line 17). If there is enough power (Lines 18–20),
we ﬁll the schedule with the quantity to buy/to sell and recall
Fig. 4. Preferences-based compromise builder framework.
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
73
the process by the next seller/buyer. If not, we ﬁll the schedule
with the quantity to buy/sell, reduce the quantity to sell/buy, and
verify the quantity to sell/buy to the next buyer/from the next
seller of the next edge (Lines 21–25).
3.1.2. Final components’ prescheduling
The aim of this module is to select the candidate components’
schedules that guarantee that each edge is provided with its
exchanged value (EV) at each time t (e.g., at the end of the day,
where t = 24 h). In other words, for each edge, the sum of the
power quantity exchanged between its sellers and the buyers at
T, should be equal to their exchanged value (EV) in the PG. So,
the sellers sell all their power surplus and the buyers satisfy all
their needs. The pseudo-code of the ﬁnal components’ schedules
is provided in Algorithm 3. Brieﬂy, for each candidate schedule of
each seller (Lines 2–9) and for each time t of the day, we calculate
the sum of the energy exchanged of the edges to which the seller/
buyer belongs. The schedule is accepted if the sum is equal to the
exchanged value of the edge (Lines 12–13). If the equality is veri-
ﬁed for all the edges, we add the candidate schedule to the ﬁnal
components’ schedules (Lines 13–16).
3.1.3. Compromise prescheduling
The aim of this module is to generate every seller-to-buyer
association (edge) desired schedule. It consists of selecting the best
combination between the ﬁnal preschedules of the sellers and buy-
ers. This can be done by selecting the combination that ensures the
minimum gap between the desired schedules of the sellers and
buyers and the proposed compromise desired schedule. The
pseudo-code of the ﬁnal components’ schedules is provided in
Algorithm 4. First, we generate the combinations between the ﬁnal
preschedules of the sellers and the buyers (Lines 1–3). Then, for
each seller/buyer of each combination, we calculate the power
quantity for each edge in each candidate schedule for all combina-
tions at a time t and ﬁll it into a new vector (FinalQuantity) (Lines
4–17). After that, a similarity computation of the resulting vector
and the initial desired schedule (vector) of each seller/buyer is
done using the cosine similarity measure (Line 18). In fact, we
adopted the commonly adopted cosine measure to calculate the
distance between the proposed and the desired schedule vectors
(instead of many others such the Euclidean Distance, the Pearson
Correlation Coefﬁcient, etc.) since it provides better results when
Algorithm 2. Candidate Components’ Prescheduling
Algorithm 3. Final Components’ Prescheduling
74
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
there are many values in common between the two schedules to
compare. Finally, the combination vector having the biggest simi-
larity or what we call it here ‘minimum delay’ will be retrieved
(Lines 19–27).
3.1.4. Preference-based compromise builder illustration
In our previous illustration, all the buyers and sellers are con-
nected, forming one purchase graph (cf. Fig. 5), where the sellers
are represented in red, the buyers in blue and the exchanged
power value is annotated on the gray arrow. For example, in
Fig. 5, there are 2 sellers (nRþ
1 ; nRþ
4 ) and 3 buyers (nR�
1 ; nR�
2 ; nR�
3 ),
where nRþ
1 and nR�
3 should exchange 14 kW, nRþ
1 and nR�
1 should
exchange 3 kW, nRþ
4 and nR�
3 should exchange 1 kW, and nRþ
4 and
nR�
2 should exchange 2 kW.
As an input, each seller and buyer proposes its desired schedule.
Here, we will consider that T = 4.
Sinit
nRþ
1 ¼ ½3; 14; 0; 0�
Sinit
nRþ
4 ¼ ½0; 0; 1; 2�
Sinit
nR�
1 ¼ ½3; 0; 1; 0�
Sinit
nR�
2 ¼ ½0; 0; 0; 2�
Sinit
nR�
3 ¼ ½0; 14; 0; 0�
8
>
>
>
>
>
>
>
>
>
>
>
<
>
>
>
>
>
>
>
>
>
>
>
:
The aim of applying the Preference-based comprimise builder is
to ﬁnd the desired schedule of the resulting linked couples
(nRþ
1 ; nR�
3 ),
(nRþ
1 ; nR�
1 ),
(nRþ
4 ; nR�
1 )
and
(nRþ
4 ; nR�
2 ):
Sinit
nRþ
1 ;nR�
3 ; Sinit
nRþ
1 ;nR�
1 ; Sinit
nRþ
4 ;nR�
1 and Sinit
nRþ
4 ;nR�
2 , respectively.
– Candidate components’ prescheduling:
The output of the candidate components’ prescheduling is as
follows:
Candidate nRþ
1 prescheduling:
There are two possible solutions:
Solution1
Sinit
nRþ
1 ;nR�
3 ¼ ½3; 11; 0; 0�
Sinit
nRþ
1 ;nR�
1 ¼ ½0; 3; 0; 0�
8
<
:
Solution2
Sinit
nRþ
1 ;nR�
3 ¼ ½3; 0; 0; 0�
Sinit
nRþ
1 ;nR�
1 ¼ ½0; 14; 0; 0�
8
<
:
Algorithm 4. Compromise prescheduling
Fig. 5. Purchase graph illustration.
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
75
Those solutions were selected since the sum of the selling power
at each time t is equal to the desired power quantity given as an
input (3 kW at t = 1 and 14 kW at t = 2)
Candidate nRþ
4 prescheduling:
There are two possible solutions:
Solution1
Sinit
nRþ
4 ;nR�
1 ¼ ½0; 0; 1; 0�
Sinit
nRþ
4 ;nR�
2 ¼ ½0; 0; 0; 2�
8
<
:
Solution2
Sinit
nRþ
4 ;nR�
1 ¼ ½0; 0; 0; 1�
Sinit
nRþ
4 ;nR�
2 ¼ ½0; 0; 1; 1�
8
<
:
Those solutions were selected since the sum of the selling power
at each time t is equal to the desired power quantity given as an
input (1 kW at t = 3 and 2 kW at t = 4)
Candidate nR�
1 prescheduling:
There are two possible solutions:
Solution1
Sinit
nRþ
1 ;nR�
1 ¼ ½3; 0; 0; 0�
Sinit
nRþ
4 ;nR�
1 ¼ ½0; 0; 1; 0�
8
<
:
Solution2
Sinit
nRþ
1 ;nR�
1 ¼ ½1; 0; 0; 0�
Sinit
nRþ
4 ;nR�
1 ¼ ½2; 0; 1; 0�
8
<
:
Those solutions were selected since the sum of the buying power
at each time t is equal to the desired power quantity given as an
input (3 kW at t = 1 and 1 kW at t = 3)
Candidate nR�
2 prescheduling:
There is one possible solution:
Solution
Sinit
nRþ
4 ;nR�
2 ¼ ½0; 0; 0; 2�
n
Those solutions were selected since the sum of the buying power
at each time t is equal to the desired power quantity given as an
input (2 kW at t = 4)
Candidate nR�
4 prescheduling:
There is one possible solution:
Solution
Sinit
nRþ
1 ;nR�
4 ¼ ½0; 14; 0; 0�
n
Those solutions were selected since the sum of the buying power
at each time t is equal to the desired power quantity given as an
input (14 kW at t = 2)
– Final components’ prescheduling:
In our case, the output of the ﬁnal components’ prescheduling is
the same output generated in the candidate components’
prescheduling. Those solutions ensure that the sum of the
power exchanged between a linkedcouple is equal to the
exchanged value of this couple.
Final nRþ
1 prescheduling:
There are two possible solutions:
Solution1
Sinit
nRþ
1 ;nR�
3 ¼ ½3;11;0;0� : ðnRþ
1 ;nR�
3 Þ:EV ¼ 14 ¼ 11þ3þ0þ0
Sinit
nRþ
1 ;nR�
1 ¼ ½0;3;0;0� : ðnRþ
1 ;nR�
1 Þ:EV ¼ 3 ¼ 0þ3þ0þ0
8
<
:
Solution2
Sinit
nRþ
1 ;nR�
1 ¼ ½3;0;0;0� : ðnRþ
1 ;nR�
1 Þ:EV ¼ 3 ¼ 3þ0þ0þ0
Sinit
nRþ
1 ;nR�
3 ¼ ½0;14;0;0� : ðnRþ
1 ;nR�
3 Þ:EV ¼ 14 ¼ 0þ14þ0þ0
8
<
:
Final nRþ
4 prescheduling:
There are two possible solutions:
Solution1
Sinit
nRþ
4 ;nR�
1 ¼ ½0;0;1;0� : ðnRþ
4 ;nR�
1 Þ:EV ¼ 1 ¼ 0þ0þ1þ0
Sinit
nRþ
4 ;nR�
2 ¼ ½0;0;0;2� : ðnRþ
4 ;nR�
2 Þ:EV ¼ 2 ¼ 0þ0þ0þ2
8
<
:
Solution2
Sinit
nRþ
4 ;nR�
1 ¼ ½0;0;0;1� : ðnRþ
4 ;nR�
1 Þ:EV ¼ 1 ¼ 0þ0þ0þ1
Sinit
nRþ
4 ;nR�
2 ¼ ½0;0;1;1� : ðnRþ
4 ;nR�
2 Þ:EV ¼ 2 ¼ 0þ0þ1þ1
8
<
:
Final nR�
1 prescheduling:
There are two possible solutions:
Solution1
Sinit
nRþ
1 ;nR�
1 ¼ ½3;0;0;0� : ðnRþ
1 ;nR�
1 Þ:EV ¼ 3 ¼ 3þ0þ0þ0
Sinit
nRþ
4 ;nR�
1 ¼ ½0;0;1;0� : ðnRþ
4 ;nR�
1 Þ:EV ¼ 1 ¼ 0þ0þ1þ0
8
<
:
Solution2
Sinit
nRþ
4 ;nR�
1 ¼ ½1;0;0;0� : ðnRþ
4 ;nR�
1 Þ:EV ¼ 1 ¼ 1þ0þ0þ0
Sinit
nRþ
1 ;nR�
1 ¼ ½2;0;1;0� : ðnRþ
1 ;nR�
1 Þ:EV ¼ 3 ¼ 2þ0þ1þ0
8
<
:
Final nR�
2 prescheduling:
There is one possible solution:
Solution Sinit
nRþ
4 ;nR�
2 ¼ ½0;0;0;2� : ðnRþ
4 ;nR�
2 Þ:EV ¼ 2 ¼ 0þ0þ0þ2
n
Final nR�
4 prescheduling:
There is one possible solution:
Solution Sinit
nRþ
1 ;nR�
4 ¼ ½0;14;0;0� : ðnRþ
1 ;nR�
4 Þ:EV ¼ 14 ¼ 0þ14þ0þ0
n
– Compromise prescheduling:
The output of the compromise prescheduling is as follows:
Sinit
nRþ
1 ;nR�
3 ¼ ½3; 0; 0; 0�
Sinit
nRþ
1 ;nR�
1 ¼ ½0; 14; 0; 0�
Sinit
nRþ
4 ;nR�
1 ¼ ½0; 0; 1; 0�
Sinit
nRþ
4 ;nR�
2 ¼ ½0; 0; 0; 2�
8
>
>
>
>
>
>
<
>
>
>
>
>
>
:
This solution is the combination of the ﬁnal seller and buyer
preschedules that reduces the gap with the initial desired sched-
ules of the sellers and buyers. Here, the Gap = 0 (the ideal
solution).
3.2. Multi-objective Scheduler
Once done with the preferences-based combination generator
that aims at extracting the desired schedules of the seller-to-
buyer associations based on the sellers and buyers desired sched-
ules given as input, it is time to schedule the resulting associations
in a way to minimize the operational, economical and ecological
aspects. As deﬁned in Eq. (3), our objective function takes into
account: 1)- the operational aspect by considering the comfort of
the sellers and buyers measured by the delay time between the
desired schedule and the real operation, the peak load reduction
of the SG and the components calculated using the variance of
the power at a time t 2)- the economical aspect is considered by
measuring the electricity price at a time t, and 3)- the ecological
aspect is treated by calculating the toxic gas emissions produced
at a time t in the SG.
In our work, we adopted Particle Swarm Optimization (PSO), to
search for the near-optimal scheduling for each seller-to-buyer
association, because of its straightforward implementation and
demonstrated ability of optimization. In essence, PSO is a compu-
tational method that optimizes a problem by iteratively trying to
improve a candidate solution with regard to a given measure of
quality using an objective function. It is considered as a powerful
tool to solve complex non-linear and non-convex optimization
problems. Moreover, it has several other advantages, such as fewer
parameters to adjust, and easier to escape from local optimal
solutions.
76
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
Brieﬂy, the problem is solved by having a population of candi-
date solutions, here dubbed particles, and moving these particles
around in the search-space according to simple mathematical for-
mula over the particle’s position and velocity. Each particle’s
movement is inﬂuenced by its local best known position, but is also
guided toward the best-known positions in the search-space,
which are updated as better positions are found by other particles.
This is expected to move the swarm toward the best solutions.
The pseudo-code of the adapted PSO is provided in Algorithm 5.
The goal is to ﬁnd a solution a for which DisðaÞ < DisðbÞ for all b,
which would mean that a is the global minimum. Let S be the num-
ber of particles in the swarm, each having a position xi and a veloc-
ity vi. Let pi be the best known position of particle i and let g be the
best known position of the entire swarm. The values blo and bup are
respectively the lower and upper boundaries. The termination cri-
terion can be number of iterations performed, or a solution with
adequate objective function value is found. In our method, we
set the parameters as in [19] to calibrate the PSO problem, used
for mathematical models of Smart Homes.
4. Experiments
A set of experiments have been conducted to highlight the efﬁ-
ciency of our approach as explained below.
4.1. Experimental context
A prototype has been implemented using Java to conduct the
test on a PC with an Intel Core i7-3630 QM CPU, 2.40 GHz proces-
sor with 8 GB RAM. Since the SG is relatively a recent concept in
the power systems area, there is a lack of a current Benchmark
to be based on. Hence, we carried out our experimental scenario
inspired by the one provided in [13] but adapted to ﬁt better the
scope of our study. Here, we set up an SG within an area of 10
km � 10 km with: 1) the main grid located at the onshore, and
2) the SG components randomly located within this area. The
power gap (G) of any SG component nR: 10 MW 6GðnRÞ 6316
MW. Note that, the power cost per kW is set to 11:6 cents based
on the US electricity prices 3 and the conventional power generator
gas emissions is set to 0:26 kgCO2/kWh.4 The prototype includes the
following functionalities: (1) the Preference-based compromise
builder and the (2) Multi-objective scheduler.
4.2. Experimental metrics and results
The main criteria used to evaluate the effectiveness of our
approach are: (i) the preference-based compromise builder effec-
tiveness, (ii) the time needed to generate the compromises, as well
as, (iii) the multi-objective scheduler impact on the electricity cost
reduction, the peak loads and the gas emissions.
4.2.1. Preferences-based compromise builder effectiveness
The efﬁciency of the generated desired compromise schedule is
measured by its similarity with the desired schedules of the sellers
and the buyers given as an input. The similarity measure used in
our module is the ‘Cosine Similarity Measure’, which results a sim-
ilarity between 0 and 1 (from an absence of similarity ‘0’ to the big-
gest similarity ‘1’). Fig. 6 shows that the worst similarity ratio
obtained is 0:72 and the best one is 0:95. This result reﬂects that
our module ensures nice results providing an adequate compro-
mise between the seller and the buyer preferences.
4.2.2. Preferences-based compromise builder performance
In addition to testing the effectiveness of our module in reduc-
ing the gap between the proposed compromise desired schedule
and the desired sellers and buyers, we also evaluated its time per-
formance. This test consisted of measuring the necessary time to
build the compromise from the sellers and buyers associations
(cf. Fig. 7), and showed a linear complexity of our algorithm.
4.2.3. Multi-objective scheduler impact on the SG
The cooperation and the multi-objective aspects of the SG are
the key features of our scheduling. Hence, we measured the follow-
ing resulting costs: the total electricity prices, the total toxic gas
emissions, the components comfort, and the peak loads.
Algorithm 5. Particle Swarm Optimization Algorithm
Fig. 6. Compromise similarity w.r.t the number of SG components.
3 https://www.ovoenergy.com/guides/energy-guides/average-electricity-prices-
kWh.html.
4 https://www.carte-grise.org/explication-calcul-bilan-co2.htm.
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
77
In this test, two different scenarios were considered: (1) a non-
cooperative scheduling, where each association is selﬁsh in that it
only considers its desired schedule, and (2) a cooperative schedul-
ing based on our proposed multi-objective scheduling. To remain
coherent, we will consider the scheduling of the seller-to-buyer
associations of our same previous illustration. Note that, the out-
put of the preference-based compromise builder will be used here
to calculate the comfort of the components by calculating the gap
between the resulting schedule and the compromise desired
schedule.
Fig. 8 shows the electricity load resulting from the non-
cooperative case. At T = 2, a peak load (Electricity load = 14 kW)
appeared having several bad effects on the economical, ecological
and the operational costs. From the economical perspective, this
peak load leads to a total electricity cost of 163 cents. From the
ecological perspective, and having at T = 2, a conventional power
generator
(emitting
0.26
kgCO2/kWh),
the
non-cooperation
scheduling caused a simultaneous gas emissions of 3.64 kgCO2.
The only advantage of this scheduling is that it answers exactly
the desired preferences of the components, which gives a similar-
ity of 1 (the highest), between the proposed and the desired
schedules.
Fig. 9 shows the electricity load resulting from our multi-
objective scheduler. It shows how the peak loads are shaved (High-
est electricity load = 6 kW). The result is a trade-off between the
economical, ecological and operational aspects. From the econom-
ical perspective, the total electricity cost is reduced to 136 c. From
the ecological perspective, the highest simultaneous gas emissions
is reduced to 1.57 KgCO2. The only feature affected negatively is
the similarity between the desired and the proposed schedule,
reduced to 0:75. Despite this reduction, the value remains a very
good result.
5. Conclusion
In this paper, we proposed MOCSF, a Multi-Objective Coopera-
tive Scheduling Framework providing a multi-type scheduling for
the power generation, storage and consumption, while taking into
account the ecological, economical and operational costs in a
power
system.
MOCSF
consists
of
two
main
modules:
the
Preference-based Compromise Builder, providing the best balance
between the desired schedulers of the sellers and the buyers given
as an input, and the Multi-objective Scheduler, providing seller-to-
buyer associations scheduling aiming at ensuring the economical,
ecological
and
operational
satisfactions.
Experiments
results
showed the potential of our modules in providing efﬁcient
preference-based compromises able to reduce the gap with the ini-
tial
components
preferences
and
in
minimizing
the
three-
dimensional costs. Currently, we are working on implementing a
privacy-by-design [9] grid control allowing to protect the compo-
nents privacy whilst preserving the advanced control and monitor-
ing functionalities of the power systems. Further, it is interesting to
apply strategy-proof techniques, in order to avoid cheating in the
desired schedules,
References
[1] Christopher
O.
Adika,
Lingfeng
Wang,
Smart
charging
and
appliance
scheduling approaches to demand side management, Int. J. Electr. Power
Energy Syst. 57 (2014) 232–240.
[2] Hunt Allcott, Social norms and energy conservation, J. Public Econ. 95 (9)
(2011) 1082–1095.
[3] Dimitri P. Bertsekas, Nonlinear Programming, Athena Scientiﬁc Belmont, 1999.
[4] Moritz Diehl, H. Georg Bock, Johannes P. Schlöder, Rolf Findeisen, Zoltan Nagy,
Frank Allgöwer, Real-time optimization and nonlinear model predictive
control of processes governed by differential-algebraic equations, J. Process
Control 12 (4) (2002) 577–585.
[5] Amin Fakhrazari, Hamid Vakilzadian, F. Fred Choobineh, Optimal energy
scheduling for a smart entity, IEEE Trans. Smart Grid 5 (6) (2014) 2919–2928.
[6] Clark
W.
Gellings,
J.H.
Chamberlin,
Demand-side
management,
Energy
Efﬁciency and Renewable Energy Handbook, Second Edition edited by D.
Yogi Goswami, Frank Kreith, 1988, pp. 289–310 (Chapter 15).
[7] G. Graditi, M.G. Ippolito, R. Lamedica, A. Piccolo, A. Ruvio, E. Santini, P. Siano, G.
Zizzo, Innovative control logics for a rational utilization of electric loads and
air-conditioning systems in a residential building, Energy Build. 102 (2015) 1–
17.
[8] Ijaz Hussain, Sajjad Mohsin, Abdul Basit, Zahoor Ali Khan, Umar Qasim,
Nadeem. Javaid, A review on demand response: pricing, optimization, and
appliance scheduling, Proc. Comput. Sci. 52 (2015) 843–850.
[9] Marc Langheinrich, Privacy by designprinciples of privacy-aware ubiquitous
systems, In International conference on Ubiquitous Computing, Springer, 2001,
pp. 273–291.
[10] Julio J. Lucia, Eduardo S. Schwartz, Electricity prices and power derivatives:
evidence from the nordic power exchange, Rev. Derivat. Res. 5 (1) (2002) 5–50.
[11] Amir-Hamed Mohsenian-Rad et al., Autonomous demand-side management
based on game-theoretic energy consumption scheduling for the future smart
grid, IEEE Trans. Smart Grid 1 (3) (2010) 320–331.
[12] José Monteiro, Srinivas Devadas, Pranav Ashar, and Ashutosh Mauskar,
Scheduling techniques to enable power management, in: Proceedings of the
33rd annual Design Automation Conference, ACM, 1996, pp. 349–352.
[13] Walid Saad, Zhu Han, H. Vincent Poor, Coalitional game theory for cooperative
micro-grid distribution networks, in: 2011 IEEE International Conference on
Communications Workshops (ICC). IEEE, 2011, pp. 1–5.
[14] Khouloud Salameh, Richard Chbeir, Haritza Camblong, Ionel Vechiu, Microgrid
components clustering in a digital ecosystem cooperative framework, in:
International Conference on Knowledge Based and Intelligent Information and
Engineering Systems. Elsevier, 2017, pp. 167–176.
Fig. 7. Time performance w.r.t the number of SG components.
Fig. 9. MOCSF electricity load result.
Fig. 8. Non-cooperative electricity load result.
78
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
[15] Ditiro
Setlhaolo,
Xiaohua
Xia,
Jiangfeng Zhang,
Optimal
scheduling
of
household appliances for demand response, Electr. Power Syst. Res. 116
(2014) 24–28.
[16] Goran Strbac, Demand side management: beneﬁts and challenges, Energy
policy 36 (12) (2008) 4419–4426.
[17] Perukrishnen Vytelingum, Thomas D. Voice, Sarvapali D. Ramchurn, Alex
Rogers, Nicholas R. Jennings, Agent-based micro-storage management for the
smart
grid,
in:
Proceedings
of
the
9th
International
Conference
on
Autonomous
Agents
and
Multiagent
Systems:
Volume
1-Volume
1.
International Foundation for Autonomous Agents and Multiagent Systems,
2010, pp. 39–46.
[18] Laurence A. Wolsey, Mixed integer programming, Wiley Encyclopedia of
Computer Science and Engineering, 2008.
[19] Jiawei Zhu, Fabrice Lauri, Abderraﬁaa Koukam, Vincent Hilaire, Scheduling
optimization of smart homes based on demand response, in: IFIP International
Conference on Artiﬁcial Intelligence Applications and Innovations. Springer,
2015, pp. 223–236.
K. Salameh et al. / Applied Computing and Informatics 15 (2019) 67–79
79
