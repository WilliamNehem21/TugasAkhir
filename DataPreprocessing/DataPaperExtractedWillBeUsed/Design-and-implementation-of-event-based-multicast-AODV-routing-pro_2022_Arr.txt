Array 14 (2022) 100129
Available online 2 February 2022
2590-0056/© 2022 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-
nc-nd/4.0/).
Contents lists available at ScienceDirect
Array
journal homepage: www.elsevier.com/locate/array
Design and implementation of event-based multicast AODV routing protocol
for ubiquitous network
Chandrashekhar Pomu Chavan ∗, Pallapa Venkataram
Protocol Engineering and Technology Unit, Electrical Communication Engineering, Indian Institute of Science, Bangalore, India
A R T I C L E
I N F O
Keywords:
Vague set
Computational intelligence
Multicast tree
Group members
Optimal route
A B S T R A C T
We designed and implemented the ECA (Event Condition Action) based Multicast Ad hoc On-demand
Distance Vector (ECA-MAODV) routing protocol for the ubiquitous network. The ECA-MADOV protocol plays
a predominant role in selecting an efficient route for the creation of an efficient multicast tree and selecting
a unique group leader in the multicast group to share and exchange information among group members in
an efficient way using a Computational Intelligence (CI) approach. The vague set is a CI that is an enhanced
fragment of a fuzzy set. Each element in the Fuzzy set is mapped to [0,1], reflecting its membership grade.
We estimated ECA-MAODV’s time and spatial complexity. Besides, we assessed ECA-MAODV performance and
compared it with conventional routing protocols such as MAODV and AODV. Finally, simulation results indicate
that the ECA scheme proposed is both effective and powerful.
1. Introduction
The ubiquitous network is a seamless aggregation of networks that
allows many mobile users to view augmented reality content from any
smartphone, at any time, with no user intervention. Multicasting in
the ubiquitous network [1] is a method of disseminating data packets
seamlessly from a transmitter to a group of receivers having similar
characteristics located at the heterogeneous network. The group of
receivers has a group address called a multicast group address. The
transmitter intending to transmit data packets to the group; disseminate
them to the multicast group address, as shown in Fig. 1. A standard
multicast group is interactive, which means that members of the group
will take part and exit the group at any stage. A member of a multicast
group might be a participant of more than one multicast group at a
time. For data packet transmission, a sender does not need to be a
member of a multicast community, but receivers must be members of
a specific group. [2–7]. A route to the group has to build before the
sender sends data packets to the multicast group, establish a route on-
demand whenever a sender wishes to disseminate a data packet to a
group of receivers, for which it does not have routing data in routing
table. Thus the sender initiates route investigation by the broadcasting
route query message. On receipt of the response to the route, the
route query packet can only be responded to by the member node by
unicasting to the originating node. Disseminating a unicast multicast
activation message to the nearest adjacent node to set a route for
multicast from the transmitter to the group of receivers to exchange
∗ Corresponding author.
E-mail addresses: chandrashekh@iisc.ac.in (C.P. Chavan), pallapa@iisc.ac.in (P. Venkataram).
popular data packets at any time. Multicasting performs the following
operations
• Enable node to join: To transfer and swap data packets, every
mobile node in the ubiquitous network will participate in a
multicast group.
• Provides a reliable path to connect among group members: A
node will link to a multicast path linking group members if it
wants to reach a particular multicast group.
• A tree is constructed among group members: To swap data pack-
ets, the group uses a multicast tree that is shared by all partici-
pants. [8–13].
• Checks the connectivity of tree: Due to the versatility of the node
or nod’s abandon from the group at any point in time. It is vital
to track the connectivity among the group members.
The remaining sections of the paper are organized as follows. In Sec-
tion 2, we give a summary of some of the existing works. Section 3 dis-
cusses the working of the proposed architecture. In Section 4, The list
of ECA-MAODV functions is described. Section 5 includes a list of mem-
bership functions. Section 6 depicts time complexity. Section 7 details
the protocol’s space complexity. Section 8 discusses the main distinc-
tions between MAODV and ECA-MAODV routing protocols. Section 9
https://doi.org/10.1016/j.array.2022.100129
Received 14 July 2021; Received in revised form 9 December 2021; Accepted 16 January 2022
Array 14 (2022) 100129
2
C.P. Chavan and P. Venkataram
Fig. 1. An instance of multicast routing.
contains the directory of events. Section 10 presents the implementa-
tion details of ECA-MAODV protocols. Section 11 illustrates the simu-
lation environment. Section 12 addresses the results of the simulation.
Eventually, the article draws some conclusions in Section 13.
2. Related works
Min Ge et al. [14] presented the working of the Application Layer
Multicast Algorithm (ALMA), the ALMA routing protocol is decentral-
ized and powered by receivers mainly emphasized on creating a logical
tree. It has a procedure that makes it easier for the logical tree to
be reconfigured in mobility or congestion scenarios. Besides, ALMA
provides all of the benefits of an application layer multicast protocol
that is the ease of deployment, self-determination from bottom-layer
protocols, and the ability to leverage features present at lower layers
like TCP reliability. The authors in [15] proposed a protocol based
on the multicast operation of the AODV routing protocol, a Reliable
and Energy-Aware Multicast Ad-hoc On-demand Distance Vector (REA-
MAODV) routing protocol is developed. REA-MAODV routing protocol
achieves improved performance over On-Demand Multicast Routing
Protocol (ODMRP) and seeks energy-efficient multicast paths to a set of
destination nodes from the originating node. Besides, update maximum
energy consumption and smaller tree branches, the REA-MAODV pro-
tocol can also create a multicast tree with aid branches. REA-MAODV
uses 45 percent less energy than the MAODV protocol, and the energy
consumption is more balanced. Besides, the REA-MAODV protocol is
able to increase the transmission rate of packets by 19 percent and also
managed to reduce the latency of end-to-end networks by 21 percent.
The authors in [16] presented the working of the On-Demand
Multicast Routing Protocol (ODMRP). The ODMRP protocol based on
a mesh structure, rather than a traditional tree, which uses the idea
of a transferring group; the multicast packets are redirected by only a
subset of nodes by a scoped flood. It invokes on-demand subroutines to
construct dynamic routes and preserve a multicast group. The ODMRP
protocol is best suitable for mobile nodes where limited link bandwidth
is available, frequent changes in dynamic network topology, and power
restricted nodes. Y. Chawathe et al. [17] decomposed an immense
heterogeneous secure multicast session into many clustering multicast
data groups of homogeneous respondents. A set of application layer
Reliable Multicast proXies (RMXs) agents categorize data sets into a
spanning tree employing the TCP link overlay network. Originators
disseminate data packets to their localized group, the RMX in the
localized group transmit the data packet to the remaining data groups.
To respond to the effects of heterogeneity in the domain, RMXs use
a comprehensive awareness of implementation semantics. The authors
in [18] proposed an algorithm for the generation of a collection of
routing trees to maximize the overall cost of the group’s collection of
routing trees. Under various network conditions, simulations have been
Fig. 2. Proposed architecture for ECA-based efficient path selection.
performed to equate the proposed algorithm with the conventional
approach.
Work in [19] developed a protocol that supports multiple-parameter
routing requirements in mobile ad-hoc networks, A new multicast
overlay spanning tree protocol that is aware of Quality of Service (QoS)
is created. By a QoS link-state protocol, a QoS-aware multicast overlay
spanning tree is utilized to enhance admission access, reservation of
bandwidth, prevention of congestion, and access. The developed proto-
col’s packet distribution ratio is similar to that of Quality of Optimized
Link State Routing (QOLSR). The QoS-aware multicast overlay span-
ning tree protocol, however, has around 50 percent less E2E average
delay than QOLSR. The authors in [20] proposed a secure multicast
routing protocol focused on selecting proximity nodes. The nodes with
higher reliability set factors are chosen for data packet transmission in
contrast to the threshold reliability set factor. Therefore, to establish
multicast routes for data packet transmission, only stable neighboring
nodes are chosen. The proposed protocol is simulated in many network
metrics such as packet propagation ratio, packet propagation latency,
and two types of overheads such as routing message overhead and
overhead control, and the suggested protocol’s cumulative performance
is demonstrated by simulation analysis.
3. Proposed architecture for ECA based efficient path selection
The proposed architecture for ECA-based efficient path selection
consisting of blocks like routing metrics, logic, route rating, inference
module, and optimal route as shown in Fig. 2. The main functions of
each block are listed below.
1. Routing metrics: Inputs such as hop count, energy level, pro-
cessor speed, bandwidth, throughput, buffer occupancy, battery
capacity, and so on are collected by the route metrics module
and disseminate to the vague module.
2. Vague module: The vague module is composed of logic and rout-
ing rating modules. The logic module converts routing metrics
into ambiguous values, while based on ambiguous input, the
optimal route rating module calculates good accuracy. Two dif-
ferent functions differentiate each of the elements in the ambigu-
ous collection of the discourse domain Y. The first is the 𝜙VS(y)
true membership function; the second is the 𝜓VS(y) false mem-
bership function. This is represented as 𝜙VS:Y →[0,1] 𝜓VS:Y
→[0,1] and 𝜙VS(y) + 𝜓VS(y)≤ 1. 𝜙VS(y) is the lower limit on
the function of membership of 𝑦 and 𝜓VS(y) is the lower limit
on the function of membership of the negation of y. The open
Array 14 (2022) 100129
3
C.P. Chavan and P. Venkataram
interval value 𝑦 is obtained by 𝑦 =
𝑉 𝑎𝑙𝑢𝑒 𝑜𝑓 𝑖𝑛𝑝𝑢𝑡 𝑝𝑎𝑟𝑎𝑚𝑒𝑡𝑒𝑟
𝑁𝑢𝑚𝑏𝑒𝑟 𝑜𝑓 𝑙𝑖𝑛𝑔𝑢𝑖𝑠𝑡𝑖𝑐𝑠 𝑙𝑎𝑏𝑒𝑙 . During
efficient route selection, true membership function 𝜙VS(y) will
be considered and false membership function 𝜓VS(y) will be
discarded.
3. Vague inference module: ECA scheme is defined to respond to
a composite type of events occurring at a random interval of
time. Events with significant changes in routing are exemplified
in event-driven routing operations. An event can be any routing
process functions such as the bandwidth of the link is high,
path failure, a node with a high energy level, dissemination
of data packet hop-by-hop, etc. The ECA scheme points out
how dynamic routing decisions under critical network conditions
impact complex routing behavior. The suitable conditions are
determined when there is an event with significant changes in
the routing happen; if the conditions have been satisfied or
the pre-condition criteria have been surpassed, the appropriate
runtime multicast routing decision will be made in a stipulated
time.
4. ECA-MAODV functions
In this section, we explore the concepts such as creating a multicast
route query packet, a flowchart for activating a multicast route, gen-
erating a multicast route response packet, enabling a multicast group
hello packet, a procedure for initiating a new multicast group, joining
a new participant in an existing multicast group, and creation of a
PET-ECE-IISc multicast research group.
4.1. Creation of multicast route query packet
The target of the route query packet is the multicast team address
in the span of 224.0.0.0 to 239.255.255.255. Multicast group receivers
make a copy of the control and data packets included in the route query
packet and pass it to the protocol stack before delivering the route
query packet. The flowchart shown in Fig. 3 describes the procedure
to create a multicast route query packet.
As and when a mobile node would like to join a dedicated multicast
group creates a route query packet and broadcasts it to its adjacent
nodes. If mobile nodes know the route to the multicast group may
refrain from preparing and broadcasting the route query packet. Let us
presume that the mobile node may not be aware of the multicast group
and path to the group. It is essential to prepare the route query packet
in such a scenario by setting the join flag to 1 and the multicast group
address before disseminating it to its neighboring nodes. Multicast
AODV protocol offers a quicker adapting to complex network con-
straints, limited processing, and minimal network utilization. Multicast
AODV protocol produces duplex direction distributed multicast trees
that enable us to connect multicast sender and receivers. There are four
messages in the multicast AODV routing protocol as follows.
• Join-route: A node sends a query to join a specific group uses the
join-route.
• Route reply: Members of the group can send the response back to
the soliciting node regarding the route available.
• Multicast activation: Used to form a multicast tree from which all
the group members can connect and share information effectively.
• Group hello: The hello message will be used to keep track of the
connectivity between group members.
4.2. Flowchart of multicast route activation
The flowchart shown in Fig. 4 describes the procedure to activate
the multicast route. Whenever an originating node disseminates a
route query packet for a specific multicast group, the originating node
frequently receives multiple route responses. The 1-hop node must be
chosen as only one of the route responses since each of the route
Fig. 3. Flowchart of generating multicast route query packet.
responses sets up a feasible route to the specific multicast tree. When a
mobile node receives a route activation message, it saves the multicast
address in the destination address. A mobile node that wishes to join a
specific multicast group should propagate a unicast packet to the one-
hop node and update the information in the routing table. The next-hop
multicast route table data shared with the mobile node enables the
active flag to 1. The mobile node to which the multicast activation has
been sent triggers the route entry for the connection in its multicast
route table after getting this post, thus completing the tree branch
formation. Every adjacent who does not receive this specific message
time out and uninstall the node in their route tables.
4.3. The procedure to create multicast route reply packet
Algorithm 1 outlines the procedure to create a route response by the
member node whenever it receives a join query message from the non-
member node. Non-member nodes broadcast a route query message
and wait for route response from the member node of a specific group.
Member nodes generate a 32-bit route response message by performing
the following functions. Firstly, the member node upgrades its multicast
table by adding relevant information about the node, copy the origina-
tor IP address and desired destination address into the RREP message.
Secondly, initialize route response value to zero before unicasting to
the originating node and forward route response message back to the
originating node by incrementing hop count. If an originating node
receives multiple route responses from the neighboring nodes, it selects
the correct route response for building a multicast tree by considering
several metrics. The metrics are high bandwidth, high energy level,
minimum hop count, and speed of the processor, and so on. As desired,
each member node of a particular community shares and transfers data
packets through the multicast tree.
Array 14 (2022) 100129
4
C.P. Chavan and P. Venkataram
Fig. 4. Flowchart of multicast AODV route activation.
Algorithm 1: Procedure for generating ECA-MAODV route
response message
begin
Input: A 32-bit modified RREP packet format
Output: Unicast RREP packet back to source node S0
Member node initiate to generate RREP message
/* Belongs to a particular group */
if Node ∈ multicast group G then
Node update its multicast table
RREP message⟵S0 address + D0 address of RREQ
message
Initialize RREP⟵0
Unicast RREP to S0 node
else
/* Rebroadcast to its neighbors node */
Rebroadcast RREQ packet to adjacent nodes
4.4. The procedure to create multicast group hello message
Algorithm 2 illustrates the procedure to create a hello message by
the group leader. The group leader generates a group hello message
and broadcasts it to all the members of a specific group; upon receiving
the hello message member node updates its multicast routing table and
increases the hop count to 1 before disseminating.
4.5. Procedure to create new multicast group
Table 1 shows the protocol to form a new multicast group. Multicast
group comprising of a set of mobile nodes that are randomly created
by invoking rand() and srand() functions. The mobile node having
some important application service can initiate to form a group by
broadcasting service advertisement messages in the network. Node
willing to join the specific group can send a join query packet to the
group and wait to get a join response from the member node. Fig. 5
demonstrates the procedure to form a new multicast group. Node 7
Algorithm 2: Procedure for generating multicast group hello
message using ECA
begin
Input: A 32-bit group hello message
Output: Send to member nodes
Group leader forward hello message
/* Node is able to rx hello message instantly
*/
if The node receiving hello messages then
Update multicast route table
Hop count += 1
else
/* Setting M_flag = 1 */
Set M_flag = 1
Table 1
Procedure to create a new multicast group.
Steps
Operation
(a) Service hosting node (shn)
will initiate to form a group
Broadcast service advertisement (s-ad)
message in the network.
(b) Add metrics in an s-ad
message before propagating
The metrics including shn address,
service-descriptions, lifetime, and hop count.
(c) The node that wishes to join
sends the j-req message
The metrics like willing-node-address, shn
address, and join flag.
(d) The shn unicast a membership
using j-rep message
The metrics such as shn address,
willing-node-address, and membership
status.
Fig. 5. Example of new multicast group formation.
initiates to create a group by broadcasting the s-ad message; a node that
wishes to join the group can send a join query message to the service
hosting node and wait to receive a join response message.
4.6. New member joining an established multicast group
Fig. 6 shows the procedure for joining a new member in the estab-
lished multicast group. In step 1, node-8 transmits the join route query
message to the established group, while in step 2, the member node of
the tree prepares a route response message and unicast back to node-8.
In step 3, node-8 unicasting a multicast activation message to the group
member connected via a multicast tree, while in last step 4, a multicast
tree is created post joining node-8. When a leaf node wishes to exit the
multicast group, it transmits a unicast message to its next-hop node on
the tree. The unicast message comprises of P flag set and with the target
destination address assign to the address of the specific multicast group
address.
Array 14 (2022) 100129
5
C.P. Chavan and P. Venkataram
Fig. 6. New member joining a multicast group.
Fig. 7. Establishment of PET-ECE-IISc multicast research group.
4.7. Establishment of PET-ECE-IISc multicast research group
The objectives of the Protocol Engineering and Technology (PET)
multicast research group in the Department of Electrical Communica-
tion Engineering (ECE) at IISc, Bangalore are as follows.
• PET research group allows members such as research scholars,
post-doctoral fellows, system admins, scientific officers, project
assistants, and summer interns to interact and exchange ideas
about the ongoing research works with the professor.
• Provide a platform for group members to share information like
research ideas, discussion on a specific topic, course work details,
assignments, dissertation, etc.
• Enable communication among group members anytime, any-
where on any device seamlessly.
• Connect professor to discuss research activity, course teaching,
webinar, seminar, group seminar, meeting schedule, Ph.D. status
report, projects, etc.
Fig. 7 shows the connectivity among multicast research group members
to share and exchange data in an efficient way.
4.8. Selecting a group leader for the multicast group
Algorithm 3 discusses the procedure to choose a group leader for the
specific multicast group. The initiating node broadcast a join message
in the network; if the node does not receive a response even after the
maximum route request retries, it will declare itself as a group leader
for the dedicated multicast group for effective communication.
5. Membership functions
In this section, we incorporate a vague set membership function to
create an efficient multicast tree using ECA. The multicast tree connects
all the members of the group. The membership function of routing
metrics are hop count, bandwidth, buffer capacity, energy, and battery
power are given below. Table 2 indicates the membership function for
the hop count value of 10.
The following reflects a vague expression of the min, avg, and max
hop count value of 10.
𝜙(𝐻𝐶𝑚𝑖𝑛) + 𝜓(𝐻𝐶𝑚𝑖𝑛) ≤ 1
𝜙(𝐻𝐶𝑎𝑣𝑔) + 𝜓(𝐻𝐶𝑎𝑣𝑔) ≤ 1
𝜙(𝐻𝐶𝑚𝑎𝑥) + 𝜓(𝐻𝐶𝑚𝑎𝑥) ≤ 1
Array 14 (2022) 100129
6
C.P. Chavan and P. Venkataram
Algorithm 3: Procedure to select a group leader using ECA
begin
Input: Join request message
Output: Selection of group leader
Initiating node broadcast join-request message in the
network
/* The node broadcasts join request message
instantly */
PTC: if no reply from the node then
Broadcast message ≤ route request retries
Initiator ⟵ ∼(nodes response)
Assume that node ∉ the UN
Declare itself as a group leader
else
Select a group leader based on plentiful resources
available at the node
Table 2
Membership function for hop count (HC = 10 hops).
Linguistic labels (l)
Symbol (s)
Open interval (y)
𝜙
1 − 𝜓
𝜓
Minimum
HC𝑚𝑖𝑛
0 < y < 3.5
0
3.5
−2.5
Average
HC𝑎𝑣𝑔
3.5 < y < 6.9
3.5
6.9
−5.9
Maximum
HC𝑚𝑎𝑥
6.9 < y < 10
6.9
10
−9
Table 3
Membership function for bandwidth (BW = 16 Mbps).
Linguistic labels (l)
Symbol (s)
Open interval (y)
𝜙
1 − 𝜓
𝜓
Low
BW𝑙
0 < y < 5.5
0
5.5
−4.5
Medium
BW𝑚
5.5 < y < 10.9
5.5
10.9
−9.9
High
BWℎ
10.9 < y < 16
10.9
16
−15
Table 4
Membership function for buffer capacity (BC = 6 GB).
Linguistic labels (l)
Symbol (s)
Open interval (y)
𝜙
1 − 𝜓
𝜓
Low
BC𝑙
0 < y < 2
0
2
−1
Medium
BC𝑚
2 < y < 4
2
4
−3
High
BCℎ
4 < y < 6
4
6
−5
The following expression gives the elements of a vague series of min,
avg, and max hop count.
(𝐻𝐶𝑚𝑖𝑛, (𝜙(𝐻𝐶𝑚𝑖𝑛), 1 − 𝜓(𝐻𝐶𝑚𝑖𝑛)))
(𝐻𝐶𝑎𝑣𝑔, (𝜙(𝐻𝐶𝑎𝑣𝑔), 1 − 𝜓(𝐻𝐶𝑎𝑣𝑔)))
(𝐻𝐶𝑚𝑎𝑥, (𝜙(𝐻𝐶𝑚𝑎𝑥), 1 − 𝜓(𝐻𝐶𝑚𝑎𝑥)))
Table 3 demonstrates the membership function for the link bandwidth
value of 16 Mbps.
The below reflects a vague expression of the low, medium, and high
bandwidth value of 16 Mbps.
𝜙(𝐵𝑊𝑙) + 𝜓(𝐵𝑊𝑙) ≤ 1
𝜙(𝐵𝑊𝑚) + 𝜓(𝐵𝑊𝑚) ≤ 1
𝜙(𝐵𝑊ℎ) + 𝜓(𝐵𝑊ℎ) ≤ 1
The below expression gives the elements of a vague series of the low,
medium, and high bandwidth.
(𝐵𝑊𝑙, (𝜙(𝐵𝑊𝑙), 1 − 𝜓(𝐵𝑊𝑙)))
(𝐵𝑊𝑚, (𝜙(𝐵𝑊𝑚), 1 − 𝜓(𝐵𝑊𝑚)))
(𝐵𝑊ℎ, (𝜙(𝐵𝑊ℎ), 1 − 𝜓(𝐵𝑊ℎ)))
Table 4 demonstrates the membership function for the node buffer
capacity value of 6 GB.
Table 5
Membership function for energy (E = 20 Joules).
Linguistic labels (l)
Symbol (s)
Open interval (y)
𝜙
1 − 𝜓
𝜓
Low
E𝑙
0 < y < 6.8
0
6.8
−5.8
Medium
E𝑚
6.8 < y < 13.5
6.8
13.5
−12.5
High
Eℎ
13.5 < y < 20
13.5
20
−19
Table 6
Membership function for power (BP = 25 W).
Linguistic labels (l)
Symbol (s)
Open interval (y)
𝜙
1 − 𝜓
𝜓
Less
BP𝑙
0 < y < 8.5
0
8.5
−7.5
Medium
BP𝑚𝑒
8.5 < y < 16.9
8.5
16.9
−15.9
More
BP𝑚𝑜
16.9 < y < 25
16.9
25
−24
The below reflects a vague expression of the low, medium, and high
buffer capacity value of 6 GB.
𝜙(𝐵𝐶𝑙) + 𝜓(𝐵𝐶𝑙) ≤ 1
𝜙(𝐵𝐶𝑚) + 𝜓(𝐵𝐶𝑚) ≤ 1
𝜙(𝐵𝐶ℎ) + 𝜓(𝐵𝐶ℎ) ≤ 1
The below expression gives the elements of a vague series of the low,
medium, and high buffer capacity.
(𝐵𝐶𝑙, (𝜙(𝐵𝐶𝑙), 1 − 𝜓(𝐵𝐶𝑙)))
(𝐵𝐶𝑚, (𝜙(𝐵𝐶𝑚), 1 − 𝜓(𝐵𝐶𝑚)))
(𝐵𝐶ℎ, (𝜙(𝐵𝐶ℎ), 1 − 𝜓(𝐵𝐶ℎ)))
Table 5 demonstrates the membership function for the node energy
level of 20 Joules.
The below reflects a vague expression of the low, medium, and high
energy value of 20 Joules and it is expressed in the following manner
before choosing the desired route.
𝜙(𝐸𝑙) + 𝜓(𝐸𝑙) ≤ 1
𝜙(𝐸𝑚) + 𝜓(𝐸𝑚) ≤ 1
𝜙(𝐸ℎ) + 𝜓(𝐸ℎ) ≤ 1
The below expression gives the elements of a vague series of the low,
medium, and high energy levels.
(𝐸𝑙, (𝜙(𝐸𝑙), 1 − 𝜓(𝐸𝑙)))
(𝐸𝑚, (𝜙(𝐸𝑚), 1 − 𝜓(𝐸𝑚)))
(𝐸ℎ, (𝜙(𝐸ℎ), 1 − 𝜓(𝐸ℎ)))
Table 6 demonstrates the membership function for the node battery
power of 25 Joules.
The following reflects a vague expression of the less, medium, and
more power value of 25 W.
𝜙(𝐵𝑃𝑙) + 𝜓(𝐵𝑃𝑙) ≤ 1
𝜙(𝐵𝑃𝑚𝑒) + 𝜓(𝐵𝑃𝑚𝑒) ≤ 1
𝜙(𝐵𝑃𝑚𝑜) + 𝜓(𝐵𝑃𝑚𝑜) ≤ 1
The following expression gives the elements of a vague series of the
less, medium, and more power.
(𝐵𝑃𝑙, (𝜙(𝐵𝑃𝑙), 1 − 𝜓(𝐵𝑃𝑙)))
(𝐵𝑃𝑚𝑒, (𝜙(𝐵𝑃𝑚𝑒), 1 − 𝜓(𝐵𝑃𝑚𝑒)))
(𝐵𝑃𝑚𝑜, (𝜙(𝐵𝑃𝑚𝑜), 1 − 𝜓(𝐵𝑃𝑚𝑜)))
The Vague Set (VS) such as 𝜙VS and 𝜓VS are obtained from the energy
and hop count values.
𝜙(𝐸𝑙) ∈ [0, 2.5], 𝜓(𝐸𝑙) ∈ [2.5, 6.5]
𝜙(𝐸𝑚) ∈ [6.8, 10.4], 𝜓(𝐸𝑚) ∈ [10.4, 13]
𝜙(𝐸ℎ) ∈ [13.5, 15], 𝜓(𝐸ℎ) ∈ [15, 19]
Array 14 (2022) 100129
7
C.P. Chavan and P. Venkataram
Table 7
The time complexity of MAODV routing.
Performance parameters
Time complexity
Route investigation
O(T x log(T))
Multicast tree maintenance
O(T x log(T))
Configuration of route
O(T x log(T))
Multicast route postfailure
O(T x log(T))
Group hello message
O(K x log(K))
Multicast route activity
O(K x log(K))
𝜙(𝐻𝐶𝑚𝑖𝑛) ∈ [0, 2], 𝜓(𝐻𝐶𝑚𝑖𝑛) ∈ [2, 3.4]
𝜙(𝐻𝐶𝑎𝑣𝑔) ∈ [3.5, 5], 𝜓(𝐻𝐶𝑎𝑣𝑔) ∈ [5, 6.8]
𝜙(𝐻𝐶𝑚𝑎𝑥) ∈ [6.9, 8], 𝜓(𝐻𝐶𝑚𝑎𝑥) ∈ [8, 9.5]
Based on the value of 𝐸𝐻𝑗𝑘, the mobile node selects an optimal route
to join the multicast tree. Similarly, we can construct an optimal route
by considering a pair of routing metrics.
𝐸𝐻𝑗𝑘 =
∑
𝑗∈𝑙
𝜙(𝐸𝑗)
∑
𝑘∈𝑙
𝜙(𝐻𝐶𝑘)
(1)
The expression 𝑃𝑖 decides whether or not to pick a connection for the
creation of a multicast tree.
𝑃𝑖 =
⎧
⎪
⎨
⎪⎩
P0
Bad
if 0 < 𝐸𝐻𝑗𝑘 < 2
P1
Good
if 2 < 𝐸𝐻𝑗𝑘 < 8
P2
Best
if 8 < 𝐸𝐻𝑗𝑘 < 15
As and when a member node of a specific multicast group receives
multiple responses from the node that wishes to join the group, select
the route based on the routing metrics. Based on the value of the
optimum parameter, the multicast tree is built.
Path and node status is determined by 𝜎(𝑛) before joining a specific
multicast tree
𝜎(𝑛) =
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪⎩
𝑛 = 1
if
𝜙(𝐵𝑊 = 𝐻𝑖𝑔ℎ) ⋅ 𝜙(𝐵𝐶 = 𝐿𝑜𝑤) ⋅ 𝜙(𝐵𝑃 = 𝑀𝑒𝑑𝑖𝑢𝑚)
else if
𝜙(𝐵𝑊 = 𝐻𝑖𝑔ℎ) ⋅ 𝜙(𝐵𝐶 = 𝐿𝑜𝑤) ⋅ 𝜙(𝐵𝑃 = 𝑀𝑜𝑟𝑒)
else if
𝜙(𝐵𝑊 = 𝐻𝑖𝑔ℎ) ⋅ 𝜙(𝐵𝐶 = 𝑀𝑒𝑑𝑖𝑢𝑚) ⋅ 𝜙(𝐵𝑃 = 𝑀𝑒𝑑𝑖𝑢𝑚)
else if
𝜙(𝐵𝑊 = 𝐻𝑖𝑔ℎ) ⋅ 𝜙(𝐵𝐶 = 𝑀𝑒𝑑𝑖𝑢𝑚) ⋅ 𝜙(𝐵𝑃 = 𝑀𝑜𝑟𝑒)
else if
𝜙(𝐵𝑊 = 𝑀𝑒𝑑𝑖𝑢𝑚) ⋅ 𝜙(𝐵𝐶 = 𝐿𝑜𝑤) ⋅ 𝜙(𝐵𝑃 = 𝑀𝑒𝑑𝑖𝑢𝑚)
else if
𝜙(𝐵𝑊 = 𝑀𝑒𝑑𝑖𝑢𝑚) ⋅ 𝜙(𝐵𝐶 = 𝐿𝑜𝑤) ⋅ 𝜙(𝐵𝑃 = 𝑀𝑜𝑟𝑒)
else if
𝜙(𝐵𝑊 = 𝑀𝑒𝑑𝑖𝑢𝑚) ⋅ 𝜙(𝐵𝐶 = 𝑀𝑒𝑑𝑖𝑢𝑚) ⋅ 𝜙(𝐵𝑃 = 𝐿𝑒𝑠𝑠)
else if
𝜙(𝐵𝑊 = 𝑀𝑒𝑑𝑖𝑢𝑚) ⋅ 𝜙(𝐵𝐶 = 𝑀𝑒𝑑𝑖𝑢𝑚) ⋅ 𝜙(𝐵𝑃 = 𝑀𝑜𝑑𝑒𝑟𝑎𝑡𝑒)
𝑛 = 0
else
6. Time complexity
In this section, we briefly discuss the time needed by the original
MAODV and ECA-MAODV routing protocols.
6.1. Time complexity of MAODV routing protocol
In this subsection, Table 7 discusses the time needed for the MAODV
routing protocol for the process of route investigation to join a specific
group, multicast tree maintenance among the group members, route
configuration, route post-failure, group hello message, and multicast
route activity. The ubiquitous network is composed of K mobile nodes
with a T-diameter. The mobile nodes are randomly created by invoking
random functions. The mobile node having vital application services
(for instance, audio conferencing, video conferencing, IP telephony,
etc.) wishes to form a specific group by broadcasting service advertise-
ment messages in the ubiquitous network. Mobile node wishes to join a
particular group can send a route join query message to the group and
wait to get a join response from the member node.
Table 8
The time complexity of ECA-MAODV routing.
Performance parameters
Time complexity
Route investigation
O(log k)
Multicast tree maintenance
O(log k)
Configuration of route
O(log k)
Multicast route postfailure
O(log k)
Group hello message
O(log m)
Multicast route activity
O(log m)
Table 9
The space complexity of MAODV routing.
Type of packet
Packet size (in Bytes)
Join-route query
24
Route response
20
Activation of route
16
Group hello message
16
Total space occupied
76
6.2. Time complexity of ECA-MAODV routing protocol
In this subsection, Table 8 discusses the time needed for the ECA-
MAODV routing protocol for the process of route investigation to
join a specific group, multicast tree maintenance among the group
members, route configuration, route post-failure, group hello message,
and multicast route activity. The ubiquitous network is composed of
fewer k mobile nodes with a smaller m-diameter. The mobile nodes
are randomly created by invoking random functions. The mobile node
having vital application services (for instance, IISc research group,
virtual meetings, webinars, etc.) wishes to form a specific group by
broadcasting service advertisement messages in the ubiquitous net-
work. Mobile node wishes to join a particular group can send a route
join query message to the group and wait to get a join response from
the member node.
7. Space complexity
This section emphasizes space complexity that quantifies the
amount of memory needed to process the routing packets like join route
query, route response, activation of the route, and group hello message.
7.1. Space complexity of MAODV routing protocol
In this section, Table 9 displays the total space occupied by the
standard MAODV routing protocol during the join route query, route
response, route activation, and group hello message transactions.
The total space needed by the MAODV routing protocol is deter-
mined as follows. MAODV space complexity = sizeof(Join query +
Route response + Route activation + Group hello) messages. Hence-
forth, the total space required for the MAODV routing protocol is 76
bytes. Therefore MAODV routing protocol does not consume much
bandwidth, as the size of the packet is short.
7.2. Space complexity of ECA-MAODV routing protocol
Table 10 shows space needed by the ECA-MAODV routing protocol
to process the routing packets like join route query, route response,
activation of the route, and group hello message.
ECA-MAODV space complexity = sizeof(Join query + Route re-
sponse + Activation of route + Group hello message) packets. There-
fore, the total space required for the ECA-MAODV routing protocol is
76 bytes. Hence space required for ECA-MAODV is the same as that of
the conventional MAODV routing protocol. Efficient utilization of the
reserved bit fields available in join query and route response packet is
another biggest advantage of ECA-MAODV because, with the same size,
Array 14 (2022) 100129
8
C.P. Chavan and P. Venkataram
Table 10
Space complexity of ECA-MAODV routing protocol.
Type of packet
Packet size (in Bytes)
Join route query
24
Route response
20
Activation of route
16
Group hello message
16
Total space occupied
76
Table 11
The contrast between MAODV and ECA-MAODV.
Parameters
MAODV
ECA-MAODV
Time complexity
O(T x log(T))
O(log k)
Space complexity
76 Bytes
76 Bytes
Dynamic routing decision
No
Yes
Route discovery (link fail)
Repeats route discovery
Choose an alternate path
Selection of route
Route with minimum hop
Resource rich nodes
Delay and throughput
Moderate
Less
Congestion
Medium
Less
Control packet overhead
Moderate
Low
it performs better than conventional MAODV by reducing overhead in
packets.
8. The contrast between MAODV and ECA-MAODV routing proto-
cols
This section compares and contrasts conventional MAODV and ECA-
MAODV routing protocols by considering a set of metrics, as shown in
Table 11.
• Time and space complexity: Time and space are required to
perform routing operations.
• Dynamic routing decision: Make runtime routing decisions when
an event occurs.
• Link failure and selection of route: If the link is disconnected, then
select the alternate path.
• Delay and throughput: The time needed to send the data packet
to the desired node.
• Congestion and packet control overhead: Analyze routing control
packet overhead.
9. Directory of events in multicast AODV routing protocol
In this section, we have listed the different types of events, set of
conditions, and related actions for group formation, route activation,
and joining a group in multicast AODV routing protocol as shown in
Table 12. The directory of events given below.
• A node joining a group (e.g., PET-ECE-IISC research group): A
node can broadcast a join request message.
• A node can join the group by setting the join flag to 1: Set the
join flag to 1 if a node wishes to join the multicast tree.
• Activate route entry: Used to build a multicast tree from which
all community members can easily link and exchange data.
• Member node wishes to generate route reply: Only the member
node of a multicast tree will generate a route response message.
• A node receiving and transmitting hello message: To checks the
connectivity among the group members.
• Creation of multicast tree: To establish connectivity among group
members.
10. Implementation of ECA-MAODV routing protocol
In this section, we emphasize on implementation details of the ECA-
MAODV routing protocol in the ubiquitous network. The detailed steps
Table 12
Directory of events, conditions, and actions in MAODV routing.
Event
Condition
Action
E1:A node joining a group
C1:if(Node has a route)
A1:Drop join route query
E2:A node joining a group
C2:if(Route not exist)
A2:Set j-request flag = 1
E3:Set join flag to 1
C3:set(Group address)
A3:Propagate route query
E4:Activate route entry
C4:is(Info to next hop)
A4:Update mroute table
E5:Generates a RREP
C5:is(Node ∈ specific G)
A5:Update multicast table
E6:Generates a RREP
C6:is(Node ∉ specific G)
A6:Ignore route reply
E7:Receive a hello packet
C7:is(Hop count += 1)
A7:Update multicast table
E8:No hello packet
C8:is(Mflag = 1)
A8:Update multicast table
E9:Node transmits packet
C9:if(Node ∈ specific G)
A9:Receive a packet
E10:Create a mcast tree
C10:is(Sno 1 && min-hc)
A10:Unicast mact packet
and collection of subroutines used in the ECA-MAODV routing protocol
are as follows.
1. Procedure for transferring files from the MAODV directory to the
base directory of AODV.
(a) The list of files given below should transfer to the AODV
base directory.
i. AODV header
ii. AODV C++
iii. AODV multicast C++
iv. AODV multicast table auxiliary C++
v. AODV multicast table auxiliary header
vi. AODV multicast table C++
vii. AODV multicast table C++ header
viii. AODV routing packet header
ix. AODV routing queue C++
x. AODV routing queue header
xi. AODV routing table C++
xii. AODV routing table header
xiii. CMU trace-file C++
xiv. Wireless phy C++
xv. Wireless phy header
xvi. Node C++
xvii. Node header
xviii. Network simulator multicast TCL file
(b) Move the selected files of (a) to a specific folder in the
ns-3.28 directory
i. Move files (i) through (xii) to aodv directory
ii. Move file (xiii) to trace directory
iii. Move files (xiv) and (xv) to mac directory
iv. Move files (xvi) and (xvii) to common directory
v. Eventually move file (xviii) to mcast directory
(c) The following header files need to be set initially in the
source code
i. AODV local repair header: The usage of the header
file is to unicast packet simulation at the time of
link repair.
ii. AODV link-layer detection: This header file is used
for a unicast packet to detect the link.
iii. Improvement: The usage of the header file is only
for the transmission of unicast packets for the sec-
ond time after the first transmission has collapsed.
The packets will be lost when the second transmis-
sion ever stalls.
iv. Multicast: Used for multicast configuration and dis-
seminate data packet from a sender to a group of
receivers.
Array 14 (2022) 100129
9
C.P. Chavan and P. Venkataram
v. Prediction: When the route to unicast traffic is
proactively maintained, the header file is incorpo-
rated.
vi. Upper-level receive: The header file enables an
upper-level agent to accept multicast data packets
(for instance, UDP agent port number 654). This
function is primarily used for group members of
the multicast community to transmit and receive
multicast traffic to the same port.
vii. MAODV: It is an extension of AODV that supports
features like unicast, broadcast, and multicast. Ev-
ery file in the MAODV base directory is a reference
to other files to execute the code.
10.1. Subroutines in ECA-MAODV routing protocol
The hello packets are disabled in AODV routing protocol implemen-
tation. To allow broadcasting of hello packets in ECA-MAODV routing,
comments on the following two segments are present in the AODV C++
file. The first one is AODV connectivity detection, and the second is
link-layer detection. Re-compile ns3 by using make clean when a make
clean is entered AODV reference directory that comprised of the only
main file but not the object file. Executable file using the command
./configure creating make file, make inturn creates o file such as AODV
object file, AODV log object, AODV routing queue, and AODV routing
table respectively.
1. Routing table management subroutines
(a) void eca_rtable_resolve(packet *pkt)
(b) void eca_rtable_modify(aodv eca_rtable_info *rtable, un-
signed_int32_c
seq_num,
unsigned_int16_c
parameter,
eca_ns_addr_c, next_hop, double route_time_out)
(c) void eca_rtable_down(aodv_rtable_entry *rtable)
(d) void
eca_local_rtable_repair(aodv_rtable_entry
*rtable,
packet *pkt)
(e) void eca_rtable_link_failed(packet *pkt)
(f) void eca_rtable_expel(void)
2. Neighbors management subroutines
(a) void eca_nb_add(addr_c uid)
(b) aodv_proximity* nb_search(addr_c uid)
(c) void nb_remove(addr_c uid)
3. Broadcast ID information subroutines
(a) void eca_uid_add(addr_c uid, unsigned_int32_c bcid)
(b) bool eca_uid_search(addr_c uid, unsigned_int32_c bcid)
(c) void uid_expel(void)
4. Packet transmission subroutines
(a) void pkt_forward(aodv_rtable_entry *rtable, packet *pkt,
double latency)
(b) void transmithello(void)
(c) void sendquery(addr_c destination)
(d) void sendresponse(addr_c ipdstn, unsigned_int32_c hc,
addr_c
rpdstn,
unsigned_int32_c
rpseqnumber,
unsigned_int32_c lifespan, double time)
5. Packet reception subroutines
(a) eca-maodv::rxaodv(packet *pkt)
(b) eca-maodv::rxquery(packet *pkt)
(c) eca-maodv::rxresponse(packet *pkt)
(d) eca-maodv::rxerror(packet *pkt)
(e) eca-maodv::rxhello(packet *pkt)
6. Timer process subroutine
(a) timer.manipulate((event*) 0)
(b) grouphtimer.manipulate((event*) 0)
(c) broadcasttimer.manipulate((event*) 0)
(d) local_construction_timer.manipulate((event*) 0)
10.2. File references of AODV C++ and AODV header
AODV C++ file (see Fig. 8) comprises of cmu trace header file, aodv
header file, random header file, and aodv packet header file. The aodv
header file (see Fig. 9) consisting of aodv route table header file, aodv
multicast table header file, aodv rq header file, and a pre queue header
file. The random header file consists of a random number generation
header file, configuration header file, and math header file. In addition
to the aodv cc file, the aodv header file comprises header files such as
agent, ip, god, trace, drop tail, queue, object, packet, scheduler, assert,
and system types.
10.3. Multicast routing evaluation metrics
• Bandwidth availability: Bandwidth is among the most signifi-
cant resource is taken into account at the time of dissemination
of the data and control packets. A wireless link can propagate the
maximum amount of data packet from originating to an ultimate
destination node within the stipulated time and is denoted by
𝛽 =
𝑀𝑒𝑠𝑠𝑎𝑔𝑒 𝑠𝑖𝑧𝑒
𝑇 𝑟𝑎𝑛𝑠𝑚𝑖𝑠𝑠𝑖𝑜𝑛 𝑡𝑖𝑚𝑒
• Packet processing latency: Processing latency is the period
taken to interpret the encapsulated packet promptly by a mobile
node ‘x’ and is given by the following equation.
𝑝𝑟𝑜𝑐𝑥
𝑑 = (𝜎11 − 𝜎12) + 𝜎13
(2)
where 𝜎11 is to verify individual bit, 𝜎12 is to determine error
level, and 𝜎13 is to evaluate the next destination of the packet.
The message propagation delay in a subnetwork between node 𝑥
and node 𝑦 is denoted by 𝑡𝑥−𝑦
𝑑𝑒𝑙𝑎𝑦 and is given by
𝑡𝑥−𝑦
𝑑𝑒𝑙𝑎𝑦 =
𝑀𝑒𝑠𝑠𝑎𝑔𝑒 𝑠𝑖𝑧𝑒
𝑁𝑒𝑡𝑤𝑜𝑟𝑘 𝑏𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ
(3)
The queuing latency of a specific message in the ubiquitous
network is given by the following equation
𝑞𝑑𝑒𝑙𝑎𝑦 =
1
𝜇 − 𝜆
(4)
The following equation gives the transmission delay between two
designated routers in the ubiquitous network
𝑝𝑟𝑜𝑝𝑥−𝑦
𝑑𝑒𝑙𝑎𝑦 =
𝐷𝑖𝑠𝑡𝑎𝑛𝑐𝑒 𝑏𝑒𝑡𝑤𝑒𝑒𝑛 𝑟𝑜𝑢𝑡𝑒𝑟𝑠
𝑃 𝑟𝑜𝑝𝑎𝑔𝑎𝑡𝑖𝑜𝑛 𝑠𝑝𝑒𝑒𝑑 𝑜𝑓 𝑡ℎ𝑒 𝑙𝑖𝑛𝑘
(5)
• End-to-end latency: The typical end-to-end latency is the time
it takes for data packets to be successfully transmitted from the
originator node to the final destination.
𝐴𝑣𝑒𝑟𝑎𝑔𝑒 𝐸2𝐸 𝑑𝑒𝑙𝑎𝑦 = 𝜇1 − 𝜇2
(6)
where 𝜇1 is the time at which data packet is received, and 𝜇2 is
the time at which data packet is sent.
• Buffer capacity: Buffer capacity of a node is the amount of
memory space available to store the flow of control and data
packets. The buffer capacity of a node is determined using the
equation
𝐵𝐶 = 𝛼1 − [𝛼2 − 𝛼3]
(7)
where 𝛼1 is buffer space, 𝛼2 is packet received, and 𝛼3 is a packet
sent successfully.
• Mobility: When nodes are mobile, the movement of mobile nodes
in an arbitrary direction keeps their position, speed, and acceler-
ation altered for a given period. A node’s mobility is measured
Array 14 (2022) 100129
10
C.P. Chavan and P. Venkataram
Fig. 8. File references of AODV C++ file.
Fig. 9. File references of AODV header file.
using an equation
𝑀 =
∑𝑚
𝑜=1
√(𝑥𝑜 − 𝑥𝑝
)2 − (𝑦𝑜 − 𝑦𝑝
)2
𝑡
(8)
where t is the time of the simulation. As and when node mobility
increases, there is a chance of breakage of the link that leads
group members to defer the communication from the multicast
tree so that node cannot send the data packet properly to the
specific group.
• Battery power: The potential of a mobile node to perform spe-
cific actions in the network on time, for example, packet transmis-
sion to its proximity nodes, receiving a packet from the neighbor
node, etc. The battery power of a mobile node is determined using
the equation.
𝐵𝑃 =
𝑃𝑖𝑑𝑙𝑒 + 𝑃𝑠𝑙𝑒𝑒𝑝 + 𝑃𝑡𝑥 + 𝑃𝑟𝑥
𝑡𝑖𝑚𝑒
(9)
• Throughput: Throughput is the amount of data packets transmit-
ted successfully per unit time from the originator to the intended
destination node. The equation is given as follows
𝑇 = 𝑅𝑥
𝑇
(10)
where 𝑅𝑥 is the number of the data packet received successfully
and ‘T’ is time.
Array 14 (2022) 100129
11
C.P. Chavan and P. Venkataram
Table 13
Simulation parameters.
Parameters
Values
Number of mobile nodes
200
Type of network simulator
NS3
MAC type
IEEE 802.11
Multicast routing protocols
AODV, MAODV, and ECA-MAODV
Transmission range
40 mts
Simulation time
500 s
Pause time
10 s
Terrain
2000X2000 m
Packet size
512 Bytes
Queue length
50
Packet rate
4 Packets/s
Antenna type
Omnidirectional
Radio propagation model
2-Ray ground
Mobility
Random
• Routing Packet Control Overhead (RPCO): RPCO is the ratio
between total control packets generated (such as join route re-
quest, route response, activation of the route, and group hello
message) to the total amount of data packets received. ECA-
MAODV routing protocol minimizes the usage of control packets
during the route establishment phase.
𝑅𝑃 𝐶𝑂 = 𝑇 𝑜𝑡𝑎𝑙 𝑐𝑜𝑛𝑡𝑟𝑜𝑙 𝑝𝑎𝑐𝑘𝑒𝑡𝑠 𝑔𝑒𝑛𝑒𝑟𝑎𝑡𝑒𝑑
𝑇 𝑜𝑡𝑎𝑙 𝑟𝑒𝑐𝑒𝑖𝑣𝑒𝑑 𝑑𝑎𝑡𝑎 𝑝𝑎𝑐𝑘𝑒𝑡𝑠
(11)
11. Simulation environment
We have created four different subnetworks like PET (Protocol
Engineering and Technology) lab, RF (Radio Frequency) lab, ERNET
(Education and Research Network) lab, and Photonic lab in the ECE
department at IISc. Each subnetwork consisting of 50 mobile nodes col-
lectively forms a multicast group named ‘‘Innovative-Research-Group’’
objective of the research group is to discuss the current trends in a
wireless network. A node from each subnetwork sends a join route
query message to the multicast group to become a member of the
research group. Member node sends a route response to join query
message, upon receiving a response from the member node, a node
may join the multicast group. We develop our NS3 simulation on the
operating system of Fedora Core 24 by taking simulation parameters
into account, as shown in Table 13. We simulated with 200 nodes
uniformly dispersed onto a 2000X2000 m square field. In every four
separate subnetworks consisting of 50 nodes are deployed. Whenever
a node triggers an event, the node informs its periphery nodes as well
as nodes residing in another subnetwork too, and chooses the best path
for data transmission.
12. Simulation results
The network NS-3 is employed to conduct a simulation of the
energy-efficient ECA-MAODV multicast routing protocol. A series of
results are obtained, described in the figures below. In Fig. 10, we
generated 100 nodes randomly and simulated for 1000 ms better
throughput is obtained in ECA-Multicast AODV routing protocol within
a specified amount of time. The ECA-MAODV protocol constructs the
multicast tree by considering metrics such as link bandwidth, minimal
hop count, buffer capacity, energy level, etc. The ECA-MAODV selects
the nodes with plentiful resources to proceed with further transactions
such as sending join query, the transmission of the data packet, re-
ceiving route response from the member nodes, etc. Indeed, traditional
routing protocols like multicast AODV and standard AODV do not
consider bandwidth as a metric while constructing multicast trees.
Therefore Multicast AODV and AODV routing protocols have lower
throughput in comparison with the ECA-MAODV routing protocol.
In Fig. 11, we have created 50 nodes randomly by invoking the
pseudorand() function. At a certain point, we analyze the time needed
Fig. 10. Simulation time vs. Throughput.
Fig. 11. Simulation time vs. Data packet lost.
to propagate data packets from a transmitter to the set of receivers.
If the transmitted packet is not getting by the member of the multi-
cast group in a stipulated time, we need to assume that packet is a
lost packet. Increasing orders, i.e., ECA-MAODV, MAODV, and AODV
routing protocols, signify the number of packets missing at the time
of delivery. Therefore, we conclude that the packet loss ratio is low
in ECA-MAODV while comparing with the other two routing protocols
such as MAODV and AODV. When a mobile node suddenly disappears
from the network or connection fails on the intended path, a mobile
node produces a link error message as and when it encounters path
failure. The connectivity of the link among the mobile node is monitors
via hello message periodically. The mobile node retransmits a joint
route query message to the group members to form a multicast tree
whenever the link between the group members is lost. The member
node consumes time to establish a multicast tree for the lost connection.
Member node of a specific group may not get needed the data packet
in a set prescribed time due to a lost link. The mobile node assumes
that the packet is lost due to connectivity and waits for some time to
receive data packets from the mobile node in the network.
We have considered 40 nodes in Fig. 12, in which we have examined
the response time of each set of nodes w.r.t routing protocols such
as ECA-MAODV, MAODV, and AODV. ECA-MAODV routing protocol
response time is faster than MAODV and AODV routing protocols
since it is an event-driven routing protocol that reacts immediately to
networking conditions as and when an event occurs.
Array 14 (2022) 100129
12
C.P. Chavan and P. Venkataram
Fig. 12. Number of nodes vs. Average response time.
Fig. 13. Number of nodes vs. Average latency.
Fig. 13 shows the average latency of the ECA-MAODV for 150
mobile nodes is low in comparison with MAODV and AODV routing
protocols at the time of the dissemination of data and control packets to
the intended receivers. The ECA-MAODV routing protocol is, therefore,
compelled to adapt rapidly to make dynamic decisions under sensitive
network conditions.
We considered an average of 200 mobile nodes in Fig. 14 and
observed the time required by a mobile node to process a concurrently
occurring series of events. We analyzed the cumulative amount of
mobile nodes at a given time versus the total number of processed
events.
In Fig. 15, we considered 14 mobile nodes in which their corre-
sponding balance of energy w.r.t probability density when the par-
ticular event is processed at that particular mobile node. The value
of the probability density function at any given set of events in the
sample space is interpreted based on the constraints. The relative
probability value of the discrete variable is equal to the sequence of
events processed.
13. Conclusion
In this article, we have incorporated an innovative vague set to
choose an optimal path for the creation of a multicast tree in the
ubiquitous network. It is an improved part of the fuzzy set. Each
element of a fuzzy set is assigned a single value span of [0,1] that
reflects its grade of membership. The single value does not cause proof
Fig. 14. Average number of nodes vs. Average event processed.
Fig. 15. Balance of energy vs. Probability density.
of a degree of membership and evidence against membership to be
divided. The vague collection is an interval-based membership in which
metrics like the bandwidth of the link, node’s processor speed, buffer
capacity, the battery power of a node, and minimal hop count are taken
into account to create a multicast tree. Every member node of a specific
multicast group establishes the connection via a shared multicast tree to
propagate data packets. Eventually, the utility of ECA-MAODV routing
protocols using a vague collection has been measured and contrasted.
ECA-MAODV outperforms IETF AODV and MAOV routing protocols in
terms of the lifespan of the network, better throughput, minimal data
packet loss, mean response time, mean latency, and a mean number
of events processed. The vague collection outperforms the point-based
membership function in terms of the lifetime of the ubiquitous network.
Declaration of competing interest
The authors declare that they have no known competing finan-
cial interests or personal relationships that could have appeared to
influence the work reported in this paper.
Availability of data and material
The authors declare that this manuscript is truthful, authentic, and
transparent.
Array 14 (2022) 100129
13
C.P. Chavan and P. Venkataram
References
[1] Chavan CP, Venkataram P. Designing a routing protocol for ubiquitous networks
using ECA scheme. In: Fifth international conference on advances in computing
and information technology (acity 2015). Chennai, India; 2015, p. 1–18. http:
//dx.doi.org/10.5121/csit.2015.51301.
[2] Internet multicast routing architecture. https://tools.ietf.org/html/rfc5110.
[3] Huang X, Fang Y. Multiconstrained QoS multipath routing in wireless sensor
networks. J Wirel Netw 2008;14(4):465–78. http://dx.doi.org/10.1007/s11276-
006-0731-9.
[4] Dhote CA, Pund MA, Mangrulkar R. Hybrid routing protocol with broadcast
reply for mobile ad hoc network. Int J Comput Appl 2010;1(10):108–13. http:
//dx.doi.org/10.5120/212-360.
[5] Routing architecture is accessed from https://tools.ietf.org/html/rfc6115.
[6] Murthy S, Garcia-Luna-Aceves JJ. An efficient routing protocol for wireless
networks. ACM Mob Netw Appl J Spec Issue Routing Mob Commun Netw
1996;1(2):183–97. http://dx.doi.org/10.1007/BF01193336.
[7] Garcia-Luna-Aceves J, Spohn M. Source-tree adaptive routing in wireless net-
works. In: Proceedings of the 7th annual ieee international conference on
network protocols. Toronto, Canada; 1999, http://dx.doi.org/10.1109/ICNP.
1999.801950.
[8] Toh C. A novel distributed routing protocol to support ad hoc mobile computing.
In: IEEE 15th annual international phoenix conference. 1996, p. 480–6. http:
//dx.doi.org/10.1109/PCCC.1996.493675.
[9] Jeni, Jasmine PR, Juliet AV, Parthasarathy R, Bose AM. Performance analysis
of DOA and AODV routing protocols with black hole attack in MANET. In:
IEEE conference on smart structures and systems (icsss). 2013, p. 178–82.
http://dx.doi.org/10.1109/ICSSS.2013.6623022.
[10] Bondre, Vipin, Dorle S. Performance analysis of AOMDV and AODV rout-
ing protocol for emergency services in VANET. Eur J Adv Eng Technol
2017;4(4):242–8.
[11] Felemban E, Lee C, Ekici E. Multipath multi-speed protocol for QoS guarantee of
reliability and timeliness in wireless sensor networks. IEEE Trans Mob Comput
2006;5(6):738–54. http://dx.doi.org/10.1109/TMC.2006.79.
[12] Working of ad-hoc network is accessed from https://tools.ietf.org/html/rfc5444.
[13] Internet routing protocol is accessed from https://tools.ietf.org/html/rfc1264.
[14] Ge M, Krishnamurthy SV, Faloutsos M. Application versus network layer
multicasting in ad hoc networks: The ALMA routing protocol. Ad Hoc Netw
2006;4(2):283–300. http://dx.doi.org/10.1016/j.adhoc.2004.10.002, Elsevier.
[15] Tavizi A, Ghaffari A. Tree-based reliable and energy-aware multicast routing pro-
tocol for mobile ad hoc networks. Springer J Supercomput 2018;74(11):6310–32.
http://dx.doi.org/10.1007/s11227-018-2562-8.
[16] Lee S-J, Su W, Gerla M. On-demand multicast routing protocol in multi-hop
wireless mobile networks. Mob Netw Appl 2002;441–53. http://dx.doi.org/10.
1023/A:1020756600187.
[17] Chawathe Y, McCanne S, Brewer E. RMX: Reliable multicast for heterogeneous
networks. In: Infocom 2000. Nineteenth annual joint conference of the ieee
computer and communications societies, Vol. 2. 2000, p. 795–804. http://dx.
doi.org/10.1109/INFCOM.2000.832254.
[18] Jia X, Wang L. A group multicast routing algorithm by using multiple minimum
steiner trees. Comput Commun 1997;20(9):750–8. http://dx.doi.org/10.1016/
S0140-3664(97)00081-9, Elsevier.
[19] Badis H. A QoS-aware multicast routing protocol for multimedia applications
in mobile ad hoc networks. In: Proceedings of the 11th acm international
symposium on modeling, analysis and simulation of wireless and mobile systems.
2008, p. 244–51. http://dx.doi.org/10.1145/1454503.1454547.
[20] Yadav AK, Tripathi S. Design of QoS multicast routing protocol using re-
liable node selection scheme for MANETs. Springer Peer-to-Peer Netw Appl
2017;10:897–909. http://dx.doi.org/10.1007/s12083-016-0441-8.
