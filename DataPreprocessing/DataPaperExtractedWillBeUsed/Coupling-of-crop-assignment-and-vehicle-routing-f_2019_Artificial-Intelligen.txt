Coupling of crop assignment and vehicle routing for harvest planning
in agriculture
Mogens Graf Plessen
MGP is an independent researcher
a b s t r a c t
a r t i c l e
i n f o
Article history:
Received 11 June 2019
Received in revised form 25 July 2019
Accepted 25 July 2019
Available online 6 August 2019
A method for harvest planning based on the coupling of crop assignment with vehicle routing is presented. Given
a setting with multiple ﬁelds, a path network connecting these, multiple depots at which a number of harvesters
are initially located, the main question addressed is: Which crop out of a set of different crops to assign to each
ﬁeld when accounting for the given setting? It must be answered by every farm manager at the beginning of
every work-cycle starting with plant seeding and ending with harvesting. Rather than solving an assignment
problem only, it is here also accounted for the connectivity between ﬁelds. In practice, ﬁelds are often located dis-
tant apart. Traveling costs of machinery and limited harvesting windows demand optimized operation and route
planning. Therefore, the proposed method outputs crop assignments to ﬁelds and simultaneously determines
crop-tours, i.e., optimized sequences in which to service ﬁelds of the same crop during harvest. It is of particular
relevance for larger farms and groups of farms that collaborate and share machinery. Integer programming based
exact algorithms are derived. For large numbers of ﬁelds, where these algorithms may not be tractable due to
computational constraints, elements of clustering and the solution of local Traveling Salesman Problems are
added, thereby on the one hand rendering the method heuristic and in general suboptimal, but on the other
hand maintaining large-scale applicability.
© 2019 The Author. Publishing services by Elsevier B.V. on behalf of KeAi Communications Co., Ltd. This is an open
access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
Keywords:
Agricultural logistics
Assignment problem
Vehicle routing
Integer programming
Decision support system
1. Introduction
Agriculture is a diverse ﬁeld ranging from biotech to autonomous
robots and ﬁnance. It is also closely related to logistics. According to
Ahumada and Villalobos (2009), there are four main functional areas
for the agri-food supply chain: production, harvesting, storage and dis-
tribution. This paper focuses on model-based production planning. In
fact, in view of the recent plunges of agricultural commodity prices ac-
cording to the Financial Times (2016) that threaten the sustainability
of not few farmers, efﬁciency improvements in production are essential.
The decision on the assignment of crops to ﬁelds is crucial in that it de-
termines the complete work-cycle. In common practice today, ﬁelds are
often ﬁrst manually clustered according to geographical locations be-
fore a crop is assigned uniformly to all ﬁelds of each cluster, whereby
it is often accounted for crop rotation (Havlin et al., 1990) in order to re-
duce soil erosion and to increase soil fertility. The spatial clustering is
done for faster harvesting. A trend among farmers in Europe is to collab-
orate in form of limited companies for the sharing of machinery. Not
seldomly conﬂicts arise about the sequence in which to harvest multiple
ﬁelds of identical crops but various owners. This paper is motivated by
providing a mathematical modeling framework for crop assignment to
ﬁelds when also accounting for the path network connecting these
ﬁelds and depots of harvesters.
The basic multiple Traveling Salesman Problem (mTSP) describes
the objective of ﬁnding total tour cost-minimizing routes for multiple
salesmen that all start and end at a single depot, whereby all vertices
are visited once by exactly one salesman, see Bektas (2006). Nonnega-
tive edge cost can refer to, e.g., monetary, space or time units. When ac-
counting for various demands at each vertex and limiting the capacity of
vehicles (salesmen), the problem is referred to as the capacitated Vehi-
cle Routing Problem (VRP). Variations include the VRP with time win-
dows, with backhauls and with pickup and delivery, see Toth and Vigo
(2014). The applications are manifold. For example, for vehicle routing
with real-time information see Kim et al. (2005) and the references
therein. Recently, there has been increased interest in applying logistical
optimization in agriculture for scheduling, routing and ﬂeet manage-
ment, see Basnet et al. (2006), Ferrer et al. (2008), Marques et al.
(2014), Conesa-Muñoz et al. (2016a) and Sørensen and Bochtis
(2010). Special focus was on the coordination of machinery teams dis-
tinguishing between primary (harvester) and service (transport) units
referred to as PUs and SUs, see Bochtis and Sørensen (2009), Jensen
et al. (2012), Seyyedhasani and Dvorak (2017) and Orfanou et al.
(2013). All of these references assume that ﬁelds with assigned crops
are given. To the best of the author's knowledge, the optimized
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
E-mail address: mgplessen@gmail.com (M. Graf Plessen).
https://doi.org/10.1016/j.aiia.2019.07.001
2589-7217/© 2019 The Author. Publishing services by Elsevier B.V. on behalf of KeAi Communications Co., Ltd. This is an open access article under the CC BY-NC-ND license
(http://creativecommons.org/licenses/by-nc-nd/4.0/).
Contents lists available at ScienceDirect
Artiﬁcial Intelligence in Agriculture
journal homepage: http://www.keaipublishing.com/en/journals/artificial-
intelligence-in-agriculture/
assignment of crops to ﬁelds and simultaneously accounting for vehicle
routing and other constraints for optimized harvest planning has not
been discussed in the literature before. Such strategic assignment
must be conducted once per year and at the beginning of the (yearly)
work-cycle, thereby decisively affecting the complete agricultural
production-cycle, as the ﬁrst step within a two-layered framework.
The second layer involves coordinations of PUs and SUs, exploiting all
of the aforementioned references, and is to be conducted at the end of
the work-cycle during harvest.
The contribution of this paper is a novel method that can (a) assist
farm managers in the planning of crop assignments to available ﬁelds
and (b) simultaneously determines crop-tours, i.e., optimized se-
quences in which to service ﬁelds of the same crop during harvest.
Eight different integer programs (IPs) are formulated corresponding to
different problem setups.
The remaining of the paper is organized as follows. Problem and no-
tation are formulated in Section 2. Algorithms are derived in Section 3.
Extensions are discussed in Section 4. Numerical examples are given
in Section 5 before concluding with Section 6.
2. Problem formulation and notation
The general problem is formulated in literal form. Then, mathemat-
ical notation is introduced based on which the preferred eight IPs and
the main algorithm are derived and discussed in Section 3.
2.1. Problem formulation
Problem 1. Suppose a setting in which multiple ﬁelds, a path network
connecting these ﬁelds, multiple depots, and potentially multiple har-
vesters located initially at each depot are given. Then, at the beginning
of every work-cycle (beginning with planting and ending with harvest-
ing), a crop has to be assigned to all available ﬁelds. This entails the fol-
lowing questions:
1 Which crop to optimally assign to each ﬁeld?
2 In what sequence to optimally service all ﬁelds during harvest?
3 How to optimally dispatch multiple harvesters, that initially may be lo-
cated at multiple depots, to the multiple ﬁelds?
4 Which ﬁelds should be serviced, which leased, and at what prices?
The ﬁrst question decides the complete work-cycle. For optimized
harvest planning, its answer must simultaneously account for questions
2) to 4). See also Fig. 1 for problem visualization and illustration of real-
world relevance due to signiﬁcant inter-ﬁeld distances. It is stressed
that at the beginning of every work-cycle of a farm, planning decisions
according to Problem 1 must be taken. Therefore, in this paper, optimi-
zation problems subject to constraints are derived that permit to input
data such as, e.g., cost coefﬁcients or revenues per ﬁeld and crop. Note
that at the end of every work-cycle, i.e., at harvest, deviations from ini-
tial modeling have occurred. For example, the actual amount of crop
harvested per ﬁeld is different from the predicted one, and weather is
inﬂuencing potential harvesting-windows. Thus, at the end of the
work-cycle, the aforementioned second framework-layer becomes rele-
vant, involving the coordination of PUs and SUs. However, in this paper
the focus is exclusively on the ﬁrst framework-layer.
2.2. Notation
Notation is mainly adopted from Toth and Vigo (2014). A complete
graph is denoted by G ¼ ðV, EÞ, where V ¼ f0, . . . , D � 1, D, .. . , D þ
L � 1g and E are vertex and edge set, respectively. Throughout, an arc
is referred to as a directed edge. The cardinality of a set of vertices is de-
noted by |⋅|. Vertices i ∈ D ¼ f0, . . . , D � 1g and i ∈ℒ = {D,…,D + L −
1} correspond to D depots and L ﬁelds. The K different crops are indexed
by K ¼ f0, .. . , K � 1g. Let the number of harvesters located at a depot
and suitable for a speciﬁc crop be denoted by Nharv,k
d
, ∀d ∈ D, ∀k ∈ K.
Let the normalized nonnegative traveling cost per harvester and crop
k between a depot d and a ﬁeld j, or between two ﬁelds i and j, be de-
noted
by
~ck
dj
and
~ck
ij,
respectively.
Then,
abbreviating
Nharv,k ¼ ∑d ∈ DNharv,k
d
, edge costs are deﬁned as:
ck
ij ¼ Nharv,k~ck
ij, ∀i, j ∈ L, ∀k ∈ K,
ð1aÞ
ck
dj ¼ Nharv,k~ck
dj, ∀d ∈ D, ∀j ∈ L, ∀k ∈ K,
ð1bÞ
ck,kmin
dj
¼ ∑
~d ∈ D
Nharv,k
~d
~ck
~dj, ∀j ∈ L, ∀k ∈ K,
ð1cÞ
where graph G is in general based on ck
ij and ck
dj. Note that ck
ij and ck
dj are
here deﬁned as uniformly scaled by Nharv,k, and that, in practice, ~ck
ij and
~ck
dj are proportional to inter-ﬁeld path lengths. As will be shown, ck,kmin
dj
are used for speciﬁc IP formulations. Similarly to Eqs. (1b) and (1c) ck
jd
and ck,kmax
jd
are deﬁned. In general, traveling costs along the same geo-
graphical paths may vary for different k due to different crop-
dependent harvesting machinery. Suitably, they may be modeled as
varying by a constant offset. The expected revenue from growing and
marketing of crop k ∈ K on ﬁeld l ∈ℒ is denoted by rk
l . Maintenance
cost per depot are given by zd, ∀d ∈ D. We assume a ﬁxed cost of m in-
curred for every crop. All costs shall be in monetary units, here Euros
(€). Furthermore, throughout it is assumed that arc/edge costs satisfy
the triangle inequality (see Fleming et al., 2013).
Decision variables are discussed. It is distinguished between two
major classes: natural and auxiliary decision variables. The ﬁrst class
comprises binary xk
ij ∈ f0, 1g, ∀i, j ∈ V, ∀k ∈ K, with xk
ij ¼ 1 indicating
arc (i,j) to be element of the optimal route for crop k. For the symmetric
case with xk
ji ¼ xk
ij, (a) decision variable xk
ji can be dismissed, and
(b) xk
dj ∈ f0, 1, 2g, ∀d ∈ D, ∀j ∈ L, ∀k ∈ K is used, which permits to in-
dicate a visit of only ﬁeld j for a route corresponding to crop k. Further-
more, binary δk
l ∈ f0, 1g, ∀l ∈ L, ∀k ∈ K, with δk
l ¼ 1 indicating that
crop k is assigned to ﬁeld l. Integer γ is such that 1 ≤ γ ≤ K and indicates
Fig. 1. Problem visualization by example. Yellow markers indicate ﬁelds to be served by 3
collaborating farms. Overall, there are 85 ﬁelds. The satellite image shows an area of 15.9 ×
16.3 km. The path network connecting the ﬁelds is curvy and often along rural gravel roads
only permitting slow traveling speeds. The overall ﬁeld coverage area is more than 1700
ha. Traveling distances between pairs of ﬁelds is between meters up to dozens of km.
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
100
the number of active crops in the optimal solution. As will be shown,
auxiliary decision variables result from incorporating various logical
constraints into the IP formulations.
3. Problem solution
3.1. Assumptions and motivation of harvester group travel
The derivation of the proposed eight IPs in Section 3.2 is based on the
following assumptions and discussion.
Assumption 1. Throughout the harvest of any crop, harvesters are
refueled and maintained on the corresponding ﬁelds growing that
crop. Thus, there is no return to depots prior to the complete coverage
of all of these ﬁelds.
Assumption 2. A ﬁxed number of harvesters is assigned for the harvest
of every crop. Then, during the coverage of all ﬁelds associated with a
crop, harvesters travel as a group. Thus, it is assumed that there is no
dispatch of individual harvesters to individual ﬁelds.
Assumptions 1, 2 and cost coefﬁcients (1) are deﬁned for practical con-
siderations discussed below. Thus, in the most general sense of Problem
1 they are limiting. However, on the other hand, they permit to ap-
proach Problem 1 based on planning routes for each crop (in the follow-
ing referred to as crop-tours) similar to the mTSP-framework (Bektas,
2006). Thus, a route for each crop and the ﬁelds correspond to a travel-
ing salesman route and cities to be visited, respectively. Note, however,
despite this basic analogy, the mTSP-framework is insufﬁcient to ad-
dress Problem 1. In particular, crop assignment, multiple depots and ad-
ditional constraints are not addressed. Therefore, eight customized IPs
are derived in Section 3.2. First, however, it is further elaborated on
Assumption 2.
Proposition 1. Suppose that multiple harvesters are initially located at
one depot to which they must return after processing all ﬁelds associated
with a crop. Suppose further a graph with cost coefﬁcients according to
Eqs. (1a) and (1b). Then, an optimal policy is that all harvesters cover
the ﬁelds as a group, i.e., without distributing harvesters to different ﬁelds
of the same crop.
Proof. The proof is by construction. For the asymmetric case with dif-
ferent ﬁelds ripening at different times, a unique optimal working se-
quence is already implied. For the symmetric case, a cost-minimizing
route exists and includes exactly two edges incident to the depot vertex.
This is due to nonnegativity of traveling costs and the fact that cost co-
efﬁcients (1a) and (1b) are invariant to the number of harvesters trav-
eling along inter-ﬁeld paths (uniform scaling by Nharv,k). Any other
initial distribution of harvesters to ﬁelds not connected to the depot ver-
tex along the two aforementioned edges is thus suboptimal and har-
vester group travel is thus an optimal policy.
Several comments are made. First, accumulated inter-ﬁeld path
length minimization(invariant to the number of harvesters traveling
along the path) is of interest for minimization of total non-harvesting
time. By nonnegativity of edge path lengths there exists a shortest
path crop-tour. Since harvesters can always work in parallel on ﬁelds
since they are not constrained by each other, this shortest path should
be followed by all harvesters.
Second, harvester group travel bears more practical advantages. In
general, SUs must ideally be operated such that PUs (harvesters) can op-
erate continuously, such that any waiting times due to absent SUs for
unloading are avoided. In general, the rate at which harvesters are ﬁlled
is not easily predictable due to varying crop returns even within one
ﬁeld. Therefore, the concentration of all SUs to one ﬁeld is beneﬁcial
for robustness in the sense that multiple harvesters can be served (in-
stead of speciﬁc SU-PU couples), according to short-term freed
capacities. An additional advantage is the facilitated supervision by the
farm-manager.
Third, Proposition 1 assumes a single depot. In order to differentiate
between the cases that (a) all available harvesters are initially located at
one speciﬁc depot, and that (b) all available harvesters are initially dis-
tributed among multiple depots, ck,kmin
dj
is deﬁned according to Eq. (1c) in
contrast to ck
dj in Eq. (1b). Then, in the IP formulations of Section 3.2 har-
vester group travel is assumed from the ﬁrst ﬁeld on, and consequently
using cost coefﬁcients according to Eq. (1a). Note that such harvester
group travel starting from the ﬁrst ﬁeld of a crop-tour is practical. This
is since a timely agreement upon harvest-start, e.g., a day ahead, permits
that all harvesters (from different depots) plan their travel in time and
consequently start ﬁeld and route coverage coordinatedly and together.
Fourth, it is remarked that if different crops have different non-
overlapping harvesting times, then the same harvesters can in principle
be employed sequentially for the different crop-tours. In this paper, this
scenario is assumed and we order crops in K such that a lower index in-
dicates an earlier harvesting time. For an application example, consider
the crops in order barley, rapeseed and wheat. The alternative scenario
is that harvesting times are overlapping or different crops require en-
tirely different harvester machinery. This latter scenario is left for future
work and can be approached by partitioning of harvester groups, for ex-
ample, weighted (a) according to overall crop-area, or (b) according to
the predicted total crop-harversing time.
Finally, note that throughout Section 3 for the subsequent derivation
of IPs it is assumed that all ﬁelds must be served. The relaxation of this
assumption is treated in Section 4 when discussing ﬁnancial consider-
ations regarding the leasing of subsets of ﬁelds.
3.2. Eight integer linear programs
Eight different IPs are formulated for the eight different problem
setups considered to be most relevant for harvest planning. First, these
problem are stated only literally. Relevant constraints are summarized
compactly, whereby it is distinguished between constraints used in
ﬁnal numerical simulations and additional constraints. Then, for brevity
only the two most general IPs are stated mathematically. Nevertheless,
in the ﬁnal numerical experiments of Section 5 all eight IPs are evaluated.
3.2.1. Literal formulations
Eight integer linear programs, IP-1, …, IP-8, are summarized below.
IP-1 There is a single depot, D = 1, from which all harvesters start and
to which all harvesters return after each crop-tour. Any subset of
K crops can be used for planting.
IP-2 There are multiple depots D ≥ 1. After every crop-tour, harvesters
must return to the depot from which they started. Any subset of
K crops can be used for planting.
IP-3 Among D > 1 potential depots, the best depot w.r.t. a cost crite-
rion is selected. Then, all available harvesters are assigned to
this best depot. Note that this problem could also be addressed
by separately solving IP-1 for each of the D depots and then
selecting the best solution. However, here it is solved by a single
IP-formulation. Any subset of K crops can be used for planting.
IP-4 Multiple harvesters are initially located at multiple depots D ≥ 1.
These harvesters assemble at the ﬁrst ﬁeld of the ﬁrst crop-tour.
Then, all these harvesters travel as a group for the remainder of
the ﬁrst and all remaining crop-tours. Then, only after coverage
of the last ﬁeld of the last crop-tour these harvesters return to
their initial depots. For D = 1, IP-4 is identical to IP-2. For D >
1, for all crop-tours except the ﬁrst crop-tour IP-4 requires to se-
lect an optimal depot similarly to IP-3. Any subset of K crops can
be used for planting.
IP-m Like IP-n for all n = 1,…,4, but all of the K crops must now be
used: IP-m for m = 5,…,8.
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
101
3.2.2. Constraints and modeling
In order to realize the literal problem formulations above, objective
function and constraints are compactly summarized.
1. The IP cost function may include accumulated edge costs ck
ijxk
ij, nega-
tive proﬁts � rk
l δk
l , depot maintenance costs zdξd and crop costs
mγ, whereby ck
ij, rk
l , zd and m denote the predicted data which must
be assumed at the time of harvest planning.
2. Degree equations for ﬁelds ensure that ﬁelds are visited exactly once
per crop-tour. For example, for IP-3 with symmetric edge costs the
degree
equations
read:
∑d ∈ Dxk
dl þ ∑i < lxk
il þ ∑l < jxk
lj ¼ 2δk
l , ∀l ∈ L, ∀k ∈ K.
For
an
asymmetric formulation, degree equations are split into two, differ-
entiating an in-degree (sum of arcs entering) and out-degree (sum
of arcs leaving) equation, both equal to δk
l , ∀l ∈ L, ∀k ∈ K.
3. Degree equations for depots are conceptually identical to degree equa-
tions for ﬁelds. However, the cardinality of depot-vertices is not nec-
essarily two. Furthermore, the resulting degree equations may be
nonlinear in the original optimization variables. Then, in order to for-
mulate linear IPs, nonlinear degree equations can be rendered linear
by the introduction of (a) auxiliary variables, and (b) the application
of logical constraints (speciﬁed below) which introduce additional
linear inequality constraints. For example, for IP-3 the nonlinear de-
gree
equations
are:
∑k ∈ K∑ j ∈ Lxk
dj ¼ 2γξd, ∀d ∈ D,
with
xk
dj ∈ f0, 1, 2g, ξd ∈{0,1}, 1 ≤ γ ≤ K and ∑d ∈ Dξd ¼ 1.
4. Uniqueness of crop-assignments to ﬁelds is guaranteed through con-
straints ∑k ∈ Kδk
l ¼ 1, ∀l ∈ L.
5. Three classes of logical constraints are of particular interest. They can
be translated into integer linear inequalities according to Williams
(2013). Because of their importance, three logical constraints are
here repeated. Let ϵ > 0 be a small number (e.g., the machine preci-
sion), b,b1,b2,b3 ∈{0,1}, y ∈ℝ, and f(x) such that f : Rnx ! R is linear,
nx
the
variable
dimension,
f max ¼ maxx ∈ Xf ðxÞ
and
f min ¼ minx ∈ Xf ðxÞ, where X is a given bounded set.
(a) The statement “b = 1 if and only if f(x) ≤ 0 and b = 0 otherwise” is
equivalent to
f ðxÞ ≤ f maxð1 � bÞ,
f ðxÞ≥ϵ þ ð f min � ϵÞb:
ð2Þ
(b) The statement “b3 = 1 if and only if b1 = 1 and b2 = 1, and b3 = 0
otherwise” is equivalent to b3 = b1b2 and is equivalent to
b1 þ b2 � b3 ≤ 1,
b3 ≤ b1,
b3 ≤ b2:
ð3Þ
(c) The statement “y = f(x) if b = 1 and y = 0 otherwise” is equiva-
lent to y = bf(x) and is equivalent to
y≥f minb,
y ≤ f ðxÞ � f minð1 � bÞ,
ð4aÞ
y ≤ f maxb,
y≥f ðxÞ � f maxð1 � bÞ:
ð4bÞ
6. Under the assumption of a symmetric formulation (with undirected
edges instead of directed arcs) and dropping crop-index k for gener-
ality, the subtour elimination constraints (SECs) according to Laporte
(1992) are given by ∑i < j;i;j∈Sxij ≤jSj−1; 3≤jSj≤N−3; ∀S⊆V∖f0; N
−1g. Note that there is an exponential number of SECs.
Additional constraints are summarized as follows.
1. Crop rotation constraints (see Havlin et al., 1990), and constraints
similarly related to soil considerations where speciﬁc soils only
admit speciﬁc crops can be formulated as equality constraints,
δk
l ¼ 0, for prohibited combinations of speciﬁc ﬁeld l and crop k.
2. Diversiﬁcation constraints read ∑l ∈ Lgk
l δk
l ≤ Gk, ∀k ¼ 0, . .. , K � 2,
with gk
l ≥0 denoting weights (for example the hectares-coverage or
required production means for ﬁeld l and crop k) and Gk ≥ 0 the cor-
responding crop-related bounds. Crop indexed by k = K − 1 is left
unconstrained for feasibility. In general, when combining both hard
and inequality constraints without additional precaution, feasibility
of the resulting IP cannot be guaranteed. Infeasibility results if
these constraints enforce ∑k ∈ Kδk
l ¼ 0.
3. Time
constraints
can
be
formulated
as
∑d ∈ D∑ j ∈ Lhk
djxk
dj þ ∑i < jhk
ijxk
ij ≤ Tk
win � ∑l ∈ LTharv,k
l
δk
l , k ∈ K,
where, for generality, the multi-depot case is assumed, and where hk
dj
and hk
ij may denote travel time along corresponding edges, Twin
k
the
length of the harvesting window for each crop k (e.g., multiple
days), and Tharv,k
l
the required harvesting time (e.g., inversely propor-
tional to the number of used harvesters) per ﬁeld l and crop k. In
practice, optimal harvesting time windows may be very short due
to weather constraints.
4. To account for a priori experience about different sequences in ripe-
ness of ﬁelds, priority constraints can be formulated. For example, re-
lating to uncertainties, the sequence in which ﬁelds of the same crop
ripe may vary, e.g., due to hillsides and varying soil. W.l.o.g., consider
a statement such as “if ﬁelds a and b are among the ones assigned to
crop k, then the corresponding sequence for harvest shall be in order
such that a is harvested immediately after b”. This can be modeled as
nonlinear constraint xk
ba ¼ δk
bδk
a, and can therefore be translated to
linear inequalities by means of Eq. (3). Note that an asymmetric for-
mulation has to be employed for all connections between vertices for
which priorities are deﬁned. For above example, we therefore re-
quire, e.g., xk
ba≠xk
ab.
3.2.3. Two concrete IP formulations
The two most relevant IP formulations, IP-3 and IP-4, are stated.
These are most relevant since they can be simpliﬁed to all six remaining
IPs. For IP-1, D = 1 is enforced in IP-3. For IP-2 cost coefﬁcients from IP-1
must be adapted. For IP-5 until IP-8, the inclusion of all K crops is
enforced. Accordingly, their counterparts IP-1 until IP-4 simplify.
For IP-3 the following is proposed:
min
∑
d ∈ D
∑
k ∈ K
∑
j ∈ L
ck
djxk
dj þ ∑
k ∈ K
∑
i < j
ck
ijxk
ij � ∑
l ∈ L
∑
k ∈ K
rk
l δk
l þ ∑
d ∈ D
zdξd
þ mγ
ð5aÞ
s:t: ∑
d ∈ D
xk
dl þ ∑
i < l
xk
il þ ∑
l < j
xk
lj ¼ 2δk
l , ∀l ∈ L, ∀k ∈ K,
ð5bÞ
∑
k ∈ K
δk
l ¼ 1, ∀l ∈ L,
ð5cÞ
∑
k ∈ K
∑
j ∈ L
xk
dj ¼ 2pd, ∀d ∈ D,
ð5dÞ
∑
d ∈ D
ξd ¼ 1,
ð5eÞ
ξd ≤ pd ≤ Kξd, ∀d ∈ D,
ð5fÞ
pd ≤ γ � ð1 � ξdÞ, ∀d ∈ D,
ð5gÞ
pd≥γ � Kð1 � ξdÞ, ∀d ∈ D,
ð5hÞ
∑
i, j ∈ Sk, i < j
xk
ij ≤ Sk
���
��� � 1, Sk⊆V∖ d
f g, 3 ≤ Sk
���
��� ≤ N � 1, ∀k ∈ K,
∀d ∈ D,
ð5iÞ
with decision variables
xk
dj ∈ f0, 1, 2g,
∀d ∈ D, ∀j ∈ L,
∀k ∈ K,
ð6aÞ
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
102
xk
ij ∈ f0, 1g,
0 ≤ i < j, ∀k ∈ K,
ð6bÞ
δk
l ∈ f0, 1g,
∀l ∈ L, ∀k ∈ K,
ð6cÞ
1 ≤ γ ≤ K,
ð6dÞ
ξd ∈ f0, 1g,
∀d ∈ D,
ð6eÞ
pd ∈ f0, 1, . .. , Kg,
∀d ∈ D,
ð6fÞ
Thus, IP-3 has Nz ¼ KDL þ K∑
L � 2
q¼0 L � 1 � q þ KL þ 1 þ 2D integer
decision variables. It differs from IP-1 by D > 1. Therefore, the decision
about starting from the optimal depot w.r.t. the given cost criterion is
modeled as constraints
∑
k ∈ K
∑
j ∈ L
xk
dj ¼ 2γξd, ∀d ∈ D,
ð7Þ
with xk
dj ∈ f0, 1, 2g, ξd ∈{0,1}, 1 ≤ γ ≤ K and ∑d ∈ Dξd ¼ 1. Since Eq. (7) is
nonlinear, auxiliary variables pd ¼ γξd, ∀d ∈ D are introduced. Then,
Eq. (7) can be translated to linear inequality constraints (5f), (5g) and
(5h) following Eq. (4). Finally, note that from Eq. (5e) and the deﬁnition
of pd, the number of decision variables can be reduced by γ when
substituting γ ¼ ∑d ∈ Dpd in Eq. (5).
For IP-4 the following is proposed:
min
∑
d ∈ D
∑
k ∈ K
∑
j ∈ L
ck,kmin
dj
vk
dj þ ck
djxk
dj � ck
djvk
djþ
∑
k ∈ K
∑
i < j
ck
ijxk
ij � ∑
l ∈ L
∑
k ∈ K
rk
l δk
l þ ∑
d ∈ D
zdξd
∑
d ∈ D
∑
k ∈ K
∑
j ∈ L
ck,kmax
jd
wk
jd þ ck
jdxk
jd � ck
jdwk
jd þ mγ
ð8aÞ
s:t: ∑
d ∈ D
xk
dl þ ∑
i < l
xk
il þ ∑
l < j
xk
lj þ ∑
d ∈ D
xk
ld ¼ 2δk
l , ∀l ∈ L, ∀k ∈ K,
ð8bÞ
∑
k ∈ K
δk
l ¼ 1, ∀l ∈ L,
ð8cÞ
∑
k ∈ K
∑
j ∈ L
xk
dj þ xk
jd ¼ 2pd,
∀d ∈ D,
ð8dÞ
∑
d ∈ D
ξd ¼ 1, ∑
k ∈ K
~ak ¼ 1, ∑
k ∈ K
~β
k ¼ 1,
ð8eÞ
~α0 ¼ α0, ~β
K � 1 ¼ αK � 1,
ð8fÞ
∑
d ∈ D
∑
j ∈ L
∑
k ∈ K
vk
dj ¼ 1, ∑
d ∈ D
∑
j ∈ L
∑
k ∈ K
wk
jd ¼ 1
ð8gÞ
∑
j ∈ L
xk
dj ¼ ξd, ∀d ∈ D, ∀k ∈ K,
ð8hÞ
∑
j ∈ L
xk
jd ¼ ξd, ∀d ∈ D, ∀k ∈ K,
ð8iÞ
ξd ≤ pd ≤ K, ∀d ∈ D,
ð8jÞ
pd ≤ γ � ð1 � ξdÞ, ∀d ∈ D,
ð8kÞ
pd≥γ � Kð1 � ξdÞ, ∀d ∈ D,
ð8lÞ
1 � ∑
l ∈ L
δk
l ≤ 1 � αk, ∀k ∈ K,
ð8mÞ
1 � ∑
l ∈ L
δk
l ≥ϵ þ ð � L þ 1 � ϵÞαk, ∀k ∈ K,
ð8nÞ
αk þ ð1 � ∑
k � 1
τ¼0
~ατÞ � ~αk ≤ 1, ∀k ¼ 1, . . . , K � 1,
ð8oÞ
~αk ≤ αk, ~αk ≤ 1 � ∑k � 1
τ¼0
~ατ, ∀k ¼ 1, .. . , K � 1:
ð8pÞ
αK � 2 � k þ
1 � ∑
1þk
τ¼1 ~β
K � 2 � kþτ
�
�
� ~β
K � 2 � k ≤ 1,
∀k
¼ 0, . . . , K � 2,
ð8qÞ
~β
K � 2 � k ≤ αK � 2 � k, ∀k ¼ 0, . .. , K � 2,
ð8rÞ
~β
K � 2 � k ≤ 1 � ∑
1þk
τ¼1 ~β
K � 2 � kþτ, ∀k ¼ 0, . . . , K � 2,
ð8sÞ
~αk þ xk
dj � vk
dj ≤ 1, vk
dj ≤ ~αk, vk
dj ≤ xk
dj, ∀d ∈ D, ∀j ∈ L, ∀k ∈ K,
ð8tÞ
~β
k þ xk
jd � wk
jd ≤ 1, wk
jd ≤ ~β
k, wk
jd ≤ xk
jd, ∀d ∈ D, ∀j ∈ L, ∀k ∈ K,
ð8uÞ
∑
i, j ∈ Sk,
i < j
xk
ij ≤ Sk
���
��� � 1, Sk⊆V∖ d
f g, 3 ≤ Sk
���
��� ≤ N � 1, ∀k ∈ K,
∀d ∈ D,
ð8vÞ
with decision variables
xk
dj ∈ f0, 1g, ∀d ∈ D, ∀j ∈ L, ∀k ∈ K,
ð9aÞ
xk
ij ∈ f0, 1g, 0 ≤ i < j, ∀k ∈ K,
ð9bÞ
δk
l ∈ f0, 1g, ∀l ∈ L, ∀k ∈ K,
ð9cÞ
1 ≤ γ ≤ K,
ð9dÞ
ξd ∈ f0, 1g, ∀d ∈ D,
ð9eÞ
pd ∈ f0, 1, . .. , Kg, ∀d ∈ D,
ð9fÞ
αk, ~αk, ~β
k ∈ f0, 1g, ∀k ∈ K,
ð9gÞ
vk
dj, wk
jd ∈ f0, 1g, ∀d ∈ D, ∀j ∈ L, ∀k ∈ K,
ð9hÞ
xk
jd ∈ f0, 1g, ∀d ∈ D, ∀j ∈ L,
∀k ∈ K:
ð9iÞ
For the formulation of crop- and depot-dependent cost coefﬁcients, the
minimum and maximum active crop-indices need to be identiﬁed. Let
therefore αk ∈{0,1} indicate if crop k is active in the sense of αk = 1 if
∑l ∈ Lδk
l ≥1. By Eq. (2), this translates to Eqs. (8m) and (8n). We intro-
duced auxiliary variables ~αk, ~β
k ∈ f0, 1g indicating if crop k is the
smallest- or largest-indexed active crop, respectively (k ¼ kmin and
k ¼ kmax). It holds that ∑k ∈ K ~αk ¼ 1 and ∑k ∈ K ~β
k ¼ 1. We then de-
rive
the
nonlinear
relations
~α0 ¼ α0,
~α1 ¼ α1ð1 � ~α0Þ,
~α2 ¼ α2ð1 � ~α1 � ~α0Þ, …, which can be translated to
~α0 ¼ α0,
ð10aÞ
αk þ ð1 � ∑
k � 1
τ¼0
~ατÞ � ~αk ≤ 1, ∀k ¼ 1, . .. , K � 1,
ð10bÞ
~αk ≤ αk, ~αk ≤ 1 � ∑k � 1
τ¼0
~ατ, ∀k ¼ 1, . . . , K � 1:
ð10cÞ
Similarly, starting the iteration from highest k = K − 1 with
~β
K � 1 ¼ αK � 1, we can derive nonlinear relations for ~β
k to ultimately
obtain Eqs. (8q), (8r) and (8s). Suppose the path-dependent part of the
cost
function
taking
the
nonlinear
form
∑d ∈ D∑k ∈ K∑ j ∈ L ck,kmin
dj
~αk þ ck
djð1 � ~αkÞ
�
�
xk
djþ-
∑d ∈ D∑k ∈ K∑ j ∈ L ck,kmax
jd
~β
k þ ck
jdð1 � ~β
kÞ
�
�
xk
jd, with ck,kmin
dj
≥0 and
further ck,kmax
jd
≥0 denoting cost-coefﬁcients that are distinct for the ﬁrst
(i.e., k ¼ kmin or ~αk ¼ 1) and last (i.e., k ¼ kmax or ~β
k ¼ 1) crop-route, re-
spectively. Then, auxiliary variables vk
dj ∈ f0, 1g and wk
jd ∈ f0, 1g need
to
be
introduced
with
∑d ∈ D∑ j ∈ L∑k ∈ Kvk
dj ¼ 1
and
∑d ∈ D∑ j ∈ L∑k ∈ Kwk
jd ¼ 1 . They are related according to vk
dj ¼
~αkxk
dj and wk
jd ¼ ~β
kxk
jd, ∀d ∈ D, j ∈ L, k ∈ K, and can be translated to in-
teger linear inequalities according to Eq. (3). The objective function part
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
103
above can now be expressed linearly dependent on decision variables,
see Eq. (8a).
. Main algorithm
The main algorithm of this paper is summarized as follows:
Algorithm 1. CApR-n
The name is derived from its purpose: Crop Assignment plus Routing
(CApR). See Fig. 2 for visualization. The reversing of a list or sequence
of elements is denoted by the ﬂip(⋅)-operator. The monetary proﬁt is
denoted by JCApR−n and is always composed of all of (a) revenues from
growing crops, (b) accumulated edge costs, (c) relevant depot mainte-
nance costs and (d) ﬁxed crop costs. Thus, a large JCApR−n is beneﬁcial.
For clariﬁcation, for ~k ¼ L the proﬁt JCApR−n is equal to the negative ob-
jective value of IP-n, JIP−n, when all of (a) to (d) are accounted for. Anal-
ysis is provided next.
. Analysis and discussion of the main algorithm
Several comments are made. First, clustering Step 2 is introduced to
upscale the number of ﬁelds that can be handled for the coupling of crop
assignment and routing. This is relevant if the available combination of
computational power and IP-solver is prohibiting to solve a large-scale
IP-n with many ﬁelds. However, it is here explicitly emphasized that
clustering induces suboptimality in the solution. This aspect is
exemplatorily quantiﬁed in Experiment 2 of Section 5.3.2, and further
discussed in the outlook of the conclusion in Section 6. Note that the
clustering Step 2 does not necessarily have to be conducted according
to spatial proximity of ﬁelds. Fields can be clustered arbitrarily. Also, sin-
gle ﬁelds can be assigned to a single cluster for special analysis. Cluster-
ing Step 2 entails Step 4, which solves multiple instances of a TSP with
different start and end vertex and thus generates routes within clusters
of ﬁelds planting the same crop. Therefore, omitting superscript k for
brevity, the general IP is
min ∑
i < j
cijxij
ð11aÞ
s:t:∑
N � 2
j¼1
x0j ¼ 1, ∑
N � 2
j¼1
x jN � 1 ¼ 1,
ð11bÞ
∑
i < l
xil þ ∑
l < j
xlj ¼ 2, l ¼ 1, . . . , N � 2,
ð11cÞ
∑
i, j ∈ S
i
<
j
xij ≤ jSj � 1, ∀S⊆V∖f0, N � 1g, 3 ≤ jSj ≤ N � 3,
ð11dÞ
xij ∈ f0, 1g, 0 ≤ i < j, j ¼ 1, . .. , N � 1,
ð11eÞ
where vertex-indices 0 and N − 1 are deﬁned as the start and end ver-
tex of the traveling salesman tour (TSP) connecting the N vertices of a
given cluster, respectively. See Step 4 of CApR-n for its application and
the speciﬁc method for the selection of start and end vertices. See also
Fig. 2 for further visualization. Constraints (11b) and (11c) indicate that
start and end vertex are incident to one edge, and all other vertices inci-
dent to two, respectively. Under the assumption of symmetry, the
subtour elimination constraints (SECs) according to Laporte (1992) are
given by Eq. (11d).
Second and importantly, note that if the number of clusters is equal
to the number of ﬁelds, i.e., ~k ¼ L, the algorithm is reduced to the IP-
formulations of Step 3. Then, CApR-n is equivalent to IP-n, and JCApR−n
= JIP−n.
Remark 1. It is stressed that for ~k < L, because of the clustering Step
2, there can be examples constructed in which a hierarchical method
that (a) ﬁrst solves an assignment problem without accounting for any
spatial ﬁeld-proximity, before (b) then computing crop-tours can be
more cost-efﬁcient than a corresponding CApR-solution. However, this
cannot occur for ~k ¼ L. This is since the hierarchical solution is a feasible
solution of the method coupling crop assignment and vehicle routing.
Therefore, in practice, to optimize the monetary result the number of
clusters must always be increased as much as computational power
and available IP-solver permit, ideally, until ~k ¼ L.
For completeness, a basic IP for pure crop assignment to ﬁelds with-
out accounting for any ﬁeld-connectivity information is minf−∑l∈L
∑k∈Krk
l δk
l : ∑k∈Kδk
l ¼ 1; ∀l∈L; δk
l ∈f0; 1g; ∀l∈L; ∀k∈Kg. Under the ad-
ditional assumption of ﬁeld-uniform rk
l ¼ rk, ∀l ∈ L, its optimal solution
always assigns the most proﬁtable crop indexed by k★ ¼ argmaxk ∈ Krk
to all ﬁelds. Furthermore, when including both crop rotation and diver-
siﬁcation constraints, and introducing the relaxation ∑k ∈ Kδk
l ≤ 1, fea-
sibility of the assignment IP is always guaranteed. This is since these
constraints can always be satisﬁed by δk
l ¼ 0. Moreover, note that the so-
lution of the LP-relaxation of the assignment IP, and also including crop
rotation constraints, is integer feasible, and thus solves these problems as
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
104
well. The proof is omitted for brevity, but it follows from the integrality
property of the LP-relaxation of the assignment IP, see Schrijver (1998)
and Heller and Tompkins (1956). Consequently, very large instances
(with many ﬁelds and crops) of the assignment OP can easily be solved.
As a remark, the aforementioned inequality relaxation does not affect
the integrality property. This is since slack variables sl can be
introduced such that ∑k ∈ Kδk
l þ sl ¼ 1, sl ∈ f0, 1g, ∀l ∈ L. In contrast,
by adding diversiﬁcation constraints, in general, the LP-relaxation is
rendered to not be integer feasible anymore.
Third, the relations between different IP-n are discussed.
Proposition 2. It always holds JIP−3 ≥ JIP−2.
Proof. The proof is by contradiction. Assume JIP−2 > JIP−3. JIP−2 and JIP
−3 differ by cost coefﬁcients ck
dj ¼ ck,kmin
dj
, ∀k ∈ K and ck
dj in Eq. (1b), re-
spectively. By linearity of JIP−2 and the deﬁnition of ck,kmin
dj
according to
Eq. (1c), and by nonnegativity of ~ck
~dj, JIP−2 can always be increased by
concentrating all harvesters, ∑~d ∈ DNharv,k
~d
, to the most cost-efﬁcient
depot. This is the IP-3 solution and therefore contradicts our assump-
tion. The equality-part is because a special case of IP-2 is that none har-
vesters are initially located at any of the depots except the optimal one
according to IP-3.□
It also always holds that JIP−3 ≥ JIP−1. This is since the latter single
depot case is a feasible solution of the former multiple depot case. Gen-
eralizing statements regarding JIP−1 versus JIP−2, and likewise for JIP−3
vs. JIP−4 cannot be made. This is because it is always possible to create
counterexamples in favor of one or another solution. However, it always
holds that JIP−n ≥ JIP−(n+4),∀n = 1,…,4. This is since the method of
enforcing all crops as for IP − (n + 4) is always a feasible solution of
IP-n.
Fourth, the relations between various JIP−n,∀n = 1,…,8, as discussed
before, can in general not be translated to the corresponding CApR-n so-
lutions for ~k < L. This is because of the clustering-heuristic in CApR-n.
For instance, JCApR−3 ≥ JCApR−2 can in general not be guaranteed.
Fifth, it is elaborated on Step 4 of CApR-n. Under the absence of pri-
ority constraints, there exist two directions in which to traverse any
crop-tour. The traversal direction affects the closest ﬁelds between
any pair of consecutive clusters. Consequently, the TSP-solution for
each cluster, and thereby ultimately the total path length of the crop-
tour, is affected, too. This motivated to test both cluster-sequences as in-
dicated in Step 4. As stated, CApR-n does not account for priority con-
straints, i.e., for a priori modeling of ﬁeld ripeness sequences.
Therefore, Step 2 and 4 require modiﬁcation and clustering must be
conducted according to an objective accounting for ripeness level. As a
consequence, the traversal direction for Step 4 would also be ﬁxed.
Sixth, the result of CApR-n could be further reﬁned by including an
additional step (before Step 5) for heuristic local searches that
iteratively tests and exchanges ﬁeld-pairs within a crop-tour sequence
if it improves the JCApR−n-result. Alternatively, local ﬁeld sequences
could here also be exchanged manually according to heuristic prefer-
ences of the farm operator.
. Extensions
. Financial considerations regarding leasing
For leasing considerations, the partial service of a subset of ﬁelds is of
interest. Let subset ~L⊆Ldenote all ﬁelds for which we do not necessarily
want to enforce ﬁeld service but contemplate leasing options. Then, for
IP-3, we maintain equality constraints (5b) and (5c) only for L∖~L, and
deﬁne
relaxed
inequalities
∑d ∈ Dxk
dl þ ∑i < lxk
il þ
∑l < jxk
lj ≤ 2δk
l , ∀l ∈ ~L, ∀k ∈ K and ∑k ∈ Kδk
l ≤ 1, ∀l ∈ ~L. We similarly
relax corresponding constraints for all other IP-n. Any CApR-n including
such constraints, shall be denoted as the relaxed CApR-n. In constrast,
the original problem according to Section 3.3 is referred to as the stan-
dard CApR-n.
An important ﬁnancial consideration for every farm is to decide
upon either servicing or renting out of one's ﬁelds, and additionally the
decision upon taking of leases on additional ﬁelds for coverage. Let us
denote the sets of corresponding ﬁelds by ℒown (farmer's own ﬁelds),
ℒpro ⊆ℒown (potential rent outs) and ℒptl (potential ﬁelds for taking
leases upon), respectively. Then, the following algorithm provides
guidelines for decision making:
Fig. 2. Illustration of Steps 1 to 4 of CApR-n. (Plot 1) Three depots (D0, D1 and D2) and 50 ﬁelds are visualized by the black and green balls, respectively. (Plot 2) The ﬁelds are assigned to
~k ¼ 10 clusters (C0,…,C9). All ﬁelds belonging to the same cluster are colored correspondingly. The cross-signs indicate the ~k centroids and are labeled accordingly. (Plot 3) Results of IP-7
applied to the ~k centroids. (Plot 4) Results of CApR-7. For visualization, the ﬁelds are colored according to the clustering result. Labels k = 0, k = 1 and k = 2 indicate the ﬁrst edge traversal
of each crop-tour, whereby a crop-tour denotes the harvesting routes associated with a speciﬁc crop k.
Main nomenclatureD
Set of D depots, indexed by d, i, j ∈ D.
ℒ
Set of L ﬁelds, indexed by l,i,j ∈ℒ.
K
Set of K crops, indexed by k ∈ K.
xk
ij
Decision variable for edge (i,j) and crop k.
δk
l
Decision variable for vertex l and crop k.
ξd
Decision variable for depot d.
γ
Decision variable for the nr. of active crops.
~ck
ij
Cost per harvester for arc (i,j) and crop k.
ck
ij
Cost for arc (i,j) and crop k.
rk
l
Monetary return for crop k on ﬁeld l.
zd
Cost coefﬁcient for active depot d.
m
Cost coefﬁcient per active crop.
Nharv,k
d
Nr. of harvesters at depot d for crop-tour k.
~k
Parameter for ~k-means clustering.
J
Monetary return (revenue minus costs).
Abbreviations
IP/LP
Integer/linear programming
TSP/mTSP Traveling Salesman Problem/multiple TSP
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
105
Algorithm 2. Renting out and taking leases
It is elaborated on Step 4. Suppose the inclusion of a ﬁeld does not
improve the total ﬁnancial return. This may be because of too expensive
production costs, for example, when ﬁelds are located very distant apart
from depots or due to limited harvesting windows. Then, renting out is
proﬁtable essentially already for any positive return. Let us also discuss
Step 9. In contrast to pure assignment problems, the maximum leasing
rate ΔJ cannot easily be distributed among corresponding ﬁelds. This is
because monetary proﬁts are nonlinearly related to crop returns be-
cause of the coupling with routing decisions. Importantly, the precise
distribution of leasing rates of individual ﬁelds is not relevant as long
as it overall does not surpass ΔJ. Thus, ΔJ provides the farmer with an
upper bound on proﬁtable leasing rates. If ΔJ cannot be attained in nego-
tiations, different ℒptl should be selected and the algorithm solved
again. This is repeated until a corresponding upper bound can be satis-
ﬁed, or, ultimately, ℒown∖ℒro are serviced.
The second ﬁnancial consideration is motivated by the comparison
of monetary returns for CApR-n. It permits to determine “fair” prices
for leasing when sheltering machinery at the various depots. It is
envisioned that all collaborating farmers ﬁrst involve in accurate system
modeling of cost coefﬁcients, before then solving either all of CApR-n,
∀n = 1,…,4, or all of CApR-n, ∀n = 5,…,8. Speciﬁcally, the difference
in objective values between CApR-2 (or CApR-7 for enforcement of all
K crops in the solution) and the remaining CApR-n then permits to de-
termine an upper bound on leasing rates for depot usage.
Finally, even though a detailed discussion is here out of scope, the
importance of a suitable method for sharing of proﬁts is underlined. It
is fundamental for providing incentives for farmers to collaborate and
adopt proposed planning methods. See Andersson et al. (2005) for a dis-
cussion about how farm cooperation can improve both sustainability
and proﬁtability.
. Application in practice
Modeling of parameters listed in Step 1 of CApR-n is largely affecting
the overall result and may be based on historical ﬁeld and crop yield
data. By the selection of ck
ij, computational complexity can be reduced
by pruning speciﬁc undesired ﬁeld connections from a path network,
thereby implicitly also inﬂuencing priority constraints. Large ﬁelds
often have multiple possible ﬁeld entrance and exit points, which may
signiﬁcantly affect inter-ﬁeld travel distances. Therefore, ﬁeld coverage
patterns and in-ﬁeld navigation (see Jensen et al., 2012, Conesa-Muñoz
et al., 2016b, Plessen, 2018, Plessen, 2019) could also be co-planned to
account for crop-tours efﬁciently linking ﬁelds that plant the same
crops. This may be subject of future work.
. Numerical simulations
This section summarizes the experimental data setup, the methods
used to solve proposed IPs, and ﬁnally some numerical simulation re-
sults.
. Experiment data setup
For numerical simulations one data set is composed of 10 different
random instances. In Section 5.3 the mean evaluation results are re-
ported for these instances. Problem data is generated synthetically
based on realistic parameter settings from farming in Northern
Germany. The data generation for each instance is as follows. The num-
ber of available depots, crops and ﬁelds is set as D = 3, K = 3 and L = 50,
respectively. Field and depot locations are generated randomly accord-
ing to a Gaussian distribution centered at the origin with standard devi-
ations σd = 10km, ∀d ∈ D, and σl = 15km, ∀l ∈ℒ. To each depot, we
randomly
assign
a
number
of
harvesters
according
Nharv,k
d
¼
maxð1, ⌊5ud⌋Þ, ud∼Uð0, 1Þ, ∀d ∈ D, where Uð0, 1Þ denotes the Uniform
distribution with zero mean and unit variance, and ⌊ ⋅ ⌋ denotes
rounding to the next smallest integer. Normalized traveling costs per
harvester and km are set uniformly (for all inter-depot and inter-ﬁeld
distances) as ~c ¼ 30 km. A cost of m = 1000€for every planted crop is as-
sumed. Maintenance costs are assumed to be identical for all depots.
Therefore, w.l.o.g. zd ¼ 0, ∀d ∈ D is set. Realistic normalised monetary
returns in €per ha and crop are determined as mean values from inter-
mediate soil qualities and crop yields in Northern Germany. These are
summarized in Table 1. Two options were considered for monetary re-
turn per ﬁeld and crop. First, ﬁeld sizes were generated according to
sl ¼ maxð20 þ 10ud, 1Þ, ud∼N ð0, 1Þ, ∀l ∈ L, where N ð0, 1Þ denotes the
Gaussian distribution with zero mean and unit variance. In combination
with L = 50 this results approximately in a total coverage size of 1000
ha. According to the survey by Statistisches Bundesamt Deutschland
(2016), in all of Germany there are 299,134 farming businesses of
which only 1502 have a size of more than 1000 ha. Field sizes were
then multiplied with ~rk
according to Table 1, to yield rk
l ¼
sl~rk, ∀l ∈ L, k ∈ K. This method of data generation is intuitive. However,
since normalised monetary return is considerably higher for wheat in
contrast to barley and rapeseed, the application of CApR-n typically as-
signs wheat to all ﬁelds, unless crop rotation constraints, or diversiﬁca-
tion constraints, as in CApR-n for n = 5,…,8, are included. Thus, in the
latter cases, the crop with smallest monetary return is assigned to the
cluster with smallest ﬁeld area, and the crop with second-smallest re-
turn to the second-smallest area and so forth. In a second setting, and
to add more variety, monetary returns per ﬁeld and crop were therefore
generated
differently
according
to
rk
l ¼ maxð20 þ
10uk
l , 1Þ~rk, ∀l ∈ L, k ∈ K, with uk
l ∼N ð0, 1Þ. Throughout Section 5.3, the
second setting is used for data generation.
. Solution of integer programs
For the solution of IPs in CApR-n, three open-source IP-solver candi-
dates were considered: CBC (Forrest, 2012), GLPK_MI (Makhorin,
2008), and ECOS_BB (Domahidi et al., 2013). All of these solvers were
called through the domain-speciﬁc language CVXPY for optimization
embedded in Python (Diamond and Boyd, 2016). All numerical experi-
ments were conducted on a laptop running Ubuntu 16.04 equipped
with an Intel Core i7 CPU @2.80GHz×8 and 15.6 GB of memory. For
the present applications and in preliminary tests (e.g., stochastic exper-
iments for L = 50 and various ~k ), the GLPK_MI consistently
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
106
outperformed the other two considered IP-solvers. Therefore, it was
used for all numerical experiments of Section 5.3. For clariﬁcation, the
focus of this paper was on problem modeling for a broad variety of set-
tings typical in an agricultural context. The scope of this paper is not
discussing or applying the most efﬁcient (commercial) problem solver.
A remark to incorporating SECs in Integer Program is made. The pro-
posed optimization problems include an exponential number of SECs
(see also Laporte, 1992 for a general discussion). Therefore, in this
paper SECs are approached in form of separation algorithms according
to Pataki (2003). Thus, SECs are added sequentially as they are needed.
For instance, with regard of Eq. (11), it is ﬁrst solved without Eq. (11d).
Then, if the result does not return any subtour, the optimal solution has
been found. Otherwise, all detected subtours are added to Eq. (11) as
SECs, and the IP is solved again. This is repeated until a solution without
subtours is found (the optimal solution), or a maximal number of SEC-
iterations is reached.
The sequential inclusion of SECs as they are needed offers the advan-
tage of simplicity. Furthermore and importantly, as will be shown em-
pirically in Section 5.3, for the preferred IP-settings and ~k ¼ 10very few
(low single digit) SEC-iterations were required to ﬁnd an integer solu-
tion without subtours, which thus also implies efﬁciency. Nevertheless,
it is here clariﬁed that it may not be the most efﬁcient method to handle
SECs. This is further discussed in the outlook of Section 6, including sug-
gestion of future work.
. Experimental results
This section is partitioned into two parts. First, all proposed methods
CApR-n for n = 1,…,8 are compared in experiments according to
Section 5.1 for two different numbers of ﬁeld-clusters. Second, the im-
provement potential of solving CApR-problems without any clustering
is illustrated, i.e., for ~k ¼ L.
Evaluation criteria are averaged over 10 simulation experiments,
and indicated by �y for a criterion y. The percentage out of the 10 simu-
lation experiments for which an IP-n solution could be found in less
than 200 SEC-iterations is denoted by Pconv
IP−n. The average number of
decision variables, SEC-iterations plus the initial IP-iteration without
SECs, number of equality constraints, inequality constraints when ﬁrst
omitting SECs and for the ﬁnal SEC-iteration (before convergence) are
denoted by NIP � n
z
,
�N
IP � n
iterSECþ , Neq
,IP−n, Nineq,NoSEC
IP−n
and
�N
IP � n
ineq;finalIP ,
respectively. Average accumulated CPU-time for the solution of all
SEC-iterations and all TSP-problems are �T IP � n
CPU
and �T TSPs
CPU , respectively.
The average number of required SEC-iterations for the solution of all
TSPs (which includes all SEC-iterations plus the initial IP-solution with-
out SECs) is denoted by �N
TSPs
iterSECþ.
. Experiment 1
The results of Experiment 1 are summarized in Table 2. For ~k ¼ 20,
�JCApR � 1 and �JCApR � 2 are not reported in the comparison since only
90% and 30% of experiments could be solved within 200 SEC-
iterations. Several remarks can be made. First, it is noted how quickly
computational complexity rises with increasing ~k . For example,
�T IP � 1
CPU
¼ 0:07s for ~k ¼ 10, but �T IP � 1
CPU
¼ 63:09s for ~k ¼ 20. Second, ﬁxing
the number of serviced crops as done for CApR-n,n = 5,…,8, notably re-
duces CPU-time; compare �T IP � n
CPU
vs. �T IP � ðnþ4Þ
CPU
for n = 1,…,4 and ~k ¼ 20
. Similarly, the average number of SEC-iterations �N
IP � n
iterSECþ is affected. For
every additional SEC-iteration, an additional IP with an increased num-
ber of SECs has to be solved. Third, for ~k ¼ 20CApR-2 had difﬁculties in
ﬁnding a solution within 200 SEC-iterations, see Pconv
IP−2. The intuitive
explanation is that the optimal solution when optimizing over any
subset of K crops in combination with characteristic cost coefﬁcient
(1c) is very sensitive to newly added SECs and accordingly quickly
changes, which explains the many SEC-iterations, often exceeding the
200 SEC-iteration bound. Fourth, for ~k ¼ 10 on average only 1 SEC-
iteration was required for CAPR-8 (recall that �T IP � n
CPU
and �N
IP � n
iterSECþ count
all IPs including the initial one without any SECs). Thus, for (a) small ~k
(such as ~k ¼ 10 ) and (b) n = 5,…,8 the method according to
Section 5.2 adding SECs as they are needed appears appropriate. Fifth,
proﬁt �JCApR � n increases with ~k. This concept is further emphasized in
the next Experiment 2.
. Experiment 2
The purpose of Experiment 2 is to illustrate the beneﬁt on proﬁt
when solving for ~k ¼ L, i.e., dismissing the heuristic clustering-step.
For brevity, results are reported only for CApR-5. However, they are by
trend comparable for all other 7 methods. In contrast to Experiment 1
with L = 50, the results for IP-5 are summarized in Table 3 for L = 40
(due to an exploding computational complexity). For ~k ¼ 40 there are
2580 integer variables and 2580 inequality constraints even without in-
corporation of any SECs. Note that for the given experiment with the
maximum possible number of clusters ~k ¼ L a notable improvement
of 15.4% over the solution for ~k ¼ 10 could be observed. This underlines
the economic incentive for attempting to solve IPs for ~k ¼ L as stressed
in Remark 1, if this is permitted by the available combination of compu-
tational hardware and IP-solver.
. Conclusion
A ﬂexible framework for the coupling of crop assignment with vehi-
cle routing for harvest planning was presented. This problem is relevant
since the decision about crop assignment must be addressed by every
farm manager at the beginning of every work-cycle starting with plant
seeding and ending with harvesting. The main contribution was the
proposal of 8 different IP formulations. It was found in numerical exper-
iments that the 4 cases with enforced inclusion of any crop out of a set of
crops to be computationally notably more efﬁcient. This enforcement is
applicable in practice since the list of eligible crops typically is very lim-
ited. For large-scale applications where sole IP formulations are not trac-
table anymore, a heuristic algorithm was proposed combining the IP-
formulations with clustering of ﬁelds and the solution of local TSPs.
The focus of this paper was on problem modeling for a broad variety
of settings typical in agriculture. For future work the main task is devel-
opment of an efﬁcient solution method. This is motivated by the fact that
the output of CApR-n remains heuristic and in general suboptimal for all
~k < Ldue to the clustering step. Thus, IP-solution methods must be de-
veloped that enable to solve in reasonable time for ~k ¼ L and for large L,
e.g., L ≈ 100. Therefore, two main approaches are envisioned. First, by
(a) focusing on one speciﬁc IP-formulation (e.g., IP-5 since IP-6 can be
reduced to it and IP-7 can be solved by solving IP-5 for all available de-
pots) the problem formulation can be standardized, before (b) a cus-
tomized IP-solver, e.g., a branch-and-cut algorithm may be developed.
Reformulations of the SECs, for example, in form of MTZ-SECs (Miller
et al., 1960), which introduce additional continuous variables for SECs
and thereby render the problem of mixed integer nature may also be ex-
plored. Alternatively and secondly, optimization by simulation algo-
rithms, e.g., Tabu search heuristics similar to Gendreau et al. (1994),
may be tested to solve the proposed IP-problems.
Table 1
Normalized and averaged monetary returns in Northern Germany that were used in sim-
ulations.
Barley
Rapeseed
Wheat
Unit
k
0
1
2
−
~rk
570
600
750
€/ha
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
107
Declaration of competing interest
The authors declare that they have no known competing ﬁnancial
interests or personal relationships that could have appeared to inﬂu-
ence the work reported in this paper.
References
Ahumada, O., Villalobos, J.R., 2009. Application of planning models in the agri-food supply
chain: a review. Eur. J. Oper. Res. 196, 1–20.
Andersson, H., Larsén, K., Lagerkvist, C.J., Andersson, C., Blad, F., Samuelsson, J., Skargren,
P., 2005. Farm cooperation to improve sustainability. AMBIO:J. Hum. Environ. 34,
383–387.
Basnet, C., Foulds, L.R., Wilson, J., 2006. Scheduling contractors' farm-to-farm crop har-
vesting operations. Int. Trans. Oper. Res. 13, 1–15.
Bektas, T., 2006. The multiple traveling salesman problem: an overview of formulations
and solution procedures. Omega 34, 209–219.
Bochtis, D., Sørensen, C.G., 2009. The vehicle routing problem in ﬁeld logistics part I.
Biosyst. Eng. 104, 447–457.
Conesa-Muñoz, J., Bengochea-Guevara, J.M., Andujar, D., Ribeiro, A., 2016a. Route plan-
ning for agricultural tasks: a general approach for ﬂeets of autonomous vehicles in
site-speciﬁc herbicide applications. Comput. Electron. Agric. 127, 204–220.
Conesa-Muñoz, J., Pajares, G., Ribeiro, A., 2016b. Mix-opt: a new route operator for opti-
mal coverage path planning for a ﬂeet in an agricultural environment. Expert Syst.
Appl. 54, 364–378.
Diamond, S., Boyd, S., 2016. CVXPY: a python-embedded modeling language for convex
optimization. J. Mach. Learn. Res. 17, 1–5.
Domahidi, A., Chu, E., Boyd, S., 2013. ECOS: An SOCP solver for embedded systems. IEEE
European Control Conference, Switzerland: Zurich, pp. 3071–3076.
Ferrer, J.C., Mac Cawley, A., Maturana, S., Toloza, S., Vera, J., 2008. An optimization ap-
proach for scheduling wine grape harvest operations. Int. J. Prod. Econ. 112, 985–999.
Financial Times, 2016. Wheat price falls to lowest level in a decade. https://www.ft.com/
content/75fdb856-6b0c-11e6-ae5b-a7cc5dd5a28c.
Fleming, C.L., Grifﬁs, S.E., Bell, J.E., 2013. The effects of triangle inequality on the vehicle
routing problem. Eur. J. Oper. Res. 224, 1–7.
Forrest, J., 2012. CBC (coin-or branch and cut) open-source mixed integer programming
solver. https://projects.coin-or.org/Cbc Version 2.9.9.
Gendreau, M., Hertz, A., Laporte, G., 1994. A tabu search heuristic for the vehicle routing
problem. Manag. Sci. 40, 1276–1290.
Havlin, J., Kissel, D., Maddux, L., Claassen, M., Long, J., 1990. Crop rotation and tillage ef-
fects on soil organic carbon and nitrogen. Soil Sci. Soc. Am. J. 54, 448–452.
Heller, I., Tompkins, C., 1956. An extension of a theorem of Dantzig's. Linear Inequalities
and Related Systems. 38, pp. 247–254.
Jensen, M.A.F., Bochtis, D., Sørensen, C.G., Blas, M.R., Lykkegaard, K.L., 2012. In-ﬁeld and
inter-ﬁeld path planning for agricultural transport units. Comput. Ind. Eng. 63,
1054–1061.
Kim, S., Lewis, M.E., White, C.C., 2005. Optimal vehicle routing with real-time trafﬁc infor-
mation. IEEE Trans. Intell. Transp. Syst. 6, 178–188.
Laporte, G., 1992. The traveling salesman problem: an overview of exact and approximate
algorithms. Eur. J. Oper. Res. 59, 231–247.
Makhorin, A., 2008. GLPK (GNU linear programming kit). Version 4.64.. https://www.gnu.
org/software/glpk/.
Marques, A.S., Audy, J.F., D’Amours, S., Rönnqvist, M., 2014. Tactical and operational har-
vest planning. The Management of Industrial Forest Plantations. Springer,
pp. 239–267.
Miller, C.E., Tucker, A.W., Zemlin, R.A., 1960. Integer programming formulation of travel-
ing salesman problems. J. ACM 7, 326–329.
Orfanou, A., Busato, P., Bochtis, D., Edwards, G., Pavlou, D., Sørensen, C.G., Berruto, R., 2013.
Scheduling for machinery ﬂeets in biomass multiple-ﬁeld operations. Comput. Elec-
tron. Agric. 94, 12–19.
Pataki, G., 2003. Teaching integer programming formulations using the traveling sales-
man problem. SIAM Rev. 45, 116–123.
Plessen, M.G., 2019. Optimal in-ﬁeld routing for full and partial ﬁeld coverage with arbi-
trary non-convex ﬁelds and multiple obstacle areas. arXiv preprint 1906.04264.
Table 2
Summary of Experiment 1. The results of CApR-n for n = 1,…,8 are compared for two different ~k.
~k ¼ 10
Unit
n = 1
n = 2
n = 3
n = 4
n = 5
n = 6
n = 7
n = 8
�J
CApR � n
€
722,075
718,132
723,664
715,732
715,442
711,435
718,474
715,732
�T
IP � n
CPU
s
0.07
0.59
0.09
0.07
0.03
0.02
0.02
0.02
�N
IP � n
iterSECþ
−
10.10
31.30
9.40
2.00
4.30
3.50
2.80
2.00
NIP � n
z
−
196
196
262
541
195
195
258
348
Neq
IP−n
−
41
41
44
68
43
43
50
68
Nineq,NoSEC
IP−n
−
197
197
275
1112
195
195
258
348
�N
IP � n
ineq;finalIP
−
208.70
232.6
285.6
1113.0
199.0
197.9
260.1
349.0
�T
TSPs
CPU
s
0.03
0.03
0.03
0.03
0.91
0.82
0.03
0.03
�N
TSPs
iterSECþ
−
12.6
13.7
13.5
12.9
16.8
14.2
13.2
12.9
Pconv
IP−n
%
100
100
100
100
100
100
100
100
~k ¼ 20
n = 1
n = 2
n = 3
n = 4
n = 5
n = 6
n = 7
n = 8
�J
CApR � n
€
−
−
748,851
747,230
746,431
742,329
748,379
747,230
�T
IP � n
CPU
s
63.09
220.72
49.24
46.06
0.22
0.14
44.83
8.14
�N
IP � n
iterSECþ
−
73.8
124.0
82.6
24.2
9.0
5.8
24.3
24.2
NIP � n
z
−
691
691
817
1366
690
690
813
993
Neq
IP−n
−
81
81
84
108
83
83
90
108
Nineq,NoSEC
IP−n
−
692
692
830
2477
690
690
813
993
�N
IP � n
ineq;finalIP
−
815.8
918.0
958.1
2504.3
702.1
698.5
855.5
1020.3
�T
TSPs
CPU
s
0.02
0.02
0.02
0.02
0.02
0.02
0.02
0.02
�N
TSPs
iterSECþ
−
14.4
14.3
14.6
14.5
14.6
14.6
14.6
14.5
Pconv
IP−n
%
90
30
100
100
100
100
100
100
Table 3
Summary of Experiment 2 for CApR-5. The improvement potential of solving CApR-5 with-
out any clustering step for ~k ¼ L is illustrated.
CApR-5
Unit
~k ¼ 10
~k ¼ 40
Δrel [%]
�J
CApR � n
€
590,911
681,900
15.4
�T
IP � n
CPU
s
0.01
160.1
1.6e6
�N
IP � n
iterSECþ
−
1.9
39.9
2000
NIP � n
z
−
195
2580
1223
Neq
IP−n
−
43
163
279
Nineq,NoSEC
IP−n
−
195
2580
1223
�N
IP � n
ineq;finalIP
−
196.2
2650.0
1251
�T
TSPs
CPU
s
0.03
0
−100
�N
TSPs
iterSECþ
−
12.20
0
−100
Pconv
IP−n
%
100
100
0
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
108
Plessen, M.M.G., 2018. Partial ﬁeld coverage based on two path planning patterns. Biosyst.
Eng. 171, 16–29.
Schrijver, A., 1998. Theory of Linear and Integer Programming. John Wiley & Sons.
Seyyedhasani, H., Dvorak, J.S., 2017. Using the vehicle routing problem to reduce ﬁeld
completion times with multiple machines. Comput. Electron. Agric. 134, 142–150.
Sørensen, C.G., Bochtis, D.D., 2010. Conceptual model of ﬂeet management in agriculture.
Biosyst. Eng. 105, 41–50.
Statistisches Bundesamt Deutschland, 2016. Land- und Forstwirtschaft. https://www.
destatis.de/DE/Publikationen/StatistischesJahrbuch/LandForstwirtschaft.pdf?blob=
publicationFile.
Toth, P., Vigo, D., 2014. Vehicle Routing: Problems, Methods, and Applications. SIAM.
Williams, H.P., 2013. Model Building in Mathematical Programming. John Wiley & Sons.
M. Graf Plessen
Artiﬁcial Intelligence in Agriculture 2 (2019) 99–109
109
