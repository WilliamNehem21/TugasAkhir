 AASRI Procedia  5 ( 2013 )  77 – 84 
2212-6716 © 2013 The Authors. Published by Elsevier B.V.
Selection and/or peer review under responsibility of American Applied Science Research Institute
doi: 10.1016/j.aasri.2013.10.061 
ScienceDirect
2013 AASRI Conference on Parallel and Distributed Computing Systems 
A Distributed Variable Tap-length Algorithm within Diffusion 
Adaptive Networks 
Leilei Lia*, Jingfeng Fenga, Jianhui Hea, Jonathon A. Chambersb 
aAcademy of Broadcasting Planning in SARFT, No. 2 FuXingMenWai Street Beijing, 10045, China 
b School of Electronic, Electrical & systems Engineering, Loughborough University, Loughborough LE11 3TU, UK  
 
Abstract 
In this work, an adaptive algorithm with variable tap-length is proposed for diffusion networks, where all nodes exchange 
information with their connected group without a fusion center and utilize both exchanged information and their local 
observation to make their individual estimations. Based on a fractional tap-length solution and the fully distributed 
structure of networks, we propose the algorithm to resolve the estimation problems on both tap-length and tap-weights. 
The proposed algorithm with adaptive tap-length structure enables the networks to reduce communication energy and 
network resources. The convergence properties of this algorithm are confirmed by the simulation results. 
 
© 2013 Published by Elsevier B.V.  
Selection and/or peer review under responsibility of American Applied Science Research Institute 
 
Keywords: variable tap-length, distributed algorithms, adaptive filters, diffusion networks; 
1. Background 
As an essential parameter in filter structure, tap-length makes an impact on the performance of an adaptive 
filter. The recent work [1] demonstrates that an adaptive filter with deficient tap-length would makes the 
 
 
*  Corresponding author. Tel.: +8610-86092072; fax: +8610-86092645 . 
E-mail address: lileilei@abp.gov.cn . 
 
Available online at www.sciencedirect.com
© 2013 The Authors. Published by Elsevier B.V.
Selection and/or peer review under responsibility of American Applied Science Research Institute
Open access under CC BY-NC-ND license.
Open access under CC BY-NC-ND license.
78  
 Leilei Li et al. /  AASRI Procedia  5 ( 2013 )  77 – 84 
 
mean-square-error (MSE) deteriorate; in order to avoid this situation, we can select an adequate long tap-
length at the steady-state stage, but it will cause the high calcualtion cost and the high excess mean-square-
error (EMSE). Since the research [2] firstly utilized the variable tap-length to improve the performance of an 
adaptive algorithm, several research articles [3]-[5] on adaptive tap-length algorithms have been presented. 
Compared with the previous algorithms, the fractional tap-length (FT) algorithm presented in [6] achieved a 
robust and improved performance with a low- complexity. In addition, the works [7, 8] also provided the 
analysis for the FT algorithm on the relation between parameter selection and the steady-state performance.  
Within the networks, the tap-length of the adaptive filter at each node is assumed as a fixed value in many 
applications of distributed adaptive algorithms [9, 10]. Nevertheless, when tap-length is unknown or variable  
it gives rise to the tap-length estimation problem for distributed networks. The incremental adaptive algorithm 
with the fractional tap-length solution has been proposed before in the literature [11]. This algorithm is based 
on incremental learning over a distributed network, where a Hamiltonian cycle is built to make all the nodes 
communicate its neighbor at every iteration. The network topology is therefore determined by this type of 
connection. In order to resolve the tap-length estimation problem within networks with fully distributed 
structure, we introduce the fractional tap-length solution. In this type of network, each node not only 
communicates with its neighbors, but also experiences the effect of the entire network. In this paper, the 
fractional solution is utilized in the proposed distributed variable tap-length algorithm to resolve the both tap-
length and tap weights estimation problems in a distributed diffusion network. We provide performance 
analysis for the new algorithm and provide simulation results to confirm its convergence properties. 
The remainder of this work consists of 4 parts. Section 2 provides the estimation problem which motivates 
us to formulate the proposed algorithm. And then, the steady-state performance of this algorithm is analyzed 
in Section 3. Section 4 shows that the simulation is carried out to confirm the analysis. In section 5, we draw 
the conclusions. 
2. Motivation and Formulation 
Assume a network consists of N  nodes, which are distributed over some area. When two nodes can 
exchange information with each other in a direct way, we regard them as connected. Each node can connect to 
itself. All the nodes communicating with node k  are included in the its neighborhood, which is defined as 
k . The total number of neighbors of node k  is denoted by 
k
n . At each instant i , every node k  receives 
the time measurements  
k i
k
i u
d
,
,
of some random process 
k i
k i
,u ,
d
, which have relation to the unknown 
system vector 
o
w  of size 
o
L  as follows: 
i
w
i
k
o
k i
k
v
u
d
,
                                                                                                                                 (1) 
where 
uk,i
 is a 
1
Lo
 regressor  and 
kv i
 is a temporally and spatially white noise sequence, i.e. 
2
v,k
kl ij
l
k
j
i
E
v
v
                                                                                                                              (2) 
where E  is expectation operator and 
 indicates the Kronecker delta. 
The adaptation rules are decouple into the tap weights estimation and tap-length estimation to simplify the 
analysis so that tap weights and tap-length of 
o
w  are calculated respectively. The data are collected from all 
nodes 
N
k
1,...,
 into 
global 
matrices: 
1
   
,...,
col
N
N
1
d
d
d
, 
1
   
,...,
col
N
N
1
v
v
v
, 
Lo
   N
,...,
col
 
N
1
u
u
U
, where col  is used to make its elements in column. Therefore, we can rewrite 
the expression (1) as 
79
 Leilei Li et al. /  AASRI Procedia  5 ( 2013 )  77 – 84 
 
v
U
d
wo
                                                                                                                                               (3) 
where 
Evv*
Rv
 and * is complex conjugate transposition.  
Since the tap-length is unknown, we assume the estimate tap-length w  as 
L i
. In order to seek the 
optimal tap-length 
o
L , we recall the linear minimum mean-square estimation problem [11]: 
2
 and 
min
L i
L i
L i
L i
w
w
E
w
J
w
J
U
d
                                                                                           (4) 
where 
UL i
 is a matrix of size 
L i
N
. Then, the segmented cost function is defined as 
2
M
M
M
w
E
w
J
U
d
, where M  is defined as 
L i
M
1
, 
wM
 and 
UM
is composed of the initial M  
elements/column vectors of the corresponding quantity, respectively, as 
1
                              
1 ,...,
col
M
w M
w
wM
                                                                                   (5) 
M
N
M
M
N
M
                
1:
,...,
1:
col
1
u
u
U
                                                                                  (6) 
We resort to the mean-square errors estimation problem and exploit its minimum difference in order to obtain 
the optimal tap-length 
o
L  
w
J
w
J
L i
L i
| M
min
                                                                                                                 (7) 
where  indicates a small positive value and is predetermined by system requirements. At time instant i , we 
define 
the 
segmented 
mean-square 
error 
and 
the 
mean-square 
error 
respectively 
as, 
 
   and  
1
2
1
1
2
1
i
L i
i
L i
i
L i
i
L i
w
e
w
J
w
e
w
J
, where 
M
L i
 is an integer to avoid the 
suboptimum tap-length during the learning process so that the value of 
 is generally more than one. 
We recall the standard pseudo fractional tap-length implementation for a single adaptive filter as in [6] 
1
2
1
2
1
i
L i
i
L i
f
f
w
e
w
e
i
L
i
L
                                                                                   (8) 
1 ,     otherwise                
1
,    if
i
L
i
L
L i
i
L
L i
f
f
                                                                                                      (9) 
where 
 is small positive value and denotes the leakage parameter utilized to avoid an undesirable large 
value of 
Lf i
,  
 denotes the step-size parameter for updating fractional tap-length 
L f i
. Equation (9) is 
used to calculate the integer estimate 
L i
, 
 denotes rounding the included value to the nearest integer and 
the threshold , a small integer, is generally set as one.  
The distributed concept is introduced for tap-length adaptation at each node k , and we can  rewrite (8) as 
k
l
k f
l k
k f
i
L
b
i
l
1
1
,
,
,
                                                                                                                   (10) 
1
,
2
)1
(
1
,
2
)1
(
,
,
)1
(
( )
k i
i
L
k i
i
L
k
k
k f
k f
w
e
w
e
i
l
i
L
k
k
k
                                                           (11) 
80  
 Leilei Li et al. /  AASRI Procedia  5 ( 2013 )  77 – 84 
 
where 
k  and 
k  indicate the local parameters,  
1
,
i
l
k f
 and 
1
,
i
L
k f
 denote the integrated and local 
fractional tap-length estimates, 
k
lb ,  is local weight coefficient for tap-length combination and the set of 
k
lb ,  
satisfies  
 1
,
k
l
lb k
                                                                                                                      (12) 
and 
Lk i
 is integer estimate tap-length, given by  
,     otherwise                
1
1
,    if
,
,
i
L
i
L
L i
i
L
i
L
k
k
k f
k
k f
k
                                                                                             (13) 
where k  is the local small integer and 
k
k
k i
k
k
k i
k
k i
L i
L i
w
L i
u
i
d
w
e
k
k
1:
1:
1
,
,
, 1
                                                              (14) 
L i
w
L i
u
i
d
w
e
k
k i
k
k i
k
k i
Lk i
1:
1:
1
,
,
, 1
                                                                                  (15) 
We note that equation (10) is a consultation step, where the integrated estimate 
i
l
k, f
 collects the estimates 
i
L
k, f
 from the neighbors of node k  and combines them through the weights 
k
lb , . Equation (11) is a local 
tap-length adaptation step, where the local segmented error 
k,i 1
L i
w
e
k
k
 and local error 
k,i 1
L i
w
e
k
 are 
used to update the local fractional estimate 
i
L
k, f
. Then, we used the distributed adaptation form described 
in [12, 13] to summarize the proposed algorithm below: 
k
l
l i
l k
k i
w
a
1
,
,
, 1
                                                                                                                                     
 1column vector
 a 
 and make 
max
max
1
,
1
.
max
L
size w
L
k i
l i
 
1
,
,
*
,
1
,
,
k i
k i
k
k i
k
k i
k i
u
i
d
u
w
                                                                                                           
k
l
k f
l k
k f
i
L
b
i
l
1
1
,
,
,
                                                                                                                          
 
1
,
2
1
,
2
,
,
1
k i
i
L
k i
i
L
k
k
k f
k f
w
e
w
e
i
l
i
L
k
k
k
                                                                  (16) 
,     otherwise                
1
1
,    if
,
,
i
L
i
L
L i
i
L
i
L
k
k
k f
k
k f
k
                                                                                                 
 1column vector
 a 
make 
,
L i
w
k
k i
 
where the operator size
 is used calculate the length of column vector and the set of local weights 
k
la ,  
satisfies 
k
l k
l
a
 1
,
. The proposed algorithm introduced the combined functions for both tap-length 
estimation and tap-weight estimation in order to take advantage of the communications among nodes. 
81
 Leilei Li et al. /  AASRI Procedia  5 ( 2013 )  77 – 84 
 
3. Steady-state Performance Analysis 
Based on weighted spatial-temporal energy conservation arguments [12], we study the steady-state 
performance of the new algorithm. According to the works [6, 7], the solution of the fractional tap-length 
would be a fixed value in the steady-state. Therefore, we use the assumption that in the steady-state the 
estimate 
w ,k
 with the fixed size L~ to simplify the analysis. Firstly, we introduce the stochastic quantities: 
i
i
i
N
1
d
d
d
,...,
col
, 
i
i
i
N
1
v
v
v
,...,
col
, 
 
,...,
diag
 
1
N,i
,i
i
u
u
U
and 
N i
i
i
,
,1 ,...,
col
.             
Using (1), we obtain 
i
o
c
i
i
w
v
U
d
   with 
o
o
c
Xw
w
 and 
L
L
I
I
X
col ~,..., ~
 of size 
L
NL
~
~
                                                (17) 
Then, we can obtain a more compact state-space form of 
i
w : 
1
*
1
i
i
i
i
i
i
Q
C
Q
w
U
d
U
 with 
IL
A
Q
~  
NL
NL
~
~
,
L
N
L
I
I
C
~
1 ~
,...,
diag
 
NL
NL
~
~
    (18) 
where the 
N
N
 diffusion combination matrix A  consists of the elements 
la ,k
. The  
 operator is used to 
represent Kronecker products. Then, we introduce the weight error vector 
i
*
i
i
i
*
i
NL
i
o
c
i
C
Q
C
I
U v
w
U U
w
w
w
1
~
~
~
                                                                                        (19) 
When we perform weighted energy balance on both sides and take expectation with the assumption that the 
regression data are temporally and spatially independent, we get the following variance relation: 
i
*
i
i
*
i
i
i
C C
E
E
E
U v
v U
w
w
2
2
'
~
~
                                                                                                       (20) 
Q
C C
Q E
C Q
Q E
Q
C E
Q
Q
Q
i
*
i
i
*
i
i
*
i
i
*
i
U U
U U
U U
U U
*
*
*
*
'
                                         (21) 
For regressors from Gaussian data, we introduce the eigendecomposition 
T T*
Ru
 with 
N
,...,
diag
1
 and define the transformed quantities:  
i
i
T w
w
* ~
, 
iT
i
U
U
,  
TQT*
Q
, 
T T*
and 
*
'
'
T T
.                                                                     
Then we can rewrite the variance relations (20)-(21) and transform them to 
b
E
E
T
i
i
2
2
'
w
w
                                                                                                                          (22) 
C P
C
I
C
C
I
I
Q
Q
F
NL
NL
N L
T
~
~
~
*
2 2
                                                            (23) 
where the 
 operator is used for  the block Kronecker product and 
bvec
 ,
,...,
diag
1
P
P
P
N
                                                                                                              (24) 
82  
 Leilei Li et al. /  AASRI Procedia  5 ( 2013 )  77 – 84 
 
with 
l
N
l
l
T
l l
l
lP
,...,
,...,
diag
1
 where 
1 for complex data and 
2  for real data.  
We select the weighting matrix 
 and define the following spatial filtering matrices 
k L
N
L
L
k
q k
I
S
~
~
1 ~
,
0,
,
diag 0
 and 
k L
N
k
L
k
k
S
~
1 ~
,
0,
,
diag 0
                                                          
where 
l0  denotes a  
l
l
 matrix with zero elements. We note that at each node k , the mean-square 
performance can be expressed as , 
       MSD
~
2
,
2
,
k
k
k
E
E
w
w
                                                                                                     (25) 
    (EMSE)
~
2
,
2
,
k
k
k
k
k
E
E
w
w
                                                                                                  (26) 
We exploit the above spatial filtering matrices and obtain the local steady state mean-square performance of 
node k  
     MSD
bvec
,
-1
q k
T
k
S
F
I
b
                                                                                                       (27) 
     (EMSE)
bvec
,
-1
k
T
k
S
F
I
b
                                                                                                    (28) 
4. Simulation 
The simulation results of the distributed algorithm are provided and compared with the theoretical 
performance. In an 
20
N
 nodes diffusion network with incremental cooperation, we seek an unknown 
system vector with 
10
Lo
. The regressors at node k  are drawn according to the equation 
b c i
u i
i
k k
k
k
k
1
, where 
1,0
k
 and 
2
2
, 1
k
u k
kb
. A first-order autoregressive (AR) process 
with a pole at 
k  is generated by this equation and 
kc  is a white Gaussian noise with mean 
0
kc
and 
variance
1
2
ck
.  
 
Fig. 1. Fractional tap-length versus nodes 
83
 Leilei Li et al. /  AASRI Procedia  5 ( 2013 )  77 – 84 
 
 
Fig. 2. (a) Steady-state MSD versus nodes (b) Steady-state EMSE versus nodes 
The parameters for the algorithm (16) are given by: 
1
k
, 
.0 05
k
, 
3
k
, 
1
k
. In 
the simulation, we set the step-size of the proposed algorithm as 
.0 02
k
. The experiment is carried out 
by 100 independent Monte Carlo runs to obtain the simulated results. The steady-state results are averaged 
over the last 1000 instantaneous samples of 10000 iterations. Fig.1 illustrates the converged fractional tap-
length throughout the network in the steady-state, with a difference of approximately 0.26 at 12.02. Therefore, 
as it is expected, in the steady-state the proposed algorithm can obtain a good estimate of the tap-length. Fig.2 
shows the steady-state performance of the proposed algorithm.  The simulation results provide a good match 
with the theoretical curves. 
5. Conclusions 
We presented a distributed variable tap-length algorithm in a diffusion network. Our algorithm exploits the 
fractional tap-length solution, estimation theory and diffusion LMS distributed adaptive algorithm. In this 
work, we provide the analysis on the performance of the distributed algorithm and the simulation results, 
which agree well with the theoretical results.    
Acknowledgements 
This material was based on work supported by the National Science Foundation 61001169.  
Corresponding Author:  
Leilei Li, lileilei@abp.gov.cn, 13611389100. 
84  
 Leilei Li et al. /  AASRI Procedia  5 ( 2013 )  77 – 84 
 
References 
[1] Mayyas K. Performance analysis of the deficient length LMS adaptive algorithm. IEEE Trans. on Signal 
Processing 2005; vol.53, no.8:2727-2734. 
[2] Pritzker Z, Feuer A. Variable length stochastic gradient algorithm. IEEE Trans. on Signal Processing 1991; 
vol.39, no.4:977-1001. 
[3] Won YK, Park RH, Park JH and Lee BU. Variable LMS algorithm using the time constant concept. IEEE 
Trans. on Consumer Electron 1994; vol.40, no.3:655-661.  
[4] Riera-Palou F, Norsa JM, Cruickshank DGM. Linear equalizers with dynamic and automatic length 
selection. Electronics Letters 2001; vol.37, no.25:1553-1554. 
[5] Gong Y, Cowan CFN. Structure adaptation of linear MMSE adaptive filters. Proc. Inst. Elect. Eng.- 
Vision, Image, Signal Process. 2004; vol.151, no.4,:271-277. 
[6] Gong Y, Cowan CFN. An LMS style variable tap-length algorithm for structure adaptation. IEEE Trans. 
on Signal Processing 2005; vol.53, no.7: 2400-2407. 
[7] Zhang Y, Li N, Chambers J, Sayed AH. Steady state performance analysis of a variable tap-length LMS 
algorithm. IEEE Tran. Signal Processing 2008; vol.56, no.2:839-845.  
[8] Li L, Chambers JA. A novel adaptive leakage factor scheme for enhancement of a variable tap-length 
learning algorithm. ICASSP 2008: 2837-2840. 
[9] Lopes CG, Sayed AH. Incremental adaptive strategies over distributed networks. IEEE Trans. Signal 
Processing 2007; vol.55, no.8:4064-4077. 
[10] Li L, Chambers JA. A new incremental affine projection based adaptive algorithm for distributed 
networks. Fast Communication in Signal Processing 2008; vol.88, no.10: 2599-2603. 
[11] Li L, Zhang Y, Chambers JA. Variable length adaptive filtering within incremental learning algorithms 
for distributed networks. Asilomar Conf. on Signals, Systems and Computers 2008: 225-229. 
[12] Lopes CG, Sayed AH. Diffusion least-mean squares over adaptive networks: Formulation and 
performance analysis. IEEE Trans. on Signal Processing 2008; vol.56, no.7:3122-3136. 
[13] Cattivelli FS, Sayed AH. Diffusion LMS Strategies for distributed estimation. IEEE Trans. on Signal 
Processing 2010; vol.58, no.3:1035-1048. 
