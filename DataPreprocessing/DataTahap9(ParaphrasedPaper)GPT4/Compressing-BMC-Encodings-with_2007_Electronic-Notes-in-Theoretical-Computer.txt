Symbolic model checking is recognized as a problem of PSPACE-completeness. Considering that Quantified Boolean Formulas (QBF) represent the quintessential PSPACE-complete problem, transforming symbolic model checking issues into QBF formulas for resolution by QBF decision mechanisms is a logical approach. The paper offers various encoding strategies for both unbounded and bounded safety verification into SAT and QBF, introducing a novel, efficient linear encoding method for simple path constraints, which enhances the efficacy of k-induction. Despite achieving a considerable reduction in the size of formulas through these encodings, present QBF solvers appear to be inadequate in leveraging these streamlined formats. Although the outcomes are largely unfavorable, these benchmarks will likely bolster QBF solver development, potentially making QBF-based symbolic model checking a competitive option.

Bounded Model Checking (BMC) has been proposed to advance beyond BDD-based symbolic model checking by employing SAT-solving techniques. From its inception, the use of QBF decision procedures was promoted as a strategy to achieve completeness in BMC, enabling the verification of LTL properties rather than merely identification of counterexamples. This paper concentrates on verifying simple safety properties, aiming to confirm the inaccessibility of bad states, although more complex properties are manageable through specific techniques.

The paper acknowledges that the 'diameter' or longest shortest path within a system serves as a ceiling for the length of feasible counterexamples. Exploring ways to calculate this diameter, the authors introduce a QBF formula dependent on the diameter and propose an associated SAT formula sans quantifiers reflecting a related concept. These formulas contribute to determining the bounds on diameters and exploration of maximal simple paths, both forward from an initial state and backward from a bad state.

Further, the paper discusses refining by initializing diameters and reoccurrence diameters, and by employing k-induction—a more successful tactic than forward checking—to prove the invariance of good states. However, since simple paths may be exponentially longer than their associated diameters, the potential of QBF reasoning to expedite counterexample searches remains an open question, despite advancements in QBF solver technology.

Regrettably, existing experimental results for backward reasoning with QBF haven't outperformed BDD-based or SAT-based model-checking algorithms, which suggests further improvement in QBF technology is needed.

The paper also compares functional versus relational unrollings for the next state logic, finding that functional unrollings produce smaller and more efficient CNF expressions for the SAT solver. Incorporating these with initialized path constraints and terminal path constraints allows for a complete model checking process that can verify the reachability of bad states or confirm their inaccessibility by demonstrating unsatisfiability.

To implement and test the proposed approaches, a tool named smv2qbf was created. This tool translates flat SMV specifications with simple safety properties into QBFs and supports various model checking tasks with different encoding options. It demonstrates that QBF encodings are generally more compact than their SAT counterparts and can sometimes be solved more quickly, especially for relational encodings.

In summary, while the paper presents some discouraging findings regarding the use of QBF for unbounded model checking and less so for bounded checking, it confirms the potential compactness and efficiency of QBF formulations, advocating for more research to fully harness QBF as a viable alternative for SAT-based model checking.