In the world of integrated circuits, there is a growing interest in systems known as Globally Asynchronous, Locally Synchronous (GALS) System-on-Chip (SoC). These systems maintain a global clock while handling interconnect delays across multiple clock cycles. A similar approach called Latency-Insensitive Protocol (LIP) based SoC integration has also been proposed and is versatile enough to function without a global clock. However, these protocols are complex, and verifying their correctness, especially when optimizations are introduced, is crucial.

Usually, system specifications assume a synchronous design with minimal interconnect delays, and this specification can be implemented using conventional methods. Modifications are then introduced to handle multi-cycle interconnect delays or asynchronous communication. Traditional tools such as model checking have been used to ensure these modifications do not affect correctness.

In this paper, we introduce a new approach that leverages static analysis for verification, utilizing the Polychrony framework. Our framework employs semantic analysis techniques, including endo-isochrony, to verify that various LIP implementations adhere to their original synchronous specifications. The proposed static analysis method represents an efficient alternative to other verification techniques for GALS systems. It applies Polychrony concepts to real-world hardware LIP-based SoC communication.

Our analysis begins with modeling a given LIP using Signal language syntax, which then gets converted into formal structures known as SDFG (Signal Data Flow Graph) and CH (Clock Hierarchy). We subsequently examine these structures for endo-isochrony properties. A case study involving a Phase Elastic Buffer (PEB) illustrates the framework's functionality and verifies its effectiveness.

An important function of the compiler in our framework is to synthesize clock relations through the CH structure, ensuring clock hierarchy correctness. CH helps check communication accuracy across interconnected processes by confirming their clock relationships. In CH, a child node's clock is a down-sample of its ancestor's, and clocks that are synchronized are grouped together.

Endochrony and isochrony are crucial for maintaining proper operation when synchronous processes interact within an asynchronous environment. Due to space limitations, we focus on the practical application of these properties for verification in GALS systems, rather than their formal definitions and proofs.

The development of this paper has benefitted from discussions with experts from institutions like the University of Utah and INRIA, as well as colleagues at Intel Corporation. Our work has received partial funding from the NSF and SRC.

(This paraphrasing is a high-level summary and does not cover all the technicalities and specific details included in the original academic paper.)