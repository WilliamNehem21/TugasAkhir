In ad hoc networks, direct communication between all pairs of nodes may not be possible due to limited connectivity. Shi and He identify this issue as the neighbors communication problem, which can be mitigated by strategically designing the network's graph structure.

Clustering algorithms, used to organize network nodes, vary in their approach and the types of clusters they create. Some employ cluster-heads to manage clusters and route data, while others do not use cluster-heads, opting for gateway nodes to relay messages between clusters. Clusters may also form cliques where each node can communicate directly with all others within the cluster.

A foundation of trust for secure communication is established through key agreement protocols. These rely on a shared secret to encrypt new session keys, or on key predistribution, where all keys are decided from initial key materials.

Protocols must protect against adversaries seeking to disrupt the integrity of communication or to determine future session keys through past compromises. They also need to differentiate between long-term and short-term secrets, especially when additional long-term secrets (like private keys or passwords) are expected.

TGDH (Tree-based Group Diffie-Hellman) demonstrates a flexible key structure, which could resemble other protocols, like Hypercube, but with a perfect binary tree. Its efficiency is enhanced through pairing-based cryptography, applying bilinear pairings within a ternary key tree structure for advanced key agreement protocols.

AT-GDH (Arbitrary Topology Generalization of Diffie-Hellman) streamlines initial key exchange by using a spanning tree approach, bypassing the neighbor communication problem since exchanges are only between one-hop neighbors. This structure is suitable for any connected network topology, and it doesn't integrate group key management or explicit key authentication. The number of rounds required for key distribution is determined by the tree's height which is typically logarithmic to the number of network nodes.

Di Crescenzo and colleagues examine the influence of physical topology on key agreement protocol performance through simulations. They analyze protocols like GDH.2 and BD broadcast, utilizing an auxiliary protocol to efficiently map logical networks onto any ad hoc network graph.

Clustered ad hoc networks form a backbone key-tree through clustering methods, which is used to initiate key agreements, typically through recursive applications of Diffie-Hellman. Keys are authenticated via signed messages and confirmation messages.

Rhee and colleagues propose an architecture for hierarchical ad hoc networks, using implicitly certified public keys for network-efficient implicit authentication complemented by key confirmation messages for explicit authentication.

Another hierarchical approach suggests a multilevel structure where nodes possess different cluster keys based on their cluster affiliations, but with key agreement primarily among cluster-heads.

A hybrid key management scheme selects cluster-heads to negotiate keys with other heads, then distribute them to their cluster, reducing node participation in the key agreement. The efficiency of such a setup increases with the size of the cliques.

Clustered group key agreements streamline the process to two rounds for intra-clique keys and an additional round for broadcasting the final key parts, resulting in a logarithmic communication complexity relative to the number of clusters.

Past group key agreements relied on implicit key authentication, which is insufficient for scalability, prompting the need for alternative authentication methods like ID-based cryptography.

Clustered AT-GDH may benefit from tripartite key exchanges using bilinear pairings, suggesting that modifications to tree and cluster structures could enhance group key establishment, a subject needing further research.

For mobile ad hoc networks, maintaining group keys is critical to adapt to nodes joining or leaving the network. Neither AT-GDH nor its clustered extension address this key management aspect, leaving it open for future study.

The Spanning Tree Protocol is fundamental for initially establishing network relationships, assuming known neighbors and bidirectional links. This protocol suits networks with reliable connections, but would require adaptations for unreliable networks to handle unacknowledged messages.