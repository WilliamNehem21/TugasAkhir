The paper discusses the advantages of event-based communication in large-scale business information systems over traditional synchronous communication methods like remote procedure calls (RPC). Event-based communication allows for scaling and flexibility due to its asynchronous nature; senders don't need to wait for receivers to process messages, and system components are loosely coupled through middleware, facilitating easier updates and modifications.

The paper also highlights the limitations of existing performance models and prediction techniques when applied to systems using event-based communication, as they are either too general or overly focused on event routing rather than the detailed interactions between components. To address these gaps, the authors propose an approach combining architecture-level event-based communication modeling with platform-aware performance predictions, with detailed references provided for further reading.

The authors evaluate their approach through case studies, considering the Palladio Component Model (PCM) as an example of an established meta-model for component-based software architectures. PCM initially didn't support event-based communication modeling directly, and previous attempts to incorporate it were cumbersome and inflexible. They propose a solution that integrates event-based communication into architectural modeling with PCM, while still allowing the use of existing performance prediction techniques. This approach includes a transformation mechanism that weaves in the specifics of various middleware systems into the final model, giving insight into the impact of different middleware on system performance and allowing the system to be modeled independently of the middleware layer.