Section 3 reviews prior work, highlighting those most relevant to our strategy. Section 4 outlines our method and explains algorithms for SAT-based target enlargement. Section 5 details our dynamic under-approximate reachability analysis for calculating target enlargements. Section 6 introduces the main algorithm with added practical details. Section 7 offers experimental support for our claims. Section 8 concludes and suggests future directions.

SAT solvers use variants of the classic Davis-Putnam recursive method to determine boolean formula F satisfiability, typically presented in Conjunctive Normal Form (CNF)â€”the logical AND of multiple clauses, each an OR of literals.

Researchers have explored combining SAT-based methods with traditional Binary Decision Diagrams (BDDs) for bounded model checking (BMC), finding these approaches complementary. Some integrate BDDs into the SAT process for symbolic image computation, as with Gupta et al. Others combine over-approximate reachability analysis with BMC for tighter search constraints and extend it to unbounded verification, including induction methods.

Our approach uses BDDs for preliminary efforts and completes verification via SAT on the remaining solution space. We divide tasks between BDD and SAT, initially seeking counterexamples in the BDD domain, then in the SAT domain.

In particular, we discuss task partitioning between BDD and SAT for target enlargement and suggest SAT search optimizations. We will describe BDD preprocessing, target enlargement, and the verification procedure later.

New start (target) state sets are computed in the next section and considered in simple under-approximation cases, with the enlarged set SE replacing S and similar dual operations for TE.

Over-approximate reachability is often used to abstract and scale verification, while under-approximate reachability has been less focused on. Existing work has addressed this with sub-setting in the BDD context or guide searches strategically.

To address BDD size issues related to support variables, we aim to reduce support variables with minimal state set impact. Forward and backward state sets have specific variable dependencies. The optimal approach balances BDD size with further state variable constraints for subsequent SAT processing.

Within BDD-based traversals, we dynamically apply sub-setting when thresholds are surpassed. Our technique balances support reduction and high-density minterm retention through variable quantification, applying universal quantification to minimize lost minterms.

We prioritize efficiency in variable selection due to the overhead in this dynamic process. A linear time variable abstraction identifies best density variables without new BDD generation, adding an extra step to manage potential BDD size increases by applying size thresholds.

Initial BDD traversals yield SE and TE sets. SAT verification alternates between BMC and inductive steps until it either finds a counterexample via BMC or an unsatisfied inductive step, extending counterexamples with SE and TE computations. Successful verification returns the stopping depth.

We tested on the IBM Formal Verification Benchmark Library, comprising 75 circuits with unique outputs indicating properties to check.