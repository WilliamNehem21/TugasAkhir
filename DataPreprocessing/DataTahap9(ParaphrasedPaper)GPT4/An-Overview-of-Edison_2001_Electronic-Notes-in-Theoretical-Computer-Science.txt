The paper discusses the current state of Edison, a mostly theoretical framework that provides definitions without a comprehensive range of implementations yet. The author encourages community participation in developing new implementations and contributing to Edison's growth. The text identifies a limitation where certain functions cannot be replaced with more efficient versions for specific collection implementations. For example, using a traditional map function on a binary search tree could potentially violate the correct ordering of elements since the mapping function might not maintain this order. To address this, Edison has an `unsafemapmonotonic` function that assumes the mapping preserves order, but this is not a universal solution to be considered a method. The author emphasizes the importance of community adoption and input for the library's success and extends an invitation for contributing to the development of Edison's abstractions. Appreciation is given to Simon Peyton Jones for discussions on design, and thanks are also extended to Ralf Hinze, Sigbj√∏rn Finne, Koen Claessen, and John Hughes for their contributions to Edison's infrastructure and tools like QuickCheck.