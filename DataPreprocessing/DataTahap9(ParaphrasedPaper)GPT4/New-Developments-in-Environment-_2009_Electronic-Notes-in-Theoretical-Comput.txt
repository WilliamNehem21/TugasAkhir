The paper discusses different types of environment machines based on the evaluation strategy they use (like call-by-name or call-by-value), the reduction method applied (weak vs. strong), and how they map environments to terms. Specifically, it highlights the CAM and KAM, where environments are tied to subsets of the term under evaluation and provide details about which terms should replace the free variables in these subsets. The paper also notes that some machines may use a single environment as opposed to multiple sub-term-linked environments.

The paper discusses two variants of the KAM and CAM that eschew the usual De Bruijn indices in favor of using variable names with associative lists to manage environments. In this context, because names are employed, there can be duplicate keys, but earlier keys in the list will take precedence and overshadow later ones. This achieves non-destructive updating of maps.

Furthermore, the paper outlines the operational semantics for evaluating closed, linear terms, beginning with an initial state that includes an empty environment and making substitutions as needed. In this system, values are represented as closures with the term being an abstraction.