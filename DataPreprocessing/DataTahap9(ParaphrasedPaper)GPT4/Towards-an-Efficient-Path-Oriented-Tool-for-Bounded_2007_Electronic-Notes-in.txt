Current methods for analyzing the reachability of linear hybrid automata struggle to scale to sizes that are relevant in practical situations. Rather than attempting to develop a tool that can perform reachability checks on all possible paths of a linear hybrid automaton, a different strategy is to create an efficient tool that examines individual paths one by one. This tool would be capable of checking paths of considerable length within sufficiently large automata to address practical problems. Design engineers could use this symbolic path execution approach to verify crucial paths, enhancing their confidence in the system's reliability. Contrary to basic testing, our approach allows for the representation of a wide array of potential system trajectories on each path. In our study, we propose linear programming-based methods for developing an effective path-focused tool for the bounded reachability analysis of linear hybrid systems.

The paper is structured as follows: The definition of the linear hybrid automata considered in this study is provided in the following section. Section 3 outlines our linear programming solutions for path-oriented bounded reachability analysis of these automata. Section 4 proposes methods to minimize the size of the linear programs for the paths under analysis. Section 5 describes the tool prototype and case studies. The paper concludes with a final section.

A case study demonstrates that, unlike PHAVer, our new tool can handle longer paths efficiently (e.g., can handle k=150 compared to PHAVer struggling with k=40), due to a decomposition technique that breaks down path checking into smaller, more manageable linear programs.

Acknowledgements are given to Professor Edmund M. Clarke and anonymous reviewers for their input. The research was funded by grants from various Chinese foundations and a graduate fellowship from Carnegie Mellon's Computer Science Department.