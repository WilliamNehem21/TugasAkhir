In this paper, we describe enhancements to the KMelia component model and language, focusing on data management and assertion handling to improve contract definitions and property verification. We expanded the language to systematically address structural, dynamic, and functional correctness by incorporating both data and assertions. We also refined the visibility and access of state space within nested components, adding variable promotion alongside service promotion, and established rules for these new features. To facilitate component correctness proofs, we adapted formal verification methods appropriate for KMelia specifications, with the support of the COSTO tool and manual experimentation with the Rodin framework.

The paper is structured in the following way: Section 2 gives an overview of the KMelia model and its new features. Section 3 provides a working example demonstrating the use of data and assertions. Section 4 focuses on formal analysis, detailing both currently implemented and potential analyses aimed at ensuring component consistency and proper assembly configuration. Section 5 concludes the paper, discussing the implications and future directions of the work. Appendices provide additional information on KMelia syntax, the COSTO tool, and other relevant topics.

We explain that the behavior of a component is a result of its services' behaviors, where services execute actions according to a transition system and interact with each other through messaging and service calls. We then discuss how components are composed using assembly links and variable promotions, with special attention given to ensuring that promoted variables maintain certain contractual conditions.

A concrete case—a stock manager in a vending system—is used to illustrate KMelia's capability for defining services with pre- and post-conditions, as well as observable and non-observable state representations. The formal analysis involves verifying KMelia specifications, where we aim to uncover specification errors to preempt implementation issues. The analysis leverages external proof tools, with a new plugin, KML2B, supporting the translation of specifications into a form usable by these tools, specifically B tools and the Rodin framework.

Finally, we assess the capability of Event-B within the Rodin framework to verify KMelia specifications by translating and adapting parts of KMelia specifications into Event-B models, which allows us to generate and satisfy proof obligations reflecting the assertions within KMelia.

Overall, the paper presents a framework that integrates data and assertion features, enhances service contracts, and sets the stage for more rigorous formal verification, driving forward the ability to ensure the correctness and consistency of component-based systems.