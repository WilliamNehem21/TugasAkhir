The Mondex case involved a complex formal development process whereby an abstract model with atomic transactions was translated into a detailed, multi-step protocol. Initially, the development team employed backward simulation to connect abstract transactions with early steps in the concrete protocol runs, failing to produce a forward simulation. Over time, however, forward simulations were successfully developed, aligning abstract steps with latter stages of protocol executions.

The successful execution of the Mondex protocol was characterized by the ability to substitute all non-starting events with aborts, implying that unsuccessful protocol runs still preserved the protocol's unforgeability and atomicityâ€”a testament to Mondex's theoretical robustness.

Mondex protocols operate in isolation; once initiated, purses involved in a transaction only recognize expected messages or abort commands, disregarding all other interactions.

The paper defines a concept called "synchronization assignment" for protocol trees and aims to demonstrate that protocol actions can be broken into smaller refinements using forward simulation, except for branching backward simulation steps.

Backward simulation is always marked by reduced nondeterminism at both abstract and protocol stages due to a functional transpose of the step relation. Forward simulations are also viable except for sequences of alternating forward and backward steps, which can produce verification assumptions that weaken the robustness of the refinement proof.

The isolated nature of Mondex protocol runs, idealized and not influenced by external agents or activities, is clarified in the discussion of protocols as patterns that can be matched to real-world activities. This involves a projection mechanism to account for unrealistic, detailed history in protocol states.

The paper acknowledges that in real systems, agents can embody multiple roles across various protocol instantiations, necessitating a distinction between protocol roles and their instantiations during system operation.

Ultimately, the paper examines the concept of external dependency in relation to the protocol, defining input and output dependency sets, and emphasizes normalcy within protocols. It also outlines the broader context and applications of forward and past simulation relations in dynamic logic and their contribution to the formal verification of system refinements.