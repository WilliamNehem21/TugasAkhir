The paper discusses the underutilization of computing power in machines, citing observations that CPUs often operate at only 1-2% capacity, leading to a significant waste, especially in environments with a large number of computers, such as a department with 300 computers. Even as the number of users and demands for powerful servers increase, the problem persists because users tend not to switch servers to balance the load.

To address this challenge, the paper turns to grid technology, which enables the use of heterogeneous resources and has been a focal point of research. The authors propose integrating idle computing resources into an effective computing device through the use of a fuzzy-based clustering model. This model takes into account the parallel and serial nature of computing tasks to optimize the application efficiency of the cluster.

The model places emphasis on key attributes related to tasks, assigning them significant weights. An example formula is provided where all attributes (k1 through k5) are weighted equally at 0.2, but the specific weight distribution can be adjusted depending on the application requirements. An adjustment to the similarity measurement is also suggested, moving the coordinate origin to 0.9 to avoid insignificant small values, though the precise shift depends on the data from the last 30 sample computers.

The method for clustering involves considering the weight of the CPU among other factors. As the weight of the CPU is adjusted, the composition of the clusters changes, illustrating that even with differences in CPU performance, computers may be grouped based on other similarities if the CPU weight is reduced or removed.

Finally, the paper discusses how by increasing the clustering threshold, more distinctive and similar clusters are formed, which results in a finer granularity and potentially more efficient use of computing resources. This experimental approach underscores how changing weights and clustering thresholds can lead to optimized clustering solutions that maximize the use of existing computing power by smartly allocating computational tasks across underutilized resources.