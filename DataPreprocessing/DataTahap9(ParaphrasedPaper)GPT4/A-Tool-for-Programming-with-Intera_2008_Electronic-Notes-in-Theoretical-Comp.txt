This document discusses Inblobs, a graphical tool created at the University of Minho to facilitate the editing and development of interaction net systems. Most existing tools for interaction nets require textual input, but Inblobs differentiates itself as a visual editor that allows users to design interaction systems graphically. It can also convert these visual representations into a textual format, suitable for other tools that perform net reduction. Notably, Inblobs includes functionality for reducing nets within its environment.

The paper is structured as follows: Section 2 provides a review of interaction nets. Section 3 presents an overview of Inblobs. Sections 4 through 6 delve into the tool's specific features and functions. Section 7 describes the graphical front-end underlying Inblobs, and Section 8 concludes the paper.

In interaction nets, agent ports without connected edges are known as free ports, with the set of free ports defining the net's interface. Two unique net forms are a wiring (a net without agents, consisting solely of edges) and an empty net (with no agents or edges).

Constructors in interaction systems, such as the 0 and S agents, use their principal ports for the constructed term and their auxiliary ports for the constructor's arguments. The + agent acts like a function, executing addition recursively on the argument linked to its principal port while the auxiliary ports deal with the second argument and the result.

Inblobs serves as an integrated development environment, allowing users to switch between reduction steps and edits on both the interaction net system and the nets being reduced. This flexibility is particularly beneficial for rapid prototyping. Reduction operates directly on the visual editor's underlying net representation.

The integration process in Inblobs involves importing a copy of a rule's right-hand side into the current net N. This necessitates incorporating the copy's information, with updated indexes for nodes and edges, into N's existing structure without connecting it just yet.

Inblobs is based on Blobs, a directed graph editor built in Haskell using the wxHaskell library. Blobs evolved from a Bayesian network editor called Dazzle, and its front-end, divorced from Dazzle, has been optimized and released to serve various Haskell-related projects.

Blobs' structure has been customized for interaction nets. It includes an agent intmap to associate each node with specific information about its ports, including principal port identification and geometrical data for port placement. The edge intmap adds new details by linking every edge to the relevant ports on each agent.