Here is a paraphrased version of the academic paper summarized:

The increasing deployment of computers in managing complex systems, particularly in the transportation sector, is noteworthy. These systems are often critical to safety, as a failure could result in costly or dangerous outcomes. For example, support systems are designed to prevent collisions among traffic entities like cars, trains, and airplanes. It is essential to develop formal models and verification processes to prove safety features of such systems. Formal models must encapsulate several system attributes including states, communication protocols, real-time requirements, interactions with the physical environment, and dynamic systems structures. To handle these models effectively, researchers have suggested the use of combined specification techniques that fuse well-understood methods for modeling distinct aspects of systems. A key research goal is to create automatic verification techniques for analyzing these complex, combined specifications.

The paper is laid out in several sections. Section 2 introduces the composite specification language called CSP-OZ-DC. Section 3 describes a new technique for the automatic verification of real-time properties within CSP-OZ-DC specifications. Case studies applying this method are discussed in Section 4, followed by Section 5 which talks about the tools supporting this process. The paper concludes in Section 6.

The paper details a European Train Control System (ETCS) scenario with two trains, encompassing multiple classes such as RearTrain, LeadingTrain, Radio Block Centre (RBC), Communication Network, Track, and Driver. These classes intertwine into systems using CSP operations like parallel composition and renaming.

It's noted that due to both clocks and data values, the Phase Event Automata (PEA) and thus the Transition Constraint Systems (TCS), representing CSP-OZ-DC specifications, generally involve infinite states, making reachability undecidable. While the fixed computation in ARMC (Abstract Regular Model Checking) may not terminate, case studies show its successful application to various examples.

An initial application tested an elevator system with a variable number of floors, treating the floor count as parameters. This system used ARMC to automatically verify a safety property influenced by all parts of its specification, including communication, data, and real-time aspects. Both infinite data and continuous real-time factors were part of the elevator's CSP-OZ-DC specification.

Verification relies on transforming PEA into TCS. The PEA Toolkit automates this transformation and the computation of PEA's parallel product. It also prepares the data for the ARMC and SLAB model checkers. Additionally, ARMC-generated counterexamples can be traced back and visualized within the Syspect tool based on the high-level CSP-OZ-DC specification.

A limitation of the current ARMC version is its inability to utilize the inherent parallel composition in PEA. Since ARMC works with TCS in Disjunctive Normal Form (DNF), it requires the PEA's parallel product—which equals TCS conjunction—be computed in advance. This issue, resulting in excessively large state spaces for comprehensive case studies, is an area earmarked for future improvement within the ongoing R1 subproject.