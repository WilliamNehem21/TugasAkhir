The article presents an enhancement to the Creol modeling language, which traditionally excels in depicting distributed systems but lacks representation of resource limitations, such as available memory and simultaneous processing within an object. The authors propose a timed, resource-constrained extension to Creol, permitting the quantitative evaluation of the impacts of resources on system models. The paper discusses how message delivery semantics can be adapted to consider resource constraints, detailing the implementation process and the ramifications for system models. A biomedical sensor network case study is used to demonstrate the proposed approach.

The paper outlines its content as follows. Section 2 provides a background on Creol's distributed system modeling capabilities. Section 3 modifies the Creol semantics and interpreter to incorporate resource constraints. Section 4 applies the framework in an extensive case study, offering insights from the implementation of resource constraints. Section 5 reviews related work in the field, and Section 6 concludes the article.

In Creol, each object operates on a separate thread and alternates between active and reactive behavior. Method calls spawn new processes, with one active process accessing the object's attributes at a time. Cooperative multiprogramming is possible via process-switching statements. Unlike the Ada programming language, which influenced Creol's timed extension, Creol's emphasis is on modeling rather than implementation. The time is represented as a read-only global variable accessible to objects without an absolute time definition, making the model shift invariant.

The paper then discusses the challenges of traditional Creol assumptions when applied to small embedded systems, which are often limited in terms of parallel processing capacity. To address this, an approach is devised to adjust the Creol language and execution engine to account for real-world operating constraints.

A case study within the Credo project illustrates the application of the new Creol model in simulating a sensor network with both monitoring and message-routing functionalities. This study highlights the practicality of incorporating bounded computing resources into models, an aspect often confronted by microcontroller-based systems.

Lastly, the authors position their work within the context of existing literature, emphasizing Creolâ€™s suitability for modeling distributed systems and its contributions beyond automata models. By allowing resource constraint expressions at the model level and validating them through simulation, the authors provide a unified method for considering call stack depth and limited parallel processing in models, distinguishing their work from other tools and research in the domain.