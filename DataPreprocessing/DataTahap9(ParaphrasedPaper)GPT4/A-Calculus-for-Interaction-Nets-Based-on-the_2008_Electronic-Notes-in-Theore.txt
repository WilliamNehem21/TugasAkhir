Interaction nets are graph rewriting systems that extend proof nets for classical linear logic, similar to how the Linear Chemical Abstract Machine (CHAM) offers term rewriting corresponding to classical linear logic via the Curry-Howard isomorphism. By focusing on the multiplicative fragment of classical linear logic, a textual calculus for interaction nets emerges, echoing the linear CHAM.

Interaction nets, established in 1990 by Lafont, have driven extensive theoretical and practical insights. Though multiple textual calculi for interaction nets have been proposed, such representations often lose the graphical clarity but provide a more conventional, programmer-friendly notation useful for programming language development and property proofs verification.

This paper outlines interaction net basics, reviews the linear CHAM, and presents a way to depict interaction nets within the linear CHAM framework. It also discusses cost models and concludes with final observations.

A pre-processing step in translating nets involves assigning fresh agents to unconnected free ports, with these agents having zero arity. The textual calculus suggested in the paper differs from prior ones by its representation of rewrite rules, which may create additional reduction steps due to the treatment of names not associated with auxiliary port connections.

The proposed calculus for interaction nets offers a portrayal more aligned with the original graphical representation and starts investigating the computation cost in interaction nets. Ongoing efforts focus on crafting programming languages grounded on this framework and leveraging it to analyze properties of existing interaction systems.