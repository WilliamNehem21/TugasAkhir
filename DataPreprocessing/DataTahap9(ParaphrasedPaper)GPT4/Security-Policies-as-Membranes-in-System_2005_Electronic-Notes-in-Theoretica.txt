The paper introduces a global computing framework emphasizing code migration and system security. Systems are composed of sites containing a computing body and a protective membrane, which serves as a filter managing the interaction between the computing body and the external environment. These membranes enforce security policies by controlling which agents can access the site based on established trust levels among sites.

Initially, the paper outlines a basic theory where membranes only regulate the actions incoming agents wish to carry out at a site. As the discussion progresses, this basic theory is expanded to include more nuanced policies where not only the type of actions but also the number and sequence of actions an agent performs are considered.

The framework also assumes a trust management system where each site is aware of its trust level (categorized as bad, uncertain, or good) with other sites. This trust level influences whether policies will allow code to enter and execute at a site.

The authors demonstrate that their policy enforcement mechanism can be efficiently established and prove several related theoretical results, suggesting that checking code digests is computationally preferable to examining the full code. These findings assure the robustness of the approach to maintaining system security.

Furthermore, the paper revises the interpretation of policies to account for collective behavior of agents running on a site, rather than just individual agent behavior. Safety in the system is thereby viewed as a property of groups of threads executing together.

An example is given with a server managing software licenses, illustrating both how the policy would be enforced in this context and the potential practical challenges of such an implementation.

Finally, the paper situates its contributions within the broader context of distributed systems research, particularly relating to access control, and it differentiates its concept of membranes from other work in the field where membranes are depicted as computationally active entities rather than just verification tools for incoming agents. The paper concludes by comparing this work with other related research.