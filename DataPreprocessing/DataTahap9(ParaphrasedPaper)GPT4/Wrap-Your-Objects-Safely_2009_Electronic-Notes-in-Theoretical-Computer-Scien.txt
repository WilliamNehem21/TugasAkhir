Academic research on open distributed systems and embedded devices highlights several challenges such as design, functioning, and notably, security concerns. Security is vital as the transfer of applications to devices could jeopardize personal privacy and the integrity of data; thus, innovative security solutions are imperative for these unpredictable environments.

Java, a popular programming language based on shared-state concurrency, is not the best fit for open distributed systems, which are more naturally represented by message-passing and concurrent object models like Creol. Creol was chosen for this research due to its communication model, simplicity, and related simulation tools. It also allows dynamic updating of classes to introduce new code safely alongside protective measures.

Creol models system components through concurrent objects that communicate via asynchronous method calls, minimizing risks like deadlocks. Method calls generate messages that activate or complete methods, which are then handled by the receiving object's process queue. Object and class configurations are fundamental to this language, and while inheritance is not the focus here, it remains an essential concept.

To reflect real-world networks, Creol must consider locality, which encapsulates messages and objects within identifiable units. Wrappers enhance this concept by controlling message flows between components and their environments, promoting modular security. Essentially, wrappers can monitor and filter incoming and outgoing communications, allowing objects within to operate normally while maintaining isolation.

This research proposes that Creol could incorporate contract-based automata as wrappers to enforce security policies and suggests its potential applications in fields like the internet and embedded systems. The current smart card security mechanisms are inadequate, but applying the localized approach with wrappers might address some vulnerabilities.

Finally, the paper envisions local networks and computers as layered wrappers, each with a unique identifier and local pool, where controlled message passing is established through explicit rules. Firewalls could be regarded as specialized wrappers, ensuring a secure interface between trusted and untrusted environments.