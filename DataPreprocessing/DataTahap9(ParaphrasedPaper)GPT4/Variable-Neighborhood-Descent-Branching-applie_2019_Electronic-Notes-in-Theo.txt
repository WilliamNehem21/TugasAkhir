The paper describes a mathematical model for the Minimum Weight Non-Perfect Partition Problem (MWNPP) and proposes a new technique incorporating local branching constraints based on an initial solution, which affects how similar or distinct other solutions should be in comparison to the initial one. This method has led to the creation of both exact and approximate algorithms for solving combinatorial optimization problems. A notable algorithm introduced is the Variable Neighborhood Descent Branching (VNDB), which utilizes these local branching constraints to define its search neighborhoods.

The paper reports that when using a reasonable amount of neighborhoods, the VNDB algorithm achieves results competitive with those obtained from the standard CPLEX solver, and does so in less time. The structure of the paper includes a section outlining the addressed problem and the mathematical model for MWNPP, a discussion on local branching constraints, a detailed description of the VNDB approach and its specific neighborhood structure, a presentation of computational tests comparing the VNDB algorithm with other algorithms, and a final section providing conclusions and a critique of the results and methodology.

An algorithm summary states that the stopping criteria for VNDB are either the exploration of all neighborhoods for a given solution or reaching a pre-defined maximum number of iterations or time. Additionally, there are different paths in the algorithm depending on whether solutions are feasible, optimal, or infeasible.

Results of computational experiments indicate that VNDB often stops due to having exhausted all neighborhoods rather than from reaching the maximum allotted time, primarily because many subproblems are solved with a non-optimal status. VNDB consistently shows statistically comparable results to running the mixed integer programming (MIP) solver within a shorter time frame, except in cases where parameter \( k = 3 \). A noted limitation is that the CPLEX solver's time usage is not deterministic on a multi-core processor, which can result in some problems taking significantly longer (up to 4500 seconds more) to solve using MIP techniques.