In the given academic paper, the authors have detailed the grammar for a specific specification. In this grammar, the operators "ut," "at," "ab," "pr," "fc," and "su" correspond to unit, atoms as term objects, abstractions, pairs, function applications, and suspended variables, respectively. For the "fc" (function application) constructor, two "nat" (natural number) arguments indicate the super- and subscripts of the function symbol being applied.

The academic paper also describes how certain entities are represented within Coq, a formal proof management system. In Coq, an atom represented as a term object "a" is expressed as "(at a)." This notation is used within pseudo-code to describe the specification, although, when not necessary, standard nominal syntax—preferred for its clarity—will be used. It should be noted that while nominal syntax inherently defines two atoms "a" and "d" as distinct, within the Coq specification, "a" and "d" are considered meta-variables that can range over the same set of atoms. Therefore, "(at a)" and "(at d)" in the Coq specification might refer to the same atom contrary to their innate distinction in nominal syntax.