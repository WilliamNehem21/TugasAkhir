This paper presents SAK-SIR, a preliminary ontology-based strategy that aligns with the ISO/IEC/IEEE 42010 standard for integrating and retrieving software architecture knowledge (SAK) from various sources. Ontologies and Semantic Web technologies are effective tools for representing knowledge, offering the means to model and understand information within multiple tools, such as Architecture Knowledge Management (AKM) tools.

The paper is structured into six sections:

1. An introduction (not specified in the provided text).
2. An overview of ontologies, Semantic Web, and the ISO/IEC/IEEE 42010 standard.
3. Identification and characterization of SAK sources and introduction of SAK-SIR.
4. Application of SAK-SIR using the AKM metamodel and repository from the TRACED tool to integrate and retrieve historical software architecture (SA) project knowledge.
5. Discussion of similar work in the field.
6. Conclusion summarizing the work's contributions.

The paper highlights the importance of effectively tagging and searching semantic knowledge, with ontologies playing a vital role in providing a common understanding for different terminologies and preserving knowledge for future use. The SAKOnto ontology, developed in previous work, encompasses general, context, design, and reasoning knowledge fields to represent software architecture knowledge comprehensively.

AKM tools, differentiated by their data model repositories, are crucial for managing architecture knowledge. The paper illustrates that depending on the knowledge source, a range of techniques is applied during the extraction stage, which could involve Natural Language Processing or web parsing, coupled with semantic annotations for textual documents. A domain ontology is recommended for each knowledge type to facilitate integration across various ontologies.

The paper also describes the layers of ontology implementation:

1. ISO/IEC/IEEE 42010 standard ontology layer (L1): Provides foundational concepts for the SAK ontology network.
2. Software architecture domain layer (L3): Built on previous layers, it includes software architecture-specific concepts and domain knowledge.

Human intervention is deemed necessary, especially during the integration stage, where ontology engineers and domain experts ensure the quality and expressiveness of the knowledge model. For instance, in integrating a metamodel from an AKM tool, concepts must be defined as extensions of the standard ontology where appropriate, ensuring proper subclassing and property definitions.

A query editor and a reasoner are suggested tools to help users define queries and generate non-explicit knowledge. Further, a set of predefined SPARQL queries could enable interoperability between different AKM tools.

Finally, the paper validates the SAK-SIR approach by integrating the TRACED tool's metamodel with the SAK ontology network and populating it with project knowledge. The resulting ontology maintains information about the software architecture design process's evolution and conforms to the standard.