The paper discusses a computational model called brane calculi, which is studied within the framework of process calculi. Brane calculi focus on operations involving membranes with embedded proteins, differentiating it from traditional membrane computing where the focus is on operations within compartments delimited by membranes. The operations in brane calculi—pino, exo, phago, mate, drip, and bud—are formally defined.

The study demonstrates that the computing potential of certain brane calculi operations, specifically phago and exo, has been established to be universal when implemented in membrane computing models and examined using formal language theory tools.

In traditional membrane computing, a membrane is defined as a pair of square brackets with an associated multiset of objects, known as proteins, which are signified as a marking u inside the membrane. The content of a membrane includes these proteins and possibly other membranes too.

The paper also reviews the computational abilities of PPP systems that employ non-cooperative versions of the pino and drip rules. In this scenario, the systems are quite restricted; they can only generate sets of vectors that fall strictly within the Parikh images of context-free languages. However, when utilizing both the pino and drip rules, the computational power of the system increases, making it possible to generate at least the family of Parikh images of languages created by programmed grammars that do not require appearance checking.