The paper emphasizes the critical role of managing business processes (BPs) for organizational efficiency and effectiveness. Business Process Management (BPM) offers comprehensive support for the BP lifecycle, encompassing modeling, development, deployment, execution, and evaluation within both organizational and technical contexts. Business Process Management Systems (BPMS) and Process-Aware Information Systems (PAIS) are technologies supporting this BP lifecycle.

The study introduces a design for a generic BPMS user portal based on a unified data model and a universal process engine API, compatible with any process engine to execute BPs. The design stems from a comparative review of three BPMSs—Activiti, Bizagi, and Bonita—focusing on their respective web portal functionalities and process engine APIs. The proposed model for the generic BPMS user web portal is designed using the Interaction Flow Modeling Language (IFML), a standard language for specifying user interaction and control behavior on web front-ends, yielding a platform-independent model suitable for developing or automatically generating BPMS user portals.

Sections in the paper detail the following:
1. Background and related work in BPM.
2. Key components and comparative evaluation of BPMS architectures.
3. The architectural design of the generic BPMS user portal, a unified data model, and the generic process engine API.
4. The application of IFML standard to create a generic user portal.
5. A prototype developed to demonstrate the concept.
6. Conclusions and future work directions.

The paper also references earlier efforts to unify BPM concepts and compares the proposed approach, which details essential functionalities for process execution. The authors developed a unified view that incorporates BPs’ execution and user worklist, role, and user management functionalities. The classification of BPM tools into pure BPMN, adapted BPMN, and non-BPMN categories are highlighted, demonstrating different levels of native BPMN support.

The proposed architecture includes an access layer with service and integration sub-layers, ensuring the BPMS user portal can interact with various process engines. The integration layer is critical, as it adapts the general functionality definitions to match the specific methods of selected process engines.

The paper concludes with a commitment to further refine the model by benchmarking it against other BPMSs and considering additional elements like BP execution measures, which could be used for ongoing process improvement initiatives. The ultimate goal is to extend the generic API and model to encompass a broad range of existing engines and incorporate analytics features suitable for evaluating BPs both in real-time and after execution.