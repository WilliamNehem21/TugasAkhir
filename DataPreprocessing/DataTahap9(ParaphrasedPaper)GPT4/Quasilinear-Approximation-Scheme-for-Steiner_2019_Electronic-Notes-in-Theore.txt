Like the methods put forward by Arora and Borradaile and others, our approach also relies on successively dividing the space that contains terminal points using intersecting lines. Our algorithm utilizes dynamic programming to discover the optimal solution that intersects each line a fixed number of times, exclusively at predetermined points known as portals. This process of division, termed "dissection," operates in the following manner.

We begin with a primary dissection square that acts as a bounding box encompassing all points in the given problem set. The side length of this root dissection square, denoted by l, is set as a power of two and is at least double that of the smallest square that can encapsulate all terminals. We align this square such that its lower-left corner aligns with the coordinate (0, 0) on the plane, ensuring all terminals reside within the square delineated by (0, 0) to (l/2, l/2).

Within this framework, we say that dividing a square r into four produces its "children," with r serving as their "parent." If a dissection square r includes another square rj within it, then rj is considered a "descendant" of r. Note that the depth of a square is one more than the depth of its parent. This hierarchy creates a quadtree, and the depth of any leaf square in the quadtree is capped at O(log l).

The first stage of the modification begins by partitioning the collection of terminals T, as outlined in Algorithm 1. Proposition 3.1 demonstrates that an optimal solution for T can be achieved by combining the optimal solutions of each subset within this partition. Moreover, Proposition 3.2 establishes a method to estimate the maximum diameter within each part of the partition by assessing the number of terminal pairs it includes as well as the greatest distance between them.

The second stage in this transformation involves discretization. We introduce a uniform integer grid over the Euclidean plane, with a cell side length of one and grid lines intersecting at integer coordinates. This step requires repositioning the terminals, which may have initially had any coordinate, to the centers of these grid cells.

In 2011, Bateni and colleagues developed a polynomial-time approximation scheme (PTAS) for the Steiner forest problem on planar graphs. An intriguing avenue for future inquiry is the potential existence of a PTAS for the more complex Steiner multi-cycle problem in planar graph settings.