This paper discusses various relationships between two automata, such as homomorphism, refinement, forward simulation, and backward simulation, noting that forward-and-backward simulations are particularly effective for verifying trace properties of I/O automata. The authors present a method using the PVS theorem prover to define abstraction properties for automata and offer generic strategies to facilitate the proof of these properties with minimal intervention.

Abstract automaton objects are efficiently represented in PVS as instances of an 'automaton' type. However, due to PVS's limitations, I/O automata are described by instantiating a template within the TAME (The Automata Module for PVS) framework. These instances, known as TAME automata, serve as the basis for defining invariants.

The paper includes a case study using forward simulation to verify the timing of a failure detector system composed of a sending process, a timed channel, and a timeout process. It also examines a two-process race system, where one process updates a counter and the other triggers a decrement action, verifying time bounds using forward simulation.

The authors relate their work to the TIOA (Timed Input/Output Automata) project, which is developing a translator to convert TIOA specifications to PVS. Their strategies and the translator aim to abstract the complexities of PVS, allowing users to focus on specifying and proving properties of TIOA without detailed knowledge of PVS.

A library of abstraction property theories and generic automaton theory templates is being created to facilitate instantiating these properties as theorems that link specific automata. The authors have incorporated reusable PVS strategies for weak refinement and forward simulation into TAME and tested them on examples.

Further work includes refining these strategies, developing new ones for completing proofs interactively, and extending proof support for other abstraction properties. Acknowledgements are made to Sam Owre and Natarajan Shankar for their contributions to PVS features that supported this work, as well as to Nancy Lynch, Dilsun Kaynar, and anonymous reviewers for valuable input on the case studies and paper improvements.