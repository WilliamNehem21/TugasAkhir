The paper discusses the disconnect between the theoretical foundations of mathematics and the practical way in which mathematicians work. While various foundational systems exist, such as ZFC (Zermelo-Fraenkel set theory with the Axiom of Choice) and type theories, mathematicians rarely use these in their daily work, instead preferring a common mathematical language (CML). This language facilitates communication and is not usually expressed in the full formalism of a foundational theory. Despite the effectiveness of type theories in computer proof systems, they are not commonly used for foundational thinking in mathematics.

The paper continues by describing the challenges of employing computers to handle mathematical knowledge, given the difficulty of extracting semantic information from documents that are often stored as pixel maps requiring optical character recognition (OCR) to perform even basic keyword searches. While computer algebra systems (CAS) like Maxima, Maple, and Mathematica are beneficial for symbolic and numeric computations, they are not designed to guarantee the correctness of mathematical statements or to be tied to any specific foundational system.

The paper introduces MathLang, a language designed to archive and communicate mathematical knowledge that can be easily integrated with existing systems like OMDoc and TeXmacs. MathLang aims to represent the structure of natural language text and mixed mathematical symbols to capture the semantics more effectively, a feature lacking in previous systems.

Experience in developing MathLang comes from the contributions of students through various projects and PhD studies. Current MathLang design comprises three aspects and includes work relating MathLang texts to their fully formalized versions in systems like Mizar and Isabelle.

The paper explains specific types within MathLang used to describe mathematical entities and sets, highlighting the flexibility of its representation format, TSA, which allows mixing of narrative and formal mathematical content at various levels of granularity.

MathLang is an ongoing project requiring continued design, implementation, and evaluation. The paper identifies the need for further development in the software for easier information entry and consistency checking, emphasizing that MathLang will be user-friendly for mathematicians and not restrictively tied to any particular formal foundation.