This paper discusses the integration of web services using service-oriented computing (SOC) for building complicated applications through service reusability and composition. It focuses on orchestrations, which define how separate web services collaborate as a united service offering greater value. The orchestration process is standardized by Business Process Execution Language for Web Services (BPEL), which specifies how interactions between partner services are coordinated to fulfill a business objective.

The paper is structured into six sections, introducing the BP-calculus syntax, semantics, and associated logics, then presenting the behavioral characteristics of the BP language. It goes on to outline a framework for verifying these behaviors and demonstrates this process through an example, ultimately concluding with results and suggestions for future research.

Key concepts include the definition of terms—variables, names, and values (like integers, booleans, strings)—messages as closed terms, and the set of all possible messages. The behavior of scopes and handlers, as well as the conditional logic and function evaluation within a process, are defined through specific rules.

The paper includes a verification process that iteratively refines processes and their formulas to ensure system validity, culminating in the automatic generation of BPEL code once all properties are confirmed, even if one safety property is tolerated without validation.

An illustrating example describes a customer using a broker service to sell shares, which demonstrates the practicality of the approach despite potential challenges in full verification due to large system sizes. Details on enabling and disabling event and fault handlers, processing associated activities, and signaling various statuses are also explored.

The model succeeds in validating all desired properties, and when some properties fail verification, the specifications are adjusted until all criteria are met. The paper concludes by affirming the potential for automatic generation of BPEL code once the verification process confirms all properties.