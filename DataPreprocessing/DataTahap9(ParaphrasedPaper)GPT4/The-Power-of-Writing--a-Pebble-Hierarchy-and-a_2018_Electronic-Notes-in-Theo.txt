In this research, the authors examine pebble automata—a range of computational models forming an infinite hierarchy. This hierarchy starts with finite state automata (0-pebble automata) and progressively advances towards the capabilities of one-tape Turing machines, providing a comprehensive span of models essential to computation theory. The study seeks to determine its effectiveness as a framework for teaching automata theory and explores essential aspects of pebble automata's computational power.

Acknowledgements include gratitude from the first author for the ColCiencias grant, which supports her Ph.D. studies, and from the second author to the Universidad Nacional de Colombia, with partial funding from the Hermes research system, project number 32083.

The paper poses whether the pebble automata hierarchy is strict—representing a seamless evolution from two-way deterministic finite automata (2DFAs) to Turing machines—or if it abruptly concludes at a certain level, resembling a phase transition, which seems less probable.

The paper comprises three sections:

1. Introduction to the pebble automata model, with a demonstration of its weak universality, and presentation of simple facts establishing the hierarchy's strictness.
2. Examination of relationships between pebble automata language classes and other formal languages, covering deterministic context-free languages, non-inclusion in the hierarchy, and nondeterministic pebble class variations. It answers key questions about the deterministic versus nondeterministic classes' relationship.
3. Concluding remarks, highlighting the pebble hierarchy's potential as a narrative in automata theory teaching.

Pebble automata are quasi-writing mechanisms. Standard pebble automata do not visit empty cells on the input tape, while unrestricted automata do. This choice greatly impacts their functioning.

The educational value of the pebble hierarchy lies in how fundamental computer science concepts and questions emerge at the most basic hierarchy levels. For instance, a 2DFA with n states can run only n programs, while an automaton mn,k in the pebble hierarchy can simulate an infinite number of automata, indicating the emergence of universality.

The authors argue for the immense educational value of pebble automata. Strategies akin to those used in complex programming can be implemented at elementary levels of the pebble hierarchy. Some scholars propose focusing theory courses on finite state automata and Turing machines, relegating context-free grammars and pushdown automata to programming language theory courses. However, the authors believe that material on pushdown automata is too valuable to overlook entirely and should be integrated into the curriculum. These can be considered another evolutionary branch starting from finite state automata, with pebbles capable of mimicking counters and pushdown stacks.

In conclusion, the paper underlines the authors' support and funding sources and restates their belief in the significance and potential educational benefits of pebble automata within computational theory teaching.