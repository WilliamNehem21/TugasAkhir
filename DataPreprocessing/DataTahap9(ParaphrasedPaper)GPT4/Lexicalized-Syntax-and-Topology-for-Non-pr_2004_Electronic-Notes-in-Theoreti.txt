We present a lexicalized approach to dependency grammar that highlights the relationship between syntactic hierarchy and word order. Our method differentiates between two complementary but interdependent structures: a syntactic dependency tree (ID tree) and a topological tree (LP tree). The ID tree captures the unordered, non-projective syntactic relationships between words, indicated by grammatical roles. In contrast, the LP tree represents the sequential, projective arrangement of words within sentences, marked by topological fields.

These two trees interact through a liberation process where the LP tree is shaped from the ID tree, guided by specific lexical rules and principles. This article details how valid structures can be realized by solving a constraint satisfaction problem, which forms the foundation of our computational model.

In addition, we provide a formal definition of well-formedness that determines correct structures and demonstrate how this definition can be applied as a constraint program, which drives our software implementation.

We illustrate our approach by examining the concept of syntactic barriers, simplified to nodes that impede certain syntactic relations. For instance, a noun might block determiners.

Our model manages different verb positions associated with German word order, highlighting that the same field (extraposition field XF) can account for various phenomena like verb extraposition and 'Oberfeldumstellung' due to the migration of phrases to the XF field.

Ultimately, our research encapsulates a range of German word-order patterns as the outcome of our lexicalized constraints' interplay.