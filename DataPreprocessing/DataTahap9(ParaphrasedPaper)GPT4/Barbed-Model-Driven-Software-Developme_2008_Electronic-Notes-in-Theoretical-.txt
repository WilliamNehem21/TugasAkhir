This study received partial funding from the EU project SENSORIA (IST-2005-16004), and the first author also benefited from a joint PhD program between the Department of Informatics at the University of Pisa and the International Institute for Software Technology at the United Nations University in Macao. Acknowledgments are extended to J. Vital.

The concept of behavior-model driven software development (BMDSD) has been an implicit aspect of significant projects such as AGILE, DEGAS, and SENSORIA. Within SENSORIA, development tools known as 'barbs' are being created to enable early analysis and ensure superior quality in software products, particularly those using service-oriented architecture. A challenge of BMDSD is to determine the extent to which barbs should influence the core structure of the development process.

The paper explores the use of UML2 as a modeling language and VIATRA as a transformation engine to create a barb that statically verifies a service-oriented application's compliance with specified policies. UML is favored for BMDSD due to its wide range of established modeling methods and adaptability. VIATRA's compatibility with UML modeling tools and its declarative transformation expression style facilitate the barb's development. Additionally, the eclipse-based SENSORIA case tool allows the verification tool to be deployed as a service within the same development environment.

UML's stereotype extension mechanism supports different modeling perspectives and integrates various concerns. To manage the complexity, distributing tasks among specialized developers can help, but maintaining consistent models remains a challenge. The paper investigates how UML features can assist in developing coherent models.

For data exchange in the OSGI platform, services use Java objects based on the Eclipse Modeling Framework (EMF) meta-model, which is favorable but not mandatory for SENSORIA tools. Using EMF enables the direct application of EMF-based transformation tools like VIATRA.

One issue with UML models exported from tools like Rational Software Architect (RSA) is their large size, catering to numerous development concerns. Analysis tools prefer simpler specialized models. This work suggests transforming UML models into simpler meta-models, facilitating easier linearization and usage by other transformation tools. Using EMF as the modeling framework in this context aligns with SENSORIA goals.

The methodology begins and concludes with UML models; it involves analyzing a UML project, extracting formal content, performing analysis, and reflecting results back into the UML model. Tools such as ForLySa and PEPAdaptWorkbench are integrated, and using VIATRA enables flexibility in the BMDSD approach.

Ultimately, the work aims to establish a framework to ease barb construction and formalize BMDSD, potentially in an algebraic context. This could structurally support the process and aid in backward transformations from the analysis to the UML model, particularly when correcting errors found by the analysis. While initial "ad hoc" results are available, a comprehensive error reflection theory is still under development.