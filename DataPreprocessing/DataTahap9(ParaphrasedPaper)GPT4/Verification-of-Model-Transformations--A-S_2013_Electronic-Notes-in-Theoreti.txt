This paper presents a thorough examination of the literature on verifying model transformations within the context of Model-Driven Engineering (MDE). MDE is a software development method that prioritizes models, using automated processes involving model transformations to guide system development. Ensuring the reliability of both models and their transformations is essential for the production of high-quality software.

The paper identifies three main aspects of transformation verification: the transformation itself, the properties being verified, and the verification techniques. It advocates for a comprehensive approach to these aspects, incorporating examples of verifiable transformation aspects and indicating how verification can be achieved.

The core of the study is the proposal of an integrated verification environment to address the diverse challenges associated with transformation verification. The paper discusses the verification properties of a transformation and categorizes them into those related to the computational aspects of transformation languages and those related to the models.

Verification techniques reviewed include theorem proving, model checking with its known state-explosion problem, and testing, which can show the presence but not the absence of errors. Additionally, static analysis and other property satisfaction strategies are considered.

For specific verification properties, such as typing and model semantics relations, the paper highlights the challenges in ensuring these attributes are met. The paper also insists on the importance of avoiding redundancy in transformation rules.

The paper concludes by asserting the necessity of a multi-logic, heterogeneous specification framework to address the different aspects of MDE-built systems, comparing this need to traditional software systems. It suggests the heterogenous tool set (Hets) as a potential platform to support such specifications, acknowledging that incorporating MDE components into the theory of institutions and establishing translations for different logics is a complicated but necessary task.