In this paper, the authors introduce a capacity planning framework developed for the Performance Evaluation Process Algebra (PEPA) and integrated into the PEPA Eclipse plug-in. PEPA is a formal modeling language used to represent complex interacting systems compositionally. In these models, various types of processes are outlined to interact through shared activities, which can then be evaluated numerically to derive performance metrics related to the actual systems being studied.

The forecasting capability is particularly valuable for designing services, allowing architects to model and compute response times under specific loads and to decide on the optimal number of different components, such as web and database servers, to deploy. This requires consideration not only of how many servers to use but also the types and configurations of each component in the system.

Within the PEPA models, activity rates are specified, with the symbol 't' indicating a passive cooperation between components, affecting how activities are enabled or restricted and thus influencing performance. An example PEPA component might perform an activity at a particular rate and then transition into a new process once that activity is complete.

A noteworthy challenge is balancing the performance of the system, measured in throughput or average response time, with the costs associated with achieving that performance. Modellers can set a target performance value and direction (seeking either a high or low value) and are responsible for determining the relative costs, as the model's rate units don't define actual monetary values.

The paper provides a real-world case study from the SENSORIA project, focusing on the course selection phase at a hypothetical virtual university, illustrating how the PEPA model can be applied to ensure responsive service during peak enrollment periods.

The study showcases the computational efficiency of the modeling framework, solving numerous individual models quickly on a standard desktop computer and emphasizing the importance of relative computation times within the optimization process.

In conclusion, the paper asserts that incorporating heuristic search and capacity planning into modeling software is highly beneficial, and the authors note that these features have been implemented in the PEPA Eclipse plug-in as of October 2014, highlighting the significance of well-designed user interfaces in such tools.