This paper presents an automatic method for verifying refinements in action system models by converting each simulation condition into a CTL model checking problem. Action systems are used to model parallel and reactive systems, and traditionally, refinements within these systems are supported by interactive theorem provers. However, this approach has shifted towards automated verification techniques, such as model checking.

The novel approach described in the paper involves encoding each action system simulation condition as a Kripke structure, referred to as a simulation machine, and then verifying it using CTL (Computation Tree Logic) model checking. By encoding the simulation conditions separately, the need to construct the entire state space of both the abstract and concrete systems is avoided, making the properties to be checked simpler.

The paper is structured to provide an overview of action systems, action system refinement, and CTL, followed by a detailed explanation of the proposed representation of action system simulation conditions as model checking problems. A case study is presented to illustrate this approach, and the conditions are encoded using the SAL model checking tools.

Key points include the use of Kripke structures and CTL properties to capture necessary actions and states in the action systems, ensuring the completeness of the transition relation for model checking. The authors also discuss limitations such as the finite and manageable size of system types for model checking, acknowledging that future work could extend to other forms of refinement and overcome these limitations with new advances in the field.