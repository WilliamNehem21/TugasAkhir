The paper discusses how to handle the subscripts of nominal terms that are used for sorting purposes. Subscripts are often omitted when their meaning is obvious or irrelevant. The authors refer to a certain element, represented as "[a]t", as an abstraction, indicating that it is not a direct component of the language discussed, since the authors have not defined a way to introduce pairs of terms. Instead, they utilize product sorts to categorize transition relations, which is further elaborated in section 3 of the document.

They describe "fa(t)" as the set of atoms "a" in "a(t)" that appear in term "t" not enclosed by any abstraction "[a]tj" with regards to some term "tj". This set, "fa(t)", is denoted as the set of free atoms of "t". For instance, in the term "f([a]g(a, b))", the set of free atoms is just "{b}", and in the term "g(f([a]a), a)", the set of free atoms is "{a}".

A nominal term is defined as closed if it contains no variables, otherwise, it is open. Examples of closed terms are "a" and "[a]f(b)", while examples of open terms include "x" and "[a]y". An important distinction is made that the terms "a" and "[a]f(b)" are not considered binding-closed.

The paper also mentions a basic formulation of open bisimilarity that does not include distinctions (further details in section 5.2). It's crucial to note that the definition involves considering all possible substitutions at each step within a bisimulation game.