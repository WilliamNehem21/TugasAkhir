Cloud computing has transformed the development and delivery of applications by offering on-demand computational and networking resources. This new paradigm allows organizations to outsource resource management to cloud providers, thus reducing operational and management expenses.

The success of cloud computing has led to the provision of higher-level services, such as platform services, that alleviate the complexities of setting up and managing execution environments. The scope of these services has expanded to assist with the design and development of cloud applications.

Security concerns arise with virtualization and the use of shared physical hosts, which introduce risks of data exposure and hypervisor attacks. Applications distributed across public clouds are also vulnerable to network attacks, such as data leakage and denial-of-service attacks.

Security services can be categorized as reactive or preventive, with some able to detect and address ongoing attacks, and others designed to identify and prevent potential vulnerabilities.

This article examines vulnerability scanning tools and databases, noting that while malware and antivirus solutions are commonly used, vulnerability scanners are not as widespread in practice. The goal is to guide practitioners toward choosing the right tools and databases, addressing unexplored challenges valuable to the academic community. The article also explores how vulnerability scanning can be integrated into the application lifecycle to enhance cloud security and demonstrates that orchestrating scanning tools can lead to improved detection coverage.

Scanning can take place internally, where tools are deployed within the application environment and can utilize both static and dynamic methods, or externally, relying on accessible endpoints but potentially compromising accuracy. Client-server and standalone architectures represent different methods of deploying scanning tools, each with its own trade-offs.

Vulnerability databases (VDBs) are crucial for compiling information in scanning reports, often adhering to standards for identification and resolution of vulnerabilities.

The paper emphasizes that system administrators and DevOps personnel both play roles in addressing vulnerabilities, which may require revising application code and following a re-deployment and testing cycle.

A criteria-based framework is presented for evaluating scanning tools, with criteria including scanning accuracy, speed, and coverage. A systematic process for searching and selecting the right tools is described, and the academic article also includes a comparative assessment of vulnerability databases based on specified criteria.

The paper points out the diversity of security services offered by scanners and the role of organizations like NIST and OWASP in promoting security software. It further suggests that the trade-offs between tool complexity and target user expertise, as well as between modularity and scanning depth, are key considerations.

Overall, the article advocates for the strategic use of vulnerability scanning tools and databases, adapted to the needs of the application and its lifecycle, and suggests future research directions in semantic vulnerability databases, adoption of security standards, and the integration of semantic rules to enhance scanning accuracy and address the dynamic nature of security vulnerabilities.