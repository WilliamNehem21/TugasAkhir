This academic paper discusses the challenges faced by researchers in reverse engineering when selecting a standardized schema to represent information in graphs exchanged among tools. Schemas developed by different researchers are often incompatible, which typically results in the need to create new, tool-specific schemas. The paper presents a scenario for integrating schemas to enhance tool interoperability within reverse engineering.

The issue of establishing a standard schema for C/C++ languages is addressed, citing works by Ferenc et al. and Dean and Holt, which explore the complexities and propose methods for schema integration. The authors of this paper note the difficulty of citing and adapting existing schemas, leading to the development of their own schema for use with the rigi tool.

The paper argues for the benefits of easier information exchange between diverse tools and seeks to define a common semantic understanding to ensure effective interoperability. Schema matching is introduced as a means to identify the common parts between different schemas, enabling the creation of a unified schema that encompasses the matched elements.

Historically, the schema integration problem has been a challenge within both the database and artificial intelligence fields. Several solutions and approaches are discussed, including Jin et al.'s adapter for domain ontology and the automatic schema matching techniques surveyed by Rahm and Bernstein, who offer an algorithm called Cupid. Additionally, Madhavan et al.'s approach leverages past schema matches to inform new ones.

The paper also mentions classifications by Jin et al., categorizing schemas based on how they are defined (implicit or explicit) and where they are defined (internal or external).

An example integration of two schemas for C/C++ – cppdm and dmm – is detailed, explaining the process of integrating data from different fact extractors for various programming languages. The paper concludes with a call for further case studies to apply and refine the process for integrating schemas in reverse engineering and emphasizes the need for modification of the integrated schema to enhance reusability for specific reverse engineering tasks.