The underlying mechanism enabling various DNA applications is biomolecular computing, specifically DNA self-assembly. Eric Winfree and colleagues have extensively investigated this area, with some notable findings reported in references [17] and [18].

The intersection of biomolecular science and computer science is characterized by a fluid boundary, with each field enhancing the other. The high parallelism intrinsic to DNA computing lends itself to tackling complex problems like NP-complete problems. Conversely, applying mathematical theories from computer science helps to dissect and understand biological processes at the molecular level, modeling these processes to predict and investigate biological events.

The algorithm discussed in the paper focuses on building efficient DNA-based devices, prioritizing time saving over space efficiency. It uses a brute force approach, preparing all possible outcomes during bitwise operations and then combining them for a final result. Theoretically, this approach yields a satisfactory time efficiency, linearly related to the number of biochemical steps. Similarly, the amount of DNA oligonucleotides required scales linearly with the size of the input numbers.

However, in vitro techniques introduce potential errors during synthesis and analysis, complicating the scaling up of the algorithm. The nature of the computation process also presents a continuity challenge; it is nearly impracticable to extend the binary addition of two numbers to adding a third, due to the results being incompatible with subsequent computations. These limitations, amongst others, make the DNA addition algorithm presented less viable for practical use in DNA computing.

The paper also touches on the activation and connection of protein sites. Activation occurs when one site on a protein interacts with another, rendering the latter available for future connections. Subsequent connections are made after the activation of the appropriate protein sites, facilitating further addition steps.

To illustrate these biological processes computationally, Kuttler, Niehren, and Blossey (2005), in their work published in the Transactions on Computational Systems Biology and Lecture Notes in Computer Science, have modeled gene regulation using the pi calculus, specifically simulating cooperativity at the lambda switch. This simulation contributes to the interdisciplinary efforts unfolding at the crossroads of biomolecular computing and computer science.