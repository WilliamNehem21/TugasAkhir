The main objective of the Key Project is to facilitate and optimize the use of formal methods in practical software development environments. A significant outcome of this project is the development of the KeY tool, designed for specifying and verifying Java Card programs. This tool encompasses the KeY Prover, which is a combined interactive and automated theorem prover, utilized within the KeY Tool to evaluate programs and their specifications.

Understanding that the verification of substantial programs cannot be entirely automated, the user interface for the KeY Prover has been crafted to be both user-friendly and effective. This paper focuses primarily on the user interface aspects of the KeY Prover, rather than its technical intricacies, and introduces the concept of taclets, which are crucial for the interactive and automated creation of proofs in the KeY Prover.

The user interface displays a pane for navigating through multiple open proofs, a design selected over individual windows for each proof to simplify the process, especially when dealing with numerous proofs.

Unlike some systems founded on higher-order logic, where rule derivation is justified within a meta-logic, taclets maintain proof obligations within the same logical framework they operate in. The process for calculating proof obligations is further detailed elsewhere.

Currently, taclets are not interactively constructed through the user interface but are introduced in a text format and imported into the system by a parser. Future versions may introduce a feature to define taclets directly within the user interface.

The KeY System's effectiveness in education is highlighted by its integration into undergraduate courses, where students have successfully verified simple properties of Java programs using the prover. This success indicates that the user interface is accessible to novices after suitable instruction. More complex case studies, executed by more skilled members of the KeY group, showcase its capabilities.