Code injection remains a critical threat in cyber security, with a focus shifting from traditional signature-based detection to the adoption of machine learning, particularly deep learning, for more effective attack mitigation. While general intrusion detection has been well-studied, preprocessing—a pivotal component in machine learning and specifically for coding injection detection—has received less attention. This survey addresses this gap by evaluating and categorizing existing methods, highlighting the significant impact of data preparation on detection performance.

Code injection, notably dangerous and prevalent, continues to top security vulnerability charts. Increased investments from major cyber security firms in machine learning, especially in neural network technologies, underscore its relevance across a variety of threat detection domains. The diverse preprocessing steps explored in scholarly literature demonstrate their significance in improving the efficacy of intrusion detection systems.

Preprocessing is central to readying input data for analysis and training in neural networks, shaping it into structured multi-dimensional datasets. The preparation leans heavily on the handling of duplicates and the careful selection of test data to ensure valid output and system performance metrics.

Literature reviewing code injection attack detection types and methods, including tools for web application vulnerabilities, indicate that while tools exist for SQL injection detection, contemporary injection types may necessitate refined preprocessing to ensure proper detection. Deep learning, strongly represented in the literature for its adaptability to various data dimensions, shows promise in detecting extended malicious behavior.

Support Vector Machines (SVMs) and reinforcement learning also make appearances in the field, albeit reinforcement learning has yet to see application in code injection detection. Data collection and preprocessing methods, including tools like SQLMap for database fuzzing, demonstrate the variety available for quality data set creation.

Challenges persist in generating sufficient samples for effective model training. Generative adversarial networks (GANs) are among the different tactics employed to enrich existing data sets. The survey also touches on non-machine learning methods that can aid in generating datasets for testing defense systems.

In the realm of machine learning, parameter tuning is essential for optimizing performance, especially when handling smaller datasets. A diverse range of preprocessing steps—such as cleaning, reducing, reshaping, and encoding of data—is required for effective model functioning. Different strategies like principal component analysis (PCA) and dimensionality reduction techniques are used to condition datasets for better performance of machine learning models.

Future considerations include ensuring data quality prior to preprocessing stages, addressing potential biases inherent in dataset shuffling and division, and exploring feature selection methods that impact the training of models and their capacity to detect anomalies.

Visualisation techniques, adversarial approaches, and language translation methodologies are assessed for their contributions to intrusion detection systems. Data normalization, a delicate step, could potentially eliminate distinctive features and represents one of the many challenges in data preprocessing.

The survey concludes that a full preprocessing cycle with harmonized, stage-specific methods will elevate the accuracy and performance of machine-learning-based intrusion detection systems. The proposed cycle is a three-tier process incorporating pretreatment, feature-based preprocessing, and encoding-based preprocessing, facilitating improvements in attack detection. This new approach sets a foundation for enhancing deep learning applications within the scope of coding injection attack detection and wider cyber security efforts.