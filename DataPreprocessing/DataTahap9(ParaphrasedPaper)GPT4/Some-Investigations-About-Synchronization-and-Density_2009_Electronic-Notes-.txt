This paper discusses the application of a genetic algorithm (GA) to search for Cellular Automata (CA) rules that exhibit specific computational behaviors. Two key computational tasks are the focus of the study: the synchronization task (ST) and the density classification task (DCT). These tasks have traditionally been explored using 1D cellular automata with some exploration of DCT in 2D spaces using the Moore neighborhood.

The researchers explore ST and DCT in a classical 1D space with rules of radius 2 (32 bits) and radius 3 (128 bits), as well as in 2D spaces using von Neumann and Moore neighborhoods, with rule sizes of 32 and 512 bits, respectively. The paper is organized as follows: Section 2 describes the two computational problems central to CA studies; Section 3 discusses previous applications of evolutionary algorithms to find suitable CA rules; Section 4 reviews historical experiments and presents current results involving ST and DCT in one- and two-dimensional CA lattices. Finally, the main conclusions of the work are presented in Section 5.

The paper highlights the challenges in designing CA rules that promote synchronization despite only local interactions being used. Evolutionary computation techniques other than GAs have been employed to discover such rules, with genetic programming also utilized for the DCT. A significant radius-3 rule with an 86% efficacy for DCT was found using a coevolutionary approach, which held up as the best-known rule until 2008 when over 100 rules were discovered with over 88% efficacy using an advanced evolutionary environment. The best rule from this set demonstrated an 88.99% efficacy.

The genetic search for radius-3 rules capable of executing the ST found several with 100% efficacy, whereas radius-2 rules performed poorly. Later research improved the efficacy of radius-2 rules for ST to over 90% by introducing additional parameters. The best known rule for ST, with a 96.4% efficacy, was found by Mariano and Oliveira.

The incorporation of a heuristic based on forecast parameters into a simple GA environment was an effective strategy for finding high-performance CA rules for both the DCT and ST. Experiments showed differences in performance between rules developed in one-dimensional versus two-dimensional contexts, with spatial arrangement influencing the efficacy of CA rules.

Findings also touched upon oscillations in performance depending on the size of the CA lattices (odd or even), and the significance of adaptive fitness evaluation. Starting with uniformly distributed lattices and progressively switching to a Gaussian distribution as the rules improve was a successful strategy. 

A heuristic related to backward and forward (bwlr) symmetry above 0.9 was used in the GA runs to find high-performance rules. Overall, this paper presents an extensive investigation into two classic computational tasks in the context of cellular automata, examining them in various neighborhoods and dimensions to better understand the effects on rule performance.