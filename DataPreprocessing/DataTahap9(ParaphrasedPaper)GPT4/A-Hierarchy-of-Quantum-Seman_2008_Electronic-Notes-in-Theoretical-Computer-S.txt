This academic paper discusses various ways to define the semantics of quantum programs, referring to different methodologies that can be used to represent the behavior of quantum computations. Abramsky's method involves semantics based on probabilistic power domains, while Selinger's approach assigns a completely positive map to each program. The focus of this paper is on introducing a semantic domain that consists of admissible transformations, specifically multisets of linear operators.

The paper then addresses the representation of quantum states and evolutions. It notes that quantum states can be represented either as pure states (vectors in a Hilbert space) or as mixed states (density matrices). For representing quantum evolutions, the paper identifies three potential formalisms: superoperators that act on density matrices, probabilistic functions that act on pure states, and the highlighted admissible transformations.

The paper offers a proof sketch based on induction for the semantics of quantum commands. It asserts that handling simple commands like skip, composition, and unitary transformations like the Hadamard gate (H), the phase gate (T), and the controlled NOT gate (CNOT) is straightforward. The proof becomes more complex with conditional commands (if statements), using key ingredients mentioned as reference points within the proof (3.11 and the equations [[ex2]]a = [[ex3]]a). 

Additionally, the paper notes that a quantum program containing a while loop leads to an infinite multiset within the admissible semantics framework, with each linear operator within the multiset corresponding to a possible computational path in the program's execution.