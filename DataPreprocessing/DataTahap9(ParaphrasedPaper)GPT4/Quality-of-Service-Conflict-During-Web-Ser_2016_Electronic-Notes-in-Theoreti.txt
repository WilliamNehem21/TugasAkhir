In this paper, the authors address the widespread adoption of web service technology for building Service-Oriented Architecture (SOA) applications, utilizing standards like SOAP, WSDL, and UDDI. Web services, which are characterized by their modularity, discoverability, reusability, and composability, are essential for maintaining the performance and accuracy of SOA applications.

The paper details the employment of two monitors from the FlexMonitorWS tool to track the performance of a clinical results web service. These monitors assess the quality of the service under different circumstances: when operating alone, when working alongside another monitor, and when functioning during a fault injection. A statistical analysis of these various scenarios is presented to showcase the impact on quality and the distinguishable levels of quality degradation.

The structure of the paper is as follows: Section 2 gives a foundation on SOA, monitoring tools, and FlexMonitorWS. Section 3 addresses the occurrence of Quality of Service (QoS) conflicts and their origins. Section 4 describes a case study that analyzes such a conflict, and Section 5 concludes the paper with its findings and suggestions for future work.

Monitoring tools are key in web service environments for enhancing service selection, enabling QoS-based comparisons, facilitating self-healing measures to maintain QoS attributes like availability and reliability, and detecting SLA violations.

However, the usage of monitoring tools can introduce intrusiveness to different degrees; this complexity increases with multiple monitors. Invasive methods can complicate code maintenance and decrease performance due to shared resources.

A specific web service system, the DCTR system, was examined. Developed in Java using JAX-WS API, it delivers clinical test results through various web services. The case study focused on the PatientService web service due to its frequent use.

The case study's goal was to explore the potential conflict between performance and accuracy during monitoring. A conflict is seen as a degradation in quality for either or both attributes. The study aimed to unveil the detrimental effects of monitoring tools as the primary conflict source. Two operations from the PatientService web service, namely getPatientName() and getPatients(), were chosen for investigation.

Accuracy is defined as the web service's ability to provide correct responses to service requests, measured by the error rate over time. High accuracy near one indicates reliability, while a low value signals a lack of trustworthiness.

Quality is often beyond a user's control, and a web service's behavior might change during runtime without the consumer's awareness. Monitoring tools can provide vital information on such changes, but they may also intrusively affect the quality of the web service. Therefore, determining the scope and methodology for monitoring is vital for balancing quality assessment and service disruption.