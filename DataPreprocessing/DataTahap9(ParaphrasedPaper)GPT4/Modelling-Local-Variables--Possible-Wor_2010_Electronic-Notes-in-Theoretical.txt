This paper addresses a particular challenge in category theory by examining the concept of density. The authors investigate how a small, complete subcategory, referred to as D, within a larger category C, can be considered dense if there exists a canonical functor that fully embeds C into the functor category set^D in such a way that it remains locally small. The application of density leads to significant progress in modeling theoretical programming languages, specifically an 'idealised Algol.'

The paper utilizes the foundational concept of density within category theory to provide a powerful modeling technique for 'idealised Algol,' a version of the Algol programming language. The authors achieve two main results: a functor-category model of idealised Algol and an object-spaces model of a related version of Algol that is controlled for interference, both without any unnatural size limitations. Importantly, they establish a full embedding between these two models.

However, the research encounters a challenge in that standard notions of density are not sufficient. The authors demonstrate that a more nuanced form of density, enriched with the category CPO (Complete Partial Orders), is necessary. To reinforce this claim, a counter-example is presented in section 5 of the paper that highlights the limitations of ordinary density. After this, the authors prove that they have the required CPO-enriched density.

Idealised Algol is constructed on three base types: 'comm' (commands), 'nat' (natural-number expressions), and 'var' (assignable variables). As an applied simply-typed lambda calculus, its types are derived from these base types through product and function operations, and its syntax combines elements of lambda calculus with additional constants that facilitate imperative programming and recursion.

The authors also engage with the problem of naturally and appealingly modeling object spaces for the category theory component. The most straightforward solution would be to constrain the study to a full subcategory of a set of objects, perhaps those used to interpret base types. However, this approach can erase the necessary separation between the syntax of the language and its mathematical model, which should ideally be established without direct syntactic dependency.

The ultimate goal is to identify a small dense subcategory of FQop that is closed under finite products. From this, a cartesian closed category of presheaves over this subcategory can be constructed. It will then be possible to fully embed FQop into this category while preserving product operations, which allows the authors to assign semantics to idealised Algol in the manner outlined in the paper.