In this study, the authors assess the performance of a second-order Particle-In-Cell (PIC) algorithm, which incorporates second-order finite elements and ghost particle representations to model charge distribution. The algorithm is compared against a first-order PIC implementation across different computing platforms.

The Warp code, developed at Lawrence Berkeley and Lawrence Livermore National Laboratories, uses a second-order leapfrog method and an electrostatic Poisson solver for simulating high-intensity ion beams. Variants of Warp include adaptive mesh refinement and two-dimensional and three-dimensional electromagnetic versions.

The second-order algorithm employs weighting functions to deposit charge and adjusts the weighting from second to first order near boundaries. Tests show exact charge conservation within round-off error limits. Further testing is needed for three-dimensional problems with intense fields.

Empire-PIC uses the PIC method to simulate plasmas on an unstructured grid, where particles carry electric and magnetic field properties. Particle velocities are updated using the electric field, and positions are adjusted according to the timestep size.

Particles deposit charge back onto the grid nodes using atomic operations to avoid errors from concurrent updates by multiple threads. The second-order algorithm calculates the electric field on each subparticle, and the true particle field is found by summing these contributions.

The study uses a two-dimensional two-stream instability problem and Landau damping problem to benchmark performance differences between first and second-order implementations. Simulations with varying particle counts assess scalability, while memory bandwidth usage is analyzed to determine the code's reliance on memory.

Performance comparisons show the NVIDIA Tesla P100 GPU outperforming Intel systems, but similar scaling is observed in first-order simulations across modern architectures. Bandwidth variations upon transitioning to second-order problems are noted and require further investigation.

While second-order methods lag in performance and scalability compared to first-order methods, advancements in hardware suggest they are becoming more practical. Significant performance issues arise from field weightings and basis function calculations, which require atomic operations and point conversions.

This paper documents the initial evaluation of the electrostatic second-order algorithm and its behavior on different computing platforms. Future research plans include conducting a convergence analysis, resolving performance issues, and extending the algorithm to include electromagnetic simulations.