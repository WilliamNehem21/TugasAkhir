The paper discusses the concept of term degree, specifically the degree of a variable 'x' in a term 'm', which is defined as the count of 'x's free occurrences in 'm'. When analyzing resource reductions, distinct occurrences of 'x' might be denoted as 'x1', 'x2', ..., 'xk'.

From the perspective of resources, terms in the discussed calculi correspond to call-by-value ones. If terms with marked lambdas, denoted by 'lxt', are disregarded, the syntax remains identical. Operational semantics distinguish the terms, and when defining the Taylor expansion for call-by-need, it is done similarly to call-by-value. Applying Corollary 2.8 becomes straightforward with the definition of parallel reduction. Analysis of the calculus dynamics allows for setting bounds on size and depth.

The introduced coherence relation enables term comparison with identical structures. If two coherent terms contain redexes, sequential reductions can lead to coherent reducts, although coherence is not generally preserved through reductions. This is further detailed in a pertinent lemma.

The paper also references the work by Ehrhard and Guerrieri, who formulated a calculus for analyzing the relations between Taylor expansions and reduction strategies, enabling embeddings of call-by-name and call-by-value. Guerrieri and Manzonetto further studied these embeddings in relation to their operational semantics. The authors discuss their finiteness result within this context.

The authors have established definitions necessary for investigating Taylor expansions in different contexts, each requiring unique proof methods. One potential extension of the research is to generalize these results uniformly, referencing their collaboration with Vaux-auclair on linear logic-proof nets. Established embeddings of call-by-name and call-by-value into proof nets could facilitate syntactic analysis concerning Taylor expansions' commutativity with these embeddings. It would also be intriguing to construct proof nets for call-by-need, bang calculus, and programming language PCF.

The paper describes a particular calculus where 'c' is identified as the term 'c1[lxc2]u', and through induction, it is shown that when transforming 'c' following certain rules ('c' undergoes a transformation when 't' within 'c2' changes), the resulting term retains a coherent structure as denoted by 'c = c1[lxc2[t]]u'. Another case discussed deals with the calculus where 'c' equals 'c1[lxc2]tj', leading to transformations that preserve the structure under specific conditions, again validated by induction.