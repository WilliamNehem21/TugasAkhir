Model-Driven Development (MDD) has proven to be highly effective for creating standard business software, as many MDD solutions cater to this sector. Nevertheless, the incorporation of non-functional requirements such as quality of service, adaptability, assurance, and security is often inadequate. For typical business applications, this level of non-functional support is acceptable.

In this paper:

- Section 4 details a model-based toolchain designed for the creation of secure, platform-independent applications.
- Section 5 presents a case study of the toolchain applied to the air traffic management industry.
- Section 6 summarizes the paper's content and conclusions.

The paper notes that although MDD makes the properties of the target platform less pivotal, a dependable and efficient execution environment remains integral to developing successful systems. The paper highlights the Common Object Request Broker Architecture (CORBA) Component Model (CCM) as an ideal platform for building large, distributed systems, due to its support for automated deployment and simplified usage of CORBA services. The secure middleware adopted in this study includes QEDO (an implementation of CCM) and an enhanced security framework called OpenPMF, both built on the secure CORBA ORB called MICO.

This secure middleware utilizes Quality of Service (QoS) enablers for implementing access control policies through a Policy Management Framework known as OpenPMF. QoS enablers work with OpenPMF to retrieve security policy updates to enforce at runtime.

Similar to UML, the authors utilize Extensible UML (EUML) to support custom-defined UML profiles, like a security profile (EUMLSec) designed for security policy modeling. EUMLSec enables the integration of security aspects, such as Role-Based Access Control (RBAC), into system design, complete with extended stereotypes like <<security role>> in the EUML metamodel.

The paper also discusses transforming Platform Independent Models (PIMs) into SecureMiddleware Platform Specific Models (PSMs). The expanded CCM metamodel - CCMsec - integrates security concepts like role definitions and permitted operations, forming part of the transformation process within the toolchain.

Models can be transformed into SecureMiddleware-specific ones using the QEDO Modeler, an Eclipse plug-in, which allows modification of CCMsec models to include additional non-functional requirements. It facilitates synchronizing with the CCMsec repository for model management.

The paper further describes assigning permissions to roles, such as a controller role with permission to execute all operations of a "command" interface.

Finally, the paper showcases the use of the toolchain in developing a secure air traffic control visualization application within the European AD4 project. The toolchain, along with SecureMiddleware, supports common security models like RBAC and Mandatory Access Control and allows for expansion to other models. It can generate rules for both component interaction and underlying infrastructure daemons.