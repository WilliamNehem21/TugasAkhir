This academic paper discusses the necessity of combining web services to accomplish complex tasks on the internet and investigates automated methods for web service composition and its computational complexity.

The paper is structured as follows:

1. Section 2 revisits the concept of finite automata and defines what a web service is.
2. Section 3 presents essential definitions and initial results, which will be fundamental for the rest of the paper.
3. Section 4 outlines the composition problem by aiming to create a web service combination that meets a specific goal based on available services.
4. Section 5 explores the computational complexity involved in service composition.
5. Section 6 presents two different solutions to the composition problem.
6. Section 7 mentions several unresolved issues in the area.

The paper discusses two perspectives on defining goals for service composition. One view suggests that goals are conditions described using the EAGLE language, focusing on structuring a set of web services into a business process that fulfills these conditions. Another perspective defines goals as finite automata with inputs and outputs, meaning that the service composition should emulate the behavior of the given finite automaton. This paper specifically addresses automating the composition based on the latter concept, leading to a decision problem related to automating the composition as defined in the second approach.