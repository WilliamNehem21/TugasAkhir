We developed an algorithm to precisely calculate integrals on a specific kind of self-replicating spaces and measures as defined by Hutchinson. This algorithm was designed in a hypothetical, ideal lazy functional programming language, and we used domain theory to confirm that it works properly. This work extends a prior algorithm created by Alex Simpson for exact calculation of Riemann integrals on the real number line. We also put our algorithm into practice using Haskell, a functional programming language, and reported some initial findings.

There are many ways to represent real numbers for computational purposes. Some methods represent reals as abstract data types, like interval domains, while others integrate reals into existing data types, using structures like infinite digit streams, as researched by Kreitz and colleagues.

We found that any space with invariance properties we define can be produced by a set of contractions with computable real number representations. This proof will be provided in section 3.5 of the paper. However, we currently illustrate this with a few examples.

The key quality of the real line that inspired prior algorithms for integration is also essential to all invariant spaces. This quality is also a fundamental feature of invariant measures on such spaces. In other words, every space that this integration method can be applied to is, by definition, an invariant space with respect to some given set S, and the reverse is also true.