This paper introduces a novel approach to managing multiagent system coordination by using a constructionist, bottom-up method. It treats coordination issues among autonomous agents as constraint optimization challenges and puts forth a distributed, asynchronous algorithm to calculate possible coordination outcomes. The paper also demonstrates how this algorithm can be implemented in a practical coordination mechanism suited for real-world applications.

Traditionally, coordination in multiagent systems has leaned toward a reductionist philosophy, which breaks down large tasks into smaller ones and assigns them to specific agents, organizing their interactions through predetermined patterns. However, such systems must navigate uncertainties and ensure coherent local behaviors among agents despite having incomplete or inconsistent information concerning the overall task.

Contrastingly, the constructionist approach views agents as aiming to fulfill their local goals and interact to enhance their goal achievement levels. To handle the overall task, this approach necessitates a coordination mechanism that guides agent behavior in a direction between self-interest and group benefit, which was previously articulated in our work on structural cooperation.

Delving into the specifics, this paper details an algorithm for structural cooperation via distributed, constraint-based search and its practical applicability to a certain domain. Following an explanation of the coordination context, the paper introduces a distributed constraint optimization algorithm capable of computing potential coordination outcomes and applies it to a real-world case study. Finally, the paper concludes by addressing the algorithm's properties and envisages future evaluations and improvements, including a comparison with centralized systems and refining the algorithm's computational efficiency.

An essential aspect of this approach is a cooperative strategy where agents consider both their objectives and Pareto optimality, ensuring that no opportunity to improve—or at least not worsen—the situation for all agents is overlooked. Agents update and exchange information through messages, including updates on their plans or authority levels, notifications about infeasibilities (nogoods), and solution proposals.

The reported algorithm is particularly suited to systems with an inherent distribution of tasks, such as spatial distribution or access restrictions, rather than being designed merely to tackle computational complexity. Through parallel, asynchronous computations and selective messaging, the algorithm ensures limited communication loads and prunes the search space using nogoods.

The practical application presented in the paper involves structural cooperation in an urban traffic management scenario called trysa2. In trysa2, autonomous agents jointly manage a traffic network by utilizing various traffic control devices, demonstrating the algorithm's effectiveness in real life.

Future work includes assessing the structural cooperation mechanism and the underlying algorithm in other domains and improving computational efficiency by integrating different stages of the coordination algorithm.