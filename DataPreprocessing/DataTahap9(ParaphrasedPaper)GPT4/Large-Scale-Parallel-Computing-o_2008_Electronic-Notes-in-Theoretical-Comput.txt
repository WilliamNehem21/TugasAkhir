The study contends that computational grids have potential beyond simply parallelizable tasks. Techniques such as latency-hiding and exploiting data locality can be leveraged to achieve high performance on grids connected by slower wide-area networks. Additionally, with the rapid growth in wide-area network bandwidth, even communication-heavy applications can be effective on grids if the algorithms can tolerate latency.

The paper demonstrates this through three case studies involving large-scale parallel computing on grids to search vast state spaces: transposition-driven searching, retrograde analysis in games, and model checking. Empirical results from the advanced DAS-3 grid, which integrates a dedicated optical network, are presented.

Furthermore, the paper explores the optimization of algorithms and applications for grid environments, focusing on large state space searches. It starts by examining how a heuristic search algorithm, previously optimized for grid computing, operated. The paper then delves into a more detailed case study: a retrograde analysis application to solve Awari, a game with 900 billion states, which required several adjustments for effective performance on the DAS-3 grid. Finally, the paper discusses initial findings from using the DIVINE model checking toolkit on DAS-3 and suggests it shares similarities with the Awari solver, making it a suitable candidate for further research.

The paper argues that DAS-3, which is structured hierarchically with multiple clusters linked by both fast local and slower wide-area networks, is indicative of future grid systems. The DAS system's role as a controlled experimental environment is underlined since it facilitates clean experiments on parallel algorithms.

The core narrative involves optimizing applications to handle high-latency wide-area network connections by being latency-tolerant, which is becoming more achievable as bandwidth increases much faster than CPU speeds. They discuss heuristic algorithms, noting that parallel processors can independently analyze different parts of a search space and use techniques like work stealing for load balancing. Communication is asynchronous, which allows for communication and computation to overlap and hide latency, provided sufficient network bandwidth is available.

The paper describes load balancing and the importance of balancing the advantages of randomness against the drawbacks of locality loss and network processing overheads. It acknowledges that the described highly asynchronous algorithm does assume a homogeneous execution environment.

Additionally, the authors delve into their recent work with distributed supercomputing for large search applications and discuss implementing a retrograde analysis program for the game of Awari on the DAS-3 system, which demanded high volumes of data transfer over a local network. They address the challenges encountered when adapting this application to a grid environment, like controlling flow and managing memory by using synchronization methods.

The model checking aspect is explored through DIVINE's use of the linear temporal logic (LTL) approach for verification problems, such as cycle detection in state space graphs. Initial performance analysis using benchmarks from the BEEM database is presented, showing that the entire state space needed to be examined due to the absence of violations of the properties checked.

In conclusion, the paper finds similarities in performance characteristics between retrograde analysis and model checking applications and expresses interest in further optimization research. The study also emphasizes the necessity for development environments that simplify the programming and deployment of grid applications, which is the focus of their ongoing research.