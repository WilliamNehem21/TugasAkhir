The paper investigates the use of an ensemble approach in parallel quantum computing (PQC) for achieving additional speed improvements. The study highlights that, apart from the inherent quantum parallelism of superposed quantum states, PQC can facilitate a type of classical parallelism similar to single instruction, multiple data (SIMD) operations found in classical computing. This parallelism is realized by having multiple quantum systems, such as molecules, working simultaneously.

In the architecture of the PQC, a part of the quantum state is prepared in a mixed state that serves as a communication channel between quantum computers, while the rest of the state consists of pure states acting as argument registers for individual quantum computers. The authors demonstrate that this PQC architecture can further speed up significant quantum algorithms like Grover's algorithm and Shor's algorithm, with unsorted database search seeing potentially substantial speed gains.

The paper draws parallels between the state of the PQC and multi-threading programming in classical computing. In multi-threading, a process can execute several threads at once, potentially sharing common memory. The quantum state in the PQC, which resides in Hilbert space, is seen as a shared global memory, accessible by all quantum computers in the ensemble.

The PQC concept revolves around running many instances of quantum systems, known as the ensemble, concurrently to gain computational speed. The essence of parallel quantum computing is the simultaneous operation of n1 quantum computers. While the computation performed by each quantum computer can be identical, the databases or numbers they represent may differ.

The paper also examines how memory transactions can be carried out atomically to prevent conflicts arising from concurrent access to shared variables. In the event of such conflicts, transactions would be restarted to maintain consistency.

Furthermore, the paper reviews state vectors represented as monads and the density matrix approach within the context of the functional programming language Haskell. The authors propose the integration of superoperators, within the framework of arrows, to facilitate access and manipulation of specific parts of the global quantum state by parallel and distributed processes. The discussion includes the creation of a shared quantum state between two parties, Alice and Bob, based on the proposed structure in section 2 of the paper, with an identifier qubit demarcating whether the state belongs to Alice or Bob.