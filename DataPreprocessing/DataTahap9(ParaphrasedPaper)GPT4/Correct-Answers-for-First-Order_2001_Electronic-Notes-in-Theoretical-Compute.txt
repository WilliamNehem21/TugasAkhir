This paper discusses the challenge in logic programming of balancing operational expressiveness, which controls how a program executes, with maintaining a clear declarative meaning. The authors propose new definitions for correct answers and resultants within the entire first-order logic framework, including both classical and intuitionistic logic. They demonstrate how a key aspect of logic program semantics, groundness, can be adapted to fit within their proposed framework. Their definitions are versatile and can be slightly modified for use in various logical systems with standard quantifier rules, such as linear or modal logic.

The paper highlights that, compared to existing definitions, their approach to correct answers and groundness leads to more intuitive outcomes and a more streamlined theory. The authors also address the need to manage nondeterminism in abstract interpreters, which is a well-studied issue in automatic deduction. They suggest employing unification as a common strategy to reduce nondeterminism when introducing quantifiers. The goal is to integrate unification into their framework seamlessly, without significant changes. The authors aim to create an abstraction for proof skeletons that incorporates extra-logical variables, which would allow optimal abstract operators to compute semantics through unification automatically.