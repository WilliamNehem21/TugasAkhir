The paper is structured into several segments. The second section reviews previous research, while the third outlines the research problem. Section four presents the fundamentals of query optimization. Section five introduces a variety of stochastic query optimizer designs, and section six details the design of cost coefficients and the experimental framework. Section seven provides a discussion of the results.

The study focuses on the use of natural genetics, noting that genetic algorithms—stochastic methods fostering high-quality solutions with minimal time complexity—work on a population of potential solutions and apply processes like selection, crossover, and mutation to enhance results.

The paper introduces and implements the designs of a simple genetic query optimizer (SGQO) and a natural genetic query optimizer (NGQO) based on the Rho and March approach, as well as two constrained stochastic query optimizers—RSQO and ERSQO—with ERSQO incorporating genetic algorithms alongside Havrda and Charvat entropy. The internal workings of various stochastic optimizers for distributed decision support system (DSS) queries are described.

SGQO, designed for the operation site allocation of distributed DSS queries, begins with a randomly generated initial population. Its chromosome structure is based on the number of operations and sites, with its length set to one fewer than the number of operations.

Five distinct query optimization strategies for distributed DSS queries in a distributed setting are discussed. While exhaustive enumeration is impractical for complex queries, SGQO suitably optimizes moderate to complex queries. NGQO eliminates redundancy in chromosomes but can suffer from a lack of diversity. RSQO and ERSQO aim to improve upon NGQO by enhancing chromosome design and integrating entropy to address low diversity.

For performance analysis, a set of ad-hoc distributed DSS queries based on the TPC-DS benchmark database—which reflects customer and sales data—is tested. These queries, formulated as relational algebra expressions, range from one to ten join operations to observe the effects of varying join operations across queries executed on a distributed database.

Using designated decision variables and cost coefficients, the paper determines local processing costs and communication costs per query. Experiments are repeated multiple times to obtain average results for the stochastic approaches to ensure reliability.

The experimental results indicate that increasing replication rates from 20% to 90% reduces total DSS query costs. Accounting for solution quality and runtime, ERSQO surpasses SGQO, NGQO, and RSQO. A statistical relationship shows a positive correlation between the number of join operations and the total DSS query costs, with ERSQO consistently offering more stable results compared to other optimizers.