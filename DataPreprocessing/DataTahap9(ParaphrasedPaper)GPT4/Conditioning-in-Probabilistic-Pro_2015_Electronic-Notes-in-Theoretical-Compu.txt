In recent years, the interest in probabilistic programming has surged due to its usefulness in a variety of fields, such as leveraging Bayesian inference for statistical models in machine learning and defining cryptographic operations and security protocols. This growth has made related concepts more accessible to programmers. Numerous languages for probabilistic programming have been developed, including both established ones like Church and newer options like Probabilistic C, Tabular, and R2.

To enhance probabilistic programs to handle conditional expressions, an extension of the Probabilistic Guarded Command Language (pGCL) was developed, named Conditional pGCL (cpGCL). This extension adds the ability to include observations in the code through the 'observe(g)' command, where 'g' is a Boolean expression tied to the program variables. Executing the 'observe' command filters out any program paths that do not satisfy the condition 'g', and adjusts the probabilities of the valid paths so that their total probability equals one.