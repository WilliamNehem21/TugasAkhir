This academic paper discusses the importance of quickly updating data from row-based to column-based data stores to support real-time analytics. The timeliness of data synchronization is critical to the relevance of the analytics. This process involves three stages: transferring the data update, converting the data from row to column format, and merging the updates into the column-based data store. Hybrid Transactional/Analytical Processing (HTAP) databases aim to streamline these steps to ensure analytical data remains current. TiDB, for instance, only saves the necessary transaction logs and discards extraneous data before conversion.

The paper highlights a lack of micro-benchmarks for HTAP databases, as they are mainly proprietary and not open-source. The authors have designed a new micro-benchmark to address this gap and compare it with traditional macro-benchmarks. They have chosen OLXPBench as a reference point for their micro-benchmark, which better evaluates real-time analytics by controlling data freshness rates and access granularity. Micro-benchmark queries usually consist of a single operation, such as counting the number of rows in a certain range, enabling precision in managing query computational intensity.

Furthermore, the authors explore the deployment strategies for transactional and analytical instances in HTAP databases, recommending co-location on the same server for efficient delta updates. They consider databases like SingleStore and OceanBase, which use unified storage and provide effective resource isolation between transactional and analytical processes.

The paper discusses several benchmarks for evaluating HTAP databases, including CH-benchmark, CBTR, and benchmarks tailored for read-only and hybrid transactions like FIBenchmark, TABenchmark, and SUBenchmark. Notably, HAttrick includes transactional workloads similar to TPC-C and measures new metrics like throughput and data freshness.

The ADAPT and HAP benchmarks abstract basic HTAP operations but offer a limited scope and are also closed-source. The authors argue that micro-benchmarks should incorporate different types of scan queries to optimize HTAP database indexing and measure data update propagation capabilities by accessing identical columns for both read and write operations.

Lastly, the paper provides technical specifications for the server and client hardware used in their experiments and outlines the software environment involving Ubuntu 20.04 and a 10Gbps Ethernet network.

In summary, this paper presents HTAP database strategies aimed at balance between real-time analytics and performance isolation and evaluates various benchmarks and benchmarks schemas, workloads, and evaluation metrics, all while proposing a fresh micro-benchmark designed for greater scrutiny of HTAP database performance.