The paper describes a framework of 22 mutation operators, which are categorized into eight classes and organized across three different analysis levels: Statement Analysis (SAL), Predicate and Domain Analysis (PDA), and Control and Computation Analysis (CCA). The SAL level involves modifications to individual statements, like replacing statements with traps, continues, or returns, and altering labels used in goto and do statements. The PDA level involves working with expressions, such as taking absolute values, switching out one operator for a different type, or inserting unary operators before expressions.

Additionally, the concept of "n-selective mutation" is introduced where n refers to the number of top mutation operators that are intentionally omitted to reduce testing effort. For instance, a 2-selective mutation would exclude the two most effective operators, SVR (Scalar Variable Replacement) and ASR (Array Reference for Scalar Variable Replacement). A 4-selective mutation further excludes CSR (Scalar for Constant Replacement) and another instance of Scalar for Constant Replacement, although the latter seems to be a repetition or an error, since CSR was already mentioned.

The paper also cites a case study involving the use of the ESTEREL language and formal methods for validating the functionality of a commercial digital signal processor (DSP), as presented at the ERCIM Workshop on Formal Methods for Industrial Critical Systems held in Trento, Italy, in 1999. The authors, Arditi et al., advocate for the use of these techniques to improve confidence in the validation of such systems.