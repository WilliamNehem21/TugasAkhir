Abstract algebra serves as a robust foundation for mathematics while offering clear, symbol-based notations that simplify reasoning processes, often making model-theoretic approaches less cumbersome. Previous works such as Kozen's utilization of kleene algebra with tests for loop transformations and McIver, Cohen, and Morgan's probabilistic kleene algebra for protocol verification attest to abstract algebra's efficacy as a reasoning tool.

This paper introduces a new abstract algebra designed for probabilistic program analysis, extending the work of Meinicke and Hayes to a higher level of abstraction akin to Solin and von Wright's work on non-probabilistic programs. The abstraction's notation not only clarifies but also allows its results to be applied to various models, given sound axiomatization, and facilitates automation. Notably, our framework omits a probabilistic choice operator, arguing its simplicity and broad applicability to many transformation rules for probabilistic systems without this element.

We incorporate guards and assertions into our algebra, with guards forming a boolean subalgebra helpful in modeling predicates for conditionals and loops. Assertions are used analogously but differ in predicate-handling when the predicate is false. We also introduce operators for enabledness and determining the certainty of program failure, drawing parallels with the domain operator in relational algebra, familiar to those with computer science or discrete mathematics backgrounds.

To illustrate the practicality of our abstract algebraic approach, we apply it to reasoning about probabilistic action systems, demonstrating how to use enabledness and certain-failure operators to validate data refinement rules within these systems. Our examination of the axioms reveals adaptations from those familiar in kleene algebra to accommodate non-termination and weakened branching behavior.

Furthermore, we address the potential application of the weak-iteration operator, acknowledging its use in deriving a data refinement rule for probabilistic action systems under certain conditions. We explore conjunctivity as well, which, despite not being universally applicable to all probabilistic programs, holds for a subset excluding probabilistic choices.

Lastly, we present an abstract-algebraic framework for data refinement in action systems, capable of addressing concurrent behaviors in parallel or distributed systems modeled by interleaving atomic actions with a probabilistic aspect. We close by proposing future research directions, including the incorporation of angelic choice and a more abstract treatment of probabilistic choice, as well as the application of our algebra to more complex case studies.