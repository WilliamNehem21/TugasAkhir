The study examines the performance of a new elastic protocol within a network infrastructure and evaluates the overhead incurred when transitioning to clocked domains using a Globally Asynchronous Locally Synchronous (GALS) protocol. The network demonstrates high link utilization close to 100% and meets real-time requirements even at maximum network usage. Comparative analysis of three synchronization interfaces indicates that asynchronously designed interface logic approaches the efficiency of synchronous systems, but clock synchronization protocols can lead to significant extra overhead.

Elastic systems, akin to clocked systems, are composed of elements and communication channels. Elastic channels use two control lines, valid and stall, to manage the sender-receiver handshake. The sender pushes the data and valid signals down the pipeline, and the stall signal moves upstream as necessary. The protocol used in this system is akin to the Synchronous Elastic Flow (SELF) channel protocol.

Three types of interfaces are evaluated: 1) a GALS synchronization protocol with shift register buffering, 2) a fully synchronous protocol with its respective buffering, and 3) an innovative fast synchronizer with asynchronous buffering. Except for the completely synchronous interface (which doesn't require buffers), all interfaces have simple four-word-deep FIFOs for data buffering.

The network fabric designed in this work differs from traditional Network on Chip (NoC) designs in several major aspects: a) it employs a non-redundant topology, b) uses single-word transmissions that integrate all routing data, c) incorporates uncomplicated yet efficient routers and buffers, d) is available in both clocked and wholly asynchronous adaptations. These features yield a fabric characterized by minimal latency, high data transfer rates, and predictable maximum delay for all messages, assuming proper buffer space at network interfaces.

Two FIFO designs are implemented: one for clocked systems and one for asynchronous operations. The async FIFO has the upper hand, facilitating rapid data relay from end to end, compared to the clocked FIFO, which necessitates four complete clock cycles to transfer data through. The clocked FIFO consists of four smaller, elastic buffers.

Communication data in the prototype contains a payload to allow latency measurement, with each word including a 3-bit address, 6-bit timestamp, and control bits valid and stall, optimized to small values due to chip pin and area constraints.

The test circuit was fabricated using a simple digital cell library from the University of Utah, with some custom cells designed specifically for this project, including domino gates for the async FIFOs and a mutual exclusion element for the fast synchronizer. The reported results originate from ModelSim simulations of the netlist after extraction, which was sent for production. Simulations used a unit delay model, as the custom gates did not undergo timing characterization.