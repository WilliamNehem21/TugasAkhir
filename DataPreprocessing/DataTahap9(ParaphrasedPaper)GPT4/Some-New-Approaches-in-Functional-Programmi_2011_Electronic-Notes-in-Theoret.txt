In our study, we investigate recursion and corecursion within the realm of functional programming by examining the morphisms that represent them, with particular attention to catamorphisms, anamorphisms, and their combined form known as hylomorphisms. The core contribution is a novel approach to calculating the factorial function using hylomorphism. We demonstrate that hylomorphism offers an alternative computational method to traditional recursive programming techniques. This new approach is detailed using action semantics, a contemporary formalism for program description.

We delve into the category formed by F-coalgebras and their homomorphisms, emphasizing that recursive coalgebras—which are uniquely mapped to every algebra in the same category—are critical in conveying the relationship between coalgebras and algebras, especially in functional programming's use of initial algebras for recursion semantics.

Our paper utilizes the theory to present an example using hylomorphism as a fusion of anamorphism and catamorphism, mirroring the structure of recursive coalgebras based on the coalgebra-to-algebra morphism. We define a function with an `int` type argument that produces a list descending from n to 1, necessary for factorial calculation.

Action semantics, which incorporates yielders representing unevaluated data, identifies two main actions in the functional paradigm—evaluate and elaborate—excluding execution actions as functional programs generally avoid direct storage manipulation.

Moreover, we discuss naming conventions and variable bindings, differentiating between the global scope and the local scope as defined in 'let' and 'letrec' expressions, the latter allowing mutual recursion.

The paper summarizes the exploration of initial algebras and catamorphisms as recursion representatives, and their corecursive duals, terminal coalgebras, and anamorphisms. Recursive coalgebras, built upon a unique coalgebra-to-algebra morphism (hylomorphism), are used to conceptualize the link between recursion and corecursion. We exemplify this through the unconventional calculation of factorial numbers and outline future research that will further formalize these concepts using categorical structures such as monads and comonads.