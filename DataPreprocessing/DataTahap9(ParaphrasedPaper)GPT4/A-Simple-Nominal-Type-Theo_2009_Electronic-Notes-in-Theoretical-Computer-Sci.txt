Despite considerable exploration of proof systems for standard nominal logic, there has been a lack of focus on constructive methods. This study introduces a straightforward type theory for nominal terms, named SNTT, which integrates common types such as unit, pair, and function types with the names and name-abstractions characterizing nominal logic. The SNTT framework has proven to be sound and guarantees strong normalization. It can be represented through nominal sets and is readily extendable with recursion combinators. These combinators facilitate dealing with languages that include binding in a simpler and less complex manner compared to previous frameworks, though at the cost of some expressiveness. Potential expansions of this type theory into more elaborate type systems or broader aspects of nominal logic are areas for future research.