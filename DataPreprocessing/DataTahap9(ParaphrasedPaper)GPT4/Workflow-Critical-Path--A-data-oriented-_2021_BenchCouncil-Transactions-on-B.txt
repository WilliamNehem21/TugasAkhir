The paper discusses a metric called the Workflow Critical Path (WCP) designed to analyze performance across the entirety of high-performance computing (HPC) workflows. A prototype tool named CRUX was introduced for calculating WCP, offering an API for constructing workflow Performance Activity Graphs and computing WCP efficiently. Furthermore, CRUX includes a user interface (UI) that allows visualization of WCP data to help users understand the flow and bottlenecks within their HPC workflows.

The CRUX prototype can be set up both in the cloud, using Amazon Web Services, and on local systems through Docker deployment. To exemplify the data model, the authors chose the Neo4j graph database and used its Cypher query language for managing and querying data structures represented as nodes (vertices) and relationships (edges).

Despite its capabilities, the early version of CRUX faced some shortcomings when visualized with the Neo4j browser, such as the inability to highlight paths within graphs and poor performance scaling. The paper highlights the need for a more advanced UI for production environments.

Additionally, the authors note the importance of deploying at least one instance of the CRUX API server on one or more nodes of an HPC cluster, with private load balancers distributing the workload.

Following a series of tests and simulations, including the "droughthpc" example and a cloud-based testing environment on AWS, early results indicated that CRUX can efficiently calculate WCP, showing potential as a valuable diagnostic tool for HPC workflow analysis.

David Montoya contributed key insights and ideas, with Sonja Johanson and Yasodha Suriyakumar playing roles in testing and documentation. The research involved PSU students and was supported by both the Ultrascale Systems Research Center (USRC) at Los Alamos National Laboratory and the New Mexico Consortium, with funding from the U.S. Department of Energy.