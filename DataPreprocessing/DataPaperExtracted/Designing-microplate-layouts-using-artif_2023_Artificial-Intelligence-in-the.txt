ArtiÔ¨Åcial  Intelligence  in the Life Sciences  3 (2023) 100073 
Contents  lists available  at ScienceDirect  
ArtiÔ¨Åcial  Intelligence  in the Life Sciences  
journal  homepage:  www.elsevier.com/locate/ailsci  
Research  Article  
Designing  microplate  layouts  using  artiÔ¨Åcial  intelligence  
Mar√≠a  Andre√≠na  Francisco  Rodr√≠guez  ‚àó , Jordi Carreras  Puigvert,  Ola Spjuth  
Department  of Pharmaceutical  Biosciences  and Science for Life Laboratory,  Uppsala University,  Sweden 
a r t i c l e i n f o 
Keywords:  
Plate design 
Plate eÔ¨Äects 
Quality control a b s t r a c t 
Microplates  are indispensable  in large-scale  biomedical  experiments  but the physical  location  of samples  and 
controls  on the microplate  can signiÔ¨Åcantly  aÔ¨Äect the resulting  data and quality metric values. We introduce  
a new method based on constraint  programming  for designing  microplate  layouts that reduces unwanted  bias 
and limits the impact of batch eÔ¨Äects after error correction  and normalisation.  We demonstrate  that our method 
applied to dose-response  experiments  leads to more accurate  regression  curves and lower errors when estimating  
IC 50 / EC 50 , and for drug screening  leads to increased  precision,  when compared  to random layouts. It also reduces 
the risk of inÔ¨Çated scores from common  microplate  quality assessment  metrics such as ùëç ‚Ä≤factor and SSMD. We 
make our method available  via a suite of tools (PLAID)  including  a reference  constraint  model, a web application,  
and Python notebooks  to evaluate  and compare  designs when planning  microplate  experiments.  
1. Introduction  
In the era of data-driven  life science,  the amounts  of data produced  
are continuously  expanding,  and artiÔ¨Åcial  intelligence  techniques  such 
as machine  learning  algorithms  are seeing adoption  for many applica-  
tions in order to convert  the data into actionable  insights  [1‚Äì5] . While 
in many applications  the primary  focus has been to obtain as much data 
as possible,  the importance  of having data of high quality cannot be 
understated  [6‚Äì8] . For large-scale  biomedical  experiments,  many issues 
related to data quality pertaining  to human operations  can be eÔ¨Äectively  
reduced  or eliminated  by using automated  setups and robotised  equip- 
ment [9] . However,  several artefacts  due to physical,  biological,  and 
temporal  conditions  still remain,  and eÔ¨Äorts generating  large quantities  
of data can be fruitless  if in the end conclusions  cannot be drawn due to 
data-quality  issues. A common  approach  to increase  the conÔ¨Ådence  in 
the data is to perform  multiple  technical  and biological  replicates,  but 
this is associated  with higher costs and longer experiments,  and often 
leads to a trade-oÔ¨Ä between  the number  of samples  analysed  and the 
number  of replicates  per sample.  Another  approach  is to improve  the ex- 
perimental  design , with the aim to carry out the experiment  in such a way 
that it maximises  the conclusions  that can be drawn from the resulting  
data [10] . 
Microplates,  or microwell  plates, are standard  components  in many 
biomedical  experiments.  They are Ô¨Çat plates with multiple  wells used 
as small test tubes, organised  in a 2:3 matrix.  They come in a standard  
physical  dimension  to ensure compatibility  with diÔ¨Äerent  lab equip- 
ment, and typically  contain  24, 96, 384, or 1536 wells. Experiments  
‚àó Corresponding  author. 
E-mail addresses:  maria.andreina.francisco@farmbio.uu.se  (M.A. Francisco  Rodr√≠guez),  jordi.carreras.puigvert@farmbio.uu.se  (J. Carreras  Puigvert),  
ola.spjuth@farmbio.uu.se  (O. Spjuth) . carried out using microplates  commonly  exhibit plate eÔ¨Äects [11] , also 
known as positional  eÔ¨Äects, which are systematic  variations  across the 
geometry  of a microplate  (within-plate  eÔ¨Äects)  or across diÔ¨Äerent  plates 
(between-plate  eÔ¨Äects)  due to factors such as well location,  tempera-  
ture and humidity  being unequally  distributed,  and can aÔ¨Äect the re- 
sults to the point of rendering  the experiment  unusable.  Other factors 
that can contribute  to experimental  variation  are the lab equipment,  
such as imprecise  manual  pipetting,  and inconsistent  or malfunctioning  
liquid handling  instruments.  Common  patterns  of within-plate  eÔ¨Äects 
include:  (i) linear row eÔ¨Äects; (ii) linear column  eÔ¨Äects; (iii) linear row 
and column  eÔ¨Äects; and (iv) bowl-shaped  spatial eÔ¨Äects [11] ; examples  
are visualised  in Fig. 1 . Identifying  and correcting  for both within-  and 
between-plate  eÔ¨Äects is important  in order to adjust the data so that the 
impact of the errors can be reduced  or avoided.  Various  normalisation  
techniques  have been developed  to this end [12,13]  , but an appropriate  
microplate  layout is of particular  importance  for the normalisation  to 
be eÔ¨Äective  [12,14]  . A control is a sample that has been subjected  to a 
known treatment  with the goal of accounting  for the eÔ¨Äects of variables  
other than what is being tested, thus increasing  the reliability  of the re- 
sults. In particular,  a negative  control is a sample that has been subjected  
to a treatment  that induces  no eÔ¨Äect, while a positive control is a sam- 
ple that has been subjected  to a treatment  with an expected  maximal  
response  [15] . In order to mitigate  plate eÔ¨Äects and gain the most out 
of using control samples  and error correction  methods,  scientists  have 
been advocating  for the use of randomised  plate layouts  [16,17]  . 
A widely used approach  today is to design plate layouts  manually  
in order to simplify  for human interaction;  e.g. placing  controls  in the 
https://doi.org/10.1016/j.ailsci.2023.100073  
Received  18 January  2023; Received  in revised form 8 March 2023; Accepted  12 April 2023 
Available  online 14 April 2023 
2667-3185/¬©2023  The Authors.  Published  by Elsevier B.V. This is an open access article under the CC BY license ( http://creativecommons.org/licenses/by/4.0/  ) M.A. Francisco Rodr√≠guez, J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence in the Life Sciences 3 (2023) 100073 
Fig. 1. Visualisation  of systematic  plate eÔ¨Äects and distributions  of 20 negative  controls  using border, random and eÔ¨Äective  layouts. The colours indicate  the intensity  
measured  at each well. Top row: Data with strong systematic  errors having a bowl-shaped  relationship  to well position.  Bottom row: Data with strong systematic  
errors having a linear relationship  to column number.  
outer-most  wells (border  layout)  and distributing  the samples  following  
patterns  that are easy to design and to pipette manually  [18,19]  . Indeed 
many researchers  still use border layouts  as they help reduce human 
pipetting  errors, allow for straight-forward  visualisation  of results by 
humans,  for example  in the form of heat maps [12] , and can be easily 
designed  using pen and paper [20] . Yet border layouts  can only be used 
to eÔ¨Äectively  identify  and adjust for only a few plate eÔ¨Äects [13,14]  , 
such as linear relationships  to rows or columns  that aÔ¨Äect the whole 
plate ( Fig. 1 ). 
For large-scale  experiments  with microplates  having 384 or more 
wells, human pipetting  becomes  infeasible  and robots for liquid han- 
dling are necessary.  In recent years, pipetting  robots have become  com- 
mon in biomedical  labs and they allow for fully Ô¨Çexible  arrangements  of 
controls  and samples  on plates, making  randomised  layouts  more acces- 
sible. However,  pure randomisation  can still produce  ineÔ¨Äective  layouts,  
for example  large areas of the plate might end up not having any con- 
trol samples,  making  it diÔ¨Écult  or even impossible  to detect and correct 
errors in those areas [16,21,22]  . Further,  replicates  placed in adjacent  
wells are then likely to be aÔ¨Äected  by the same plate eÔ¨Äects. Not only 
is it a problem  that they will be similarly  biased, but it has also been 
shown that clusters  of similar samples,  including  similar doses of the 
same compound  as well as technical  replicates,  can aÔ¨Äect the results 
of adjacent  wells [12] . Consequently,  plate designs  that distribute  both 
controls  and samples  in an eÔ¨Äective  way are needed  in order to reduce 
unwanted  bias, as well as to aid to detect and correct plate eÔ¨Äects. We 
refer to such designs  as eÔ¨Äective  layouts.  Figure 1 (top row) displays  
examples  of microplates  with two strong systematic  plate eÔ¨Äects (bowl- 
shaped and linear gradient)  and examples  of how controls  can be located  
using border,  random  and eÔ¨Äective  layouts.  
Several  plate layout editors are available,  such as Brunn [23] , 
FlowJo  [24] , Labfolder  [25] , PlateDesigner  [26] , and PlateEditor  [27] . 
While some are able to generate  randomised  layouts,  none of them have 
capabilities  to generate  eÔ¨Äective  layouts.  There is, of course, the possi- 
bility of generating  several random  layouts  and then evaluate  them in 
order to select the best one [28] , but that does not guarantee  that eÔ¨Äec- 
tive plate layouts  have been selected,  regardless  of how many layouts  
are generated.  
In this manuscript  we introduce  an artiÔ¨Åcial-intelligence  based 
model for designing  eÔ¨Äective  microplate  layouts  that can easily be 
adapted  for diÔ¨Äerent  experimental  settings,  and evaluate  it for dose- 
response  and screening  applications.  In order to simplify  its usage, we 
developed  a suite of tools (PLAID),  including  a web-app  for easily de- 
signing  eÔ¨Äective  microplate  layouts,  together  with Python notebooks  for 
simulating  diÔ¨Äerent  experimental  designs  and allow for planning  and 
designing  eÔ¨Äective  experiments.  1.1. EÔ¨Äective  microplate  layouts 
Below are listed properties  that, in many cases, are relevant  to con- 
struct eÔ¨Äective  plate layouts.  The list is not meant to be exhaustive,  and 
should be adapted  for speciÔ¨Åc  applications  and experimental  settings.  
Distribution  of control samples  In order to maximise  the usefulness  
of positive  and negative  control samples  during normalisation,  controls  
should be distributed  evenly among the wells of the microplate.  For 
example,  we could constrain  the number  of controls  on each microplate  
to be equally  distributed  among each of its four quadrants,  that is, the 
diÔ¨Äerence  in the number  of controls  between  any two quadrants  would 
be at most 1. Moreover,  controls  could also be evenly distributed  across 
rows and columns,  which would be particularly  useful to detect and 
mitigate  plate eÔ¨Äects linked to row or column  number.  Furthermore,  
controls  of the same type should ideally not be placed on adjacent  wells. 
Whenever  feasible,  we would also want controls  of any kind not to be 
placed in adjacent  wells. 
Distribution  of samples  It has been shown that a well with a strong 
eÔ¨Äect can aÔ¨Äect the measured  intensity  of its neighbour  wells [11] , and 
in particular,  due to grouped  similar samples  [12] . With the goal of mit- 
igating such grouping  eÔ¨Äects we can, for instance,  enforce  that the repli- 
cates of a sample are placed on diÔ¨Äerent  rows and columns.  Similarly,  for 
speciÔ¨Åc  kinds of experiment,  such as a dose-response  experiment  [29] , 
we could enforce  that for each compound,  the diÔ¨Äerence  in the num- 
ber of individual  doses between  any two rows, any two columns,  or any 
four quadrant  is at most 1. Spreading  samples  with diÔ¨Äerent  doses this 
way makes the design resilient  towards  errors that aÔ¨Äect an entire row 
or column  (such as a pipetting  error); enough  of the other doses will 
remain for suÔ¨Écient  quality for e.g. regression.  
Edge eÔ¨Äects Edge or border eÔ¨Äects are discrepancies  between  the cen- 
tre and the outer wells of a microplate  primarily  caused by evaporation  
during incubation,  and can greatly aÔ¨Äect the results obtained  from an 
experiment  [30] . A common  method  to mitigate  edge eÔ¨Äects is to avoid 
having samples  in the outermost  rows and columns,  and instead  Ô¨Åll them 
with medium  or buÔ¨Äer [31] . 
Empty wells If not all wells will be used, the locations  of the empty 
wells could be constrained  in a manner  similar to that of control samples  
so they are distributed  across the plate. This way, empty wells can help 
avoid clusters  of samples  and controls.  
Multi-plate  experiments  Across all plates, controls  could also be bal- 
anced between  plate halves or quadrants.  Moreover,  we could balance  
the controls  per row or column  across all plates, that is, the diÔ¨Äerence  
between  the number  of controls  in any two rows or columns  across all 
plates is at most 1. Given enough  control samples,  this can help en- 
sure that potential  plate eÔ¨Äects linked to any row or column  will be 
2 M.A. Francisco  Rodr√≠guez,  J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence  in the Life Sciences 3 (2023) 100073 
detected,  especially  when the errors have been introduced  consistently  
in all plates, for example  by a malfunctioning  dispensing  equipment.  
The same constraints  could also be applied  to sample replicates  across 
plates. 
1.2. EÔ¨Äective  layouts with constraint  programming  
Above we introduced  desired  properties  of eÔ¨Äective  plate layouts  as 
a set of constraints.  One option to satisfy these constraints  would be 
to randomly  generate  microplate  layouts  until one that Ô¨Åts the criteria  
is found. While this in itself constitutes  a non-trivial  task, Ô¨Ånding  such 
layout could take an unreasonably  long time, and if no layout fulÔ¨Ålling  
the criteria  exists, this program  would never Ô¨Ånish. A more eÔ¨Écient  and 
natural  solution  is to frame our characterisation  of eÔ¨Äective  microplate  
layouts  as a constraint  satisfaction  problem  (CSP): we view each well 
of each plate as a variable  whose value represents  its content  and desir- 
able properties  of a layout as constraints.  Constraint  programming  (CP) 
is a subarea  of artiÔ¨Åcial  intelligence  that oÔ¨Äers a Ô¨Çexible  framework  
for solving  constraint  satisfaction  problems  that has seen large adoption  
in various  Ô¨Åelds (see Methods  section).  The general  idea behind CP is 
that a CSP can be modelled  as a conjunction  of high-level  constraints  
on variables  ranging  over initial domains,  and then said model is given 
to a general-purpose  constraint  solver which performs  a combination  of 
intelligent  reasoning  and systematic  search in order to Ô¨Ånd constraint-  
satisfying  domain  values for the variables.  In this project we implement  
a constraint  model that generates  eÔ¨Äective  plate layouts  for two diÔ¨Äer- 
ent applications:  dose-response  and screening  experiments.  
2. EÔ¨Äective  layouts  lead to more accurate  results  in 
dose-response  experiments  
Dose-response  experiments  attempt  to evaluate  the eÔ¨Äect of a sub- 
stance in a speciÔ¨Åc  assay at increasing  concentrations  [29] . The eÔ¨Äect 
can, in many cases, be estimated  by Ô¨Åtting a sigmoid  curve to the data 
points, and is frequently  summarised  by determining  the half maximal  
inhibitory  concentration  ( IC 50 ), or the half maximal  eÔ¨Äective  concen-  
tration ( EC 50 ). In order to evaluate  the impact of diÔ¨Äerent  types of mi- 
croplate  layouts  in dose-response  experiments,  we simulated  a total of 
43,200 microplates  for dose response  experiments  with border layouts,  
random  layouts,  and eÔ¨Äective  layouts  generated  using constraint  pro- 
gramming  and the constraints  deÔ¨Åned  in Supplementary  Listing 1. The 
experiments  consisted  of 20 compounds  of varying  potency  in 6, 8, and 
12 doses, and for 1, 2, and 3 replicates.  Plate eÔ¨Äects added had a rela- 
tionship  to column  number  or were bowl-shaped,  both in medium  and 
high strength.  The data was normalised  using linear regression  in the 
case of border layouts,  and LOESS regression  for eÔ¨Äective  and random  
layouts,  and four-parameter  log-logistic  (LL4) curves were Ô¨Åtted to the 
resulting  data. Examples  of the curves produced  can be seen in Fig. 2 (a) 
and Supplementary  Fig. 1. For a complete  description  of the experiment,  
see Methods  section.  
Figure 2 (b) and Supplementary  Fig. 12 show the mean squared  er- 
ror (MSE) of the residuals  calculated  with respect to the dose-response  
curves used to generate  the data. It is evident  that, after error correction  
using LOESS regression  and normalising  to the mean of the negative  con- 
trols, eÔ¨Äective  layouts  lead to statistically  signiÔ¨Åcant  smaller  MSE than 
other types layouts  ( ùëù < 10 ‚àí4 for all pairwise  comparisons,  t -test). That 
is, the data obtained  using our eÔ¨Äective  layouts  is much closer to their 
expected  values, than the data obtained  when using either random  and 
border layouts.  
It is standard  practice  to discard  dose-response  curves that are con- 
sidered  to have low quality,  for example,  curves where more than 20% of 
the variability  is unexplained  by the curve Ô¨Åt, that is, with ùëÖ 2 < 0 . 8 [15] . 
In general,  our eÔ¨Äective  layouts  lead to a higher percentage  of high- 
quality curves, as can be seen in Supplementary  Figs. 13‚Äì15. For ex- 
ample, in the case of experiments  with 8 doses and 3 replicates,  and 
strong plate eÔ¨Äects with a linear relationship  to column  number  on the Table 1 
Mean log 10 diÔ¨Äerence  and standard  deviation  for the obtained  relative IC 50 / EC 50 
and absolute  IC 50 / EC 50 for dose response  curves with 8 doses, 1, 2, or 3 repli- 
cates, 20 negative  controls  on 384-well  plate, and strong plate eÔ¨Äects with a 
linear relationship  to column number on the right side of the plate. 
Measurement  Layout 1 replicate 2 replicates  3 replicates  
Border 4.78 ¬± (11.11) 3.24 ¬± (9.17) 0.81 ¬± (4.6) 
Relative IC 50 / EC 50 Random 0.47 ¬± (2.58) 0.2 ¬± (0.86) 0.14 ¬± (0.2) 
EÔ¨Äective 0.23 ¬± (0.94) 0.13 ¬± (0.15) 0.1 ¬± (0.13) 
Border 0.74 ¬± (1.01) 0.46 ¬± (0.61) 0.23 ¬± (0.35) 
Absolute IC 50 / EC 50 Random 0.16 ¬± (0.15) 0.12 ¬± (0.11) 0.1 ¬± (0.09) 
EÔ¨Äective 0.14 ¬± (0.12) 0.09 ¬± (0.08) 0.07 ¬± (0.06) 
right-half  side of the plate, all curves generated  using our eÔ¨Äective  lay- 
outs have an ùëÖ 2 ‚â• 0 . 8 , while only 94% of the curves generated  using 
random  layouts  and 70% of the curves generated  using border layouts  
have a good curve Ô¨Åt with ùëÖ 2 ‚â• 0 . 8 . Moreover,  there is a signiÔ¨Åcant  
diÔ¨Äerence  between  the various  types of layouts  when calculating  the 
absolute  diÔ¨Äerence  between  the maximum  value of the expected  and 
obtained  curves as can be seen in Fig. 2 (c) and Supplementary  Figs. 
2‚Äì4. 
Estimated  relative  IC 50 / EC 50 values from the data shows a signiÔ¨Åcant  
diÔ¨Äerence  between  using an eÔ¨Äective  layout compared  to using either a 
random  or a border layout Fig. 2 (d), regardless  of the number  of repli- 
cates used ( ùëù < 10 ‚àí4 for all pairwise  comparisons,  t -test). In fact, we 
obtained  a smaller  MSE and a smaller  standard  deviation  using 2 repli- 
cates and eÔ¨Äective  layouts  than using 3 replicates  and random  layouts  
( Table 1 ). Similar  results are obtained  for other strengths  of plate eÔ¨Äects, 
as well as when using 6 or 12 doses (see Supplementary  Figs. 6 and 7). 
For estimated  absolute  IC 50 / EC 50 values, Fig. 2 (e) shows that there 
is a signiÔ¨Åcant  diÔ¨Äerence  between  using an eÔ¨Äective  layout and either a 
random  or a border layout regardless  of the number  of doses and repli- 
cates used ( ùëù < 10 ‚àí4 for all pairwise  comparisons,  t -test). Similar  results 
are obtained  for other plate-eÔ¨Äect  strengths,  and number  of doses (see 
Supplementary  Figs. 8‚Äì10). Also note that it is not always possible  to es- 
timate the absolute  IC 50 / EC 50 . For example,  in the case of experiments  
with 8 doses and 1 replicate,  the absolute  IC 50 / EC 50 of almost 1% of the 
curves could not be estimated  when using border layouts  in the pres- 
ence of strong bowl-shaped  eÔ¨Äects. This number  grows to 13 . 4% when 
the negative  controls  are not included  as data points. 
3. EÔ¨Äective  layouts  improve  sensitivity  and reduce  the risk of 
inÔ¨Çated  quality  assessment  scores in screening  experiments  
Screening  experiments  attempt  to identify  hits from a large number  
of samples  for further analysis  [13,14]  . In order to evaluate  the impact of 
diÔ¨Äerent  types of microplate  layouts  in screening  experiments,  we simu- 
lated 6480 384-well  microplates  using all combinations  of: 40 layouts  of 
each type of design, with either 8, 10, or 20 negative  controls,  3 strength  
levels of bowl-shaped  plate eÔ¨Äects, and 6 hit percentages,  namely  1%, 
5%, 10%, 20%, 30%, and 40% of hits per plate. Each compound  appears  
only once (1 replicate)  and hits were randomly  distributed  on the plates. 
The results were adjusted  using linear regression  for border layouts,  and 
LOESS regression  for eÔ¨Äective  and random  layouts.  For a complete  de- 
scription  of the experiment,  see Methods  section.  Figs. 3 (a)‚Äì(c) show 
examples  of simulated  screening  data after error correction  and normal-  
isation in the presence  of mild bowl-shaped  plate eÔ¨Äects. Fig. 3 (f), (g), 
and Supplementary  Figs. 21 and 22 show that, regardless  of the num- 
ber of negative  controls  used and hit rate, the use of eÔ¨Äective  layouts  
results in higher precision  (positive  predictive  value) and yields statis- 
tically signiÔ¨Åcant  higher PR-AUC  (area under the curve) values with a 
smaller  variance  (Supplementary  Tables 4 and 5; ùëù < 10 ‚àí4 for all pair- 
wise comparisons,  t -test). 
Standard  quality assessment  metrics  for microplate  experiments  in- 
clude ùëç ‚Ä≤factor and SSMD [14] , where low-quality-plate  results are in- 
3 M.A. Francisco Rodr√≠guez, J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence in the Life Sciences 3 (2023) 100073 
Fig. 2. Comparison  between  expected  and obtained  values for dose response  curves with 8 doses, 1, 2, or 3 replicates,  20 negative  controls  on 384-well  plate, and 
strong plate eÔ¨Äects with a linear relationship  to column number on the right side of the plate. ‚àó indicates  ùëù < 10 ‚àí4 , ‚àó ‚àó indicates  ùëù < 10 ‚àí12 , ‚àó ‚àó ‚àó indicates  ùëù < 10 ‚àí43 . 
4 M.A. Francisco Rodr√≠guez, J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence in the Life Sciences 3 (2023) 100073 
Fig. 3. Screening  experiments  consisting  of 40 microplates  for each type of layout, each with 10 positive and 10 negative  controls  and only 1 replicate  per compound.  
Hits are randomly  distributed  on each plate. (a)‚Äì(c): Simulated  response  data with 1% hit rate after error correction  and normalisation  in the presence  of mild bowl- 
shaped plate eÔ¨Äects. MSE between  expected  and obtained  (d) ùëç ‚Ä≤factor and (e) SSMD in the presence  of mild bowl-shaped  plate eÔ¨Äects. The expected  values were 
calculated  using plates randomly  Ô¨Ålled with 50% positive controls  and 50% negative  controls,  constituting  the optimal values obtainable  by these metrics.  (f) and 
(g): PR (precision  recall) curves for experiments  with varying hit rates in the presence  of strong bowl-shaped  plate eÔ¨Äects. 
5 M.A. Francisco Rodr√≠guez, J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence in the Life Sciences 3 (2023) 100073 
dicated  by low metric scores, but where high scores are not a guarantee  
for high-quality  results on the plate. The main reason for this is that 
both ùëç ‚Ä≤factor and SSMD only take into account  positive  and negatives  
controls  regardless  of their physical  location  on the plate, and with a 
sub-optimal  layout these metrics  might not accurately  capture  the real 
plate eÔ¨Äects. In order to analyse  the eÔ¨Äect of diÔ¨Äerent  layouts  on qual- 
ity metrics,  we calculated  the expected  values for both ùëç ‚Ä≤factor and 
SSMD using whole plates Ô¨Ålled with 50% positive  controls  and 50% 
negative  controls,  constituting  the optimal  quality values obtainable  by 
these metrics.  We then compared  the resulting  values against  the same 
metrics  being calculated  using only a subset of the controls  on the plate 
according  to border,  random,  and eÔ¨Äective  layouts.  Figure 3 (d) and (e) 
show that for both the ùëç ‚Ä≤factor and SSMD, the estimates  obtained  us- 
ing eÔ¨Äective  layouts  yield a quality metric value that is closer to the 
expected  value when compared  to random  and border layouts.  This dif- 
ference  is always statistically  signiÔ¨Åcant  as long as there is some degree 
of a plate eÔ¨Äect (Supplementary  Figs. 23 and 24). 
4. The PLAID software  suite 
In order to make our method  easily accessible,  we developed  PLAID 
(Plate Layouts  using ArtiÔ¨Åcial  Intelligence  Design),  a suite of tools that 
can be used to design and evaluate  microplate  layouts  under a wide 
range of conditions.  
4.1. The PLAID reference  constraint  model 
We implemented  a constraint  model comprising  the constraints  de- 
scribed  here using MiniZinc  [32] . Advanced  users can interact  with and 
personalise  the model by adding or removing  constraints,  which can be 
ran using the MiniZinc  IDE, scripts, or command  line. It is also possi- 
ble to incorporate  the model into existing  workÔ¨Çows,  for example,  with 
the help of the MiniZinc  Python package.  Instructions  on how to run 
our MiniZinc  model using the command  line or the MiniZinc  IDE are 
available  at https://github.com/pharmbio/plaid  . 
4.2. The PLAID plate design tool 
In order to ease the use of the PLAID constraint  model, we developed  
an interactive  web interface  available  at https://plaid.pharmb.io/  that 
allows for specifying  experimental  details and generating  layouts  (Sup- 
plementary  Fig. 25). The experimental  design (e.g. selection  of sam- 
ples, concentrations,  etc.) can be downloaded  from the web interface  
in a JSON format that can be later uploaded  into the website  in or- 
der to create more plate designs  for the same experiment  or as a base 
for new experiments.  The produced  layouts  generated  by the PLAID 
constraint  model can be visualised  within the web interface  (Supple-  
mentary  Figs. 26 and 27), and downloaded  in CSV, and JSON Ô¨Åle 
formats,  as well as an image (Supplementary  Fig. 28). Produced  lay- 
outs in JSON format can be re-uploaded  into the website  to use the 
visualisation  features  (Supplementary  Figs. 26 and 27). Examples  of 
both experimental  settings  and layouts,  as well as convenience  meth- 
ods for translating  layouts  into speciÔ¨Åc  formats  to be directly  used in 
ECHO and I.DOT compound  dispensing  robots, are available  on GitHub  
at https://www.github.com/pharmbio/plaid  . 
4.3. The PLAID analysis  and visualisation  notebooks  
Experiment  designs  can substantially  vary, and no one-solution-Ô¨Åts-  
all exists. DiÔ¨Äerent  assays, laboratory  conditions,  equipment,  etc, lead 
to diÔ¨Äerent  types and strengths  of plate eÔ¨Äects that aÔ¨Äect experiments.  
We developed  in Python a library of parametric  plate eÔ¨Äects, a library 
of plate normalisation  and error correction  functions,  dose response  and 
high throughput  screening  simulations,  as well as visualisation  function-  
ality. This library can be used, for example  from within Python note- 
books, to evaluate  diÔ¨Äerent  experimental  designs,  such as to explore  the eÔ¨Äect of varying  the number  of controls,  doses, replicates,  etc, be- 
fore selecting  the appropriate  design. 
5. Discussion  
Maximising  the conclusions  that can be drawn from data is the key 
objective  when planning  and carrying  out biomedical  experiments.  With 
microplates  becoming  a standard  platform  to realise multiple-sample  
experiments,  designing  the physical  layout of experiments  and carrying  
out adequate  data processing  is essential  to ensure high-quality  data. 
Further,  being able to minimise  the number  of control samples,  repli- 
cates, or doses per sample can have a signiÔ¨Åcant  impact in terms of 
time, costs, and number  of samples  evaluated  in any type of experiment.  
Research  into data normalisation  methods  is an active subject,  which 
has been especially  important  in omics research  in the life science  do- 
main that, in many cases, can observe  large variations  between  diÔ¨Äerent  
labs, batches,  and experimental  settings.  However,  most normalisation  
techniques  assume  randomisation  in the experimental  design. We here 
show that randomising  the physical  locations  of control samples  can 
be sub-optimal,  and that eÔ¨Äective  layouts  generated  using a constraint  
programming  model are generally  superior.  
For dose-response  experiments,  eÔ¨Äective  layouts  lead to signiÔ¨Åcantly  
better approximations  of curves when compared  to random  layouts,  
or especially  the more traditional  border layouts,  on 384-well  plates 
( Fig. 2 (d)). In fact, all curves in our experiments  using eÔ¨Äective  layouts  
have an ùëÖ 2 > 0 . 8 , implying  that fewer approximation  curves have to 
be discarded  in experiments.  EÔ¨Äective  layouts  also lead to signiÔ¨Åcantly  
smaller  MSE and standard  deviation  ( Table 1 and Fig. 2 (b), (c)) when 
estimating  relative  and absolute  IC 50 / EC 50 for dose-response  curves. For 
screening  experiments,  the eÔ¨Äect of plate layouts  vary with the exper- 
iment, depending  on the number  of control samples,  the expected  hit 
rate, and the strength  of systematic  errors. Our experiments  demonstrate  
that for experiments  with strong bowl-shaped  errors, eÔ¨Äective  layouts  
have a signiÔ¨Åcantly  higher precision  compared  with random  and border 
layouts  with as low as 1% hit rates ‚Äìeven when samples  do not have any 
replicates  ( Fig. 3 (f)). With lower systematic  errors, the impact of using 
eÔ¨Äective  layouts  is smaller  but still relevant,  especially  for experiments  
having higher hit rates as shown by Mpindi  et al. [13] (Supplementary  
Figs. 19 and 20). These results underline  the value of experimental  de- 
sign and physical  placement  of samples  also for screening  experiments.  
EÔ¨Äective  layouts  also reduce the risk of obtaining  an inÔ¨Çated  score from 
plate quality assessment  metrics  such as ùëç ‚Ä≤factor and SSMD, as the val- 
ues for such metrics  when calculated  on eÔ¨Äective  layouts  are on average  
closer to the expected  (optimal)  metric value compared  to random  and 
border layouts.  
Simulating  multiple  scenarios  allows for evaluating  and comparing  
diÔ¨Äerent  experimental  parameters,  such as the eÔ¨Äect of the number  of 
replicates  versus the number  of concentrations  per sample.  This can, for 
example,  be carried out and visualised  using the provided  PLAID note- 
books. Our results show that in common  dose-response  experiments,  ef- 
fective layouts  can lead to a reduction  in the number  of replicates  while 
maintaining  a higher conÔ¨Ådence  in the estimated  IC 50 / EC 50 ( Fig. 2 (b) 
and (c)). We also observe,  inline with the recommendations  in Conven-  
tion [33] , that replicates  do improve  precision,  but not enough  to ad- 
dress systematic  bias. In general,  adding more doses had a higher impact 
in the estimations  than adding more replicates,  regardless  of the layout. 
In particular,  eÔ¨Äective  layouts  generally  lead to more accurate  results 
even with fewer replicates  or fewer doses. For example,  we obtained  
more accurate  estimations  of absolute  IC 50 / EC 50 for experiments  with 
8 doses and 2 replicates  using our eÔ¨Äective  layouts  than with 8 doses 
and 3 replicates  using random  layouts  (see Fig. 2 (e) and Supplemen-  
tary Figs. 8‚Äì10). Moreover,  we also obtained  more accurate  estimations  
of absolute  EC 50 / IC 50 for experiments  with 8 doses and 3 replicates  us- 
ing our eÔ¨Äective  layouts,  compared  to 12 doses and 3 replicates  using 
random  layouts  (see Supplementary  Figs. 8‚Äì10). 
6 M.A. Francisco Rodr√≠guez, J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence in the Life Sciences 3 (2023) 100073 
The beneÔ¨Åts  and limitations  of eÔ¨Äective  microplate  layouts  are 
tightly coupled  to the use and impact of methods  for data normalisa-  
tion, that in turn are dependent  on the use of, and suÔ¨Écient  number  
of, control samples.  Further,  a multi-plate  experiment  also oÔ¨Äers more 
opportunities  for Ô¨Ånding  eÔ¨Äective  layouts.  In our work we focused  on 
LOESS normalisation  [34] , which is a widely used normalisation  tech- 
nique that is robust towards  diÔ¨Äerent  types of plate and experimental  
eÔ¨Äects. The error model used in this work is based on the one proposed  
by Zhang et al. [11] , but the intensity  and type of plate eÔ¨Äects observed  
might diÔ¨Äer depending  on factors such as the type of experiment,  lab- 
oratory  facilities,  and temperature,  among others. A key advantage  of 
using a constraint  model for designing  layouts  is that such parameters  
can be easily adjusted,  due to the declarative  nature of the model, and 
evaluated  using the provided  PLAID Python notebooks.  We have put 
together  a suite of constraints  that are widely useful, but the Ô¨Ånal selec- 
tion of constraints  is up to the scientists  planning  experiments  and it is 
easy to e.g. remove  constraints  such as ‚Äòno samples  in outer wells‚Äô if they 
are not desirable.  From a practical  perspective,  such as when pipetting  
manually,  it can be beneÔ¨Åcial  to use the same sample only on one plate. 
For automated  liquid handling  instruments,  the number  of plates (and 
hence source samples)  accessible  can have an impact.  These scenarios  
are not covered  in this study, but there is no hinder to also implement  
such constraints  into a plate layout model. 
5.1. Iterative  experimentation  
AI methods  such as unsupervised  and supervised  learning  are nowa- 
days widely used to analyse  the results from large-scale  experiments  
using microplates.  There are also emerging  approaches  to sequentially  
plan a series of experiments  to systematically  improve  the accuracy  of 
AI models [35,36]  . Data-centric  AI is a concept  that proposes  to shift 
from the current  practice  of having a set of Ô¨Åxed data and then spend- 
ing much time and eÔ¨Äort to Ô¨Åne-tune  a machine  learning  model, to in- 
stead focus on an iterative  approach  to optimise  the data used to train 
the model [37] . This methodology  fundamentally  builds on the propo- 
sition that high-quality  data is better than just more data, something  
that for a long time has been argued in traditional  experimental  design 
guidelines  [33] . Selecting  the next batch of experiments  is however  non- 
trivial, and autonomous  decision-making  is currently  an active research  
Ô¨Åeld with autonomous  vehicles  as a big driver. Active machine  learn- 
ing is one approach  to select new experiments  which, combined  with 
robotics,  has the potential  to automate  scientiÔ¨Åc  discoveries  [38‚Äì41]  . 
Fig. 4 shows how the PLAID suite supports  iterative  experimentation.  
The Ô¨Årst step constitutes  an initial decision  on samples,  replicates,  con- 
trols, etc., and its deÔ¨Ånition  in a declarative  Ô¨Åle format for microplate  
experiments  (Supplementary  Section  1). This experiment-deÔ¨Ånition  Ô¨Åle 
is then input to the PLAID plate design tool that applies the constraint  
model to generate  eÔ¨Äective  plate layouts.  The produced  layouts  can then 
be evaluated  towards  simulated  experiments  deÔ¨Åned  by diÔ¨Äerent  error 
parameters,  which over time can be tailored  to particular  experimen-  
tal and laboratory  setups. Based on the outcome  of the simulations,  the 
experiment  design might be revised  and new plate layouts  can be gen- 
erated. When a decision  is made to accept the layouts,  these can be 
translated  to custom  formats  that can be read by lab instruments.  We 
provide  translations  for two common  chemical  dispensing  instruments  
(ECHO and I.DOT),  but it is straightforward  to create more adaptors  
for other instruments.  Accepting  plate layouts  can be done manually  
by humans,  or autonomously  using an algorithm.  If the data acquisition  
and analysis  from the physical  experiments  can be automated,  then only 
the decision  making  regarding  the next round of experiments  remains.  
Given that autonomous  decision  making  has been implemented  in order 
to select the next experiment,  it can be deÔ¨Åned  in the PLAID Ô¨Åle format 
for microplate  experiments,  closing the loop for the next experiment  it- 
eration.  We speculate  that such automated  and iterative  scientiÔ¨Åc  exper- 
iments will be increasingly  common  in the future, and that PLAID, given 
its Ô¨Çexibility  due to the declarative  nature of constraint  modelling,  its open source implementation,  and associated  tools for easy integration  
and visualisation,  is a compelling  model and architecture.  
6. Conclusions  
We identiÔ¨Åed  properties  of eÔ¨Äective  microplate  layouts  and used ar- 
tiÔ¨Åcial intelligence  in the form of constraint  programming  to build a 
model that is capable  of generating  such layouts,  and evaluated  their 
eÔ¨Äect on normalisation  in common  experiment  settings  involving  multi- 
plates. We demonstrated  that eÔ¨Äective  layouts  are superior  to random  
layouts  for illustrative  dose-response  and screening  experiments,  gen- 
erating more robust results and data with lower variance  and higher 
precision.  The software  suite PLAID makes the method  easily available,  
allows for decision  aid in experiment  design to select e.g. number  of 
doses and replicates,  and is prepared  for integration  into closed-loop  
systems.  Examples  of studies where PLAID has been used include  [42‚Äì44]
 . 
7. Methods  
7.1. Constraint  programming  
Constraint  programming  (CP) [45] is a form of artiÔ¨Åcial  intelligence  
used for modelling  and solving  combinatorial  problems,  which is cur- 
rently successfully  used in many real-world  application  areas such as 
scheduling  [46‚Äì48]  , decision  support  [49] , and packing  [50] . Solving  
a combinatorial  problem  involves  Ô¨Ånding  an assignment  for a discrete,  
Ô¨Ånite set of objects (decision  variables)  that satisÔ¨Åes  a given set of con- 
ditions (constraints).  The general  idea behind constraint  programming  
is that the user speciÔ¨Åes  the constraints  that should hold among deci- 
sion variables  and a general-purpose  constraint  solver is used to Ô¨Ånd a 
solution.  That is, the user speciÔ¨Åes  the problem  without  having to spec- 
ify how to Ô¨Ånd a solution.  For example,  consider  our microplate  layout 
design problem.  Each unknown  in the problem,  namely  the content  of 
each well on each plate, is a decision  variable.  Each decision  variable  ùëâ ùëñ 
can take values in a given domain,  denoted  dom ( ùëâ ùëñ ) . In our microplate  
layout design problem,  the domain  of each decision  variable  is the set of 
possible  substances  to place on a well, i.e. a given compound  at a certain 
concentration,  a positive  control,  etc. Moreover,  problem  solutions  are 
distinguished  from non-solutions  by constraints,  which are the limita- 
tions to the values that the decision  variables  can take simultaneously.  
In this context,  a constraint  is, for example,  a limitation  that controls  of 
the same type cannot be placed in adjacent  wells. 
In order to Ô¨Ånd a solution  for a given problem,  a constraint  solver 
Ô¨Årst removes  infeasible  values from the domains  of the variables  by 
applying  inference  methods,  which is known in the literature  as prop- 
agation . Then, the search for a feasible  solution  is performed  in a 
branch-and-bound  fashion:  the left-most  branch corresponds  to a sub- 
problem  that is created  by assigning  a value ùë£ ‚ààdom ( ùëâ ùëñ ) to a variable  
ùëâ ùëñ . If the sub-problem  turns out to be infeasible,  a backtracking  mecha-  
nism is used to try other sub-problems  where the additional  constraint  
dom ( ùëâ ùëñ ) ‚â†ùë£ is added. 
In general,  constraint  satisfaction  problems  are speciÔ¨Åed  by data- 
independent  models written  in a modelling  language  such as AMPL [51] , 
Essence  [52] , MiniZinc  [32] , or OPL [53] . 
7.2. Constraint  model implementation  
We implemented  a constraint  model representing  the microplate  lay- 
out design problem  in MiniZinc  [32] and used Gecode  [54] as the back- 
end constraint  solver. One of the many advantages  of using MiniZinc  is 
that only very minor modiÔ¨Åcations,  if any, would be needed  to use an- 
other constraint  solver. Examples  of constraints  included  in our model 
together  with their representation  in MiniZinc  can be seen in Fig. 5 . 
For a full list of all constraints  deÔ¨Åned  in this study, see Supplementary  
Listing 1. 
7 M.A. Francisco Rodr√≠guez, J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence in the Life Sciences 3 (2023) 100073 
Fig. 4. Overview  of the PLAID ecosystem.  Experiment  design (1) comprises  the selection  of samples,  replicates,  concentrations,  etc, and can be deÔ¨Åned in a conÔ¨Åg- 
uration Ô¨Åle or via the PLAID Plate Design web interface,  and then the PLAID constraint  model is called to generate  the resulting  layouts (2). In order to evaluate  the 
design, simulation  parameters  such as type and strength  of expected  plate eÔ¨Äects need to be deÔ¨Åned (3) and then a simulated  experiment  using the layouts can be 
carried out in the PLAID Analysis  and Visualisation  Notebooks  (4). DiÔ¨Äerent  scenarios  can be compared,  such as diÔ¨Äerent  numbers  of concentrations  and replicates,  
and designs may then be revised accordingly.  When an acceptable  design has been generated,  it can be used to drive liquid handling  instruments,  such as automated  
pipette robots (6). After the experiment  is performed  and analysed,  a decision  can be made on subsequent  experiments  e.g. conÔ¨Årm Ô¨Åndings,  re-run failed samples,  
evaluate  more concentrations,  etc. (7). Implementing  automated  decision  making that deÔ¨Ånes the next experiment  in the PLAID conÔ¨Åguration  Ô¨Åle format enables 
autonomous  sequential  experimentation.  
Fig. 5. Examples  of constraints  in MiniZinc  syntax. 
On top of including  all the desirable  properties  of eÔ¨Äective  mi- 
croplate  layouts,  we have chosen to include  other constraints  that are 
needed  for practical  matters.  For example,  we enforce  that for each sam- 
ple, all concentration  levels of a given replica must appear on the same 
plate. Technical  replicates  of a sample can be chosen to appear on the 
same plate, on a diÔ¨Äerent  plate, or a mixture  of both. We have also 
included  the dimensions  of the microplate  as parameters  in terms of 
number  of rows and columns,  allowing  the use of any kind of plate size. 
Finally,  it is also possible  to specify how many rows and columns  should 
be left empty on the border of every microplate  in order to mitigate  edge 
eÔ¨Äects. 7.3. Dose-response  experiments  
We simulated  multiple  scenarios  for dose-response  experiments  ac- 
cording  to Sebaugh  [15] . The following  scenarios  were considered:  all 
combinations  of compounds  having:  (i) a sigmoid  curve with slopes of 
0.5, 1, 1.5, and 2; (ii) 6 concentrations  with a dilution  factor of 18, 
8 concentrations  with a dilution  factor of 8, and 16 concentrations  with 
a dilution  factor of 4; and (iii) 1, 2, and 3 replicates  per compound.  
Without  loss of generality,  for every compound  the bottom  of the curve 
was set to 0% , and the top of the curve was set to 100% . Fixing the 
top and bottom  of the curve at these values makes the assumption  that 
8 M.A. Francisco Rodr√≠guez, J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence in the Life Sciences 3 (2023) 100073 
if a suÔ¨Écient  number  of concentrations  were to be used, a complete  
doseresponse  curve would be generated.  To generate  the sigmoid  curves 
corresponding  to each compound  the only parameter  remaining  to be 
speciÔ¨Åed  is the EC 50 / IC 50 . We generated  curves with EC 50 / IC 50 values 
ranging  from 1 to 96 to simulate  compounds  having all kinds of potency.  
The highest  concentration  was arbitrarily  set to 100 ŒºM. For each test 
concentration,  the replicates  were generated  by adding a random  value 
within ¬±1% to the value sampled  from the curve in order to represent  a 
very small error in measurement  between  wells having the same com- 
pound in the same concentration.  
Border layouts  were generated  by distributing  20 negative  controls  in 
columns  2 and 23, and placing  all other samples  horizontally  from top to 
bottom.  Random  layouts  were generated  using the Python random  pack- 
age. EÔ¨Äective  microplate  layouts  were generated  using our constraint  
programming  model implemented  in MiniZinc  [32] . The Python func- 
tions and MiniZinc  model used to generate  the layouts  as well as the re- 
sulting layouts  are available  at https://github.com/pharmbio/plaid  . We 
then applied  the same plate eÔ¨Äect to every microplate  having either: (i) 
a bowl-shape  relationship  to well position,  or (ii) a linear relationship  to 
column  number  on the right-hand  side of the plate. Strong plate eÔ¨Äects 
are designed  according  to the examples  in Zhang [11] , while moderate  
plate eÔ¨Äects are designed  to be half way between  no-eÔ¨Äect  and a strong 
plate eÔ¨Äect. After applying  plate eÔ¨Äects, we adjusted  the data using lin- 
ear regression  in the case of border layouts,  and LOESS regression  as 
implemented  in Cappellari  et al. [55] for the rest, and normalised  the 
data as a percentage  of the mean of the negative  controls.  Finally,  we 
estimated  the relative  and absolute  EC 50 / IC 50 using the curve_fit  
function  of the scipy  Python library,  which uses the Trust Region Re- 
Ô¨Çective  algorithm.  For each dose-response  curve, we calculated  the ab- 
solute value of the diÔ¨Äerence  between  the log 10 of the true (expected)  
and the estimated  EC 50 / IC 50 values. Moreover,  for every measurement,  
we calculated  the diÔ¨Äerence  with respect to both the expected  (true) 
value as well as with respect to the estimated  curves. 
7.4. Screening  experiments  
We simulated  screening  experiments  consisting  of 40 384-well  mi- 
croplates,  each of which contained  either (i) 8 positive  controls  and 
8 negative  controls,  (ii) 10 positive  controls  and 10 negative  controls,  
or (iii) 10 positive  controls  and 20 negative  controls.  The remaining  
wells contained  random  samples  with hit-rates  of 1%, 5%, 10%, 20%, 
33%, and 40%. We then applied  various  strengths  of bowl-shaped  ef- 
fects to every microplate.  Strong plate eÔ¨Äects are designed  according  
to the examples  in Zhang [11] , while moderate  plate eÔ¨Äects are de- 
signed to be half way between  no-eÔ¨Äect  and a strong plate eÔ¨Äect. For 
error correction  and normalisation  we used linear regression  in the case 
of border layouts,  and LOESS regression  (as implemented  in Cappellari  
et al. [55] ) in the case of random  and eÔ¨Äective  layouts,  and scaled the 
data as a percentage  of the average  of the negative  controls.  Both linear 
and LOESS regression  are performed  based on negative  controls  only, 
without  assuming  a low hit-rate.  We used the error-corrected  data to 
calculate  the ùëç ‚Ä≤factor and the SSMD of each microplate.  Finally,  we 
used the sklearn  Python library to calculate  the resulting  precision-  
recall (PR) and receiver  operating  characteristic  (ROC) curves, as well 
as their corresponding  area under the curve (AUC) values. 
Data availability  
The Python libraries  and notebooks  developed  for the analysis,  the 
experimental  results,  together  with the speciÔ¨Åc  microplate  layouts  tested 
are available  at https://github.com/pharmbio/plaid  . 
Code availability  
All source code for PLAID, including  our constraint  model, libraries  
and Python notebooks  for simulating,  evaluating  and visualising  ex- periments,  as well as scripts for layout translations  are open source 
and publicly  available  at https://github.com/pharmbio/plaid  . A man- 
aged service for public consumption  of the web interface  is available  
at https://plaid.pharmb.io/  , and its Docker image is available  at https: 
//github.com/pharmbio/plaid-gui  . 
Contributions  
MAFR and OS : Conceptualisation;  MAFR : Methodology  and soft- 
ware implementation,  validation;  MAFR,  OS, JCP : Formal analysis,  
writing.  
Declaration  of Competing  Interest  
The authors  declare  that they have no known competing  Ô¨Ånancial  
interests  or personal  relationships  that could have appeared  to inÔ¨Çuence  
the work reported  in this paper. 
Acknowledgements  
This project received  funding  from the Swedish  Research  Council  
(Grants  2020-03731  and 2020-01865),  FORMAS  (Grant 2018-00924),  
the Swedish  Foundation  for Strategic  Research  (Grant BD15-0008SB16-  
0046), and the Swedish  strategic  research  programme  eSSENCE.  
We thank Wesley Schaal for constructive  feedback  on the 
manuscript,  Markus  Lucero and Travis Persson  for contributions  to the 
PLAID web interface,  Polina Georgiev  for constructive  feedback  on mi- 
croplate  layouts,  Ebba Bergman  for constructive  feedback  on Ô¨Ågures,  
and Gustav Bj√∂rdal  for constructive  feedback  on the constraint  model. 
Supplementary  material  
Supplementary  material  associated  with this article can be found, in 
the online version,  at doi: 10.1016/j.ailsci.2023.100073  . 
References  
[1] Vamathevan J, Clark D, Czodrowski P, Dunham I, Ferran E, Lee G, et al. Applica- tions of machine learning in drug discovery and development. Nat Rev Drug Discov 2019;18(6):463‚Äì77 
. 
[2] Alaa AM, Gurdasani D, Harris AL, Rashbass J, van der Schaar M. Machine learn- ing to guide the use of adjuvant therapies for breast cancer. Nat Mach Intell 2021;3(8):716‚Äì26 
. 
[3] Fischbacher B, Hedaya S, Hartley BJ, Wang Z, Lallos G, Hutson D, Zimmer M, Bram- mer J, Paull D. Modular deep learning enables automated identiÔ¨Åcation of mono- clonal cell lines. Nat Mach Intell 2021;3(7):632‚Äì40 
. 
[4] Lu J, Bender B, Jin JY, Guan Y. Deep learning prediction of patient response time course from early data via neural-pharmacokinetic/pharmacodynamic modelling. Nat Mach Intell 2021;3(8):696‚Äì704 
. 
[5] Mattenet A, Davidson I, Nijssen S, Schaus P. Generic constraint-based block modeling using constraint programming. J Artif Intell Res 2021;70:597‚Äì630 
. 
[6] Franchina L, Sergiani F. High quality dataset for machine learning in the business intelligence domain. In: Bi Y, Bhatia R, Kapoor S, editors. Intelligent systems and applications. Advances in intelligent systems and computing. Cham: Springer Inter- national Publishing; 2020. p. 391‚Äì401. ISBN 978-3-030-29516-5 
. 
[7] Lu Y, Young S. A survey of public datasets for computer vision tasks in precision agriculture. Comput Electron Agric 2020;178:105760 
. 
[8] Williams CJ, Richardson DC, Richardson JS. The importance of residue-level Ô¨Ålter- ing and the Top2018 best-parts dataset of high-quality protein residues. Protein Sci 2021;31:290‚Äì300 
. 
[9] Alexovi ƒçM, Urban PL, Tabani H, Sabo J. Recent advances in robotic protein sample preparation for clinical analysis and other biomedical applications. Clin Chim Acta 2020;507:104‚Äì16 
. 
[10] Zhang J-H, Chung TDY, Oldenburg KR. A simple statistical parameter for use in evaluation and validation of high throughput screening assays. J Biomol Screen 1999;4(2):67‚Äì73 
. 
[11] Zhang XD. Experimental designs. In: Optimal high-throughput screening: practical experimental design and data analysis for genome-scale RNAi research. Cambridge: Cambridge University Press; 2011. p. 13‚Äì26 
. 
[12] Birmingham A, Selfors LM, Forster T, Wrobel D, Kennedy CJ, Shanks E, et al. Statisti- cal methods for analysis of high-throughput RNA interference screens. Nat Methods 2009;6(8):569‚Äì75 
. 
[13] Mpindi J-P, Swapnil P, Dmitrii B, Jani S, Saeed K, Wennerberg K, Aittokallio T, √ñstling P, Kallioniemi O. Impact of normalization methods on high-throughput screening data with high hit rates and drug testing with dose‚Äìresponse data. Bioin- formatics 2015;31(23):3815‚Äì21 
. 
9 M.A. Francisco Rodr√≠guez, J. Carreras Puigvert and O. Spjuth ArtiÔ¨Åcial Intelligence in the Life Sciences 3 (2023) 100073 
[14] Zhang XD. Novel analytic criteria and eÔ¨Äective plate designs for quality control in genome-scale RNAi screens. J Biomol Screen 2008;13(5):363‚Äì77 
. 
[15] Sebaugh JL. Guidelines for accurate EC 50 /IC 50 estimation. Pharm Stat 2011;10(2):128‚Äì34 
. 
[16] Roselle C, Verch T, Shank-RetzlaÔ¨Ä M. Mitigation of microtiter plate po- sitioning eÔ¨Äects using a block randomization scheme. Anal Bioanal Chem 2016;408(15):3969‚Äì79 
. 
[17] Caicedo JC, Cooper S, Heigwer F, Warchal S, Qiu P, Molnar C, et al. Data-analysis strategies for image-based cell proÔ¨Åling. Nat Methods 2017;14(9):849‚Äì63 
. 
[18] Brower SL, Fensterer JE, Bush JE. The ChemoFx¬Æassay: an ex vivo chemosensitivity and resistance assay for predicting patient response to cancer chemotherapy. In: Mor G, Alvero AB, editors. Apoptosis and cancer: methods and protocols. Methods in molecular biologyTM. Totowa, NJ: Humana Press; 2008. p. 57‚Äì78 
. 
[19] Williams SP, Gould CM, Nowell CJ, Karnezis T, Achen MG, Simpson KJ, et al. Sys- tematic high-content genome-wide RNAi screens of endothelial cell migration and morphology. Sci Data 2017;4(1):170009 
. 
[20] Connelly B.. Plotting Microtiter Plate Maps. https://bconnelly.net/posts/ plotting-microtiter-plate-maps/ 
; 2014. 
[21] Borges H, Hesse A-M, Kraut A, Cout√© Y, Brun V, Burger T. Well plate maker: a user-friendly randomized block design application to limit batch eÔ¨Äects in largescale biomedical studies. Bioinformatics (Oxford, England) 2021:btab065 
. 
[22] Burger B, Vaudel M, Barsnes H. Importance of block randomization when designing proteomics experiments. J Proteome Res 2021;20(1):122‚Äì8 
. 
[23] Alvarsson J, Andersson C, Spjuth O, Larsson R, Wikberg JE. Brunn: an open source laboratory information system for microplates with a graphical plate layout design process. BMC Bioinform 2011;12(1):179 
. 
[24] FlowJo, LLC. https://www.Ô¨Çowjo.com/ . 
[25] Well Plate Templates. https://www.labfolder.com/well-plate-templates/ . 
[26] Suprun M, Su√°rez-Fari√±as M. PlateDesigner: a web-based application for the design of microplate experiments. Bioinformatics (Oxford, England) 2019;35(9):1605‚Äì7 
. 
[27] Delorme V, Woo M, Falc√£o VCdA, Wood C. PlateEditor: a web-based application for the management of multi-well plate layouts and associated data. PLoS One 2021;16(5):e0252488 
. 
[28] SchiÔ¨ÄL., Migliori B., Chen Y., Carter D., Bonilla C., Hall J., Fan M., Tam E., Ahadi S., Fischbacher B., Geraschenko A., Hunter C.J., Venugopalan S., DesMarteau S., Narayanaswamy A., Jacob S., Armstrong Z., Ferrarotto P., Williams B., Buckley- Herd G., Hazard J., Goldberg J., Coram M., Otto R., Baltz E.A., Andres-Martin
 L., Pritchard O., Duren-Lubanski A., Reggio K., NYSCF Global Stem Cell Array Team, Bauer L., Aiyar R.S., Schwarzbach E., Paull D., Noggle S.A., Monsma F.J., Berndl M., Yang S.J., Johannesson B.. Deep learning and automated cell paint- ing reveal Parkinson‚Äôs disease-speciÔ¨Åc signatures in primary patient Ô¨Åbroblasts. bioRxiv2020;:2020.11.13.380576. 
[29] Vandenberg LN. Chapter 7 ‚ÄîLow dose eÔ¨Äects and nonmonotonic dose responses for endocrine disruptors. In: Darbre PD, editor. Endocrine disruption and human health. Academic Press; 2022. p. 141‚Äì63 
. 
[30] Carralot J-P, Ogier A, Boese A, Genovesio A, Brodin P, Sommer P, Dorval T. A novel speciÔ¨Åc edge eÔ¨Äect correction method for RNA interference screenings. Bioinformat- ics 2012;28(2):261‚Äì8 
. 
[31] Lundholt BK, Scudder KM, Pagliaro L. A simple technique for reducing edge eÔ¨Äect in cell-based assays. J Biomol Screen 2003;8(5):566‚Äì70 
. 
[32] Nethercote N, Stuckey PJ, Becket R, Brand S, Duck GJ, Tack G. MiniZinc: towards a standard CP modelling language. In: Bessi√®re C, editor. Principles and practice of constraint programming ‚ÄìC P 2007. Lecture notes in computer science. Berlin, Heidelberg: Springer; 2007. p. 529‚Äì43. ISBN 978-3-540-74970-7 
. 
[33] U.S. Pharmacopeial Convention. USP_1032.pdf. 
[34] Cleveland W, Grosse E, Shyu W. Local regression models. In: Chambers JM, Hastie TJ, editors. Statistical models in S. PaciÔ¨Åc Grove, CA: Wadsworth & Brooks/Cole; 1992. p. 608 
. 
[35] Eyke NS, Green WH, Jensen KF. Iterative experimental design based on active ma- chine learning reduces the experimental burden associated with reaction screening. React Chem Eng 2020;5(10):1963‚Äì72 
. 
[36] Ekins S, Puhl AC, Zorn KM, Lane TR, Russo DP, Klein JJ, et al. Exploiting machine learning for end-to-end drug discovery and development. Nat Mater 2019;18(5):435‚Äì41 
. [37] Miranda L.J.. Towards data-centric machine learning: a short review. 2021; ljvmiranda921githubio, 
https://ljvmiranda921.github.io/notebook/2021/07/30/  data-centric-ml/ 
. 
[38] Schneider G. Automating drug discovery. Nat Rev Drug Discov 2018;17(2):97‚Äì113. doi: 
10.1038/nrd.2017.232 . 
[39] King RD, Rowland J, Oliver SG, Young M, Aubrey W, Byrne E, Liakata M, Markham M, Pir P, Soldatova LN, Sparkes A, Whelan KE, Clare A. The automation of science. Science 2009;324(5923):85‚Äì9 
. 
[40] Saikin SK, Kreisbeck C, Sheberla D, Becker JS, Aspuru-Guzik A. Closed-loop discov- ery platform integration is needed for artiÔ¨Åcial intelligence to make an impact in drug discovery. Expert Opin Drug Discov 2019;14(1):1‚Äì4 
. 
[41] Reker D. Practical considerations for active machine learning in drug discovery. Drug Discov Today 2019;32:73‚Äì9 
. 
[42] Gupta A., Harrison P.J., Wieslander H., Rietdijk J., Puigvert J.C., Georgiev P., W√§hlby C., Spjuth O., Sintorn I.-M.. Is brightÔ¨Åeld all you need for mechanism of action prediction?2022. 
[43] Rietdijk J, Aggarwal T, Georgieva P, Lapins M, Carreras-Puigvert J, Spjuth O. Mor- phological proÔ¨Åling of environmental chemicals enables eÔ¨Écient and untargeted exploration of combination eÔ¨Äects. Sci Total Environ 2022;832:155058 
. 
[44] Tian G., Harrison P.J., Sreenivasan A.P., Puigvert J.C., Spjuth O.. Combining molec- ular and cell painting image data for mechanism of action prediction. 2022. 
[45] Russell S, Norvig P. ArtiÔ¨Åcial intelligence: a modern approach. 4th global ed. Pear- son; 2021 
. 
[46] Arafailova E, Beldiceanu N, Douence R, Flener P, Francisco Rodr√≠guez MA, Pear- son J, Simonis H. Time-series constraints: improvements and application in CP and MIP contexts. In: Quimper C-G, editor. Integration of AI and OR techniques in con- straint programming. Lecture notes in computer science. Cham: Springer Interna- tional Publishing; 2016.
 p. 18‚Äì34. ISBN 978-3-319-33954-2 . 
[47] Frimodig S, Schulte C. Models for radiation therapy patient scheduling. In: Schiex T, de Givry S, editors. Principles and practice of constraint programming. Lecture notes in computer science. Cham: Springer International Publishing; 2019. p. 421‚Äì37. ISBN 978-3-030-30048-7 
. 
[48] Geibinger T, Mischek F, Musliu N. Investigating constraint programming for real world industrial test laboratory scheduling. In: Rousseau L-M, Stergiou K, editors. In- tegration of constraint programming, artiÔ¨Åcial intelligence, and operations research. Lecture notes in computer science. Cham: Springer International Publishing; 2019. p. 304‚Äì19. ISBN 978-3-030-19212-9 
. 
[49] Bhatnagar S, Kumar A, Lau HC. Decision making for improving maritime traÔ¨Éc safety using constraint programming. In: Proceedings of the twenty-eighth interna- tional joint conference on artiÔ¨Åcial intelligence 2019: Macau, August 10‚Äì16; 2019. p. 5794‚Äì800 
. 
[50] Leao AAS, Toledo FMB, Oliveira JF, Carravilla MA, Alvarez-Vald√©s R. Irreg- ular packing problems: a review of mathematical models. Eur J Oper Res 2020;282(3):803‚Äì22 
. 
[51] Fourer R, Gay DM, Kernighan BW. A modeling language for mathematical program- ming. Manag Sci 1990;36(5):519‚Äì54 
. 
[52] Frisch AM, Harvey W, JeÔ¨Äerson C, Mart√≠nez-Hern√°ndez B, Miguel I. Essence: a constraint language for specifying combinatorial problems. Constraints 2008;13(3):268‚Äì306 
. 
[53] Van Hentenryck P, Michel L, Perron L, R√©gin J-C. Constraint programming in OPL. In: International conference on principles and practice of declarative programming. Springer; 1999. p. 98‚Äì116 
. 
[54] Gecode Team. Gecode: generic constraint development environment. 2019. Avail- able from 
http://www.gecode.org . 
[55] Cappellari M, McDermid RM, Alatalo K, Blitz L, Bois M, Bournaud F, Bureau M, Crocker AF, Davies RL, Davis TA, de Zeeuw PT, Duc P-A, Emsellem E, Khochfar S, Krajnovi ƒáD , Kuntschner H, Morganti R, Naab T, Oosterloo T, Sarzi M, Scott N, Serra P, Weijmans A-M, Young LM. The ATLAS3D
 project ‚Äì XX. Mass‚Äìsize and mass‚Äì
ùúédistributions of early-type galaxies: bulge fraction drives kinematics, mass‚Äì to-light ratio, molecular gas fraction and stellar initial mass function. Mon Not R Astron Soc 2013;432(3):1862‚Äì93 
. 
10 