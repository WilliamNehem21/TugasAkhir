Probabilistic programming is an increasingly popular formalism for modeling randomness and uncertainty. Designing semantic models for probabilistic programs has been extensively studied, but is technically challenging. Particular complications arise when trying to account for (i) unstructured control-flow, a natural feature in low-level imperative programs; (ii) general recursion, an extensively used programming paradigm; and (iii) nondeterminism, which is often used to represent adversarial actions in probabilistic models, and to support refinement-based development. This paper presents a denotational-semantics framework that supports the three features mentioned above, while allowing nondeterminism to be handled in different ways. To support both probabilistic choice and nondeterministic choice, the semantics is given over control-flow hyper -graphs. The semantics follows an algebraic approach: it can be instantiated in different ways as long as certain algebraic properties hold. In particular, the semantics can be instantiated to support nondeterminism among either program states or state transformers. We develop a new formalization of nondeterminism based on powerdomains over sub-probability kernels. Semantic objects in the powerdomain enjoy a notion we call generalized convexity, which is a generalization of convexity. As an application, the paper sketches an algebraic framework for static analysis of probabilistic programs, which has been proposed in a companion paper.

We define the operational semantics on CFHGs of programs. We adopt a com- mon approach for standard CFGs in which the nodes represent program loca- tions, and edges labeled with instructions describe transitions among program locations (e.g., [24,54,46]). Instead of standard directed graphs, we make use of hyper-graphs [27].

Let D be a dcpo. A subset A is Scott-closed if A is a lower set and is closed under directed suprema. The complement D \ A of a Scott-closed subset A is called Scott-open. These Scott-open subsets form the Scott-topology on D. The closure of a subset A is the smallest Scott-closed set containing A as a subset, denoted by A.

Proposition 3.2 (Cor. of [33, Hofmann-Mislove theorem]) Let X be a sober space, i.e., a T0-space where every nonempty closed set is either the closure of a point or the union of two proper closed subsets. The intersection of a filtered family

Lemma 4.11 Let us consider subsets of K(X). Suppose that K is a Scott-compact g-convex set and A is a nonempty Scott-closed g-convex set that is disjoint from K. Then they can be separated by a g-convex Scott-open set, i.e., there is a g-convex Scott-open set V including K and disjoint from A.

A lot of recent studies on probabilistic programming focus on rigorous reasoning about probabilistic programs (e.g., [52,53,39,4,17,11,57,12,10,34,28,13,38,55,9,5]). In this section, we discuss an application of the new denotational semantics as the concrete semantics of a static-analysis framework for probabilistic programs. More details about the static analysis and its soundness proof can be found in a companion paper [64].

In functional programming, higher-order functions are functions that can take func- tions as arguments, as well as return a function as a result. Some probabilistic programming languages, such as Church [30], are indeed functional programming languages and can express higher-order functions. While operational models for prob- abilistic functional programming have been proposed [8], developing a denotational semantics for higher-order probabilistic programming has been an open problem for years.

We have developed a framework for denotational semantics of low-level probabilistic programs with unstructured control-flow, general recursion, and nondeterminism, represented by control-flow hyper-graphs. The semantics is algebraic and it can be instantiated with different models of nondeterminism. We have demonstrated two instantiations with nondeterminism-first and nondeterminism-last, respectively. We have proposed a powerdomain for nondeterminism-first that consists of collections of kernels and enjoys generalized convexity. As an application, we have reviewed a static-analysis framework for probabilistic programs, which has been proposed in a companion paper.

In the future, we plan to combine continuous distributions and higher-order functions with nondeterminism in our semantics framework. We will also work on models of nondeterminism, especially nondeterminism-first, and investigate its connection with relational reasoning. Another research direction is to develop more formal reasoning techniques based on the denotational semantics.

