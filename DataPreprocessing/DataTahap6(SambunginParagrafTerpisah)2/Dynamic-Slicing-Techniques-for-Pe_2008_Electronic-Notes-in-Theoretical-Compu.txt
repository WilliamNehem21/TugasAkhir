A Petri net [13,14] is a directed bipartite graph, whose two essential elements are called places (represented by circles) and transitions (represented by bars or rect- angles). The edges of the graph form the arcs, which are labelled with a positive integer known as weight. Arcs run from places to transitions and vice versa. The state of the system modeled by the net is represented by assigning non-negative integers to places. This is known as a marking, and is shown graphically by adding small black circles to the places, known as tokens. The dynamic behavior of the system is simulated by changes in the markings of a Petri net, a process which is carried out by the firing of the transitions. The basic concepts of Petri nets are summarized as follows:

Using an initial marking can be useful, e.g., in debugging. Consider for instance that the user is analyzing a particular trace for a marked Petri net (using a simula- tion tool [7], which we assume correct), so that an erroneous state is reached. Here, by erroneous state, we mean a marking in which some places have an incorrect number of tokens. In this case, we are interested in extracting the set of places and transitions (more formally, a subnet) that may erroneously contribute tokens to the places of interest, so that the user can more easily locate the bug.

Finally, the third step obtains the slice N' = (P ',T ',F ') defined as the subnet of N where P ' is the intersection of P1 and P2, T ' is the intersection of T1 and T2, and F ' is the restriction of F over P ' and T ', i.e., the intersection of backward and forward slices.

