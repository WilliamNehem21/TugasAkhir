The elements of FN are called arcs, and we write x FN y for (x; y) 2 FN . We shall denote SN [ TN by N and omit subscripts when no confusion can arise. As usual, the pre- and postset of x 2 N, are x = fy 2 N j y F xg and x = fy 2 N j x F yg. We assume  t 6= ? for all t 2 T .

We find convenient to view F as a function F: (S T) [ (T S) ! f0; 1g, with x F y () F(x; y) 6= 0. Then, for PT nets we can represent both F and W as the multiset relation F: (S T) [ (T S) ! N . For any transition t 2 T , let pre(t) and post(t) be the multisets over S such that pre(t)(a)= F(a; t) and post(t)(a)= F(t; a), for all a 2 S. We write t: u ! v for a transition t with pre(t)= u and post(t)= v.

tation of concurrent events) and that cannot be decomposed into shorter proofs. When these two conditions are verified, the concurrent kernel of the behavior has been identified, and all the steps can be generated by it. (The abstract net can be defined according to either the collective or the individual token philosophy noticed in [17]: the two approaches yield the same step relation but different abstract nets.)

(1) the output of a message out(a); (2) the reading of a message (without consum- ing it) rd(a); and (3) the fetching of a message in(a), after which the message is no longer available in the tuple space. Two additional predicates rdp(a) and inp(a) allow, respectively, for (4) checking for the presence of a message without con- suming it; and (5) atomically testing and consume the message if present. The two predicates can be used as the boolean component of conditional constructs.

