This paper presents the Maude Termination Tool (MTT) version 1.5. MTT takes Maude programs as inputs and tries to prove them terminating by applying different transformation techniques and by using existing termination tools as back-ends. MTT can use as back-end tool any termination tool supporting the TPDB syntax, either locally if it follows the rules for the Termination Competition, or remotely as web services. This allows us to interact with the different tools in a uniform way, and not restricting ourselves to a specific set of tools. Thus, tools that have participated in the competition, like AProVE, MU-TERM, TTT, etc., or others that accommodate to the syntax and form of interaction, can be used as back-ends of MTT. In the MTT environment, Maude specifications can be proved terminating by using (any of these) distinct formal tools, allowing the user to choose the most appropriate one for each particular case, a combination of them, or trying different alternatives in the case of a particular tool cannot find a proof.

tions, between which one can choose the more appropriate for each particular case. Thus, one can proof the termination of a Maude specification by transforming a sug- ared rewrite theory (SRWT) into a context-sensitive term rewrite theory (CS-TRS), which can be handled by tools like AProVE and mu-term combining different trans- formations. But one can follow several alternative paths. E.g., a context-sensitive membership conditional term rewriting system (CS-MCTRS) can be transformed into a context-sensitive conditional term rewriting system (CS-CTRS) by using transformation A (which can be either complete, discarding information on kinds, or discarding all information on sorts), or into a context-sensitive order-sorted con- ditional term rewriting system (CS-OSCTRS) by using the transformation OS.

