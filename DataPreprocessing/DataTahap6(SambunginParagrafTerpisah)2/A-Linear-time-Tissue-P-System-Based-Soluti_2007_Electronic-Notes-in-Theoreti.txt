This paper is enclosed in the Natural Computing framework. More precisely, in the study of the structure and functioning of cells as living organisms able to process and generate information. Assuming this starting point, two different disciplines within Natural Computing can be found in the literature: Membrane Computing and Brane Calculi.

In the last years, many different models of P systems have been proposed. The most studied variants are characterized by a cell-like membrane structure, where the communication happens between a membrane and the surrounding one. In this model we have a set of nested membranes, in such a way that the graph of neighborhood relation is a tree.

One of the topics in the field is the study of the computational power and ef- ficiency of P systems. In particular, different models of these cell-like P systems have been successfully used in order to design solutions to NP-complete problems in polynomial time (see [10] and the references therein). These solutions are ob- tained by generating an exponential amount of workspace in polynomial time and using parallelism to check simultaneously all the candidate solutions. Inspired in liv- ing cells, cell-like P systems abstract the way of obtaining new membranes, mainly from two biological processes: mitosis (membrane division) and autopoiesis, see [14] (membrane creation). Both ways of generating new membranes have given rise to the corresponding P systems model: P systems with active membranes, where the new workspace is generated by membrane division and P systems with membrane creation, where the new membranes are created from objects.

Both models are universal from a computational point of view, but technically, they are pretty different. In fact, nowadays there does not exist any theoretical result which proves that these models can simulate each other in polynomial time. Under the hypothesis P/N=P, Zandron et al. [29] established the limitations of

We shall focus here on another type of P systems, the so-called (because of their membrane structure) Tissue P Systems. Instead of considering that membranes are hierarchically arranged, the membranes are placed in the nodes of a graph. This variant has two biological inspirations (see [17]): intercellular communication and cooperation between neurons. The common mathematical model of these two mechanisms is a net of processors dealing with symbols and communicating these symbols along channels specified in advance. The communication among cells is based on symport/antiport rules 6 . Symport rules move objects across a membrane together in one direction, whereas antiport rules move objects across a membrane in opposite directions.

>From the seminal definition of Tissue P systems [16,17], several research lines have been developed and other variants have arisen (see, for example, [2,5,7,12,13,27]). One of the most interesting variants of Tissue P systems was presented in [22]. In that paper, the definition of Tissue P systems is combined with the one of P systems with active membranes, yielding Tissue P systems with cell division.

Rules are used as usual in the framework of membrane computing, that is, in a maximally parallel way. In one step, each object in a membrane can only be used for one rule (non-deterministically chosen when there are several possibilities), but any object which can participate in a rule of any form must do it, i.e, in each step we apply a maximal set of rules. This way of applying rules has only one restriction when a cell is divided, the division rule is the only one which is applied for that cell in that step; the objects inside that cell do not evolve in that step.

