Recognition by alignment[15] works by repeatedly selecting a small collec- tion of model features and putting them in correspondence with a collection of image features. The size of these collections is determined by the minimal number of feature correspondences needed in order to determine a transfor- mation uniquely. Since the transformation computed from the correspondence between model and image features is computed based on data that has been corrupted by location error, the transformation determined in this way will not necessarily be the transformation that maximizes the overall number of feature correspondences, however. Therefore, recognition by alignment is only an approximation or a heuristic for optimal geometric matching.

Hough transforms can be viewed as performing pose clustering using various simple binning methods in the space of transformations. Hough transforms are easy to implement and quite fast; with careful tuning, they can give reason- ably reliable answers. However, like other pose clustering techniques, Hough transform methods do not model location error with complete accuracy. Fur- thermore, unlike most other geometric matching techniques, Hough transforms also do not enforce the constraint that a single model feature gives rise only to a single image feature. As a result, Hough transforms can be quite susceptible to both false positives and false negatives.

There are two kinds of inputs to the algorithm. First, there is the data- independent portion: a function that computes the parameterized geometric transformation from model to image features, and a function that evaluates the quality of match between a single transformed model feature and an image feature. Second, there is the data-dependent portion: the actual coordinates of the model and image features.

To understand the performance and complexity of this algorithm, we need to look at the geometry of transformation space This paper does not attempt to provide a complete complexity analysis, but rather merely a description of the underlying geometry and some intuition of what the implications are for complexity. For a more detailed exposition than possible here, the reader is referred to the literature on both geometric matching and the computational geometry of arrangements (e.g., [10]). There are m model features and n image features. Hence, there are mn possible correspondences between model features and image features. Pick a single model feature Mi and a single image feature Ij. Now consider the feature match function as a function of the transformation T :

A formal average case analysis is beyond the scope of this paper, since it would involve a statistical analysis of geometric arrangements, a difficult subject. To demonstrate practicality of the algorithm, we rely on actual per- formance measurements in experiments (below). An informal average case analysis of a closely related problem can be found in [2] and suggests that the computational complexity of RAST-type algorithms is similar to the compu- tational complexity of alignment methods.

