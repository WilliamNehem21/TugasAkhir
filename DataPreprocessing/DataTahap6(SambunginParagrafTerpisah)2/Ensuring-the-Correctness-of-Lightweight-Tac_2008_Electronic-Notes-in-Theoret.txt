The clause replacewith(2) is an example of a goal template, this means the description of how a goal changes by applying the taclet. More than one goal template may be part of a taclet, separated by semicolons, which describes that a goal is split by the taclet. If there is no goal template in a taclet, applications close the proof branch. Additionally, goal templates may contain the following clauses:

Due to their simplicity and operational meaning, taclets can be schematically compiled into the GUI of taclet-based interactive theorem provers: In the KeY system a mouse click over an expression displays only those taclets whose find-part can be matched with the expression in focus. This drastically reduces the cognitive burden on the user. For an extensive account on user interaction see [4].

The basis for our reasoning about the correctness of taclets is a meaning formula [9] derived in this section. It is declared to be the meaning of a taclet independently from concrete taclet application mechanisms, thus providing a very flexible way to address soundness issues. In fact we define a taclet application mechanism to be correct if (and only if) taclets with valid meaning formulas are translated into sound rules. 9 To show that a taclet is correct it is thus sufficient to prove the validity of its meaning formula.

Schema variables for logical variables or program variables can simply be replaced with new concrete variables. It has to be taken in account, however, that when instantiating a schematic expression it is possible that two different schema vari- ables of type ProgramVariable are instantiated with the same concrete variable (which is not possible for Variable schema variables by the definitions of Sect. 2). By the presence or absence of such collisions, the set of instances of a schematic expression is divided into (finitely many) classes, which all have to be considered to capture the meaning of the schematic expression.

In this statement at most one of the jump statements represented by the schema variables #jst1,... , #jstm is selected and executed, depending on the value of the last program variable argument pk (note that the type of pk is int by the definitions of the last section).

Lemma 6.4 (Lifting of Taclet Applications) Suppose that Rtac'  is a rule schema that is described by a taclet tac', and that tac' does not contain skolem symbols (as introduced in Sect. 5.1). If an instance of Rtac' is given by

We would like to thank Martin Giese and Steffen Schlager for useful comments on earlier versions of this paper, as well as Bernhard Beckert and P.H. Schmitt for fruitful discussions. Also we want to thank the anonymous referees and workshop organisers.

