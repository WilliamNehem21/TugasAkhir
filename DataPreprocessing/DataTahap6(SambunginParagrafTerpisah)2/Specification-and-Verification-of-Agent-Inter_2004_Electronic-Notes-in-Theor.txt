Mentalistic approaches [6,7] define ACL semantics from an internal per- spective, i.e., in terms of agents mental states. For instance, FIPA ACL [7] assumes a BDI (Belief, Desire, Intention) model for the agents, and relies upon it for defining the semantics of communicative acts in terms of Feasibility Pre- conditions (i.e., the conditions that have to be satisfied for the communicative act to be planned) and Rational Effects (i.e., the expected effect of the com- municative act).

In order to explain our ideas, we adopt the NetBill protocol as a running example. NetBill is a security and transaction protocol for the sale and deliv- ery of low-priced information goods, such as software or journal articles. We chose NetBill because we believe that it is a good representative for the class of protocols related to information exchange in multi-agent systems, and it lends itself well to discussing the problems that can arise in this respect.

The study on verification of agent interaction is the subject of the second part of this paper. We refer to a classification of the different kinds of verifica- tion introduced by Guerin and Pitt in [14], which distinguishes among static verification, verification by observation, and verification of protocol proper- ties. We focus on the first two kinds of verification. As for the first kind, we propose a method to verify the compliance of agent specifications to a set of protocols. As for the second kind, we sketch a prototypical implementation of the framework by means of Constraint Handling Rules [9], and show how this can be used to verify compliance by observation.

The paper is structured as follows. In Section 2 we give the necessary back- ground by introducing the concept of social integrity constraint. In Section 3 we show how it can be exploited to specify the social semantics of communica- tive acts and the agent interaction protocols. Section 4 is devoted to studying the different kinds of verification. Discussion and directions for future work conclude the paper.

A course of events HAP might give rise to social expectations about the future behaviour of its members. Expectations are collected in a set EXP. It will contain, in particular, events which are expected to happen (denoted by the functor E), and events which are expected not to happen (denoted by the functor NE).

NetBill [4] is a security and transaction protocol for the sale and deliv- ery of low-priced information goods, such as software or journal articles. The protocol rules transactions between two actors: merchant and customer. Ac- counts for merchants and customers, linked to traditional financial accounts (like credit cards), are maintained by a NetBill server.

forward it to the NetBill server. The NetBill server takes care of the actual money transfer and returns a digitally signed receipt, including the key, to the merchant. The merchant forwards receipt and key to the customer, who will thus be able to decrypt the good.

In the following, we suppose that the roles of consumer and merchant are played by agents. We also suppose that primitives, with intuitive meaning, are available for all actions involved in the protocol. We consider a simplified version of the protocol, where we do not specify anything about the negotiation phase (also, this phase could remain unconstrained, at a social level). Finally, the protocol does not deal with deadlines, so neither will we: no constraints are imposed on time variables in expectations.

Let us give a concrete example of such constraints. Let us consider a consumer agent, c, and a merchant agent, m, whose task is to buy/sell goods using a NetBill protocol. We can assume that both c and m are members of a society s, which defines the NetBill protocol in terms of social integrity constraints.

The main intended use of CHR is to write constraint solvers, or to extend existing ones. However, although ours is not a classic constraint programming setting, the computational model of CHR presents features that make it a useful tool for the implementation of the proof procedures we are aiming at. In the following, we sketch a prototype implementation, by means of CHR, of a verification procedure of compliance to social integrity constraints, which will be extended and refined in future work. It is worthwhile noticing that what follows describes an operational counterpart of the declarative framework described in Section 2, and a specification as that described in Section 3.1 is

In part, we draw inspiration from [8], where an operational specification of an ACL is given in an object-oriented framework by means of the commit- ment class. A commitment represents an obligation for its debtor towards its creditor. A commitment is described by a finite state automaton, whose states (which can take the values of empty, pre-commitment, canceled, condi- tional, active, fulfilled and violated ) can change by application of methods of the commitment class, or of rules triggered by external conditions. Seman- tics of communicative acts is specified in terms of methods to be applied to a commitment when a communicative act is issued.

Finally, our concept of expectations is indeed related to that of obligations and permissions. To this regard we cite [2], where Artikis et al. propose a framework for the specification of open societies of agents grounded on event calculus. Such a framework allows to reason upon deontic categories such

We are currently extending the proof, allowing for a more comprehensive syntax of SIC and we are developing a prototype of the social infrastructure. In the future, we would like to investigate the issue of sanctions and recovery from violation states. In addition, we intend to investigate more deeply the formal properties of the proof procedures involved in the framework, such as soundness and completeness w.r.t. the declarative specification.

