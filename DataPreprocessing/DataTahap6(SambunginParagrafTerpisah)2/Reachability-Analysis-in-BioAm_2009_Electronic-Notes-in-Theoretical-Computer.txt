As an example of the kind of analysis that reachability supports, let us con- sider the following drug delivery scenario. A drug molecule, hosted into a specific transport molecule, is injected in the blood of a patient. The behavior of the host- ing molecule should be such that the drug molecule is delivered to muscular tissue and not to connective tissue. Such a system could be represented by the following BioAmbient process

In a related paper [5] Busi and Zavattaro extended their previous result about the decidability of reachability for Mobile Ambients in two directions. On the one hand, they introduced a more general notion of reachability called target reachability. This allows for the specification of a possibly infinite class of targets specified by showing the nesting structure of ambients, and indicating lower and upper bounds to the number of specific instances of processes hosted in each ambient. On the other hand, the decidability of target reachability was proved for an extended calculus including also the sophisticated communication mechanisms of Boxed Ambients [2].

The proof of the decidability of target reachability is as in [5] by reduction to Petri net marking reachability (a decidable property for Petri nets). The reduction is obtained in two steps: we first define target marking reachability for Petri nets and we prove that it can be reduced to marking reachability, then we show how to reduce target reachability in BioAmbients to target marking reachability in Petri nets. Due to space limitation and because the proof is a small variant of the previous proof for Boxed Ambients, the details are omitted and can be found in [5] and in the full version of the paper [4] available at [6].

Proposition 3.9 Let N = (S, T, m0) be a P/T system and (inf, sup) be a tar- get marking of N. The target marking (inf, sup) is reachable in N iff one of the markings in the set TMM ark(N, (inf, sup)) is reachable in TMSys(N, (inf, sup)).

Unfortunately, this subset of P -derivatives is, in general, not finite, as the processes inside an ambient can grow unlimitedly.  Consider, e.g., the process P = [!local n!{m} | !local n?{p}.Q]: it is easy to see that, for any k, [!local n!{m} | {enter k.Q, G} is associated to the first son of the root, {accept k.0} is associated to the second son of the root, {c2p n?{p}.R} is associated to the third son of the root, and the empty multiset {} to the son of the third son of the root.

The Petri net we construct is composed of the following two parts: the first part is basically a finite state automaton, where the marked place represents the current tree-like structure of the process; the second part is a set of identical subnets: the marking of each subnet represents the multiset associated to a particular node of the tree. To keep the correspondence between the nodes of the tree and the multiset associated to that node, we make use of labels. A distinct label is associated to each subnet; this label will be used in the tree-like structure to label the node whose contents (i.e., the set of guarded and replicated subprocesses contained in the ambient corresponding to the node) is represented by the subnet.

