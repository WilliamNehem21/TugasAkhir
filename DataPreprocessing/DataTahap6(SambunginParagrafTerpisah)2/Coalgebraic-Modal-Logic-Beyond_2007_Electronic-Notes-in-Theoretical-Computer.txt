In recent years, coalgebra has received much attention as a unifying abstract ap- proach to transition systems [29,16]. Many kinds of systems considered in theoretical computer science, including labelled, probabilistic and timed ones, are modeled as coalgebras for certain functors (called behaviour functors in this context) on the category Set of sets and functions. Other categories have also been considered, for example presheaf categories [11] or the category Nom of nominal sets [10] to model process algebras with name binding. The coalgebraic approach provides an abstract view on notions of coinduction and bisimulation.

The first abstract approach to logics for coalgebras was coalgebraic logic of Moss [25], providing expressive logics for essentially all functors on Set. However general, coalgebraic logic is rather difficult to use in practice, as its syntax involve applications of the behaviour functor to formulas, and it does not provide simple and natural modalities like those known from Hennessy-Milner or similar logics. On the other hand, logics developed in [15,19,26,28] are close to their usual con- crete presentations, but their expressivity depends on some conditions imposed on the behaviour functor. For example, modalities in [26] are predicate liftings, which map predicates on X to predicates on BX, where B is the behaviour functor, and the resulting modal logic is expressive provided enough predicate liftings exist for

Our approach is inspired by recent work by Kurz and Bonsangue [6,7,20,21], who use Stone dualities to obtain logics for coalgebras on arbitrary categories, and by that by Pavlovic, Mislove and Worrell [27], who exploit logical connections be- tween data and tests to develop an abstract theory of testing. In those works, as in the present paper, contravariant adjunctions provide the infrastructure for linking processes and formulas. In [6,7,20], the adjunctions are assumed to be categorical dualities. This easily implies the existence of expressive logics for all functors, and the main effort is directed towards the nontrivial task of finding concrete presenta- tions of those logics; to that end, in [21] adjunctions that are not dualities were used. In the present, more flexible approach, the duality assumption is not made. This often makes concrete presentations of expressive logics easier to find, and opens a possibility to treat various interesting, but non-expressive logics in a uniform fash- ion, but it comes for a price: the existence of expressive logics depends on certain conditions, as in [30]. On the other hand, in [27] the duality assumption is not made, and the adjunctions arise from certain cogenerators in the relevant categories. This does not apply to all examples of interest, and in the present paper we work with more general adjunctions. Also, in [27] the main focus is on non-expressive logics, and no expressivity results are provided there.

Polyadic modalities used above are admittedly quite complicated, which makes L+ rather awkward, given that it is little more than finitary Hennessy-Milner logic. One can alleviate this problem by choosing a fragment of L+ and using Theorem 4.2 to show that it is still expressive. For example, consider a logic L defined by the where transitions are indicated with solid arrows, and the transitions of y1, y2,... and z1, z2,.. ., determined by those of y0 and z0 by condition (i) and (ii) above, are omitted for clarity. Note that neither A nor X are finitely generated.

