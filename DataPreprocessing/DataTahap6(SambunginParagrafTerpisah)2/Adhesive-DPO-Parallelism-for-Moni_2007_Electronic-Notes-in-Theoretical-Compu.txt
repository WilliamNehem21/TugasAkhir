Process calculi are a well established tool to describe interactive systems. The progression of a process, if it is interpreted as a closed system, is described by a reduction system (rs); moreover each process is a state of a labeled transition system (lts), which describes how the process may interact with its environment: in this case the process is thought of as an open system. Also the the double pushout approach (dpo) can be used to model closed and open systems: a reduction step corresponds to a dpo rewrite while interaction with the environment is described as a transition that is labeled by a borrowed context, which is a part of the environment. One of the advantages of the dpo approach is that one can distinguish between concurrent and necessarily interleaved events of a closed system. Now the main motivation of this paper to lift this advantage to the setting of open systems, i.e. to provide ltss with labels that describe concurrent interaction with the environment. One of the first approaches to derive a lts from a given rs, was presented in [13].

This paper is aimed towards the generation of bisimulation congruences that do respect concurrency. Here we report about the first steps of research in this direction. The main idea is to saturate a given set of productions with all parallel productions and then apply the borrowed context method to generate a bisimulation congruence that respects concurrency. More specifically, given an initial set of rules

The main idea is to replace coproducts, which are just pushouts from the empty graph in Graphs, by pushouts. This will allow us to make the dpoa/i theory of [10] available for adhesive categories. How coproducts can be replaced by pushouts will be explained in terms of the next definition.

