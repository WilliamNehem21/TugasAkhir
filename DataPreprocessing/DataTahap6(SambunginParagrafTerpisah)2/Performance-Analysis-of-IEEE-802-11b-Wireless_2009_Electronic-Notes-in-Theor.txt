Communication protocols are often investigated using simulation. This paper presents a performance study of the distributed coordination function of 802.11 networks. Firstly, our study illustrates the different classes of Petri Nets used for modeling network protocols and their robustness in modeling based on formal methods. Next we propose a detailed 802.11b model based on Object-oriented Petri Nets that precises backoff procedure and time synchronization. Then, performance analyses are evaluated by simulation for a dense wireless network and compared with other measurements approaches. Our main goal is to propose a modular model that will enable to evaluate the impact of network performances on the performances of distributed discrete event systems.

The paper is organized as follows. Section 2 gives a mathematical definition and a comparison of the different classes of Petri Nets. We discuss the benefits and weakness points for each class in the modeling of communication protocols. Section 3 gives a brief introduction to IEEE 802.11b DCF and presents our model. At the end, performance analysis is validated by means of simulation.

Petri nets have been proposed by C. A. Petri in 1962 [1]. Petri nets are a powerful modeling formalism in computer science, system engineering and many other disci- plines. They are used to study and describe different types of systems: distributed, parallel, and stochastic; mainly discrete event systems. Petri nets are in two forms: mathematical and graphical.

be fired after 5 units of time, and T2 can be fired after 7 units of time. T3 is now enabled but it has to wait 3 units of time before firing. Suppose that S1 (another workstation sending data) had a token before, T4 is now enabled. The choice of T3 or T4 determines to which place the token in P4 will go and after what time.

This may help in solving the conflict problem since both transitions are con- trolled by time, but still not for immediate transitions. However, this does not solve the stochastic problem. Suppose 90% of the packets of P4 may go to P6 and 10% may go to P7 (the bit rate error modeling in communication protocols), the timed Petri nets does not answer this characteristics. Another problem that one cannot model with this class is the time variation or intervals. As the time delays associated to transitions is constant, the occurrence possibility in an interval of time cannot be modeled. As an example, the length of a packet sent on a network varies

Places R and S1 each contain one token of the same type. The transition T1 is fireable after 50 units of time and has no guard function, while T2 is immediate and has a guard function: token m coming from place S2 must be grater than 10. Since S2 contains no tokens, a token with the value of 5 is put in place O1 after 50 units of time.

Not far from the colored Petri nets, the object-oriented Petri nets [12] [13] OOPN can be considered as a special kind of high level Petri nets which allow the represen- tation and manipulation of objects. In OOPN, tokens are considered as tuples of instances of object classes which are defined as lists of attributes. It can represent all parts of complex systems, increasing the flexibility of the model. It is a collection of elements comprising constants, variables, net elements, class elements, classes, object identifiers, and method net instance identifiers.

802.11 [14] is a wireless MAC protocol, IEEE standard, for Wireless Local Area Network WLAN. It is widely used in the wireless mobile internet. In 802.11, there are two mechanisms to access the medium in a fair way. The basic mechanism is the Distributed Coordination Function DCF [15]. It is a random access technique based on the carrier sense multiple accesses with collision avoidance (CSMA/CA) mechanism. The second mechanism to access the medium in 802.11 is the Point Coordination Function PCF [16] or Priority-based access which is a centralized MAC protocol.

Our simulations are based on dense networks with different numbers of worksta- tions. The simulation assumes that all nodes transmit at 11Mbps and all nodes try to send data as soon as possible. Each host has 1000 packets with average length of 1150 bytes.

