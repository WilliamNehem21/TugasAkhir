Several formalisms have defined translations to and from hybrid automata. An informal translation of a hybrid automaton to HyPa is defined in [14]. In [10], a formal transformation of a hybrid automaton and of the parallel composition of hybrid automata to ACPsrt, with proof of correctness, is defined. Finally, in [41], linear hybrid action systems have been shown to be a strict subclass of linear hybrid automata, and a translation of a linear hybrid action system, with proof of correctness, to a linear hybrid automaton has been defined.

Besides the specification of delay by means of delay predicates, arbitrary delay can be described by means of the any delay operator [p], where p denotes a process term. The resulting behavior is such that arbitrary delays are allowed. When [p] delays, it remains unchanged and the delay behavior of p is ignored. The action behavior of p remains unchanged in [p]. When [p] performs an action, the any delay operator disappears.

To support the hierarchical modeling of systems, it is convenient to allow lo- cal declarations of variables, channels and recursion definitions. For this purpose, the process instantiation process term lp(xk, hm, en) is introduced, which enables (re)-use of a process definition. A process definition is specified once, but it can be instantiated many times, possibly with different parameters: external variables xk, external channels hm, and expressions en. Chi specifications in which process instantiations lp(xk, hm, en) are used have the following structure:

Receiving of the parts by the assembly process is modeled by means of the parallel composition (a ? x  b ? y  c ? z). This ensures that each part is received as soon as possible. The parallel composition terminates when all parts have been received.

The main difference between these semantics is in the labeling of the action and time transitions. In timed transition systems the labels of action transitions are simply the events of the hybrid automaton, whereas the labels of the action transi- tions of a hybrid transition system also contain the valuations of the model variables prior to and after the action. For time transitions, the labels in a timed transition system contain only the duration of the time transition whereas time transitions in hybrid transition systems also have the trajectory of the model variables as a label. Finally, a timed transition system can have many initial states whereas a hybrid transition system has only one initial state. This one initial state captures the behavior of all the initial states of the timed transition system.

result in HAu automata which do not contain urgent transitions. This restriction is because in the semantics of the HAu definition, transitions can be urgent, while in the linear hybrid I/O-automata, they cannot. Note that in [32], the relation between linear hybrid I/O-automata and HAu automata has been formalized.

