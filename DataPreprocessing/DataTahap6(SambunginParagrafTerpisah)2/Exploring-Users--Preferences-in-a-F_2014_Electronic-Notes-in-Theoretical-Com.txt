Formal Concept Analysis [16] is an instrument for data analysis based on lattice theory. Starting with a set of formal objects, a set of formal attributes and an incidence relation indicating which object has which attribute, one obtains a formal context combining these three components. The context, in turn, allows for the computation of the formal concepts. These concepts are understood as units with a conceptual extent and a conceptual intent, an idea that can be found already in the Logic of Port Royal [11]. The extent of a concept contains all the objects shared by the attributes from its intent. Dually, the intent of a formal concept contains all the attributes that the objects from its extent have in common. The order on the concepts is given by the subconcept-superconcept relation. Together with this

We will work with a fuzzy variant of Formal Concept Analysis [31,4,9] where the incidence relation is replaced by a fuzzy relation encoding the vagueness of the statements. All the above notions can be defined in such a setting. This generalisation of Formal Concept Analysis has been fruitful for the handling of real- world data. It found applications within a few years after its introduction in fields like social networks [22], the management of incomplete and inconsistent data sets [23,25], non-metric factor analysis [2], etc.

This article is an extended version of [17]. The new results give further insight into the connection between special kinds of formulas and closure operators and into the computation of non-redundant formula sets. Further, we illustrate the method on a real-world data set.

Fuzzy theory was successfully used in both theoretical and real-world applications. Considering the latter, its main breakthrough came with the development of a fuzzy controller by Mamdani and Assilian in [26]. We do not list here the various applications of fuzzy theory, extensive references can be found, for instance, in [21].

is an L-concept. Its intent describes a set of cities, i.e., the cities that were evaluated as excellent regarding hq, er, rm, e, br, rp, very good regarding ei, pg, BIP, ICE, cf , etc. Thus, the intent mainly characterises cities with excellent job market and cheap apartments. This description fits the cities MZ and S partially, and the other cities from the extent correspond to this description just a little.

In this section, we first introduce our formulas and illustrate their usefulness on an example. After we have investigated some of their basic properties, we develop two methods to eliminate redundancies from them. Such techniques are important for the facile handling of formulas. The first method acts in a straightforward way and the second one is based on a connection between the formulas and fuzzy attribute implications.

In applications it is particularly useful to associate to the truth values of a residuated lattice L some verbal description. This allows the user to have a better understanding of the truth values. For instance, let L = {0, 0.25, 0.5, 0.75, 1} be the support set of some residuated lattice. Its associated verbal description could be L = {not important, less important, important, very important, most important}, i.e, 0 =not important, 0.25 =less important, etc.

concepts with the corresponding objects (see Section 3), and the attribute concepts with the respective attributes. However, since our lattice is a -sublattice of the initial concept lattice we had to use some attribute labels more than once. Never- theless, finding the extent and intent of a concept works the same way as explained above. For instance take the L-concept whose node is coloured black. Its extent is

Proposition 4.9 shows further properties of the UP formulas. On the one hand, it allows us to reduce the number of formulas in a simple way. On the other hand, it permits the testing of semantic entailment on simpler formulas. Before presenting this proposition, we need to introduce some further notions.

In order to overcome these problems we will adopt another approach and pro- ceed similarly as in the case of (fuzzy) attribute implications. After defining an appropriate closure operator we will show that this indeed has the desired prop- erties. Afterwards, we present an algorithm for the computation of an L-set with respect to a set of UP formulas.

After investigating some properties of these formulas, we turned our attention to the computation of non-redundant bases. Such methods are useful as the users enter the formulas and it is therefore likely that these are redundant. Having a set of non-redundant formulas makes it possible for the user to handle them more easily and alter them conveniently.

