restore documents to their previous state if modifications are considered undesirable. No prior qualifications are needed to write an article, so the Wikipedia is able to harness the collective intelligence of all Internet users, by allowing anyone who feels knowledgeable in an area to create or correct articles about subjects in that area. This increases the chances of finding an article on a given topic, even though there might only be a few experts in the world on this topic, so the Wikipedia is quickly replacing traditional printed references as a primary source of information.

Reputation systems, where users provide feedback on the quality of the articles they read, provide a powerful incentive to improve the quality of the articles and help users avoid articles that are of low quality. In order to preserve both the large investment that authors have made in terms of time and effort and the familiarity of the user interface for occasional users, the collaborative authoring system must be considered a legacy system that cannot be modified and the reputation system should only be offered to users who opt in. This means that the reputation system should be offered as an external service, which users can include as an intermediary between their browser and the collaborative authoring system, in this case the Wikipedia.

This paper examines the problem of reengineering a large and immensely popular legacy application to include a reputation system. The paper presents a reputation system for the Wikipedia, which provides a central repository for feedback that al- lows individual users to calculate their own subjective reputation value for a given article in the Wikipedia. The system does not calculate or distribute reputation values, but simply the recommendations (signed feedback) from other users, so we refer to our system as the Wikipedia Recommender System (WRS). Through the

The rest of this paper is organised in the following way: Section 2 examines the problem of reenginering a legacy software system to include a reputation system. An overview of the Wikipedia and the structure of Wikipedia articles is presented in Section 3. An outline of the Wikipedia Recommender System is presented in Section 4. Section 5 presents our preliminary evaluation of the developed prototype and Section 6 presents a discussion of related work. Finally, our conclusions and some directions for future work are presented in Section 7.

The generic reputation system architecture presented above does not have to be embodied directly in a single server. Instead, both the feedback repository and the reputation calculator may be implemented by either a centralised or distributed sys- tem. The actual locations of the functional components depend on the architecture of the system being reengineered.

Reputation Calculation The reputation system must be able to calculate a rep- utation value based on the opinions and feedback stored in the reputation reposi- tory. This calculation may either be performed in a central component, where one algorithm is used to calculate the reputation for all agents, or distributed in many components, where each component is free to implement their own reputation calculation algorithm. It is, however, important that all reputation calculation components have full access to the feedback repository.

4 A virtual identity is an identifier that may be individually chosen by the agent and cannot necessarily be authenticated through a third part, e.g., if an agent generates a public-/private-key pair, publishes the public-key and consistently signs all messages with the private-key, then the public-key may be considered a virtual identity.

The Wikipedia is accessed through an ordinary web browser and the Wikipedia appears, to the user, as an ordinary website. The Wikipedia HTML pages are dynamically created by the MediaWiki software. MediaWiki is written in the PHP programming language, and can use a relational database management system to store the articles.

Each article has the main article presented to the viewer. Furthermore there are 4 pages that are related to each article: the history page, the edit page, the watch page, and the discussion page. The watch page is not visible unless the user is logged in. The edit page allows an active user to alter the content of the article without these modifications being visible to everyone before the page is saved. The history page provides access to previous versions of the page. Every prior version of an article, up to the existing version of the article, can be found on the history page. The history page also offers the functionality of reverting the page to a previous version if the current version has been vandalised, and of showing the difference between two versions. Furthermore, there is a user page available to users who are logged in. The userpage allows the user to set preferences for the Wikipedia and

The number of articles in the Wikipedia is growing rapidly. There are currently close to 1.8 million articles in the English Wikipedia alone and around 2,000 new articles emerge every day [7]. It appears obvious that modifying such a large and dynamic system is difficult and should therefore not be attempted unless absolutely necessary, so the existing Wikipedia software base should be considered as a legacy system that cannot be modified. Fortunately, the functions of a reputation system is orthogonal to the basic functions of the Wikipedia, so it is possible to provide these functions, i.e., management of feedback and calculation of reputation values, from external servers.

As Wikipedia articles, including the HTML comments, can be modified by any- one, so ratings have to be secured against masquerading, modification and deletion. Masquerading and modification can be prevented by introducing cryptographic mea- sures, e.g., the user signs the content of the rating, which means that we need a repository for public-keys for all users who provide recommendations; this is exam- ined in greater detail in Section 4.4. The Wikipedia philosophy states that every- body can delete everything, which makes the WRS open to DoS attacks. However, once the ratings have been set on a page, they will always be available through the history page, where the prior versions are stored. Normally when a page is vandalised the page restore quite fast [3].

There are many possible ways to calculate a reputation value based on the information contained in a rating. The simplest way would be to calculate the arithmetic average of all the marks, but we believe that this is too simple because it does not allow for ethnic, religious, cultural or political differences between the users of the WRS. Instead, we proposed to calculate a weighted average of the marks, where the weights reflect the trust in the recommender (the Wikipedia user name stored in the rating).

The edit page is passed on to the Reputation Calculator, which extracts the re- commendations from the HTML page, verifies the recommendations (cf. Section 4.3) and stores the verified recommendations in a temporary Session Rating Database. The Rating Calculator module now calculates a personal rating based on the ratings in the temporary Session Rating Database and the trust values in the RoR. This rating is inserted into the HTML page along with the feedback option to the user and the HTML page is passed on to the browser.

The load times for the webpages are quite good. As described by Mc Nee et al. [17] an entity must have around 80 ratings in order to give a confident result. If we assume that a general article in the Wikipedia have around 100 ratings. This

IWTrust [23] is used to introduce trust into a question answering environment. The idea is that IWTrust tries to create proofs that an answer to a given question is correct. The IWTrust introduces a TrustNet, which is a network of trusted users. Every user that is connected to this network has a trust value - a degree of how much this user is trusted. We adopt the idea of having a network of trusted users, where each member has a trust value, into the Wikipedia Recommender System. With this trust value users find other users that are similar to themselves.

Although some simple tools based on reputation, such as the WOT extension for the Mozilla Firefox browser [8], are starting to appear, they typically rely on a central database for all reputation information, so all user feedback is collated into the same database and the server that hosts this database will also calculate the reputation values. We believe that there are obvious problems with relying on a single centralised data base of feedback for a reputation system, which should provide useful information across national, political, social, religious and cultural boundaries. Storing recommendations in one single database gives the advantage that the recommendations are always available and tamper proof, but it also gives the disadvantage that the centralised calculation of reputation values favours the majority of the users.

We have demonstrated the ability to seamlessly integrate a recommender sys- tem with an existing Wiki implementation, where recommendations are stored in invisible comments on the Wiki pages. This type of recommendation system allows clients to implement a subjective ranking algorithm, which prevents a (possibly artificially created) majority of users from dominating the recommendations made by the system. Moreover, the recommender system is designed so that it will be transparent to users who do not wish to use this recommender system.

