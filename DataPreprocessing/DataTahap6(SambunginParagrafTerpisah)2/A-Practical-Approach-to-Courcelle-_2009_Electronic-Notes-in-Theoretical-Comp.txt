and tree decompositions were introduced by Robertson and Seymour in a series of papers on graph minors [27,28,29], but turned out to be very useful in other areas as well, for example for solving hard problems on graphs. The reasons is, that one can often use the tree structure of the tree decomposition to solve the problem on G. Since the aforementioned graph separators have size bounded by the treewidth plus one, this approach can lead to algorithms with a run time polynomially bounded in |G| if G has bounded treewidth. This is one of the reasons why treewidth has found many applications in parameterized complexity theory.

The sets X(i) are called bags. The width of a tree decomposition is the size of its largest bag minus one and the treewidth of G is the smallest width over all tree decompositions of G. Without loss of generality, we assume that all tree decompo- sitions used throughout this paper are nice, i.e., {A, B} (left), but A is forgotten and hence is no longer a terminal (right). Since we only study those games where the first round is restricted to terminals, A no longer occurs in the root. However, it can still be chosen in the next two rounds, which adds a couple of new moves to the game. The places where A, now a non-terminal, has been chosen are marked bold.

As mentioned, this lemma can already be used in the dynamic programming to construct the possible game representations for join nodes. Of course, we also need to make sure that we can do so for introduce and forget nodes as well. For the former, this task is easily done.

a proper superset of the one-sorted MSO used in this paper, for example one can express the Hamiltonian Path problem, which is known to be impossible in one- sorted MSO. Using two-sorted structures as in, e.g., [1], i.e., a structure with a disjoint set of objects and two relations V and E that distinguishes vertex and edge objects, our method should carry over to two-sorted MSO. However, such structures

