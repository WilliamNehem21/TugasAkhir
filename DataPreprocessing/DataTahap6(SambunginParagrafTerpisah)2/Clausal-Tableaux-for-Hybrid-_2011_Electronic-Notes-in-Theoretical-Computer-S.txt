introduce the loop CtCt. The pair Ds is fine and adds the clause D and the link CtDs. The claim Ct is now realized. However, the new clause D has two unrealized claims Ds and Dt.  To realize Ds, we need a clause that supports the formula

We define a language-theoretic semantics for programs that treats formulas as atomic objects. This semantics is the base for the regular reasoner and decouples it from the propositional reasoner. It is also essential for the correctness proofs of the modal reasoner. The semantics is an adaption of the language-theoretic model of Kleene algebras with tests [12].

A quasi-branch that realizes all its claims does not necessarily have a model. To guarantee the existence of a model, we impose certain conditions on quasi-branches that act as invariants of the modal reasoner. One of the conditions is loop freeness.

