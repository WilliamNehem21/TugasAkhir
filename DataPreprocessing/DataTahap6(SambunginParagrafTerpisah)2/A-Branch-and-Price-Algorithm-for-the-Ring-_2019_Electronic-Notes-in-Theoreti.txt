The ring-tree facility location problem is a generalization of the capacitated ring-tree problem in which additional cost and capacity related to facilities are considered. Applications of this problem arise in the strategic design of bi-level telecommunication networks. We investigate an extended integer programming formulation for the problem and different approaches to deal with the NP-hardness of the pricing problem that appears in a branch-and-price algorithm to solve it. Computational experiments show how heuristics and relaxations improved the performance of a branch-and-price algorithm.

ferent approaches to deal with the NP-hardness of the pricing problem that appears in a branch-and-price algorithm to solve it. To accelerate the exact approach for the pricing problem, we consider a relaxation that allows vertex repetition inside the ring-trees. This relaxation is similar to the idea of ng-routes and q-arbs which were successfully used in variants of vehicle routing problems [4,5,22]. We also propose a primal heuristic to populate the initial basis and a heuristic for the pricing prob- lem. The remainder of this paper is organized as follows. In Section 2 we provide a formal description of the problem, additional definitions and notation. Section 3 is devoted to our algorithmic approaches, including a primal heuristic, heuristics and relaxations for the pricing problem. These methods are analyzed on instances from the literature and the computational results are reported in Section 4. Finally, we discuss some conclusions and address future work in Section 5.

Instead of finding the ring-tree with minimal reduced cost, we consider a relaxation for the pricing problem that allows some vertex repetitions. Our idea consists of combining two successful relaxations: ng-route and qarb relaxations, proposed in [5] and [22] for the capacitated vehicle routing problem and capacitated minimum spanning tree problem, respectively. This approach was also successfully applied to the CRSP [4].

is non-negative. The inner layer interactively and randomly selects a triple in RCL and finishes when no more arborescence can be joint to R. On the other hand, the outer layer finishes when the number of customers in V [R] reaches the limit Q. At the local search phase, we apply the well-known 2opt [6] to improve the reduced cost of the ring-tree. All ring-trees with negative reduced cost found are included as columns into the RMP.

to the root LB, the usage of the relaxed pricing problem decreased the initial LB quality only by 3% whilst (MCF) provided LB around 32% worse. Based on these results, we decided to analyze the performance to solve large instances (|V | = 51) only for three implementations (MCF+, SPFr+, and SPFr*). On large instances, MCF+ could not solve any instance at optimality while SPFr+ solved 3.3%. Both codes could compute a final duality gap for almost of instances, however the final duality gap reached by MCF+ was around 45%, on average, while SPFr+ reached around 14%.

