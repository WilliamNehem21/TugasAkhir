We compare the hybrid, stochastic, and differential semantics for stochastic Concurrent Constraint Pro- gramming, focussing on the exhibited behavior of models and their robustness. By investigating in detail two case studies, a circadian clock model and the Repressilator, we comment on the effect of the intro- duction of a limited amount of discreteness in the description of biological systems with hybrid automata. Experimental evidence suggests that discreteness increases robustness of the models.

In this paper we focus on a particular SPA, namely stochastic Concurrent Con- straint Programming (sCCP [5]), which has already been applied successfully to biological modeling [8]. In addition to the standard CTMC-based semantics, sCCP has also an ODE based semantics [6], as well as a further one based on Hybrid Au- tomata [7]. These three semantics associate different models to the same system, with a varying degree of discreteness and continuity. This feature can be exploited

The purpose of this paper is to start the investigation of these issues exploiting the above mentioned three different semantics of sCCP. In particular, we will focus on two properties of models: one is the exhibited dynamical behavior and the other is the robustness of the system. More specifically, we will concentrate on systems that are expected to oscillate in alternating phases.  Hence, we will investigate if oscillations are (qualitatively) preserved when kinetic parameters governing the dynamics are perturbed.

In the following we will discuss two case studies. The first is the well known Repressilator [11], a synthetic regulatory network supposed to exhibit an oscillatory behavior. We will compare the stochastic, differential, and hybrid sCCP models, performing a robustness analysis of the latter. The second system is a simplified model of the circadian clock [21]. In particular, we will be concerned with the effect on the stability of oscillations caused by the introduction of a small degree of discreteness and stochasticity.

Stochastic Concurrent Constraint Programming (sCCP [5]) is a process algebra ex- tending CCP [20] in which agents interact by exchanging information in the form of constraints through a shared store. We schematically introduce now a simplified version of sCCP. The interested reader is referred to [5,8] for further details.

Hybrid automata are dynamical systems presenting both discrete and continuous evolution. Essentially, they are defined using a set of variables evolving contin- uously in time, subject to instantaneous changes induced by the happening of discrete control events. When discrete events happen, the automaton enters its next mode, where the laws governing the flow of continuous variables may change. The traces of the system are the time traces of the continuous variables. Hy- brid automata are generally non-deterministic, hence there can be different traces starting from the same initial value. Therefore, the simulation of a hybrid au- tomaton consists in the generation of (a set of) admissible traces. The reader is referred to [14] for an introductory survey. Formally, a hybrid automaton is a tuple H = (V, E, X, flow, init, inv, jump, reset), where:

sCCP code for the Repressilator. We are using three template processes (with template variables X for the protein and R for the repressor) that are instantiated with the three global stream variables of the system, namely A, B, C. In the code, kp is the production rate of each gene, kb and ku are the binding and unbinding rates of the repressor, and kd is the degradation rate of each protein.

The circadian clock is also stabilized by the introduction of discreteness. In this case, however, stochasticity has a further stabilizing role. This effect is depending on events that, even if inhibited by the deterministic evolution, can be still triggered in the stochastic system due to its intrinsic variability.

We can then conclude that, at least in the two cases considered, robustness is increased by the discrete treatment of gene repression or enhancement. All in all, a small amount of discreteness can guarantee a more precise description (i.e. qualitatively similar to the CTMC-based model), without increasing too much the computational cost of simulation with respect to numerical integration of ODE.

Nevertheless, the mapping from sCCP to HA, however, can be generalized allowing a variable level of discreteness, letting the user specify what transitions are to be kept discrete and what transitions are to be approximated continuously. This will associate to an sCCP program an entire lattice of hybrid automata, differing in the degree of discreteness. An analysis of such lattice can identify the key discrete transitions, thus refining the study of robustness presented here. In this direction we are investigating an approach based on temporal logic. Essentially, we would like to understand how satisfiability of certain temporal formulae (expressing dynamical properties of interest) varies in the lattice, connecting patterns of satisfiability with structural properties of the lattice. As a matter of fact, also stochasticity can be introduced parametrically, associating to an sCCP program a lattice of SHA.

Our approach has also connections with hybrid simulation algorithms for multi- scale systems, like [13]. In fact, it is not difficult to describe such algorithms as simulations of a certain (stochastic) HA associated to the original system. Hence, they may be described within the generalization of our formal framework in terms of the lattice of (S)HA. This point of view can possibly provide new insights on these methods.

