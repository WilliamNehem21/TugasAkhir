This paper studies the monotonicity behavior of plural determiners that quantify over collections. Following previous work, we describe the collective interpreta- tion of determiners such as all, some and most using generalized quantifiers of a higher type that are obtained systematically by applying a type shifting operator to the standard meanings of determiners in Generalized Quantifier Theory. Un- like previous proposals, one unified determiner fitting operator both captures ex- istential quantification with plural determiners and respects their monotonicity properties. However, some previously unnoticed facts indicate that monotonicity of plural determiners is not always preserved when they apply to collective pred- icates. We show that the proposed operator describes this behavior correctly, and characterize the monotonicity of the collective determiners it derives. It is proved that determiner fitting always preserves monotonicity properties of determiners in their second argument, but monotonicity in the first argument of a determiner is preserved if and only if it is monotonic in the same direction in the second ar- gument.

Monotonicity and collectivity phenomena are pivotal in logical theories of natural language semantics. However, despite the many advances in the formal investigation of these phenomena, relatively little attention has been paid to the effects of collective interpretations of quantifiers on their monotonicity properties. In this paper we aim to formally study these re- lations. Using a novel collectivity operator on determiners that combines insights from previous works in generalized quantifier theory, we show that the conservativity of quantification in natural language is responsi- ble for two curious asymmetries in the monotonicity properties of collec- tive determiners. First, natural language determiners change their mono- tonicity behavior when they quantify over collections only if their stan-

In these sentences, the denotations of both the nominal (e.g. students, girls, etc.) and the predicate (e.g. happy, arrived, etc.) are traditionally treated as distributive predicates, which correspond to subsets of a do- main of (arbitrary) atomic entities. Standard GQT assigns determiners such as all, some and most denotations that are relations between such sets of atomic entities.

terminers and the monotonicity of their collectivized counterparts. We first observe that monotonicity entailments are not always preserved when a determiner quantifies over collections. Consider for instance the con- trast between the sound entailment in (3a) and the lack of entailment in (3b) below.

Unlike all, many other determiners do not lose their monotonicity prop- erties when they quantify over collections. For example, consider the de- terminer some, which is upward monotone in both its arguments. That some remains upward left monotone also with collective predicates can be observed in the following entailment.

The denotation of determiner expressions varies with the choice of the domain E. A global determiner is a functional that maps a domain E to a (local) determiner DE . We say that a determiner expression and the global determiner functional D that it denotes are upward (downward) mono- tonic in their left (right) argument if DE has this property for every choice of E.

We say that a global determiner D is left (right) trivial if the local deter- miner DE is left (right) trivial for every domain E. Intuitively, a left (right) trivial determiner is insensitive to the identity of its left (right) argument. We occasionally restrict our attention to determiners that are not right trivial, because every such a conservative determiner is also not left trivial.

This process of counting members of collections consists of two sepa- rate steps: (i) a conservativity step, in which the second argument is mod- ified by intersecting it with the first argument; (ii) a participation step, in which the first argument and the result of step (i) are both unioned, and serve as the first and second arguments of the determiner respectively. To illustrate the process consider sentence (7) and its analysis in (8) be- low. Note that, as in most other theories of plurals, distributive predicates, which range over atoms, can be mapped to predicates that range over sets of atoms using a distributivity operator. The powerset operator } is suf- ficient as a distributivity operator for our purposes in this paper. For in- stance, the plural common noun students in (8) is treated as denoting the powerset of the singular noun student.

The analysis in (9) verifies that there exists at least one set constituted by exactly five students who drank a whole glass of beer together. By conjoin- ing (9) with (8) we get the intuitively correct interpretation of sentence (7). Accordingly, the general determiner fitting operator is a conjunction of the counting operator and the witness operator.

2 Following [1], a witness set of a determiner D and a set A is any subset W of A that sat- isfies D(A)(W ) = 1. [1] define witness sets on generalized quantifiers explicitly, but they reach the argument A indirectly by defining what they call a live on set of the quantifier. This complication is unnecessary for our purposes.

The main result in this paper is that determiners like all and not all, which are monotone in their left argument but have a different monotonicity property in their right argument, lose their left monotonicity under count. In contrast, determiners like some and no that have similar monotonic- ities in both arguments do not lose their left monotonicity under count. Right monotonicity is always preserved under count, as well as (right and left) non-monotonicity. Although we concentrate here on the count op- erator, it is not hard to show that all these results are naturally extended to the case of the general operator, dfit. Thus, it is not the existential re- quirement within the dfit operator that is responsible for the exceptional monotonicity properties of collective determiners, but the counting pro- cess itself that collective quantification involves.

