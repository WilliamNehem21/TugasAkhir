Originally proved in 1986 by Robertson and Seymour, the Grid Theorem is one of the most important tools in the field of structural graph theory, finding numerous applications in the design of algorithms for undirected graphs. An analogous version of the Grid Theorem isn directed graphs was conjectured by Johnson et al. in 2001, and proved recently by Kawarabayashi and Kreutzer in 2015. Namely, they showed that there is a function f (k) such that every directed graph of directed tree-width at least f (k) contains a cylindrical grid of size k as a butterfly minor. Moreover, they claim that their proof can be turned into an XP algorithm, with parameter k, that either constructs a decomposition of the appropriate width, or finds the claimed large cylindrical grid as a butterfly minor. In this article, we adapt some of the steps of the proof of Kawarabayashi and Kreutzer and we improve the XP algorithm into an FPT algorithm.

Given the enormous success achieved by applications based on width parameters on undirected graphs, it is no surprise that there is interest into finding analogous definitions for directed graphs. An analogous measure for tree-width in the directed case is given in [17]. The directed tree-width of a directed graph measures its dis- tance to being a DAG, and an arboreal decomposition of a directed graph exposes a (strong) connectivity measure of the original graph. An intuition for the similarities between the undirected and directed cases can be found in [25].

It is worth mentioning that, sometimes, large tree-width (and therefore, the existence of a large grid minor) implies that we are actually working with a posi- tive instance of a particular problem. One such case is the longest path prob- lem. In [12], it is given a framework that generates fixed-parameter algorithms for many such problems, known as bidimensional problems. This list includes Vertex Cover, Feedback Vertex Set, minimum maximal matching, Dominating Set, Edge Dominating Set, and many others. This seminal work is known as Bidimensionality.

an irrelevant vertex, that is, a vertex that when removed does not change the answer to the problem, can be verified. This leads to an iterative algorithm, reducing the problem to a smaller instance, until it satisfies conditions for the tractability of the problem. This irrelevant vertex technique was widely used in a number of different problems (cf. [15, 19], for example).

Problem p can be naively solved by checking all n sets Z size r in V (D) and enumerating the strong components of D \ Z. Thus, it is in XP. In fact, this is the only step of the algorithm given in [17] which is done in XP time. In this section we show that it is also FPT , thus proving Theorem 2.9.

The FPT algorithm for problem p follows from Lemma 3.5 and Corollary 3.4. The running time is heavily tied to the number of partitions T that can be generated from a given set T of an instance (D, T, k, r) of p. This value is bounded by the k-th ordered Bell number [6]. The k-th ordered Bell number counts the number of ordered partitions of a set of size k and is of the form 2O(k log k).

The last lemma shows how to find a large well-linked set in a directed graph D of large directed tree-width. By following the remaining of the proof of the Directed Grid Theorem [18], which yields FPT algorithms for all the remaining steps, we can validate Corollary 2.13.

