We present a unified, axiomatic approach to proving lower bounds for the k-set agreement problem in both synchronous and asynchronous message-passing models. The proof involves constructing the set of reachable states, proving that these states are highly connected, and then appealing to a well-known topological result that high connectivity implies that set agreement is impossible. We construct the set of reachable states in an iterative fashion using a round operator that we define, and our proof of connectivity is an inductive proof based on this iterative construction and simple properties of the round operator.

Set agreement (and in particular consensus) has been studied in both syn- chronous and asynchronous models of computation, but mostly independently. In- deed, prior proofs for these models appeared to have little in common, as reflected by the organization of a main textbook in the area [14], where the first part is devoted to synchronous systems and the second part of the book to asynchronous systems. Recent work has been uncovering more and more features and structure in common to both models [8,12,15,16]. However, these results are in the form of transformations between models, or proofs that have a similar structure in both models. Only [15] describes an abstract model that encompasses both models, with clearly identified properties that are needed to carry out consensus impossibility results. To go from consensus to set agreement a big step in complexity is encoun- tered, since one must deal with higher dimensional topology instead of just graphs, as discovered by the trio of papers [4,13,19] mentioned above. The contribution of this paper is to present a new axiomatic approach were set consensus impossibility proofs can be derived in a uniform manner for both synchronous and asynchronous models.

this set may change from round to round. In each round, the nonfaulty processors broadcast their states to all processors (including the faulty processors). Each faulty processor broadcasts its state to some subset of the processors, and may omit to send to the others. Processors never crash. It can be shown that k-set agreement lower bounds in this omissions failure model carry over to the standard asynchronous crash-failure model; see [9] for a similar argument.

Given a simplex S and a set V , we define the pseudosphere P(S, V ) to be this set of labelings of S with elements of V . (We call P(S, V ) a pseudosphere because is has some of the topological properties of a sphere.) The face S is called the base simplex of the pseudosphere, and given a simplex T of a pseudosphere P(S, V ), we define base(T ) to be the base simplex S of the pseudosphere.

The input complex for k-set agreement is P(S, V ), the pseudosphere in which each vertex is labeled with an input from a set V , where |V | > k. The set of all reachable states of a protocol P with initial states P(S, V ) is the protocol com- plex C = C(P(S, V )). The fundamental connection between k-set agreement and connectivity is expressed in the following theorem (e.g. [11]):

The semantic interpretation of simplicial operators varies from model to model. In the synchronous message-passing model, l is the number of processors that can crash in each round. In the asynchronous model, l is the number of processors that remain partially silent in each round.

We use QkQl(S) to denote the composition of Qk and Ql applied to S, Qr(S) to denote the r-fold composition of Ql applied to S, and Qr(S)  to denote the simplicial complex induced by the set Qr(S) (i.e., closed under containment).

can change from round to round. Faulty processors never crash, but they can omit sending messages. In each round, all nonfaulty processors send their states to all the processors (including faulty ones), while the faulty processors send messages to an arbitrary subset of processors (perhaps none).

The difference between the synchronous and asynchronous round operators is that every pseudosphere has the same base simplex S in the definition of the asyn- chronous operator. Notice that S and every simplex in Al(S) have the same dimen- sion. With the asynchronous round operator, every processor in S (not just those labeling a face F of S) is labeled with states that include all nonfaulty processors and some subset of faulty processors.

