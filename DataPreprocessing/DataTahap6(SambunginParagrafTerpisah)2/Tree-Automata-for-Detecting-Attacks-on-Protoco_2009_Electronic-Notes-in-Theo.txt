An often encountered difficulty is about encoding with non-atomic keys. A non- atomic key is a key established in several steps from several data. This topic comes close to the handling of operators with algebraic properties. On a strongly typed model (model in which the structure of a compound key is clearly specified), most of the developed methods are able to perform a protocol analysis. Unfortunately a secure strongly typed model is not a secure model because of type confusing attacks.

In [6], a new kind of substitution has been introduced. We recall this definition below. Notice that the domain of these substitutions is not the set of variables anymore, but a set of positions. Thus, given a variable, this allows a symbolic representation of its values.

The over-approximation results in [6] do not provide a way to prove that a particular term is reachable: the method is not complete. This section adapts the means and extends the results in [6] to under-approximations computations. In the security protocol framework, computing under-approximations allows an under-estimation of the intruder knowledge, and thus secrecy flaws detection. Indeed, if a secret datum is in the intruder knowledge under-estimation, then the intruder actually knows this secret. The main idea (and problem) behind the under-approximations is that one wants the languages of computed tree automata to be in the set of terms reachable by rewriting . Having some conditions on the TRS makes it possible to control the completion, and proving that a term is actually reachable is then possible.

The Diffie-Helmann Protocol is a key establishment protocol between two agents A and B. The simplest version of this protocol is composed of three steps. At step 1, A generates the nonce Na and computes exp(G, Na) (standing for GNa) where G is a number known by every agents. Thus A sends the message exp(G, Na) to the agent B. At step 2, the agent B generates also a number Nb and computes on the one hand exp(G, Nb) and on the other hand K = exp(X, Nb) where X is the message received i.e. exp(G, Na). The former is sent to A and the latter stands for the symmetric key shared between A and B. As soon as B receives the message exp(G, Nb) from A, (s)he then computes exp(exp(G, Nb),Na) and thus considers it as the symmetric key shared with A. Indeed, according to the algebraic properties of the exponentiation, K = exp(exp(G, Na),Nb) = exp(exp(G, Nb),Na). Finally, the message {secret}K is sent by A to B in which secret is a datum initially known uniquely by A and B. Using TA4SP this protocol has been shown as being flawed in

Roughly, the intruder establishes two keys: exp(exp(g,n1(Na)),g) with a at steps 2 and 5 and exp(exp(g,n5(Nb)),g) with b at steps 3 and 4. At step 6, the agent a sends the secret data to b with the key unfortunately shared with the intruder. The intruder then extracts the secret data and forwards it to b with the other key. Finally, b is persuaded that this message comes from a.

In the recent survey [11], the authors give an overview of the existing methods in formal approaches to analyse cryptographic protocols. In the same work, a list of some relevant algebraic properties of cryptographic operators is established, and for each of them, the authors provide examples of protocols or attacks using these properties. This survey lists two drawbacks with the recent results aiming at the analysis of protocols with algebraic properties. First, in most of the papers a partic- ular decision procedure is proposed for a particular property. Second, the authors emphasise the fact that the results remain theoretical, and very few implementations automatically verify protocols with algebraic properties.

The recent Scyther tool [14] can verify protocols with an unbounded number of sessions and nonces. It can handle verification of complex authentication properties, handle non-atomic keys, and generate correct attacks. A performance comparison between Scyther and a number of other tools has been detailed in [15]. Notice that

V. Cortier, G. Keighren, and G. Steel. Automatic analysis of the security of xor-based key management schemes. In the 13 th International Conference on Tools and Algorithms for the Construction and Analysis of Systems, TACAS 2007, Proceedings, 2007. To be published in Lecture Notes on Computer Science.

