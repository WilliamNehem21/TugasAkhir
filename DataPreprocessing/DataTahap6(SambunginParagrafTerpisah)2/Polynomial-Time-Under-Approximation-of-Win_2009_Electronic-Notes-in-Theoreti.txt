In Section 2 we recall some basic concepts for parity games. Our design pattern, its invariants, and correctness are discussed in Section 3. Three aspects, with which our design pattern can be instantiated, are presented and proved to be correct in Section 4. In Section 5, the beneficial interaction of aspects are investigated and a approach in aspect A3 discussed below. This incremental approach will also allow an incremental computation and storage of memoryless winning strategies in our design pattern which, for sake of brevity, we will not discuss in this paper. Adding such functionality is a routine matter.

1, who does not own v1, it must be the case that games G(v1,v3) and G(v1,v2) have the same winning regions. But aspect A3 then recognizes that node v0 is won by player 1 in game G(v1,v3), and by player 0 in game G(v1,v2). Therefore, probe(A3) recognizes in its first stage that v1 is won by player 1 in G.

This paper is based on preliminary work reported in the extended abstract [1]. In loc. cit., neither the aspect transformer nor proofs are given but the design pattern (without handling dead ends and self-loops) and weaker invariants are presented. That paper features four aspects, of which A1 is as presented in this paper and A3 is formulated in a non-incremental manner. Using the notion of lax parity games, we could and did merge aspects A2 and A4 of [1] into the single aspect A2 of this paper.

In [11], the characterization of winning strategies through progress measures (as given in [13]) is exploited to reduce the problem of solving parity games to satisfia- bility checks in propositional logic, and first experimental results for this reduction are presented. This approach only decides the winning status of a chosen node and still has to be extended to global reasoning over parity games. Again, it would be of interest to study whether progress measures and their resulting reduction to satisfiability can be formulated as aspects within our framework.

