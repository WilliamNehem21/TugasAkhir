Throughout this paper we consider the following example which can motivate and illustrate our approach. We assume the situation of a student finishing his lectures, moving out the university building and looking for an available vehicle in order to move to a given place. In front of the university there are a tram stop, a bus stop, and taxicabs. The student has the possibility to use any of the three types of vehicles: bus, tram and cab to reach the target location. Since the three variants (vehicles) have different costs, the student can establish a priority among them: the bus has the highest priority, followed by the tram, and finally the cab. The bus and the tram are moving according to a predetermined schedule which is evolving according to their own clocks. Our scenario involves a bus, a tram and two cabs (a hired cab and an available cab).

Well-typedness of processes is defined by a set of static rules (a detailed presen- tation of the static typing rules is given in [4]). These rules express the behaviour of a process with regard to its types. If a process tries to communicate on a channel for which it has no capability, it can still be well-typed if the alternative process Q is well-typed. Q is called the safety process.

We imagine large populations of interacting processes defining an interaction field. This means that we embed the viewpoint of interaction as a pair (action, reac- tion) into an interaction field where emergence properties and non-compositionality could play important roles. Since we do not know how to describe/specify this kind of interaction field, we use a notion of proximity expressing the fact that the inter- action between pairs of processes depend on a dynamically changing topology given by the whole interaction field. A possible example could be the flocking behaviour given by the formation of flocks by birds and their evolution. In order to emphasize the spatial nature of interaction in the framework of an interaction fields, we denote by p(n, r) the area of (inter)action of an ambient n; it depends on the radius of (inter)action r it has at a certain time.

Over tMA we can define a coordination pair (T , CP). The first component T of this coordinating pair is a function assigning initial values to the timers, capacities and proximities. The second component CR is given by a set of rules. In our example

Timers are used to restrict the interaction between components, and they can be used to control the resource availability. In timed mobile ambients we have a hier- archical representation of space, and a more realistic description of the distributed computation and mobility. In timed mobile ambients the interaction between com- ponents depends also on a proximity function which suggest a dynamic topology related to an interaction field, and allow the interaction between two processes in a general context.

