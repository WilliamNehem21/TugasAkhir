Component-based Software Engineering (CBSE) has become a widely used develop- ment technique for all kinds of applications. It addresses development complexity by introducing well-defined building blocks called components, which participate in all stages of application development. Components as well as other core development assets (i.e., modeling and deployment tools, execution environment) are typically defined by so called component framework.

SOFA2 [1] is a component framework enabling application development by offer- ing hierarchical components and a rich set of additional features including behavior specification and verification, dynamic architectures, UML-based design, and trans- parent distribution based on automatically generated software connectors. Contrary to other hierarchical component systems, SOFA 2 supports a complete component life-cycle, i.e., from a design stage till execution and maintenance.

Connections among components are realized by software connectors. At design time, they are just links with an associated communication style and EFPs. At deployment time and runtime, the connectors are realized by an automatically gen- erated infrastructure mediating communication which reflects the properties and components distribution [2].

The common runtime environment defines a concept of SOFAnode, which con- sists of a dedicated component repository and multiple component containers called deployment docks. These docks reside on physical deployment nodes (e.g., com- puters, virtual machines). A deployment dock provides necessary infrastructure for deploying, launching, and executing components. The dock can also ensure additional capabilities and services (e.g., OSGi services, persistence, transaction management). Furthermore, the overall runtime infrastructure includes additional technical elements such as a deployment dock registry, which supervises running docks, and a global connector manager, which controls inter-docks connections and transparent distribution.

All the described tools, corresponding source code, and documentation are available at the SOFA 2 homepage http://sofa.ow2.org/. Furthermore, SOFA IDE is pub- lished via an Eclipse update site located at http://sofa.ow2.org/update-site/. The SOFA 2 component framework and related tools are distributed under the LGPL license. 3

The SOFA 2 binary packages including the runtime environment, repository, and Cushion tool can be downloaded from http://sofa.ow2.org/. To install them it is necessary to unpack the downloaded packages. To install the graphical designer SOFA IDE and management tool MConsole the best option is to use the Eclipse update site located at http://sofa.ow2.org/update-site/.

Assembly. Based on the UML design, SOFA IDE proposes an assembly of com- ponents. In this case, the top-level composite component PingPong serves as an assembly template, which is filled by particular realization of sub-components. The complete assignment is specified by an assembly descriptor.

