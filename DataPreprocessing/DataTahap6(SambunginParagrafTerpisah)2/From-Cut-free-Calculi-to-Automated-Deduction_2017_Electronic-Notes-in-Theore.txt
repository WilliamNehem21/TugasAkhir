Here we consider weaker variants of the contraction rule, the so-called bounded contraction rules, which for a fixed k, contract k +1 copies of a formula into k copies. These rules are special cases of knotted rules [10] and play an important role, e.g., in finite-valued L- ukasiewic logics [15] or varieties of residuated lattices [8].

splitting of contexts, hence solving the problem of the exponential choice inherent in the rules of bounded contraction. This choice is substituted by a much simpler one: from which context, on the leaves, an atomic formula should be taken. This not only turns bounded contractions into harmless structural rules, but also provides the basis for efficient theorem provers for a number of logics. An implementation of the system, available at http://subsell.logic.at/flew, is also presented. We

We now move in the direction of proposing a notion of focusing [1] for systems with bounded contractions. We start by analyzing the possible orderings of applica- tions of rules. The goal is to organize proofs in order to reduce the non determinism, as in [13].

We can hence separate the proof steps into two phases. In the negative phase all negative rules are applied eagerly until the left context has only atomic or negative formulas and the succedent formula is positive or atomic. When this process termi- nates, we may possibly apply k a number of times and the positive phase starts by choosing a negative formula on the left or a positive one on the right. The focus- ing persists until a positive formula appears on the left context or a negative one appears in the succedent, and we come back to the negative phase.

GHz Intel Core i5 with 8 GB of RAM running Maude 2.7. The source code and examples can be downloaded from http://subsell.logic.at/flew. We stress out that, although the examples were implemented for k = 2, the implementation for any k is a trivial adaptation of the systems implemented so far.

There are a number of ways of continuing this work. The first goal is to determine the exact complexity of FLew plus bounded contractions. That is, knowing that checking validity in such systems is PSPACE-hard [11], Theorem 4.2 implies that such complexity can be either PSPACE-complete or EXPTIME-complete.

Also, all the results presented in this paper strongly rely on the fact that the base logical system allows weakening. Without it, the situation is more complicated. For example, there is no more a clear separation between formulas behaving classically or linearly, and hence the notion of lazy splitting has to be completely reformulated.

