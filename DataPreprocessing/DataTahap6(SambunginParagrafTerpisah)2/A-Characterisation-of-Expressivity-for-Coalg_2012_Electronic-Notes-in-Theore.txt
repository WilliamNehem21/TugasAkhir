In [15] an abstract, category theoretic, characterisation of expressivity for coalge- braic bisimulation was given. This characterisation is in terms of internal models for a modal logic, and these were also introduced in [15]. In this paper we extend that work to include both bisimulation and simulation.

A general outline of this paper is as follows. In Section 2 we give an overview of the framework in which we work. Then in Section 3 we define the preordered sets. In Section 4 we recall from [15] the definitions and results we need, and in Section 5 define our generalised notion of expressivity. Section 6 contains our main characterisation result, and finally in Section 7 we work through the well known expressivity result for simulation of finite branching labelled transition systems as an example.

Increasingly, the standard approach to coalgebraic modal logic is to formulate it in a dual-adjunction framework [10,8,5]. In [12] this is extended to an enriched setting, where the enrichment is over a symmetric monoidal closed category that is complete and cocomplete. It this enriched version that we use, and in the remainder of this paper all categories, functors, etc. should be assumed to be enriched.

The category X represents a collection of state spaces, and a collection of gen- eralised transition systems is defined on these state spaces as coalgebras for an endofunctor T . Similarly, the category A represents a collection of base logics to which modal operators are to be added. These are introduced via an endofunc- tor L, and the corresponding modal logics are the L-algebras. The semantics of

In future sections we will also need colimits of models. Because we are working in an enriched setting the general case is that of weighted colimits, but we shall only need conical colimits i.e. those that correspond to colimits in the ordinary categorical sense. However, we must not forget that homobjects of mediating mor- phisms and cocones (for a fixed diagram and object) must be isomorphic as objects in SetR, not just as sets.

Example 5.3 Consider the logical connection of Example 3.4, and where we fix the type R to be preorders. Then logically R-related corresponds to inclusion of theories. To explain behaviourally R-related we can consider a generalisation of the finite powerset functor on SetR. We define

The type R determines which type of behavioural relation we have e.g. simula- tion or bisimulation, but it is the definition of the functor T , specifically the way it defines an R relation on the codomain (in practice probably via a relator), that determines what is actually meant by simulation for the T -coalgebras.

We have thus shown that every model for L factors via an R-model. Further, since SetR has coproducts, by Theorem 4.6 the coproduct of any pair of R-models, as models, exists, and since any model factors via an R-model, this yields a cospan of R-models. Therefore we have satisfied the premises of Theorem 6.1 and so we can conclude, as expected, that L is expressive for simulation of finite branching labelled transition systems.

