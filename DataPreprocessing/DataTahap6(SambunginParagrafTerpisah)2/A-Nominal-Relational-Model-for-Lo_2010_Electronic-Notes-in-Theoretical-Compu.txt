The theory of nominal sets is a theory for names, freshness and binders. It has recently been suggested as a framework for modelling local store because it allows for a more elementary development than the traditional presheaf models. However, when modelling the important principle of relational reasoning for local store all these models use families of relations indexed by relations on store, and thus essentially return to presheaf models on the relational level. In this paper we show how relational reasoning can also be modelled using nominal sets. Building on a model suggested by Pitts and Shinwell we construct a relational model for local store in nominal sets in which types are interpreted as relations. These relational interpretations of types capture, in a single relation for each type, the relational reasoning principle for local store which in previous models was captured using a family of relations for each type. The relational model also demonstrates how the relations constitute a model in their own right, which hopefully means that they can be used to construct better models. Using the relational model we construct a relational parametricity principle for the operation allocating local store, and we show how this implies the relational reasoning principle.

For the moment the type [Ab]T (X) should the thought of as a type of computations in T (X) with a bound name of a reference cell of type b. In Section 3 we shall model this type using atom abstraction in nominal sets. The intuition for newX,b is that it returns the computation that allocates a fresh cell of type b, initializes it to the given value of type b and continues with the given computation with the abstracted name bound to the allocated cell.

As in [17,1] we use a cps style semantics, because it greatly simplifies the inter- pretation of allocation. So we assume given a nominal set R of results, which has trivial permutation action. The set A is a nominal set with the obvious action and recalling that each sort b has an interpretation as a set, we can consider each of these a nominal set with trivial permutation action.

with permutation actions given by application. The relation is given (as a span) by the inclusion of ARel = {a | p(a)= r} into both these sets. This defines an object of Rel for which we shall often simply write ARel. In general, we shall usually simply denote objects of Rel simply by their third component.

Proposition 4.4 is proved by induction over the typing rules, but we omit the details. Most cases follow from the fact that the interpretation of Fine-Grained- CBV is given by the cartesian closed structure and the monad, and both projections of (9) preserve this structure. This leaves the operations for local store, and these cases follow from Theorem 5.1 below.

the abstracted cells. Using an appropriate generalisation of Theorem 5.1 involving vectors of update, lookup and new operations on each side, one can use this to prove soundness of relational reasoning using relations between vectors of cells. We leave further details to future publications.

