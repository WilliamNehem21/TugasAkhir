In this paper, we do not attempt to consider all the functions provided in a typical PKI system such as key generation and revocation-list management. We are interested in authentication related operations, security knowledge of the par- ticipants (user, server), security tokens, and administrative operations such as adding/removing users and trusting certificate authorities. We assume that: this PKI system will work in a closed environment, where all users can be identified and every user holds one certificate and its corresponding private key; also, PKI entities (i.e. client, server) do not need to negotiate which cryptographic algorithms they will all use.

In order to ensure the authenticity of public keys, digital certificates are used to enable the binding of a public key to identifying information about a subject on the certificate (i.e people, servers, organizations) in such a way that its integrity and validity can be verified [2]. Digital certificates can be viewed as a security token in which public keys may be stored, distributed or forwarded over a public network such as the Internet. In PKI, the binding between subject and key is established

Let [algo ] denotes the semantic of the cryptographic algorithm, algo. For ex- ample, one of the most common used cryptographic algorithms is AES [15]. The semantic of AES is a function that takes a key and data to be encrypted, and returns the data in encrypted form.

In this paper, it is assumed that the authentication server operates in a closed envi- ronment such as in a Bank or a University. The server administrator is responsible for maintaining a set of current registeredusers. Therefore, authenticating users can be achieved by validating their certificates, verifying that they have knowledge of the private key corresponding to the one on the certificate, and by checking that their subject name is in the list of registered users. In open systems, there is no need for the registeredusers set; any user who can pass the validation and verification phases can be considered authenticated. The abstract state of an authentication server consists of the following six components:

Formal methods have been used for specifying, formulating, designing, analyz- ing, and verifying cryptographic protocols and particularly authentication protocols [20,3,4]. The literature also contains a number of approaches for applying formal methods to the PKI problem [13,16,9,11,23,14]. In [14], the authors presented a formal specification of a certificate management management system and some ba- sic operations such as certificate issuing, certificate revocation using a state based approach. Schneider, Ryan, and Lowe developed formal security analysis methods which were successfully used to find security flaws or prove their absence using CSP [20,3]. Woodcock and his colleagues [17] as well as Laurence [12] have used a combi- nation of state-based Z specifications and event-based CSP models to capture and reason about distributed applications.

In this paper, key components of certificate based PKI were formalized in order to have a clear and rigorous understanding of them and to avoid ambiguities. These components were used as building block to construct a formal model for certificate based PKI authentication. The formalization of the PKI authentication system is expressed by combining some aspects of Z and CSP notations. The consistency of the model is checked with ZTC tool.

