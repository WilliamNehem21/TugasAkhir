To develop formally the definition of approximation we will need to be able to talk about functions and their arguments in a precise way. If a function f (x1,... , xk) is defined on exactly Xk and takes values in X, we say it is

Now we want to define a kind of substitution operation on variables. For example, if f (x, y) = xy we could substitute a for x and b for y to obtain f (a, b)= ab; we could also substitute z for both x and y obtaining f (z)= z2. Thus the operation can be used to change the names of variables, or effect a genuine change in the function (note that though formally we defined the variables V = {v1, v2,.. .}, we will in fact freely use any lower case letters for variables).

Definition 3.2 (Function Algebras) Suppose B is a set of functions (called basic functions), and O is a set of operations. Then FA[B; O] is called a function algebra, and it denotes the smallest set of functions containing B and closed under the operations in O. For ease of readability, we often list the elements of B or O simply as a list separated by commas.

Recall that by convention all sets of functions (including ones defined via function algebras) are implicitly functions with variables, closed under sub (notice that sub is in fact an operation, so the convention means that it is included in all function algebras as one of its operations). Notice that in a function algebra, there could be 2 distinct ways to construct the same function. This highlights the syntactic side of a function algebra, which will become an issue in the section 5.

The previous lemma demonstrates the utility of approximating an oper- ation. The straightforward approach to showing that some function algebra contains another (or approximates another) is to work inductively on the par- ticular function algebra in question. For another related claim, the same pro- cess is carried out, starting from scratch. With the concept of approximating an operation we can show once and for all the resources needed to approx- imate an operation and then this fact can be re-used in different contexts. This technical point fits in with our vision of trying to develop a collection of generally applicable tools, within the context of the method of approximation. We will now show how composition can be approximated in a general way (in this paper it will be used for two special cases). We introduce some

Definition 4.1 (from [3]) Suppose F is a class of functions on R. By the discrete part of F , denoted dp(F ) we mean the following class of functions over universe N: First take all the functions in F whose values are in N on domain N; then restrict these functions just to domain N.

algebra with universe Q. This function algebra will naturally approximate L (corollary 4.24). Then we can naturally interpret this function algebra on Q into FAN (see corollary 4.12). The theorem then follows by the transitivity of the approximation relation. At the end of this section we discuss a number of advantages of this approach.

We point out here that most of the work of this section is needed for the theorem of the next section. We re-use exactly corollary 4.24 in the next section; in the next section we need to prove the opposite approximation in corollary 5.24 and both approximations are used to obtain corollary 5.25. Thus given that we want the result of the next section, the only extra work in this section is the relatively straightforward work with the interpretation.

The next important technical lemma relates to the syntactic structure of the function algebra (i.e. the construction trees, recall definition 3.5) and is sensitive to the exact definition of the function algebra (i.e. other function algebras which yield the same functions in the end, might have the wrong syntactic property).

