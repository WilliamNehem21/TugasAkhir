specification formalisms. Moreover, the connections can be considered generic as they also allow a great variety of instantiations. The basic idea for the generic com- ponent concept stems from data type specification, precisely the algebraic module specifications [5]. It was used for various related algebraic specification techniques as e.g. in [2,11]. The transfer to process description techniques was started in [22] where modules for graph transformation systems and local action systems were in- vestigated. In [16] Petri net modules were introduced independently of the generic framework, but were shown to be compatible in [20]. In [6] algebraic high-level nets and in [17] deterministic automata were demonstrated to be instantiations.

This paper is organized as follows. First we present in Section 2 the basic concepts and results at the abstract level of the generic component concept. In Section 3 we present the instantiation to place/transition net systems and temporal logic. We conclude with a discussion of related work and the practical impact of this approach.

In [16] Petri net components have been first introduced. The import interface specifies resources which are used in the construction of the body, while the export interface specifies the functionality available from the Petri net component to the outside world. The body implements the functionality specified in the export inter- face using the imported functionality. Here, we need to treat the markings explicitly

We use much simpler morphisms than in [16] that do not preserve any specific properties as safety or liveness. The import morphism imp is a plain, injective morphism and describes where the resources of the import are used in the body. The export morphism exp is a t-partial, injective morphism. So, we have a very loose interpretation of refinement: those transition that are not mapped represent some not explicitly specified subnet of the target net.

Note that the initial marking does not play a role in this category as the mor- phisms do not take it into account. So, all PT systems that consist of the same net, but have different initial markings are isomorphic in PStp. However, we have a unique marking for extension diagrams in Fact 3.4.

