systems, and input/output behaviours resulting from the actions of impera- tive programs. The rearrangement condition is a local criterion that abstractly expresses the preference of certain relational steps over others. And by separa- tion of termination, the termination analysis for a complex loop of a relational system, in which relational steps can be executed nondeterministically, can be reduced to the termination analyses of simpler, more deterministic loops.

Modal logics belong to the most popular tools in program verification. But in the context of program refinement and termination analysis they have so far rather been neglected. This paper demonstrates their relevance to refinement beyond model checking. The integration of modal algebras into off-the-shelf ATP systems yields powerful formal methods with which some complex prop- erties and behaviours can easily be verified.

It is has been shown that this operation captures infinite and terminating behaviour properly on relation Kleene algebras. However, it behaves anoma- lously on more general relational structures and on trace, path and language Kleene algebras [8,15]. This is our main motivation for considering terminat- ing and infinite, diverging dynamics in a different, modal setting.

Semiring modules and Kleene modules are weaker than modal semirings and modal Kleene algebras. The following fact does not hold in the module- based setting. An endofunction f on a semilattice L is completely additive if it commutes with all existing suprema.

This theorem states that, in the presence of quasicommutation, an infinite loop, in which two actions are nondeterministically executed, can be separated into two deterministic infinite loops. A fully automated proof with the ATP system SPASS [2], which is particularly suited for the two-sorted setting of divergence Kleene modules, has also been given. The left-to right direction that uses quasicommutation took about two minutes on a standard PC. The converse direction took about three minutes.

Another interesting question is whether the DBW-theorem is again a corol- lary to some loop refinement theorem similar to Theorem 7.1. But we could so far neither prove such a theorem nor find a counterexample to (13). This question certainly deserves further investigation.

