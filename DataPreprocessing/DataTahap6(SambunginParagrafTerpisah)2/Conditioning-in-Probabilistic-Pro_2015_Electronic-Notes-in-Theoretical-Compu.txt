In recent years, interest in probabilistic programming has rapidly grown [9,11]. This is due to its wide applicability, for example in machine learning for describing distri- bution functions; Bayesian inference is pivotal in their analysis. It is used in security for describing both cryptographic constructions such as randomized encryption and experiments defining security properties [4]. Probabilistic programs, being exten- sions of familiar notions, render these fields accessible to programming communities. A rich palette of probabilistic programming languages exists including Church [8] as well as modern approaches like probabilistic C [23], Tabular [10] and R2 [22].

To model probabilistic programs with conditioning we extend pGCL with ob- servations, leading to the conditional pGCL (cpGCL). At the syntactic level, an observation is introduced with the instruction observe (G), G being a Boolean ex- pression over V. The effect of such an instruction is to block all invalid program executions violating G and rescale the probability of the remaining executions so that they sum up to one.

