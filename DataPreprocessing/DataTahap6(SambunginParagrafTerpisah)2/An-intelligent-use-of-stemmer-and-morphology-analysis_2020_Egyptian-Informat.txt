Arabic Information Retrieval has gained significant attention due to an increasing usage of Arabic text on the web and social media networks. This paper discusses a new approach for Arabic stem, called Arabic Morphology Information Retrieval (AMIR), to generate/extract stems by applying a set of rules regarding the relationship among Arabic letters to find the root/stem of the respective words used as indexing terms for the text search in Arabic retrieval systems. To demonstrate the usefulness of the proposed algo- rithm, we highlight the benefits of the proposed rules for different Arabic information retrieval systems. Finally, we have evaluated AMIR system by comparing its performance with LUCENE, FARASA, and no- stemmer counterpart system in terms of mean average precisions. The results obtained demonstrate that AMIR has achieved a mean average precision of 0.34% while LUCENE, FARASA and no stemmer giving 0.27%, 0.28% and 0.21, respectively. This demonstrates that AMIR is able to improve Arabic stemmer and increases retrieval as well as being strong against any type of stem.

Construction of Arabic words is based on abstract forms known as roots. A root, in phonetics, is the most basic word that serves as a base to generate other derivatives obtained by blending suffixes or affixes on the root to produce verbs, adjectives and nouns [3,4]. It is worth noting that the Arabic language is very inflectional as it has trilateral roots used to derive over 85% of its words. Typically, Ara- bic language verbs and nouns are derived from a set of 10,000 roots [5].

Arabic stems are different when compared to other languages such as English, French etc. In addition, Arabic nouns can take the form according to several factors such as plurality (plural, sin- gular, or dual), gender (feminine or masculine), and grammatical tense (present, past, future, and command). In contrast, stemming refers to a computational technique used to reduce words to their respective stems or roots. One disadvantage of the existing Arabic stemmers is that they are prone to immense stemming error-rates [13].

Over the last few decades, several works have been carried out for Arabic information retrieval problems. However, many weak- nesses and problems still face the Arabic language retrieval since they mainly rely on morphological and stemming analysis with lit- tle attention or emphasis on lemmatization. This section discusses recent advances in stemming, and morphological analysis and how they have an impact on the retrieval of documents in Arabic.

Larkey [20,21] shows better retrieval efficiency as described in Light stemming which merely removes prefixes and suffixes depending on a predefined list. However, it does not guarantee the production of better results when evaluating experiments. Therefore, the proposed method intends to increase the production of better results by incorporating the use of infixes to suffixes and prefixes. There are a number of root extraction techniques for Ara- bic language known as heavy stemming or stemming based root words which work by removing all affixes as described by Khoja affixes can generally be divided into two groups: (prefixes and suffixes). However, in Arabic language, affixes can be divided into three groups: (prefixes, infixes, and suffixes). Therefore, existing schemes are unable to extract stem or root of words having an infix. In Arabic morphology there exist many words that have infixes and removing an affix depends on the morpho- logical structure of the language. In addition, extracting the root of a word in its plural form can always be challenging and con-

Darwish [23] proposed FARASA system which also segments Arabic text into words. However, this stemmer technique handles prefixes and suffixes. Our proposed, AMIR leverages on some FAR- ASA components but has its own rules that allow for handling problems of infixes in addition to improving the generation of pre- fixes and suffixes.

together. In case (a), there are 7 prefixes cannot join with infixes. In case (b) there is no exceptions, all prefixes can join with all suf- fixes. In case (c) there are 24 exceptions which are not permitted. In case (d) affixes can connected to each other if they do not form the exceptions above. These exceptions motivate the following definition.

Derivational structures of Arabic often change word meaning and it consist of prefixes, infixes, and suffixes in derived word. While inflectional structures not change word meaning and it con- sist of prefixes, infixes, and suffixes. In this paper, we removed the inflectional and kept the derivational.

Light stemming [20] is one of the most renowned Arabic stem- mers, aims to strip off a set of prefixes and suffixes. However, exist- ing light stemmers [20,25,26] are extracting root/stem by removing prefixes and suffixes from a word without deal with infix stemmer. In this paper, we developed a light stemming by adding extra prefixes and suffixes in addition to infixes in order to improve the effectiveness of information retrieval systems in Arabic. There- fore, the proposed method is capable to produce a high- performance tool to extract Arabic root/stems by removing stickers from a word included infixes to suffixes and prefixes.

Substring tagging: the morphological information that charac- terizes possible substrings of respective words is extracted. Based on the results, we can accurately determine which word substrings are morphemes. This phase is also instrumental in ensuring that clusters of each morpheme are extracted. The clusters are used in the rule matching phase. Rule matching: each core that has been extracted from the substring tagging phase is used to determine the rules employed in the extraction. Anti-rule matching: this is tweets represented in Unicode and encoded in UTF-8, and covers 50 significant events for which about 62 K tweets. We also evaluate our approach using Trec_eval software which is available at: (https://trec.nist.gov/trec_eval). It uses different measures of infor- mation retrieval. In our work, we have used precision @ 10, preci- sion @ 20, and Mean Average Precision MAP as evaluation metrics see evaluation results section.

The rationale behind this paper is to improve Arabic extraction of root/stem to build effective Arabic information retrieval sys- tems. The proposed method has shown to improve Arabic Stemmer and increases retrieval performances. In our experiment, we have compared AMIR against LUCENE, FARASA, and no-stem methods. The obtained results in terms of the mean average of precision have resulted in 0.34%, 0.27%, 0.28, and 0.21% for AMIR, LUCENE, FARASA and non-stem, respectively. This shows that our proposed AMIR stem algorithm outperforms others.

