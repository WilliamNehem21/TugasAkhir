In this paper we introduce a novel burst-mode GALS technique. The goal of this technique is improving the performance of the GALS approach for systems with predominantly bursty data transfer. This new technique has been used to implement a GALS-based version of a hardware accelerator of a 60 GHz OFDM baseband processor. The simulation results show a significant performance improvement in comparison with a classical implementation of GALS using pausible clocking.

For wireless communication systems, the design challenges are often even more difficult. The design complexity increases rapidly. For example, the complexity of a currently utilized 5 GHz WLAN OFDM baseband processor supporting data rates up to 54 Mbps is around 500k gates [3], the state-of-the-art 60 GHz OFDM base- band processor supporting data rates up to 1 Gbps has a complexity of more than 23M gates [4], and research efforts are now targeting data rates of 10 Gbps which will increase the complexity by one order of magnitude. Furthermore, the commu- nication systems impose additional issues such as low-power and EMI reduction, in order to increase mobility and achieve System on Chip (SoC) integration.

In the following section we describe the concept of the novel burst-mode GALS wrapper. In section 3, we give some details of the wrapper implementation and compare it to the other GALS solutions. Section 4 is dedicated to the practical application of this concept to a hardware accelerator for a 60 GHZ OFDM baseband processor. Finally, we will draw some conclusions.

faces is the inability to support one data transfer per one clock cycle. Most GALS implementations support one data transfer per two clock cycles (or less). On the other hand, there is a limited set of interfaces able to cope with data bursts, i.e. enabling data transfer on each clock cycle of the local clock. However, there is a general problem of such pausible clocking interfaces with bursty data transfer. Traditionally, pausible clock based GALS approaches, synchronize between com- municating modules during each data transfer, adding unnecessary overhead. In addition to that, it looks unnecessary to synchronize the clocks for each clock cycle when operating in burst mode.

A more complex but also more realistic case is to have more than one master and slave in the system. Our burst mode GALS scales well also for more involved systems. However, the clock generator for the slave block has to be also pausible if this block is also master block for some other GALS module, as defined in section 2.

once at the beginning of the burst and from this moment no synchronization is needed. This is a significant advantage in comparison with classical pausible clock- ing interfaces. The applied solution is by nature similar to the one proposed in [10]. However, the implementation is much simpler and the throughput is much higher.

L. A. Plana W. J. Bainbridge, S. B. Furber. The design and test of a smartcard chip using a CHAIN self-timed network-on-chip. In Proceedings of the Design, Automation and Test in Europe Conference and Exhibition, Vol. 3, page 274, Feb 2004.

