be considered as the free ports of the linear combination itself. This allows to connect together general nets and not only simple nets, through their free ports. To turn such a connection of linear combinations of simple nets into a general net, we simply apply multi-linearity. In this way, we are reduced to

which represents the two parameters function h given by h(y', z') = f (y' + z', y' + z'). Now it is clear that the following net represents exactly the same function. Here, the variables y' and z' are duplicated before being added, whereas in the net above, duplication was performed after addition; the result is obviously the same, in accordance with our reduction rule.

Let us consider a version of the resource lambda-calculus where application is really linear (not affine). The syntax we define has two sorts (simple 12 terms and simple poly-terms) which are defined by mutual induction as follows. As usual, we are given a denumerable supply of variables.

