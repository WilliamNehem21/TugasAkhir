Multi-agent systems are increasingly complex, and the problem of their verification and validation is acquiring increasing importance. In this paper we show how a well known and effective verification technique, model checking, can be generalized to deal with multi-agent systems. This paper explores a particular type of multi-agent system, in which each agent is viewed as having the three mental attitudes of belief (B), desire (D), and intention (I). We use a multi-modal branching-time logic BDICTL, with a semantics that is grounded in traditional decision theory and a possible-worlds framework. A preliminary implementation of the approach shows promising results.

To describe the belief, desire, and intention components of the system state a propositional form is used, based on possible worlds. Thus, the pos- sible worlds model [8] consists of a set of possible worlds where each possi- ble world is a tree structure. A particular index within a possible world is called a situation. With each situation we associate a set of belief-accessible worlds, desire-accessible worlds, and intention-accessible worlds; intuitively, those worlds that the agent believes to be possible, desires and intends to bring about, respectively.

The problem of extending the standard temporal logic model checking techniques, and then using the related tools, to deal with the multi-agent aspects of the logic, is the specification of the possible worlds and the relation between them. The essential of our contribution is to present an approach by which we help reducing the specification time. This approach is based on the automatic synthesis of the mental attitudes of agents. Each mental state will be an index to a new created world using the specifications of the different agents. For illustrating our approach, we designed a sub-language for specifying multi-agent systems. The specification will be agent-oriented. A tool is developed for constructing the state space of each agent in the multi- agent system. Then an algorithm is developed for synthesizing the agent models of the specified multi-agent system. The synthesis result is a possible worlds model. At the end, we have adopted the standard model checking for the analysis of these models of multi-agent systems. A symbolic model checking tool for verifying multi-agent systems has been implemented. The preliminary results are extremely promising.

This paper is structured as follows. In Section 2 we describe the multi- agent temporal logic (BDICTL). In Section 3, we present the specification sub-language and its underlying intuitions, and define the language and the semantics as a temporal logic. In Section 4, we present the algorithm for syn- thesizing the corresponding multi-agent structures. In Section 5, we present the extended general algorithm for model checking. Finally, in Section 6 we outline the results, discuss future work, and draw some conclusions.

The temporal logic BDICTL [8] we consider is extension of Computation Tree Logic CTL [5] that has been used extensively for reasoning about concurrent programs. The branching-time logic CTL is extended to represent the mental state or belief-desire-intention state of an agent. This logic can then be used to reason about agents and the way in which their beliefs, desires, and actions can bring about the satisfaction of their desires. The syntax of BDICTL is as follows.

to be a collection of propositions and models belief by a belief-accessibility relation B linking these worlds. A formula is said to be believed in a world if and only if it is true in all its belief-accessible worlds [6]. The accessibility relation B is a relation between the world at an index and at a time point to a set of worlds. Intuitively, an agent believes a formula in a world at a particular index if and only if in all its belief-accessible worlds the formula is true. We consider each possible world to be a tree structure with a single past and a branching future [3]. Evaluation of formulas is with respect to a world and a state. Hence, a state acts as an index into a particular tree structure or world of the agent. The belief-accessibility relation maps a possible world at a state to other possible worlds. The desire-, and intention-accessibility relations behave in a similar fashion. More formally, we have the following definition of a Kripke structure.

The semantics of BDICTL involves two dimensions: an epistemic and a temporal dimension. The truth of a formula depends on both the epistemic world w and the temporal state s. A pair (w, s) (denoted also sw) is called a situation in which BDICTL formulas are evaluated. The relation between situ- ations is traditionally called an accessibility relation (for beliefs) or a successor relation (for time).

Example 3.1 To clarify this syntax, let us consider the following scenario involving two agents: a receiver rcv and a sender snd. snd continuously reads news on a certain subject from its sensors (e.g., the standard input). Once read the news, snd informs rcv only if it believes that rcv does not have the correct knowledge about that subject (this in order to minimize the traffic over the network). Once received the news, rcv acknowledges this fact back to snd.

We have therefore three agents: snd, rcv, and a network (communication protocol) protocol which allows them to interact. The example above gives the descriptions of snd, rcv and the communication protocol protocol, respectively. In these descriptions, the news subject of the information exchange is the truth value of the propositional atom p. inf orm(snd, rcv, p) returns a message with sender snd, receiver rcv, and content p (inf orm is a FIPA (Foundation for Intelligent Physical Agents) primitive). putmsg and getmsg are the primitives for putting and getting (from the communication channel) a message. read allows for reading from the standard input. Brcv is the operator used to represent the beliefs of rcv as perceived by the other agents, and dually for Bsnd. Notice that the communication protocol has beliefs about rcv and snd and therefore must have a representation of how they behave. We suppose that this representation coincides with what rcv and snd actually are, as described above. This allows us to model the fact that the communication protocol behaves correctly following what snd and rcv do. snd also has beliefs about

Condition 1 tells us what are the states in world v which are compatible with a given state s (satisfying TrueBDI(w,v)(s)), according to the semantics of BDIs, namely that the argument of a BDIs true at a state must be true in all the states reachable from it via compatibility relation. Condition 2, on the other hand, tells us what are the states of world w which actually comply to the semantics of BDIs, i.e. the states which assign truth values to BDI atoms in accordance with the semantics of the BDI operator.

We have presented a new approach to the verification of multi-agent systems, based on the use of possible worlds to describe the system, modal tempo- ral logic to specify the properties, and a decision procedure based on model checking technique. One contribution is the presentation of an imperative multi-agent programming language, and a formal semantics for this language in terms of the BDICTL logic. The multi-agent program is used to systemi- cally construct the agents state spaces. Our main contribution is the synthesis of these state spaces using the agents mental attitudes to generate the pos- sible worlds structures. These possible worlds will be used by the decision procedure to solve the problems of verification.

