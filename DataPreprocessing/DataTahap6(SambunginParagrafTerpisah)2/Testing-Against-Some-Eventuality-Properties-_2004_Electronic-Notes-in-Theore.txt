In this article, we study a tentative approach to the problem of software validation against some eventuality properties in a synchronous context. This approach is based on an automated functional testing tool whose various testing methods are well-adapted to statistical predictions. The main results are drawn from a telephone feature validation benchmark for feature interaction detection.

Section 2 is devoted to the presentation of the case study context. In section 3, we introduce the principle of our approach to test against eventuality properties. Section 4 describes Lutess, our testing tool, and its adaptation to test against eventuality properties. Section 5 briefly sets out the case study results and section 6 concludes.

Indeed, let A be a CCBS subscriber and B a RCB subscriber. Let A call B when B is busy. Let A activate the CCBS feature (RCB is automatically activated). As soon as A and B are idle, both RCB and CCBS are invoked

The truth value of any temporal property T to be satisfied by a program P can only be evaluated on P behavior. In a functional black-box testing approach, P behavior is represented by some execution traces. Usually the purpose of the functional testing techniques is to reveal errors rather than to prove that the system under test is correct.

statistical generation of input data. It can also be based on input selection of the data which have the highest probability of leading the program under test into states where S can be violated. Testing against S is usually carried out on finite traces. Indeed, as soon as S is violated, a definitive verdict can

This method is not powerful enough when it comes to test systems in a complex environment: the realistic behaviors might be a small part of all possible behaviors with respect to the environment specification. For instance, we noticed that the use of this method for the contest results in each user dialing his own number as often as any other number. In reality, this behavior is quite rare, though possible.

We are currently trying to determine if the CCBS elapsed time distribution follows a classical distribution law or a combination of such laws. In that case, indeed, we could be more precise in the confidence index definition. Furthermore, we could use this index as a stopping criterion: in the particular case of software testing against an eventuality property, one may decide to stop the test when this index has too small a value (0.01%, for instance).

L. Arditi, A. Bouali, H. Boufaied, G. Clave, M. Hadj-Chaib, L. Leblanc, and R. de Simone. Using Esterel and Formal Methods to Increase the Confidence in the Functional Validation of a Commercial DSP. In ERCIM workshop on Formal Methods for Industrial Critical Systems, Trento, Italy, 1999.

eral telephone devices. A user can emit the following events: Off-hook, On-hook, Dial user number or code. Those events are the system inputs. The system can produce the following events: DialTone, Start AudibleRinging, Start Ringing, Stop AudibleRinging, Stop Ringing, LineBusyTone, Disconnect.

