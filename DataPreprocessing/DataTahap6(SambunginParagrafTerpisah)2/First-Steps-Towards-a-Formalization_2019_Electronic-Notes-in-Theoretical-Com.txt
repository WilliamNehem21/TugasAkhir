Formalization of mathematics serves many purposes [18]. The most obvious one is to increase reliability in a result and/or its proof. This has been the original motivation that lead Voevodsky to gather many researchers around homotopy type theory and its formalization in Coq [19]; the same applies to the four color theorem (checked by Gonthier [5]) and the formidable Flyspeck project [6] by the team conducted by Hales.

In our particular case, forcing and the set theoretic techniques that are being formalized can be regarded as a mature technology and thus the main goal is not to increase confidence. Nevertheless, the level of detail in a formalization of this sort always provides additional information about the inner workings of the theory: It is expected, for instance, to have a detailed account of which axioms are necessary to define and use forcing. Moreover, we support the vision that a growing corpus of formalized mathematics can be a useful library for the future generations. The question of how to systematize this corpus is an ongoing project by Paulson [13].

Concerning automation, B. Zhan has developed a new tool called auto2 and applied it to untyped set theory [22]. He has redeveloped essentially the basic results in Isabelle/ZF, but goes in a different direction. Nevertheless, a majority of results in Isabelle/ZF are not yet implemented using this tool, and another downside is that proofs using it do not follow the standard Isar language (see Section 2).

Mathematical texts usually start by fixing a context that defines parameters and assumptions needed to develop theorems and results. In Isabelle the way of defining contexts is through locales [1]. Locales can be combined and extended by adding more parameters and assuming more facts, leading to a new locale. For example a context describing lattices can be extended to distributive lattices. The way to instantiate a locale is by interpreting it, which consists of giving concrete values to parameters and proving the assumptions. In our work, we use locales to organize the formalization and to make explicit the assumptions of the most important results. Let us close this section with a brief comment about the facilities provided by the Isabelle framework. The edition is done in an IDE called jEdit, which is bundled with the standard Isabelle distribution; it offers the user a fair amount of tools in order to manage theory files, searching for theorems and concepts spread through the source files, and includes tracing utilities for the automatic tools. A main feature is a window showing the proof state, where the active (sub)goals are shown, along

It is to be noted that the order of presentation of the material deviates a bit from the dependency of the source files. In particular, the contents of the Subsection 3.1 are independent of the following definitions; in the formalization, the file containing these definitions and basic results imports the file corresponding to the principle of dependent choice.

In this section we show that the generic extension satisfies the pairing axiom; the purpose of this section is to show how to prove that M [G] models one of the axioms of ZFC , assuming that M satisfies ZFC . 8 In the locale M_extra_assms we stated the assumption sats_upair_ax which captures that M satisfies pairing. We use relativized versions of the axioms in order to express satisfaction.

