A uniquely parsable array grammar (UPAG) introduced by Yamamoto and Morita is a subclass of isometric array grammar (IAG) in which parsing can be performed without backtracking. Hence, we can use a UPAG as an efficient two-dimensional pattern recognition mechanism, if the pattern set is properly described by a UPAG. Furthermore, since a UPAG admits parallel parsing, it can also be used as a formal framework for parallel pattern recognition. In this paper, we show UPAG is also useful to generate and recognize three-dimensional patterns. We construct a UPAG that generate any size of cubes. This UPAG can recognize cubes in linear time of the length of its side by maximum parallel reduction. To construct the grammar, we have made a tool for designing three-dimensional IAG.

An isometric array grammar (IAG) introduced by Rosenfeld [3] is a formal modelof two-dimensionalpattern generation. Untilnow, severalsubclasses of IAGs have been proposed and investigated. For example, there are a context- sensitive array grammar (CSAG), a context-free array grammar (CFAG), and a regular array grammar (RAG) that form a Chomsky-like hierarchy in IAGs. Although many research has been done in two-dimensional array grammar [6], it is in general very hard to parse two-dimensional languages based on these IAG frameworks. It has been shown that even for RAGs, the lowest subclass

So we have made a simple tool for designing IAGs. To show the tool is useful, we first design a context-free IAG that generates rectangular paral- lelepipeds. Next, to show UPAG is also useful to generate and parse three- dimensional patterns, we constructed a UPAG that generates cubes. In par- ticular, it can be possible to recognize any size of cubes in linear time of the length of the side by the grammar.

Wang [7] also show a UAG that generates and parses cubes. Although his grammar uses a special type of parsing algorithm, Gcube uses completely the same framework as two-dimensionalIAG. Furthermore, it satisfies the UPAG condition and parallel parsing can be performed without backtracking.

In this paper, we apply IAG to three-dimensional pattern generations and recognitions. We constructed a context-free IAG GRP that generates rectan- gular parallelepipeds and a UPAG Gcube that generates cubes. In particular, it is possible to recognize cubes in linear time of the length of their side by Gcube.

