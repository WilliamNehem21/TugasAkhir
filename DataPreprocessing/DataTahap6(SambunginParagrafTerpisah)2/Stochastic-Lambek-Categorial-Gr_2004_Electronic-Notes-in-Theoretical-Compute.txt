We present here a stochastic point of vue on Lambek Categorial Grammars which have shown their utility in Natural Language Processing. The key point comes from the fact that the parsing in the Lambek Calculus is based on an essentially non-deterministic algorithm. We claim that a stochasting treatment may be a good way to resolve that issue.

a constituent of type B on the right side of !. At the proof-net level, it means that an atomic type B occurring in a type A=B is not necessarily the left conclusion of an axiom link. As a counterexample, consider the proof- net given in the previous section. While the word lit is assigned the type (np n s)=np, the second occurrence of np in this type is the right conclusion of an axiom link.

Now consider the content of the stack of the automaton described in Section 4, just before scanning the word le. In the rst case, the stack contains [np] while, in the second case, it contains [s np?]. This information, which corresponds to the unresolved dependencies, may be used to predict the type that must be chosen for le. Note that this proposal allows long distance dependencies to be taken into account, which is not the case with taggers based on n-grams or on hidden Markov models.

