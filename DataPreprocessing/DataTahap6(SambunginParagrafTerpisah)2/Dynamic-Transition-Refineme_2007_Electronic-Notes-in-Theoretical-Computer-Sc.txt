Usually, refinement is a static concept. For many scenarios, however, it is desirable to have a more flexible form of refinement. For example in the context of service updates, e.g. version control in distributed systems, a mechanism for dynamic transition refinement is needed.

The remaining sections are structured as follows: In Section 2 we introduce our approach of marked transitions for Petri nets. We define super-dual nets and their firing rule. In Section 3 we describe how the concept of super-dual nets can be lifted to object nets and give an abbreviated definition of the new formalism of super-dual object nets. In Section 4 we describe how super-dual object nets can be simulated by object nets. Section 5 explains a first attempt to integrate dynamic transition refinement in Renew. The paper ends with a conclusion. The appendix recalls definitions of multi-sets.

We are interested in a dynamic refinement of transitions, i.e. a refinement that can be changed at runtime. This change should be made by the net itself. Our basic approach is to regard sub-nets as special tokens of transitions. As mentioned in the introduction this approach proposes two extensions to the Petri net formalism: (1) Petri nets can be used as tokens and (2) transitions may be marked.

In the following we give a condensed definition of object net systems. For simplicity reasons we abstract from the syntax of inscriptions of net elements and synchroni- sations as it is used for reference nets [13] in the Renew tool (cf. [14]).

A first attempt to implement dynamic transition refinement in the Petri net tool Renew was done in the so-called workflow plug-in 4 [7]. Among various means for the definition and execution of workflows a so-called task transition was imple- mented. The task transition does not exactly meet our design criteria for dynamic refinement, but comes close enough to take a look.

Our approach describes a special kind of Petri nets that can modify their struc- ture via dynamic refinement of transitions. A first approach to the ability of struc- ture changing at runtime are self-modifying nets [17] which allow for arc weights that are marking depending. A special case is the empty marking that temporarily deletes arcs from the net. Another approach to structure modification in Petri nets is that of mobile nets [1] and recursive nets [6].

In this presentation we studied the dynamic refinement of transitions. Following the ideas of extending Petri nets to super-dual nets we generalised object net systems to super-dual object systems. Super-dual object net systems are nets-within-nets allowing nets as tokens both on places and on transitions. Transition marking nets, called net-pokens, may be moved around from one transition to another. They refine the transition they are actually marking. This offers the desired properties of a dynamic, run-time refinement procedure that is controlled by the net itself.

