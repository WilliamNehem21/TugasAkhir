Due to the strict limitations of the nodes constituting a sensor network, its model must monitor relevant performance metrics of the network, since they will determine the viability of the design or protocol of the network. A good model of the network provides flexible monitoring, as well as efficient execution. The principles introduced above guide the construction of such a model.

is a maximal subcomputation of concurrent message transmissions. This pattern not only affords flexibility in monitoring, but provides an opportunity for improved efficiency. The size of the state is effectively reduced at each concurrent step to fit the concurrent transitions, and after each concurrent step to optimize the deterministic observation of the state.

Two reasons justify the use of time in constructing this optimized model of a sensor network. First, time is a significant parameter in a sensor network. Since nodes have limited power, network lifetime is an important criterion in evaluating different network designs, as are various latency measures. Second, time serves to identify concurrent transitions. Each transition occurs at some given time. So transitions are concurrent if they occur at the same time. The optimized model of a sensor network described above is therefore most appropriately specified in an extension of Maude that supports the specification and analysis of real-time systems, Real-Time Maude [11].

This model, which is quite general, can be optimized further for some applica- tions by observing a third principle: If a smaller size of the state suffices, have it not larger. This guidance can be applied in two circumstances. First, the wireless nature of communication means that many protocols induce propagation of mes- sages. At different times the transmissions comprising a propagation are localized in different areas. It may be appropriate to represent a node outside the localized area of activity with a smaller state than one that is active. This is an opportunity to temporarily actually reduce the size of the network state. Second, in some protocols the participation of a node at some point comes to an end. It may be possible from then on to represent the network without that node. An example will illustrate these cases. Experiments show the effects of these further optimizations, with the fullest optimizations improving execution times up to two orders of magnitude.

The sample protocol introduced here is used to illustrate a few ideas on modelling sensor networks, and to subject it to experimentation with the proposed techniques. It is intended to be simple, yet appropriate and relevant, for the purposes of this work. This choice is flooding. It is used to show how to model wireless communica- tion, and support the collection of metrics. The proposed techniques do not depend on the particulars of how this is done. What is exploited is that a single transmission affects a small subset of nodes, and what is accommodated is the opportunity to observe the state at well defined and convenient points in the computation. Thus, as presented here, the flooding example addresses two considerations that are common to any sensor network protocol.

Pure flooding in a dense, wireless network results in a high rate of collisions, and too much redundancy [7]. Random delays in retransmissions allay the first problem. A limit on the number of retransmissions alleviates the second. A count-based scheme that incorporates these measures can be specified for CB-FloodingNodes.

This state has two parts. There is a part that models the activity of the network, in which each node is naturally represented by an object, and each object-node is able to transmit messages. There is also a part that holds the observations and the metrics derived from them. These are global properties of the network, so they should not be part of the state of any individual node-object. They too are represented by objects, metrics-objects, which do not send or receive messages.

The cycle of rewrites imposes some constraints on these parts during state tran- sitions. During a concurrent step only the state of node-objects may change. In turn, during an observation only the state of the metrics-objects may change. The second principle advises that when a part of the state cannot change, there should not be even a failed attempt to change it.

Consider the flooding example. The goal of flooding is that a message sent by a node be received by all other nodes in the network. It is important to determine whether this goal is achieved, and furthermore, to obtain metrics of interest. For this protocol they include latency, or the time it takes to deliver the message to all nodes; the cumulative number of transmissions this takes; and the number of collisions that occur while achieving this goal

The limited range of communication of wireless nodes means that a message will get to a distant node by being passed from neighbor to neighbor; a sensor network is a multihop network. In many protocols, a message sent by one node induces a propagation of messages. At a given moment different nodes may have different levels of engagement in a propagation. Some may be actively involved. Others may temporarily be bystanders, but soon will be participating again. Still others may be far removed from the propagation, entirely uninvolved.

The running example illustrates this. A node that is actively involved is in sen, which means that either it has a nonempty queue of messages with a message ready to be sent at the current time, or is a neighbor of such a node. There are differences among the remaining nodes. Some have nonempty message queues, but no message ready to transmit. They are waiting to transmit later. Others have empty queues. These are the ones that are at least temporarily entirely uninvolved.

