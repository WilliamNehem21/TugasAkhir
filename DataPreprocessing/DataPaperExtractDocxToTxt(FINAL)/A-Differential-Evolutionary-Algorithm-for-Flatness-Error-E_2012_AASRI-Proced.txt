Available online at www.sciencedirect.com



AASRI Procedia 1 (2012) 238 – 243
AASRI
Procedia
www.elsevier.com/locate/procedia





2012 AASRI Conference on Computational Intelligence and Bioinformatics
A Differential Evolutionary Algorithm for Flatness Error Evaluation
Dong-Xia Wanga,*, Xiu-Lan Wena, Feng-Lin Wanga
aAutomation Department, Nanjing Institute of Technology, Nanjing 211167, China

*



Abstract

A differential evolutionary algorithm (DE) is proposed to implement the minimum zone evaluation of flatness errors. It is a heuristic evolutionary algorithm based on population optimization. Compared with other methods, it is efficient and robust. Then, the objective function calculation approaches of planar error are developed, which directly originate from the definition of minimum zone solution and conform to the ISO standard. Finally, the experimental results evaluated by different methods confirm the effectiveness of the proposed DE. Compared to conventional evaluation methods, it has the advantages of algorithm simplicity and good flexibility.
© 2012 Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and/or peer review under responsibility of American Applied Science Research Institute

Keywords: Intelligent Computation; Differential Evolutionary; Flatness Error; Minimum Zone Solution


Introduction

The plane feature is one of the most basic geometric primitives which contributes significantly to fundamental machinery parts to achieve intended functionalities. Flatness error is of prime importance to
†quality and lifetime of mechanical products. In the current industrial practice, standards are followed for representation and interpretation of geometric tolerances. The ANSI Dimensioning and Tolerance Standard



* Corresponding author. Tel.: +86 025 86118327.
E-mail address: zdhxwdx@njit.edu.cn (D.-X. Wang)..







2212-6716 © 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
doi:10.1016/j.aasri.2012.06.037



Y14.5 [1] specifies that the form tolerances on a component must be evaluated with reference to an ideal geometric feature, ISO Standards [2] recommends the form tolerance being evaluated based on the concept of minimum zone. As for the flatness tolerance, it can be defined as the least possible value of the normal distance between two parallel planes that enclose all measurement points.
One of the most widely used techniques for geometric error evaluation is the least squares method (LSM) and. It is easy for implementation, efficient in computation, and commonly used in coordinate measuring machines (CMMs). However, the LSM does not guarantee the minimum zone solution specified in the ISO standard and can result in overestimation of form tolerances and the rejection of good parts.
In order to obtain the minimum zone solution, Murthy and Abdin [3] proposed a simplex search technique. Fukuda and Shimokohbe [4] suggested a minimax approximation method, by which a subset of the measured points that defines a zone of the feature is sequentially replaced until the minimum zone is achieved. The nonlinear optimization is used by Wang [5], Kanada and Suzuki [6]. Weber et al. [7] proposed a unified linear approximation technique for use in evaluating the forms of straightness, flatness,circularity and cylindricity. Non-linear equation for each form was linearized using Taylor expansion, and then it was solved as a linear program. Zhu and Ding [8] established the equivalence between the width of a point set and the inner radius of the convex hull of the Minkowski difference between the point set and itself. The minimum zone tolerance was formulated as a linear programming problem. Hermann [9] proposed the algorithms based on techniques borrowed from computational geometry.
The minimum zone association of flatness error evaluation is a non-convex problem, and it can be formulated as nonlinear optimal problem with complex constraint. Therefore, this evaluation method is virtually the optimization problem. Intelligent computations, such as the genetic algorithm (GA), improved genetic algorithm (IGA), hybrid optimization algorithm and particle swarm optimization technique, were used to solve the nonlinear problem of flatness evaluation[10-13]. Examples had proved that above methods were effective to compute the minimum zone flatness error, but to most methods above, some parameters need to be decided by experience in advance. This paper suggests the evaluation algorithm of roundness of a novel differential evolution (DE) algorithm to find the value of flatness error according to the minimum zone criterion. DE is another very effective intelligent computation method for solving optimization problems with non-convex and nonlinear characteristics as it does not require derivative information. DE for flatness error is a simple yet powerful optimizer with fewer parameters.
The rest of this paper is organized as follows: The mathematical model of flatness error is presented in Section 2.The DE is developed in section 3. Examples are presented in section 4. Finally, conclusions are given in Section 5.

Mathematical model of flatness error evaluation

Assuming Pi (xi, yi, zi) (i = 1, 2, . . ., n) is the measured pointextracted by measuring a plane part. A flatness tolerance specifiesa tolerance zone defined by two parallel planes within whichthe surface must lie [14]. If all extracted datapointsPi (xi, yi, zi)are between two parallel planes, the minimum separation betweenthese two parallel planes is called the minimum zone solution(MZS) of flatness error. Assuming one of the two parallel planeequations of MZS is



The distance di from datapointsPi (xi, yi, zi) to the parallel plane is
(1)


(2)


The minimum separation f between these two parallel planes is
(3)


Obviously, the minimum separation f is a function of (a, b). Consequently,evaluating the minimum zone flatness error is translatedinto searching the values of (a, b), so that the separation f(a, b) isthe minimum and this minimum value is just the flatness error. Itis a non-linear optimization problem.

DE

DE ALGORITHM.

DE algorithm aims at evolving a population of NP D-dimensional parameter vectors, so-called individuals,

which encode the candidate solutions, i.e. X iG
1
i,G
,⋯,x D , i=1,…,NP, as a population for each generation

G ,towards the global optimum. NP does not change during them initialization process. The initial vector populationis chosen randomly and should cover the entire parameter space. As a rule, we will assume the initial population should better cover the entire search space as much as possible by uniformly randomizing
individuals within the search space constrained by the prescribed minimum and maximum parameter bounds


X min

1
min
,⋯, x D
 and X

max
1
max
,⋯, x D  .

Mutation Operation.
After initialization,DE employs the mutation operation to produce a mutant vector Vi,G with respect to each individual Xi,G , so-called target vector ,in the current population. For each target vector Xi,G at the generation

G, its associated mutant vector V	 v1
, v2
,...,vD  , can be generated via certain mutation strategy.

i,G
i,G
i,G
i,G

For example, the five most frequently used mutation strategies implemented in the DE codes are following:
“DE/rand/1”, “DE/best/1”, “DE/rand-to-best/1”, “DE/best/2”, “DE/rand/2” [15] .


Crossover Operation.

After the mutation phase, crossover operation is applied to each pair of the target vector




Xi,G


and its

corresponding mutant vector Vi,G
to generate a trial vector: U

i,G 
1
i,G

2
i,G
,...,u D 
. In the basic

version, DE employs the binomial (uniform) crossover defined as follows:



j
i,G
v j
  i,G
 i,G
,if (rand j [0,1]  CR)or( j  j
, otherwise


rand
) ,j=1,2,…,D

(4)

In (4),the crossover rate CR is a user-specified constant within the range[0,1], which controls the fraction of
parameter value copied from the mutant vector. jrand is a randomly chosen integer in the range[1,D]. The
binomial crossover operator copies the jth parameter of the mutant vector Vi,G to the corresponding element in the trial vector Ui,G , if randj[0,1]≤CR, or j  jrand . Otherwise, it is copied from the corresponding target vector Xi,G . There exists another exponential crossover operator, in which the parameters of trial vector Ui,G are inherited from the corresponding mutant vector Vi,G starting from a randomly chosen parameterindex till
the first time randj[0,1]>CR. The remaining parameters of trial vector Ui,G are copied from the corresponding

target vector Xi,G . The condition
j  jrand
is introduced to ensure that the trial vector Ui,G will differ from its

corresponding target vector X

i,G
by at least one parameter.



Selection Operation
If the values of some parameters of a newly generated trial vector exceed the corresponding upper and lower bounds, we randomly and uniformly reinitialize them within the prespecified range. Then the objective function values of all trial vectors are evaluated. After that, a selection operation is performed. The objective

function value of each trial vector f U


i ,G 
 is compared to that of its corresponding target vector
f  X


i ,G 
 in the

current population. If the trial vector has less or equal objective function value than the corresponding target vector, the trial vector will replace the target vector and enter the population of the next generation. Otherwise, the target vector will remain in the population for the next generation. The selection operation can be expressed as follows:
X j    Ui,G , iff (Ui,G )  f ( X i,G )

i,G

  i,G
, otherwise
(5)

The above 3 steps are repeated generation after generation until some specific termination criteria are satisfied.

DE for flatness error evaluation.


Input: Parameters of the algorithm for flatness error evaluation. Step1. Creating initial population
Set the generation number G=0, P  X	,⋯, X	 , and X





1
i,G


,⋯, xD , i =1,2,…,NP

Step 2. Evaluate PG=0 and let the generation counter t =0 . Step 3. While (the stopping criterion is not satisfied) do

{For each individual
Xi,G t ,i  1,2,...,NP,
its offspring Xi,G t 1
is generated by mutation, crossover and

selection operations. Evaluate PG t 1 and let t  t  1 .
} End While
Output: The best solution X best ,G t , the objective function ffrom PGt .
Practical examples

In this study, the strategy “DE/best/1 is selected as the best performance from candidate mutation strategies and we use the following parameter values: D=2; the population size NP=10*D, the scale factor F =0.85 and the crossover probability CR=0.9.Using the DE to evaluate flatness error, the termination condition is set the maximum iteration 100.For comparative purpose,twotypical examples available are selected.
Example 1.The sampling data is available in literature [11]. The results are tabulated in Table 1.From Table 1 it is observed that the flatness error of LSC and IGA are 0.0219 and 0.01839, respectively in literature[11], and the flatness error obtained by canonical GA with elitist selection (EGA) are 0.02161,While the flatness error obtained by the DE is 0.01838. It is well in agreement with the literature [11].
Example 2. The measurement data from the plane surface are given in literature [8]. The results are tabulated in Table 2. It is observed that the flatness error of LSC is 0.00303, and the results obtained by the optimization procedure in literature [8] is 0.002627, and the results obtained by the EGA are 0.002739, while the flatness error obtained by the DE is 0.002627. It is well in agreement with the literature [8].
Table1 Evaluation results of data Example 1



Table2 Evaluation results of data Example 2


In the EGA, the population was set 40, the possibilities of crossover and mutation was set 0.90 and 0.20, respectively, and the maximum iteration was 200. The presented method for two examples not only provided a more accurate and stable solution, but also it took less time than EGA. Figs.1-2 showed the searching processes of the minimum zone flatness error of two examples.




0.18



0.16



0.14



0.12



0.1



0.08



0.06



0.04



0.02



0
0	20	40	60	80	100  120  140  160  180  200
Generations

Fig. 1. Optimizing process of Example 1. byEGA and DE





-3
x 10
10



9



8



7



6



5



4



3



2
0	20	40	60	80	100  120  140  160  180  200
Generations

Fig. 2. Optimizing process of Example2. byEGA and DE



Conclusions

In this paper, an effective DE is presented to implement the flatness error evaluation of minimum zone method. The objective function mathematical model of minimum zone method is formulated and the initial population generated methods is given. Compared with conventional evaluation methods, the proposed algorithm has the advantages of algorithm simplicity and good flexibility. The typical practical examples are representative in industrial application and their results verified that the proposed method could search the optimal solution efficiently. And it is well suited for form error evaluation in CMMs.


Acknowledgements

The research was supported by National Natural Science Foundation of China under Grant No. 51075198 and Innovation Foundation of Nanjing Institute of Technologyunder Grant No.CKJ2011004.


References
[1]ANSI Standard Y14.5. Dimensioning and tolerancing.New York: The American Society of Engineers, 1982. [2]Technical Drawings—Geometrical Tolerancing. ISO/R1101, 1983.
[3] Murthy TSR,AbdinSZ.Minimum zone evaluation of surfaces.International Journal of Machine Tools Design and Research 1980;20:123–36.
[4]Fukuda M, Shimokohbe A. Algorithms for form error evaluation—methods of minimum zone and the least squares. In: Proceedings of the International Symposium on Metrology and Quality Control in Production, Tokyo, 1984. p. 197–202.
[5]Y. Wang Minimum zone evaluation of form tolerancesManufacturing Review, 5 (3) (1992), pp. 213–220 [6]T. Kanada, S. Suzuki Evaluation of minimum zone flatness by means of non-linear optimization technique and its verification .Precision Engineering, 15 (2) (1993), pp. 93–99
Weber T, Motavalli S, FallahiB, Cheraghi H. A unified approach to form error evaluation. Precision Engineering 2002;26:269–78.
XiangyangZhu,HanDing.Flatness tolerance evaluation:an approximate minimum zone solution. Computer-
Aided DesignVolume 34, Issue 9, August 2002, Pages 655–664
Hermann G. Robust convex hull-based algorithm for straightness and flatness determination in coordinate measuring.ActaPolytechnicaHungarica 2007,4:111–20.
Hsien-Yu Tseng.A genetic algorithm for assessing flatness in automated manufacturing systems.Journal of Intelligent Manufacturing, 2006, Volume 17, Number 3, Pages 301-306
Xiu-Lan Wen, Xiao-Chun Zhu, Yi-Bing Zhao, et al. Flatness error evaluation and verification based on new generation geometrical product specification (GPS)
KeZhang.Study on Minimum Zone Evaluation of Flatness Errors Based on a Hybrid Chaos Optimization Algorithm.Lecture Notes in Computer Science,2009,Volume 5754,Emerging Intelligent Computing Technology and Applications, Pages 193-200
YU Xiao,HUANG Mei fa,Flatness Error Evaluation of the New Generation of GPS Basedon an Improved Particle Swarm Optimization, MICROELECTRONICS & COMPUTER, April 2010, Vol. 27 No. 4
ISO/TS 12781-2:2003,Geometrical product specifications (GPS)-Flatness-Part 2:Specification operators.
R. Gämperle,S.D.Müller,andP.Koumoutsakos,A parameter study for differential evolution,in Advances in Intelligent Systems,FuzzySystems,EvolutionaryComputation,Interlaken,Switzerland:WSEAS Press, 2002,
pp. 293~298.
