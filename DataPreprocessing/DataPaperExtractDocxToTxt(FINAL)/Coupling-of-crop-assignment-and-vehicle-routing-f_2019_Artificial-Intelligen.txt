Artificial Intelligence in Agriculture 2 (2019) 99–109











Coupling of crop assignment and vehicle routing for harvest planning in agriculture
Mogens Graf Plessen
MGP is an independent researcher



a r t i c l e	i n f o


Article history:
Received 11 June 2019
Received in revised form 25 July 2019 Accepted 25 July 2019
Available online 6 August 2019


Keywords: Agricultural logistics Assignment problem Vehicle routing Integer programming
Decision support system
a b s t r a c t

A method for harvest planning based on the coupling of crop assignment with vehicle routing is presented. Given a setting with multiple fields, a path network connecting these, multiple depots at which a number of harvesters are initially located, the main question addressed is: Which crop out of a set of different crops to assign to each field when accounting for the given setting? It must be answered by every farm manager at the beginning of every work-cycle starting with plant seeding and ending with harvesting. Rather than solving an assignment problem only, it is here also accounted for the connectivity between fields. In practice, fields are often located dis- tant apart. Traveling costs of machinery and limited harvesting windows demand optimized operation and route planning. Therefore, the proposed method outputs crop assignments to fields and simultaneously determines crop-tours, i.e., optimized sequences in which to service fields of the same crop during harvest. It is of particular relevance for larger farms and groups of farms that collaborate and share machinery. Integer programming based exact algorithms are derived. For large numbers of fields, where these algorithms may not be tractable due to computational constraints, elements of clustering and the solution of local Traveling Salesman Problems are added, thereby on the one hand rendering the method heuristic and in general suboptimal, but on the other hand maintaining large-scale applicability.
© 2019 The Author. Publishing services by Elsevier B.V. on behalf of KeAi Communications Co., Ltd. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).





Introduction

Agriculture is a diverse field ranging from biotech to autonomous robots and finance. It is also closely related to logistics. According to Ahumada and Villalobos (2009), there are four main functional areas for the agri-food supply chain: production, harvesting, storage and dis- tribution. This paper focuses on model-based production planning. In fact, in view of the recent plunges of agricultural commodity prices ac- cording to the Financial Times (2016) that threaten the sustainability of not few farmers, efficiency improvements in production are essential. The decision on the assignment of crops to fields is crucial in that it de- termines the complete work-cycle. In common practice today, fields are often first manually clustered according to geographical locations be- fore a crop is assigned uniformly to all fields of each cluster, whereby it is often accounted for crop rotation (Havlin et al., 1990) in order to re- duce soil erosion and to increase soil fertility. The spatial clustering is done for faster harvesting. A trend among farmers in Europe is to collab- orate in form of limited companies for the sharing of machinery. Not seldomly conflicts arise about the sequence in which to harvest multiple fields of identical crops but various owners. This paper is motivated by providing a mathematical modeling framework for crop assignment to

E-mail address: mgplessen@gmail.com (M. Graf Plessen).
fields when also accounting for the path network connecting these
fields and depots of harvesters.
The basic multiple Traveling Salesman Problem (mTSP) describes the objective of finding total tour cost-minimizing routes for multiple salesmen that all start and end at a single depot, whereby all vertices are visited once by exactly one salesman, see Bektas (2006). Nonnega- tive edge cost can refer to, e.g., monetary, space or time units. When ac- counting for various demands at each vertex and limiting the capacity of vehicles (salesmen), the problem is referred to as the capacitated Vehi- cle Routing Problem (VRP). Variations include the VRP with time win- dows, with backhauls and with pickup and delivery, see Toth and Vigo (2014). The applications are manifold. For example, for vehicle routing with real-time information see Kim et al. (2005) and the references therein. Recently, there has been increased interest in applying logistical optimization in agriculture for scheduling, routing and fleet manage- ment, see Basnet et al. (2006), Ferrer et al. (2008), Marques et al. (2014), Conesa-Muñoz et al. (2016a) and Sørensen and Bochtis (2010). Special focus was on the coordination of machinery teams dis- tinguishing between primary (harvester) and service (transport) units referred to as PUs and SUs, see Bochtis and Sørensen (2009), Jensen et al. (2012), Seyyedhasani and Dvorak (2017) and Orfanou et al. (2013). All of these references assume that fields with assigned crops are given. To the best of the author's knowledge, the optimized



https://doi.org/10.1016/j.aiia.2019.07.001
2589-7217/© 2019 The Author. Publishing services by Elsevier B.V. on behalf of KeAi Communications Co., Ltd. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



assignment of crops to fields and simultaneously accounting for vehicle routing and other constraints for optimized harvest planning has not been discussed in the literature before. Such strategic assignment must be conducted once per year and at the beginning of the (yearly) work-cycle, thereby decisively affecting the complete agricultural production-cycle, as the first step within a two-layered framework. The second layer involves coordinations of PUs and SUs, exploiting all of the aforementioned references, and is to be conducted at the end of the work-cycle during harvest.
The contribution of this paper is a novel method that can (a) assist farm managers in the planning of crop assignments to available fields and (b) simultaneously determines crop-tours, i.e., optimized se- quences in which to service fields of the same crop during harvest. Eight different integer programs (IPs) are formulated corresponding to different problem setups.
The remaining of the paper is organized as follows. Problem and no- tation are formulated in Section 2. Algorithms are derived in Section 3. Extensions are discussed in Section 4. Numerical examples are given in Section 5 before concluding with Section 6.

Problem formulation and notation

The general problem is formulated in literal form. Then, mathemat- ical notation is introduced based on which the preferred eight IPs and the main algorithm are derived and discussed in Section 3.

Problem formulation

Problem 1. Suppose a setting in which multiple fields, a path network connecting these fields, multiple depots, and potentially multiple har- vesters located initially at each depot are given. Then, at the beginning of every work-cycle (beginning with planting and ending with harvest- ing), a crop has to be assigned to all available fields. This entails the fol- lowing questions:
1 Which crop to optimally assign to each field?
2 In what sequence to optimally service all fields during harvest?
3 How to optimally dispatch multiple harvesters, that initially may be lo- cated at multiple depots, to the multiple fields?
4 Which fields should be serviced, which leased, and at what prices?



Fig. 1. Problem visualization by example. Yellow markers indicate fields to be served by 3 collaborating farms. Overall, there are 85 fields. The satellite image shows an area of 15.9 ×
16.3 km. The path network connecting the fields is curvy and often along rural gravel roads only permitting slow traveling speeds. The overall field coverage area is more than 1700 ha. Traveling distances between pairs of fields is between meters up to dozens of km.

and suitable for a specific crop be denoted by Nharv,k, ∀d ∈ Ð, ∀k ∈ K. Let the normalized nonnegative traveling cost per harvester and crop k between a depot d and a field j, or between two fields i and j, be de-
noted  by   k  and  c~k ,  respectively.  Then,  abbreviating
Nharv,k = ∑d ∈ ÐNharv,k, edge costs are defined as:
ck = Nharv,kc~k , ∀i, j ∈ S, ∀k ∈ K,	(1a)

ck = Nharv,kc~k , ∀d ∈ Ð, ∀j ∈ S, ∀k ∈ K,	(1b)

ck,kmin = ∑ Nharv,kc~k , ∀j ∈ S, ∀k ∈ K,	(1c)

dj	d~
d~ ∈ Ð
d~j

The first question decides the complete work-cycle. For optimized
where graph G is in general based on ck and ck . Note that ck and ck are

harvest planning, its answer must simultaneously account for questions
ij	dj
ij	dj

here defined as uniformly scaled by Nharv,k, and that, in practice, c~k and
2) to 4). See also Fig. 1 for problem visualization and illustration of real-	k	ij

world relevance due to significant inter-field distances. It is stressed that at the beginning of every work-cycle of a farm, planning decisions according to Problem 1 must be taken. Therefore, in this paper, optimi- zation problems subject to constraints are derived that permit to input data such as, e.g., cost coefficients or revenues per field and crop. Note that at the end of every work-cycle, i.e., at harvest, deviations from ini- tial modeling have occurred. For example, the actual amount of crop harvested per field is different from the predicted one, and weather is influencing potential harvesting-windows. Thus, at the end of the work-cycle, the aforementioned second framework-layer becomes rele- vant, involving the coordination of PUs and SUs. However, in this paper the focus is exclusively on the first framework-layer.

Notation
c~dj are proportional to inter-field path lengths. As will be shown, ck,kmin
are used for specific IP formulations. Similarly to Eqs. (1b) and (1c) ck
and ck,kmax are defined. In general, traveling costs along the same geo-
graphical paths may vary for different k due to different crop- dependent harvesting machinery. Suitably, they may be modeled as varying by a constant offset. The expected revenue from growing and marketing of crop k ∈ K on field l ∈ℒ is denoted by rk. Maintenance
cost per depot are given by zd, ∀d ∈ Ð. We assume a fixed cost of m in-
curred for every crop. All costs shall be in monetary units, here Euros
(€). Furthermore, throughout it is assumed that arc/edge costs satisfy the triangle inequality (see Fleming et al., 2013).
Decision variables are discussed. It is distinguished between two major classes: natural and auxiliary decision variables. The first class
comprises binary xk ∈ {0, 1}, ∀i, j ∈ V, ∀k ∈ K, with xk = 1 indicating

ij	ij

Notation is mainly adopted from Toth and Vigo (2014). A complete graph is denoted by G = (V, S), where V = {0, ... , D — 1, D, .. . , D + L — 1} and S are vertex and edge set, respectively. Throughout, an arc is referred to as a directed edge. The cardinality of a set of vertices is de-
noted by |⋅|. Vertices i ∈ Ð= {0, ... , D — 1} and i ∈ℒ = {D,…,D + L −
1} correspond to D depots and L fields. The K different crops are indexed
arc (i,j) to be element of the optimal route for crop k. For the symmetric case with xk = xk , (a) decision variable xk can be dismissed, and
(b) xk ∈ {0, 1, 2}, ∀d ∈ Ð, ∀j ∈ S, ∀k ∈ K is used, which permits to in- dicate a visit of only field j for a route corresponding to crop k. Further-
more, binary δk ∈ {0, 1}, ∀l ∈ S, ∀k ∈ K, with δk = 1 indicating that

l	l

by K= {0, .. . , K — 1}. Let the number of harvesters located at a depot
crop k is assigned to field l. Integer γ is such that 1 ≤ γ ≤ K and indicates



the number of active crops in the optimal solution. As will be shown, auxiliary decision variables result from incorporating various logical constraints into the IP formulations.

Problem solution

Assumptions and motivation of harvester group travel

The derivation of the proposed eight IPs in Section 3.2 is based on the following assumptions and discussion.

Assumption 1. Throughout the harvest of any crop, harvesters are refueled and maintained on the corresponding fields growing that crop. Thus, there is no return to depots prior to the complete coverage of all of these fields.
Assumption 2. A fixed number of harvesters is assigned for the harvest of every crop. Then, during the coverage of all fields associated with a crop, harvesters travel as a group. Thus, it is assumed that there is no dispatch of individual harvesters to individual fields.
Assumptions 1, 2 and cost coefficients (1) are defined for practical con- siderations discussed below. Thus, in the most general sense of Problem 1 they are limiting. However, on the other hand, they permit to ap- proach Problem 1 based on planning routes for each crop (in the follow- ing referred to as crop-tours) similar to the mTSP-framework (Bektas, 2006). Thus, a route for each crop and the fields correspond to a travel- ing salesman route and cities to be visited, respectively. Note, however, despite this basic analogy, the mTSP-framework is insufficient to ad- dress Problem 1. In particular, crop assignment, multiple depots and ad- ditional constraints are not addressed. Therefore, eight customized IPs are derived in Section 3.2. First, however, it is further elaborated on Assumption 2.
Proposition 1. Suppose that multiple harvesters are initially located at one depot to which they must return after processing all fields associated with a crop. Suppose further a graph with cost coefficients according to Eqs. (1a) and (1b). Then, an optimal policy is that all harvesters cover the fields as a group, i.e., without distributing harvesters to different fields of the same crop.
Proof. The proof is by construction. For the asymmetric case with dif- ferent fields ripening at different times, a unique optimal working se- quence is already implied. For the symmetric case, a cost-minimizing route exists and includes exactly two edges incident to the depot vertex. This is due to nonnegativity of traveling costs and the fact that cost co- efficients (1a) and (1b) are invariant to the number of harvesters trav- eling along inter-field paths (uniform scaling by Nharv,k). Any other initial distribution of harvesters to fields not connected to the depot ver- tex along the two aforementioned edges is thus suboptimal and har- vester group travel is thus an optimal policy.
Several comments are made. First, accumulated inter-field path length minimization(invariant to the number of harvesters traveling along the path) is of interest for minimization of total non-harvesting time. By nonnegativity of edge path lengths there exists a shortest path crop-tour. Since harvesters can always work in parallel on fields since they are not constrained by each other, this shortest path should be followed by all harvesters.
Second, harvester group travel bears more practical advantages. In general, SUs must ideally be operated such that PUs (harvesters) can op- erate continuously, such that any waiting times due to absent SUs for unloading are avoided. In general, the rate at which harvesters are filled is not easily predictable due to varying crop returns even within one field. Therefore, the concentration of all SUs to one field is beneficial for robustness in the sense that multiple harvesters can be served (in- stead of specific SU-PU couples), according to short-term freed
capacities. An additional advantage is the facilitated supervision by the farm-manager.
Third, Proposition 1 assumes a single depot. In order to differentiate between the cases that (a) all available harvesters are initially located at one specific depot, and that (b) all available harvesters are initially dis-
tributed among multiple depots, ck,kmin is defined according to Eq. (1c) in
contrast to ck in Eq. (1b). Then, in the IP formulations of Section 3.2 har-
vester group travel is assumed from the first field on, and consequently using cost coefficients according to Eq. (1a). Note that such harvester group travel starting from the first field of a crop-tour is practical. This is since a timely agreement upon harvest-start, e.g., a day ahead, permits that all harvesters (from different depots) plan their travel in time and consequently start field and route coverage coordinatedly and together. Fourth, it is remarked that if different crops have different non- overlapping harvesting times, then the same harvesters can in principle be employed sequentially for the different crop-tours. In this paper, this scenario is assumed and we order crops in K such that a lower index in- dicates an earlier harvesting time. For an application example, consider the crops in order barley, rapeseed and wheat. The alternative scenario is that harvesting times are overlapping or different crops require en- tirely different harvester machinery. This latter scenario is left for future work and can be approached by partitioning of harvester groups, for ex- ample, weighted (a) according to overall crop-area, or (b) according to
the predicted total crop-harversing time.
Finally, note that throughout Section 3 for the subsequent derivation of IPs it is assumed that all fields must be served. The relaxation of this assumption is treated in Section 4 when discussing financial consider- ations regarding the leasing of subsets of fields.

Eight integer linear programs

Eight different IPs are formulated for the eight different problem setups considered to be most relevant for harvest planning. First, these problem are stated only literally. Relevant constraints are summarized compactly, whereby it is distinguished between constraints used in final numerical simulations and additional constraints. Then, for brevity only the two most general IPs are stated mathematically. Nevertheless, in the final numerical experiments of Section 5 all eight IPs are evaluated.

Literal formulations
Eight integer linear programs, IP-1, …, IP-8, are summarized below.
IP-1 There is a single depot, D = 1, from which all harvesters start and to which all harvesters return after each crop-tour. Any subset of K crops can be used for planting.
IP-2 There are multiple depots D ≥ 1. After every crop-tour, harvesters
must return to the depot from which they started. Any subset of
K crops can be used for planting.
IP-3 Among D > 1 potential depots, the best depot w.r.t. a cost crite- rion is selected. Then, all available harvesters are assigned to this best depot. Note that this problem could also be addressed by separately solving IP-1 for each of the D depots and then selecting the best solution. However, here it is solved by a single IP-formulation. Any subset of K crops can be used for planting.
IP-4 Multiple harvesters are initially located at multiple depots D ≥ 1.
These harvesters assemble at the first field of the first crop-tour.
Then, all these harvesters travel as a group for the remainder of the first and all remaining crop-tours. Then, only after coverage of the last field of the last crop-tour these harvesters return to their initial depots. For D = 1, IP-4 is identical to IP-2. For D > 1, for all crop-tours except the first crop-tour IP-4 requires to se- lect an optimal depot similarly to IP-3. Any subset of K crops can be used for planting.
IP-m Like IP-n for all n = 1,…,4, but all of the K crops must now be used: IP-m for m = 5,…,8.



Constraints and modeling
2. Diversification constraints read ∑l ∈ Sgkδk ≤ Gk, ∀k = 0, .. . , K — 2,

In order to realize the literal problem formulations above, objective	l l
with gk≥0 denoting weights (for example the hectares-coverage or
function and constraints are compactly summarized.	l	k

1. The IP cost function may include accumulated edge costs ck xk , nega- tive profits — rkδk, depot maintenance costs zdξd and crop costs
required production means for field l and crop k) and G ≥ 0 the cor- responding crop-related bounds. Crop indexed by k = K − 1 is left
unconstrained for feasibility. In general, when combining both hard

l l

mγ, whereby ck , rk, zd and m denote the predicted data which must be assumed at the time of harvest planning.
Degree equations for fields ensure that fields are visited exactly once
per crop-tour. For example, for IP-3 with symmetric edge costs the
and inequality constraints without additional precaution, feasibility of the resulting IP cannot be guaranteed. Infeasibility results if
these constraints enforce ∑k ∈ Kδk = 0.
Time	constraints	can	be	formulated	as

degree	equations	read:
∑d ∈ Ð∑ j ∈ S hk xk + ∑i < jhkxk ≤ Tk
— ∑l ∈
Tharv,k δk , k ∈ K,

∑d ∈ Ðxk + ∑i < lxk + ∑l < jxk = 2δk, ∀l ∈ S, ∀k ∈ K.  For  an
dj dj
ij ij
win
S l	l
k

dl	il
lj	l
where, for generality, the multi-depot case is assumed, and where hdj

asymmetric formulation, degree equations are split into two, differ-
and hk may denote travel time along corresponding edges, Tk  the

entiating an in-degree (sum of arcs entering) and out-degree (sum	ij
win

of arcs leaving) equation, both equal to δk, ∀l ∈ S, ∀k ∈ K.
Degree equations for depots are conceptually identical to degree equa- tions for fields. However, the cardinality of depot-vertices is not nec- essarily two. Furthermore, the resulting degree equations may be nonlinear in the original optimization variables. Then, in order to for- mulate linear IPs, nonlinear degree equations can be rendered linear by the introduction of (a) auxiliary variables, and (b) the application of logical constraints (specified below) which introduce additional linear inequality constraints. For example, for IP-3 the nonlinear de-
dgree  equations  are:  ∑k ∈  ∑   xk = 2γξ , ∀d ∈ Ð,  with
length of the harvesting window for each crop k (e.g., multiple days), and Tharv,k the required harvesting time (e.g., inversely propor- tional to the number of used harvesters) per field l and crop k. In
practice, optimal harvesting time windows may be very short due
to weather constraints.
To account for a priori experience about different sequences in ripe- ness of fields, priority constraints can be formulated. For example, re- lating to uncertainties, the sequence in which fields of the same crop ripe may vary, e.g., due to hillsides and varying soil. W.l.o.g., consider a statement such as “if fields a and b are among the ones assigned to crop k, then the corresponding sequence for harvest shall be in order

xk ∈ {0, 1, 2}, ξd ∈{0,1}, 1 ≤ γ ≤ K and ∑d ∈
ξd = 1.
such that a is harvested immediately after b”. This can be modeled as

Uniqueness of crop-assignments to fields is guaranteed through con-
nonlinear constraint xk
= δkδk, and can therefore be translated to

straints ∑k ∈ Kδk = 1, ∀l ∈ S.
Three classes of logical constraints are of particular interest. They can
be translated into integer linear inequalities according to Williams (2013). Because of their importance, three logical constraints are here repeated. Let ϵ > 0 be a small number (e.g., the machine preci-
sion), b,b1,b2,b3 ∈{0,1}, y ∈ℝ, and f(x) such that f : Rnx → R is linear, nx  the  variable  dimension,  f max = maxx ∈ F f (x)  and f min = minx ∈ F f (x), where F is a given bounded set.
The statement “b = 1 if and only if f(x) ≤ 0 and b = 0 otherwise” is
equivalent to

f (x) ≤ f max(1 — b),  f (x)≥ϵ +( f min — ϵ)b.	(2)
linear inequalities by means of Eq. (3). Note that an asymmetric for- mulation has to be employed for all connections between vertices for which priorities are defined. For above example, we therefore re- quire, e.g., xk ≠xk .
Two concrete IP formulations
The two most relevant IP formulations, IP-3 and IP-4, are stated. These are most relevant since they can be simplified to all six remaining IPs. For IP-1, D = 1 is enforced in IP-3. For IP-2 cost coefficients from IP-1 must be adapted. For IP-5 until IP-8, the inclusion of all K crops is enforced. Accordingly, their counterparts IP-1 until IP-4 simplify.
For IP-3 the following is proposed:

min	∑
∑ ∑ ck xk + ∑
∑ ck xk — ∑ ∑ rkδk + ∑ zdξd

The statement “b3 = 1 if and only if b1 = 1 and b2 = 1, and b3 =0 
dj dj
d ∈ Ðk ∈ Kj ∈ S
ij ij
k ∈ Ki < j
l l
l ∈ Sk ∈ K
d ∈ Ð

otherwise” is equivalent to b3 = b1b2 and is equivalent to
b1 + b2 — b3 ≤ 1,  b3 ≤ b1,  b3 ≤ b2.	(3)
+ mγ	(5a)
s.t. ∑ xk + ∑ xk + ∑ xk = 2δk, ∀l ∈ S, ∀k ∈ K,	(5b)

dl
d ∈ Ð
il
i < l
lj	l
l < j

The statement “y = f(x) if b = 1 and y = 0 otherwise” is equiva- lent to y = bf(x) and is equivalent to
y≥ f minb,  y ≤ f (x) — f min(1 — b),	(4a)
y ≤ f maxb,  y≥f (x) — f max(1 — b).	(4b)
∑ δk = 1, ∀l ∈ S,	(5c)
k ∈ K

∑ ∑ xk = 2pd, ∀d ∈ Ð,	(5d)
k ∈ Kj ∈ S

∑ ξd


d ∈ Ð
= 1,	(5e)


Under the assumption of a symmetric formulation (with undirected edges instead of directed arcs) and dropping crop-index k for gener- ality, the subtour elimination constraints (SECs) according to Laporte
(1992) are given by ∑i < j;i,j∈Sxij ≤|S|−1, 3 ≤|S|≤ N−3, ∀S⊆V∖{0, N
−1}. Note that there is an exponential number of SECs.
ξd ≤ pd ≤ Kξd, ∀d ∈ Ð,	(5f)
pd ≤ γ — (1 — ξd), ∀d ∈ Ð,	(5g)
pd≥γ — K(1 — ξd), ∀d ∈ Ð,	(5h)

∑	xk ≤ Sk — 1, Sk⊆V∖{d}, 3 ≤ Sk ≤ N — 1, ∀k ∈ K,

Additional constraints are summarized as follows.
Crop rotation constraints (see Havlin et al., 1990), and constraints
ij
i, j ∈ Sk, i < j
∀d ∈ Ð,
(5i)

similarly related to soil considerations where specific soils only admit specific crops can be formulated as equality constraints,
δk = 0, for prohibited combinations of specific field l and crop k.
with decision variables
xk ∈ {0, 1, 2},  ∀d ∈ Ð, ∀j ∈ S,  ∀k ∈ K,	(6a)

xk ∈ {0, 1},  0 ≤ i < j, ∀k ∈ K,	(6b)
δk ∈ {0, 1},  ∀l ∈ S, ∀k ∈ K,	(6c)
1 ≤ γ ≤ K,	(6d)
d

αK — 2 — k + 1 — ∑1+k β~K — 2 — k+τ — β~K — 2 — k ≤ 1,  ∀k
= 0, ... , K — 2,	(8q)
β~K — 2 — k ≤ αK — 2 — k, ∀k = 0, .. . , K — 2,	(8r)
β~K — 2 — k ≤ 1 — ∑1+kβ~K — 2 — k+τ, ∀k = 0, ... , K — 2,	(8s)

ξ ∈ {0, 1},  ∀d ∈ Ð,	(6e)
d
τ=1

α~k + xk — vk ≤ 1, vk ≤ α~k, vk ≤ xk , ∀d ∈ Ð, ∀j ∈ S, ∀k ∈ K,	(8t)

p ∈ {0, 1, .. . , K},  ∀d ∈ Ð,	(6f)
dj	dj	dj
dj	dj

Thus, IP-3 has Nz = KDL + K∑L — 2L — 1 — q + KL + 1 + 2D integer

q=0
decision variables. It differs from IP-1 by
D > 1. Therefore, the decision
β~k + xk
k ≤ 1, wk
≤ β~k , wk
≤ xk , ∀d ∈ Ð, ∀j ∈ S, ∀k ∈ K,	(8u)

about starting from the optimal depot w.r.t. the given cost criterion is modeled as constraints
∑ ∑ xk = 2γξd, ∀d ∈ Ð,	(7)

∑	xk ≤ Sk — 1, Sk⊆V∖{d}, 3 ≤ Sk ≤ N — 1, ∀k ∈ K,
i, j ∈ Sk, i < j
∀d ∈ Ð,


(8v)

k ∈ Kj ∈ S

with xk ∈ {0, 1, 2}, ξd ∈{0,1}, 1 ≤ γ ≤ K and ∑d ∈ ξd = 1. Since Eq. (7) is
with decision variables
k

dj	d	d	Ð	xdj ∈ {0, 1}, ∀d ∈ Ð, ∀j ∈ S, ∀k ∈ K,	(9a)
nonlinear, auxiliary variables p  = γξ , ∀d ∈ Ð are introduced. Then,

Eq. (7) can be translated to linear inequality constraints (5f), (5g) and
(5h) following Eq. (4). Finally, note that from Eq. (5e) and the definition of pd, the number of decision variables can be reduced by γ when
xk ∈ {0, 1},0 ≤ i < j, ∀k ∈ K,	(9b)
δk ∈ {0, 1}, ∀l ∈ S, ∀k ∈ K,	(9c)

l
substituting γ = ∑d ∈ Ðpd in Eq. (5).

For IP-4 the following is proposed:
1 ≤ γ ≤ K,	(9d)

min	∑ ∑ ∑ ck,kmin vk + ck xk — ck vk +
ξd ∈ {0, 1}, ∀d ∈ Ð,	(9e)

d ∈ Ðk ∈ Kj ∈ S dj
dj	dj dj
dj dj

∑ ∑ ck xk — ∑ ∑ rkδk + ∑ zdξd
pd ∈ {0, 1, .. . , K}, ∀d ∈ Ð,	(9f)


k ∈ Ki < j
ij ij
l l
l ∈ Sk ∈ K

d ∈ Ð
(8a)

∑ ∑ ∑ ck,kmax wk
+ ck xk
— ck wk
+ mγ
αk, α~k, β~k ∈ {0, 1}, ∀k ∈ K,	(9g)

d ∈ Ðk ∈ Kj ∈ S jd
jd	jd jd
jd  jd

vk , wk

∈ {0, 1}, ∀d ∈ Ð, ∀j ∈ S, ∀k ∈ K,	(9h)

s	k	k	k	k	k
dj	jd

.t. ∑ xdl + ∑ xil + ∑ xlj + ∑ xld = 2δl , ∀l ∈ S, ∀k ∈ K,	(8b)

d ∈ Ð
i < l
l < j
d ∈ Ð
k ∈ {0, 1}, ∀d ∈ Ð, ∀j ∈ S,  ∀k ∈ K.	(9i)

∑ δk = 1, ∀l ∈ S,	(8c)
k ∈ K
For the formulation of crop- and depot-dependent cost coefficients, the minimum and maximum active crop-indices need to be identified. Let
therefore αk ∈{0,1} indicate if crop k is active in the sense of αk = 1 if

∑ ∑ xk + xk = 2pd,  ∀d ∈ Ð,	(8d)
∑l ∈ Sδk≥1. By Eq. (2), this translates to Eqs. (8m) and (8n). We intro-

dj	jd
k ∈ Kj ∈ S
l	k ~k

duced auxiliary variables α~ , β ∈ {0, 1} indicating if crop k is the
d	k	~k	smallest- or largest-indexed active crop, respectively (k = kmin and

∑ ξ
d ∈ Ð
= 1, ∑ a~
k ∈ K
= 1, ∑ β
k ∈ K
= 1,	(8e)

k = k

max
). It holds that ∑k ∈ Kα~
= 1 and ∑	β~k

= 1. We then de-

0	K — 1
rive	the	nonlinear	relations	α~0 = α0 ,	α~1 = α1(1 — α~0),

α~ = α0, β~
= αK — 1,	(8f)
α~2 = α2(1 — α~1 — α~0), …, which can be translated to

∑ ∑ ∑ vk = 1, ∑ ∑ ∑ wk = 1	(8g)	0

dj
d ∈ Ðj ∈ Sk ∈ K
jd
d ∈ Ðj ∈ Sk ∈ K
α~ = α0,	(10a)

∑ xk = ξd, ∀d ∈ Ð, ∀k ∈ K,	(8h)
αk + (1 — ∑k — 1α~τ) — α~k ≤ 1, ∀k = 1, .. . , K — 1,	(10b)

j ∈ S

k jd

= ξd, ∀d ∈ Ð, ∀k ∈ K,	(8i)
α~k ≤ αk, α~k ≤ 1 — ∑k — 1α~τ, ∀k = 1, ... , K — 1.	(10c)
Similarly, starting the iteration from highest k = K − 1 with

j ∈ S
β~K — 1
= αK
— 1, we can derive nonlinear relations for β~k
to ultimately

ξd ≤ pd ≤ K, ∀d ∈ Ð,	(8j)
obtain Eqs. (8q), (8r) and (8s). Suppose the path-dependent part of the cost	function	taking	the	nonlinear	form

pd ≤ γ — (1 — ξd), ∀d ∈ Ð,	(8k)
pd≥γ — K(1 — ξd), ∀d ∈ Ð,	(8l)
∑	∑	∑
∑	∑	∑
 ck,kmin α~k + ck (1 — α~k) xk +-
 ck,kmax β~k + ck (1 — β~k ) xk , with ck,kmin ≥0 and

1 — ∑ δk ≤ 1 — αk, ∀k ∈ K,	(8m)
l ∈ S
further ck,kmax ≥0 denoting cost-coefficients that are distinct for the first (i.e., k = kmin or α~k = 1) and last (i.e., k = kmax or β~k = 1) crop-route, re-

k	k	spectively. Then, auxiliary variables vk ∈ {0, 1} and wk ∈ {0, 1} need

1 — ∑ δl ≥ϵ +( — L + 1 — ϵ)α , ∀k ∈ K,	(8n)
dj	jd

l ∈ S
to	be	introduced	with	∑d ∈ Ð∑ j ∈ S∑k ∈ Kvk = 1	and

αk + (1 — ∑k — 1α~τ) — α~k ≤ 1, ∀k = 1, ... , K — 1,	(8o)
∑d ∈ Ð∑ j ∈ S∑k ∈ Kwk
= 1 . They are related according to vk =

α~kxk and wk = β~kxk , ∀d ∈ Ð, j ∈ S, k ∈ K, and can be translated to in-

α~k ≤ αk, α~k ≤ 1 — ∑k — 1α~τ, ∀k = 1, .. . , K — 1.	(8p)
dj	jd	jd

τ=0
teger linear inequalities according to Eq. (3). The objective function part



above can now be expressed linearly dependent on decision variables, see Eq. (8a).

. Main algorithm

The main algorithm of this paper is summarized as follows:
Algorithm 1. CApR-n
. Analysis and discussion of the main algorithm

Several comments are made. First, clustering Step 2 is introduced to upscale the number of fields that can be handled for the coupling of crop assignment and routing. This is relevant if the available combination of computational power and IP-solver is prohibiting to solve a large-scale IP-n with many fields. However, it is here explicitly emphasized that clustering induces suboptimality in the solution. This aspect is exemplatorily quantified in Experiment 2 of Section 5.3.2, and further discussed in the outlook of the conclusion in Section 6. Note that the clustering Step 2 does not necessarily have to be conducted according to spatial proximity of fields. Fields can be clustered arbitrarily. Also, sin- gle fields can be assigned to a single cluster for special analysis. Cluster- ing Step 2 entails Step 4, which solves multiple instances of a TSP with different start and end vertex and thus generates routes within clusters of fields planting the same crop. Therefore, omitting superscript k for brevity, the general IP is
min ∑ cijxij	(11a)
i < j


s.t.∑N — 2x0j = 1, ∑N — 2x jN

1 = 1,	(11b)

j=1	j=1	—
∑ xil + ∑ xlj = 2, l = 1, ... , N — 2,	(11c)
i < l	l < j
∑ xij ≤ |S| — 1, ∀S⊆V∖{0, N — 1},3 ≤ |S| ≤ N — 3,	(11d)
i, j ∈ S i < j

xij ∈ {0, 1},0 ≤ i < j, j = 1, .. . , N — 1,	(11e)
where vertex-indices 0 and N − 1 are defined as the start and end ver- tex of the traveling salesman tour (TSP) connecting the N vertices of a
given cluster, respectively. See Step 4 of CApR-n for its application and the specific method for the selection of start and end vertices. See also Fig. 2 for further visualization. Constraints (11b) and (11c) indicate that start and end vertex are incident to one edge, and all other vertices inci- dent to two, respectively. Under the assumption of symmetry, the subtour elimination constraints (SECs) according to Laporte (1992) are given by Eq. (11d).
Second and importantly, note that if the number of clusters is equal
to the number of fields, i.e., h~ = L, the algorithm is reduced to the IP- formulations of Step 3. Then, CApR-n is equivalent to IP-n, and JCApR−n
= JIP−n.



Remark 1. It is stressed that for h~ < L, because of the clustering Step 2, there can be examples constructed in which a hierarchical method that (a) first solves an assignment problem without accounting for any spatial field-proximity, before (b) then computing crop-tours can be more cost-efficient than a corresponding CApR-solution. However, this cannot occur for h~ = L. This is since the hierarchical solution is a feasible solution of the method coupling crop assignment and vehicle routing. Therefore, in practice, to optimize the monetary result the number of clusters must always be increased as much as computational power and available IP-solver permit, ideally, until h~ = L.
For completeness, a basic IP for pure crop assignment to fields with- out accounting for any field-connectivity information is min{−∑l∈S
∑k∈Krkδk : ∑k∈Kδk = 1, ∀l∈S, δk∈{0, 1}, ∀l∈S, ∀k∈K}. Under the ad-

The name is derived from its purpose: Crop Assignment plus Routing
(CApR). See Fig. 2 for visualization. The reversing of a list or sequence of elements is denoted by the flip(⋅)-operator. The monetary profit is denoted by JCApR−n and is always composed of all of (a) revenues from
growing crops, (b) accumulated edge costs, (c) relevant depot mainte-
nance costs and (d) fixed crop costs. Thus, a large JCApR−n is beneficial. For clarification, for h~ = L the profit JCApR−n is equal to the negative ob- jective value of IP-n, JIP−n, when all of (a) to (d) are accounted for. Anal- ysis is provided next.
l l	l	l
ditional assumption of field-uniform rh = rh, ∀l ∈ S, its optimal solution always assigns the most profitable crop indexed by h★ = argmaxh ∈ Krh to all fields. Furthermore, when including both crop rotation and diver-
sification constraints, and introducing the relaxation ∑h ∈ Kδh ≤ 1, fea- sibility of the assignment IP is always guaranteed. This is since these
constraints can always be satisfied by δh = 0. Moreover, note that the so- lution of the LP-relaxation of the assignment IP, and also including crop rotation constraints, is integer feasible, and thus solves these problems as




Fig. 2. Illustration of Steps 1 to 4 of CApR-n. (Plot 1) Three depots (D0, D1 and D2) and 50 fields are visualized by the black and green balls, respectively. (Plot 2) The fields are assigned to k~ = 10 clusters (C0,…,C9). All fields belonging to the same cluster are colored correspondingly. The cross-signs indicate the k~ centroids and are labeled accordingly. (Plot 3) Results of IP-7 applied to the k~ centroids. (Plot 4) Results of CApR-7. For visualization, the fields are colored according to the clustering result. Labels k = 0, k = 1 and k = 2 indicate the first edge traversal of each crop-tour, whereby a crop-tour denotes the harvesting routes associated with a specific crop k.


well. The proof is omitted for brevity, but it follows from the integrality property of the LP-relaxation of the assignment IP, see Schrijver (1998) and Heller and Tompkins (1956). Consequently, very large instances (with many fields and crops) of the assignment OP can easily be solved. As a remark, the aforementioned inequality relaxation does not affect the integrality property. This is since slack variables sl can be
introduced such that ∑h ∈ Kδh + sl = 1, sl ∈ {0, 1}, ∀l ∈ S. In contrast, by adding diversification constraints, in general, the LP-relaxation is
rendered to not be integer feasible anymore.
Third, the relations between different IP-n are discussed.
Proposition 2. It always holds JIP−3 ≥ JIP−2.
Proof. The proof is by contradiction. Assume JIP−2 > JIP−3. JIP−2 and JIP
−3 differ by cost coefficients ch = ch,hmin , ∀h ∈ K and ch in Eq. (1b), re-
iteratively tests and exchanges field-pairs within a crop-tour sequence if it improves the JCApR−n-result. Alternatively, local field sequences could here also be exchanged manually according to heuristic prefer-
ences of the farm operator.

. Extensions

. Financial considerations regarding leasing

For leasing considerations, the partial service of a subset of fields is of interest. Let subset S~ ⊆S denote all fields for which we do not necessarily want to enforce field service but contemplate leasing options. Then, for
IP-3, we maintain equality constraints (5b) and (5c) only for S∖S~ , and define	relaxed	inequalities	∑d ∈ Ðxh + ∑i < lxh +

dj	dj	dj	dl	il
spectively. By linearity of JIP−2 and the definition of ch,hmin according to	∑l < jxh ≤ 2δh, ∀l ∈ S~ , ∀h ∈ K and ∑h ∈ Kδh ≤ 1, ∀l ∈ S~. We similarly
dj	lj	l	l

Eq. (1c), and by nonnegativity of c~h , JIP−2 can always be increased by
harv,hconcentrating all harvesters, ∑~	, to the most cost-efficient depot. This is the IP-3 solution and therefore contradicts our assump- tion. The equality-part is because a special case of IP-2 is that none har- vesters are initially located at any of the depots except the optimal one according to IP-3.□
It also always holds that JIP−3 ≥ JIP−1. This is since the latter single depot case is a feasible solution of the former multiple depot case. Gen- eralizing statements regarding JIP−1 versus JIP−2, and likewise for JIP−3
vs. JIP−4 cannot be made. This is because it is always possible to create
counterexamples in favor of one or another solution. However, it always holds that JIP−n ≥ JIP−(n+4),∀n = 1,…,4. This is since the method of enforcing all crops as for IP − (n + 4) is always a feasible solution of
IP-n.
Fourth, the relations between various JIP−n,∀n = 1,…,8, as discussed before, can in general not be translated to the corresponding CApR-n so- lutions for h~ < L. This is because of the clustering-heuristic in CApR-n.
relax corresponding constraints for all other IP-n. Any CApR-n including such constraints, shall be denoted as the relaxed CApR-n. In constrast, the original problem according to Section 3.3 is referred to as the stan- dard CApR-n.
An important financial consideration for every farm is to decide upon either servicing or renting out of one's fields, and additionally the decision upon taking of leases on additional fields for coverage. Let us denote the sets of corresponding fields by ℒown (farmer's own fields),
ℒpro ⊆ℒown (potential rent outs) and ℒptl (potential fields for taking
leases upon), respectively. Then, the following algorithm provides
guidelines for decision making:

For instance, JCApR−3
≥ JCApR−2
can in general not be guaranteed.

Fifth, it is elaborated on Step 4 of CApR-n. Under the absence of pri- ority constraints, there exist two directions in which to traverse any crop-tour. The traversal direction affects the closest fields between any pair of consecutive clusters. Consequently, the TSP-solution for
each cluster, and thereby ultimately the total path length of the crop-
tour, is affected, too. This motivated to test both cluster-sequences as in-
dicated in Step 4. As stated, CApR-n does not account for priority con- straints, i.e., for a priori modeling of field ripeness sequences.
Therefore, Step 2 and 4 require modification and clustering must be conducted according to an objective accounting for ripeness level. As a
consequence, the traversal direction for Step 4 would also be fixed.
Sixth, the result of CApR-n could be further refined by including an additional step (before Step 5) for heuristic local searches that





Algorithm 2. Renting out and taking leases








It is elaborated on Step 4. Suppose the inclusion of a field does not improve the total financial return. This may be because of too expensive production costs, for example, when fields are located very distant apart from depots or due to limited harvesting windows. Then, renting out is profitable essentially already for any positive return. Let us also discuss Step 9. In contrast to pure assignment problems, the maximum leasing rate ΔJ cannot easily be distributed among corresponding fields. This is because monetary profits are nonlinearly related to crop returns be- cause of the coupling with routing decisions. Importantly, the precise distribution of leasing rates of individual fields is not relevant as long as it overall does not surpass ΔJ. Thus, ΔJ provides the farmer with an upper bound on profitable leasing rates. If ΔJ cannot be attained in nego- tiations, different ℒptl should be selected and the algorithm solved again. This is repeated until a corresponding upper bound can be satis-
fied, or, ultimately, ℒown∖ℒro are serviced.
patterns and in-field navigation (see Jensen et al., 2012, Conesa-Muñoz et al., 2016b, Plessen, 2018, Plessen, 2019) could also be co-planned to account for crop-tours efficiently linking fields that plant the same crops. This may be subject of future work.

. Numerical simulations

This section summarizes the experimental data setup, the methods used to solve proposed IPs, and finally some numerical simulation re- sults.

. Experiment data setup

For numerical simulations one data set is composed of 10 different random instances. In Section 5.3 the mean evaluation results are re- ported for these instances. Problem data is generated synthetically based on realistic parameter settings from farming in Northern Germany. The data generation for each instance is as follows. The num- ber of available depots, crops and fields is set as D = 3, K = 3 and L = 50, respectively. Field and depot locations are generated randomly accord- ing to a Gaussian distribution centered at the origin with standard devi-
ations σd = 10km, ∀d ∈ Ð, and σl = 15km, ∀l ∈ℒ. To each depot, we
randomly assign a number of harvesters according Nharv,h =
max(1, ⌊5ud⌋), ud∼C(0, 1), ∀d ∈ Ð, where C(0, 1) denotes the Uniform distribution with zero mean and unit variance, and ⌊ ⋅ ⌋ denotes rounding to the next smallest integer. Normalized traveling costs per
harvester and km are set uniformly (for all inter-depot and inter-field distances) as c~ = 30 km.A cost of m = 1000€for every planted crop is as- sumed. Maintenance costs are assumed to be identical for all depots.
Therefore, w.l.o.g. zd = 0, ∀d ∈ Ð is set. Realistic normalised monetary returns in €per ha and crop are determined as mean values from inter-
mediate soil qualities and crop yields in Northern Germany. These are summarized in Table 1. Two options were considered for monetary re- turn per field and crop. First, field sizes were generated according to
sl = max(20 + 10ud, 1), ud∼N (0, 1), ∀l ∈ S, where N (0, 1) denotes the Gaussian distribution with zero mean and unit variance. In combination
with L = 50 this results approximately in a total coverage size of 1000 ha. According to the survey by Statistisches Bundesamt Deutschland (2016), in all of Germany there are 299,134 farming businesses of which only 1502 have a size of more than 1000 ha. Field sizes were

The second financial consideration is motivated by the comparison
then multiplied with
r~h  according to Table 1, to yield rh =

of monetary returns for CApR-n. It permits to determine “fair” prices for leasing when sheltering machinery at the various depots. It is envisioned that all collaborating farmers first involve in accurate system modeling of cost coefficients, before then solving either all of CApR-n,
∀n = 1,…,4, or all of CApR-n, ∀n = 5,…,8. Specifically, the difference
in objective values between CApR-2 (or CApR-7 for enforcement of all
K crops in the solution) and the remaining CApR-n then permits to de- termine an upper bound on leasing rates for depot usage.
Finally, even though a detailed discussion is here out of scope, the importance of a suitable method for sharing of profits is underlined. It is fundamental for providing incentives for farmers to collaborate and
slr~h, ∀l ∈ S, h ∈ K. This method of data generation is intuitive. However, since normalised monetary return is considerably higher for wheat in
contrast to barley and rapeseed, the application of CApR-n typically as- signs wheat to all fields, unless crop rotation constraints, or diversifica- tion constraints, as in CApR-n for n = 5,…,8, are included. Thus, in the latter cases, the crop with smallest monetary return is assigned to the cluster with smallest field area, and the crop with second-smallest re- turn to the second-smallest area and so forth. In a second setting, and to add more variety, monetary returns per field and crop were therefore generated   differently   according   to   rh = max(20 +
10uh, 1)r~h, ∀l ∈ S, h ∈ K, with uh∼N (0, 1). Throughout Section 5.3, the

adopt proposed planning methods. See Andersson et al. (2005) for a dis-	l	l

cussion about how farm cooperation can improve both sustainability and profitability.

. Application in practice

Modeling of parameters listed in Step 1 of CApR-n is largely affecting the overall result and may be based on historical field and crop yield data. By the selection of ch , computational complexity can be reduced by pruning specific undesired field connections from a path network, thereby implicitly also influencing priority constraints. Large fields often have multiple possible field entrance and exit points, which may
second setting is used for data generation.

. Solution of integer programs

For the solution of IPs in CApR-n, three open-source IP-solver candi- dates were considered: CBC (Forrest, 2012), GLPK_MI (Makhorin, 2008), and ECOS_BB (Domahidi et al., 2013). All of these solvers were called through the domain-specific language CVXPY for optimization embedded in Python (Diamond and Boyd, 2016). All numerical experi- ments were conducted on a laptop running Ubuntu 16.04 equipped with an Intel Core i7 CPU @2.80GHz×8 and 15.6 GB of memory. For the present applications and in preliminary tests (e.g., stochastic exper-

significantly affect inter-field travel distances. Therefore, field coverage
iments for L = 50 and various
h~ ), the GLPK_MI consistently



outperformed the other two considered IP-solvers. Therefore, it was used for all numerical experiments of Section 5.3. For clarification, the focus of this paper was on problem modeling for a broad variety of set- tings typical in an agricultural context. The scope of this paper is not discussing or applying the most efficient (commercial) problem solver. A remark to incorporating SECs in Integer Program is made. The pro- posed optimization problems include an exponential number of SECs (see also Laporte, 1992 for a general discussion). Therefore, in this paper SECs are approached in form of separation algorithms according to Pataki (2003). Thus, SECs are added sequentially as they are needed.
Table 1
Normalized and averaged monetary returns in Northern Germany that were used in sim- ulations.


Barley	Rapeseed	Wheat	Unit k	0	1	2	−
r~k	570	600	750	€/ha




changes, which explains the many SEC-iterations, often exceeding the 200 SEC-iteration bound. Fourth, for h~ = 10 on average only 1 SEC-

For instance, with regard of Eq. (11), it is first solved without Eq. (11d).
iteration was required for CAPR-8 (recall that T¯IP — n and N¯ IP — n
count

Then, if the result does not return any subtour, the optimal solution has
CPU
iterSEC+

been found. Otherwise, all detected subtours are added to Eq. (11) as SECs, and the IP is solved again. This is repeated until a solution without subtours is found (the optimal solution), or a maximal number of SEC- iterations is reached.
The sequential inclusion of SECs as they are needed offers the advan- tage of simplicity. Furthermore and importantly, as will be shown em- pirically in Section 5.3, for the preferred IP-settings and h~ = 10very few (low single digit) SEC-iterations were required to find an integer solu- tion without subtours, which thus also implies efficiency. Nevertheless, it is here clarified that it may not be the most efficient method to handle SECs. This is further discussed in the outlook of Section 6, including sug- gestion of future work.

. Experimental results

This section is partitioned into two parts. First, all proposed methods CApR-n for n = 1,…,8 are compared in experiments according to Section 5.1 for two different numbers of field-clusters. Second, the im- provement potential of solving CApR-problems without any clustering is illustrated, i.e., for h~ = L.
Evaluation criteria are averaged over 10 simulation experiments, and indicated by y¯ for a criterion y. The percentage out of the 10 simu- lation experiments for which an IP-n solution could be found in less
than 200 SEC-iterations is denoted by PIP−n. The average number of decision variables, SEC-iterations plus the initial IP-iteration without
SECs, number of equality constraints, inequality constraints when first omitting SECs and for the final SEC-iteration (before convergence) are
all IPs including the initial one without any SECs). Thus, for (a) small h~
(such as h~ = 10 ) and (b) n = 5,…,8 the method according to Section 5.2 adding SECs as they are needed appears appropriate. Fifth, profit J¯CApR — n increases with h~. This concept is further emphasized in the next Experiment 2.

. Experiment 2
The purpose of Experiment 2 is to illustrate the benefit on profit when solving for h~ = L, i.e., dismissing the heuristic clustering-step. For brevity, results are reported only for CApR-5. However, they are by trend comparable for all other 7 methods. In contrast to Experiment 1 with L = 50, the results for IP-5 are summarized in Table 3 for L = 40 (due to an exploding computational complexity). For h~ = 40 there are 2580 integer variables and 2580 inequality constraints even without in- corporation of any SECs. Note that for the given experiment with the maximum possible number of clusters h~ = L a notable improvement of 15.4% over the solution for h~ = 10 could be observed. This underlines
the economic incentive for attempting to solve IPs for h~ = L as stressed
in Remark 1, if this is permitted by the available combination of compu- tational hardware and IP-solver.


. Conclusion

A flexible framework for the coupling of crop assignment with vehi- cle routing for harvest planning was presented. This problem is relevant since the decision about crop assignment must be addressed by every

denoted by NIP — n , N¯ IP — n
, N,IP−n, NIP−n	and N¯ IP — n	,
farm manager at the beginning of every work-cycle starting with plant

z	iterSEC+	eq
ineq,NoSEC
ineq,finalIP

respectively. Average accumulated CPU-time for the solution of all SEC-iterations and all TSP-problems are T¯IP — n and T¯TSPs , respectively.
seeding and ending with harvesting. The main contribution was the proposal of 8 different IP formulations. It was found in numerical exper-

CPU
CPU
iments that the 4 cases with enforced inclusion of any crop out of a set of

The average number of required SEC-iterations for the solution of all TSPs (which includes all SEC-iterations plus the initial IP-solution with- out SECs) is denoted by N¯ TSPs  .

. Experiment 1
The results of Experiment 1 are summarized in Table 2. For h~ = 20, J¯CApR — 1 and J¯CApR — 2 are not reported in the comparison since only 90% and 30% of experiments could be solved within 200 SEC- iterations. Several remarks can be made. First, it is noted how quickly computational complexity rises with increasing h~ . For example,
T¯IP — 1 = 0.07s for h~ = 10, but T¯IP — 1 = 63.09s for h~ = 20. Second, fixing
crops to be computationally notably more efficient. This enforcement is applicable in practice since the list of eligible crops typically is very lim- ited. For large-scale applications where sole IP formulations are not trac- table anymore, a heuristic algorithm was proposed combining the IP- formulations with clustering of fields and the solution of local TSPs.
The focus of this paper was on problem modeling for a broad variety of settings typical in agriculture. For future work the main task is devel- opment of an efficient solution method. This is motivated by the fact that the output of CApR-n remains heuristic and in general suboptimal for all h~ < L due to the clustering step. Thus, IP-solution methods must be de- veloped that enable to solve in reasonable time for h~ = L and for large L,

CPU
CPU
e.g., L ≈ 100. Therefore, two main approaches are envisioned. First, by

the number of serviced crops as done for CApR-n,n = 5,…,8, notably re-
duces CPU-time; compare T¯IP — n vs. T¯IP — (n+4) for n = 1,…,4 and h~ = 20
(a) focusing on one specific IP-formulation (e.g., IP-5 since IP-6 can be

CPU
CPU
reduced to it and IP-7 can be solved by solving IP-5 for all available de-

. Similarly, the average number of SEC-iterations N¯ IP — n
is affected. For
pots) the problem formulation can be standardized, before (b) a cus- tomized IP-solver, e.g., a branch-and-cut algorithm may be developed.

every additional SEC-iteration, an additional IP with an increased num- ber of SECs has to be solved. Third, for h~ = 20CApR-2 had difficulties in finding a solution within 200 SEC-iterations, see PIP−2. The intuitive
explanation is that the optimal solution when optimizing over any
subset of K crops in combination with characteristic cost coefficient (1c) is very sensitive to newly added SECs and accordingly quickly
Reformulations of the SECs, for example, in form of MTZ-SECs (Miller et al., 1960), which introduce additional continuous variables for SECs and thereby render the problem of mixed integer nature may also be ex- plored. Alternatively and secondly, optimization by simulation algo- rithms, e.g., Tabu search heuristics similar to Gendreau et al. (1994), may be tested to solve the proposed IP-problems.


Table 2
Summary of Experiment 1. The results of CApR-n for n = 1,…,8 are compared for two different k~.







CPU

iterSEC+

z
eq ineq,NoSEC
ineq,finalIP CPU
iterSEC+
conv











CPU

iterSEC+

z
eq ineq,NoSEC
ineq,finalIP

CPU

iterSEC+
conv



Declaration of competing interest

The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influ- ence the work reported in this paper.

References

Ahumada, O., Villalobos, J.R., 2009. Application of planning models in the agri-food supply chain: a review. Eur. J. Oper. Res. 196, 1–20.
Andersson, H., Larsén, K., Lagerkvist, C.J., Andersson, C., Blad, F., Samuelsson, J., Skargren, P., 2005. Farm cooperation to improve sustainability. AMBIO:J. Hum. Environ. 34, 383–387.
Basnet, C., Foulds, L.R., Wilson, J., 2006. Scheduling contractors' farm-to-farm crop har- vesting operations. Int. Trans. Oper. Res. 13, 1–15.
Bektas, T., 2006. The multiple traveling salesman problem: an overview of formulations and solution procedures. Omega 34, 209–219.
Bochtis, D., Sørensen, C.G., 2009. The vehicle routing problem in field logistics part I. Biosyst. Eng. 104, 447–457.



Table 3
Summary of Experiment 2 for CApR-5. The improvement potential of solving CApR-5 with- out any clustering step for k~ = L is illustrated.


CApR-5
Conesa-Muñoz, J., Bengochea-Guevara, J.M., Andujar, D., Ribeiro, A., 2016a. Route plan- ning for agricultural tasks: a general approach for fleets of autonomous vehicles in site-specific herbicide applications. Comput. Electron. Agric. 127, 204–220.
Conesa-Muñoz, J., Pajares, G., Ribeiro, A., 2016b. Mix-opt: a new route operator for opti- mal coverage path planning for a fleet in an agricultural environment. Expert Syst. Appl. 54, 364–378.
Diamond, S., Boyd, S., 2016. CVXPY: a python-embedded modeling language for convex optimization. J. Mach. Learn. Res. 17, 1–5.
Domahidi, A., Chu, E., Boyd, S., 2013. ECOS: An SOCP solver for embedded systems. IEEE European Control Conference, Switzerland: Zurich, pp. 3071–3076.
Ferrer, J.C., Mac Cawley, A., Maturana, S., Toloza, S., Vera, J., 2008. An optimization ap- proach for scheduling wine grape harvest operations. Int. J. Prod. Econ. 112, 985–999.
Financial Times, 2016. Wheat price falls to lowest level in a decade. https://www.ft.com/ content/75fdb856-6b0c-11e6-ae5b-a7cc5dd5a28c.
Fleming, C.L., Griffis, S.E., Bell, J.E., 2013. The effects of triangle inequality on the vehicle routing problem. Eur. J. Oper. Res. 224, 1–7.
Forrest, J., 2012. CBC (coin-or branch and cut) open-source mixed integer programming solver. https://projects.coin-or.org/Cbc Version 2.9.9.
Gendreau, M., Hertz, A., Laporte, G., 1994. A tabu search heuristic for the vehicle routing problem. Manag. Sci. 40, 1276–1290.
Havlin, J., Kissel, D., Maddux, L., Claassen, M., Long, J., 1990. Crop rotation and tillage ef- fects on soil organic carbon and nitrogen. Soil Sci. Soc. Am. J. 54, 448–452.
Heller, I., Tompkins, C., 1956. An extension of a theorem of Dantzig's. Linear Inequalities and Related Systems. 38, pp. 247–254.
Jensen, M.A.F., Bochtis, D., Sørensen, C.G., Blas, M.R., Lykkegaard, K.L., 2012. In-field and inter-field path planning for agricultural transport units. Comput. Ind. Eng. 63, 1054–1061.
Kim, S., Lewis, M.E., White, C.C., 2005. Optimal vehicle routing with real-time traffic infor- mation. IEEE Trans. Intell. Transp. Syst. 6, 178–188.

Unit
k~ = 10
k~ = 40	Δrel [%]
Laporte, G., 1992. The traveling salesman problem: an overview of exact and approximate algorithms. Eur. J. Oper. Res. 59, 231–247.

J¯CApR — n	€	590,911	681,900	15.4
Makhorin, A., 2008. GLPK (GNU linear programming kit). Version 4.64.. https://www.gnu.

¯IP — n
CPU
¯IP — n
iterSEC+
IP — n
z
IP−n
eq
IP−n
ineq,NoSEC
¯IP — n
ineq,finalIP
¯TSPs
CPU
¯TSPs
iterSEC+
s	0.01	160.1	1.6e6
−	1.9	39.9	2000
−	195	2580	1223
−	196.2	2650.0	1251
s	0.03	0	−100
−	12.20	0	−100
org/software/glpk/.
Marques, A.S., Audy, J.F., D’Amours, S., Rönnqvist, M., 2014. Tactical and operational har- vest planning. The Management of Industrial Forest Plantations. Springer,
pp. 239–267.
Miller, C.E., Tucker, A.W., Zemlin, R.A., 1960. Integer programming formulation of travel- ing salesman problems. J. ACM 7, 326–329.
Orfanou, A., Busato, P., Bochtis, D., Edwards, G., Pavlou, D., Sørensen, C.G., Berruto, R., 2013. Scheduling for machinery fleets in biomass multiple-field operations. Comput. Elec- tron. Agric. 94, 12–19.
Pataki, G., 2003. Teaching integer programming formulations using the traveling sales-
man problem. SIAM Rev. 45, 116–123.

PIP−n	%	100	100	0
Plessen, M.G., 2019. Optimal in-field routing for full and partial field coverage with arbi- trary non-convex fields and multiple obstacle areas. arXiv preprint 1906.04264.



Plessen, M.M.G., 2018. Partial field coverage based on two path planning patterns. Biosyst.
Eng. 171, 16–29.
Schrijver, A., 1998. Theory of Linear and Integer Programming. John Wiley & Sons.
Seyyedhasani, H., Dvorak, J.S., 2017. Using the vehicle routing problem to reduce field completion times with multiple machines. Comput. Electron. Agric. 134, 142–150.
Sørensen, C.G., Bochtis, D.D., 2010. Conceptual model of fleet management in agriculture.
Biosyst. Eng. 105, 41–50.
Statistisches Bundesamt Deutschland, 2016. Land- und Forstwirtschaft. https://www. destatis.de/DE/Publikationen/StatistischesJahrbuch/LandForstwirtschaft.pdf?blob= publicationFile.
Toth, P., Vigo, D., 2014. Vehicle Routing: Problems, Methods, and Applications. SIAM. Williams, H.P., 2013. Model Building in Mathematical Programming. John Wiley & Sons.
