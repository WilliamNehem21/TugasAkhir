Artificial Intelligence in the Life Sciences 3 (2023) 100073

		


Research Article
Designing microplate layouts using artificial intelligence
Mar√≠a Andre√≠na Francisco Rodr√≠guez‚àó, Jordi Carreras Puigvert, Ola Spjuth
Department of Pharmaceutical Biosciences and Science for Life Laboratory, Uppsala University, Sweden


a r t i c l e	i n f o	a b s t r a c t

	

Keywords: Plate design Plate effects Quality control
Microplates are indispensable in large-scale biomedical experiments but the physical location of samples and controls on the microplate can significantly affect the resulting data and quality metric values. We introduce a new method based on constraint programming for designing microplate layouts that reduces unwanted bias and limits the impact of batch effects after error correction and normalisation. We demonstrate that our method
IC50/EC50, and for drug screening leads to increased precision, when compared to random layouts. It also reduces applied to dose-response experiments leads to more accurate regression curves and lower errors when estimating the risk of inflated scores from common microplate quality assessment metrics such as ùëç‚Ä≤ factor and SSMD. We
make our method available via a suite of tools (PLAID) including a reference constraint model, a web application, and Python notebooks to evaluate and compare designs when planning microplate experiments.





Introduction

In the era of data-driven life science, the amounts of data produced are continuously expanding, and artificial intelligence techniques such as machine learning algorithms are seeing adoption for many applica- tions in order to convert the data into actionable insights [1‚Äì5]. While in many applications the primary focus has been to obtain as much data as possible, the importance of having data of high quality cannot be understated [6‚Äì8]. For large-scale biomedical experiments, many issues related to data quality pertaining to human operations can be effectively reduced or eliminated by using automated setups and robotised equip- ment [9]. However, several artefacts due to physical, biological, and temporal conditions still remain, and efforts generating large quantities of data can be fruitless if in the end conclusions cannot be drawn due to data-quality issues. A common approach to increase the confidence in the data is to perform multiple technical and biological replicates, but this is associated with higher costs and longer experiments, and often leads to a trade-off between the number of samples analysed and the number of replicates per sample. Another approach is to improve the ex- perimental design, with the aim to carry out the experiment in such a way that it maximises the conclusions that can be drawn from the resulting data [10].
Microplates, or microwell plates, are standard components in many
biomedical experiments. They are flat plates with multiple wells used as small test tubes, organised in a 2:3 matrix. They come in a standard physical dimension to ensure compatibility with different lab equip- ment, and typically contain 24, 96, 384, or 1536 wells. Experiments
carried out using microplates commonly exhibit plate effects [11], also known as positional effects, which are systematic variations across the geometry of a microplate (within-plate effects) or across different plates (between-plate effects) due to factors such as well location, tempera- ture and humidity being unequally distributed, and can affect the re- sults to the point of rendering the experiment unusable. Other factors that can contribute to experimental variation are the lab equipment, such as imprecise manual pipetting, and inconsistent or malfunctioning liquid handling instruments. Common patterns of within-plate effects include: (i) linear row effects; (ii) linear column effects; (iii) linear row and column effects; and (iv) bowl-shaped spatial effects [11]; examples are visualised in Fig. 1. Identifying and correcting for both within- and between-plate effects is important in order to adjust the data so that the impact of the errors can be reduced or avoided. Various normalisation techniques have been developed to this end [12,13], but an appropriate microplate layout is of particular importance for the normalisation to be effective [12,14]. A control is a sample that has been subjected to a known treatment with the goal of accounting for the effects of variables other than what is being tested, thus increasing the reliability of the re- sults. In particular, a negative control is a sample that has been subjected to a treatment that induces no effect, while a positive control is a sam- ple that has been subjected to a treatment with an expected maximal response [15]. In order to mitigate plate effects and gain the most out of using control samples and error correction methods, scientists have been advocating for the use of randomised plate layouts [16,17].
A widely used approach today is to design plate layouts manually in order to simplify for human interaction; e.g. placing controls in the


‚àó Corresponding author.
E-mail addresses: maria.andreina.francisco@farmbio.uu.se  (M.A.  Francisco  Rodr√≠guez),  jordi.carreras.puigvert@farmbio.uu.se  (J.  Carreras  Puigvert), ola.spjuth@farmbio.uu.se (O. Spjuth).
https://doi.org/10.1016/j.ailsci.2023.100073
Received 18 January 2023; Received in revised form 8 March 2023; Accepted 12 April 2023
Available online 14 April 2023
2667-3185/¬© 2023 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/)




Fig. 1. Visualisation of systematic plate effects and distributions of 20 negative controls using border, random and effective layouts. The colours indicate the intensity measured at each well. Top row: Data with strong systematic errors having a bowl-shaped relationship to well position. Bottom row: Data with strong systematic errors having a linear relationship to column number.

outer-most wells (border layout) and distributing the samples following patterns that are easy to design and to pipette manually [18,19]. Indeed many researchers still use border layouts as they help reduce human pipetting errors, allow for straight-forward visualisation of results by humans, for example in the form of heat maps [12], and can be easily designed using pen and paper [20]. Yet border layouts can only be used to effectively identify and adjust for only a few plate effects [13,14], such as linear relationships to rows or columns that affect the whole plate (Fig. 1).
For large-scale experiments with microplates having 384 or more wells, human pipetting becomes infeasible and robots for liquid han- dling are necessary. In recent years, pipetting robots have become com- mon in biomedical labs and they allow for fully flexible arrangements of controls and samples on plates, making randomised layouts more acces- sible. However, pure randomisation can still produce ineffective layouts, for example large areas of the plate might end up not having any con- trol samples, making it diÔ¨Écult or even impossible to detect and correct errors in those areas [16,21,22]. Further, replicates placed in adjacent wells are then likely to be affected by the same plate effects. Not only is it a problem that they will be similarly biased, but it has also been shown that clusters of similar samples, including similar doses of the same compound as well as technical replicates, can affect the results of adjacent wells [12]. Consequently, plate designs that distribute both controls and samples in an effective way are needed in order to reduce unwanted bias, as well as to aid to detect and correct plate effects. We refer to such designs as eÔ¨Äective layouts. Figure 1 (top row) displays examples of microplates with two strong systematic plate effects (bowl- shaped and linear gradient) and examples of how controls can be located using border, random and effective layouts.
Several plate layout editors are available, such as Brunn [23],
FlowJo [24], Labfolder [25], PlateDesigner [26], and PlateEditor [27]. While some are able to generate randomised layouts, none of them have capabilities to generate effective layouts. There is, of course, the possi- bility of generating several random layouts and then evaluate them in order to select the best one [28], but that does not guarantee that effec- tive plate layouts have been selected, regardless of how many layouts are generated.
In this manuscript we introduce an artificial-intelligence based model for designing effective microplate layouts that can easily be adapted for different experimental settings, and evaluate it for dose- response and screening applications. In order to simplify its usage, we developed a suite of tools (PLAID), including a web-app for easily de- signing effective microplate layouts, together with Python notebooks for simulating different experimental designs and allow for planning and designing effective experiments.
EÔ¨Äective microplate layouts

Below are listed properties that, in many cases, are relevant to con- struct effective plate layouts. The list is not meant to be exhaustive, and should be adapted for specific applications and experimental settings.
Distribution of control samples In order to maximise the usefulness of positive and negative control samples during normalisation, controls should be distributed evenly among the wells of the microplate. For example, we could constrain the number of controls on each microplate to be equally distributed among each of its four quadrants, that is, the difference in the number of controls between any two quadrants would be at most 1. Moreover, controls could also be evenly distributed across rows and columns, which would be particularly useful to detect and mitigate plate effects linked to row or column number. Furthermore, controls of the same type should ideally not be placed on adjacent wells. Whenever feasible, we would also want controls of any kind not to be placed in adjacent wells.
Distribution of samples It has been shown that a well with a strong effect can affect the measured intensity of its neighbour wells [11], and in particular, due to grouped similar samples [12]. With the goal of mit- igating such grouping eÔ¨Äects we can, for instance, enforce that the repli- cates of a sample are placed on different rows and columns. Similarly, for specific kinds of experiment, such as a dose-response experiment [29], we could enforce that for each compound, the difference in the num- ber of individual doses between any two rows, any two columns, or any four quadrant is at most 1. Spreading samples with different doses this way makes the design resilient towards errors that affect an entire row or column (such as a pipetting error); enough of the other doses will remain for suÔ¨Écient quality for e.g. regression.
Edge eÔ¨Äects Edge or border effects are discrepancies between the cen- tre and the outer wells of a microplate primarily caused by evaporation during incubation, and can greatly affect the results obtained from an experiment [30]. A common method to mitigate edge effects is to avoid having samples in the outermost rows and columns, and instead fill them with medium or buffer [31].
Empty wells If not all wells will be used, the locations of the empty wells could be constrained in a manner similar to that of control samples so they are distributed across the plate. This way, empty wells can help avoid clusters of samples and controls.
Multi-plate experiments Across all plates, controls could also be bal- anced between plate halves or quadrants. Moreover, we could balance the controls per row or column across all plates, that is, the difference between the number of controls in any two rows or columns across all plates is at most 1. Given enough control samples, this can help en- sure that potential plate effects linked to any row or column will be



detected, especially when the errors have been introduced consistently in all plates, for example by a malfunctioning dispensing equipment. The same constraints could also be applied to sample replicates across plates.

EÔ¨Äective layouts with constraint programming

Above we introduced desired properties of effective plate layouts as a set of constraints. One option to satisfy these constraints would be to randomly generate microplate layouts until one that fits the criteria is found. While this in itself constitutes a non-trivial task, finding such layout could take an unreasonably long time, and if no layout fulfilling the criteria exists, this program would never finish. A more eÔ¨Écient and natural solution is to frame our characterisation of effective microplate layouts as a constraint satisfaction problem (CSP): we view each well of each plate as a variable whose value represents its content and desir- able properties of a layout as constraints. Constraint programming (CP) is a subarea of artificial intelligence that offers a flexible framework for solving constraint satisfaction problems that has seen large adoption in various fields (see Methods section). The general idea behind CP is that a CSP can be modelled as a conjunction of high-level constraints on variables ranging over initial domains, and then said model is given to a general-purpose constraint solver which performs a combination of intelligent reasoning and systematic search in order to find constraint- satisfying domain values for the variables. In this project we implement a constraint model that generates effective plate layouts for two differ- ent applications: dose-response and screening experiments.

Effective layouts lead to more accurate results in dose-response experiments

Dose-response experiments attempt to evaluate the effect of a sub- stance in a specific assay at increasing concentrations [29]. The effect can, in many cases, be estimated by fitting a sigmoid curve to the data
inhibitory concentration (IC50), or the half maximal effective concen- points, and is frequently summarised by determining the half maximal tration (EC50). In order to evaluate the impact of different types of mi-
croplate layouts in dose-response experiments, we simulated a total of 43,200 microplates for dose response experiments with border layouts, random layouts, and effective layouts generated using constraint pro- gramming and the constraints defined in Supplementary Listing 1. The experiments consisted of 20 compounds of varying potency in 6, 8, and 12 doses, and for 1, 2, and 3 replicates. Plate effects added had a rela- tionship to column number or were bowl-shaped, both in medium and high strength. The data was normalised using linear regression in the case of border layouts, and LOESS regression for effective and random layouts, and four-parameter log-logistic (LL4) curves were fitted to the resulting data. Examples of the curves produced can be seen in Fig. 2(a) and Supplementary Fig. 1. For a complete description of the experiment, see Methods section.
Figure 2 (b) and Supplementary Fig. 12 show the mean squared er- ror (MSE) of the residuals calculated with respect to the dose-response curves used to generate the data. It is evident that, after error correction using LOESS regression and normalising to the mean of the negative con-
other types layouts (ùëù < 10‚àí4 for all pairwise comparisons, t-test). That trols, effective layouts lead to statistically significant smaller MSE than
is, the data obtained using our effective layouts is much closer to their expected values, than the data obtained when using either random and border layouts.
sidered to have low quality, for example, curves where more than 20% of It is standard practice to discard dose-response curves that are con- the variability is unexplained by the curve fit, that is, with ùëÖ2 < 0.8 [15].
In general, our effective layouts lead to a higher percentage of high- quality curves, as can be seen in Supplementary Figs. 13‚Äì15. For ex- ample, in the case of experiments with 8 doses and 3 replicates, and strong plate effects with a linear relationship to column number on the
Table 1
Mean log10 difference and standard deviation for the obtained relative IC50 /EC50 and absolute IC50 /EC50 for dose response curves with 8 doses, 1, 2, or 3 repli-
cates, 20 negative controls on 384-well plate, and strong plate effects with a linear relationship to column number on the right side of the plate.




outs have an ùëÖ2 ‚â• 0.8, while only 94% of the curves generated using right-half side of the plate, all curves generated using our effective lay- random layouts and 70% of the curves generated using border layouts have a good curve fit with ùëÖ2 ‚â• 0.8. Moreover, there is a significant
difference between the various types of layouts when calculating the absolute difference between the maximum value of the expected and obtained curves as can be seen in Fig. 2(c) and Supplementary Figs. 2‚Äì4.
Estimated relative IC50/EC50 values from the data shows a significant
difference between using an effective layout compared to using either a
cates used (ùëù < 10‚àí4 for all pairwise comparisons, t-test). In fact, we random or a border layout Fig. 2(d), regardless of the number of repli-
obtained a smaller MSE and a smaller standard deviation using 2 repli- cates and effective layouts than using 3 replicates and random layouts (Table 1). Similar results are obtained for other strengths of plate effects,
as well as when using 6 or 12 doses (see Supplementary Figs. 6 and 7).
For estimated absolute IC50/EC50 values, Fig. 2(e) shows that there is a significant difference between using an effective layout and either a
cates used (ùëù < 10‚àí4 for all pairwise comparisons, t-test). Similar results random or a border layout regardless of the number of doses and repli-
are obtained for other plate-effect strengths, and number of doses (see Supplementary Figs. 8‚Äì10). Also note that it is not always possible to es-
timate the absolute IC50/EC50. For example, in the case of experiments with 8 doses and 1 replicate, the absolute IC50/EC50 of almost 1% of the
ence of strong bowl-shaped effects. This number grows to 13.4% when curves could not be estimated when using border layouts in the pres-
the negative controls are not included as data points.

Effective layouts improve sensitivity and reduce the risk of inflated quality assessment scores in screening experiments

Screening experiments attempt to identify hits from a large number of samples for further analysis [13,14]. In order to evaluate the impact of different types of microplate layouts in screening experiments, we simu- lated 6480 384-well microplates using all combinations of: 40 layouts of each type of design, with either 8, 10, or 20 negative controls, 3 strength levels of bowl-shaped plate effects, and 6 hit percentages, namely 1%, 5%, 10%, 20%, 30%, and 40% of hits per plate. Each compound appears only once (1 replicate) and hits were randomly distributed on the plates. The results were adjusted using linear regression for border layouts, and LOESS regression for effective and random layouts. For a complete de- scription of the experiment, see Methods section. Figs. 3(a)‚Äì(c) show examples of simulated screening data after error correction and normal- isation in the presence of mild bowl-shaped plate effects. Fig. 3(f), (g), and Supplementary Figs. 21 and 22 show that, regardless of the num- ber of negative controls used and hit rate, the use of effective layouts results in higher precision (positive predictive value) and yields statis-
smaller variance (Supplementary Tables 4 and 5; ùëù < 10‚àí4 for all pair- tically significant higher PR-AUC (area under the curve) values with a
wise comparisons, t-test).
clude ùëç‚Ä≤ factor and SSMD [14], where low-quality-plate results are in- Standard quality assessment metrics for microplate experiments in-





strong plate effects with a linear relationship to column number on the right side of the plate. ‚àó indicates ùëù < 10‚àí4 , ‚àó‚àó indicates ùëù < 10‚àí12 , ‚àó‚àó‚àó indicates ùëù < 10‚àí43 . Fig. 2. Comparison between expected and obtained values for dose response curves with 8 doses, 1, 2, or 3 replicates, 20 negative controls on 384-well plate, and





Fig. 3. Screening experiments consisting of 40 microplates for each type of layout, each with 10 positive and 10 negative controls and only 1 replicate per compound. Hits are randomly distributed on each plate. (a)‚Äì(c): Simulated response data with 1% hit rate after error correction and normalisation in the presence of mild bowl-
shaped plate effects. MSE between expected and obtained (d) ùëç ‚Ä≤ factor and (e) SSMD in the presence of mild bowl-shaped plate effects. The expected values were
calculated using plates randomly filled with 50% positive controls and 50% negative controls, constituting the optimal values obtainable by these metrics. (f) and (g): PR (precision recall) curves for experiments with varying hit rates in the presence of strong bowl-shaped plate effects.



dicated by low metric scores, but where high scores are not a guarantee for high-quality results on the plate. The main reason for this is that
both ùëç ‚Ä≤ factor and SSMD only take into account positive and negatives
controls regardless of their physical location on the plate, and with a
sub-optimal layout these metrics might not accurately capture the real plate effects. In order to analyse the effect of different layouts on qual-
ity metrics, we calculated the expected values for both ùëç ‚Ä≤ factor and
SSMD using whole plates filled with 50% positive controls and 50%
negative controls, constituting the optimal quality values obtainable by these metrics. We then compared the resulting values against the same metrics being calculated using only a subset of the controls on the plate according to border, random, and effective layouts. Figure 3(d) and (e)
show that for both the ùëç ‚Ä≤ factor and SSMD, the estimates obtained us-
ing effective layouts yield a quality metric value that is closer to the
expected value when compared to random and border layouts. This dif- ference is always statistically significant as long as there is some degree of a plate effect (Supplementary Figs. 23 and 24).

The PLAID software suite

In order to make our method easily accessible, we developed PLAID (Plate Layouts using Artificial Intelligence Design), a suite of tools that can be used to design and evaluate microplate layouts under a wide range of conditions.

The PLAID reference constraint model

We implemented a constraint model comprising the constraints de- scribed here using MiniZinc [32]. Advanced users can interact with and personalise the model by adding or removing constraints, which can be ran using the MiniZinc IDE, scripts, or command line. It is also possi- ble to incorporate the model into existing workflows, for example, with the help of the MiniZinc Python package. Instructions on how to run our MiniZinc model using the command line or the MiniZinc IDE are available at https://github.com/pharmbio/plaid.

The PLAID plate design tool

In order to ease the use of the PLAID constraint model, we developed an interactive web interface available at https://plaid.pharmb.io/ that allows for specifying experimental details and generating layouts (Sup- plementary Fig. 25). The experimental design (e.g. selection of sam- ples, concentrations, etc.) can be downloaded from the web interface in a JSON format that can be later uploaded into the website in or- der to create more plate designs for the same experiment or as a base for new experiments. The produced layouts generated by the PLAID constraint model can be visualised within the web interface (Supple- mentary Figs. 26 and 27), and downloaded in CSV, and JSON file formats, as well as an image (Supplementary Fig. 28). Produced lay- outs in JSON format can be re-uploaded into the website to use the visualisation features (Supplementary Figs. 26 and 27). Examples of both experimental settings and layouts, as well as convenience meth- ods for translating layouts into specific formats to be directly used in ECHO and I.DOT compound dispensing robots, are available on GitHub at https://www.github.com/pharmbio/plaid.

The PLAID analysis and visualisation notebooks

Experiment designs can substantially vary, and no one-solution-fits- all exists. Different assays, laboratory conditions, equipment, etc, lead to different types and strengths of plate effects that affect experiments. We developed in Python a library of parametric plate effects, a library of plate normalisation and error correction functions, dose response and high throughput screening simulations, as well as visualisation function- ality. This library can be used, for example from within Python note- books, to evaluate different experimental designs, such as to explore
the effect of varying the number of controls, doses, replicates, etc, be- fore selecting the appropriate design.


Discussion

Maximising the conclusions that can be drawn from data is the key objective when planning and carrying out biomedical experiments. With microplates becoming a standard platform to realise multiple-sample experiments, designing the physical layout of experiments and carrying out adequate data processing is essential to ensure high-quality data. Further, being able to minimise the number of control samples, repli- cates, or doses per sample can have a significant impact in terms of time, costs, and number of samples evaluated in any type of experiment. Research into data normalisation methods is an active subject, which has been especially important in omics research in the life science do- main that, in many cases, can observe large variations between different labs, batches, and experimental settings. However, most normalisation techniques assume randomisation in the experimental design. We here show that randomising the physical locations of control samples can be sub-optimal, and that effective layouts generated using a constraint programming model are generally superior.
For dose-response experiments, effective layouts lead to significantly better approximations of curves when compared to random layouts, or especially the more traditional border layouts, on 384-well plates (Fig. 2(d)). In fact, all curves in our experiments using effective layouts
have an ùëÖ2 > 0.8, implying that fewer approximation curves have to
be discarded in experiments. Effective layouts also lead to significantly
smaller MSE and standard deviation (Table 1 and Fig. 2(b), (c)) when estimating relative and absolute IC50 /EC50 for dose-response curves. For screening experiments, the effect of plate layouts vary with the exper-
iment, depending on the number of control samples, the expected hit rate, and the strength of systematic errors. Our experiments demonstrate that for experiments with strong bowl-shaped errors, effective layouts have a significantly higher precision compared with random and border layouts with as low as 1% hit rates ‚Äì even when samples do not have any replicates (Fig. 3(f)). With lower systematic errors, the impact of using effective layouts is smaller but still relevant, especially for experiments having higher hit rates as shown by Mpindi et al. [13] (Supplementary Figs. 19 and 20). These results underline the value of experimental de- sign and physical placement of samples also for screening experiments.
plate quality assessment metrics such as ùëç ‚Ä≤ factor and SSMD, as the val- Effective layouts also reduce the risk of obtaining an inflated score from
ues for such metrics when calculated on effective layouts are on average closer to the expected (optimal) metric value compared to random and border layouts.
Simulating multiple scenarios allows for evaluating and comparing different experimental parameters, such as the effect of the number of replicates versus the number of concentrations per sample. This can, for example, be carried out and visualised using the provided PLAID note- books. Our results show that in common dose-response experiments, ef- fective layouts can lead to a reduction in the number of replicates while
maintaining a higher confidence in the estimated IC50 /EC50 (Fig. 2(b)
and (c)). We also observe, inline with the recommendations in Conven-
tion [33], that replicates do improve precision, but not enough to ad- dress systematic bias. In general, adding more doses had a higher impact in the estimations than adding more replicates, regardless of the layout. In particular, effective layouts generally lead to more accurate results even with fewer replicates or fewer doses. For example, we obtained
more accurate estimations of absolute IC50 /EC50 for experiments with
8 doses and 2 replicates using our effective layouts than with 8 doses
and 3 replicates using random layouts (see Fig. 2(e) and Supplemen- tary Figs. 8‚Äì10). Moreover, we also obtained more accurate estimations
of absolute EC50 /IC50 for experiments with 8 doses and 3 replicates us-
ing our effective layouts, compared to 12 doses and 3 replicates using
random layouts (see Supplementary Figs. 8‚Äì 10).



The benefits and limitations of effective microplate layouts are tightly coupled to the use and impact of methods for data normalisa- tion, that in turn are dependent on the use of, and suÔ¨Écient number of, control samples. Further, a multi-plate experiment also offers more opportunities for finding effective layouts. In our work we focused on LOESS normalisation [34], which is a widely used normalisation tech- nique that is robust towards different types of plate and experimental effects. The error model used in this work is based on the one proposed by Zhang et al. [11], but the intensity and type of plate effects observed might differ depending on factors such as the type of experiment, lab- oratory facilities, and temperature, among others. A key advantage of using a constraint model for designing layouts is that such parameters can be easily adjusted, due to the declarative nature of the model, and evaluated using the provided PLAID Python notebooks. We have put together a suite of constraints that are widely useful, but the final selec- tion of constraints is up to the scientists planning experiments and it is easy to e.g. remove constraints such as ‚Äòno samples in outer wells‚Äô if they are not desirable. From a practical perspective, such as when pipetting manually, it can be beneficial to use the same sample only on one plate. For automated liquid handling instruments, the number of plates (and hence source samples) accessible can have an impact. These scenarios are not covered in this study, but there is no hinder to also implement such constraints into a plate layout model.

Iterative experimentation

AI methods such as unsupervised and supervised learning are nowa- days widely used to analyse the results from large-scale experiments using microplates. There are also emerging approaches to sequentially plan a series of experiments to systematically improve the accuracy of AI models [35,36]. Data-centric AI is a concept that proposes to shift from the current practice of having a set of fixed data and then spend- ing much time and effort to fine-tune a machine learning model, to in- stead focus on an iterative approach to optimise the data used to train the model [37]. This methodology fundamentally builds on the propo- sition that high-quality data is better than just more data, something that for a long time has been argued in traditional experimental design guidelines [33]. Selecting the next batch of experiments is however non- trivial, and autonomous decision-making is currently an active research field with autonomous vehicles as a big driver. Active machine learn- ing is one approach to select new experiments which, combined with robotics, has the potential to automate scientific discoveries [38‚Äì41].
Fig. 4 shows how the PLAID suite supports iterative experimentation. The first step constitutes an initial decision on samples, replicates, con- trols, etc., and its definition in a declarative file format for microplate experiments (Supplementary Section 1). This experiment-definition file is then input to the PLAID plate design tool that applies the constraint model to generate effective plate layouts. The produced layouts can then be evaluated towards simulated experiments defined by different error parameters, which over time can be tailored to particular experimen- tal and laboratory setups. Based on the outcome of the simulations, the experiment design might be revised and new plate layouts can be gen- erated. When a decision is made to accept the layouts, these can be translated to custom formats that can be read by lab instruments. We provide translations for two common chemical dispensing instruments (ECHO and I.DOT), but it is straightforward to create more adaptors for other instruments. Accepting plate layouts can be done manually by humans, or autonomously using an algorithm. If the data acquisition and analysis from the physical experiments can be automated, then only the decision making regarding the next round of experiments remains. Given that autonomous decision making has been implemented in order to select the next experiment, it can be defined in the PLAID file format for microplate experiments, closing the loop for the next experiment it- eration. We speculate that such automated and iterative scientific exper- iments will be increasingly common in the future, and that PLAID, given its flexibility due to the declarative nature of constraint modelling, its
open source implementation, and associated tools for easy integration and visualisation, is a compelling model and architecture.

Conclusions

We identified properties of effective microplate layouts and used ar- tificial intelligence in the form of constraint programming to build a model that is capable of generating such layouts, and evaluated their effect on normalisation in common experiment settings involving multi- plates. We demonstrated that effective layouts are superior to random layouts for illustrative dose-response and screening experiments, gen- erating more robust results and data with lower variance and higher precision. The software suite PLAID makes the method easily available, allows for decision aid in experiment design to select e.g. number of doses and replicates, and is prepared for integration into closed-loop systems. Examples of studies where PLAID has been used include [42‚Äì 44].

Methods

Constraint programming

Constraint programming (CP) [45] is a form of artificial intelligence used for modelling and solving combinatorial problems, which is cur- rently successfully used in many real-world application areas such as scheduling [46‚Äì48], decision support [49], and packing [50]. Solving a combinatorial problem involves finding an assignment for a discrete, finite set of objects (decision variables) that satisfies a given set of con- ditions (constraints). The general idea behind constraint programming is that the user specifies the constraints that should hold among deci- sion variables and a general-purpose constraint solver is used to find a solution. That is, the user specifies the problem without having to spec- ify how to find a solution. For example, consider our microplate layout
each well on each plate, is a decision variable. Each decision variable ùëâùëñ design problem. Each unknown in the problem, namely the content of can take values in a given domain, denoted dom(ùëâùëñ ). In our microplate
layout design problem, the domain of each decision variable is the set of
possible substances to place on a well, i.e. a given compound at a certain concentration, a positive control, etc. Moreover, problem solutions are distinguished from non-solutions by constraints, which are the limita- tions to the values that the decision variables can take simultaneously. In this context, a constraint is, for example, a limitation that controls of the same type cannot be placed in adjacent wells.
In order to find a solution for a given problem, a constraint solver first removes infeasible values from the domains of the variables by applying inference methods, which is known in the literature as prop- agation. Then, the search for a feasible solution is performed in a branch-and-bound fashion: the left-most branch corresponds to a sub-
problem that is created by assigning a value ùë£ ‚àà dom(ùëâùëñ ) to a variable
ùëâùëñ . If the sub-problem turns out to be infeasible, a backtracking mecha-
dom(ùëâùëñ  )      ‚â†      ùë£      is      added. nism is used to try other sub-problems where the additional constraint
In general, constraint satisfaction problems are specified by data- independent models written in a modelling language such as AMPL [51], Essence [52], MiniZinc [32], or OPL [53].

Constraint model implementation

We implemented a constraint model representing the microplate lay- out design problem in MiniZinc [32] and used Gecode [54] as the back- end constraint solver. One of the many advantages of using MiniZinc is that only very minor modifications, if any, would be needed to use an- other constraint solver. Examples of constraints included in our model together with their representation in MiniZinc can be seen in Fig. 5. For a full list of all constraints defined in this study, see Supplementary Listing 1.




Fig. 4. Overview of the PLAID ecosystem. Experiment design (1) comprises the selection of samples, replicates, concentrations, etc, and can be defined in a config- uration file or via the PLAID Plate Design web interface, and then the PLAID constraint model is called to generate the resulting layouts (2). In order to evaluate the design, simulation parameters such as type and strength of expected plate effects need to be defined (3) and then a simulated experiment using the layouts can be carried out in the PLAID Analysis and Visualisation Notebooks (4). Different scenarios can be compared, such as different numbers of concentrations and replicates, and designs may then be revised accordingly. When an acceptable design has been generated, it can be used to drive liquid handling instruments, such as automated pipette robots (6). After the experiment is performed and analysed, a decision can be made on subsequent experiments e.g. confirm findings, re-run failed samples, evaluate more concentrations, etc. (7). Implementing automated decision making that defines the next experiment in the PLAID configuration file format enables autonomous sequential experimentation.



Fig. 5. Examples of constraints in MiniZinc syntax.



On top of including all the desirable properties of effective mi- croplate layouts, we have chosen to include other constraints that are needed for practical matters. For example, we enforce that for each sam- ple, all concentration levels of a given replica must appear on the same plate. Technical replicates of a sample can be chosen to appear on the same plate, on a different plate, or a mixture of both. We have also included the dimensions of the microplate as parameters in terms of number of rows and columns, allowing the use of any kind of plate size. Finally, it is also possible to specify how many rows and columns should be left empty on the border of every microplate in order to mitigate edge effects.
Dose-response experiments

We simulated multiple scenarios for dose-response experiments ac- cording to Sebaugh [15]. The following scenarios were considered: all combinations of compounds having: (i) a sigmoid curve with slopes of 0.5, 1, 1.5, and 2; (ii) 6 concentrations with a dilution factor of 18, 8 concentrations with a dilution factor of 8, and 16 concentrations with a dilution factor of 4; and (iii) 1, 2, and 3 replicates per compound. Without loss of generality, for every compound the bottom of the curve
was set to 0%, and the top of the curve was set to 100%. Fixing the
top and bottom of the curve at these values makes the assumption that



if a suÔ¨Écient number of concentrations were to be used, a complete doseresponse curve would be generated. To generate the sigmoid curves corresponding to each compound the only parameter remaining to be
specified is the EC50 /IC50 . We generated curves with EC50 /IC50 values
ranging from 1 to 96 to simulate compounds having all kinds of potency.
The highest concentration was arbitrarily set to 100 ŒºM. For each test concentration, the replicates were generated by adding a random value
within ¬±1% to the value sampled from the curve in order to represent a
very small error in measurement between wells having the same com-
pound in the same concentration.
Border layouts were generated by distributing 20 negative controls in columns 2 and 23, and placing all other samples horizontally from top to bottom. Random layouts were generated using the Python random pack- age. Effective microplate layouts were generated using our constraint programming model implemented in MiniZinc [32]. The Python func- tions and MiniZinc model used to generate the layouts as well as the re- sulting layouts are available at https://github.com/pharmbio/plaid. We then applied the same plate effect to every microplate having either: (i) a bowl-shape relationship to well position, or (ii) a linear relationship to column number on the right-hand side of the plate. Strong plate effects are designed according to the examples in Zhang [11], while moderate plate effects are designed to be half way between no-effect and a strong plate effect. After applying plate effects, we adjusted the data using lin- ear regression in the case of border layouts, and LOESS regression as implemented in Cappellari et al. [55] for the rest, and normalised the data as a percentage of the mean of the negative controls. Finally, we
estimated the relative and absolute EC50 /IC50 using the curve_fit
function of the scipy Python library, which uses the Trust Region Re-
solute value of the difference between the log10 of the true (expected) flective algorithm. For each dose-response curve, we calculated the ab- and the estimated EC50 /IC50 values. Moreover, for every measurement,
we calculated the difference with respect to both the expected (true) value as well as with respect to the estimated curves.

Screening experiments

We simulated screening experiments consisting of 40 384-well mi- croplates, each of which contained either (i) 8 positive controls and 8 negative controls, (ii) 10 positive controls and 10 negative controls, or (iii) 10 positive controls and 20 negative controls. The remaining wells contained random samples with hit-rates of 1%, 5%, 10%, 20%, 33%, and 40%. We then applied various strengths of bowl-shaped ef- fects to every microplate. Strong plate effects are designed according to the examples in Zhang [11], while moderate plate effects are de- signed to be half way between no-effect and a strong plate effect. For error correction and normalisation we used linear regression in the case of border layouts, and LOESS regression (as implemented in Cappellari et al. [55]) in the case of random and effective layouts, and scaled the data as a percentage of the average of the negative controls. Both linear and LOESS regression are performed based on negative controls only, without assuming a low hit-rate. We used the error-corrected data to
calculate the ùëç ‚Ä≤ factor and the SSMD of each microplate. Finally, we
used the sklearn Python library to calculate the resulting precision-
recall (PR) and receiver operating characteristic (ROC) curves, as well as their corresponding area under the curve (AUC) values.

Data availability

The Python libraries and notebooks developed for the analysis, the experimental results, together with the specific microplate layouts tested are available at https://github.com/pharmbio/plaid.

Code availability

All source code for PLAID, including our constraint model, libraries and Python notebooks for simulating, evaluating and visualising ex-
periments, as well as scripts for layout translations are open source and publicly available at https://github.com/pharmbio/plaid. A man- aged service for public consumption of the web interface is available at https://plaid.pharmb.io/, and its Docker image is available at https:
//github.com/pharmbio/plaid-gui.

Contributions

MAFR and OS: Conceptualisation; MAFR: Methodology and soft- ware implementation, validation; MAFR, OS, JCP: Formal analysis, writing.

Declaration of Competing Interest

The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.

Acknowledgements

This project received funding from the Swedish Research Council (Grants 2020-03731 and 2020-01865), FORMAS (Grant 2018-00924),
the Swedish Foundation for Strategic Research (Grant BD15-0008SB16- 0046), and the Swedish strategic research programme eSSENCE.
We thank Wesley Schaal for constructive feedback on the manuscript, Markus Lucero and Travis Persson for contributions to the PLAID web interface, Polina Georgiev for constructive feedback on mi- croplate layouts, Ebba Bergman for constructive feedback on figures, and Gustav Bj√∂rdal for constructive feedback on the constraint model.

Supplementary material

Supplementary material associated with this article can be found, in the online version, at doi:10.1016/j.ailsci.2023.100073.
References

Vamathevan J, Clark D, Czodrowski P, Dunham I, Ferran E, Lee G, et al. Applica- tions of machine learning in drug discovery and development. Nat Rev Drug Discov 2019;18(6):463‚Äì77.
Alaa AM, Gurdasani D, Harris AL, Rashbass J, van der Schaar M. Machine learn- ing to guide the use of adjuvant therapies for breast cancer. Nat Mach Intell 2021;3(8):716‚Äì26.
Fischbacher B, Hedaya S, Hartley BJ, Wang Z, Lallos G, Hutson D, Zimmer M, Bram- mer J, Paull D. Modular deep learning enables automated identification of mono- clonal cell lines. Nat Mach Intell 2021;3(7):632‚Äì40.
Lu J, Bender B, Jin JY, Guan Y. Deep learning prediction of patient response time course from early data via neural-pharmacokinetic/pharmacodynamic modelling. Nat Mach Intell 2021;3(8):696‚Äì704.
Mattenet A, Davidson I, Nijssen S, Schaus P. Generic constraint-based block modeling using constraint programming. J Artif Intell Res 2021;70:597‚Äì630.
Franchina L, Sergiani F. High quality dataset for machine learning in the business intelligence domain. In: Bi Y, Bhatia R, Kapoor S, editors. Intelligent systems and applications. Advances in intelligent systems and computing. Cham: Springer Inter- national Publishing; 2020. p. 391‚Äì401. ISBN 978-3-030-29516-5.
Lu Y, Young S. A survey of public datasets for computer vision tasks in precision agriculture. Comput Electron Agric 2020;178:105760.
Williams CJ, Richardson DC, Richardson JS. The importance of residue-level filter- ing and the Top2018 best-parts dataset of high-quality protein residues. Protein Sci 2021;31:290‚Äì300.
Alexoviƒç M, Urban PL, Tabani H, Sabo J. Recent advances in robotic protein sample preparation for clinical analysis and other biomedical applications. Clin Chim Acta 2020;507:104‚Äì16.
Zhang J-H, Chung TDY, Oldenburg KR. A simple statistical parameter for use in evaluation and validation of high throughput screening assays. J Biomol Screen 1999;4(2):67‚Äì73.
Zhang XD. Experimental designs. In: Optimal high-throughput screening: practical experimental design and data analysis for genome-scale RNAi research. Cambridge: Cambridge University Press; 2011. p. 13‚Äì26.
Birmingham A, Selfors LM, Forster T, Wrobel D, Kennedy CJ, Shanks E, et al. Statisti- cal methods for analysis of high-throughput RNA interference screens. Nat Methods 2009;6(8):569‚Äì75.
Mpindi J-P, Swapnil P, Dmitrii B, Jani S, Saeed K, Wennerberg K, Aittokallio T, √ñstling P, Kallioniemi O. Impact of normalization methods on high-throughput screening data with high hit rates and drug testing with dose‚Äìresponse data. Bioin- formatics 2015;31(23):3815‚Äì21.



Zhang XD. Novel analytic criteria and effective plate designs for quality control in genome-scale RNAi screens. J Biomol Screen 2008;13(5):363‚Äì77.
Sebaugh  JL.  Guidelines  for  accurate  EC50 /IC50  estimation.  Pharm  Stat
2011;10(2):128‚Äì34.
Roselle C, Verch T, Shank-Retzlaff M. Mitigation of microtiter plate po- sitioning effects using a block randomization scheme. Anal Bioanal Chem 2016;408(15):3969‚Äì79.
Caicedo JC, Cooper S, Heigwer F, Warchal S, Qiu P, Molnar C, et al. Data-analysis strategies for image-based cell profiling. Nat Methods 2017;14(9):849‚Äì63.
Brower SL, Fensterer JE, Bush JE. The ChemoFx¬Æ assay: an ex vivo chemosensitivity and resistance assay for predicting patient response to cancer chemotherapy. In: Mor G, Alvero AB, editors. Apoptosis and cancer: methods and protocols. Methods in molecular biologyTM. Totowa, NJ: Humana Press; 2008. p. 57‚Äì78.
Williams SP, Gould CM, Nowell CJ, Karnezis T, Achen MG, Simpson KJ, et al. Sys- tematic high-content genome-wide RNAi screens of endothelial cell migration and morphology. Sci Data 2017;4(1):170009.
Connelly B.. Plotting Microtiter Plate Maps. https://bconnelly.net/posts/ plotting-microtiter-plate-maps/; 2014.
Borges H, Hesse A-M, Kraut A, Cout√© Y, Brun V, Burger T. Well plate maker: a user-friendly randomized block design application to limit batch effects in largescale biomedical studies. Bioinformatics (Oxford, England) 2021:btab065.
Burger B, Vaudel M, Barsnes H. Importance of block randomization when designing proteomics experiments. J Proteome Res 2021;20(1):122‚Äì8.
Alvarsson J, Andersson C, Spjuth O, Larsson R, Wikberg JE. Brunn: an open source laboratory information system for microplates with a graphical plate layout design process. BMC Bioinform 2011;12(1):179.
FlowJo, LLC. https://www.flowjo.com/.
Well Plate Templates. https://www.labfolder.com/well-plate-templates/.
Suprun M, Su√°rez-Fari√±as M. PlateDesigner: a web-based application for the design of microplate experiments. Bioinformatics (Oxford, England) 2019;35(9):1605‚Äì7.
Delorme V, Woo M, Falc√£o VCdA, Wood C. PlateEditor: a web-based application for the management of multi-well plate layouts and associated data. PLoS One 2021;16(5):e0252488.
Schiff L., Migliori B., Chen Y., Carter D., Bonilla C., Hall J., Fan M., Tam E., Ahadi S., Fischbacher B., Geraschenko A., Hunter C.J., Venugopalan S., DesMarteau S., Narayanaswamy A., Jacob S., Armstrong Z., Ferrarotto P., Williams B., Buckley- Herd G., Hazard J., Goldberg J., Coram M., Otto R., Baltz E.A., Andres-Martin L., Pritchard O., Duren-Lubanski A., Reggio K., NYSCF Global Stem Cell Array Team, Bauer L., Aiyar R.S., Schwarzbach E., Paull D., Noggle S.A., Monsma F.J., Berndl M., Yang S.J., Johannesson B.. Deep learning and automated cell paint- ing reveal Parkinson‚Äôs disease-specific signatures in primary patient fibroblasts. bioRxiv2020;:2020.11.13.380576.
Vandenberg LN. Chapter 7‚ÄîLow dose effects and nonmonotonic dose responses for endocrine disruptors. In: Darbre PD, editor. Endocrine disruption and human health. Academic Press; 2022. p. 141‚Äì63.
Carralot J-P, Ogier A, Boese A, Genovesio A, Brodin P, Sommer P, Dorval T. A novel specific edge effect correction method for RNA interference screenings. Bioinformat- ics 2012;28(2):261‚Äì8.
Lundholt BK, Scudder KM, Pagliaro L. A simple technique for reducing edge effect in cell-based assays. J Biomol Screen 2003;8(5):566‚Äì70.
Nethercote N, Stuckey PJ, Becket R, Brand S, Duck GJ, Tack G. MiniZinc: towards a standard CP modelling language. In: Bessi√®re C, editor. Principles and practice of constraint programming ‚Äì CP 2007. Lecture notes in computer science. Berlin, Heidelberg: Springer; 2007. p. 529‚Äì43. ISBN 978-3-540-74970-7.
U.S. Pharmacopeial Convention. USP_1032.pdf.
Cleveland W, Grosse E, Shyu W. Local regression models. In: Chambers JM, Hastie TJ, editors. Statistical models in S. Pacific Grove, CA: Wadsworth & Brooks/Cole; 1992. p. 608.
Eyke NS, Green WH, Jensen KF. Iterative experimental design based on active ma- chine learning reduces the experimental burden associated with reaction screening. React Chem Eng 2020;5(10):1963‚Äì72.
Ekins S, Puhl AC, Zorn KM, Lane TR, Russo DP, Klein JJ, et al. Exploiting machine learning for end-to-end drug discovery and development. Nat Mater 2019;18(5):435‚Äì41.
Miranda L.J.. Towards data-centric machine learning: a short review. 2021; ljvmiranda921githubio, https://ljvmiranda921.github.io/notebook/2021/07/30/ data-centric-ml/.
Schneider G. Automating drug discovery. Nat Rev Drug Discov 2018;17(2):97‚Äì113. doi:10.1038/nrd.2017.232.
King RD, Rowland J, Oliver SG, Young M, Aubrey W, Byrne E, Liakata M, Markham M, Pir P, Soldatova LN, Sparkes A, Whelan KE, Clare A. The automation of science. Science 2009;324(5923):85‚Äì9.
Saikin SK, Kreisbeck C, Sheberla D, Becker JS, Aspuru-Guzik A. Closed-loop discov- ery platform integration is needed for artificial intelligence to make an impact in drug discovery. Expert Opin Drug Discov 2019;14(1):1‚Äì4.
Reker D. Practical considerations for active machine learning in drug discovery. Drug Discov Today 2019;32:73‚Äì9.
Gupta A., Harrison P.J., Wieslander H., Rietdijk J., Puigvert J.C., Georgiev P., W√§hlby C., Spjuth O., Sintorn I.-M.. Is brightfield all you need for mechanism of action prediction?2022.
Rietdijk J, Aggarwal T, Georgieva P, Lapins M, Carreras-Puigvert J, Spjuth O. Mor- phological profiling of environmental chemicals enables eÔ¨Écient and untargeted exploration of combination effects. Sci Total Environ 2022;832:155058.
Tian G., Harrison P.J., Sreenivasan A.P., Puigvert J.C., Spjuth O.. Combining molec- ular and cell painting image data for mechanism of action prediction. 2022.
Russell S, Norvig P. Artificial intelligence: a modern approach. 4th global ed. Pear- son; 2021.
Arafailova E, Beldiceanu N, Douence R, Flener P, Francisco Rodr√≠guez MA, Pear- son J, Simonis H. Time-series constraints: improvements and application in CP and MIP contexts. In: Quimper C-G, editor. Integration of AI and OR techniques in con- straint programming. Lecture notes in computer science. Cham: Springer Interna- tional Publishing; 2016. p. 18‚Äì34. ISBN 978-3-319-33954-2.
Frimodig S, Schulte C. Models for radiation therapy patient scheduling. In: Schiex T, de Givry S, editors. Principles and practice of constraint programming. Lecture notes in computer science. Cham: Springer International Publishing; 2019. p. 421‚Äì37. ISBN 978-3-030-30048-7.
Geibinger T, Mischek F, Musliu N. Investigating constraint programming for real world industrial test laboratory scheduling. In: Rousseau L-M, Stergiou K, editors. In- tegration of constraint programming, artificial intelligence, and operations research. Lecture notes in computer science. Cham: Springer International Publishing; 2019.
p. 304‚Äì19. ISBN 978-3-030-19212-9.
Bhatnagar S, Kumar A, Lau HC. Decision making for improving maritime traÔ¨Éc safety using constraint programming. In: Proceedings of the twenty-eighth interna- tional joint conference on artificial intelligence 2019: Macau, August 10‚Äì16; 2019.
p. 5794‚Äì800.
Leao AAS, Toledo FMB, Oliveira JF, Carravilla MA, Alvarez-Vald√©s R. Irreg- ular packing problems: a review of mathematical models. Eur J Oper Res 2020;282(3):803‚Äì22.
Fourer R, Gay DM, Kernighan BW. A modeling language for mathematical program- ming. Manag Sci 1990;36(5):519‚Äì54.
Frisch AM, Harvey W, Jefferson C, Mart√≠nez-Hern√°ndez B, Miguel I. Essence: a constraint language for specifying combinatorial problems. Constraints 2008;13(3):268‚Äì306.
Van Hentenryck P, Michel L, Perron L, R√©gin J-C. Constraint programming in OPL. In: International conference on principles and practice of declarative programming. Springer; 1999. p. 98‚Äì116.
Gecode Team. Gecode: generic constraint development environment. 2019. Avail- able from http://www.gecode.org.
Cappellari M, McDermid RM, Alatalo K, Blitz L, Bois M, Bournaud F, Bureau M, Crocker AF, Davies RL, Davis TA, de Zeeuw PT, Duc P-A, Emsellem E, Khochfar S, Krajnoviƒá D, Kuntschner H, Morganti R, Naab T, Oosterloo T, Sarzi M, Scott N,
mass‚Äìùúé distributions of early-type galaxies: bulge fraction drives kinematics, mass‚Äì Serra P, Weijmans A-M, Young LM. The ATLAS3D project ‚Äì XX. Mass‚Äìsize and
to-light ratio, molecular gas fraction and stellar initial mass function. Mon Not R Astron Soc 2013;432(3):1862‚Äì93.
