Remark 3.6 The only rule that creates a substitution is the Beta rule. The rule Lam captures the situation where the substitution has to leave the function scope of the abstraction in which the substitution has been originally created and enters a sub-function scope. The controlled copying and erasing (Cpy1 and Ers1) of substitutions allows the identification of paths that start from contraction nodes

Example 3.7 Here is the graphical representation of the left and right hand sides of the Beta rule. There are two cut elimination steps involved in order to achieve this rewrite: 1) a closed dereliction cut and 2) a multiplicative cut.

find the path that survives the process of reduction. In other words, there exist erased sub-paths that are not part of the normal form of a program. However, when studying strategies for the GOIm, it is of interest to identify paths that lead to discarded arguments. Since substitutions are discarded in a controlled way, we keep these paths in the set B.

We usually add labels to the paths once nodes have been removed from the graph. For this example only, we slightly abuse this intuition and add a trailing Of Course label to mark the points of contact. Notice that the root of the box in G(N ') has survived the reduction and is subject to further exponential cut elimination steps until the box gets involved with a dereliction cut.

It is important to note that our calculus can only capture exponential informa- tion for the call-by-value translation. If we try to use the call-by-name translation of Linear Logic instead, then our calculus would run into problems. This is because the call-by-name translation places the exponential box structure in argument positions. As pointed out earlier, the multiplicative information in the labels is not affected by this change but the exponential markers will have to reflect the new situation. An extension of the labels to the call-by-name translation and the comparison of the structures obtained from both approaches is left for future work.

