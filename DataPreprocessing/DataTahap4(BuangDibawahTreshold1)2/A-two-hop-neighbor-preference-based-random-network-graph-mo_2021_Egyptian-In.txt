Abstract The Erdos-Renyi (ER) random network model generates graphs under the assumption that there could exist a link u-v between two nodes u and v irrespective of whether or not the two nodes had a common neighbor before the establishment of the link. As a result, random net- work graphs generated under the ER model are characteristic of having a low clustering coefficient (a measure of the probability for a link to exist between any two neighbors of a node) and low vari- ation in the node degrees, and hence could not match closely to graphs abstracting real-world net- works. In this paper, we propose a random network graph model that gives preference to closing the triangle involving three nodes u, w and v with existing links u-w and w-v (i.e., node v is strictly a two- hop neighbor of node u). Accordingly, when node u is looking for a new link to be setup with some other node x, we consider x along with the two-hop neighbors of u and choose one among these nodes with a probability plink as the new neighbor of node u. The proposed Two-Hop Neighbor Preference (THNP)-based model generates random graphs whose clustering coefficient decreases with increase in node degree: matching closely to several real-world network graphs that are com- monly studied for complex network analysis.

and citation networks), there has been a significant interest to analyze these complex networks from a graph theoretic point of view. A crucial step in analyzing a complex real-world net- work is to extract the degree distribution of the vertices in the network and compare it with well-known distributions (e.g., Poisson, Gaussian, Exponential, Power-law, etc.) of networks

Unlike the ER-model based random network graphs, the THNP-model based random network graphs exhibit an inverse relationship for the clustering coefficient vs. node degree as well as a larger spectral radius ratio for node degree (i.e., larger variation in node degree) [6]. We evaluate the relative proxim- ity (similarity) of the graphs generated according to the THNP model and the ER model with that of the real-world network graphs by computing the rooted sum of the mean square dif- ference values for the average node degree, average clustering coefficient, average path length and the spectral radius ratio for node degree. We observe the THNP-model based random network graphs to be relatively more similar to the real-world network graphs considered, compared to that of the ER-model based random network graphs.

The rest of the paper is organized as follows: Section 2 dis- cusses related work on theoretical models for generating net- works with clustering coefficient values and distribution similar to those observed for real-world networks. Section 3 presents the proposed THNP model for generating random network graphs with a larger clustering coefficient and higher variation in node degree. Section 4 reviews the ER-model, pre- sents the real-world network graphs considered in this paper and illustrates a comparative analysis of the ER-model and the THNP-model with that of the real-world network graphs with respect to the analytic metrics mentioned above. Section 5

(s) that differentiate our proposed THNP model from these existing models. In [14], the authors propose a model for scale-free random graphs (the network size increases with the addition of one node at a time) in which each new vertex is added to m of the existing nodes with a probability propor- tional to the degree of the existing nodes plus a strictly positive constant (the latter is associated with introducing randomness in node selection). It was observed that the expected clustering coefficient of the scale-free random network generated with the above approach is asymptotically proportional to logn/n. The THNP model differs from the above model because the candi- date list of nodes available for setting up a link for a node u is the two-hop neighbors of u and a randomly chosen node v that is originally considered for the link. Among the two-hop neigh- bors, the nodes with a larger number of common neighbors are given relatively higher preference. Not all the nodes in the net- work are considered for setting up a new link for node u. This is similar to what happens in a social network when a node/ user wishes to set up a new link; the user is more likely to search for friends of his/her friends rather than searching out for some random user in the network. Moreover, if we apply the above logn/n formulation to the real-world network graphs considered in this paper, the expected clustering coefficients turn out to be very small values (like 0.0076 for the 332- node US Airports Network and 0.045 for the 34-node Karate Club Network) and are independent of the node degree.

In [15], the authors propose a model for creating random intersection graph as follows: Let W be the set of all n vertices; let D1, D2,.. ., Dn be randomly created subsets of the n vertices; two vertices u and v are considered to be linked in the graph if they are in at least s of the n subsets of vertices, where s P 1 is a model parameter. It is observed in [16] that the random inter- section graphs exhibit a linear inverse relationship between clus- tering coefficient and node degree (i.e., the clustering coefficient

In [17], the authors proposed a model to generate random graphs with degree distribution that follows power-law [4]. The idea is as follows: (i) Determine the degree distribution of the vertices in a real-world network. (ii) Make a list of the vertices by generating kv copies of each vertex v, where kv is the degree of vertex v. (iii) Set up two columns of the list of ver- tices by doing two different random shuffles of the list of ver- tices created in step (ii). (iv) Connect the vertex pairs in each row of the two columns. The problem with the above approach is that for real-world networks with several vertices, it could

lead to graphs with self-loops and redundant edges. The authors in [17] propose certain fixes to overcome these weak- nesses. Nevertheless, the clustering coefficient of the vertices in such power-law based random networks has been observed to be simply dependent on the power-law exponent and the number of nodes, but not on the node degree. Thus, the above model for generating power-law based random networks does not capture the inverse relationship between clustering coeffi- cient and node degree, as observed in several real-world net- works, and well captured by the proposed THNP model (see Section 4).

In [19], the authors propose several strategies (e.g., based on the ratio of the triangle degree and the sum of the triangle degrees, ratio of the single-edge degree and the sum of the single-edge degrees, etc.) for selecting vertices for triangle and single-edge formation. A key weakness behind the above approaches is that it would take a significant amount of time to compute the number of triangles and the number of single-edges each node is part of. Also, the convergence time for completing the formation of all triangles will be high (as any three nodes chosen need not have a triangle connecting them). On the other hand, the advantage with our proposed THNP algorithm is that it only needs the estimated value of the probability of a link (plink) between any two nodes in the

Let there be a total of N nodes among which we need to gen- erate a random network with a larger clustering coefficient and higher variation in node degree. Let plink be the probability for a link between any node pair considered. Initially, all nodes are considered to be isolated in the network. We consider a set S of

domly pick one among the two vertices (u or x) as the node for which we attempt to set up a link during that iteration. For the sake of discussion, we assume (without loss of generality that between the two vertices u or x) that vertex u gets selected as the vertex for which we attempt to set up a link. Let C be the list of candidate vertices with which we could set up a link for u. We add vertex x as the first vertex to the list C. We then consider all the two-hop neighbors v of u (i.e., connected through a chain u-w-v where w is the direct neighbor of u) that are not directly connected to vertex u and add them to the list

In this section, we discuss the simulation results observed when the real-world networks are modeled based on the proposed THNP model vis-a-vis the well-known Erdos-Renyi (ER) model for random networks. The common practice in the liter- ature is that if a certain property (like the smaller path length) observed for a real-world network or a theoretical network generated from models (like the THNP model) coincides with that observed for a random network generated from the ER model, then the property is considered to have been observed just by chance in the real-world network or the theoretical net- work [21,22]. On the other hand, if a certain property (like the inverse relationship between clustering coefficient and node degree) observed for a real-world or theoretical network does not coincide with that observed for an ER-random network, then it confirms the existence of an underlying mechanism (like the two-hop neighbor preference for the THNP model) that could be attributed for the observation of such a property [21,22]. Thus, the ER model is often used in the literature as a theoretical benchmark model for attributing the observation of a certain property to random link formation or preferential link formation. The simulation results presented in this section illustrate that (unlike the ER model) the THNP model exhibits an inverse relationship between clustering coefficient and node degree (attributed to the underlying two-hop neighbor prefer- ence mechanism for link formation) as is also observed in sev- eral real-world networks.

The clustering coefficient of a node is the probability that any two neighbors of a node are connected [3]. Quantitatively, the clustering coefficient of a node is calculated as the ratio of the actual number of links connecting the neighbors of the node divided by the maximum number of possible links between the neighbors of the node. For a node with degree K (i.e., K neighbors), the maximum number of possible links between

We simulate the generation of a random graph under the ER model as follows: The input parameters are the number of nodes N and probability of link between any two nodes, plink. We accumulate a set S of all possible pairs of nodes. We pro- ceed in iterations. In each iteration, we randomly remove a pair (u, v) from the set S and generate a random number rand- Num in the range [0.. .1]. If randNum 6 plink, we set up the link u-v; otherwise not.

The degree of a node (i.e., the number of neighbors for a node) is the number of links incident on the node. The average degree of a network (used in formula (1)) is the average of the degree values of all the nodes in the network. The degree of a node

US Politics Books Network (PN): This is a network of 105 books related to US Politics sold in Amazon.com. Each book represents a node and there is an edge between two nodes u and v if someone who bought a book corresponding to node u also bought the book cor- responding to node v and vice versa [9].

C. Elegans Neural Network (EN): This is a network of 297 neurons in the hermaphrodite Caenorhabditis Ele- gans [9]. Each neuron is a node and there is an edge between two nodes if the corresponding neurons interact with each other (in the form of chemical synapses, gap junctions and neuromuscular junctions).

In this section, we evaluate the proximity (similarity) of the theoretically generated random graphs under the THNP and ER models with that of the corresponding real-world net- works. We use the estimated probability for a link between any two nodes (estimated as discussed in Section 3.3) and the number of nodes for the real-world networks to generate the corresponding random networks under both the THNP and ER models. For each real-world network (number of nodes and estimated plink values as parameters), we generated 100 instances of the random networks (under each of the two models: THNP and ER) and averaged the values for the ana- lytic metrics. For each real-world network and the correspond- ing two random networks, we evaluated the analytic metrics (degree, clustering coefficient, path length and spectral radius ratio for node degree) with respect to their average values and distribution, wherever applicable.

We observe the degree distribution and path length distri- bution of the THNP model-based random networks to be rel- atively more flatter and broader compared to that of the ER model-based random networks. We attribute this to the larger variation in node degree as well as the path length observed in the case of the THNP model-based random networks. Never- theless, the degree distribution and path length distribution both exhibit a Poisson-style distribution [1], as observed in the ER model-based random networks. Likewise, the THNP- random networks could be construed to still exhibit the small-world property [13], as the average path length observed is only at most 20% more than that observed in the real-world networks and the corresponding ER-model random networks. To obtain the distribution of degree vs. clustering coeffi- cient, we determine the average of the clustering coefficient of the vertices exhibiting particular values of the node degree. We observe the distribution of the clustering coefficient for the THNP model-based random network graphs to mimic the pat- tern observed for the real-world networks (i.e., the clustering coefficient decreases with increase in node degree) as well as align closely with the values observed for these networks. On the other hand, as expected, the clustering coefficient of the nodes observed in the ER mode-based random networks is

