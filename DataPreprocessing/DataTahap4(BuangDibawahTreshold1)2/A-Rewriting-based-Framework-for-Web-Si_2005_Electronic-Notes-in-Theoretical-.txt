In the literature, slightly different formalisms have been introduced for modeling XML and HTML documents, e.g. in [1] semistructured expressions are directed graphs which can deal with crossing references. Nevertheless, we prefer the hierarchical representation which does not cause any serious restric- tion in many practical contexts while it greatly simplifies our methodology.

In the following, we present a term rewriting specification language, which is helpful to express properties about the content and the structure of a given Web site. Roughly speaking, a specification is a finite set of rules, where the terms in the left-hand side and in the right-hand side of each rule represent (eventually marked) Web page templates. The operational mechanism, for- malized in Section 5, is based on a novel rewriting-based mechanism, which is able to extract partial structure from a term, and then rewrite it.

The following example illustrates the definition of a Web specification. Marks are introduced by the user to help locating errors. We do not take care of marks for the time being but postpone the formal handling of marking information and the description of the verification framework to Section 6.

First rule formalizes the following property: if there is a Web page con- taining a member list, then for each member, a home page exists containing (at least) the name, the surname and the status of this member. Second rule states that whenever a home page of a professor is recognized, then that page must also include some teaching information. Finally, the third rule specifies that whenever there exists a Web page containing information about scientific publications, each author of a publication should be a member of the research group.

Roughly speaking, markings in the right-hand sides of the rules allow us to find sets of Web pages, which might be incomplete or missing. Then, real buggy pages are detected inside these sets. We formalize the idea in the following section.

Then, m(n(X)) is simulated by m(n(X), t) and h(n(X)) is simulated by h(n(X), s(s(X))). In both cases, variables occurring in the substructures of the right-hand sides which are recognized by simulation and variables of the respective left-hand sides are located at the same depth. Therefore, the Web specification I' is bounded.

As we have seen in Section 5.1, simulation allows us to identify the structure of a given Web page (eventually, a template) into another. By taking advantage of this fact, we can develop a methodology, which is able to discover incom- pleteness errors in a given Web site w.r.t. a Web specification. Basically, the

It is worth pointing out that our verification framework is able to detect both the erroneous Web pages and the cause of the detected errors (i.e., the so-called incompleteness symptoms). This allows us not only to locate bugs and inconsistencies w.r.t. a given specification, but also to easily repair them by comparing incomplete pages to incompleteness symptoms, since the latter provides the missing information which is needed to complete the erroneous Web pages.

We tested the system on several Web site examples which can be found at the URL address mentioned above. In each considered test case, we were able to detect the errors (i.e. missing and incomplete Web pages) efficiently. For instance, it took less than one second the verification of the Web site of Example 6.6 w.r.t the Web specification of the Example 4.2, producing error messages when necessary.

Conceiving and maintaining Web sites is a difficult task. In this paper, we provide a rewriting-based, formal specification language which can be used to impose properties both on the structure (syntactic properties) and on the con- tents (semantic properties) of Web sites. The computation mechanism under- lying this language is based on a novel rewriting-like technique, called partial rewriting, in which the traditional pattern matching mechanism is replaced with tree simulation [15]. In our methodology, Web sites are automatically checked w.r.t. a given Web specification in order to detect incomplete and

