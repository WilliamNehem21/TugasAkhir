Visual rewriting techniques are increasingly used to model transformations of systems specified through diagrammatic sentences. Researchers are moving from the specification of static aspects of languages (defined through parsing processes) to the modelling of their dynamics. Graph transformations, in particular, are a widespread formalism with applications to parsing, model animation or transformation. Moreover, a whole new wealth of problems, such as software or model evolution [17,15,3,14] arises from the diffusion of UML as a tool for the specification of both software and general systems.

High-level replacement units are units in the sense of [13]: we have a graph transformation approach consisting of the class of objects in CAT , the class of rules in this category, the application operator as defined in Definition 3.4, a class of control expressions as defined in Definition 3.2 and a class of graph class expressions being the class of objects in CAT itself. A replacement unit is a transformation unit with objects of CAT as initial and terminal graphs. Moreover, the set of imported units for a high-level replacement unit is always empty. In contrast to transformation units, the semantics of high- level replacement units is defined by derivation sets.

able, and makes the whole replacement unit fail. It is to be noted that if this occurs, due to the transactional behaviour of units, the situation prior to the attempted unit is restored. Hence, either because rule doFinalCheck removes the Auxiliary node, or because of restoration after failure, no such node exists once the process is completed.

Termination of replacement units is not always guaranteed. If an expression asLongAsPossible contains a rule that can be applied indefinitely to the re- sult graphs, the replacement unit does not terminate. Next, we give conditions for the termination of replacement units.

Furthermore, we would like to take negative application conditions (NACs) into account. NACs for graph transformation have been introduced in [12] and have proven useful when applying graph transformation to practical problems. Recently ([8]), they have been incorporated into the high-level replacement framework in. We would like to build up on this approach to formulate ter- mination results for replacement units taking NACs into account.

