In this work, such a system is considered, where both grid jobs and local jobs compete for the same resources. The goal is to provide service to all of them, while the local jobs are considered of higher importance. In order to achieve this goal, various scheduling techniques are applied.

The simulation model considered consists of two homogeneous sites. Each site has a local scheduler and 16 processors, while the whole is governed by a Grid Scheduler (GS) that has its own waiting queue. All processors have the same serving capability and they serve their own waiting queue. We assume that the processors in each site are interconnected through a high speed local area network, while the two sites are connected through a wide area network.

The workload consists of two different job types competing for the same re- sources: local jobs and grid jobs. Therefore, there are three arrival streams in the system: one at the GS (grid jobs) and one inside each of the two sites (local jobs). A local job consists of a single task, while a grid job (gang) consists of a number of parallel tasks that must be processed simultaneously. In this study, the number of tasks a gang can have is a power of 2, which means that each gang can have 2, 4, 8 or 16 tasks (uniformly distributed), and that the mean number of tasks per gang is 7.5. The mean inter-arrival time of gangs and locals is exponentially distributed

In this study, the local jobs have priority over the gangs and it is imperative that their waiting time be minimized. The goal is to provide a quality of service for the locals that will not let the gangs starve. The technique of backfilling is also implemented to help achieve this goal.

When a gang enters the system, the Grid Scheduler (GS) will determine whether it will be dispatched to the sites or stored in the waiting queue. Since all the tasks of a gang need to be executed simultaneously, it is obvious that each task must be routed to a different processor. The general idea is that the gang will be routed to the sites only if there are enough empty processors to meet its needs or enough empty queues so that the gang will start processing shortly. In this study, we will be simulating and comparing three different approaches for gang scheduling.

The last scenario can occur when a gang is waiting for service, since a gang cannot begin execution unless enough processors are available for all its tasks to be served simultaneously. A large gang may block local jobs behind it in the queue while waiting for sufficient resources to become available. If the First Come First Served (FCFS) policy is used, the system will suffer from severe fragmentation. Furthermore, the gangs will delay the service of local jobs while the locals are of higher importance.

The queuing network model is simulated with discrete event simulation models using the independent replications method [11]. Each result presented is the average value that is derived from 10 simulation experiments with different seeds of random numbers. Each simulation run is terminated upon the successful completion of 40000 jobs.

in medium/low workloads). Approach 3 completes 90% of gangs in high workloads and 100% in low/medium workloads; however, it gives high average response time and high average slowdown for both gangs and local jobs in all workloads. Approach 2 seems to give the best overall results: it completes a high amount of gangs in all workloads (83% in high workload and 100% in medium/low workload), and results in a satisfying mean response time and mean slowdown for both gangs and local jobs.

This research studies a system consisting of two sites where grid jobs (gangs) and local jobs compete for the same resources. Different scheduling policies were stud- ied for both gangs and locals and a backfilling method was also implemented in order to avoid fragmentation. Three different scheduling approaches for the gangs were proposed and evaluated. Three sets of experiments were conducted using a simulation model under various workloads.

The experiments indicate that approach 2 results in the best overall system performance. It completes a high percentage of gangs (100% in medium/low work- loads) without significantly slowing down the locals. Several other experiments were conducted to study the impact on system performance when overhead is added due to gangs being routed to more than one site. These experiments indicated that lower overhead results in better WRT and WSLD for the gangs under almost all workloads. Different values for the threshold of backfilling jobs were also studied and led to the conclusion that T=0 is the best solution, since it results in better WRT and WSLD for the gangs and satisfying RT for the locals.

Papazachos, Z. and H. D. Karatza, Performance Evaluation of Gang Scheduling in a Two-Cluster System with Migrations, Proceedings of the 8th International Workshop on Performance Modeling, Evaluation, and Optimization of Ubiquitous Computing and Network Systems (PMEO-UCNS 2009) in Conjunction with IEEE International Parallel and Distributed Processing Symposium (IPDPS), Rome, Italy, May 25-29, 2009.

