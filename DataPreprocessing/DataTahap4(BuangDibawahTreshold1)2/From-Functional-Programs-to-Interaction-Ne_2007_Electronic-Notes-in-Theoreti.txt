Intuitively, a net N is a graph (not necessarily connected) with agents at the vertices and each edge connecting at most 2 ports. The ports that are not connected are free. There are two special instances of a net: a wiring (no agents) and the empty net; the extremes of wirings are also called free ports. The interface of a net is its set of free ports.

The top auxiliary port of a case agent represents the output; the interaction rule above selects the branch i corresponding to the constructor Ci and connects it to the output port (all other branches are erased). It is a straightforward exercise to verify that this indeed mimics the corresponding reduction rule. Note that we are assuming that all patterns are disjoint (non-overlapping) but they may be non- exhaustive. If a case agent gets connected to a constructor for which there is no branch, the interaction results in a failure.

The following is the compilation, where the net p is the common prefix, with principal ports pointing towards T (t) (so the rules in Subsection 4.3 will apply). In the diagram below we assume that there is nothing else to the pattern, as this situation has already been dealt with previously.

