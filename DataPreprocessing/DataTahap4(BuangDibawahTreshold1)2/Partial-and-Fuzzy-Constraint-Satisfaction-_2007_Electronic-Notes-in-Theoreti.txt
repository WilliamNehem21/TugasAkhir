The emergence and rapid proliferation of networked infrastructures introduce new challenges to the integration of Information Systems. Coalitions between autonomous systems are often formed between organizations that jointly work under a common framework (ex. Ministries in e-government infrastructures, interconnected hospi- tals in e-healthcare environments), in order to enable access over shared resources [11]. Security under these circumstances is a major concern, since heterogeneity, different policy specifications and diverse restrictions emerge for each domain. It is also apparent that under these circumstances, conflicts are expected to emerge. The formation of such coalitions and their security management are time-consuming and error prone, if we rely more on human intervention and less on the use of flexible

The rest of the paper is organized as follows: Section 2 discusses partial constraint satisfaction techniques and briefly discusses the use of constraints for access control. Section 3 introduces our fuzzy constraint framework and provides a detailed exam- ple on the utility of this framework to resolve policy conflicts. Section 4 discusses related work in comparison with our approach. Section 5 concludes the paper and provides directions for future work.

According to RBAC principles, R may inherit permissions from R1 or R2. Now considering this classification of the remote user from domain B, we want to estab- lish a way to (semi-)automatically assign access permissions in order for him/her to be able to access the shared resources. Due to restrictions imposed by IPSec local policies (such as local firewall rules) such a task may be subject to additional constraints. For example, in IPSec a local firewall may deny the establishment of a channel between the two domains if remote access is attempted through an encrypted channel. If this happens, then the local policy restrictions do not al- low interoperation between the two domains. We assume that in domain A two databases are maintained: DB1 and DB2, with DB1 holding data more sensitive than DB2. Role R1 may be allowed to access (read) Database DB2 and DB1 (the second database should not be allowed to be viewed or altered remotely). In this

case access to both is denied by local firewall rules due to the restrictions imposed by IPSec. Additionally, Role R2 may not access DB2 remotely and should not (strict restriction) gain access to DB1. The remote access restriction on all types of files also holds for Role B.

We can extend therefore the notion of a CSP to incorporate fuzzy preferences: as a fuzzy CSP we can consider a list of variables (x1, .., xk), a list of finite do- mains of values (D1, ., Dk) and a list of fuzzy constraints (c1, ., ck). An instantiation

Fuzzy restrictions are an alternative formalism to describe fuzzy constraints, offering the ability to express prioritized constraints. They offer the possibility to model priorities -similar to preferences- expressed by levels in the scale [0,1]. A coefficient ac expresses the priority degree of each constraint C and indicates the degree to which C must be satisfied. ac = 1 means the constraint has to be fully satisfied, while ac = 0 means it can be totally ignored. Therefore a fuzzy relation S on

extent a partial instantiation (uw1, .., uwk) of Y can be extended to a complete instantiation of Y that satisfies T. This is very important in case we have first instantiated the constraints of interest and we want to extend the least important constraints so as to satisfy (partially) the given problem to the highest degree.

critical parameter, which should be instantiated first. While looking for a best solu- tion we first instantiate variables with a limited set of appropriate values, in order to apply branch and bound techniques (which keep track of the best so far known good solution). By calculating the degree of satisfaction of an existing partial so- lution, we continue exploring only further solutions that achieve higher degree of satisfaction. All partial instantiations for which the degree of satisfaction does not exceed the best solution found so far are then excluded from further consideration.

Barker and Stuckey [1] apply constraint logic programming to express policies and present an easy to implement technique to represent multiple access control policies. In their work they do not provide support for multiple access control restrictions, such as limitations to access objects at certain locations (incorporated in our ap- proach). They also do not discuss issues of partial constraint satisfaction in the case of presence of diverse domain restrictions; moreover, they do not discuss the possibility to determine preferences over constraints.

Khurana et al. [8] define a model for the dynamic management of coalitions based on the RCL 2000 language. Coalition formation is performed as a round robin ne- gotiation where domains make proposals about the management of shared coalition assets resources. A coalition access control matrix is formulated, that keeps records of allowed accesses; the matrix is being modified during the negotiation process and as intermediate system states are formed. Conflict resolution techniques are not discussed. Our work, focuses mainly on resolving non-critical conflicts in a secure manner with minimal human intervention.

In [15] a flexible framework is proposed that combines subpolicies in a hierarchical manner. This framework allows the determination of safe release paths and pro- vides support for conflict resolution by defining a number of policy operators. Our work, instead, builds upon constraints instead of logic programs, while introducing flexibility by using fuzzy constraints.

The multi-domain policy formulation process is a complex task, subject to the presence of multiple -and of diverse characteristics- restrictions. In order to support coalition formation and to resolve conflicts, a model based on partial constraint satisfaction has been introduced. This framework has been extended using fuzzy constraints, which allow the determination of domain preferences and prioritization over constraints. We have additionally illustrated the validity and applicability of our framework by applying it to an RBAC-driven example. A prototype architecture that builds upon standardised languages and utilises principles of our framework, has also been described in this paper.

