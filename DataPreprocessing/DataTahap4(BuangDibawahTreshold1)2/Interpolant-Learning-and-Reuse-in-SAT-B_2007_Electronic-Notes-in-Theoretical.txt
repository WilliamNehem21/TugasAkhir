as unbounded model checking (UMC). Among the existing approaches for SAT-based UMC, the utilization of interpolants is among the most effective. Despite their success, interpolants have only been used for identifying a fixed point of the set of reachable states. This paper extends the utilization of interpolants in SAT-based model checking. This is achieved by observing that, under reasonable assumptions, interpolants can be reused, i.e. computed interpolants can be reused at later stages of the model checking process. The paper develops conditions for validity of interpolant reuse. In addition, the paper outlines a new fixed point condition, alternative to the existing interpolant-based fixed point condition. Preliminary practical experience on interpolant learning and reuse is reported.

The utilization of Boolean Satisfiability (SAT) in Model Checking has been the subject of extensive research in recent years. The main result of this effort has been a number of fairly competitive incomplete and complete SAT-based model checking algorithms [3,4,5,20,21,26,27]. Moreover, SAT-based model checking has also been rapidly adopted by industry, and a number of vendors have included SAT-based Model Checking in their tools.

We note that the main objectives of the paper are to investigate the conditions for interpolant reuse, and to propose an alternative interpolant-based fixed point condition. However, our experimental results suggest that interpolant reuse may not yield improvements on industrial examples. A more effective implementation, as well as a more careful selection of which interpolants to reuse, may yield more effective interpolant reuse.

The paper is organized as follows. The next section provides a necessarily brief perspective on SAT solvers and related concepts. Afterwards, Section 3 reviews SAT-based model checking, including bounded and unbounded model checking. Section 4 develops conditions for reusing learnt interpolants. Initial practical expe- rience is summarized in Section 5 and Section 6 concludes the paper.

The typical organization of BMC for safety properties is illustrated in Algo- rithm 1. The details regarding the sets of variables associated with each proposi- tional formula are omitted, but are clear from the context. Experimental evidence has confirmed SAT-based BMC to be an extremely competitive technique, that has been widely applied in industrial settings [2,7,12].

reusing interpolants, the specific interpolants computed in the standard interpolant- based fixed point condition [21] are also usable according to the conditions of The- orems 4.3 and 4.4. Hence, interpolant reuse can be readily integrated in a standard interpolant-based UMC flow.

Remark 4.7 It is straightforward to conclude that reverse interpolants can be used for developing a fixed point condition alternative to the one of [21]. Algorithm 3 can easily be adapted for using reverse interpolants, computed one time step from the time step at which the property is checked for. Similarly to image computation ap- proaches in BDD-based symbolic model checking, the advantages of this alternative fixed point condition are expected to depend on the actual automaton.

The practical experience reported in this section respects a preliminary SAT- based model checking prototype. The prototype represents interpolants as Reduced Boolean Circuits (RBCs) [1]. The backend SAT solver is MiniSAT [11]. The imple- mentation of interpolant computation is still preliminary and, currently, different interpolants do not share structure. Even though each interpolant is generated with the rules of [1], each different interpolant is maintained with a separate RBC manager, and so common nodes among different interpolants are not shared. More- over, the utilization of interpolants was evaluated in a standard BMC loop, and so interpolants were solely computed for search pruning purposes. Iinterpolants were computed with respect to the last time step and reused in the last time step. As a result, reused interpolants serve for preventing sets of unwanted states to be reached.

The preliminary results are not positive, albeit the implementation is still very preliminary. Moreover, the experimental setup chosen was not beneficial for the reuse of interpolants. Instead of an interpolant-based UMC algorithm, where inter- polants need to be computed, our experiments consisted of a standard BMC loop, where computed interpolants were solely used for search pruning purposes.

A few drawbacks of the current implementation have been identified. Examples include the lack of structure sharing between different interpolants, and the fact that interpolants were computed solely for interpolant reuse and not for checking the existence of a fixed point. Integration of these improvements is expected to yield more promising results for interpolant reuse.

