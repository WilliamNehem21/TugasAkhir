Verification of temporal logic properties plays a crucial role in proving the desired behaviors of hybrid sys- tems. In this paper, we propose an interval method for verifying the properties described by a bounded linear temporal logic. We relax the problem to allow outputting an inconclusive result when verification process cannot succeed with a prescribed precision, and present an efficient and rigorous monitoring algo- rithm that demonstrates that the problem is decidable. This algorithm performs a forward simulation of a hybrid automaton, detects a set of time intervals in which the atomic propositions hold, and validates the property by propagating the time intervals. A continuous state at a certain time computed in each step is enclosed by an interval vector that is proven to contain a unique solution. In the experiments, we show that the proposed method provides a useful tool for formal analysis of nonlinear and complex hybrid systems.

Reasoning of the temporal logic properties in a hybrid system is a challenging and important task that lies in the intersection among computer science, numerical anal- ysis, and control theory. Various methods for falsification of hybrid systems with temporal properties have been developed, e.g., [21,20,6,27], and these methods en- able verification of various properties (e.g., safety, stability, and robustness) of large and complex systems. The state-of-the-art tools are based on numerical simula- tions whose numerical errors often produce a qualitatively wrong result and become problematic even in a statistical evaluation.

Many previous studies have applied interval methods to reachability analysis of hybrid systems [8,5,24,15,3,11,12]. The outcome of these methods is an over- approximation of a set of reachable states with a set of boxes. In interval analysis, a computation often provides a proof of unique existence of a solution within a resulting interval. This technique also applies in interval-based reachability analy- sis [15,14], but it is not considered in most of the methods for hybrid systems. Our method enforces the use of the proof to verify more generic temporal properties.

however, their implementations are based on numerical simulations and might suffer from numerical error. An application of our interval method includes an integra- tion with these statistical methods to achieve both reliability and practicality. An integrated statistical and interval method was also proposed in [26] for reachability analysis.

Notions of robustness have been proposed to facilitate the simulation-based ver- ification of temporal properties [9,7,20]. In these works, the degree of robustness is represented as a distance between a trajectory and a region where a proposition holds. A non-robust trajectory, which is computed numerically, is likely to be in- consistent with the considered model due to numerical errors. Our method ensures a robustness rigorously by verifying that a trajectory intersects with each boundary in the state space.

[23] proposed a method specialized in stability properties, which is described as a specific form of temporal logic formula. [4] proposed a method that translates a verification problem into a reachability problem with the k-Liveness scheme, which is incomplete in general settings. Our method can be viewed as a bounded model checking method that validates a bounded temporal property by ensuring that all trajectories that emerge from an initial interval value satisfy the property.

We model a hybrid system as a hybrid automaton [1]. For simplicity in this paper, we consider deterministic systems, i.e., the location invariant is the negation of guard conditions and two guards do not overlap in a location. The proposed method can be extended to handle non-deterministic systems, e.g., by enumerating possible paths and computing a trajectory enclosure for each path.

Regarding the rate of inconclusive runs in each experiment, all the verifications succeeded in the first experiment. Because we set the point initial values and the bounded simulation time, considered trajectories were always enclosed with tight intervals, and thus the verification process succeeded even in a situation that was close to singular. The result also implied that we did not meet a zeno behavior. Contrastingly, around 90% and 80% of the runs in the second and third experiments, respectively, resulted in errors. Our verification process with the interval Newton failed more often if a trajectory and a guard approached or they became close to tangent. Because the model was chaotic, a coarser enclosure of states or a longer simulation time increased the possibility to meet such situations.

We have presented a sound BLTL validation method that assures that all initialized trajectories satisfy the property. The proposed method is able to detect a witness trajectory that is verified its unique existence with an interval-based ODE inte- gration and an interval Newton method. We consider the experimental results are promising for the practical use.

