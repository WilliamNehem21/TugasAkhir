homs, both when C is closed and more generally when C is not closed. In Section 5, we give what we regard as the most profound result of the paper, which is a formulation in terms of generic effects, generalising a study of Lawvere theories. Finally, in Section 6, we characterise algebraic operations in terms of operations on the category T -Alg, as this gives an indication of how to incorporate call-by-name languages with computational effects into the picture. And we give conclusions and an outline of possible future directions in Section 7.

algebraic operation. In computing, this amounts to considering an operator on expressions. But there is another approach in which arrows of the category CT may be seen as primitive, regarding them as programs. This was the under- lying idea of the reformulation [1] of the semantics for finite nondeterminism of [9]. So we should like to reformulate the notion of algebraic operation in

these terms. Proposition 3.1 allows us to do that. In order to explain the reason for the coherence conditions, we shall start by expressing the result assuming C is closed; after which we shall drop the closedness assumption and see how the result can be re-expressed using parametrised naturality.

Of course, in future, we hope to address other operations that are not algebraic, such as one for handling exceptions. It seems unlikely that the ap- proach of this paper extends directly. Eugenio Moggi has recommended we look beyond monads. We should also like to extend and integrate this work with work addressing other aspects of giving a unified account of computa-

