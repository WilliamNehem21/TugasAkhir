The analysis of security incidents and frauds has shown that several vulnerabilities of IT systems are due to loopholes in the policies and procedures adopted by organizations as well as in their structure. Organizations have thus to address security and dependability issues by analyzing their organizational setting. In this paper, we present a methodology to support the deployment of Security & Dependability patterns according to their position in the Enterprise Architecture and the underlying system infrastructures. The methodology discriminates the pattern deployment process between recommendations and guidelines. Recommendations concretize the deployment with refined software and/or hardware related patterns, whereas guidelines specify

Current methodologies for applying security solutions at the organizational level are limited to the conceptual level. In this direction, we find the proposal by Kim et al. [11], who introduces methods to reduce threats to the system by applying security engineering. The proposed method for building security countermeasures does not comprise details on its application into the systems to be enhanced. An

In this study, we bound the nature of systems to Software, Hardware, Human Resource or Policy infrastructure and propose deployment guidelines determined upon these types of infrastructure. These guidelines describe how patterns should be implemented. The aim of the proposed approach is to enhance the best practices for the definition of security policy and procedure as well as for the selection of the infrastructure that support them. We demonstrate the effectiveness and feasibility of our approach using a case study in which S&D patterns are deployed in a remote healthcare system prototype.

The paper is structured as follows: Section 2 introduces a healthcare system that is used as a running example throughout the paper. Section 3 presents an overview on the background underlying our methodology and illustrate them with examples driven from our case study. Section 4 describes the methodology proposed in this paper, illustrated with the remote healthcare system. Finally, Section 5 concludes the paper with some directions for future work.

Among the possible application scenarios in the remote healthcare system, we focus here on an emergency situation. In such a scenario, the patient health sta- tus and activities are constantly monitored by the BSN and the smart home. All alerts and critical situations detected are sent to the MERC where, after a detailed analysis, the corresponding actions to help the patient are triggered. Hereafter the scenario is described in detail.

and describes their roles and interactions with the other parts of the system. Organizations are usually technique-mediated. Humans utilize technical media such as emails, telephones, management IT systems, video cameras and other software and hardware based tools, to run organization businesses. They are often the users of the IT system, and the participation of system users usually defines the success rate for these businesses.

the Zachman framework to retrieve the context specifications. This makes it pos- sible to infer the unique cell that provides semantic information about the context in which the organizational S&D pattern is implemented. An example of how to browse the Zachman framework has been presented in Example 3.2. Nevertheless, this acquired context remains independent from the type of infrastructure.

All along the methodology, a more detailed deployment context has been identified. The Software or Hardware implementation infrastructures, obviously, can be driven the definition of S&D solutions (e.g., implementation code) that are more accurate than those provided by the pattern library.

Guidelines are follow-up consultancy for the management of the expertise captured in the organizational pattern for Policy and Human Resource implementation in- frastructures. The deployment of S&D organizational patterns into the system means to provide the system designer with the list of modifications needed to be applied before starting the actual pattern implementation. Since our objective is to assist system designers during system development, the pattern solution should be described together with a group of guidelines for possible (including combined) infrastructures in order to match the real needs of the organization and facilitate the reuse of existing infrastructures.

instantiate the general terminology of the pattern to the one of the system. During this step, analysts should understand the correspondence between the pattern and the concrete instance of the system. Essentially, they have to identify the correspondence between the general terms (i.e., actor-name, goal- name, etc.) used in the pattern, and the actual instances within the system. In case analysts disagree or cannot define these correspondences, the pattern instantiation fails and the deployment process is halted.

