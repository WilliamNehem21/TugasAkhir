Proof. For any downward saturated set DS, we can easily construct a C1 valuation v such that for every signed formula SX in the set, v(SX) = 1. How can we guarantee this is in fact a valuation? First, we know that there is no pair T X and F X in DS. Second, all premised C1 KE rules preserve valuations. That is, if v(SXi) = 1 for every premiss SXi, then v(SCj) = 1 for all conclusions Cj. And if v(SX1) = 1 and v(SX2) = 0, where X1 and X2 are, respectively, major and minor premises of a C1 KE rule, then v(S'X2) = 1, where S'X2 is the conjugate of SX2. Therefore, DS is satisfiable.	 

We do not prove here that the C1 KE system is decidable, i.e., that there is an algorithm for finding proofs in the C1 KE system. We only present the sketch of such a proof that will be detailed in a future paper about the implementation of a C1 prover.

when either T A or F A can be the minor premiss of a 2-premiss rule, where A is the PB formula (i.e. the A formula that appears as T A in the new left branch and F A in the new right branch after PB application).

We have to follow some steps to implement a strategy for a logical system in KEMS. First, one has to know how KEMS implementation is structured (by reading [18] and the source code available in [20]). Second, one has to implement the classes that will represent the logical system (such as CPL or C1). Third, one has to implement the classes necessary to represent the rules of the KE system (such as C1 KE system). Only after these three steps, one can implement one or more strategies for a given KE system.

This strategy is a very straightforward strategy for a C1 KE system. The idea is to use the PB rule only as a last resource (as shown in the canonical procedure for KE [12]). The difference is that in the C1 KE system we cannot restrict the strategy to perform only analytic applications of PB. An analytic application of PB is an application of PB where the PB formula (i.e. the A formula that appears as T A in the new left branch and F A in the new right branch after PB application) is a subformula of some formula in the branch.

