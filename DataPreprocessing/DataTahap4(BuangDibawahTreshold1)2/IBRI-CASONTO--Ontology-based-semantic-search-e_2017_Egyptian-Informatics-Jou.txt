The vast availability of information, that added in a very fast pace, in the data repositories creates a chal- lenge in extracting correct and accurate information. Which has increased the competition among devel- opers in order to gain access to technology that seeks to understand the intent researcher and contextual meaning of terms. While the competition for developing an Arabic Semantic Search systems are still in their infancy, and the reason could be traced back to the complexity of Arabic Language. It has a complex morphological, grammatical and semantic aspects, as it is a highly inflectional and derivational language. In this paper, we try to highlight and present an Ontological Search Engine called IBRI-CASONTO for Colleges of Applied Sciences, Oman. Our proposed engine supports both Arabic and English language. It is also employed two types of search which are a keyword-based search and a semantics-based search. IBRI-CASONTO is based on different technologies such as Resource Description Framework (RDF) data and Ontological graph. The experiments represent in two sections, first it shows a comparison among Entity-Search and the Classical-Search inside the IBRI-CASONTO itself, second it compares the Entity- Search of IBRI-CASONTO with currently used search engines, such as Kngine, Wolfram Alpha and the most popular engine nowadays Google, in order to measure their performance and efficiency.

The World Wide Web data is growing rapidly in the data repos- itories because of various factors such as users, systems, sensors and applications. For example, millions of transactions that occur daily, and the social media tools such as Facebook, Twitter, Linke- dIn, Google+, and Tumblr, add vast of information. These large data create several challenges that called V attributes : Velocity, Volume and Variety. Clearly, the velocity means the data comes at high speed, while volume focus on large and growing files and the vari- ety means the files come in various formats (e.g. text, sound and video). These issues enable a competition among the developers to search about a technique that help to extract the accurate data

Ontology gets over from the issues of RDFs that makes this con- cept the nearest one to the semantic search. Actually, the term Ontology has been used for several years ago by the artificial intel- ligence and knowledge representation community. However, nowa- days it is becoming a part of the standard terminology of a much wider community including information systems modeling [1]. The concept of Ontology is borrowed from philosophy, where it means a systematic account of existence [2], for instance ontolog- ical question like what are the fundamental parts of world and how

There are three types of ontology based on the degree of con- ceptualization into three types, which are Top-level Ontology, Domain Ontology and Application Ontology [7]. Each type have its range and capacity of information. For instance, the Top-level Ontology depicts very general notions, in which they are indepen- dent of a particular problem or domain. In addition, they are appli- cable across domains and includes vocabulary related to things, events, time, space, etc.

Domain Ontology represented data in a particular domain, and provides vocabularies about concepts and their relationships or about the theories governing the domain. Moreover, it is rich of axiomatic theories whose focus is to clarify the intended meanings of terms used in specific domains. It is designed to not only fit the needs of specific community but also provides terminological structure that can share between different communities. Therefore, the reference ontology sometimes called the foundation ontology. It helps developer to avoid build ontology from the scratch by using other references of ontology that built before in order to implement minimal modifications on it. However, the application ontologies could be generating from the reference ontologies.

There are different types of search nowadays, the classical search and semantic search. Each type has its own view or tech- nique of searching. The classical search is focused on popularized keywords, where it means the users can submit a set of keywords to the search engine and a ranked list of information is returned back to the user [8]. There are different sites and applications that support the keyword-based search engines such as Google, Gmail and Yahoo. The second type of search is a semantic search that clar- ifies the lack in the concept of keyword semantics in the previous examples and the classical search; because they give many irrele- vant and inaccurate outcomes to the users [9]. It is so far from the concept  of  understanding  searcher intent and  the contex- tual meaning of the user query. Thus, it is a challenge that has been addressed and solved by many semantic search engines.

Since there is a few of the Ontological Search Engines that sup- ports Arabic language. It could be traced back to the Natural Lan- guage Processing [10] and gaps/challenges to solve syntactic search and produce synonym meaning of words. Thus, this paper is focused on implementing the Ontological Search Engine based on the ontological graph that is called IBRI-CASONTO. Although, IBRI-CASONTO supports both Arabic and English languages, we shall put our attention to discuss the Arabic search in this paper. It uses both the keyword-based search as well as the semantics- based search which also known as the Ontological Search.

The rest of this paper is structured as follows. The second sec- tion introduces the researcher efforts in order to build the ontolog- ical search engines, their techniques, domain, languages support, for instance, Wolfram-Alpha, Kngine and Google. The third section discuss the Arabic Language and its related to the Ontology con- cept. Whereas the fourth section highlights the ontology compo- nents. Section five and six present our proposed engine, IBRI- CASONTO, in detail and the experimental evaluations that test the engine with simple and complex queries and compare the pro- posed engine with other common and popular semantic engines. At the end, section seven concludes the paper and gives some sug- gestions in order to improve the IBRI-CASONTO in the future.

Ontology is considered as a portal to make the engines more intelligent and powerful. It is a respectful mission for the current generation of the web which known as Web 3.0 and the future mis- sion for Web 4.0. Ontology is powerful and has a correct and reli- able data that stores in its repositories that called the ontological graphs. It enables user to get and retrieve a direct answer without any complexities.

Arabic language is considered as integral to the vast majority of the population of the Middle-East and the rituals of Muslims, because it is their mother tongue and the religious language of all Muslims of a variety of ethnicities throughout the world. It is also a Semitic language that has around 28 alphabets [19,20,29,21]. Moreover, Arabic is also one of the six official lan- guages of the United Nations and the mother language of more than 330 million people in earth [22].

Classes are the core component of most ontologies. According to the different languages, which is used to implement ontologies, it is called a concept or a type. Classes represent a collection of indi- viduals that share common characteristics. Sometime one class could be a subclass to another class. For example, if the Class

College is a subclass of the Class Organization. Then, every indi- vidual of the Class College is also be individual of Class Organiza- tion. In addition, classes could share relationships that will describe how the individual of one class relate to another.

Individual represents the objects of domain of interest. It is called instance of class. Ontology is described the individual so that, it is considered as the base unit of ontology. Individual could represent concrete objects like people, machine, or abstract object like article or function.

Second step, determine the ontology representation language and the editor. We use the OWL to develop our ontology that is more compatible with the World Wide Web. In addition, OWL is based on the main elements of RDF in order to add more vocabularies to describe classes and properties.

Fifth step, we define the instances for each class, which is called individuals. Individual is considered as a member of the class. For instance, the class Dean have only one individual that called Dean. Besides that, IBRI-CASONTO instances reach to more than 1000 individuals.

A key feature of many triple-stores is the capability to do infer- ence. It is essential to note that a DBMS typically presents the capacity to deal with concurrency, security, logging, recovery, and updates, in addition to loading and storing data. However, some of the triple-stores offer all these capabilities while others not.

and retrieval of triples through semantic queries. A triple is a data entity composed of subject-predicate-object. There are different types of triple-stores [29] such as Jena SDB, Jena TDB, OWLLIM, Sesame and others. In IBRI-CASOnto, we decide to use the Jena TDB because it is a component of Jena for RDF storage and query. It supports the full range of Jena APIs. Besides, TDB can be used as a high performance of RDF store on a single machine. It also includes automatic protection against multi-JVM usage, which pre- vents this under most circumstances. On the other hand, we decide to use the MySQL as RDBMS for the keyword searching purpose.

We use the TDB indexing which is built on the Fuseki for Jena TDB dataset. Many of the persistent datasets in the TDB triple- store use a custom implementation of threaded B+ Trees. The TDB triple-store implementation only provides for fixed length key and fixed length value. In addition, there is no use of the value part in triple indexes. The threaded nature is referred to the mean- ing of the long scans of indexes proceeds without needing to tra- verse the branches of the tree.

Lucene is used for indexing the MySQL database. The indexing process in Lucene consists of a chain of logical steps after gain access to the original content you need to search. The steps are acquire the content, build content, analyze documents and index documents.

Semantic Searching of IBRI-CASOnto is supported by Apache Jena Fuseki. It provides a SPARQL server that can use the Jena TDB for persistent storage. In addition, it provides with the SPARQL protocols for query, update and rest update over the HTTP. More- over, the SPARQL query offers the searching over the triple-store and retrieve the needed results.

The user interface is one of the most important parts of any sys- tem. Our IBRI-CASOnto system provides with a usable interface that enables users to interact with the engine easily. Thus, a pow- erful system with a poorly designed user interface has little value that could put the system in the trap.

Recall: It is referred to the fraction of the documents that are relevant to the query which are successfully retrieved (i.e. sum of all true positives and false negatives). It is known as a lexical recall or a correct recall (Rc):

Precision = Numberoftotalrelevant/Numberoftotalretrieved Accuracy: This metric gives a good overall view of the compe- tency of a search engine and how accurate it is. It is computed by dividing the number of correct outputs (i.e. the sum of true positives and true negatives) by the total number of queries.

In conclusion, though new improved keyword-based technolo- gies for searching the WWW are evolving constantly, the growth rate of these improvements is likely to be slight. Problems of imprecise and irrelevant results will continue to hinder Web searchers, especially with the continued expansion of the Web. Search engines based on a new concept as the semantic Web tech- nology, are effectively able to handle the above-mentioned prob- lems. A domain specific ontology based semantic search engine as ours is advantageous in several ways. Firstly, our approach has been able to successfully eliminate the problem of irrelevant results, which is one of the main problems encountered by the users of a regular search engine. By using the mapping technique between instances and classes, the search engine effectively fetches the exact information. Secondly, by producing exact infor- mation as the result, the search engine eliminates the need to go through numerous results as in case of a regular search engine. Lastly, our design although based on the IBRI-CASOnto domain, is

