In the basic variant of P systems the objects evolve according to evolution rules, locally associated to the compartments, that transform multisets of symbols into multisets of symbols. The interaction between compartments is realized by allowing evolution rules to move objects between directly nested membranes. Such rules are generally applied non-deterministically in a maximally parallel manner: the rules to be used and the objects to evolve are randomly chosen, and, in each step all objects which can evolve must do it.

Various formal results have already been achieved. In [3] the computational power of two basic Brane calculi proposed in [4] is investigated. In [5] is inspected a variant of P systems inspired by the interactions of a basic Brane calculus defined in [4]. A parallel semantics for Brane calculi, inspired by the maximal parallelism semantics of P systems, is considered in [2]. Finally in [7] two variants of P systems whose interactions are inspired by the two basic Brane calculi defined in [4] are studied.

The rest of the paper is organized as follows. In section 2 we introduce all the formal notions we will need in the rest of the paper. In section 3 we show how to model mobile membranes communication with Phago/Exo/Pino actions. In section 4 we report some final remarks and we give some perspectives for future work.

The key function of a biological membrane in a living cell is to define a com- partment and its interaction with the surrounding environment (including other compartments). In both P systems and Brane calculi we have a membrane struc- ture where the membrane concept is used as a logic separator between processes and resources. The membrane structure can be seen as a tree like structure, a Venn diagram or a correctly matching parentheses string and it should be clear that we can have nested membrane structures; each pair of matching parentheses identifies a membrane. The height of the tree defines the depth of the structure.

Generally speaking a P system is a computational model based on a membrane structure 3 that processes locally multisets of symbols in a parallel and distributed manner. Each membrane identifies a compartment (or region) that contains a set of evolution rules and a multiset of symbols from a given alphabet. Given a compart- ment the symbols contained evolve according to the set of rules contained. Typically the rules are used in a non-deterministic, maximally parallel way; at each step of computation we non-deterministically choose rules and objects (symbols) until no further choice can be made and then simultaneously apply the chosen rules to the chosen symbols. A computation is successful if it halts and a simple way to define the output is to consider the number of objects in a predefined compartment. There exist many variants of the basic model and an up-to-date bibliography can be found at the web address http://psystems.disco.unimib.it/.

Biologic membranes are formed by a lipid bilayer that actually behaves as a fluid that lets both structural components and embedded substances like proteins freely move into the region delimited by the lipid layers. Membranes themselves are immersed into an aqueous solution where they can freely float. Such fluid within fluid structure directly inspires the basic structure of Brane calculi: two commutative monoids with a replication operator, each representing a kind of fluid. We have

The Phago/Exo/Pino Brane calculus (briefly PEP) is defined by three actions in- spired by the biological processes of endocytosis and exocytosis. The endocytosis process is specialized into two actions: phagocytosis (phago), which consists in the process of a cell engulfing exactly one external membrane, and pinocytosis (pino), which engulfs only external fluid and no membranes at all. The exocytosis is repres- ented by the exo action and consists in the reverse process of endocytosis: a single internal membrane irreversibly mixes with the external one while pushing its content outside of it.

In (6) we assumed that X already had the proper action @m1 needed to initiate the communication process, now we concisely discuss how to add the communication marker to a substance. In Gemmating P systems it is a pre-dynamical rule that marks a substance for transmission by appending the special symbol @ to the string encoding the substance itself. Here we suggest a more general approach. In PEP we can add the proper action @i to a substance (system) in different ways:

