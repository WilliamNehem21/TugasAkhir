Angelic nondeterminism is a specification and programming concept that is typically available in unified languages of refinement calculi [18,4], and in concurrent constraint programming languages [15]. In program development techniques, it is reflected in choice constructs in which the choice is not arbi- trary, but made to guarantee success, if possible. In programming languages, it is reflected in the use of backtracking. The work in [16] explores angelic nondeterminism in a language for definition of tactics of proofs.

Angelic nondeterminism has been extensively studied using weakest pre- condition semantics. There are results on the relationship between relational and predicate transformer models in which relations are sets of pairs of states and predicates are sets of states [12,6]. These results establish that the UTP relational model cannot capture angelic and demonic nondeterminism.

In this paper, firstly, we consider a set-based relational model for the UTP. Secondly, we propose a predicate transformer model; conjunctive predicate transformers correspond to the set-based relations, and therefore to UTP re- lations. These models clarify some aspects of the UTP, and provide guidance on the use of the model of binary multirelations introduced in [20] for the UTP. Based on this model, we propose a UTP theory for angelic nondeterminism.

In the next section, we present an overview of the unifying theories of programming. In Section 3, we consider a set-based relational model and a predicate transformer model for the UTP. In Section 4 we enrich the UTP with a theory to cope with angelic and demonic nondeterminism. Finally, in Section 5 we present our conclusions and directions for future work.

Designs form a UTP theory that is characterised by an alphabet that in- cludes ok and ok ', and by the healthiness conditions H1 and H2. For reactive programs, for instance, we have a theory of relations whose alphabets include six other observational variables, and that satisfy two other healthiness con- ditions. Alphabets and healthiness conditions are the basis to compare and combine different theories. Later on, we present a theory for angelic (and de- monic) nondeterminism; beforehand, we study set-based models for the UTP.

and the internalized model of nontermination based on the observational vari- ables ok and ok '. Most importantly, however, they provide guidance in the definition of a UTP theory based on binary multirelations. It is this theory that can capture both angelic and demonic nondeterminism.

The first, p2sb, transforms a UTP relation into a set-based relation; the sec- ond, sb2p is its inverse: it transforms a set-based relation into a UTP relation. Both p2sb and sb2p do not change the alphabet of the relations. A similar set model is used by Hoare and He when they discuss denotational semantics.

The set-based relation defined by p2sb for a predicative relation P is formed by pairs of states s and s' such that P holds when the observational variables take the values associated to them by s and s'. The predicate P [s/A] is obtained by replacing x with s.x , for all x in A.

Standard work on relational semantics [13] singles out a special state to indicate non-termination. If an initial state is associated with all possible final states, then we cannot say whether the final state is simply arbitrary or we have a possibility of non-termination. In standard relational semantics, the model for abort that we presented above is actually the model for a program that always terminates, but whose final state is arbitrary.

Isomorphisms between predicate transformers and relational models have already been studied [12]. The isomorphism that we propose here is similar to that in [6]. We define functions sb2pt and pt2sb; the first transforms a set-based relation into a weakest precondition, and the second transforms a weakest precondition back into a set-based relation. For simplicity, we ignore alphabets, which, strictly speaking, should be maintained by both functions.

The relation pt2sb.PT associates an initial state s to a final state s' if s is not in the weakest precondition that guarantees that PT does not establish s'. Since it is not guaranteed that PT will not establish s', then it is possible that it will. The possibility is captured in the relation.

As already said, the angelic choice in which we are interested is the least upper bound of the lattice of monotonic predicate transformers. Joins in the lattice of universally conjunctive predicate transformers are not preserved in the lattice of monotonic predicate transformers [3]. We need a relational model isomorphic to the monotonic predicate transformers.

It is unavoidable that the definitions of some operators are more compli- cated than those in the original UTP model. It is part of the philosophy of the UTP to study constructs and concepts in isolation: we have provided a theory for angelic nondeterminism which can be incorporated to the other theories as needed. We have also established that we do need a more elaborate relational model to capture angelic nondeterminism.

We describe the predicative theory of alphabetised relations and the the- ory of designs, where we can observe the start and termination of a program. Designs enable reasoning about total correctness, and a set-based model of relations brings this fact sharply into focus. We show that there is an isomor- phism between our set-based relations and universally conjunctive predicate transformers. This establishes a connection with an existing result: conjunc- tive predicate transformers cannot capture angelic nondeterminism.

A relational model that can capture both angelic and demonic nondeter- minism is presented in [20]. We cast that model in the UTP predicative style, including a healthiness condition and the refinement relation. This allows its use in an integrated framework that covers, for instance, concurrency and higher-order programming. We are going to use this model to extend the existing semantics of our combined formalism [21], and prove refinement laws.

In [4], Back and von Wright present another relational model isomorphic to predicate transformers; it is a functional model called choice semantics. In that work, a program P is a function from initial states s to the set of postconditions that can be satisfied when P is executed in s. The choice semantics is, of course, isomorphic to binary multirelations. Since, in the predicative style of the UTP, relations are defined punctually, it was more convenient to base our work on binary multirelations.

The work in [16] presents a functional semantics for a tactic language which includes angelic nondeterminism. The semantics of angelic choice is a list that contains all the options available to the angel; demonic nondeterminism is not included. In [17], the set-based model of binary relations is used to support angelic and demonic nondeterminism in a calculus for functional programs. They adopt two refinement relations, one of which is the same as ours.

