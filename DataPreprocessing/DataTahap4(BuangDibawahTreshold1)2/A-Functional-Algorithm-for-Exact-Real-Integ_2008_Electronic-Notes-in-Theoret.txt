We develop an algorithm for exact real integration over a class of self-similar spaces and measures defined by Hutchinson. We construct the algorithm in an idealised lazy functional programming language and prove its correctness using domain theory. The work generalises an algorithm developed by Alex Simpson for exact Riemann integration over the real line. We implement the algorithm in the functional language Haskell and give some preliminary results.

There are numerous approaches to representing the real numbers within a compu- tational framework. Some methods seek to represent the reals extensionally i.e. as an abstract datatype such as the interval domain, while others are intensional in that the reals are represented using existing type structures (see e.g. [7,5] for a summary). We favour the latter approach, in particular infinite streams of digits as studied by Kreitz et. al. [11].

In short this result states that any invariant space we care to define can be generated by a set of contractions that have c.c. realizations. We shall prove the result in section 3.5, but for now satisfy ourselves with some examples.

The characteristic of the real line that motivated the integration algorithms in [15,3] is a fundamental trait of all invariant spaces. Moreover it is the defining characteristic of the invariant measures on invariant spaces i.e. every space that can be integrated in this way is an invariant space w.r.t some S and conversely so.

