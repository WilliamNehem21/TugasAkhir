Trustworthiness is used by the TMF to make control decisions. For example a negative compliance may result in action against the component e.g., its deactiva- tion. A decrease in stability may trigger a re-estimation of the quality attributes and compliance re-evaluation, while a decrease in benignity may cause the component to be re-instantiated in a different mode of operation or in a controlled environment.

Trust Management has recently attracted the attention of Computer Science re- search especial for the application areas of distributed access control and reputa- tion networks management. (cf., [3,9]). The problem of trustworthiness evaluation that we address has many similarities with the task of selecting a trustworthy web service. Users generally favour web services that they expect will honour their agree- ments as described in the form of previously established a Service Level Agreement (SLA). For example [15] suggests that a web-service can be ranked according to a trust value that is calculated by a trusted registry using a set of user reports on the service over time.

A Trustworthiness Profile Model TP is a set {M1,... , Mk' } of modes. As with the Quality Profile, the Trustworthiness Profile has modes that represent different modalities of judgements in different contexts. Each mode M is a set {(QA1, W1),

Qo is the set of observed QAs. It is the set of QAs filled in by the TMF as the result of repeated monitoring activities. Initially this set is empty. Later, it denotes the set of observations collected by the TMF.

where r, s are the number of items in S that satisfy, do not satisfy resp., predicate P , whilst t is the number of items for which the evaluation of the predicate is uncertain (e.g., the datum was corrupted or missing, or we are using a three-valued predicate and the result cannot be interpreted as neither positive nor negative).

Benignity and stability are used for decision-making by the TMF, and the cal- culation of their values is defined in terms of Subjective Logic operators. The TEF has been prototyped in Ocaml 1 which has been interfaced with a Robocop [13] component written in C. We are now commencing a validation phase in which we will evaluate the use of the TMF in a variety of applications in the domains of health care, entertainment, and communication.

