We use hybrid logic to achieve two important improvements with dLh: state- based reasoning and introspection. Using nominals as abstract state labels, our hybrid calculus is able to leave state succession purely symbolic (state-based rea- soning ) and only expand symbolic state transitions when necessary for progress (expand-on-demand). This ability is increasingly important for computationally expensive state transitions caused by continuous dynamics. The second advantage results from improved system introspection by providing satisfaction operators to refer back to states during the system evolution.

Example 2.3 [ETCS case study] As our running example, consider part of the European Train Control System (ETCS) case study [11]. In ETCS, the movement of trains is controlled by decentralised Radio Block Centres (RBC), which grant or deny movement authorities to trains by wireless communication. The actual accel- eration and braking behaviour is determined by the train and subject to movement authority limit, weather condition, slope of track etc. (in this paper, we focus on

Here, nominals help to structure verification of components, thereby unleashing a great potential for performance improvements during verification. In general, it is easier to prove several conjectures about smaller subsystems than a single correctness statement about the full system [8]. Using nominals for introspection, this effect can even be exploited to decompose reasoning for components when correctness depends on a very tight interplay.

Proof. (Sketch) The proof relies on the key observation that states of dLh can be characterised completely by (quantified) variable assignments. Assume x is the vector of all variables occurring in a formula and i is a vector with fresh variables of the same dimension for each nominal i. With this, a reduction can be achieved using the following replacements for satisfaction operators or propositional occurrences of nominals, respectively:

Chaochen et al. [7] presented a proof system for the duration calculus (DC) ex- tended by durational assertions about mathematical expressions in real-valued time- dependent states and their derivatives. It has no constructive treatment of arith- metic, but only incorporates an oracle, which needs to guess the mathematical conjectures that are needed for proof progress.

In addition to the future work for the base logic dL like operator completion with parallelism, aspects concerning the particular hybrid nature of dLh include investigating the correspondence between deterministic evolutions or assignments (cf. update prefix in [3]) with nominals in the calculus, yielding a theory of struc- tured nominals. Further, unique initial-value problems for continuous evolutions give rise to deterministic state transitions. In dLh, this would result in first-order nominals s(t) that export the time t of evolution as a parameter. Another line of research is on guidance of state-based reasoning rules in automatic theorem provers. In short, we have demonstrated that combining dL with hybrid logic yields a hybrid dynamic logic dLh that is capable of system introspection, and whose calculus

