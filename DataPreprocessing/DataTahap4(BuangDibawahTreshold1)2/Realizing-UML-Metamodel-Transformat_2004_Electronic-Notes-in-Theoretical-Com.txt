This paper is structured as follows: Sect. 2 shows how we handle the trans- formation of association classes into ternary associations. Section 3 shows how we treat the transformation of ternary associations into binary associations. We conclude with some general remarks and observations in Sect. 4.

In order to evaluate the integration of our approach with common UML case tools like Rational Rose, ArgoUML or Poseidon, we are currently working on combining AGG with the Java Metadata Interface (JMI, [8]). This way, we can apply graph transformations directly on UML models. Speaking in techni- cal terms, we define a mapping which allows metamodel instances (represented by JMI) to be treated as AGG graphs. UML models can either be exported and imported from the case tools as XMI files [14] or, in the case of ArgoUML, can be modified in-place. The latter case works because ArgoUML uses a JMI compliant metadata repository. We imagine to include an extendible plug- in into ArgoUML from which several transformations (implemented as graph

