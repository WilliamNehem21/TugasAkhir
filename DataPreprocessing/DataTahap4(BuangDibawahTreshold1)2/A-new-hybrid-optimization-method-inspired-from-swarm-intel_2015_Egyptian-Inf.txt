The SSO algorithm inspired by the collective movement of swal- lows and the interaction between flock members has attained good results. This algorithm has presented a metaheuristic method based on the special properties of swallows, including fast flight, hunting skills, and intelligent social relations. At a glance, the algorithm is similar to PSO but it has unique charac- teristics which cannot be found in similar algorithms, including the use of three types of particles: Explorer Particles (ei), Aim- less Particles (oi), and Leader Particles (li), each of which has certain responsibilities in the group. The ei particles are respon- sible for searching the problem space. They perform this search- ing behavior under the influence of a number of parameters [19]:

ment the new strategy and improve it. Swallows have high swarm intelligence; in addition, their flying speed is high, so they are able to fly long distances in order to immigrate from one point to another and also they fly in great colonies. Flying collectively they misguide hunters in perilous positions. Swal- low swarm life has many special features which are more con-

In SSO algorithm there are two types of leaders: the local leader and the global leader. The particles are divided into groups. The particles in each group are mostly similar. Then, the best particle in each group is selected and is called the local leader. Next, the best particle among the local leaders is chosen and is called the global leader. The particles change their direc- tion and converge according to the position of these particles.

The SSO algorithm enjoys many advantages compared to the PSO and fish swarm optimization (FSO), but it has disadvan- tages as well, which are observed when it is tested and evalu- ated in various environments. One of its main problems is related to controlling the speed of the particles and their con- vergence so that sometimes particles pass by an optimum point due to their high speed and do not meet it. This problem causes the occurrence of premature convergence. Using an adaptive inertia weight can be a good help solving this problem. Another problem associated with the SSO is the lack of a proper balance between local and global searches which leads to its poor performance in some environments. A combination of fuzzy inference systems was used in the FASSO to reduce the mentioned problems and to obtain greater flexibility in the acceleration coefficients. These points are discussed thor- oughly in the following sections of the article.

The d input shows the difference between a global leader and a local one. This difference expresses the general situation of a local colony and indicates whether it is in a good position in relation to a global optimum. This fuzzy membership func- tion has the three different states of low, medium, and high. In

The first fuzzy rule was designed for creating a balance between local and global searches. In this state, chances of par- ticles to find a local or a global optimum are the same. In the both second and third fuzzy rules, particles perform the local search with greater care and rely more on their individual expe- riences. This search may result in not only finding a good local optimum, but also selecting an appropriate local leader. The forth and fifth Fuzzy rules are related to the situation in which the coefficient of the local search declines, the coefficient of the global search rises, and the particles converge around a global optimum. These rules are also known as the convergence rules and it causes a rise to the speed of convergence as well. The sixth and seventh rules help particles to escape from a situation of premature convergence and from a local optimum as well.

difference for instance in the second fuzzy system, an attempt is made to find a local optimum point and to converge around that point. As a matter of fact, in this system, particles con- verge around a local leader, and this local leader will converge toward a global leader. Of course, in the SSO algorithm, we never forget the importance of oi, because not only do these particles give the group the chance of finding unknown areas through performing random and irregular movements, but also allow particles to escape from local optimum points.

and global searches. Two suggestions were put forward to solve these shortcomings. The first is to introduce an adaptive inertia weight that decreases parabolically with time. The sec- ond is to use fuzzy control in optimizing the acceleration coef- ficients (and here, the two fuzzy inference systems played the central role). The proposed method had a high speed of con- vergence, could avoid premature convergence around local optimal points, and had substantial flexibility in complex envi- ronments. It cannot be claimed that the FASSO is the best optimization method; however, it is hoped that this method

