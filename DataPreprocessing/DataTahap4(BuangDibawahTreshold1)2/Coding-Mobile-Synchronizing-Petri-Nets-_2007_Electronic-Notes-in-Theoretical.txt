In several previous papers [14,15] we have presented a model for concurrent, mobile and ubiquitous systems [5,12], based on Petri Nets, that we call Mobile Synchron- izing Petri Nets (MSPN). Petri nets provide friendly graphical representations of systems, and we can profit from their solid theoretical background. Moreover, since they are not Turing-complete, there are many decidability results for them that do not hold in general for other more expressive models. Several models for mobility based on Petri Nets have been proposed in the literature [1,19,9,3,8]. However, the previous models do not consider security aspects, certainly crucial in this setting, nor any other Petri net based model for mobility, up to our knowledge.

In [15] we studied the expressiveness of MSPN systems. We proved several interesting decidability results, such as the decidability of coverability, that can be used to specify security properties such as integrity or confidentiality. In order to achieve the verification of these properties, we have chosen rewriting logic [10] as the framework to develop it. This logic supports in a natural way the managing of distributed and concurrent systems, and has been efficiently implemented by the Maude [6] programming language, that has been widely used for the implementation of a number of process algebras and other formalisms for concurrency [20,18].

In the last section we have mentioned an algorithm to decide the coverability problem of MSPN systems. However, that algorithm is far from efficient. Although some of the causes can be mitigated, the problem lies in the fact that the backward analysis produces an explosion on the set of predecessor markings, even with the ideal-based representation of sets of markings we use. We plan to study in depth the complexity of the algorithm, and we are currently studying the possibility of using a forward analysis instead, that as in [2] should contribute to increase the efficiency of the algorithm. We also plan to combine that approach with the introduction of abstractions or appropriate type systems, that would turn our analysis incomplete, but at the same time more manageable when applicable.

