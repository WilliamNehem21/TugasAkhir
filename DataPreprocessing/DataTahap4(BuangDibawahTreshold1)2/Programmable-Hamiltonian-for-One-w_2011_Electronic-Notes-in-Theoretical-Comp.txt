We construct a family of time-independent Hamiltonians which are able to perform universally pro- grammable quantum computation. The construction is obtained via direct translation of one-way computer assembly language code into a Hamiltonian evolution. We also present how to evolve adiabatically to this Hamiltonian. It is hoped that this approach contributes further into the study of the structural relationship between measurement-based and adiabatic models of quantum computing.

The central question that this paper aims to make a progress upon is the study of the structural relationship between MBQC and AQC. Several methods for the adiabatic simulation of a given circuit have been already proposed [7,8]. These methods are essentially based on rewriting a circuit into rounds of computation with few gates in each round, which are then used to construct a corresponding local Hamiltonian. In another approach adiabatic evolution has been exploited to make the MBQC computation more robust [9]. Our construction differs from the previously known results in presenting a programmable Hamiltonian construction

One can count two of the main advantages of the one-way quantum computation as having an intrinsic parallel structure [14] and a rich graph theoretical toolkits for algorithm design [15,16,17]. Generally speaking, a model to have these prop- erties beside the advantage of having a programmable and robust continuous-time evolution is the main goal of this paper. The first step is a translation of one-way pattern into Hamiltonian evolution, which is presented next.

We finish this part with a comment on the parallelism. In our construction to achieve the same depth complexity of the one-way pattern, we could first dispose all the Z dependency of the measurements using the signal shifting scheme intro- duced in [1] and then parallelise the resulting controlled-gates using the techniques introduced in [14]. However this will effect the dimension of the program register. The study of structural links between locality and parallelism is outside the scope of this paper and demands a further investigation.

In this paper we have constructed a local Hamiltonian which could be programmed through direct translation of one-way patterns based on the coherent implementa- tion of the measurements. We have also showed that the ground state of this Hamil- tonian could be obtained by adiabatic evolution from an easy to construct initial Hamiltonian. Our Hamiltonians are different from the previous adiabatic proofs in a sense that our construction has to prepare both data and program registers in our desired state to keep our construction both adiabatic and programmable. The locality of our Hamiltonian and the ability to perform adiabatic computation to our final state will give us more robustness against decoherence. Moreover the notion of assembly language from the one-way model gives us the ability of standardisation and having more parallel structures with graph theoretical toolkit. There are still many questions to be asked about the hybrid architecture. We will seek the ways to use real measurements besides keeping the system in its ground state, which is

