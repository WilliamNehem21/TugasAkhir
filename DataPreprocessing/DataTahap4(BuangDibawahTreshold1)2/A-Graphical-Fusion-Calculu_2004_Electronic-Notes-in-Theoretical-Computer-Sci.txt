We analyze the relationship between Fusion Calculus and graph transformations defined in the Synchronized Hyperedge Replacement (SHR) style. In particular we show that the underlying al- gebraic structure is the same when the synchronization used in SHR is Milner synchronization. The main difference we see is that Fusion Calculus has an interleaving behaviour while SHR is inherently concurrent. In the paper we introduce the interleaving semantics for SHR with Mil- ner synchronization and show that there is a complete correspondence between the operational semantics of Fusion Calculus and of SHR systems.

We show that Fusion Calculus (with guarded sum and recursion) is in strict correspondence with a subset of SHR. The correspondence is based on the existence in both models of two analogous operators, i. e. a parallel com- position operator for building systems and a restriction operator for declaring local names. Furthermore we recognize close relationships between the respec- tive mechanisms for mobility. The main difference is that Fusion Calculus has an interleaving semantics and allows just one synchronization at each step, whereas SHR is a concurrent model and allows multiple synchronizations. Thus in order to have a complete correspondence we have to force an inter- leaving semantics also for SHR, what we do using a particular set of inference rules. By using the normal inference rules, we have transitions that correspond to many Fusion Calculus steps.

Synchronized Hyperedge Replacement [2,1,3] is an approach to (hyper)graph transformations that allows the definition of global transformations using local productions that describe how a single hyperedge can be rewritten and the constraints that the rewriting imposes on the surrounding nodes. Thus the global transformation is obtained by combining different productions whose conditions are compatible. What exactly compatible means depends on which synchronization model we use. Possible models are for instance the Hoare [7] and the Milner [3] synchronization models. Furthermore the rewriting system also use node mobility, that is during a transformation some references to nodes can be transmitted and corresponding nodes are merged.

