In this paper, we study a few points indicated in the talk which we presented at MFCSIT meeting in Cork. Our study concerns three main areas: Turing machines, cellular automata and hyperbolic cellular automata. The common thread is the quest for small universal devices. It leads from properties belonging to the classical domain up to results on super-Turing computations.

The simulation of the computation of a tag-system by a Turing machine is based on a compact location technique in terms of the length of the program of the simulating Turing machine. This idea comes from Watanabe, in the fifties, see [34]. The idea consists in encoding the program of a tag-system as a string in which the productions are associated to the letters of the alphabet by their order in the string. Productions are marked by a P -delimiter and, inside the encoding of a production, the encodings of the letters are also marked by another delimiter, the l- delimiter. The productions are encoded as mirrors of the codes of the constituting

Cellular automata are a popular model of computation which is used far beyond the community of computer science. The activity of cellular automata from the point of view of computer science is so important that there is now a whole journal devoted to this topic. And a special issue of this journal could be devoted only to results on decidability and undecidability in the field of cellular automata.

in the plane with two states and in the case of the von Neumann neighbourhood. However, there is such a universal automaton, with the same neighbourhood, start- ing from 3 states, a result of Serizawa in 1987, see [31]. Now, with the Moore neighbourhood, two states are enough to construct a universal cellular automaton: it is a result of Berlekamp, Conway and Gay who prove the universality of the famous game of life, see [2].

As indicated at the beginning of the previous section, cellular automata is a very wide world. It is also an expanding universe. Up to some recent time, when people studied cellular automata on a larger support than a line, it was mainly in Euclidean spaces. Mostly, people looked at what happens in the plane. There are a few studies in 3D also due to the capability of cellular automata to simulate 3D diffusion- reaction processes, in particular of gases.

In 1999, cellular automata attacked the hyperbolic plane. This was performed by a paper which I wrote with Kenichi Morita, see [18]. However, if an important tool was found in this paper, a good location system was still missing. I found it in 1999, published in 2000, see [14]. This 2000 paper really opened new avenues. Since this time, more than fifty papers appeared in this new field to which I succeeded to attract a few colleagues.

Hyperbolic geometry arose from a 20 century effort to deduce the famous axiom of parallels of Euclidean geometry from the other axioms. This effort resulted in early 19th century by the simultaneous discovery, by Lobachevsky and Bolyai of the hyperbolic geometry where all axioms of the Euclidean geometry hold except the parallel one. In this geometry, a new axiom holds telling that by a point A out of a line l there are exactly two lines which are parallel to l.

I have three results in this area. One is a cellular automaton in the hyperbolic plane which is weakly universal. It has 22 states and it was published in [8]. Later, I obtained a cellular automaton in the hyperbolic 3D space. It is also weakly universal and it has 5 states, see [16]. This cellular automaton is in some sense a small one. I have also a result on an intrinsically universal cellular automaton in the hyperbolic plane, see [17]. This means that the cellular automaton directly simulates a cellular automaton of the hyperbolic plane.

The locomotive consists of two cells: the front, in green and the rear, in red. The closest neighbours of the cell which implements the switch detect the arrival of the locomotive before it enters the switch. This allows to perform the preliminary changes in order to trigger the change of the selected track once the locomotive leaves the switch.

As announced, in this section we show how hyperbolic geometry gives a new way to obtain super-Turing computations. In most models devised to obtain super-Turing capabilities without using real numbers, people manipulate time in some way. Here, we use the advantage given the geometry for space.

Now, as indicated in [6], let us fix an infinigrid and consider that each cell is an infinigon. Of course, within the frame of computer science, we cannot accept that a cell has an infinite amount of information at its disposal. On the other hand, if a cell knows only a finite number of its neighbours, we get nothing more than the usual Turing power.

