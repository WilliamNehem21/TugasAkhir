Note that (counter)Example 3.9 involves a binary method. Binary methods are already notorious in the theoretical computer science literature on object oriented (OO) programming; see [2]. Some properties of coalgebras, that do not hold for all dialgebras, do hold for all dialgebras without binary methods, including:

Just like algebras provide the basis for algebraic specification, coalgebras have been used as the basis for coalgebraic specification, notably in the experimental specification language CCSL [8,20]. We now consider a notion of dialgebraic specification, defined in exactly the same way. Because of lack of space, we have to omit many details of definitions and proofs.

As for our dialgebras, for the coalgebras in [22] bisimulations turn out to be closed under intersection and composition, but not under union. It would be interesting to see if a result similar to Theorem 3.20, i.e. closure under union for congruences, could be proved for extended polynomial functors.

In addition to this, useful properties of coalgebras that do not hold for arbitrary dialgebras are closure under union for invariants and bisimulations (Lemmas 3.10 and 3.16). The fact that we do not have these closure properties can be traced back to so-called binary methods, which are already notorious in the literature on object-oriented programming because of the problems they cause with subtyping (see [2]). For dialgebras without binary methods we do still have the properties that invariants and bisimulations are closed under union.

Given the duality between algebras and coalgebras it is surprising that, whereas we did come across properties of coalgebras that do not hold for arbitrary di- algebras (namely closure properties for union, Lemmas 3.10 and 3.16), we did not come across (dual) properties of algebras that do not hold for arbi- trary dialgebras. Carefully dualising Lemmas 3.10 and 3.16 might reveal such properties.

