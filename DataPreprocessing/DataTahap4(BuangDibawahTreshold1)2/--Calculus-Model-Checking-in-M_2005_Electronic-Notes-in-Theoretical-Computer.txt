Indeed, the observation was made in [23] where the authors propose to use Maude [5,18] as a verification platform for model checking. Maude is a rewriting system based on rewriting logic. Since rewriting logic was intro- duced in [16], it has been used as a unified formalism for modeling concur- rency [16,17,19] and as a logical framework [3]. Thanks to the expressive power of rewriting logic, it is possible for researchers from various research communities to work within a single formalism.

In the light of the unification of formalisms within rewriting logic, it is perhaps an interesting challenge to ask whether it is possible to perform all three tasks of model verification in rewriting logic. The challenge has been partially answered in [23] where an active network protocol is verified. In [23], the protocol and a property are specified at object level. The authors use a meta-level theory to explore all possible behaviors of the model and check it against the property. However, the result is not satisfactory since only invariant checking is discussed under the proposed framework.

op _/\_   : Formula Formula -> Formula [ comm prec 55 ] . op _\/_   : Formula Formula -> Formula [ comm prec 59 ] . op <>_    : Formula -> Formula [ prec 53 ] .

For our exemplary Kripke structure, there are 100,000 processes in mode wait initially. prop1 specifies whether there will be more than 5 processes in mode critical eventually along some computation path. prop0 is its negation. prop2 asks if there will be more than 4 processes waiting for all computation paths eventually. The most interesting one is prop3 which spec- ifies that the model is deadlock-free.

The present work demonstrates the expressive power of rewriting logic. It shows that Maude can be used as a general framework for model specifica- tion, property specification, and model checking algorithm implementation. However, our work is by no mean complete. In order to compete with formal verification tools, many issues still need be improved.

