In this paper we study the applicability of metric techniques for the develop- ment of an operational and a denotational semantics for a nontrivial language, and for their comparison in a probabilistic setting. We have chosen to mix dis- crete probabilistic choice with the construct of action refinement. In [HVB99] we have indicated how, in a nondeterministic setting, an operational and a de- notational semantics can be constructed, the correctness of the denotational model with respect to the operational one can be established, and, moreover, how a full abstractness result can be obtained, all using metric methods. The aim of this paper is to investigate the flexibility of the metric machinery by combination and adaptation of earlier results. It turns out that indeed the various techniques are orthogonal: replacing nondeterminacy by probability does not affect the proof methods.

The construct of action refinement has been studied by several authors in different settings, mostly in the true concurrency framework. An early full abstraction result is [NEL88] where series-parallel pomsets are used for the modeling. Work in the area of Petri-nets includes the approach of Vogler using interval semi-words (cf. [Vog91,Vog92]). A process algebra for action refinement is proposed in [Ace90,AH93]. Gorrieri and co-workers base their semantics [Gor91,DG95,GGR96] on the causal trees of [DD89,DD93]. Other work on the semantics of action refinement includes [CS95,Ren93]. A metric interleaving semantics is presented in [BV94].

There are no nondeterministic constructs in the language Lpr because the presence of both nondeterminism and probability in the same language cre- ates several modeling issues (see, e.g., [Har98,HV99a,Mis00]). The presence of action refinement does not seem to influence the extension of a probabilistic language to a language containing both nondeterminism and probability. The approach of [Har98] can likely also be used to extend the language Lpr with nondeterministic choice and parallel composition. Full abstractness, however, is not dealt with in [Har98]. To obtain full abstractness for parallel compo- sition with synchronization a more complex approach using failure sets, also exploited in [HVB99], should be used. At present, it is an open question whether failure sets can be easily combined with the probabilistic concepts used in this paper.

In this section we introduce the process language Lpr and present its opera- tional semantics 0. The model 0 will serve as a point of reference for our understanding of Lpr and for the semantical considerations in later sections. We start off with the syntax for Lpr .

