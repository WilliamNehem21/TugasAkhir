However, the issue becomes more complex with the continuing appearance of new syntactic and computational paradigms dictated by the everchanging world of computing. Examples include probabilistic, timed and hybrid systems, ones with global or local state, name passing, process passing, and stochastic systems. All these features can be described in some forms of structural operational semantics. Arguably though, the treatment of these forms in the classical TSS framework is rather superficial, as it does not take into account the semantic structure of transition systems involved. As a result, the existing approaches to checking whether semantic descriptions are well behaved, are hard to adapt to these new paradigms; instead one usually needs to rework the old solutions from scratch in each case.

SOS will hopefully be better prepared for future changes in the world of computing. The basics of such a theory were proposed by Turi and Plotkin in [40]. Its beginnings lie in the coalgebraic account of transition systems (see [17] for a gentle introduction and [38] is a good reference), where the notion used to classify various kinds of processes is that of behaviour, modelled as a functor on a category and formally representing the vague concept of computational paradigm. Combined with the classical algebraic approach to syntax, these techniques lead to the development of bialgebraic semantics of processes, which turned out to generalise and explain

In this section, the framework of bialgebraic semantics is presented together with some results that have been obtained through its use. To appreciate the following development, the reader is expected to be familiar with the basics definitions and techniques of structural operational semantics (see [1] for a reference). Bialgebras are defined in the language of category theory, so familiarity with basic notions such as category, functor and natural transformation is also recommended (the first chapters of [2,30] are good references).

Both GSOS and safe ntree formats guarantee bisimilarity to be a congruence on the induced LTS. An important contribution of [40] was to show that these congruence properties can be proved on the abstract level of distributive laws, and thus they are immediately translated to SOS frameworks based on different notions of syntax and behaviour. Several applications of this result, together with some other work on bialgebraic semantics published so far, are mentioned in the remainder of this section.

In [40], natural transformations of the type (4) and (5) are considered as special cases of the more general notion of a distributive law of a monad over a comonad. In [28,29,37], various types of distributive laws are studied on the abstract, cate- gorical level. In [4], different kinds of distributive laws are studied and related on the concrete example of LTSs; also a complete proof of one-to-one correspondence between abstract GSOS and concrete GSOS specifications is included there.

In [18,19], the same framework is applied to processes with timed transitions. Congruence results regarding time bisimilarity are proved, and a congruence format for the case of discrete time is derived. In [20,21], the combination of timing with action is studied more carefully, with insights on combining different behaviours to obtain a modular account of semantics.

