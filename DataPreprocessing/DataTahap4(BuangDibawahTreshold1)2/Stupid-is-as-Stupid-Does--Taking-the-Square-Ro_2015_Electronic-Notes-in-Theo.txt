Floating-point (FP) arithmetic is seen as intricate because too few people have sufficient knowledge to understand how it works. For people having been only trained with mathematics, facts such that (x+y)+z may be different from x+(y+z) for certain values or the fact that there exists x such that x /= 0, buxt2 = 0 is beyond comprehension. This is the reason why mathematical formulas are most of the time programmed as they stand in mathematical textbooks even if this may not be a good idea [1]. The main shortcoming is the limited precision: as the exact mathematical result cannot be exactly represented, it has to be rounded to the

Proof. A key point is the fact that u is not a power of the radix. Then, its predecessor has the same exponent, and the same ulp. This fact takes about half of the proof. It relies on the fact that the FP format is floating-point with an unbounded exponent range.

Another question is if this still holds when using rounding to nearest, ties away from zero [6]. The answer is yes as no mid-point behavior is used. The bigger problem is that, if we want to express this property using any tie on any rounding, we must quantify on the 5 roundings that appear in the last theorem, which is cumbersome. If directed roundings are used, the results do not hold anymore.

