In model-based testing, it is necessary to use a formal model to specify the system specification, and to generate test cases according to a given test criterion. Two kinds of models that can be used to specify the system under test are finite state machines(FSMs) [1] and extended finite state machines(EFSMs) [2]. The FSM is consisted of a finite set of states and transitions. A transition in FSM includes four parts: entering state, exiting state, input and output. FSM can only model the control part of the system. EFSM extends the FSM with variables. The transitions in EFSM can also have predicate(guard condition) and operation(assignment), so the EFSM can specify both the control part and the data part of the system. Because EFSM can specify the data part of the system and the aim of this paper is to generate test data for the test cases get from the formal model, we choose EFSM to model the system under test.

test data satisfying the constraint. Search-based method is similar to constraint- based method, it also needs to get the path constraint firstly. The difference is that search-based testing converts the test data generation into function optimization, and the individual with best fitness(fitness is 0) got by search algorithm is as test data. This function optimization can be solved by metaheuristic techniques, like genetic algorithm, ant colony and particle swarm optimization.

Symbolic execution [17] is a method to analyze the program statically. It uses symbolic values instead of real values to execute program, and the result is expres- sions over symbols. It is useful to understand the relationship between inputs and outputs.

Genetic algorithm(GA) is a kind of randomized method evolved from biological evo- lution laws. It has parallel and global optimization searching capability, can obtain and guide the optimized search space automatically and can adjust the direction of searching adaptively. These properties of genetic algorithm have been widely used in combinatorial optimization, machine learning and other fields. Nowadays, it has been applied into software testing, especially in search-based software testing.

Search-based software testing translates software testing problem into optimiza- tion problem. In search-based testing, in order to generate test data for EFSM paths, we need to compute the symbolic expression for each path using data flow dependence analysis, and then we use genetic algorithm to search the optimal so- lution for the symbolic expression which is viewed as a function to be solved. The test data correspond to the individuals. First, we need to encode the test data using the encoding mechanism provided by genetic algorithm. The encoding of the

In our method, the guard conditions on the transitions in the path are not represented as nested IF statements but as parallelism form. And the guard con- dition linked by operator AND is also represented as parallelism form, not nested IF form. The guard condition connected by operator OR is splited into separate transitions, and the fitness of the guard condition is the minimum fitness among these transitions.

Represent the path constraint using parallelism IF statements. The path constraint is combined of the guard condition on each transition linked by AND operators. According to our method, these guard condition are represented as parallelism IF statements, and the conditions in each guard condition linked by AND operators are also represented as parallelism form, but each guard condition linked by OR operators are splited into separate transitions, and the fitness of the guard condition is the minimum fitness among these transitions.

