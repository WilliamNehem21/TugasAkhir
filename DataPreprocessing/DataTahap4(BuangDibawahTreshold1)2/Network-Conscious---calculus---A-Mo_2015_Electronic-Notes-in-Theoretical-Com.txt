There are two types of names: sites, which are the nodes of the network, and links, named connectors between pairs of sites. Sites are just atoms, e.g. a, links have the form lab, meaning that there is a link named l from a to b.

Section 2 of this paper is devoted to a recapitulation of NCPi syntax and se- mantics. The main contribution is Section 3 where, in order to demonstrate the expressive power of our language, we present a NCPi model of the p2p architecture Pastry [16]. This model has been devised in the context of the FP7 Autonomic Service-Component Ensembles (ASCENS) project, where the routing functionali- ties of Pastry are employed in a cloud-computing case study. Details can be found in [18, Chapter 6].

The free names fn(p) are defined by recursion as expected. We briefly describe some interesting cases. If lcd is not argument of a top level restriction or input binder in p, namely p is of the form ablcd.pj or lcd.pj, then fn(p) includes {lcd, c, d}; otherwise, lcd is bound but its endpoints may be free, for instance fn((lcd)pj) =

One important property of Pastry routing procedure is convergence: the message eventually gets to its destination. This property is stated [16, 2.2], but only in informal terms. Here we provide a formal, mathematical account of it, in order to prove the correctness of our model. Let x, y two identifiers. We define the ring distance dr between x and y as the number of identifiers between x and y on the ring. Formally, if I is the size of the space of identifiers, we have

