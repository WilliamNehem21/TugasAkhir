If a rewrite-based inference system is guaranteed to terminate on the axioms of a theory T and any set of ground literals, then any theorem-proving strategy based on that inference system is a rewrite-based decision procedure for T -satisfiability. In this paper, we consider the class of theories defining recursive data structures, that might appear out of reach for this approach, because they are defined by an infinite set of axioms. We overcome this obstacle by designing a problem reduction that allows us to prove a general termination result for all these theories. We also show that the theorem-proving strategy decides satisfiability problems in any combination of these theories with other theories decided by the rewrite-based approach.

Most state-of-the-art verification tools rely on built-in satisfiability procedures for specific theories. These satisfiability procedures can be quite complicated to design and combine, and significant effort is devoted to proving them correct and complete, and implementing them. A new approach to defining satisfiability procedures was introduced in [3], where the authors showed that a sound and complete first-order theorem-proving strategy can be used to solve satisfiability problems for several theories of data structures. The idea behind this approach is that since such a strategy is a semi-decision procedure for first-order validity, if one proves that it terminates on a presentation of the theory of interest T and any set of ground literals, then it is a decision procedure for T -satisfiability. In [3], this idea was applied to a standard inference system, the superposition calculus SP, and several theories, including those of arrays and possibly cyclic non-empty lists.

Since most verification problems involve more than one theory, a significant ad- vantage of an approach based on generic reasoning is that it makes it conceptually simple to combine theories, by considering the union of their presentations. The notion of variable-inactive theories appeard in [1], along with several experimental results that showed the practicality of the rewrite-based approach. This variable- inactivity condition guarantees that SP terminates on a combination of theories, provided it terminates on each individual theory. Thus, it was shown in [1] that an SP-based strategy is a satisfiability procedure for any combination of the theories considered in [3] and [1].

algorithm is based on a multi-sorted logical framework and solves 7 -decision prob- lems for several recursive data structures that may be mutually recursive, each of which may include several constructors. This algorithm uses a combination of the techniques of [10,11]: as in [10], it performs congruence and unification closure, and it handles multiple constructors with a type completion as in [11]. The algorithm is presented as an elegant combination of standard inference rules for congruence closure (see, e.g., [5]) and unification closure (see, e.g, [7]), with more specialized inference rules for type completion or the detection of cycles. In particular, the infer- ence rules for type completion make this procedure more flexible and less expensive than that of [11].

Proposition 4.7 Let M = (D, I) be a model for a set S containing l occurrences of selectors, and let p be an M -path of length at least l + 1. Then at least one of the elements appearing in p is selector-free in S.

A main issue we plan to investigate is complexity, since the basic procedure is exponential. A linear algorithm for such structures was obtained in [10], but it excludes uninterpreted function symbols. The setting of [8] includes uninterpreted function symbols, but the authors gave a polynomial algorithm only for the case where k = 1 (the theory of integer offsets). We intend to investigate making the complexity of the rewrite-based procedure dependent on k, and improving the bound for k = 1.

