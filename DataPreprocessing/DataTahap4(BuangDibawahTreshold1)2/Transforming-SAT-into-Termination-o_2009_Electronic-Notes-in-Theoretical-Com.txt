Termination of term rewrite systems (TRSs) is an undecidable property [12]. Never- theless, nowadays powerful (incomplete) algorithms exist that can prove termination of many rewrite systems as can be witnessed by the international termination com- petition. 5 In 2004 Kurihara and Kondo were the first who encoded a termination method in propositional logic [19] and in 2006 the first tools (Jambox 6 and Match- box [21]) employed SAT-solving techniques in the competition. They surprised the community by the gains in power and speed. Their success was mainly due to the so-called matrix-method [8] which can effectively be implemented using SAT- solvers. But even for very simple and ancient methods like the lexicographic path order [13,6] (LPO) the recent development in the SAT community allows way faster

implementations [4] than some years ago. A similar speedup [22] is achieved for the Knuth-Bendix order (KBO) [14]. This is remarkable because KBO orientability is known to be decidable in polynomial time [18] whereas SAT is NP-complete [5]. In other words, the sophisticated algorithms for solving the computationally harder (unless P = NP) problem SAT outperform the dedicated methods for KBO [7,18]. In this paper we address the question whether a similar result also holds when translating the NP-complete SAT problem into the undecidable termination prop- erty of TRSs. However, the experiments reveal that at least for our translations the results are as expected. Concerning the transformation from SAT to termina- tion, the dedicated SAT approaches perform much better. Even further, only the most simple propositional formulas produce TRSs which can be shown terminating by state-of-the-art termination provers. Therefore the translations can be used to generate a large set of difficult termination problems automatically.

