This paper reports characterization of one dimensional 3-neighborhood periodic boundary cellular automata (CA). It targets characterization of CA rules for efficient synthesis of reversible CA. The concept of reachability tree, as it has been proposed in [5,6,7], is redefined to classify the CA rules that can form a reversible CA. Such classification also enables synthesis of a reversible periodic boundary CA in linear time.

Since its inception [15], the homogeneous structure of Cellular Automata (CA) has been employed for modeling physical systems. The CA structure is signifi- cantly simplified during 1980s [16]. An 1-dimensional structure of CA, each cell having two states (0/1), has been proposed with the target to efficient analysis of CA state space. The uniform 3-neighborhood (self, left neighbor and right neigh- bor) dependency of the CA cells introduces the structural modularity. Though, it has been shown [17] that the 1-dimensional 3-neighborhood CA exhibits excellent

A number of researchers have set their attention to hybrid CA [3,4,8] since 1980s. Specially in V LSI domain [4], the 1-dimensional hybrid CA have gained a wide acceptance. A detail characterization of hybrid CA and its applications in V LSI domain [2,8] have been reported in [4].

In spite of its wide variations, the reversible CA was the main focus of CA research. The interesting properties of reversible CA had attracted researchers for a long time to model a number of applications in hydrodynamics, dynamical systems, heat conduction, wave scattering, nucleation, dendritic growth, physical system modeling, etc. [14]. The dynamical properties of reversible cellular automata were investigated in [9,10]. For V LSI applications, the reversible linear/additive CA structure had also been developed [4].

The issue of reversibility in CA states was addressed in [1,13]. In this work, we propose an alternative method to characterize reversible CA. The proposed characterization facilitates efficient analysis and synthesis of this class of CA. The set of 256 3-neighborhood CA rules are classified based on its potential to form the reversible CA. This effectively enables synthesis of such a CA in linear time.

The paper is organized as follows. The following section provides the prelimi- naries of cellular automata. Section 3 introduces the concept of reachability tree. Whereas Section 4 identifies the reversible CA, and Section 5 synthesizes reversible CA utilizing the structure of reachability tree. The rules that take part in forma- tion of reversible CA are identified in Section 6. The classification of such rules for efficient synthesis of reversible CA are reported in Section 7.

A Cellular Automaton (CA) consists of a number of cells organized in the form of a lattice. It evolves in discrete space and time. Each cell of a CA stores a discrete variable at time t that refers to the present state of the cell. The next state of the cell at (t + 1) is affected by its state and the states of its neighbors at time t. In this work, we concentrate on such 3-neighborhood (self, left and right neighbors) CA, where a CA cell is having two states - 0 or 1. Therefore, the next state St+1

to this RMT are 1 for Rule 90 and 75, and 0 for Rule 150. The characterization reported in the following section is based on the analysis of RMT s of the CA rules. The next state functions fis for the rules 90 and 150 employ XOR logic. These rules are called linear rules. On the other hand, rule 75 is a non-linear one. Out of total 256 rules, 14 employ only XOR/XNOR logic. These are referred to as linear/additive rules. Other rules employ nonlinear logic functions (AN D, OR,

Proof. Since the reachability tree for a reversible CA is balanced, each node has a left child (0-edge) and a right child (1-edge). It is obvious from Theorem 4.2, if a child is resulted from k number of RMT s, another child is also resulted from k RMT s. Hence the node is balanced over its RMT s.	 

Synthesis of reversible CA is the reverse process of analysis/ identification reported in the earlier section. The algorithm SynthesizeReversibleCA 1 proposes an efficient synthesis scheme. Input to the algorithm is n, the number of cells/ size of the CA to be synthesized, and the output is an n-cell reversible CA. It determines the (i+ 1)th cell rule of the reversible CA through inspection of RMT s of the rule Ri, selected for the CA cell. The RMT s are set in such a way that each edge of the reachability tree is resulted from four RMT s (in some special cases, two or one RMT ) as guided by Theorem 4.2.

Proof. Since the sibling RMT s (Definition 3.1) are associated with the same node in the reachability tree and there are 4 sets of sibling RMT s (0 & 1, 2 & 3, 4 & 5, and 6 & 7), 44 combinations of RMT s are possible for the nodes. However, out of these a number of combinations are the same. For example, the RMT combinations

Lemma 7.2 There exists a node at any level of reachability tree that dictates the RMT set {0, 1} is to be balanced iff there is another node for which RMT set {2, 3} is balanced. Similarly, there exists a node at any level of reachability tree that dictates the RMT set {4, 5} is to be balanced iff there is another node for which RMT set {6, 7} is balanced.

since the reachability tree is for a reversible CA. The reverse is also true. Hence the proof. Similarly, it can be proved that, a node dictates the RMT set {4, 5} is to be balanced iff there is another node for which RMT set {6, 7} is balanced. 

3]. If the node is of type N1 =, then its one possible parent is P1 =[0, 1, 2, 3, 4, 4, 5, 5]. RMT s 0, 1 and 4 of P1 are grouped with the same RMT value (d, d = 0/1) to form the N1 =. That is, RMT s 2, 3 and 5 are also grouped with d'. It implies, there is another node of type P2 =[0, 1, 2, 3, 6, 6, 7, 7] at the same level of P1 (Lemma 7.2). To make P2 balanced, RMT s 2, 3 & 6 or RMT s 2, 3 & 7 are to be grouped with d'. Therefore, one child of P2 is either [4, 4, 4, 5, 5, 5, 6, 7] or [4, 5,

and the RMT s {2, 3, 6, 7} as 1. Therefore, the RMT s are grouped as (0, 1), (2, 3), (4, 5) and (6, 7). Each edge of the nodes is resulted from any one of these groups. Hence two edges connecting the node having RMT s {0, 1, 2, 3} with its children are resulted from (0, 1) and (2, 3). Therefore, the two children (for next level) of

