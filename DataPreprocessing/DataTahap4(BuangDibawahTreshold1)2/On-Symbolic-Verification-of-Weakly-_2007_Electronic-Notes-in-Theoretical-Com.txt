We consider the verification problem of a class of infinite-state systems called wPAD. These systems can be used to model programs with (possibly recursive) procedure calls and dynamic creation of parallel processes. They correspond to PAD models extended with an acyclic finite-state control unit, where PAD models can be seen as combinations of prefix rewrite systems (pushdown systems) with context-free multiset rewrite systems (synchronization-free Petri nets). Recently, we have presented symbolic reachability techniques for the class of PAD based on the use of a class of unranked tree automata. In this paper, we generalize our previous work to the class wPAD which is strictly larger than PAD. This generalization brings a positive answer to an open question on decidability of the model checking problem for wPAD against EF

In order to extend the modeling power of PRS, one approach is to add syn- chronization by rendez-vous (`a la CCS), which leads to a Turing powerful model called synchronized PRS [21]. Similarly, PAD can be extended to synchronized PAD (which is also a Turing powerful model). Approximate analysis algorithms for these models using abstraction techniques have been proposed in [21].

Another approach for enhancing the modeling power of PRS (and PAD) consists in adding global control states. The new models, called sePRS [11], can be seen as parallel product of a PRS with a finite-state automaton representing a global control. Obviously, sePRS are Turing powerful since they allow communication between recursive parallel processes through the global control state. However, if the structure of the control automaton is weak, which means that all its loops are self- loops, then it can be proved that the obtained models, called wPRS, have a decidable reachability problem [12] (the proof employs decidability of the reachability problem for Petri nets). Similarly, if we add control states to PAD processes, we obtain Turing powerful models, but the extension of PAD with weak control automata leads to models, called wPAD, having a decidable reachability problem, and interestingly, which can be proven to be strictly more powerful (w.r.t. strong bisimulation) than PAD [13].

In this section, we solve the problem of computing both reachability sets and 1- step reachability sets for PAD and wPAD systems. Computing reachability sets is difficult for PRS in general. One of the reasons is that already the reachability sets of Petri nets are not semilinear. In [2] we show that the reachability sets of a given canonic PRS system R can be effectively computed provided the underlying multiset rewrite system R  is effectively semilinear. This is, for example, the case of canonic PAD systems due to the result of [6] concerning context-free multiset rewrite systems (BPP processes).

nets in order to compute overapproximations of reachability sets for general canonic PRS systems. If we use this approximative algorithm for canonic PRS instead of exact algorithm for canonic PAD system in Theorems 5.2 and 5.4, we get an algo- rithm computing overapproximations of reachability sets for general wPRS systems. Note that 1-step reachability sets for wPRS systems can still be computed precisely as Theorems 5.2 and 5.4 hold even for (w)PRS if we restrict our attention only to 1-step reachability sets.

