identifying them in their early stages. Previous literature research did not provide a reliable dataset on the entire lifecycle of APT attacks, which could enhance the efforts of detecting and mitigat- ing them. Furthermore, due to the limitations of the current approaches to cover this topic, APT attacks are still a problem fac- ing security entities today where the custom Penetration Test (PT) and current detection methods are not capable of mitigating such attacks [1].

Much research has been conducted to detect and mitigate APT attacks using Artificial Intelligence (AI). The success of these detec- tion methods relies significantly on the datasets used. On the other hand, APTs have been using AI to intelligently create new and more sophisticated attack methods making it even more challenging to detect them [2]. Therefore, should be a new approach imple- mented to address these issues.

The motivation for this article comes from enhancing and proposing an effective detection method for APT attacks using var- ious Machine Learning (ML) classifiers based on known patterns used by APTs in their attacks. To understand their intentions and possible maneuvers, there is a need to analyze different APT lifecy- cles comprehensively. This could help mitigate vulnerabilities exploited by such attacks and detect an attack early on before succeeding.

The primary purpose of this study is to produce a dataset utiliz- ing CTI to aid in the development of the PT method and detection model. In addition, propose a model to detect APT attacks using ML and implement a comparative analysis to evaluate the approaches in this research work to verify the results achieved. The main con- tribution of this research work is to propose a model to detect APT attacks based on behavior using ML utilizing a new dataset created in this study.

could discover it. The attackers could use legitimate tools on the target network to exfiltrate the data; this is called the living off the land technique. APTs use this technique to move around and execute undetected commands on a compromised network using the same tools and software used by the users on the compromised network.

The process of ML consists of two phases: training and classifi- cation. In the training phase, the goal is to construct a model cap- able of predicting or detecting hidden features and characteristics of the data. The second phase, classification, is the phase in which the model controlled during the training is used on new data sam- ples to perform a specified task (e.g., clustering) [5].

Many kinds of research have been implemented in recent years to use ML algorithms in detecting APT attacks. An intrusion detec- tion [6] was used by applying a hyper graph-based genetic algo- rithm for parameters and feature selection using SVM on the NSL-KDD dataset. The suggested method achieved a 96.7% accu- racy. It was better than other SVM classifiers, Bayes net, and RF. Their research evaluation was based on the NSL-KDD dataset, which has some issues in it. This dataset used only solved some problems in the older version of KDD CUP 99, meaning that some problems still exist that would affect the performance and evalua- tion of the classifiers. Also, the results achieved were from the

Anomaly detection using graph databases and ML was proposed by [8]. Their approach was to implement a practical solution to rapidly analyze real-time data and detect any breach or malicious activity. The ML classifier that used anomaly detection was SVM. They achieved an accuracy from 95% to 98%. The authors stated that in a real-world scenario, there would be much more log data to filter through; thus, the SVM used in this research is known for not working very well with high volumes of data due to the per- formance. Also, it does not work very well when the data has a lot of noise, which in this case, when collecting real-time data, there will be plenty of noise that will hinder the detection process.

The combination of recognition patterns and ML to resist and mitigate any attack was used by [10]. A dataset was used with over 1 million PCAP cases to analyze and evaluate their approach. The highest accuracy was achieved by the RF classifier. The limitation of this research is that it collected the data over a week, which could not be very conclusive when facing an APT attack. APT attacks are very persistent and take a long time to execute the attack, so one week of data collected would not serve the whole purpose of detecting these types of attacks.

An effective intrusion detection system using XGBoost classifier on the NSL-KDD dataset was presented by [11]. It achieves the best results based on several metrics: accuracy, precision, and the con- fusion matrix. It used all 41 features of the dataset in its model. It compared the proposed model with several ML classifiers, where it reached the highest accuracy of 98.7%. Their research was imple- mented on a dataset which does not cover any APT attacks.

Early warnings for an APT attack were presented by [12]. They used the NSL-KDD dataset. They used the principal component analysis approach to reduce the size of the dataset and improve the detection accuracy. The highest accuracy reached was 97.2% by the SVM. By relying on the open-source NSL-KDD data set, the authors could have affected the performance of their classifiers. This dataset is known for having some issues concerning the final results. There are also 41 features in this dataset, some of which have no values. Instead, the authors stated they used 122 features in their testing process. They could have added their features, potentially affecting the results.

A novel deep learning stack model to detect APT attacks was presented by [13]. They stated that they must use the raw network data in the detection process to capture such attacks. It proposed that one must identify the most significant factor in the attack to aid in detecting an attack, which is communications when it comes to APT. Moreover, must log the network stream to identify the

ML algorithms, namely Naive Bayes, SVM, and J48, have been used to detect and classify intrusion using the KDD-99 [14]. They selected their features based on information gained. Using the Ada- Boost as a combo with the J48, it achieved an accuracy of 97%. The authors evaluated their approach to the KDD99 dataset. This data- set has many issues that could highly affect the performance of the detection process[15](Tavallaee et al. 2009).

In [17] presented a cyber-kill chain approach for detecting APT; they created a data-driven approach for detecting APT stages uti- lizing the cyber kill chain using a public available APT dataset. The Naive Bayes classifier produced the best performance result of 91.1 %.

In [18] highlighted ML classifiers for traffic monitoring to iden- tify the malicious activity as part of a network intrusion detection in software-defined networks. Three distinct traditional and mod- ern tree-based ML classifiers, RF, DT, and XGB, were used to show the detection mechanism. Regarding training and testing, the NSL- KDD dataset is employed; this dataset is regarded as a benchmark for numerous state-of-the-art intrusion detection approaches. They achieved an accuracy of 95.9%. However, they implemented their research on a dataset that does not cover any APT attacks.

In conclusion, the previous studies did not introduce a full APT attack lifecycle dataset to detect and mitigate APT attacks. There- fore, to implement a successful and an effective detection method- ology using ML, the dataset used must be collected over a long period of time to correlate as much behavior as possible for an APT. This correlation will focus on TTPs and IOCs used by known APTs around the world to collect valuable logs that could be intro- duced to a ML algorithm to make the detection process very effec- tive with low error rate as possible. The open source datasets used by the researchers in recent years do not cover a full APT lifecycle, making the detection process not as dependable as it should be.

The proposed detection approach has several stages. The first stage is data collection and pre-processing; the second stage is dataset classification. Finally, an ML detection model is used to test the dataset. The APT detection mechanism and main pathway are as follows:

The goal of the proposed approach will be a multiclass classifi- cation problem where the model will receive pure data labeled as normal, reconnaissance, initial compromise, lateral movement, and data exfiltration. The objective is to classify normal traffic as nor- mal, and the other labels will be considered attacks. The attacks represent the stage the attacker has achieved in his attack. For example, if the log is deemed a lateral movement, the attacker is in the 3rd stage of the attack.

The data collection technique implemented in this research work is based on packet capture. APT attacks are conducted using their TTPs and IOCs to build such a dataset. Exercising APT group techniques will also help researchers analyze and comprehend them. This research spent four months collecting data on real- world cyber network architecture. And provided a base of users with user/admin credentials early in the collecting phase to simu- late regular/normal traffic. During this time, the company ran as

Several resources were used to acquire data. First, CTI free and commercial sources were used. CTI provides excellent insight into recent APT attacks, IOCs, and TTPs. Second, SIEM solutions were used to correlate APT attack data and behaviors. This stage utilizes ArcSight Security Information and Event Management (SIEM) and Moloch (Arkime).

First, the entire dataset will be normalized before adding data mining methods to the dataset to achieve better outcome. Data pre-processing involves removing duplicates, missing values, and normalizing data. This research used the complete case analysis method to handle missing values.

Feature selection is considered to be one of the essential phases in ML, as it could significantly affect the efficiency and perfor- mance of an ML model [20]. However, before implementing any feature selection techniques, one further step of data cleaning is performed. Four features were removed: flow ID, source IP, desti- nation IP, and timestamp. These features could affect the classifica- tion process by making the classifier biased towards them and data cardinality. In some previous research, the destination port is also removed from the data. But since this research deals with APT attacks and data exfiltration, this feature must be included.

Once filtered out all unwanted features, reduced the newly formed features to 65 features in total. The inclusion of all features in a dataset may cause dimension problems. Large feature sets lead to overfitting and complexity. To reduce the dimensionality in this research, six features selection methods were chosen considering their popularity, effectiveness, and complexity reported in previ- ous interrelated research [22,23]. The methods used included ANOVA, chi-square, Forward Feature Selection (FFS), Recursive Feature Selection (RFS), XGB, and Lasso. In addition to using the whole subset of features in one of the experiments.

Four machine-learning classifiers were investigated in this research: RF, DT, XGB, and KNN. All the feature selection and clas- sification methods were implemented using scikit-learn package in python. A cross-combination approach was utilized to evaluate feature selection and classification efficiency. Each classification algorithm was combined with all six feature selection methods.

In this work, an APT detection approach using ML is proposed utilizing a newly created dataset. To evaluate the effectiveness of the proposed model and the new dataset, a comparison with sev- eral machine learning algorithms was conducted. In addition, the built dataset was applied to a previously used approach to test its validity.

Firstly, the proposed model was compared to three well-known classifiers, namely RF, DT, and KNN. For a fair comparison, the number of features applied for each classifier will be the same. The XGB was able to achieve the best results using the least num- ber of features are12, when applying the ANOVA features selection method. Therefore, for this evaluation 12 features for each of the other classifiers for comparison will be used. The measurements are evaluated by applying the confusion matrix, Accuracy, Preci- sion, Recall, and F-Measure.

Secondly, apply the created dataset to a model presented in pre- vious research [11]. They built a model by employing an XGB clas- sifier on the NSL-KDD dataset. The parameters used in their model were learning rate set to 0.1, max depth was set to 3, n-estimators was set to 100, seed or random state was set to 7, and batch size to

10. The entire dataset with all 65 features was applied to their model. The results of this evaluation were accuracy 98.7%, preci- sion 98.5%, recall 98.3%, and F1 measure 98.5%. It is clear from these results that the created dataset is valid and can be used for APT attack detection.

In the case of accuracy, for the proposed model, the accuracy with the best rate is 99.89%. In comparison, the KNN could oust the least percentage of accuracy, 96.59%. RF scored the second- highest, 98.75%. Finally, 97.65% was obtained by DT, 98.7 was achieved by Dhaliwal, Nahod and Abbas approach (2018), and

racy. In other words, the proposed model is not better than one with a lower predictive ability to classify APT attack traffic from normal traffic. To give a better answer, one needs to know about the recall, precision, and f-measure. However, accuracy, in general, informs us instantly whether a model is being properly trained and how it generally performs. This ratio indicates the compatibility and appropriateness of the components of the model.

Based on the previous discussions and results regarding the proposed model. From the 99.89% accuracy ratio obtained, it is concluded that it has a high rate of correct predictions to classify APT attacks from normal traffic. Additionally, the model was prop- erly trained, and its arguments and components were tuned and selected appropriately. Concerning 99.89% and 99.89% precision and recall ratio, respectively, it is presumed that the proposed model has a low FPR and FNR. In addition, the proposed model is designed and tuned with best-fit criteria. Finally, the results obtained by the proposed model are verified. This helps us decide

Regarding the Dhaliwal approach, the accuracy of their model was less than the proposed model at 98.7% when applying the same dataset, which was due to the reason of changing the hyper- parameters of the XGB, which led to lower results. As per the error rates for the proposed model and the other methods, the proposed model achieved the lowest rate at 0.11%, RF at 1.25%, DT at 2.35%, KNN had 3.41%, and finally, the Dhaliwal approach achieved 1.3%.

As mentioned before, the proposed model is based on the XGB classifier was able to record the highest results using the least number of features. XGB was primarily developed for performance and efficiency by employing gradient boosting to decision trees. It represents the process for applying boosting to machines, which was introduced by [27] and has since been adopted by many devel- opers [11]. For tree boosting methods, XGB improves in maximiz- ing memory and computing resources. It has the advantages of improving the algorithm and modifying the model, and it can also

be used in a computing environment. Three types of boosting can be done by the XGB regularized, Gradient, and Stochastic boosting. It is very efficient in lowering computation time and making the best use of memory resources. It can handle missing and null val- ues, performs concurrent tree build, and has the distinct ability to execute boosting on data that has already been included in a clas- sifier [11,18].

Researchers have long strived to identify the best classification method by comparing different algorithms. Compared to tradi- tional Boosted models, XGB enhances performance by a factor of ten, making the classification model stronger because speed is vital in a network attack detection model. In past years, researchers have explored XGB and other classification methods on datasets to discover the best classification model. XGB has the edge over the different categorization algorithms based on the results [11,21].

In this research work, an approach to detect APT attacks was presented using a newly built APT attack dataset. The dataset was deployed into a proposed ML model to detect APT attacks based on different attack types. Five types of data were collected, namely, normal, reconnaissance, initial compromise, lateral move- ment, and data exfiltration. Each data type represents a stage that the attacker might have gotten to. The APT attack ML detection proposed model was built over the XGB classifier with the ANOVA feature selection method. An outstanding performance was achieved with a detection accuracy of 99.89% using only 12 fea- tures out of the 65 features in the dataset. The proposed model was compared with other known ML classifiers, which proved superior to them based on the results gained.

