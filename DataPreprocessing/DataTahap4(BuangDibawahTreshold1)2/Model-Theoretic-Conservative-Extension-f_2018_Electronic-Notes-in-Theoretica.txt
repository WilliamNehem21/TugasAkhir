This section introduces the language of polymorphic higher-order logic (HOL), def- initional theories and their semantics. We follow the notation and naming conven- tions of [6], to which we refer the reader for additional motivation and examples. We do not describe the deductive system of HOL [10], since it is not relevant in the context of this paper.

Moreover, the counterexample given in Section 1 demonstrates that it is in gen- eral not sufficient to alter the interpretation of u in Mj. There may be other types or constant instances that depend on u (or on one of its type instances), and their interpretations may need to be adjusted as well. Our main result is that these are the only types and constant instances whose interpretation may need to change.

Proof. Let D be a well-formed definitional theory. Clearly, the empty theory has a model. (This can be obtained, e. g. by interpreting non-built-in types as { }, and non-built-in constant instances using choice, cf. the model construction given in [6].) Moreover, every subset of D is a well-formed definitional theory. The corollary immediately follows by induction over |D|, which is finite.	2

and has been formalised and verified using HOL4 by Kumar et al. [4]. However, in contrast to Isabelle, which supports ad hoc overloading natively in its logic, other theorem provers for higher-order logic offer support for overloading only as syntactic sugar, through extensions of parsing and pretty-printing.

Model-theoretic conservativity has a proof-theoretic (syntactic) counterpart. Roughly, an extension is proof-theoretic conservative if it entails no new theorems in the original language. In other words, every formula of the original language that is a theorem in the extension is already provable in the original theory. Adapting this notion to definitional theories, we conjecture that if Dj is an extension of D such

