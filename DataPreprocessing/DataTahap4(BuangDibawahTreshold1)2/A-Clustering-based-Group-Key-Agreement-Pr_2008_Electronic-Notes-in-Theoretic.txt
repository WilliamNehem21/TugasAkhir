In ad hoc networks, every pair of nodes cannot reach each other within one hop. This issue of restricted topology, what H. Shi and M. He [18] call the neighbours communication problem can be alleviated by a careful choice for the graph structure that can be found in an arbitrary topology. A key agreement protocol using a

Clustering algorithms differ in what types of clusters they produce. Many clus- tering algorithms choose special nodes, cluster-heads, that take care of the cluster formation and later of the maintenance of the cluster [1], sometimes routing too. Cluster-heads are not always necessary, some clustering protocols do not use them at all. Gateways are border nodes that relay messages from one cluster to another. If clusters are allowed to overlap, a gateway usually belongs to more than one clus- ter. Some clustering algorithms form cliques, i.e., clusters where every node is at a one hop distance from every other node [13].

pants. This cannot be done without the help of a previously agreed-on secret that is used in encrypting the new session key. There is also a method called key pre- distribution, whereby the key is completely determined by the previously agreed-on initial key material.

An active adversary should not be able to mislead honest participants as to the final outcome. A compromise of past session keys should not allow a passive adversary to find out future session keys and should not allow impersonation by an active adversary in the future. Independence of long term and short term secrets is important when there is an additional long term secret present, for example, private keys of a public-key algorithm or passwords used in authentication.

The key structure in TGDH is very general, it can be used to describe the key structure of any bipartite group Diffie-Hellman key agreement where the resulting keys are used recursively as the new exponents. For example, the key structure of the protocol Hypercube [2] is the same as that of TGDH with perfect binary tree where all leaves are at the bottom level. Paper [14] extends TGDH protocol to improve the computational efficiency by utilising pairing-based cryptography. They use bilinear pairings in a ternary key tree which applies to any two-party and three-party key agreement protocol.

AT-GDH (Arbitrary Topology Generalisation of Diffie-Hellman) [9] employs a spanning tree. A spanning tree contains only the (one hop) links used in initial key agreement. This avoids the neighbours communication problem, as the Diffie- Hellman key exchanges are done only with one-hop neighbours. The operations propagate over the network along the spanning tree. AT-GDH can be used in any connected network topology with bidirectional links, because a spanning tree can always be constructed in such a network.

AT-GDH does not contain group key management mechanisms, or authenticate the resulting key explicitly. The number of synchronous rounds AT-GDH needs to gather and distribute the blinded keys is twice the height of the tree. The height of the tree is assumed to be logarithmic to the number of nodes in the network, de- pending on the spanning tree algorithm and the topology of the underlying network links.

Di Crescenzo, et al., [4] approach the problem of arbitrary topology from another angle than AT-GDH. They rigorously analyse the effect of physical topology on the actual performance of some key agreement protocols. These include GDH.2 and the BD broadcast protocol. In their analysis, they apply a topology-driven simulation of the logical network over any arbitrary ad hoc network graph. In connection with the key agreement protocols, they use auxiliary protocols in order to generate efficient embeddings of logical networks over arbitrary ad hoc networks. The auxiliary protocol suggested for generating a spanning tree is the same as in [9] and is explained in the Appendix.

A generic model for key establishment in clustered ad hoc networks works along these lines: First, nodes form clusters with some clustering method. Then a back- bone or a key-tree is formed from the clusters, sometimes the tree extends inside clusters, sometimes the clusters are considered as single vertex in the tree. After this, the initial key agreement begins. Usually keys are established in subgraphs first, and then combined for a whole group wide key. The Diffie-Hellman key exchange (bipartite or tripartite) is typically used recursively as a basis for the group keying. A group key is constructed so that every node can calculate it using its own secret and the blinded secrets of others, or combinations of them. In some scenarios the messages are signed and key confirmation messages are sent for authentication purposes.

Rhee, et al., [17] present an architecture for key management in hierarchical mobile ad hoc networks. They use implicitly certified public keys (ICPK) [8], an ID-based public key scheme where the public key of each participant is derived from its identity. It provides computationally efficient implicit authentication. A key confirmation message added to the key agreement protocol makes the proto- col explicitly authenticated. A two layered hierarchy is prompted by a physically two-layered network, ground nodes and unmanned aerial vehicles. The layers use different key management methods, the clusters of nodes below use a centralised system, while the aerial vehicles use TGDH. The centralised system inside clusters is not contributory.

Another hierarchical key agreement is proposed in [22]. This is a multilevel hierarchy, where a node can have several cluster keys according to the cluster and its super-clusters it belongs to. However, it is not completely contributory. Keys are agreed among cluster-heads on the same level and then distributed to their respective clusters.

Hybrid key management [15] propose a clustered key establishment, where each cluster selects a cluster-head that makes a key agreement with other cluster-heads. After that, the cluster-head distributes the key to the cluster. Thus, other nodes in the cluster do not contribute to the key. Clustering is made according to the

Now that cluster-heads are not necessarily at a one hop distance from each other, the messages need to be relayed. The gateways relaying the messages are members of a cluster, and know the cluster secret already. However, it affects the communication complexity by adding extra links to the path.

This clustered group key agreement is efficient when cliques are large. Radio con- nections may create relatively large cliques. We evaluate the complexity in respect to synchronous rounds and number of exponentiations. A synchronous round means that every participant can send arbitrarily many packages concurrently within a sin- gle time tick (round) or receive arbitrarily many at the beginning of a round. The number of exponentiations means the total number (the sum) of exponentiations performed by all participants.

Every clique forms a group key in two communication rounds, i.e., constant amount of rounds. In the end, cluster-heads broadcast the key parts in one commu- nication round. The complexity of a clustered key agreement is the complexity of AT-GDH in the number of clusters plus a constant. The resulting communication complexity is logarithmic to the number of clusters c.

Previously group key agreements, like the authenticated GDH, A-GDH, relied much on the implicit key authentication property: The group key can not be con- structed without the secret share of one of the participants. However, Pereira and Quisquater [16] showed that it is impossible to design a scalable authenticated group key agreement protocol on the same building blocks as A-GDH. Hence other au- thentication methods are needed. Authentication with ID-based crypto, such as the ICPK [8] public keys, with key confirmation messages, could be used here, as it is independent of the group key establishment method used.

Clustered AT-GDH could be more efficient with tripartite key exchange realized with bilinear pairings as in [14]. Manipulating the form of the tree and clusters may also affect the efficiency of the group key establishment. However this needs more research. A security proof of the new combined protocol is also left for future work.

In an ad hoc network where nodes are mobile, a mere group key establishment is not always enough. The group key needs maintenance. At least the key should be updated when nodes join or leave the network, to preserve its contributory property. Neither AT-GDH nor the clustered extension proposed here have group key maintenance which is outside the scope of this paper and left for future work.

In the initial state it is assumed that the nodes know their neighbours and that all links are two-way. The initiator sends a message to each of its neighbours. It thereby becomes the root of the spanning tree and its neighbours become its children. After receiving a message, a node acknowledges it and sends a similar

This spanning-tree protocol can be used in a network where the connections are reliable. In an unreliable network, negative acknowledgements must be sent for the messages that are ignored. Local broadcast can be used to send the message to all neighbours and an acknowledgement to the parent all in one message.

