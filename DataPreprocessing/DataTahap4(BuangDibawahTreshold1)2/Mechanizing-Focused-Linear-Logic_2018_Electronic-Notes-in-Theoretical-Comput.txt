A. Focusing is a proof search discipline proposed by Andreoli [1] which constraints proofs by enforcing that rules sharing some structural property, like invertibility, are grouped together. The completeness of focusing states that if a formula has a proof, then it has a focused proof.

Induction measures: Although more relaxed measures for the height of derivations can be used as induction measures (e.g., the axiom rule can have height n for any n), we decided to follow carefully the induction measures used in the proof of cut-elimination and the completeness of focusing in, e.g., [25] and [1]. Hence, our proofs reflect exactly the procedures described in the literature.

The type A of constant terms is a global parameter. The signature of first- order terms includes a family of functions fc1 and fc2 of one and two arguments respectively. In each case, the first parameter (nat) is the identifier, i.e., the name of the function. Atomic propositions can be 0-ary (a0), unary (a1) or binary (a2) predicates. As in the case of functions, a natural number acts as the identifier. The rest of the code should be self-explanatory. We note that more general constructors

All types defined in Section Sec_lExp are parametrized by the type T. Therefore, the type of top, for example, is not lexp, but forall T: Type, lexp T. Hence, for any type T, the expression top T is of type lexp T (e.g., top nat: lexp nat). Clearly, the definition of linear logic formulas must be independent of T. In particular, it should not allow pattern matching on terms of type T. Therefore, the type Lexp of linear logic formulas is defined over all types T (i.e., it is a dependent type). The same holds for atoms and terms:

The base case corresponds to w = h = 0. The cut-formula is one of the units or an atomic proposition. Moreover, since h = 0, both premises are either the initial rule or T. We grouped those cases in the following theorem.

Definition rg := 1. (* UP predicate *) Definition lf := 3. (* DOWN predicate *) Definition bt := 0. (* bottom *)	Definition pr := 1. (* atoms / propositions *) Definition cj := 2. (* conjunction *)	Definition dj := 3. (* disjunction *) Definition im := 4. (* implication *)

Focusing tells us that the proof in H must proceed by deciding either to focus on a formula in the classical context (Theory) or in the linear context (encodeFR F :: encodeList L). However, atoms in the linear context are negative and we cannot focus on them. Therefore, the only alternative is to focus on one of the formulas in Theory. This makes the proof rather simple. For instance, consider the case INIT:

