Environments of adaptive or intelligent agents have been characterized along five dimensions: (1) accessible vs. inaccessible; (2) deterministic vs. non- deterministic; (3) episodic vs. nonepisodic; (4) static vs. dynamic; (5) discrete vs. continuous [28]. The most difficult environments for which to develop in- telligent systems are those that approximate the real world, i.e. ones that are

By the No Free Lunch Theorem (NFLT) no function-optimization algo- rithm exists superior to random choice. For dynamic persistent environments, however, we show the existence of useful general-purpose optimization proto- cols (Section 3). For example, life forms and human societies have survived in dynamic environments by learning methods that have broad applicability.

We note a gap between the informal setting or motivation in this paper and the formal and technical parts, which are of narrower scope. The latter aspect is a research challenge that we only begin to attack here. We believe that providing proper motivation and scope for the problem at hand is a contribution in itself.

Exchange of data that never affects the actions of the recipient, and never has a later effect on the inputs of the sender, is not true interaction. A person who responds to what is shown on a television screen, by talking to or shouting at the television, is not interacting with it. A microphone and an amplifier do not interact unless feedback is present. Research in cybernetics fifty years ago recognized feedback or mutual influence as a feature that distinguishes an important kind of coupling of systems [2].

An electric light that lights when it is off and the user presses its button switch, but turns off when it is on and the user presses the same button, defines a persistent environment with respect to the user. A piece of paper defines a persistent environment w.r.t. a person writing on the paper, but is amnesic

A lamp that lights dependably when the button switch is pressed and goes out when pressed again defines a static environment w.r.t. the person operating the lamp. A lamp with a light sensor, which lights when switched on only if the room is dark, defines a dynamic environment with respect to the user.

Proof sketch: We may formalize a DPE as a Persistent Turing machine with state [17]. Amnesic environments may be formalized as amnesic PTMs, those that can store or remember nothing or that make no use of stored information. By a theorem in [17], the set PSL of stream languages of PTMs strictly includes the set ASL of stream languages of amnesic PTMs.

The No Free Lunch theorem (NFLT) [30] presented a paradox to researchers in evolutionary computation (EC). On the one hand, by the NFLT, no algorithm (such as an evolutionary algorithm) performs more efficiently than random search at solving the general function-optimization problem. On the other hand, natural evolution has proved better at producing organisms that attain fitness in varied environments than random search could have done. We solve this paradox by showing that the NFLT does not apply to optimization in DPEs, such as natural environments.

It follows from the NFLT that to build a good function optimizer one needs to know something about the function beforehand. The proof of the NFLT has withstood inspection, but nature seems to have has produced a counter example, in that life on earth appears to be performing general-purpose (if slow) optimization, via evolution [6], and humans appear to be doing so as well, at a faster pace, via intelligence. It is paradoxical that despite the re- striction imposed by the NFLT, fit adaptive systems come into being all the time in generalized processes that make no a priori assumptions about the environment.

The NFLT rules out algorithmic procedures for general optimization. It follows from the NFLT that every useful evolutionary algorithm is to some degree problem specific in that it has some useful built-in knowledge of the fitness landscape. Natural and artificial systems gain the necessary knowledge by interacting with their environments, sometimes over millennia.

The significance attributed to the NFLT among EC researchers reflects the mathematical world view that sees problems as functions, i.e., as transforma- tions of single inputs to single outputs [18]. To acknowledge the importance of DPEs is to depart from this traditional mathematical world view and to embrace a broader, interactive world view.

interactively about this evolving cost function and the mechanism inducing it. Whereas no algorithm can embody knowledge of all cost functions, an interac- tive process can be constructed to learn and to guide itself by interacting with environments that induce cost functions, including costs that change dynami- cally in interaction with the process. Some such interactive learning processes will perform better than blind search. This fact explains the existence of complex life forms.

The observation that coadaptation (mutual adaptation) between agents and their environments molds fitness landscapes in a favorable way [12] high- lights the role of interaction in permitting escape from the unfavorable impli- cations of the NFLT. In fact, it is precisely coevolution of species that refutes the claim by William Dembski that the NFLT implies a necessary role for intelligent design in accounting for complex life forms [25]. Coevolution and coadaptation by definition define, for their participants, environments that are dynamic and persistent.

Persistence of state in an environment offers agents within it a way to interact with each other via that environment instead of directly. We define indirect interaction and show that it is distinct from, and not reducible to, direct interaction (Section 4.1). Section 4.2 offers examples of this in nature, illus- trating the multidisciplinary aspect of the research area of multiagent systems. We show that it is precisely indirect interaction that distinguishes multiagent

In this classic problem in concurrency and shared resources, philosophers sit in a circle to eat, with one chopstick between each pair of diners. Diners individually pick up two chopsticks (one at a time), eat, put them down, and think, repeating the steps endlessly. The problem is to avoid starvation by deadlock; if each diner uniformly picks up the left (or right) chopstick, for example, and holds it until the other one is available, then all will starve.

Alongside anonymity and asynchrony, indirect interaction typically has the features of locality and non-intentionality [16]. The former means that efficient indirect interaction allows the agent access (for either perceiving or modifying) to only a small part of the environment. The latter means that participants may interact without any pre-existing goal or intention of com- munication. That is, as the agent makes changes to the environment that are to be perceived by others, he may be acting for reasons that include no explicit intention to have his changes thus perceived.

Almost all real-world optimization problems are problems of adaptation by multiagent (multi-component) systems, or MASs, to dynamic persistent envi- ronments. Adaptation in MASs may be centralized, based on rational deduc- tion that yields algorithmic solutions. Or, in the absence of rational problem- solving and planning mechanisms, it may be decentralized. Examples of de- centralized adaptation include ants, termites, and slime mold.

In the StarLogo termite simulation, the termites build a circular pile of wood chips, despite having no capacity for planning or coordination, and with minimal ability to perceive. They continuously apply a simple protocol: move at random, pick up a chip whenever one is encountered, and put it down when the termite bumps into another chip. Eventually, a single pile emerges. This global behavior of the termite population is more than the composition of the individual chip-carrying behaviors. The termites accomplish this pile-forming task, in a self-sustaining manner, without an internal representation of the goal [27].

Ant colonies solve the problem of efficiently foraging for food sources by a decentralized multiagent interaction in which each ant deposits pheromones (evaporating scent chemicals) as it walks, and each ant follows pheromone trails as well as food odors. Heavily traveled (hence strong, hence attractive) pheromone trails correspond to short paths to food. As food is exhausted at a site, the trails to it evaporate. Without a plan, the ants find a set of paths to the food that tends toward optimality [3,4].

Multiagent interaction (MAI) is ubiquitous, whether at the atomic, molecular, cell, organism, social, or planetary level. Although computer science models computation as transformation of input to output by one computing agent, and although concurrency theory models interaction as direct communication between two agents or processes, complex systems in the real world are richer than either model. Systems are often open in the sense that entities or streams of interaction may be created or destroyed. Asynchrony and anonymity of communication have brought into being the field of coordination models for MASs [1,14].

By Definition 2.1 (interaction), a pair of agents in S interacts only if each affects its own later inputs by its actions. But by Definition 4.2 (indirect interaction), no pair of agents in S communicates via state changes created by one and observable by the other in a common environment.

Indirect interaction is necessary for full expressiveness of MAS models, but not sufficient. Indirect interaction can occur without greater expressiveness; e.g., if the component agents are not truly concurrent. Note that any modular algorithm can be transformed to a MAS by replacing subroutines with agents and input/output relations with shared variables (indirect interaction). But clearly despite the indirect interaction, there is no increased range of behavior in that case.

Introducing the notion of dynamic persistent environments suggests new research directions for multiple disciplines and new ways of thinking about agents and interactive computation. It may suggest ways forward for research in evolutionary computation and adaptive systems, for example. As we have shown, recognizing that adaptation to dynamic persistent environments is not a kind of function optimization allows us to resolve the dilemma of the No Free Lunch Theorem.

