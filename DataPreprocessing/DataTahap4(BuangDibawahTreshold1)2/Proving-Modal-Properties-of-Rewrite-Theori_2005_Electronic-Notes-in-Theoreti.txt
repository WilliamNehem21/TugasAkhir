Rewriting logic is a very expressive formalism for the specification of concurrent and distributed systems; more generally, it is a logic of change. In contrast, VLRL is a modal logic built on top of rewriting logic to reason precisely about that change. Here we present a technique to mechanically prove VLRL properties of rewrite theories using the reflective capability of rewriting logic through its Maude implementation.

Rewriting logic [9] provides a formal framework for modelling concurrent sys- tems in terms of states and state transitions, which is efficiently implemented in the Maude system [5]. It is a logic of change in which deduction directly corresponds to the change. In contrast, the Verification Logic for Rewriting Logic (VLRL) [7] is an action modal logic to talk about change in a more indirect and global manner, like other modal and temporal logics. VLRL was developed to prove abstract properties of systems specified in rewriting logic.

As we have done in Section 6 with the nextState operation, we define nextStateinContext by distinguishing cases for each possible kind of action. When executing an identity action in context the obtained state does not change, but the action can only be executed if it is a substate of the state. We check it using the metaXmatch operation of the metalevel, with no condition, and no upper nor lower bounds on the subterm searching. It is enough to find

