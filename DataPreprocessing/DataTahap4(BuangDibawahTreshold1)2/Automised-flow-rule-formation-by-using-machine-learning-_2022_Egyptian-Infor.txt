at the application side is called static principle forming and rule forming at the controller side basis on switch demand is called dynamic rule shaping which may be tedious and troublesome [15,16]. To address this issue, a reinforcement learning-based method is proposed that maintains a strategic distance from the bottleneck and provides more efficient rule management at the controller side. This is done by making the automated rule gener- ating process where the controller has the option to build rules dependent on past encounters. The main contributions of this work are as follows:

The remaining of this paper is organized as follows: Section 2 presents the software-defined network details and their relation with machine learning-based rule generation. Section 3 presents the related work and problem formation. Section 4 presents the proposed Rule Formation Agent design and development steps. Section 5 presents the experiment results. The Paper concludes in the end with a future direction.

The application layer is the top layer of the SDN network which provides services to the controller. The application layer forms the flow rules for the packets in the network. These rules are the basis of packet scheduling. With all of the information related to the net- work applications and topology of the network, the application layer keeps a check on the state of the network. The application layer communicates with the control layer using the control mes- sage. Control Layer, Controller, Control Plane is the central part of the SDN which is also called the brain of the network. The con- troller is connected to the application layer, and the infrastructure

are sent to the switches which include flow information and all this communication among the control plane and data plane is done via southbound APIs. So switch work according to the rules provided by the upper layer to proceed with the network flow [17]. The fol- lowing research discusses the previous work in the context of rule formation.

The authors in [18] have worked on dynamic flow rules in SDN. This research focuses on the flow rules dynamically this research proposed a methodology to increase the flow of the SDN by creat- ing own flow entries to keep the network data work efficiently using this strategy switch will be able to form rules locally which means modification needs in the rules will be done on the switch level locally which will increase the flow of traffic in the network. This research presented three different procedures to implement this strategy. And the author claimed that this strategy increases the efficiency of the SDN network. This works as the extended ver- sion of the OpenFlow.

An Intelligent Rule Management Scheme for Software Defined Networking has been designed in which the authors focus on rule management in the Software-defined network [22]. This research follows the perspective that when flow rules are transmitted from the application layer to switch network mass network resources are used in this process so this research proposed a methodology to make rule management system easier and error-free without the use of extra network resources. For this purpose, the technique provided by the author is hybrid. This scheme works as compensa-

In order to evaluate the performance of the proposed RFA, the simulation is performed. The tools used for the implementation of this research are open daylight controller and Mininet and the platform used is Ubuntu which was installed on a virtual environ- ment using a virtual box. For benchmarking with classical SDN implementation the throughput and packet loss and are consid- ered. Besides, an important metric flow insertion delay is also con- sidered that reduces the overall delay for the rule insertion which

Whenever a flow rule is missing, predictably, packet loss hap- pened because more time is taken by the network to provide the rule. After all, more latency which as a result aids the packet loss that happens due to bottleneck at the switch. When a lot of packets are in the queue and rule is missing for a packet it not only go towards the packet loss of the packet with the missing rule prob- lem but can also aid the packet loss of other packets reside in the queue.

age on the basis of which we train our module and those past rules helped the module to do its job automatically in order to deal with the problem at the switch. We used default rules sent by the application layer in order to train our model which turned out to be a good approach in order to train the model. As we discussed earlier that reinforcement learning works on the basis of reward so it became easy to train a model using machine learning plus cir- cumstances on the SDN controller switch indicates a way of using the reinforcement machine learning approach in order to train our model and make our model work well to reduce the effect of the problem in the software-defined environment. So we answered all the questions we were supposed to answer in our research.

approach gained huge popularity with each positive aspect of tech- nology. We have to deal with the drawbacks also in terms of software-defined networking; there are loopholes which need to be solved as in our research. We followed a problem at a traditional software-defined network which is regarding the flow rules as flow rules plays an important role in a network as they keep the net- work traffic going so problem regarding them leads the whole net- work to a deadlock situation. The other aspect when a security threat hits the system in that case too our module finds a way to keep the network traffic going whether a system is under attack or there is any other issue regarding missing rules. We proposed a methodology that works with the mechanism of Reinforcement learning to form flow rules automatically and our results show that this approach can help to improve the software-defined network- ing environment. Machine learning algorithms have been used in a lot of researches and regarding solving many areas of problem in software-defined networking so our research can become part of a big intelligent software-defined networking environment. Latency has been a considerable problem of the SDN environment which is taken care of in our research plus the issue regarding missing rule is also taken care of and the main scenario which was the base of the research that if at some risk application layer got disconnected, how the traffic is going to process in the net- work. In future, other supervised learning techniques will be used to perform auto rule formation.

