objects across membranes (called symport/antiport rules, modelling some kinds of transport rules present in cells). Recently, inspired by brane calculus, [4], a model of a membrane system, having objects attached to the membranes, has been introduced in [5]. Other models bridging brane calculus and membrane systems have been proposed in [14,17]. A more general approach, considering both free floating objects and objects attached to the membranes has been proposed and investigated in [3]. The idea of these models is that membrane operations are moderated by the objects (proteins) attached to the membranes. However, in these models objects were associated to an atomic membrane which has no concept of inner or outer surface. In reality, many biological processes are driven and controlled by the presence, on the appropriate side of a membrane, of specific proteins. For instance, receptor-mediated endocytosis, exocytosis and budding in eukaryotic cells are processes where the presence of proteins on the internal and external surfaces of a membrane is crucial (see e.g., [1]).

These processes are, for instance, used by eukaryotic cells to take up macro- molecules and deliver them to digestive enzymes stored in lysosomes inside the cells. In general, all the compartments of a cell are in constant communication, with molecules being passed from a donor compartment to a target compartment by means of numerous membrane-enclosed transport packages, or transport vesicles. Once transported to the correct compartment the substances are then processed by means of local biochemical reactions (see e.g., [1]).

A matrix grammar is called pure if there is no distinction between terminals and non-terminals. The language generated by a pure matrix grammar is composed of all the sentential forms. The family of languages generated by pure matrix grammars without appearance checking is denoted by pM AT . A proof of this can be found, for example, in [10].

As is usual in the membrane systems field, a membrane is represented by a pair of square brackets, [ ]. To each topological side of a membrane we associate multisets u and v (over a particular alphabet V ) and this is denoted by [ u]v. We say that the membrane is marked by u and v; v is called the external marking and u the internal marking; in general, we refer to them as markings of the membrane. The objects of the alphabet V are called proteins or, simply, objects. An objects is called free if it is not attached to the sides of a membrane, so is not part of a marking.

Moreover, each membrane has an associated label that is written as a superscript of the membrane. If a membrane is named by the label i we call it membrane i. Each membrane encloses a unique region, so we also say region i to identify the region enclosed by membrane i. The set of all labels is denoted by Lab.

The semantics of the attachment rules (attach) is as follows. For the first case, the rule is applicable to the membrane i if the membrane is marked by multisets containing the multisets u and v, on the appropriate sides, and region i contains the object a. In the second case, the rule is applicable to membrane i if it is marked by multisets containing the multisets u and v, as before, and is contained in a region that contains the object a.

We also introduce evolution rules that involve objects but not membranes. These can be considered to model the biochemical reactions that take place inside the com- partments of the cell. They are evolution rules over the alphabet V and set of labels Lab and they follow the definition that can be found in evolution-communication P systems [6].

The semantics of the rule is as follows. The rule is applied to region i if the region contains a multiset of free objects that includes the multiset u. When the rule is executed the objects specified by u are subtracted from the contents of region i and the objects specified by v are added to the contents of the region i.

In the second part of the paper we have presented a simulator that implements a stochastic variant of the introduced model. The simulator has an intuitive syn- tax and can be used to model biological processes where the transport of objects across membranes is coupled with the processing/decay of substances within the re- gions. As an example we have presented the simulation of saccharomyces cerevisiae heterotrimeric G-protein cycle.

|| symbol. Objects listed on the left hand side of the || represent the internal markings, objects listed on the right hand side represent the external markings and objects listed between the vertical bars are the integral markings of the membrane. E.g.:

Note that the minimum evolution step does not correspond to tin of the Ppi system, since the simulation always starts from the 0th step. By convention, the simulator sets the initial time of the simulation to 0, hence tin = 0 for all simulations. Note that although tfin of a Ppi system evolution corresponds to the maximum evolution step, the units are different and there is no explicit conversion.

To specify which objects are to be observed during the evolution the plot keyword is used followed by a list of reactants. To plot the contents of a specific compartment the plot statement uses syntax similar to that used in the compartment definition. E.g.,

