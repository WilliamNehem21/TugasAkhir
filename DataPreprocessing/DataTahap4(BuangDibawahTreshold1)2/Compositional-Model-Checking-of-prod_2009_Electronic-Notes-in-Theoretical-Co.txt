The remainder of the paper is organised as follows. In Section 2 the Boucherie compositional framework is formally described and an example, which will be re- ferred to throughout the paper, is presented. In Section 3 the CSL logic is briefly introduced and the compositional verification is proved for a subset of it. Section 4 discusses the gains we have by applying the proposed approach. Finally Section 5 summarises the work presented in this paper and illustrates guidelines for future work.

State-space S of the composed CTMC M is obtained from (2.1) straightfor- wardly. The states corresponding to a breach of the mutually exclusion are the states in which at least two philosophers uses the resource eat or at least one of the forks is used by the two adjacent philosophers.

In the following we introduce the idea of k-move and devise its probability (Lemma 3.1). We refer to a transition Q(s, s') as a k-move if it corresponds to a change of state of component k. We observe that the probability of observing a k-move in state s = (s1,..., sk,..., sK), denoted pk(s), is given by:

In the rest of this section we report that in several cases it can be decided in a compositional way if a given state of the composed process satisfies a state formula or not. In particular, we take into account three types of formulae: Section 3.1 deals with single component Until formulae; Section 3.2 discusses single component Next formulae; Section 3.3 considers global Next formulae.

Intuitively, Theorem 3.2 holds because in a Boucherie process a component can block another for a given amount of time but it cannot change the way the other component chooses its next state. A formal proof is given in the appendix.

The above result indicates that reasoning about temporal Next properties in a Boucherie framework can be done in a decomposed fashion. In particular the verifi- cation of a single-component Next formula bounded by I against M boils down (in the worst case) to the verification of the same Next formula with a shifted bounding interval I'. Intuitively such time-shift can be explained as a (stochastic) compensa- tion of the decreased concurrency: when we move the focus of our attention from a state (s1,..., sK) of M to its projection sk on Mk, we essentially decrease the number of enabled transitions, hence the likelihood of leaving sk within a given delay increases.

The state space of the model can be divided into macrostates. Each macrostate is characterised by the current resource usage of the components described by a vector |r1,..., rK| where rj = 0 if component j does not use any shared resource and rj > 0 indicates that resource rj is in use by component j.

C: the level of competition of the framework: this, in turn, depends on both: the number of shared resources (I), and the distribution of competition amongst them (i.e. the sets Aki). We may say that a resource that is shared by

processes. Similarly we may say that a framework in which processes occupy shared resources in single states only, has a lower level of competition than a framework in which processes hold shared resources through a number of different states. As a result the larger the level of competition of a framework, the greater is the gain.

i.e., the next state of component k after the first k-move does not depend on the state of the other com- ponents. Further, the distribution of the next state of component k in the composed CTMC is identical to the distribution of the next state in the single CTMC which implies the theorem.	 

