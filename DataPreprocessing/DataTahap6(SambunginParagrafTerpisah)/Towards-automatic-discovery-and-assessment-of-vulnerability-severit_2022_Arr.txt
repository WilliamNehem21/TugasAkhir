New measurements make it possible to quantify cybersecurity issues to support vulnerability-mitigation decisions. These measurements are captured from a range of cybersecurity repositories available online. The Common Vulnerabilities and Exposures (CVE) [3] repository is a prime database cumulating vulnerability reports that are further augmented with the Common Vulnerability Scoring System (CVSS) [4] scores. Other analytical measurements are provided by the National Vulnerability Database (NVD) [5]. However, vulnerability-mitigation decisions that rely on CVE or NVD records as primary data sources, can be biased and discriminating other sources of data [6,7]. For instance, instance does occur. Particularly, when considering other CVSS tempo- ral and environmental metrics, whereby vulnerability properties evolve across time and deployment environments. Hence, additional sources of relevant data, including manufacturer-provided data, online reviews from relevant security sources and forums, are expected to consolidate further existing CVSS scores [10].

Microsoft Security Response Center (MSRC) [17], to consolidate sever- ity scores of vulnerability instances. Accordingly, we produce ground facts for our Machine Learning (ML)-based vulnerability-severity com- putation algorithm. These instances are then used to train our ML model, which we evaluate using vulnerabilities reported in vulner- ability repositories such as NVD and SecurityFocus. In addition to NVD and SecurityFocus, our suggested approaches can incorporate additional other data sources such as CERT. We also propose a new query logic to identify relevant vulnerability instances, while excluding possible false positives based on other keywords. The evaluation study of CPS vulnerability and related factors shows an enhanced level of automation in cybersecurity assessments [14].

A novel machine-learning based structure for vulnerability assess- ment that infers CVSS severity scores of reported vulnerability instances. This proposed technique addresses compatibility issues of CVSS scores using a majority voting system, as part of the pro- posed machine-learning model. The approach can be customized to accommodate a preferred CVSS version, in order to allow a common computational semantic that improves consistency in vulnerability assessment.

The rest of this paper is organized as follows: In Section 2, we pro- vide some background and formally state the problem addressed in this paper, followed by Section 3 which discusses vulnerability data sources, standard vulnerability-severity metrics and related vulnerability- assessment processes used in the CVSS mechanism. In Section 4, we reveal our vulnerability assessment prototype, which correlates existing CVSS scores against other security-alert indicators, as well as reconciles different CVSS versions using some text-mining techniques on a corpus of vulnerability reports. In Section 5, we evaluate our vulnerability- discovery and assessment methodology in CPS contexts using mainly NVD and Shodan [18] through some analysis. In Section 6, we provide some concluding remarks and discuss some future research directions.

A variety of approaches apply text-mining techniques in industrial blogs like Twitter [24] and security papers. This is exemplified in the work undertaken by Zhu and Dumitras who apply NLP to extract malware detection features from research papers automatically [25]. Chen et al. [24], Bullough et al. [26] and Sabottke et al. [27] extract

MITRE Corporation publishes the CVE industry-standard to assign an identifier to each discovered vulnerability. In addition, it maintains a publicly accessible database of all identifiers through CVE Numbering Authorities (CNA) [31]. A typical CVE entry includes the following fields: a unique identifier, a brief description of the reported vulnera- bility, and any pertinent references about the vulnerability. The unique CVE identifier, or CVE ID, is the key that differentiates one security vulnerability from another. In doing so, CVE IDs provide a reliable way of communicating across these different databases to get more information about the reported security flaws.

NVD builds upon the information included in CVE entries to pro- vide an enhanced information for each entry, such as severity scores (calculated based on CVSS standard) and impact ratings. NVD converts the unstructured CVE data into structured JSON (or JavaScript Object Notation) or XML (or Extensible Markup Language) formats [6]. As part of its enhanced information, NVD also provides advanced searching features such as by OS, by vendor name, by product name, by version number, and by vulnerability type and severity. Among these extra fea- tures, affected product names and versions have matching string entries in CPE entries. Vulnerability category features are provided in Common Weakness Enumeration (CWE) [32] repository, which abstracts the observed faults and flaws into common groups of vulnerabilities with additional information about expected effects, behaviors, and further implementation details. The vulnerability severity score is calculated following the CVSS version 3 and version 2 standards.

SecurityFocus is a widely used vulnerability database and also features a security news portal [13]. Even though this database is shut down in January 2021, still its historical reports are applicable to validate our experimental analysis. Besides vulnerability descriptions, SecurityFocus also addresses whether a vulnerability has a PoC exploit. Note that SecurityFocus is not dependent upon CVE data sources [23]. Actually, a BugTraq vulnerability report may refer to several CVE vulnerability instances. A statistic analysis by Fang et al. highlight that although the amount of vulnerabilities reported in SecurityFocus is less than the number of vulnerabilities found in NVD, the fraction of exploited vulnerabilities in SecurityFocus (37.008%) is much higher than the proportion in NVD (6.676%) [13]. They also observe that the vulnerability reports in SecurityFocus contain higher coverage and more reference significance in predictive cybersecurity analysis, lead- ing to their experiment results where SecurityFocus performs well than NVD under an actual environment.

Finally, Shodan is a data source mainly targeting CPS or IoT (refer- ring to Internet of Things) security, including SCADA (referring to Su- pervisory Control and Data Acquisition) [35]. CPS and IoT systems in- clude devices like webcams, routers, and servers. Relevant information like ports and vulnerabilities of these devices can be fetched through Shodan website or Shodan API (referring to Application Programming Interface). Interestingly, these are currently internet-connected devices, sending (public) live data from different locations across the World. Unlike NVD, where vulnerability reports are published, Shodan crawls IP addresses, made available on device respective websites and APIs. Returned data from Shodan can be cross-referenced with NVD for vulnerability analysis [36].

This can be illustrated briefly by the vulnerability instance CVE- 2021-37172 for example. This vulnerability instance affects Siemens PLC (or Programmable Logic-Controller) product running SIMATIC S7- 1200 CPU family with firmware version number 4.5.0 (or the vulner- able component), by allowing a threat agent to bypass authentication and download arbitrary programs to this PLC (or the vulnerable CPS asset). This vulnerability has a CVSS version 3 base score of 7.5, which is further composed of an exploitability score of 3.9 as well as an impact score of 3.6.

Relying upon NVD scores alone as the model training ground can bring bias in vulnerability assessment [6,7]. This is because a small percentage of score records in NVD is assumed to have errors due to the manual scoring process [12]. Besides statistical vulnerability patterns mined from CVE reports, other data sources like vendors and third- party security analyzers (e.g., ICS CERT and MSRC) provide different perspectives for vulnerability scoring. We set up a majority voting [37] module using Python whereby the score that the majority of data

The classification of CVSS measurements into class labels calibrates severity scores from property attributes. A high label of AttackComplex- ity (AC) for example, pertains to the attribute value of 0.44, and 0.77 attribute score pertains to low label. These numerical values are use in the CVSS calculation process.

Vulnerabilities in CPS infrastructure are assessed to enumerate and rank their severity to prevent threat-induced anomalies, or intrusion attempts [1,2]. Here we present a vulnerability analysis case study of several prominent CPS components. This case study is composed of three main steps. First, we query and filter CPS relevant vulnerabilities from online cybersecurity data sources. Then, we compute the CVSS V3 base scores and corresponding vectors for retrieved vulnerability instances. Finally, we perform an analysis to explore the statistical patterns of existing CPS vulnerabilities.

We evaluate our streamlined vulnerability-severity scoring mech- anism through vulnerability analysis practices on several prominent CPSs such as PLCs, RTUs (or Remote Terminal Units), MTUs (or Master Terminal Units) and HMIs (or Human Machine Interfaces). A PLC is a crucial CPS asset that controls industrial devices to keep production processes in order. A RTU transmits telemetry data from sensing devices that are associated with physical power components to a MTU system. Finally, a HMI is either a standalone device or embedded commu- nication interface to visualize and monitor MTU activities and RTU information flow [2].

By querying NVD, we obtain respectively 257, 445, 107, and 258 vulnerability reports related to PLC, RTU, MTU and HMI. These re- trieved 1067 CPS related vulnerabilities extend till November 3, 2021. Note that some vulnerabilities appear in more than one type of CPS components. One example is the vulnerability instance CVE-2019-0708 appearing in both PLC and HMI vulnerability groups. We removed duplicated vulnerabilities and kept 870 instances in the analysis corpus when we need to assess general CPS vulnerability features.

We further analyze these identified CPS vulnerabilities to get their CVSS V2 and V3 scores assigned by NVD. All of these CPS vulnerabili- ties are assigned CVSS V2 scores and relevant labels like V2 access vec- tor. In contrast, 319 (71.69%) RTU vulnerabilities, 121 (47.08%) PLC

M580 PLCs from Schneider Electric. Vulnerable Modicon PLCs employ Schneider Electric UMAS protocol that operates over the Modbus pro- tocol which lacks encryption and proper authentication mechanisms. This vulnerability allows spoofing attacks to happen against the Mod- bus communication between the PLC controller and the EcoStruxure software in the engineering workstation.

One typical example is OpenSSL that appears in 120 CPS vulnerability instances. OpenSSL [53] is a library implementing the SSL/TLS pro- tocol. SSL (referring to secure sockets layer) is the old name of TLS (referring to transport layer security). We also found 51 vulnerability instances related to Simatic PLCs and HMIs developed by Siemens AG.

As we discussed earlier, more than 57% of extracted CPS vul- nerability instances are not scored under the CVSS V3 mechanism. The scoring system shown in Section 4 is used to compute scores for these vulnerabilities, in order to bridge the gap of missing CVSS V3 information. We also calculate CVSS V3 scores for the vulnerabilities with inconsistent scores assigned. We design this re-computation step considering two factors, (i) CVSS V3 is only applied to vulnerabilities disclosed within and after 2015 in some data sources like NVD, and

Column CPS). Column 8 (or Column CVE) shows the overall rate of published CVE reports that have assigned CVSS V3 scores, by dividing the vulnerabilities with certain labeled measurement (e.g., Network) against all the disclosed vulnerabilities till November 3, 2021. By doing so, we show how the significant characteristics of CPS vulnerabilities diverge when considering different cybersecurity data sources.

Discovering and evaluating vulnerabilities in CPS networks are both crucial and challenging processes. We proposed to raise the efficiency of vulnerability-severity scoring systems following CVSS standards, to rate the severity of a reported vulnerability instance. Our approach reconciles inconsistent vulnerability severity scores that are contributed from different cybersecurity analysers, and also decrease potential con- flicts resulting from various CVSS mechanisms. We employed majority voting technique to decide the score of inconsistent reports for the same vulnerabilities in different cybersecurity repositories. We then used these compatible vulnerability instances as ground truth to train a machine-learning model as a scoring basis. The performance of the proposed model is shown to obtain high accuracy and micro F1-score thresholds compared to similar studies. A case study involving CPS vulnerability reports from multiple repositories is illustrated to vali- date the proposed vulnerability assessment model. A query-filter logic is used to customize retrieved vulnerability instances. The outcomes are contrasted against reported CVE instances to further analyze the characteristics of CPS vulnerabilities. The results of our case study also indicate that vulnerability patterns are diverse when relying on different cybersecurity data sources, which may mislead cybersecurity decision making in the perspective of patch prioritization or budget allocation. And hence, a vulnerability analysis approach that correlates multiple data sources is necessary to enhance further cybersecurity awareness.

