Component-based software engineering (CBSE) is a specialized form of soft- ware reuse concerned with building software from existing components, including commercial off-the-shelf (COTS) components, by assembling them together in an interoperable manner. Achieving a highly reliable software application is a diffi- cult task, even when high-quality, pretested, and trusted software components are combined. Several techniques have therefore emerged to analyze the reliability of component-based applications. These fall into two groups: are formulated on the basis of expert advice. However, this is a relatively time-con- suming process. The advantage of an ANFIS over the FIS model is that it com- bines fuzzy logic with the learning capabilities of neural networks (NNs) to solve this problem. The aim of our proposed model is to integrate the best features of fuzzy logic and neural networks in a CBSS reliability estimation model. Our results demonstrate how this is an improvement over an FIS.

The rest of this paper is organized as follows. Section 2 discusses related work. Section 3 provides the framework for our proposed model, and Section 4 presents the model. Section 5 presents our experiments to evaluate the proposed model. Section 6 discusses the experimental results, and Section 7 presents our conclusions.

Fiondella et al. (2013) proposed an approach based on correlated component failures (COCOF). In this paper an efficient approach to access the reliability of a software application, considering the component reliabilities, correlation and application architecture is proposed. This proposed approach is based on an algo- rithm that transforms a Multivariate Burnoulli distribution (MVB) into a joint distribution of the component outcomes.

Palviainen et al. (2011) proposed a technique for reliability estimation, predic- tion and measuring of CBS. The proposed approach explains that reliability is a key driver for safety critical systems such as health care systems and traffic con- trollers. This paper gives software reliability evaluation during design and imple- mentation phases. The contribution of this approach lies in the integrating the component level reliability. There is a need for a systematic approach that facili- tates software developers to both construct reliable component based software sys- tems and ensure that the software architecture, selected components and constructed software system meet the reliability goals. The approach integrates heuristic reliability estimation, model base reliability prediction and model based reliability measuring activities at component level and reliability prediction

Many soft computing approaches are based on support vector machines (SVMs), genetic algorithms (GAs), and fuzzy logic. Lo (2010) proposed a software reliability estimation model based on an SVM and a GA. This model specifies that recent failure data alone are sufficient for estimating reliability. Reliability estima- tion parameters for the SVM are determined by the GA. This model is less depen- dent on failure data than are other models.

ANFISs were first proposed by Jang (1992) in 1992. These are adaptive networks whose function is similar to FISs. The aim of an ANFIS is to integrate the best features of fuzzy systems and NNs. The advantages of an ANFIS over an FIS are as follows:

Operational profile for the component: The operational profile (OP), a quantita- tive characterization of how the software will be used, is essential in any software reliability engineering application. An OP is a complete set of operations with their probabilities of occurrence. The reliability may be different for different OPs. The OP for any component describes the inputs supplied to the component.

Component dependency: In a CBSS, various components are connected to one another to form a larger application. The components are dependent on each other to perform their functions, that is, the output of one component may serve as an input for another component. This dependency plays an important role for estimating the reliability of the overall application. If components are highly dependent on one another, the reliability of the system will be low.

Our proposed model is an additive model. It does not explicitly take the archi- tecture of the CBSS into consideration, but the measure of application complexity will be platform dependent because it comes from the glue code (integration code). The FIS studied in this work has four input factors as described above, namely, reusability, application complexity, component dependency, and operational pro- file. For a first-order Sugeno fuzzy model, a rule set with fuzzy if-then rules is as some are simple CBSSs. The ANFIS was trained and tested using the data obtained from these projects. Some of the data were used for training and testing, and some were used for the results. A total of 81 rules were formed on the basis of the available data. The rules divide the input factors into three variables: low, med- ium, and high.

