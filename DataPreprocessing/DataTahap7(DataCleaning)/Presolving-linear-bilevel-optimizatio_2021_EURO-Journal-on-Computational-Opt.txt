linear bilevel optimization problems are known to be strongly np-hard and the computational techniques to solve these problems are often motivated by techniques from single-level mixed-integer optimization. thus, during the last years and decades many branch-and-bound methods, cutting planes, or heuristics have been proposed. on the other hand, there is almost no literature on presolving linear bilevel problems although presolve is a very important ingredient in state-of-the-art mixed-integer optimization solvers. in this paper, we carry over standard presolve techniques from single-level optimization to bilevel problems and show that this needs to be done with great caution since a naive application of well-known techniques does often not lead to correctly presolved bilevel models. our numerical study shows that presolve can also be very beneficial for bilevel problems but also highlights that these methods have a more heterogeneous effect on the solution process compared to what is known from single-level optimization. as a side result, our numerical experiments reveal that there is an urgent need for better and more heterogeneous test instance libraries to further propel the field of computational bilevel optimization.



theory in section 2. we then introduce several presolve methods for linear bilevel problems in section 3 by carrying over classic presolve ideas from(single-level) linear and mixed-integer optimization to the field of bilevel problems. afterward, we evaluate these methods in a computational study in section 4. these numerical experiments reveal two main insights. first, we observe that presolving linear bilevel problems can be very beneficial for some instances whereas it is rather harming for the solution process of other instances. second, although we have a test set of more than 2500 instances, only very few of them are affected by some of the presolve methods discussed in this paper. we conclude, thus, that there is an urgent need for more realistic and more heterogeneous test instance libraries to further propel the field of computational bilevel optimization; see section 5.



to presolve the original bilevel problem(1). as briefly discussed in the introduction, this is related to the independence of irrelevant constraints property. for single-level problems, this property states that adding any constraint that is satisfied at the global optimal solution does not change the global optimum. in macal and hurter(1997), the iic property for linear bilevel problems of the form(1) is defined as follows.



be added to problem(4), i.e., the single-level problem(4) possesses the(single-level) iic property. adding such a constraint to problem(4) however corresponds to adding an irrelevant constraint to the leader problem of the bilevel problem(1). on the contrary, adding a constraint that is valid for the bilevel optimal solution to the follower problem of



constraint(4c). in this case, the concept of the(single-level) iic property is not applicable. detecting such constraints that do not affect constraint(4c) is a delicate task and will play a crucial role in the presolve of linear bilevel problems.



only one constraint. however, an increased running time is to be expected. naturally, this procedure can be continued until all constraints are considered, which results in the best possible bounds. obviously, the computational effort involved is also the largest. in this work, we focus on the analysis of the effectiveness of bound strengthening by using the best available bounds and, thus, we refrain from using other methods as to solve(5) to compute these bounds.



single-level reformulation that replaces the follower problem with its kkt conditions or with the strong-duality condition. in this view, it makes sense to move follower bounds to the leader instead of tightening them. this results in a smaller single-level reformulation. for instance, in the case that the kkt reformulation is used, moving bounds to the leader results in fewer kkt complementarity conditions. however, it is well known that moving constraints between the leader and the follower problem is not without obstacles and, in general, it may change the optimal solution. nevertheless, we make the following observation.



note that this is in contrast to general lower-level constraints(i.e., constraints that are more involved than simple bounds for the lowerlevel variables), which can be added to the leader without problems but not moved from the follower to the leader without altering the bilevelfeasible set t. we finally note that one can also simply remove the(any9.0.2. the computational experiments have been executed on a compute cluster using compute nodes with intel xeon e3-1240 v6 cpus with 4 cores, 3.7ghz, and 32gb ram; see regionales rechenzentrum erlangen(2020) for more details. note the we limited the number of threads to 1 in all computations.



1 note that the presolve techniques evaluated in this section would also have a comparably beneficial effect on other solution approaches such as classic branch-and-bound for lp-lp bilevel problems(bard, 1998) due to, e.g., a reduced number of lower-level constraints.



in this paper, we systematically studied presolve methods for linear bilevel problems. due to the fact that the iic property does not hold for bilevel problems in general, this is a delicate task and the application of standard presolve methods from single-level optimization thus has to be done with great caution. fortunately, we are able to carry over bound strengthening, the handling of parallel rows and columns, duality fixing, and a special type of an optimality-based presolve to the field of bilevel optimization.



