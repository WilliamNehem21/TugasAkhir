the value range information of program variables is useful in many applications such as compiler optimization and program analysis. in the framework of abstract interpretation, the interval abstract domain infers numerical bounds for each program variable. however, in certain applications such as automatic parallelization, symbolic ranges are often desired. in this paper, we present a new numerical abstract domain, namely the abstract domain of parametric ranges, to infer symbolic ranges over nonnegative parameters for each program variable. the new domain is designed based on the insight that in certain contexts, program procedures often have nonnegative parameters, such as the length of an input list and the size of an input array. the domain of parametric ranges seeks to infer the lower and upper bounds for each program variable where each bound is a linear expression over nonnegative parameters. the time and memory complexity of the domain operations of parametric ranges is o(nm) where n is the number of program variables and m is the number of nonnegative parameters. on this basis, we show the application of parametric ranges to infer symbolic ranges of the sizes of list segments in programs manipulating singly-linked lists. finally, we show preliminary experimental results.



found bounds are numerical constants. however, in certain applications(such as automatic parallelization, symbolic bounds analysis and bitwidth analysis), symbolic ranges are desired. symbolic range means that the bounds a and b of variable x are symbolic expressions over program variables except x.



the rest of the paper is organized as follows. section 2 discusses some related work. section 3 presents the new abstract domain of parametric ranges. in section 4, we show the application of parametric ranges to infer symbolic ranges of list segment sizes in list-manipulating programs. section 5 presents our prototype implementation together with preliminary experimental results. finally, conclusions as well as suggestions for future work are given in section 6.



value range analysis has received much attention in compilation optimization, automatic parallelization and program analysis. in the framework of abstract interpretation, cousot and cousot present the interval abstract domain to perform interval analysis using widening and narrowing. the interval domain can only infer numerical bounds of variable values, but scales to large-scale software in practice due to its linear time and space complexity.



sankaranarayanan et al. present an abstract domain of symbolic range constraints. they assume a linear ordering among program variables and restrict the range for a variable x to involve variables of order strictly higher than x. our domain restricts the range for a program variable to involve a separate set of nonnegative parameters rather than other program variables. in general, our domain is less expressive than their domain, since one could always assign nonnegative parameters with higher order than program variables in their domain. moreover, their domain allows explicit relations among program variables and does not restrict parameters involved in the ranges to be nonnegative. however, with respect to time complexity, our domain is cheaper than their domain.



the gauge domain, each program variable is approximated by a pair of symbolic ranges that are linear expressions with integer coefficients over loop counters. our domain of parametric ranges restricts the parameters to be nonnegative but not necessarily integers. also we do not restrict the coefficients in the parametric ranges to be integers. the analysis based on the gauge domain will introduce a loop counter for each level of loops during the analysis, and thus could infer symbolic ranges for each program variable in terms of loop counters. those loop counters can not be considered as parameters in our domain of parametric ranges, since they are initialized by zero and increase during the analysis. however, the loop bounds can be considered as parameters in our domain, and then we could infer parametric ranges for program variables in terms of loop bounds.



in our previous work, we have shown an approach to derive a numerical program with nonnegative integer variables from a program that manipulates singlylinked lists. the main idea is as follows: a singly-linked list can be divided into a set of non-overlapping list segments, according to reachability of pointer variables to list nodes. for each list segment, we introduce an auxiliary nonnegative integer variable, called counter variable, to denote the size of that list segment(that is the number of the list nodes contained in that list segment). in list-manipulating program procedures, there often exist nonnegative parameters that represent the initial lengths of the input lists. hence, in the derived numerical programs from list-manipulating programs, counter variables together with those numerical variables appeared in the



we have presented an abstract domain of parametric ranges to capture the symbolic ranges of each program variable, wherein the bounds of value ranges of each program variable are described as linear expressions over nonnegative parameters. this domain is more powerful than the interval abstract domain. the time and space complexity of its domain operations is o(nm) where n is the number of program variables and m is the number of nonnegative parameters. as an example to illustrate the usefulness of the new domain, we have shown its application to infer symbolic ranges of list segment sizes for analyzing list-manipulating programs.



it remains for future work to consider experiments on larger programs and the usage of parametric ranges in more applications such as buffer overflow analysis. another direction of work is to consider using nonlinear expressions over nonnegative parameters as symbolic ranges. in this case, a nonlinear template could be chosen for each program variable.



