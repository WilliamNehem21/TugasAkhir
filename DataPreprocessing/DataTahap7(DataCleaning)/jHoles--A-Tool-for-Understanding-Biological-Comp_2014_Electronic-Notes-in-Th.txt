complex networks are one of the most used tool for studying complex systems. in particular, weighted networks are becoming a more and more important tool to detect either the presence and the intensity of relations among groups of nodes in a network. topological data analysis(tda for short) is a subarea of computational topology that develops topological techniques for robust analysis of scientific data. topology is the branch of geometry that studies shapes, it classifies objects



recently, tda has been applied in several studies of biological systems, for example nicolau et al., have defined a method that extracts information from high-throughput microarray data, the use of topology derive a more qualitative information than current analytic techniques. this identified a unique subgroup of estrogen receptor-positive(er+) breast cancers that express high levels of c-myb and low levels of innate inflammatory genes. in, chan et al., have applied topological methods to extend the limits of the phylogenetic tree for understanding the viral evolution.



even if this technique is really strong for weighted networks analysis, it has some open issues from a computational point of view. we realized by empirical measures that the 90% of holes execution time is spent loading the graph(5-10%) and in the filtration process, while the rest(usually less than 10%) is spent calculating persistent homology. this is caused mostly by the clique finding problem; we recall that a clique is a complete subgraph of a graph(i.e. each node of the subgraph is connected with all the other nodes). the clique finding problem is a np-complete number of possible cliques in a graph. at each index t, holes recomputes the list of maximal cliques for the subgraph. thus, it is recomputing the same thing for all the time, since maximal cliques of a graph contains every other possible clique. moreover, this approach depends both on the density of the graph and on the number of different weights assigned to edges: for large networks this becomes a problem.



of computation and resources, so we want to propose a different approach. we now know that if we want all the cliques in a graph, then they are either a subset of a maximal clique of the graph or a maximal clique. then we can run the bronkerbosch algorithm for the entire graph and then find all the other cliques looping on each maximal clique. so, the first three steps are:



the last version of jholes allows the user to calculate the most important network statistics that are the basis of most network analysis(e.g., for their comparison, classification, anomalies detection etc...). the following statistics are computed: size, volume, average degree, maximum degree, clustering coefficient(local and average), negativity and networks weight.



the network refers to the year 2000. the data used are publicly available from the website of the bureau of transportation statistics 3. individual flights between airports were aggregated on routes as defined by origin and destination cities. the weight reported is the yearly aggregated passenger traffic.



the gene interaction network used in the paper is a sampling of the complete human genome dataset available from the university of florida sparse matrix collection. each node is an individual gene, while the edges correlates the expression level of a gene with that of the genes. the node set of the analyzed network was obtained by randomly choosing an origin node, then adding its neighborhood to the node set; the neighborhoods of the newly added nodes were then added to the node set recursively until a given number of nodes was obtained(in the case used the target number of nodes was n= 1300). then all the edges present in the original network between the nodes in the node set were added, effectively taking a connected subgraph of the original network. to reduce the computational complexity due to the large density of the graph, the weighted clique fltration was stopped at an edge weight of 0.09.



in this section we provide some graphs showing and studying benchmark results on these datasets. the first graph shows the time in seconds that jholes and holes took to process the datasets. we stopped the computation after 25 minutes if it was not complete.



the present work represents an interdisciplinary application from algebraic topology to graph theory, and an extensive treatment of these topics is not the main purpose of this paper. moreover, to make the presentation in this paper self-contained, in the next subsection we will provide some mathematical definitions that can be useful to the reader. for a complete treatment of graph theory, algebraic and computational topology we suggest[2,16].



