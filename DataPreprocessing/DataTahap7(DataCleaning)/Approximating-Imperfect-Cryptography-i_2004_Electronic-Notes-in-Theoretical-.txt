informally,(m, n) represents the pairing of m and n, and{m}k represents the encryption of m under k via a symmetric encryption algorithm. pairing and encryption can be nested, like, e.g., in({{(m, k)}k1}k2, k1).



a probabilistic pattern associated to a ciphertext is obtained by substituting every ciphered block with the corresponding expression in clear associated with the probability of obtaining information about it. given any computational adversary a(described by a probabilistic polynomial time algorithm) and the initial knowledge represented by expression g, the probabilistic pattern associated with expression{m}k is expressed in terms of the probability of obtaining information about m and is formally defined as m.pdec({m}k, g).



the paper we usually assume that set g expressing the initial knowledge of the adversary is empty. when we resort to such an assumption we omit g from the structures. obviously, it is worth noting that as the adversary gets additional information, the enriched knowledge may be responsible for increasing the estimation given by function pdec.



