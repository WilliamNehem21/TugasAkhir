the rewriting calculus has been proposed as a language for defining term rewriting strategies. rules are explicitly represented as terms, and are applied explicitly to other terms to transform them. sets of rules may be applied to(sets of) terms non-deterministically to obtain sets of results. strategies are implemented as rules which accept other rules as arguments and apply them in certain ways. this paper describes work in progress to strengthen the rewriting calculus by giving it a logical semantics. such a semantics can provide crucial guidance for studying the language and increasing its expressive power. the latter is demonstrated by adding support to the rewriting calculus for what we call higher-form rewriting, where rules rewrite other rules. the logical semantics used is based on ordered linear logic. the paper develops the ideas through several examples.



where we write@ for explicit application of a rule. the language is higherorder in the sense that rules and even sets of rules may be passed as arguments to other rules. this enables parameterized strategies to be written. a very simple example taken from the cited work is



whether or not soundness holds without the restriction on the use of(congr), in the next section we cast off all restrictions on the uses of the rules to obtain a more general notion of rewriting. so of course, we cannot rely on our(restricted) soundness theorem in what follows. but that is indeed what we want. we have motived our semantics by showing that it is complete and sound(in a restricted way) for a well-understood form of rewriting. we then generalize the semantics in order to guide the definition of higher-form rewriting.



we can develop the linear logical semantics of the previous section to support a much more general kind of rewriting than traditional first-order rewriting. we can support higher-form rewriting, where rules can rewrite other rules. this paradigm has the potential to enable rewriting meta-programs like completion or termination analysis to be written in the same language as the rewriting system itself, without reflection(cf.).



we have considered a logical semantics for traditional rewriting and also what we call higher-form rewriting, where rules may rewrite rules. the semantics is based on ordered linear logic, with some higher-order extensions. terms are interpreted as formulas, and rewriting as ordered linear entailment. all but one operational rule of the rewriting calculus as given by cirstea and kirchner are sound with respect to the proposed semantics.



h. cirstea, c. kirchner, l. liquori, and b. wack. rewrite strategies in the rewriting calculus. in b. gramlich and s. lucas, editors, proceedings of the third international workshop on reduction strategies in rewriting and programming, valencia, spain, june 2003. electronic notes in theoretical computer science.



