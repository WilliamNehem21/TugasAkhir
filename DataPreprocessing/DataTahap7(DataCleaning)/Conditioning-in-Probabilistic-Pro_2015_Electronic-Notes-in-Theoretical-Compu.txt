in recent years, interest in probabilistic programming has rapidly grown[9,11]. this is due to its wide applicability, for example in machine learning for describing distribution functions; bayesian inference is pivotal in their analysis. it is used in security for describing both cryptographic constructions such as randomized encryption and experiments defining security properties. probabilistic programs, being extensions of familiar notions, render these fields accessible to programming communities. a rich palette of probabilistic programming languages exists including church as well as modern approaches like probabilistic c, tabular and r2.



to model probabilistic programs with conditioning we extend pgcl with observations, leading to the conditional pgcl(cpgcl). at the syntactic level, an observation is introduced with the instruction observe(g), g being a boolean expression over v. the effect of such an instruction is to block all invalid program executions violating g and rescale the probability of the remaining executions so that they sum up to one.



