the petri net baukasten is divided into different views, namely the application developer view, the expert view, and the tool developer view, which are linked via a so-called common base. the common base(for details also see[4, 17]) consists of a classification of petri nets and corresponding notions independent of their use in applications, their formalizations, and tool support. these petri net notions are represented in the specific views. they concern the use of the petri net notions within a certain application domain, their formalization in the theory of petri nets, and their implementation as petri net tools.



it is important to note, that the petri net baukasten is given on a purely conceptual level. the contents of the specific views and common base as well as the way, how these relations are established, are not relevant on the conceptual level. therefore, in order to apply the petri net baukasten in practice we have to realize or install 3 it, which can be accomplished in various ways. an installment of the petri net baukasten fixes the contents and the technical support of the petri net baukasten. there is already one installment, the so-called initial realization, which has been documented in. this installment contains only medium amount of data on a low technical level and it does neither allow an interactive access to its contents nor a change operating on this database and an explicit access for each user group provided by specific user interfaces. the database may be searched or enriched by the services. enrichment demands some kind of cooperation among the users in order to maintain the conceptual structure of the petri net baukasten. more precisely, in order to maintain a correspondence between the different views an inserted piece of data in one view has to be related to corresponding data of the other views. the different views include a petri net notion, resp. a petri net type, in the common base, its formalization in the expert view, an application-oriented interpretation in the application developer view, and a



cannot be expected from a single user, the 2nd installment has to support the cooperation among users as well. intercooperation may comprise discussions of open problems as well as joint research within and also across the different user groups. it is therefore an important means for bridging the gap between different views on petri nets.



the paper is organized as follows: in section 2 we briefly review the aims and the concept of the petri net baukasten and give an overview of the 2nd installment. in section 3, 4 and 5 we explain its several constituents, namely user interface, services and database. in section 6 we propose a corresponding software architecture for the petri net baukasten. this architecture is based on the above constituents and comprises additional functionality which are essential for the software realization. the paper concludes with a user scenario in section 7 outlining the benefit of the 2nd installment.



the main aim of the petri net baukasten is to provide support for the different users of petri nets. this support is given with respect to specific application domains. as application domains we consider all areas where petri nets have supported the development of a system in this domain, e. g. production automation, control systems, workflow management, etc.



a petri net type is given by a semiformal description of its characteristics. the description uses petri net notions concerning the basic constituents of a petri net variant like place, transition, marking, etc. and concerning the available petri net operations for analysis, or structuring techniques, etc. the petri net type is represented in the petri net classification in the common base and holds links to the other views.



the formal description of a petri net type is given in the expert view. for each characteristic a mathematical formalization is given; basic constituents are captured in the definition of the petri net class. operational constituents correspond to definitions and results of petri net operations.



if only parts of a petri net technique are available we speak of an incomplete petri net technique. addition of missing parts together with a corresponding link is called completion in the following sections. although ideally each petri net technique should be complete, it is important to consider also incomplete petri net techniques, because the petri net baukasten or further research and development may be able to provide the missing parts. but more restrictive



database the contents of the 2nd installment is stored in the database. in contrast to the initial realization it is not fixed, but may increase dynamically. according to the concept of the petri net baukasten it is substructured into specific data for the different user groups and the common base.



the common base contains the petri net classification and petri net notions and links to data of the specific views. in principle, we could start with an empty database, which is gradually enriched. for convenience we assume the data of the initial realization as its contents. more details about the database can be found in section 5.



services operate on the database. we distinguish between common-, application-, expert-, and tool-services, which are described in section 4. basically, there are search services which find data according to input parameters and maintenance services. maintenance services modify the database and trigger an asynchronous cooperation between users(of different groups). this cooperation is essential for maintaining the basic concept of the petri net baukasten, described in section 2.2. for search services the set of admissible input parameters is derived from the contents of the database, and may thus also be changed by maintenance services.



we provide a general user interface from where a specialized interface for any of the different user groups, application developers, experts, and tool developers, can be reached. each specific user interface offers an individual set of services enabling the access to information about petri nets, which are relevant to the respective user group. such services are described more detailed in section 4. as a result of this, a separation of concerns is achieved leading to a more need-oriented and easy use of the petri net baukasten.



the choice of one of the three different user groups correspond to the main objectives of the particular user. if their objectives change over the time they may chose a different access accordingly. for example, a user may be first interested in the formal development of a specific petri net type and later in the implementation of an appropriate petri net tool. this person should use the petri net baukasten as a petri net expert first and as a tool developer afterwards. accordingly, the person uses the petri net expert user interface first and the tool developer interface afterwards. the specific sub-interfaces are reached through the common user interface, which realizes the user choice according to their role. a second task of the common user interface is the



accordingly, we define the following application services. the first five services stand in a one-to-one correspondence to the tasks listed above. the last service has been added in order to support the dynamic use of the 2nd installment of the petri net baukasten.



the service determines this petri net type and offers it to the application developer. together with the list of results more information about the different petri net types is provided, as e. g. intended application domains, possible tools, informal and formal descriptions. these informations finally facilitate the petri net type selection.



basic structure and notions of the expert view have been introduced in. these include descriptions of formal petri net techniques, transformations, abstract petri net frames, and scheme. a formal petri net technique is the formalization of a petri net type in the common base, including formal definitions of its basic constituents and operations like e. g. transformations to other formal petri net techniques. an abstract frame yields a generic description of a class of formal petri net techniques. all descriptions are given in a structured way, the so-called schemes. the following services have been constructed accordingly, where add formal petri net technique and add transformation services invoke the common service petri net technique completion.



add formal petri net technique this maintenance service adds a formal petri net technique together with its semiformal description by a petri net type to the database. the expert has to fill out the scheme for formal petri net techniques. moreover, he has to provide the semiformal description of the petri net type using already existing petri net notions and possibly defining new ones. help is provided by the glossary of existing petri net notions. the common services petri net type insertion, resp. link construction place the newly defined type in the petri net classification and the service parameter maintenance adds new petri net notions.



petri net tool selection this service supports tool developers in selecting a petri net tool. it provides the tool developer with relevant information about the tool, such as functional range, implementation language, underlying programming concepts, operating system etc. these information enable tool developers to compare existing implementations and hence to find tools or specific modules which can be enhanced or reused for their own tool implementation.



search for petri net input formats most of existing petri net tools use their own petri net input format. this service provides a search function about existing formats and existing transformation scripts translating them into each other. it furthermore provides the tool developer with information about the current results concerning the development of a standard interchange format for petri nets based on xml.



facilities for building prototypes this service uses the petri net kernel(pnk). the pnk can be considered as an infrastructure for building petri net tools by offering standard functions and a graphical user interface. the pnk is not restricted to a particular petri net type but covers all relevant petri net types due to parameterization. it covers the following sub-services:



t.maintenance this service realizes a tool administration component which stores relevant informations about tools in the tool data base. the administration is based on a form containing all relevant information about a tool, as e. g. a general description, the underlying petri net type(s), the implemented petri net operations, some technical instructions, information about licences and some evaluation notes. similar to the service a.maintenance this service triggers completion of the petri net technique by other user groups via the common service petri net technique completion.



petri net type insertion this services updates the common base-database. for a new petri net type a new class with corresponding attributes and functions is generated and ranged into the classification hierarchy. finally it is linked to the user specific views.



the theory of petri nets presented in the expert database is based on the notions of abstract petri net frames, formal petri net techniques, actualiziations, and transformations. we use schemes for the structured representation of these notions in order to obtain a uniform structure. the expert database contains in its initial state all the data of the initial realization in. additionally, data for the service add scheme and searchabstract frame is provided. this comprises definitions and conditions for all operations, which are based on general techniques. e. g. the structuring technique of union is based on the categorical pushout, and correspondingly the definition is included in the expert database. similarily, the definition of high-level replacement systems



the common database contains in its initial state the current version of the classification diagram presented in the initial realization. every petri net type and its properties is described within the class notation of uml. the relations between different petri net types are denoted through the hierarchy relationships, such as specializationand generalization, within the class diagramm. the data stored in the common data base plays a key rule, because it links the data of the three different views.



besides the assistance services we consider the user session services. this set is accessed via the common user interface and takes over tasks like administration and supervision of user sessions. it comprises the safe and load of login and session data as well as bookmarking.



the last part of the described architecture is the repository. here all the relevant data are managed. there is one repository which holds the pn data discussed in section 5. additionally, we consider a user database which holds session data, bookmarks, notes etc. these data elements are generated during a session and are stored and provided for further use.



the common user interface is open and allows the user to login by calling the user session service login service. here the system identifies the user, loads the status of the last interaction, and asks if he wants to continue his activity as application developer. in this case the application developer interface is opened and the old session data is loaded. the application developer may now continue his work. lets assume he wants to select a certain petri net type that fits certain workflow aspects. he selects the service petri net type selection which offers an application-oriented checklist or navigation through the petri net classification. opening a modeling related checklist the user may take his choice between a combination out of functional, data/document, roles, ressource and time aspects. assume he wants to model functional aspects combined with ressource and time aspects. he selects these aspects, which are used by the system as input parameters. the system determines petri net types, which comprise the demanded aspects. the resulting list, comprising e. g. petri net types discussed in[2, 3, 5, 9], is presented in a new window. to facilitate the choice between the variety of petri net types some more information(informal-, formal description of the used petri net types, analysis methods, tool support, examples) about the results is provided. assume our user wants to apply qualitative analysis methods and performance evaluation. this reduces the choice to the approaches based on stochastic petri nets, whereby only the approach in provides tool support. after the selection of one petri net type, the system provides the user with relevant data and tool support.



