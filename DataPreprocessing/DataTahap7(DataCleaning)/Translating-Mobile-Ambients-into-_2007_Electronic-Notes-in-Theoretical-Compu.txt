we present a translation of the mobile ambients without communication and replication into p systems with mobile membranes. we introduce a set of developmental rules over membranes, and describe the correspondence between the behaviour of an ambient and the evolution of its translated membrane system. we give an operational correspondence result between the mobile ambients and p systems.



a successful formalism for expressing mobility is provided by ambient calculus, where ambients change their location by consuming certain capabilities. this formalism is well suited for expressing such issues of mobile computations as working environment, and access to information or resources. membrane systems represent a new abstract model inspired by cell compartments and molecular membranes. essentially, such a system is composed of various compartments, each compartment with a different task, and all of them working simultaneously to accomplish a more general task of the whole system. the p systems with mobile membranes is a model which expresses mobility by the movement of membranes in such a system. the movement is given mainly by two operations: exocytosis and endocytosis. both mobile ambients and p systems are used to model various aspects on the distributed systems. distributed features of mobile ambients are described in, and distributed algorithms for membrane systems are presented in.



the structure of the paper is as follows. section 2 presents the pure mobile ambients, whereas section 3 presents the p systems with mobile membranes and local evolution rules. the core of the paper is represented by section 4, where we present the translation of mobile ambients into p systems. we introduce a particular set of developmental rules, and simulate the behaviour of an ambient by applying the developmental rules in the corresponding p system. we establish an operational correspondence between the mobile ambients and membrane systems. conclusion and references end the paper.



a detailed description of the p systems can be found in. a membrane system consists of a hierarchy of membranes which do not intersect, with a distinguishable membrane called skin surrounding all of them. the space outside the skin membrane is called the environment. a membrane contains multisets of objects, evolution



there are many variants and classes of p systems; many of them are introduced in. we give here a short description of the p systems with mobile membranes having local evolution rules. we use these particular p systems to build our translation.



an elementary membrane labelled h enters the adjacent membrane labelled m, under the control of object a. the labels h and m remain unchanged during this process; however the object a may be modified to b during the operation. membrane m is not necessarily elementary.



an elementary membrane labelled h is sent out of a membrane labelled m under the control of object a. the labels of the two membranes remain unchanged; the object a of membrane h may be modified to b during this operation. membrane m is not necessarily elementary.



in this section we describe a relationship between pure mobile ambients(without communication and replication) and p systems. this relationship is mainly provided by a translation of the ambients into p systems. other encoding of the mobile ambients into new computational models is also presented in. in order to translate the pure mobile ambient into a specific class of p systems we use the following translation steps: an object dlock is placed near the membrane structure after all the translation is done. the additional object dlock is used to simulate the deadlocks from mobile ambients in membrane systems. it prevents the consumption of capability objects in a membrane system which corresponds to a deadlock structure in mobile ambients.



a feature of pure mobile ambients is that they have a spatial tree-like structure. the nodes in this structure are represented by ambients and capabilities. when translating a pure mobile ambient into p systems, we obtain the same tree structure of the membrane system, where every node is a membrane corresponding to an ambient or a capability. when translate the ambient n[in m.0| t[]]| m[] into a p system, we obtain dlock[nin m[in m]in m[t]t]n[m]m.



as a final step, all the possible rules of type l) are applied in order to eliminate all the internal dlock objects. the rules are applied in the order we have presented them, with the additional remark that the rules of the tuples(r1, r2),(r10, r11),(r12, r13, r14),(r15, r16) can be applied in any order. the computation stops when all the star objects from the membranes are consumed, and after introducing all the objects dlock by applying rules of the form k), none of the rules of the form a), d) or g) can be applied.



