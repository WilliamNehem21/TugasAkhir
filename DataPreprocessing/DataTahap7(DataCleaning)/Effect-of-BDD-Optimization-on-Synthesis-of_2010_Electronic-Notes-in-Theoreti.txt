ment edges, and advanced orderings) on the resulting reversible and quantum circuits. we describe in detail the adjustments, which have to be done to support these optimizations for synthesis, and discuss possible improvements and drawbacks. in a case study, the effects are experimentally evaluated. the results showed, that applying these optimization techniques leads to significant smaller circuits(with respect to number of gates and lines) in most of the cases.



reversible and quantum logic[10,1,20] has applications in domains like low-power design, quantum computing, optical computing, dna computing, and nanotechnologies. since synthesis of reversible and quantum circuits significantly differs from traditional design(e.g. fan-out and feedback are not allowed), it has become an intensely studied research area in the recent years.



in this work, we describe an improved bdd-based synthesis approach that supports shared nodes, complement edges, and different orderings for bdd-based synthesis of reversible and quantum logic and discuss possible improvements and drawbacks. in a case study, we evaluate the effect of these optimization methods on the resulting circuit sizes. it turned out, that applying these optimization techniques leads to significant smaller circuits in most of the cases.



the remainder of the paper is structured as follows: section 2 provides the basics of reversible and quantum logic as well as of bdds. afterwards, in section 3 the synthesis approach as proposed in is briefly reviewed. section 4 describes the new bdd-based synthesis approach that supports shared nodes, complement edges, and reordering for bdd-based synthesis of reversible and quantum logic. finally, in section 5 the effect of these optimization techniques on the resulting circuits is experimentally evaluated while the paper is concluded in section 6.



a logic function is reversible if it maps each input assignment to a unique output assignment. such a function must have the same number of input and output variables x:={x1,..., xn}. since fanout and feedback are not allowed in reversible



current state-of-the-art bdd packages(e.g. cudd) exploit several optimization techniques to build bdds of small size. in this section, we describe how these techniques can be applied to the proposed bdd-based synthesis as well. the effect of these optimizations on the resulting reversible or quantum circuits is considered in the next section.



further reductions in bdd sizes can be achieved if complement edges are applied. in particular, this allows to represent a function as well as its negation by a single node only. if a complement edge is applied, the output value of its connected node becomes inverted. to support complement edges in our synthesis approach, new substitutions have to be determined, that take the inversion by complement edges into account.



it has been shown that the order of the variables has a high impact on the size of the resulting bdd. in the past several approaches have been proposed to achieve good orderings(e.g. sifting) or to determine exact results. all these techniques can be directly applied to our synthesis approach and need no further adjustments of the already introduced substitutions.



in this paper, we described and evaluated how optimization techniques for decision diagrams can also be exploited for bdd-based synthesis of reversible and quantum logic. we considered shared nodes, complement edges, as well as ordering strategies and present the gate cascades needed to support these methods. in a case study the effect of these techniques on the circuit sizes has been evaluated. in most of the cases, bdd optimizations lead to improvements in the circuit sizes as well.



in future work, we plan to adjust the optimization techniques for the synthesis purpose with respect to the expected circuit size, not to the bdd size. as an example, the cost function which is used during reordering should be modified for this purpose. besides that, also other decompositions should be considered.



