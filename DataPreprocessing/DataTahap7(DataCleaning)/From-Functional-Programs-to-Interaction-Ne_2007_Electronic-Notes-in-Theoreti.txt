intuitively, a net n is a graph(not necessarily connected) with agents at the vertices and each edge connecting at most 2 ports. the ports that are not connected are free. there are two special instances of a net: a wiring(no agents) and the empty net; the extremes of wirings are also called free ports. the interface of a net is its set of free ports.



the top auxiliary port of a case agent represents the output; the interaction rule above selects the branch i corresponding to the constructor ci and connects it to the output port(all other branches are erased). it is a straightforward exercise to verify that this indeed mimics the corresponding reduction rule. note that we are assuming that all patterns are disjoint(non-overlapping) but they may be nonexhaustive. if a case agent gets connected to a constructor for which there is no branch, the interaction results in a failure.



the following is the compilation, where the net p is the common prefix, with principal ports pointing towards t(t)(so the rules in subsection 4.3 will apply). in the diagram below we assume that there is nothing else to the pattern, as this situation has already been dealt with previously.



