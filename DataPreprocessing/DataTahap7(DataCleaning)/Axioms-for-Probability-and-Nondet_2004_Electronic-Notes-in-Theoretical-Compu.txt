this paper studies a simple calculus for finite-state processes featuring both nondeterministic and probabilistic choice. we present a domain model and an operational semantics for our calculus. the denotational model uses the probabilistic powerdomain of jones and plotkin, combined with a geometrically convex variant of the plotkin powerdomain. the operational model defines transition rules under which a process makes transitions to probability distributions over states. we prove a full abstraction result that shows two processes have the same denotation if and only if they are probabilistically bisimilar. we also show that the expected laws for probability and nondeterminism are sound and complete with respect to the denotational model.



this paper gives a domain-theoretic semantics for a probabilistic process algebra. we use the probabilistic powerdomain to model probabilistic choice, and we use a geometrically convex variant of the plotkin powerdomain, independently due to mislove and tix, to model nondeterministic choice. we also give an operational semantics for the process algebra, and we show that our domain model is fully abstract with respect to probabilistic bisimilarity. the relies on the main result of the paper, which presents a set of laws for probabilistic and nondeterministic choice that is sound and complete with respect to our domain model. the completeness result applies to finitestate processes; thus we restrict ourselves to a process algebra with prefixing, probabilistic choice, nondeterministic choice and recursion. however, for the completeness proof it turns out to be more convenient to work with the domain model than the operational model.



hand summand is to do a b-action and become p. we thus infer that one possible(probabilistic) transition of p is to do an a-action with probability 1/2 and a b-action with probability 1/2, and become p again in either case. this takes care of the right branch of the process q.



become p again. since we have a continuous semantics, we infer that p can do a with probability 1 and then become p again, which takes care of the left branch of q. this shows informally that p can do anything q can.



our domain-theoretic semantics for probabilistic agents corresponds to a version of probabilistic bisimulation. definitions of bisimulation for agents featuring both probabilistic choice and nondeterministic choice have appeared in[18,13]. the definition below is slightly different since we take account of divergence in our operational semantics.



