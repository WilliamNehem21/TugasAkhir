signal strength and other variables of the surrounding environment. furthermore the disturbance does not need to be symmetric. a scheduling of communications in such a network can be modeled as a weighted improper coloring, and this is where the generalization stems from.



let g=(v, e) be an undirected graph. for a vertex v v let d(v) denote the degree of v in g, and ds(v) denote the degree of v in the subgraph induced by a subset s v. a k-coloring c: v 1,..., k of g is a partition of the vertex set v into k vertex-disjoint subsets, and c[v] denotes the set of vertices that have color c(v). a k-coloring c is d-defective if for each v v, dc[v](v) d. a d-defective k-coloring is also called a(k, d)-defective coloring. note that ordinary coloring is a special case of defective coloring where d= 0, so defective coloring is a proper generalization of ordinary coloring.



definition 1.4 a tree decomposition of a graph g=(v, e) is a pair(x, t), where x= x1,..., xn is a collection of subsets of v, and t is a tree whose vertices are the subsets in x, which we will refer to as super-vertices. additionally, the following properties must hold:



the width of a tree decomposition(x, t) is maxi xi 1. the treewidth of a graph g is the minimum width of any tree decomposition of g. a path decomposition is a tree decomposition(x, t) where t is a path graph. the pathwidth of a graph g is the minimum width of any path decomposition of g. finally, path and tree decompositions can be extended to digraphs by using the underlying graph(i.e. by treating directed edges as undirected).



defective coloring and the related t-improper coloring were first introduced by andrews and jacobsen, harary and frank and cowen et al.. graphs on embeddable surfaces were the main focus of cowen et al. and cowen, goddard and jeserum and they characterized all(k, d) such that planar graphs are ddefective k-colorable and produced results for surfaces of higher genus. frick and henning gave extremal results on the defective chromatic number and kang and mcdiarmid proved bounds on the growth of the defective chromatic number of random graphs. other properties than degrees of vertices have been researched regarding defective coloring and frick gives a good survey on such variations of the problem.



now consider a graph g, and say we add any amount of 0-weight edges to this graph to make a new graph gj. as these 0-weight edges impose no new restrictions, it is clear that g is k-colorable if and only if gj is k-colorable. in fact, we can add 0weight edges until the graph is complete without adding any restrictions, and hence, in a sense, we can always assume that the graph is complete. this observation gives rise to the following lemma.



proof. start with any 2-coloring c: v 1, 2 of g. while we have some vertex with at least two same-colored neighbors, pick such a vertex v and flip the color of v to the opposite color. this step reduces the number of monochromatic edges by at least 1 and as there are at most e monochromatic edges to begin with, the procedure halts after a finite number of steps. when the procedure halts, every vertex has at most one incident monochromatic edge and as the weights are less than 1, the degree of the vertex with respect to its color is less than 1. 2



now consider any weighted digraph g=(v, e, w) with bounded treewidth k and bounded maximum indegree. algorithm 1 is an adaptation of the classic fixedparameter algorithm for ordinary graph coloring. it additionally keeps track of colors of the in-neighbors of the vertices being colored to be able to check weight restrictions.



proof. lemmas a.4 and a.5 show that the colorings discovered by algorithm 1 are exactly the valid colorings using at most k+1 colors. in particular, as the weighted improper chromatic number is at most k+1 by fact 4.1, it will discover all colorings that have the minimum number of colors. and as the algorithm returns the minimum number of colors in any coloring found, it will return the weighted improper chromatic number of the input graph g.



algorithm 1 has exponential time complexity, as it is essentially a backtracking algorithm that explores all valid colorings of at most k+1 colors. now notice that the results of the color function only depend on the values of its input parameters. also notice that the call hierarchy of the recursive calls is acyclic. therefore the results of these function calls can be computed efficiently using dynamic programming. that is, by computing the results of the function calls for all possible input parameters, storing all results, and then re-using the stored results



there are many graphs of bounded treewidth and bounded maximum degree, and this algorithm is linear when applied to these graphs. this includes bounded degree interval graphs, cn kt where t is bounded, and kth powers of paths and cycles where k is bounded. remember that it is-complete to weighted improper color the unbounded versions of these graph classes by lemma 2.3.



and edge weights with bounded precision of b bits. let r denote the set of b-bit fixed precision real numbers. algorithm 2, similar to algorithm 1, is an adaptation of the classic fixed-parameter algorithm for ordinary graph coloring, but instead of the coloring of the neighbors, it keeps track of vertex budgets to check weight restrictions.



recursively to solve further subproblems. the reason is that the budget of a given vertex is not independent amongst the children super-vertices. in order to break up this dependency, the distribute function distributes the budget of a given vertex amongst the children super-vertices. this is done by recursively going over all child super-vertices of super-vertex xp and deciding how much of the budget may be spent in the subtree rooted at the i-th child. then color can be called with this budget, r, on the i-th child to solve further subproblems.



proof. lemmas a.8 and a.9 show that the colorings discovered by algorithm 2 are exactly the valid colorings using at most k+1 colors. in particular, as the weighted improper chromatic number is at most k+1 by fact 4.1, it will discover all colorings that have the minimum number of colors. and as the algorithm returns the minimum number of colors in any coloring found, it will return the weighted improper chromatic number of the input graph g.



calls is acyclic. therefore the results of these function calls can be computed efficiently using dynamic programming. that is, by computing the results of the function calls for all possible input parameters, storing all results, and then reusing the stored results when needed. let n= v(g), k be the treewidth, and b be the precision of weights(i.e. the number of bits used to represent them). as there are(k+ 1)k+1 possible maps from a set of k+ 1 elements to a set



we also showed that 3-regular graphs that have edge weights strictly less than 1 are 2-colorable, and that two colors may not be sufficient when each vertex has at most two incident weight-1 edges. it would be interesting to find necessary and sufficient conditions on edge weights for a 3-regular graph to be 2-colorable. in particular we conjecture that sub-cubic graphs with at most one incident weight-1 edge are 2-colorable.



we gave fixed-parameter algorithms for weighted improper coloring when either treewidth and maximum degree are fixed or when treewidth and precision of edge weights are fixed. these algorithms also imply a linear-time algorithm for certain graph classes such as interval graphs with bounded degree. a combination of rounding edge weights with the fixed-parameter algorithm for bounded treewidth and bounded precision weights might imply an approximation algorithm for weighted improper coloring of graphs of bounded treewidth.



