sibility of security threats across different area: data plane, control plane, and migration plane. potential attackers may employ both passive and active attack techniques, putting the live migration at risk and resulting in a decline in performance. this poses a significant and alarming risk to the overall platform.



securing their cloud infrastructure. until relatively recently, organisations have mainly managed their business processes on their private infrastructure and outsourcing services has usually been for non-critical data/applications[5,6,6]. as a result of these challenges, many organisations find that cloud adoption is significantly more complex than initially imagined. furthermore, as organisations gain more cc experience, they may shift their core business functions onto the cloud



the traditional network perimeter has been broken, and organisations that adopt cloud-based solutions are now sharing the task of controlling their data and applications. new attacks on cc have emerged, and the benefits of being accessible from anywhere have become significant threats. many cc issues are the same as the old ones but in a new setting.



the research gap identified the need to improve the security of live vm migration while providing an efficient operation; aspects such as reducing the total migration time, minimising service interruption during migration, and enhancing migration security, have been essential issues since the proposal of live vm migration. for instance, the next stage of live migration begins after copying the working set to the destination server. in this phase, any modified memory pages are transferred to the destination server. this step is referred to as the while they are being transit or when they are located at the source and destination points in the live vm migration procedure. based on inquiries, we present a novel framework to ensure the secure live vm migration in real-time. our proposed framework incorporates a vtpm agent along with six additional, namely input/output, data plane, integrity analyser, data organisation, go agent, and libvirt agent.



using their workloads and data in the cloud. current provisioning and deployment frameworks typically involve storing the vm and application images and data in the clear(i.e., unencrypted) or having these images and data encrypted keys controlled by a service provider, usually uniformly for all tenants.



according to zheng et al., they introduce a fresh scheduling algorithm aimed at enhancing the performance of i/o storage during wide-area migration. this algorithm stands out because it takes into account various factors related to the storage i/o workload of individual vms, including temporal location, spatial location, and popularity characteristics. by considering these aspects, the algorithm calculates optimal schedules for data transfers, resulting in improved efficiency. this research inspired by zheng et al. put forward an algorithm that delivers substantial performance advantages for a diverse set of benefits across a wide range of popular vm workload, reduce latency, and improve overall resource utilization.



specific record, they know that the migrated record contains information that could not be loaded immediately. for each such example, the original data from the legacy system is preserved in a standard format and linked to the new record. the user can quickly check the source to interpret the data meaningfully.



the approaches of live vm migration are generally divided into three classes: 1) migration of the process; 2) migration of memory; 3) suspend/resume migration. in this research, live vm migration means migrating a vm from a source host to a destination host while protecting against four key migration attacks(detailed in section 6.1). these requirements must be incorporated into the secure live vm migration platform.



during the migration process, an attacker may initiate man-in-themiddle(mitm) attacks using route hijacking or address resolution protocol(arp) poisoning techniques. the source and destination platforms need to perform mutual authentication during live vm migration to avoid mitm attacks(authentication). an encrypted network must be set up so that no data can be accessed from the vm content by an intruder, and any software alteration can be detected correctly. this will help prevent active attacks on live migration, such as memory manipulation, and passive attacks, such as sensitive information leakage(confidentiality and integrity). an intruder may intercept traffic and later replay it for authentication in the process of the vm migration. therefore, the method of live vm migration should be immune to replay attacks. for example, nonces in java applications can help with the password for migration authorisation, as well as the public key to the machine where the user is sitting to provide the correct command that is transmitted to the server during migration, preventing playback attacks(reply to resistance). the source host cannot deny the vm migration activity, and this feature can be achieved by using public key certificates(source non-repudiation).



migration schemes. in addition, this framework can improve the security of other vm tasks, such as those associated with the virtualisation and the virtual networking layers, which may experience the same data integrity problem as vm live storage migration. this research framework and the three frameworks named above exploit the secure live migration characteristics, but they improve the vm migration security in different ways. for example, the scheme of zheng et al. aims to significantly reduce the total amount of data transferred by exploiting



an rp relies if the end-user controls an identifier; user agent is the enduser that runs a vm migration process called ua; trust authority(ta); and endpoint url(ieu). access attributes are defined as read, write, read/write, and execute. in the access matrix, each member represents the access authority of the subject to the object.



the cw model has several axioms(properties) that can be used to limit and restrict state transformation. if the arbitrary state of the system is secure, then the system is secure. the simple-security property(ssp) is adopted in this study. this property states that an object at one level of integrity is not permitted to read an object of lower integrity.



processors functions and helps the guest os to generate and store private keys when connected to a vm. this reduces the area of the vm that is exposed to attack. typically, compromising the guest os compromises its privileged insights, but a vtpm can significantly decrease this risk. the guest os can utilise these keys for encryption or authentication. a



system. the attacker knows that it needs to remove this data from each vm because each virtual guest writes to its local storage device and then propagates the data out to each redundant virtual storage device. to delete all the critical human resource data traces, the attacker needs to eliminate the shared storage device and the localised virtual storage devices in the guests. in a typical single-box scenario, the attacker would have to gain access to each box individually, to share the local data partition, which would mean mounting a tedious 1:1 box attack. since



this scenario is using the kali linux system and three steps such as enumeration, gaining access, privilege escalation to attack the vm host. the guest vm running on another computer with the same hardware features in the isolation lab; therefore, there are no legality issues. after gathering information about the target vm machine and the entities they belong to(called footprinting) and identifying live hosts, ports, services and discovering os and architecture of the target vm machine(called scanning the system). it is then time to get a clear picture of the target machine, identify vulnerable user accounts, establish null sessions and connections, or shared resources using an active connection to systems. therefore, by running the below nmap command, the first step of attack started and enabled os detection, version detection and traceroute with the-a argument. the-pargument pushes the nmap to scan all tcp ports, and-v uses for one level of verbosity. the-ox argument is used to save results in an xml file called nmap. xml.



this is a strong foothold, and an attacker has access as an unprivileged user to the system; however, the attacker is still keen to be a privileged user and get root access. the next step is extracting usernames, machine names, and network resources from the system(called enumeration) to escalate privileges. here, the attacker used automated linux privilege tools called linenum to run in the victim virtual machine by using the command line below.



there are various performance parameters in a cloud migration process, including a) scalability, b) powerful computing capabilities, c) flexibility, d) storage capacity, and e) quality assurance. regardless of the exact purpose of data migration, the goal is generally to enhance performance and competitiveness. however, less secure but successful migrations can result in inaccurate data that contains redundancies and unknowns.



university, college station, texas, and the phd degree in information systems from the university of auckland, new zealand. he is currently a professor in the department of computer science and software engineering at auckland university of technology(aut), new zealand. from 2015 and until 2020, professor gutierrez was the deputy head of the school of engineering, computer and mathematical sciences also at aut. his current research is on internet of things security, networking and information security, viable business models for ict-enabled enterprises, next-generation networks, and



roopak sinha(phd, be(hons), mce, sm-ieee, sfhea) is director of the software engineering research centre(serc) at auckland university of technology. his primary research interest is systematic, standards-first design of nextgeneration cyber-physical systems and software applied to domains like internet-of-things(iot), edge computing, cyberphysical systems, home and industrial automation, and intelligent transportation systems. he is an active member of several international iso/ieee standardisation committees. roopak also works with new zealand companies to adopt industry standards into their software and to systematically reduce standards-compliance costs.



