programmers need tools that calculate error bounds and automate the tedious and error-prone reasoning involved in proofs of correctness for their floating-point algorithms. they follow the ieee 754 standard because most hardware and software libraries support it and provide fast implementations with multiple levels of precision. as examples of adoption of this standard, four levels of precision are available on intel cpus and three on nvidia gpus, and decimal floating-point numbers are in a package developed by cornea, et al..



we model ieee floating-point numbers as a subset of r. subnormal numbers and zero are represented using a set of real numbers that are a fixed distance apart(fixedpoint numbers). normal numbers are represented using a subset of an infinite set of real numbers that are varying distances apart(floating-point numbers). finally, we take any real number whose magnitude is above a carefully chosen threshold to be floating-point infinity. we do not model signed zero or nans. each set is explained in more detail in the following sections.



in this work, we presented a new formalization of fixed and floating point that is part of the current hol light distribution. we believe that this public release of a hol light theory for floating point will enable the hol light community to work in their familiar framework, without having to resort to cross theorem-prover analysis which is currently not very well supported or developed. we also plan to investigate round-off errors in floating-point computations to obtain tight upper bounds on round-off error in a separate project. we plan to employ our work in that project for checking proof certificates of the reported error.



