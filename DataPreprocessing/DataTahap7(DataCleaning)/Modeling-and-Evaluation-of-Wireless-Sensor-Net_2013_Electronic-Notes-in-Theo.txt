wireless sensor networks(wsns) are widely used in different kinds of environments. they may encounter lots of stochastic uncertainties and disturbances like message loss and node dynamics. thus, it is critical to ensure the correctness of low level protocols in wsns and evaluate their performance under different circumstances. in this paper, we propose a new method to analyze and evaluate wsn protocols based on stochastic timed automata and statistical model checking.



for modeling, the work flow of a wsn protocol can be modeled with classical timed automata. then, to model the uncertainties such as message loss and node dynamics, which are common in realistic circumstances, the timed automata can be extended by stochastic transitions, resulting in the stochastic timed automata. for analysis, the correctness of the protocol can be answered by classical model checking on the timed automata, while the performance of the protocol under realistic environments can be evaluated by statistical model checking on the stochastic model. to illustrate the feasibility and scalability of the modeling and verification method presented in this paper, timing-sync protocol for sensor networks(tpsn) will be studied completely throughout the paper.



nowadays, wireless sensor networks(wsns) have attracted world wide attention and have been used in military operations, medical care, environmental monitoring and protection etc. all high level applications in wsns are working based on their underlying protocols. to run these applications correctly and efficiently, the low level wireless sensor network protocols must be robust and reliable. in addition, devices in wsns are usually difficult to change once deployed, so we must ensure that the protocols work well under their target environment in the design phase.



for modeling, as wsn protocols always have intensive connections with real time behaviors, timed automaton is a natural modeling language for wsn systems. studies like,, have tried to use timed automata to model the work flow of the system. but classical timed automata can only model the behaviors of a system under ideal circumstance. as wsn systems can be deployed in any kinds of environments, they may encounter many kinds of uncertainties like message loss and node dynamics. thus, it is important to introduce stochastic behaviors into timed automata to support the modeling of uncertainty behaviors to make the model more realistic.



for verification, model checking has been widely used to check the correctness of wsn protocols. it can explore the full state space of the model for a protocol. nevertheless, this technique is very expensive. it faces the notorious state-explosion problem and limits the scale of the networks that can be checked. as wsn systems always consist of dozens of nodes at least, classical model checking can not handle real-case wsn networks very well.



fortunately, statistical model checking(smc) has recently been proposed as an alternative to avoid exhaustive exploration of the state-space of a model. smc is a simulation-based solution, which is less time and memory intensive than classical model checking. the procedure of smc is to generate enough sample execution paths for the system and then use the statistical hypothesis testing to decide whether the system satisfies the given property or not. smc techniques can also be used to estimate the probability that a system satisfies a given property. by combining these techniques, in this paper, we present a new method to model and evaluate wsn protocols by stochastic timed automata and statistical model checking. first of all, we propose to model wsn protocols with timed automata, to describe there work flow in ideal environment. for network dynamics, node failures and intermittent communication links which are common in wsns[1, 6], we extend the timed automata with stochastic transitions. for example, in the extended stochastic timed automata, when a message is broadcasted, it has a probability to be lost instead of all the nodes receiving it successfully. similarly, in real environment, a node may die and leave the network at any time, and it can resurrect and



the paper is structured as follows. section 2 gives the preliminary knowledge of this study, including the existing works in modeling and verification of wsn protocols, and a brief description to stochastic timed automata and their verification. in section 3, we present our method to model and evaluate a protocol with stochastic timed automata. the stochastic timed automata of a well-known wsn protocol and the respective evaluation are given in section 4. section 5 describes the concluding remarks at last 1.



in and, vaandrager et al also model a wsn protocol in the similar way. they verified the protocol with fully connected topology, and analyzed the counterexample given by the model checker. nevertheless, their models does not incorporate all the features of the system neither, such as uncertain communication delays and unreliable radio communication.



to conclude, we can see that, first, most of the modeling and evaluation works still treated wsn protocols as general protocols. only a few considered to model the uncertainty behaviors, which are very common in wsn, into the system model. second, most of the works only checked the correctness of the protocol, only a few of them considered the evaluation of the performance of the protocol under different profile or environment. last but not least, as the mostly used analysis technique is model checking and/or probabilistic model checking which is very expensive, the size of the system that can be analyzed are limited. as the size of deployed wsn systems are always quite large, the scalability of current analysis technique can not handle real-case system very well.



the theory of timed automata can be used to prove the correctness of real time systems. generally, two types of properties, liveness and safety, are concerned. as checking liveness is computationally expensive, the main effort of verifying a timed system focuses on checking the safety properties, which can be checked using reachability analysis by traversing the state-space of timed automata. it is proved that the reachability verification of timed automata is decidable, still quite expensive though.



timed automata can be extend to model stochastic transitions via weighted probabilistic branches, resulting in the stochastic timed automata. recently, statistical model checking(smc) is proposed to answer the numerical properties of stochastic systems. it simulates the system model repeatedly based on monte carlo simulation to generate enough sample execution paths, then relies on statistical algorithms, such as hypothesis testing, to get an estimate of the correctness of the entire design[8, 10].



in most of the wsn protocols, nodes/sensors may bear certain functional roles, i.e., sender and receiver, in the work progress of the protocol. for all the nodes with the same role, they basically share similar behaviors. thus, we can use a template timed automaton to describe the work flow of these nodes in ideal environment in general. then, each node can be assigned with a unique number as its identity. different nodes can communicate with each other through shared variables and synchronize with each other through synchronization messages.



for a template timed automaton which describes the behaviors of a node with certain role, we propose to build the template model in a bottom-up style. by bottom-up, we mean the life cycle of a protocol can be divided into different modules/phases. the fragment of timed automaton for each specific module/phase can be built independently. then, they can be combined together in the end, which can make the modeling effort much easier and more controllable.



wsns usually work in harsh environments. thus they may encounter lots of uncertainties such as message loss and node dynamics in reality. to address these aspects and make the model more realistic, we propose to extend the timed automaton with stochastic transitions. the extension is made in two steps. first, add probability factors to the transitions where messages are received to model the message loss. then node dynamics are described by introducing probability branches to model the scenarios where nodes may fail and resurrect.



by now, we can get both the ideal and the stochastic timed automata for a wsn protocol. after that, the correctness verification of the design of the protocol can be performed on the classical timed automaton. the performance evaluation of the protocol under different kinds of environments can be conducted on the stochastic model.



correctness verification is conducted on the ideal timed automata by classical model checking techniques. in this phase, we can check functional properties of the protocol, such as whether there are deadlocks, whether all nodes can be eventually synchronized and etc. as classical model checking for timed automata has very high complexity, the verification can only be performed on systems with small scale. by checking functional properties, we can see the correctness of its logic design, and find bugs in the early phase.



in section 4.1, we give both the ideal and stochastic timed automata of tpsn respectively. in this section, we will analysis tpsn based on these models. we verify the ideal timed automata against typical functional properties and evaluate the performance of tpsn under different environments using statistical model checking technique on the stochastic timed automata.



