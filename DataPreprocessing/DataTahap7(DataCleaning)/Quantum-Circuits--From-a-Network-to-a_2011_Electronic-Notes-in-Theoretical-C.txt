we present a translation from the standard network model of quantum computation to the one-way model of quantum computation. the translation is compositional, i.e., it preserves the structure of computations, which allows us to abstract the concrete realizations in a monadic abstraction layer.



in this paper, we study two of these models of computation in detail: the standard network(sn) model and the one-way(ow) model[11,3]. we study how computations are expressed in each of these two models and how to translate from one model to the other in a compositional manner, i.e., while preserving the structure of the computation.



once defined, the compositional translation exposes common structures that are abstracted using the mathematical construction of a monad. in more detail, we provide an abstract model of quantum computation which can, with a choice of two parameters, be instantiated to either the sn model or the ow model. the construction gives an elegant way to translate from one model to the other, and potentially enables optimizations expressed in one model to be easily transferred to the other model. throughout the translation, we pay close attention to its efficiency and ability to be systematic.



the premise of the ow model is to drive the computation by performing several onequbit measurements(most of them in parallel), on a highly entangled state(ideally given by nature). often, due to the non-deterministic nature of measurements, the process results in some temporary state, encoding the desired result in a pauli basis. to uncover that result, one thus needs to perform what is known as classical post-processing, which consists of applying the appropriate pauli operators.



concurrently, we find we can simply combine the preparations and measurements from the sub-circuits directly. thus, for i, the preparation consists of the entanglement of qubits 1 and 2, then of that of qubits 2 and 3. meanwhile, the measurements consist of those of qubits 1 and then 2, in the x-basis.



in a general perspective, the mc process simplifies the bp approach out of the effects from non-clifford operators( cf. end of section 2.2.1). a basic procedure is described in alg. 1. essentially, steps 1 and 2 of the new procedure constitute its core part, while step 3 is optional; since it only serves in simplifying patterns, by shifting dependencies induced by z-corrections out of consideration when specifying measurements(cf. passes v and x).



importantly, note that for all the different ow approaches we reviewed earlier in section 2.2, the format for the monadic abstraction looks exactly the same. the only difference is in the representations of the realizations and associated c&s procedure. however, we do have to wonder whether one could improve definitions of monadic layers somehow; and if so, what factors the process could involve. in the upcoming section, we consider improving our ow monadic abstraction defined above. the process unveils a set of conditions for abstraction of the c&s procedure, which comes with applications in defining additional approaches to reasoning about circuits in the



other applications of the c&s conditions introduce alternative approaches to the ow model, either extending or reducing from the abstracted c&s procedure. for example, we propose an approach that is based on a particular graphical representation for ow realizations, one that would allow one to consistently approximate circuits. we later on use this approach to illustrate our circuits translations from the sn model(section 5).



the abstraction allowed us to define some basic conditions for composing circuits in the one-way model, independently of any approach. these conditions later on served as a basis for improving the abstractions in the one-way model, including introducing an additional approach based on a graphical representation of circuits. this approach addressed the occasional need for circuits approximation and was thus perfect for the translations in our practical example, where gathered information were incomplete.



we would like to thank all direct and indirect contributors to this work. we appreciated fruitful inputs from the quantum information unit group at the institute for scientific interchange, as well as the programming languages group at indiana university. we would especially like to thank profs amr sabry and gerardo ortiz for their continued guidance throughout this work.



