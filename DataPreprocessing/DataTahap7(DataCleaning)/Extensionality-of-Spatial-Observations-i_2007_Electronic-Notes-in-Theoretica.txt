computing systems. in general terms, these developments reflect a shift of focus in concurrency research, that has been building up from the last decade on, from the study of centralized concurrent systems to the study of general distributed systems. while centralized processes may be accurately modeled as pure objects of behavior, in distributed systems many interesting phenomena besides pure interaction, such as location dependent behavior, resource usage, and mobility, must be considered. present in all spatial logics for concurrency are the composition operator a| b and the void operator 0. intuitively, a system satisfies a| b if it can be decomposed in two disjoint subsystems such that one satisfies a and the other satisfies b, while a system satisfies 0 if it is the empty system. the guarantee(logical adjunct of the composition operator) ad b, introduced in, allows the logic to talk about contextual properties. namely, a process satisfies ad b if whenever composed with a system that satisfies a, yields a(possibly larger) system that satisfies b. decomposition and composition of systems as mentioned here is generally interpreted up to structural congruence, and thus structural congruence seems to play a key role



the rule(red comm) specifies interaction between two processes through coaction synchronization locally inside a site, while rule(red tau) specifies internal action of a process. rule(red go) specifies that a process prefixed by go may migrate to another site. rule(red fail) expresses that any non-empty network may fail, thus modeling fail-stop failure of an arbitrary subsystem.



we establish some standard properties of strong reduction barbed congruence, such as is a congruence. notice that we just consider in this paper, congruences under spatial(static) contexts. as explained above, this does not carry a lack of generality, given the main motivations of our development. moreover:



although definition 1.4 is standard, with reference to the global observation of barbs in networks, observations already leak some relevant information about the distributed structure of systems. lemma 1.7 states that strong reduction barbed congruent networks always result from an underlying one-one and onto correspondence of strong reduction barbed congruent sites. in particular, we conclude strong reduction barbed congruent networks always have the same number of sites.



name, and we make sure that every input is located at a different site. since m behaves the same as n under this context(and using a symmetric reasoning) we obtain that m has#j sites. interesting to notice is the fact that the ability to count sites results solely from the combination of mobility and local synchronization in the model. we then exploit failures in n that leave only a single site active, being that this behavior must be mimicked by failures in m that also leave just one site up. these singled out sites are strong reduction barbed congruent, hence hold the same unique input which ensures an unique correspondence. we then consider another context that may clean up the marker and all other foreign elements, which then allows us to conclude the sites were originally strong reduction barbed congruent.



grow transitions([a]) are used to allow the observation of process migration from the system to the external environment by internalizing this mobility. such a grow transition allows the labeled transition system to import a minimal piece of the external environment, consisting on a site with a given input to distinguish it from the rest of the network, providing in this way a candidate foreign migration target. this turns out to be essential for covering the case of networks with a single site, since in that case only the enlargement of the system with a new site gives processes intending to migrate a possible destination.



the proof of the main result of this section(theorem 2.6) is not technically involved, but critically depends on next lemma 2.5, that expresses a key compositionality principle of our calculus. notice that the basic building block of systems referred to in the statement of lemma 2.5 is the process: since we have to take migration into account, it is essential to assure compositionality at the process level. we abbreviate collections of sites such that each one holds a collection of processes.



as for the strong case, weak reduction barbed congruence is already able to distinguish systems based on aspects of their structure, for instance, weak reduction barbed congruent networks always have the same number of sites. also, as stated in lemma 3.4, weak reduction barbed congruent networks weakly reduce to a one-one and onto correspondence of weakly reduction barbed congruent sites.



proof.(sketch, full proof in) the general idea is similar to that in a.1. however, since now we may only weakly observe a barb, a different trick must be used to make sure that the migration of all the mark-placing processes has already occurred. we thus exploit the failure behavior of the context at a chosen point, avoiding in this way any chance for the migratory processes to postpone their choice of target, thus ensuring an unique correspondence.



