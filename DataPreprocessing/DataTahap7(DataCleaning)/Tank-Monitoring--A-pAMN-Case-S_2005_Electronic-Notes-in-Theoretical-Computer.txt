the introduction of probabilistic behaviour into the b-method has recently been proposed, called probabilistic b. this approach builds on previous work which introduces probabilistic choice into program statements, and extends the notion of weakest precondition semantics to deal with expectations. an expectation can be considered as the expected value of a formula or expression. thus programs can be viewed as expectation transformers rather than predicate transformers, and their semantics gives the expectation of an expression after the program has been executed in terms of expectations prior to execution.



in this paper we will use expectations of the form v. this is an abbreviation for 0$ v. observe that this still gives rise to a non-trivial proof obligation p 1, that v is non-negative on initialisation.



thus the closer to 1 the ratio between minflow and maxflow, the closer a can be to 1 and the more accurate the upper bound on the expected value for volume for any given expectation on rvolume. however, note that a can always be at least 0.99.



rvolume, the minimum expectation over all possible assignments to rvolume must be taken. in e 1, rvolume is positive, so the smallest possible value of rvolume is used in the calculation of the pre-expectation of e 1. in e 2 rvolume is negative so the largest possible value of rvolume is used in the calculation of the pre-expectation of e 2. this means that however the nondeterminism is later resolved, the expectation will be at least the value calculated. expectations should always be non-decreasing, so demonic nondeterminism always considers the worst case with respect to increases.



worst case occurs when the flow is minflow and minflow+ lowerror is added to rvolume: the resulting rvolume could be 10% out. on the other hand, in the second case the error in the flow can be at most 0.1%, so the error that can be introduced by v 2b(1% of the time) dominates, and the worst case occurs when the flow is maxflow and rvolume is only incremented by lowerror+ minflow.



if flow= maxflow, then volume is increased by maxflow, and the least that rvolume can be incremented by is minflow+ lowerror if at least two sensors go wrong(which can happen with probability 0.028), otherwise maxflow+ lowerror. thus the most pessimistic expectation gives a possible value of a= 0.9765. here the ratio between maxflow and minflow is more significant than the ratio between minflow and lowerror in contributing to the amount by which rvolume can be down, and we obtain a value of 0.9765 for a.



exceed rvolume, and the worst case always occurs when flow= minflow. in this case, the reading might at worst be maxflow+ higherror(with probability 0.028) and minflow+ higherror otherwise. this yields a value for b of at least



