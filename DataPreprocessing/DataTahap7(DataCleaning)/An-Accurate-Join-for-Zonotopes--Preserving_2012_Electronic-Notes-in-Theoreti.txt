zonotopes are a convenient abstract domain for the precise analysis of programs with numerical variables. compared to the domain of convex polyhedra, it is less expensive and may easily handle non-linear assignments. however, the classical join operator of this abstract domain does not always preserve linear invariants, unlike the convex hull. we present a global join operator that preserves some affine relations. we end up by showing some experiments conducted on the constrained taylor1+ domain of apron.



zonotopic methods have proved useful in a number of contexts in computer science, such as image processing, reachability analysis of hybrid systems[9,6] and static analysis by abstract interpretation as implemented in fluctuat[5,12]. most transfer functions(in particular, the interpretation of arithmetic expressions and assignments) are precise and fast in zonotopes. but set-theoretic functions, such as the meet and join operations, are difficult to characterize and compute, contrarily to most of other sub-polyhedric domains(zones, linear templates, even polyhedra). indeed, they are non canonical operations, and can only be overapproximated in the general case.



in, we proposed a meet operation for our zonotopic abstract domains. in this article, we propose an improvement of the time and space efficient upper bound operators that we introduced in[10,11,7]. the problem of these upper bound operators is that they forget a lot about the relations between values that program variables can take. they are only proved optimal(that is, giving minimal upper



we prove in section 3 that minimal upper bounds e for constrained affine sets e1 and e2 necessarily satisfy the affine relations between program variables and central noise symbols(used to encode the inputs of the program) satisfied by both e1 and e2. the main contribution of the article is then the definition of a more precise global join operator, that uses the previous component-wise join of[10,11,7] only on part of the variables, and these common affine relations to deduce an upper bound on the other variables. we actually show in proposition 3.3 that our join is optimal in some important situations.



the least upper bound of two affine sets does not exist, there may be incomparable minimal upper bounds. in previous work[10,11], we defined an upper bound for affine sets based on an algorithm that, for each variable taken independently, gives a minimal upper bound in some(most, actually) cases. however, considered globally, this upper bound generally does not give a minimal upper bound: indeed, performing the join operation independently on each variable ignores the relations between variables, and is thus not satisfying.



the apron library implements different abstract domains, including the affine sets(taylor1+ domain). we implemented this new join operator in the taylor1+ abstract domain. we present some results on programs analyzed with interproc, a static analyzer which allows us to select any apron abstract domain. first, we focus on comparisons of results of join operators with taylor1+ using the standard(component-wise) and the global joins. we then show the relative performance of all classical domains and our domains on an example with different discretization steps. we refer to[7,8] for examples which really aim at demonstrating the performance of zonotopic abstract domains in general.



in this paper, we have proposed a new join operator of zonotopic abstract domains. this addresses the main drawback of the domain, which apart from the join operator, was known for providing precise and fast analyses. this join operator stays in the line of a functional(input/output) analysis, by discovering and preserving some common affine relations holding between program variables and inputs of the program. it also allows to discover some useful properties, that for instance link the current program variables values to loops counters, or even make apparent some disjunctive information. we showed that while improving the accuracy compared to the previous join operation of, we still keep a very fast operation. we believe that this approach generalizes easily to the case of constrained affine sets, as introduced in. future work includes the case of inexact common affine relations, for instance to handle the case when they approximate non-linear relations.



