we consider a typed lambda-calculus with no function types, only alternating sum and product types, so that closed terms represent strategies. we add nondeterminism and consider strategies up to lower(i.e. divergence-insensitive) bisimilarity. we investigate the question: when is a function on strategies definable by an open term(with sufficiently large nondeterminism)?



in sect. 2, we define a calculus for programs that manipulate strategies; this enables us to precisely formulate the definability problem. in sect. 3 we give a result about operational semantics, the syntactic exploration theorem, and convert this into a condition on functions, solving our problem. in sect. 4, we modify our calculus to make it affine, in the style of, and adapt our results accordingly. finally in sect. 5 we discuss some possible future directions.



