usually, refinement is a static concept. for many scenarios, however, it is desirable to have a more flexible form of refinement. for example in the context of service updates, e.g. version control in distributed systems, a mechanism for dynamic transition refinement is needed.



the remaining sections are structured as follows: in section 2 we introduce our approach of marked transitions for petri nets. we define super-dual nets and their firing rule. in section 3 we describe how the concept of super-dual nets can be lifted to object nets and give an abbreviated definition of the new formalism of super-dual object nets. in section 4 we describe how super-dual object nets can be simulated by object nets. section 5 explains a first attempt to integrate dynamic transition refinement in renew. the paper ends with a conclusion. the appendix recalls definitions of multi-sets.



we are interested in a dynamic refinement of transitions, i.e. a refinement that can be changed at runtime. this change should be made by the net itself. our basic approach is to regard sub-nets as special tokens of transitions. as mentioned in the introduction this approach proposes two extensions to the petri net formalism:(1) petri nets can be used as tokens and(2) transitions may be marked.



in the following we give a condensed definition of object net systems. for simplicity reasons we abstract from the syntax of inscriptions of net elements and synchronisations as it is used for reference nets in the renew tool(cf.).



a first attempt to implement dynamic transition refinement in the petri net tool renew was done in the so-called workflow plug-in 4. among various means for the definition and execution of workflows a so-called task transition was implemented. the task transition does not exactly meet our design criteria for dynamic refinement, but comes close enough to take a look.



our approach describes a special kind of petri nets that can modify their structure via dynamic refinement of transitions. a first approach to the ability of structure changing at runtime are self-modifying nets which allow for arc weights that are marking depending. a special case is the empty marking that temporarily deletes arcs from the net. another approach to structure modification in petri nets is that of mobile nets and recursive nets.



in this presentation we studied the dynamic refinement of transitions. following the ideas of extending petri nets to super-dual nets we generalised object net systems to super-dual object systems. super-dual object net systems are nets-within-nets allowing nets as tokens both on places and on transitions. transition marking nets, called net-pokens, may be moved around from one transition to another. they refine the transition they are actually marking. this offers the desired properties of a dynamic, run-time refinement procedure that is controlled by the net itself.



