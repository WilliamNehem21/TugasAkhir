where e ranges over integer expressions, b over boolean expressions, and e over list expressions of form[e1,..., en]. expressions are pure, i.e. independent of the heap. further, i ranges over identifiers(or program variables) and r over resource names; resources behave like binary semaphores. we use the standard abbreviation with r do c for with r when true do c.



the proof is by induction on proof height. we show that for each csl inference rule, if the premisses have this property and the side conditions hold, then the conclusion has this property. we give the details for assignment, for parallel composition(where division is needed), regions, and local resource blocks(where we must choose an appropriate decoration); the other rules are simpler and can be handled in similar manner.



