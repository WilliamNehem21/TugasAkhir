abstract group key management is an important functional building block for secure multicast architecture. thereby, it has been extensively studied in the literature. the main proposed protocol is adaptive clustering for scalable group key management(asgk). according to asgk protocol, the multicast group is divided into clusters, where each cluster consists of areas of members. each cluster uses its own traffic encryption key(tek). these clusters are updated periodically depending on the dynamism of the members during the secure session. the modified protocol has been proposed based on asgk with some modifications to balance the number of affected members and the encryption/decryption overhead with any number of the areas when a member joins or leaves the group. this modified protocol is called ancestors protocol. according to ancestors protocol, every area receives the dynamism of the members from its parents. the main objective of the modified protocol is to reduce the number of affected members during the leaving and joining members, then 1 affects n overhead would be reduced. a comparative study has been done between



multicasting is considered an efficient solution for group communication on the internet. instead of sending a separate copy of data per receiver, a sender can send a single copy and the multicast routers in the network make copy and forward packets appropriately to all receivers. thus, multicasting utilizes network resources such as bandwidth and buffer space efficiently, and reduces load at the sender(s), as well as, the transit routers[1,2].



the work in this paper focuses on group key management by using a symmetric cryptosystem such as advanced encryption standard(aes). in this system, a symmetric key is used to encrypt data by the source and to decrypt it by the receivers. this key is generally called traffic encryption key(tek).



with different local traffic encryption keys. this reduces the 1 affects n impact of the key updating process, but needs decryption and re-encryption operations at the border of areas. these operations may decrease the communication quality. such schemes have to define a mechanism that decides how a group should be divided. ideally, the result of such division is optimal could be proved. optimality of course, depends on the chosen cost functions.



challal et al. proposed adaptive clustering for scalable group key management(asgk) that divides the multicast group into areas that are managed by area security agents(asas). areas are organized into clusters, where all agents in the cluster use the same tek. these clusters are updated periodically by each asgk agent depending on local dynamism information, i.e. the arrival and leave rate of members. each agent in addition receives this information from its parent area and computes the re-keying overhead and key translation overhead to decide whether to create a new cluster or to use the tek of its parent agent. the asgk protocol scales well to large groups by balancing the 1 affects n overhead and the encryption/decryption operations through the adaptive structures of the clusters depending on the membership dynamism.



however, it is noted that asgk only approximates the 1 affects n overhead. in particular, the used cost function does not consider the number of affected members. the ancestors protocol will be proposed to provide a better balance between encryption/decryption overhead and mutual impact overhead where mutual impact overhead is expressed as a function of the affected number of members.



the 1 affects n and the re-encryption overheads are considered relative important when defining an overall cost function for group key management. for a given cost function and a fixed group membership it is then possible to define optimal splits of the group into areas. with dynamic group membership, a split may become suboptimal due to membership changes and the areas have to be updated to maintain an optimal splitting of the group. this process has overheads of its own.



in the following, a fixed infrastructure of areas arranged as a tree is assumed. each area is managed by an area security agent(asa). the asa of area ai is denoted by ai. an area can be active and use a tek different than that of its parent or passive and use the same tek as its parent. areas that share the same tek form a cluster. the set of areas in the same cluster ing on the number of members that have joined the area. the specification of the algorithm that decides which area a new member will join is outside the scope of this paper. when designing an algorithm for updating the state of an asa, it is desirable to make decisions based as much as possible on local information.



a distributed cluster update phase is executed periodically taking into account that dynamism distribution over a multicast session is space and time dependent[8,9]. each agent records the arrival and leave rate of members during a given time period. this is the local dynamism information ki.



in summary, the asgk protocol scales well to large groups by balancing the 1 affects n and the re-encryption overheads through the adapting the structure of the clusters depending on membership dynamism. however, its cost function only approximates the 1 affects n overhead. in particular, it does not consider the number of affected members.



