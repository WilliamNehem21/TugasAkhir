

the exchange subprotocol: if both participants are honest and in the absence of network failures or intruder intervention, after execution of the exchange subprotocol, both will be in possession of a valid standard contract. both originator and responder generate nonces no and nr which are called their respective secret commitments to the contract. given these, they compute their so-called public commitments by hashing these values, yielding h(no) and h(nr), respectively. the protocol then proceeds in two rounds: in the first, each party expresses his public commitment to the agreed-upon contract but does not disclose his secret commitment. in the second round, they then exchange their respective secret commitments. each party can then hash this latter and thus verify that the purported secret commitment he receives indeed corresponds to the public commitment from the first protocol stage.



this model, though abstract, is thus a faithful representation of a real implementation of the protocol, as agents indeed protect themselves with such internal timeouts. note that this is related to the possibility of abuse in this contract signing protocol: when the originator has made the first step, the responder has the freedom to either accept the contract by sending the second message, or to reject it by ignoring it. in particular, a dishonest responder could abuse the originator-signed part of the contract in negotiations with other agents(for instance, by soliciting more advantageous contracts from competitors). note that, unlike for instance the similar gjm protocol, the asw protocol has no means to prevent this abuse by special cryptographic



we now want to contrast two models: on the one hand, the model with the fairness constraints described above(i.e. that the agent will eventually get the timeout and the reply from the trusted third party), and on the other hand a model without fairness constraints.



we now turn to the objective(2.), effectiveness. in the view of our model, where every honest agent will eventually reach a final state, effectiveness means that when an honest agent a receives an abort token for a session with an honest agent b, then a or b must have chosen to abort the contract. since the abort token from the t3p contains the signature of the agent a or b according to the protocol, it contains the implicit proof that either a or b indeed wants to abort the protocol run. effectiveness is thus an implicit guarantee due to the form of the abort token, and will therefore not be considered in the later analysis.



signatures of both parties are contained and we can thus assume that they agree with the contract text. however, we are also interested in a further analysis, namely an analysis of the authentication properties(or agreement properties in) of asw. our analysis will include checks for replay and for confusions of nonces. such standard authentication properties do not rely on fairness and are thus straightforward to check.



let us conclude this section with a remark on the intruder model. several approaches distinguish between the intruder and dishonest or corrupted agents(with various degrees of corruption). one of the reasons for this distinction is that the security properties of a protocol usually only hold for sessions between honest agents. in particular, the intruder can play, under his real name, the role of the initiator or the responder in a session with an honest agent; in such a session no security properties are ensured for this honest agent, while this session should not jeopardise the security of other sessions between honest agents.



due to our simplified view, the main security property that we have to check for asw, namely(1a.) that the secrecy of the valid contract once an honest agent has received an abort token, should also hold in the case that the other agent is dishonest.(but it is not necessarily ensured that this dishonest agent also has the same security guarantee.) this means that we need not distinguish between various kinds of corruption of dishonest agents.



both ofmc and ofmc-fp were developed in the context of the avispa project and are based on the specification languages developed in this project. the user specifies protocols using the high-level protocol specification language(hlpsl); these specifications are then automatically translated into the low-level intermediate format(if) which is the input language for automated analysis tools. the first task is thus to specify our view of the asw protocol in hlpsl.



firstly, an aspect of the protocol that is difficult to model is the database of aborted and resolved contracts maintained by the t3p. many existing protocol specification languages cannot express this, however hlpsl and if include the necessary constructs(i.e. finite sets of messages) to model such a database. moreover, the database cannot be integrated directly in infinite state verification approaches that use abstraction.



ticular message, but of a pattern of messages. such a feature is currently not supported by hlpsl and if(or most other protocol specification languages). as a simple way around the problem we specify an honest agent that acts as an observer and flags an error state appropriately.



ofmc discovers several authentication problems that were already identified in. first, the protocol does not provide strong authentication(injective agreement as defined by lowe in), as it has no explicit protection against replay: if the intruder listens to a session of two honest agents, he can replay the exchange protocol with the responder any number of times and obtain valid contracts, each with a fresh responder nonce. however, we think one should assume an implicit replay-protection as part of the contract, e.g. transactions are usually identified by unique transaction numbers. in this scenario, we thus check that the protocol provides weak authentication(also called non-injective agreement,). weak authentication with respect to the contractual text and the nonces n0 and nr is also violated, and ofmc returns an attack trace resulting from the same authentication problems reported in. finally, weak authentication with respect to only the contractual text is verified by ofmc for various finite test scenarios.



there are several works(which do not focus on automated analysis) on reasoning about such protocols and their guarantees, in particular optimism and fairness[5,6]. the employed models are considerably more detailed than ours in that they explicitly use time-outs and distinguish intruder and(different kinds of) dishonest agents. also, here a similar view to ours is often taken, though to our knowledge not been used to reason about the protocol and its objectives.



while we have focused on asw in our work to date, we are optimistic that the benefits offered by the adoption of such a unified view will be applicable to similar protocols as well. in general, the meta-reasoning we perform regarding security objectives can help not only to better understand the objectives of a given protocol, but, as we have seen, can also identify potential ways in which seemingly complicated objectives can be reduced to more standard notions such as authentication and secrecy. in this way, we hope to extend the applicability of existing methods for the formal analysis of security protocols.



