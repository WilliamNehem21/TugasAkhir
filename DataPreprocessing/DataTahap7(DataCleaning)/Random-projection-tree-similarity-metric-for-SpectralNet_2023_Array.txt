in order for spectralnet to produce accurate results, it needs an affinity matrix with rich information about the clusters. ideally, a pair of points in the same cluster should be connected with an edge carrying a large weight. if the pair belong to different clusters, they should be connected with an edge carrying a small weight, or no weight which is indicated by a zero entry in the affinity matrix.



spectralnet uses siamese nets to learn informative weights that ensure good clustering results. however, the siamese nets need some information beforehand. they need some pairs to be labeled as negative and positive pairs. negative label indicates a pair of points belonging to different clusters, and a positive label indicates a pair of points in the same cluster. obtaining negative and positive pairs can be done in a semi-supervised or unsupervised manner. the authors of spectralnet have implemented it as a semi-supervised and an unsupervised method. using the ground-truth labels to assign negative and positive labels, makes the spectralnet semi-supervised. on the other hand, using a distance metric to label closer points as positive pairs and farther points as negative pairs, makes the spectralnet unsupervised. in this study, we are only interested in an unsupervised spectralnet.



cordingly. another problem with gcn is its vulnerability to adversarial attack. yang et al. used gcn with domain adaptive learning. domain adaptive learning attempts to transfer the knowledge from a labeled source graph to unlabeled target graph. unseen nodes from the target graph can later be used for node classification.



the output is clustered using gaussian mixture model(gmm), where gmm parameters are updated throughout training. a similar approach was used by wang et al., where they used autoencoders to learn latent representation. then, they deploy the manifold learning technique umap to find a low dimensional space. the final clustering find the cluster labels. another approach to employ deep learning for spectral clustering was introduced by wada et al.. their method starts by identifying hub points, which serve as the core of clusters. these hub points are then passed to a deep network to obtain the cluster labels for the remaining points.



the storage efficiency was measured by the number of total pairs used. we avoid using machine dependent metrics like the running time. we also run additional experiments to investigate how the rptrees parameters are affecting the similarity metric based on rptree. the cancer, which suggests that connecting to two neighbors was not enough to accurately detect the clusters. yan et al. reported a similar finding where clustering using rptree similarity was better than clustering using gaussian kernel with euclidean distance. they showed the heatmap of the similarity matrix generated by the gaussian kernel and by rptree.



this work can be extended by changing how the pairwise similarity is computed inside the siamese net. currently it is done via a heat kernel. also, one could use other random projection methods such as random projection forests(rpforest) or rptrees with reduced space complexity. it would be beneficial for the field to see how these space-partitioning trees perform with clustering in deep networks.





