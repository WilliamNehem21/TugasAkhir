differential privacy. differential privacy is a promising approach to privacypreserving data analysis(see[14,16] for surveys). this work is motivated by statistical data sets that contain personal information about a large number of individuals(e.g., census or health data). in such a scenario, a trusted party collects personal information from a representative sample with the goal of releasing statistics about



in a different direction, these sanitization algorithms are being implemented for inclusion in data management systems. for example, pinq resembles a sql database, but instead of providing the actual answer to sql queries, it provides the output of a differentially private sanitization function operating on the actual answer. another such system, airavat, manages distributed data and performs mapreduce computations in a cloud computing environment while using differential privacy as a basis for declassifying data in a mandatory access control framework. both of these are interactive systems that use sanitization functions as a component: they interact with both the providers of sensitive data and untrusted data examiners, store the data, and perform computations on the data some of which apply sanitization functions.



formal methods for differential privacy. we work toward reconciling formal analysis techniques with the growing body of work on abstract frameworks or implemented systems that use differential privacy as a building block. while prior work in the area has provided a type system for proving that a non-interactive program is a differentially private sanitization function, we know of no formal methods that can, in addition, prove that an interactive system using such functions has differential privacy. applying formal methods to interactive systems ensures



as we are interested in formally proving that finite systems provide differential privacy, we limit ourselves to privacy mechanisms that operate over only a finite number of values. one such mechanism is the truncated geometric mechanism of ghosh et al., which uses noise drawn from a bounded, discrete version of the laplace distribution.



actions. we model the input command in the source code with the input action set i of our automaton: for each possible value that input can return there is an input action in i corresponding to that value. inputs in the code can be either queries or data points, which is modeled by the partition of the set i into the sets q for queries and d for data points. we model the print command in the source code with the observable outputs r(responses) of our automaton. for each possible value that can be printed we have an output action in r. we model all other commands by internal(hidden) actions.



we desire a technique for drawing conclusions about the global behavior(executions) of the system from local aspects(states, actions, and transitions) of the model. faced with a similar situation, goguen and meseguer introduced unwinding relations to simplify proving that a system has noninterference. we present a similar technique for proving that a system has differential noninterference. in particular we state what it means for a relation family to be an unwinding family and prove theorem 4.5, which roughly states that the existence of an unwinding family for a given automaton implies that it satisfies differential noninterference. our unwinding notion is probabilistic and approximate, which is in keeping with the notion of differential privacy. the novelty lies in the way we keep track of the privacy leakage bound, which evolves as the system evolves where the evolution is constrained by the differential privacy definition.



differential privacy is a very active research field giving rise to new definitions and techniques at a fast pace[16,18]. for example, pan-privacy is a notion of differential privacy that gives differential privacy against adversaries that can observe the internal state of a system, in addition to outputs. computational differential privacy gives certain differential privacy guarantees against computationally bounded adversaries. our definition of differential noninterference and the formal proof technique was developed from the definition of dwork. we think that our choice of probabilistic automata as a model would prove useful in extending the work of this paper to these new definitions as well. for example, algorithms such as stream-processing algorithms that have been subject to research from pan-privacy point of view can be naturally modeled using probabilistic automata. similarly, probabilistic automata-based models have successfully been used in the formal analysis of cryptographic protocols against computationally bounded adversaries[42,3,8].



the results of this paper represent progress towards developing a basis for the formal verification of differential privacy for systems, but leave open several interesting directions that we plan to explore in future work. while our related technical report provides an algorithm for mechanically checking a restricted class of relations from the proof technique, we hope, in addition, to create a decision procedure for our proof technique by extending prior work on decision procedures for probabilistic bisimulations[5,4,35,9] to make them produce a family of relations rather than a single one. we also plan to extend the theory to model and reason about higher level systems, such as computer systems of hospitals and other distributed systems that allow interactions of the system with data providers and with data analysts, while protecting the privacy of the data stored and manipulated by the system. for example, airavat allows computations over data distributed in a cloud, and combines mandatory access control with differential privacy where differential privacy is used to facilitate declassification governed by the privacy error bound set by a data provider. our techniques can currently apply to the verification of differential privacy property of the airavat system using a whole-system model. we are interested in exploring the computational model of airavat further to understand the interplay between the fine-grained access control mechanisms and the differential privacy mechanisms in stating the end-to-end information-flow guarantee of airavat.



