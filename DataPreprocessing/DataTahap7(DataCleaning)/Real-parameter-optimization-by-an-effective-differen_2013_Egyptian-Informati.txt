abstract this paper introduces an effective differential evolution(ede) algorithm for solving real parameter optimization problems over continuous domain. the proposed algorithm proposes a new mutation rule based on the best and the worst individuals among the entire population of a particular generation. the mutation rule is combined with the basic mutation strategy through a linear decreasing probability rule. the proposed mutation rule is shown to promote local search capability of the basic de and to make it faster. furthermore, a random mutation scheme and a modified breeder genetic algorithm(bga) mutation scheme are merged to avoid stagnation and/or premature convergence. additionally, the scaling factor and crossover of de are introduced as uniform random numbers to enrich the search behavior and to enhance the diversity of the population. the effectiveness and benefits of the proposed modifications used in ede has been experimentally investigated. numerical experiments on a set of bound-constrained problems have shown that the new approach is efficient, effective and robust. the comparison results between the ede and several classical differential evolution methods and state-of-the-art parameter adaptive differential evolution variants indicate that the proposed ede algorithm is competitive with, and in some cases superior to, other algorithms in terms of final solution quality, efficiency, convergence rate, and robustness.



plex optimization problems. the rest of the paper is organized as follows. in section 2, the standard de algorithm is introduced. next, in section 3, the new ede algorithm is described in detail. section 4 reports on the computational results of testing benchmark functions and on the comparison with other techniques is discussed. section 5 discusses the effectiveness of the proposed modifications. finally, conclusions and future works are drawn in section 6.



where j= 1, 2,...,d, rand(j) e[0, 1] is the jth evaluation of a uniform random generator number. cr e[0, 1] is the crossover probability constant, which has to be determined by the user. randn(i) e{1, 2,..., d} is a randomly chosen index which en-



all evolutionary algorithms, including de, are stochastic population-based search methods. accordingly, there is no guarantee to reach the global optimal solution all the times. nonetheless, adjusting control parameters such as the scaling factor, the crossover rate and the population size, alongside developing an appropriate mutation scheme, can considerably improve the search capability of de algorithms and increase the possibility of achieving promising and successful results in complex and large scale optimization problems. therefore, in this paper, four modifications are introduced in order to significantly enhance the overall performance of the standard de algorithm.



and combine the global search capability with local search tendency. the strength and efficiency of the above scheme is based on the fact that, at the beginning of the search, two mutation rules are applied but the probability of the basic mutation rule to be used is greater than the probability of the new strategy. so, it favors exploration. then, in the middle of the search, through generations, the two rules are approximately used with the same probability. accordingly, it balances the search direction. later, two mutation rules are still applied but the probability of the proposed mutation to be performed is greater than the probability of using the basic one. finally, it enhances exploitation. therefore, at any particular



hence, f must be a positive value in order to bias the search direction for the trial vectors in the same direction. in fact, if the value of f is kept constant value the diversity of the population is extremely decreased during the search process as the all the vectors are perturbed by the same difference vector component. therefore, instead of keeping f constant during the search process f is set as a random variable for each trial vector so as to perturb the best vector xg by different directed weights. therefore, f is introduced as a uniform random variable in[0.2, 0.8], where the range is determined empirically. accordingly, this range ensures both exploitation tendency(with small f values) and exploration ability(with large f values). in order to reduce the number of parameters of the proposed algorithm f is also used with basic mutation.



after many experiments, in order to make a comparison with other algorithms with all dimensions, we observed that d= e 06 and k= 25 generations are the best settings for these two parameters over all benchmark problems and these values seem to maintain the convergence rate as well as avoid stagnation and/or premature convergence in case they occur. indeed, these parameters were set to their mean values. in this paper, these settings were fixed for all dimensions without tuning them to their optimal values that may attain good solutions better than the current results and improve the performance of the algorithm over all the benchmark problems.



its diversity as well as advance its local tendency through a search process. thus, after the above analysis and discussion, the proposed algorithm ede show competitive performance in terms of quality of solution, efficiency, convergence rate and robustness. it is superior to conventional de methods, and it is also competitive with and, in some cases superior to the-state-of-the-art well-known self-adaptive de algorithms and its three versions ede 1, ede 2 and ede 3. accordingly, the main benefits of the proposed modifications are the remarkable balance between the exploration capability and exploitation tendency through the optimization process that leads to superior performance with fast convergence speed and the extreme robustness over the entire range of benchmark functions which are the weak points of all evolutionary algorithms.



