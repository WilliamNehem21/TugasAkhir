coinductive predicates postulate properties of state-based dynamic systems that persist after a succession of transitions. in computer science, safety properties of nonterminating, reactive systems are examples of paramount importance. this has led to an extensive study of specification languages in the form of fixed point logics and model-checking algorithms.



coalgebras have been successfully used as a categorical abstraction of transition systems(see e.g.[34, 43]): by varying base categories and functors, coalgebras bring general results that work for a variety of systems at once. fixed point logics(or modal logics in general), too, have been actively studied coalgebraically: coalgebraic modal logic is a prolific research field(see); their base category is typically sets but works like go beyond and use presheaf categories for processes in namepassing calculi; and literature including[11, 13, 45] studies coalgebraic fixed point logics.



while our focus is on coinductive predicates, inductive ones are just as important in system verification; so are their combinations. such mixture of induction and coinduction is studied fibrationally in, but over mixed inductive and coinductive data types, and not over a coalgebra. we have obtained some preliminary fibrational observations in this direction.



search for useful coinduction proof principles is an active research topic(see e.g.[8, 30]). we are interested in the questions of whether these principles are sound in a general fibrational setting, and what novel proof principles a fibrational view can lead to.



coalgebraic modal logic is more and more often introduced based on a stone-like duality(see e.g.). fibrational presentation of such dualities will combine the benefits of duality-based modal logics and the current results. we are also interested in the relationship to coalgebraic infinite traces[10, 32].



in this section we follow the ideas in[28, 29, 34] and characterize coinductive predicates in various settings(for different behavior types, and in various underlying logics) in the language of fibration. an introduction to fibration is e.g. in; see also appendix a.3 in. in this paper for simplicity we focus on poset fibrations. it should however not be hard to move to general fibrations.



inspired by, we are interested in coinductive predicates for such processes. they are naturally modeled in the subobject fibration of a presheaf category. here we find a distinction: the subobject fibrations of setsf and setsf+ are wellfounded; but that of setsi is not. in view of cor. 5.5 and example 5.8, the only condition to check is cond. iv) in def. 3.3.



l. birkedal, editor. foundations of software science and computational structures15th international conference, fossacs 2012, held as part of the european joint conferences on theory and practice of software, etaps 2012, tallinn, estonia, march 24april 1, 2012. proceedings, vol. 7213 of lect. notes comp. sci. springer, 2012.



