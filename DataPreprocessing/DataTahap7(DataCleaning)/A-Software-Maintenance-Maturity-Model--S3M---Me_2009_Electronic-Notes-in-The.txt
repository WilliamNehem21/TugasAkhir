evaluation and continuous improvement of software maintenance are key contributors to improving software quality. the software maintenance function suffers from a scarcity of the management models that would facilitate these functions. this paper presents an overview of the measurement practices that are being introduced for level 3 and higher to the software maintenance maturity model(s3m).



software maintenance still does not receive a noticeable share of management attention and suffers from lack of planning, as often illustrated by its crisis management style. part of the problem is that maintenance is typically perceived as being expensive and ineffective. moreover, few proposals of best practices have been put forward which can readily be applied in industry. in general, the software engineering community expects that product quality will be enhanced if the maintenance process is improved. however, researchers tend to develop isolated and very technical solutions which are quite challenging to apply in industry, all the more so in small maintenance groups which have very small budgets and limited time available to improve their maintenance activities. at the same time, a number of software maintenance best practices have been implemented in some of the best run maintenance organizations, although these practices have yet to be recognized and need to be better described to prepare them for technology transfer to industry at large. for the software development function, many maturity models already exist for evaluating the development process and for proposing improvements. for the soft-



the paper is organized as follows. section 2 introduces the many interfaces and key processes of software maintenance. section 3 presents the measurement topics of software maintenance using sources of information for identifying the quantitative aspects necessary for practices at maturity level 3 and higher. section 4 presents the advanced measurement practices at maturity level 3 and higher. finally, section 5 presents a summary and acknowledgments.



the ieee 1061 standard also provides examples of measures without prescribing any of them in particular. by adopting the point of view that reliability is an important characteristic of software quality, the ieee 982.2 guide proposes a dictionary of measures.



and measures to be used. service level agreements are said to be internal when they are exercised entirely within a single organization. this type of agreement documents consensus about activities/results and targets of the many maintenance services. slas originally appeared in large computer operations centers during the 1950s. they progressively extended their reach to all is/it service-oriented activities during the 1970s. however, many is/it organizations still do not have slas in place today.



on the one hand, the customer wants to concentrate on his business and expects a homogeneous service from his is/it organization. the result of this homogeneous service for the customer is the ability to work with a set of information systems without any disturbance whatever from the source of the failure. the way in which this service, these systems, or their infrastructure are constituted is of less interest to the customer, who would like this vision to be reflected in his sla. this means that a results-based sla on the total service(including help desk and computer operations) should be described, and not only on the individual/partial is/it components(i.e. a server, a network, software).



on the other hand, software maintainers only own a portion of the service as perceived by the customer. they are often quite ready to provide a resultsbased sla for their services. but the products are operating on infrastructures which are not their responsibility(desktop, networks, platforms), as they only interface with the help desk and computer operations. to achieve integrated measurement of all the components of the software implies the involvement of all groups concerned, and that someone in is/it must own an overall sla in which all the is/it services are described.



we have presented in section 3 the main sources used to identify the advanced measurement practices of this maturity model. at maturity level 3 measures of process, product, and service have been defined and implemented: implementing measurement is considered as part of an organizational process improvement project in the organization. the software maintenance measures should also be co-located with the software development and operations measures. key activities and services of the institutionalized software maintenance processes have been identified as candidates to be measured. the quality attributes of the application software maintained also need to be identified as candidates to be measured. measurement objectives(targets) and baselines(current value) are documented: these targets are consistent with the business objectives and specific context of each organization.



