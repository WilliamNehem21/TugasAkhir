one of the authors has proposed the notion of p-simple point. a subset composed solely of p-simple points may be deleted in one time while preserving the topology. furthermore, a p-simple point may be locally characterized. in this paper, we introduce the notion of px-simplicity. this permits us to propose a new thinning scheme based on the deletion of pxsimple points. this scheme needs neither a preliminary step of labelling nor the examination of an extended neighborhood, in the opposite of the already proposed thinning algorithms based on p-simple points.



x. if x is finite, the infinite connected component of x is the background, the other connected components of x are the cavities. in order to have a correspondence between the topology of x and the one of x, we have to consider two differents kinds of adjacency for x and for x: if we use an n-adjacency for x, we have to use another n-adjacency for x. in this paper, we only consider(n, n)=(26, 6). the presence of an n-hole in x is detected whenever there is a closed n-path in x that cannot be deformed, in x, into a single point(see, for further details). for example, a hollow ball has one cavity and no hole, a solid torus has one hole and no cavity, and a hollow torus has one cavity and two holes.



the set composed of all n-connected components of x is denoted by cn(x). the set of all n-connected components of x and n-adjacent to a point x is denoted by cx(x). the cardinal number of x is denoted by#x. the topological numbers relative to x and x are the two numbers: t6(x, x)=



the first strategy consists in the repetition of two steps. during the first step, the points belonging to p are labelled, through the access of bk(x), and of wk(x), for all points x of z3; at most l pairs(bk(x),wk(x)) have to be checked. during the second step, the four conditions of p-simplicity of the proposition 3.2 are checked for all points of p: the checking of these four conditions may be possible by the previous labelling step.



we can prove that a px-simple point is p-simple, with the help of topological numbers, and under our assumption made in the previous remark. therefore, an algorithm deleting px-simple points is guaranteed to preserve the topology. in the following, we will propose a thinning algorithm deleting px-simple points.



x. the point y belongs to px as y belongs to v. in this case, x is not a px-simple point because the first and third px-simplicity conditions are not verified: t26(x, rx)= 0 and there is no point of rx 26-adjacent to x and to y.



a 6-subiteration thinning algorithm removing p-simple points, has already been proposed. now, we give a general scheme for 12-subiteration thinning algorithms deleting px-simple points. it can be described by the scheme of section 5.1, with del(y, dir)= s(px); s(px) being the set of px-simple points for y which are not end points according to the wanted skeleton and according to the direction dir. from this scheme, we will propose our algorithm by defining an appropriate p(sections 6 and 7), in the sense that we investigate p such that our algorithm deletes at least the points removed by pk. in the following, we write lb c(resp. lb s) to indicate our final algorithm which produces curve skeletons(resp. surface skeletons) by deletion of px-simple points.



in the first part of this study, we have introduced the notion of px-simplicity. then, we have proposed a new thinning scheme based on the parallel deletion of px-simple points which needs neither a preliminary of labelling nor the examination of an extended neighborhood. thus, it permits us to compare with some other existent thinning algorithms conceived in such a way.



algorithm a. the condition is such that the final proposed algorithm deletes at least the points removed by a, while preserving the same end points. this also implies that a preserves the topology. we precise that if we define p as the subset constituted of points that a may delete from any object x and if this subset is a p-simple set then a is guaranteed to preserve the topology. this work has already been made in(see also).



