q3 is typable since, while output at a appears twice, a replicated input at a appears only once. note that x under the replication preserves the linearity after each invocation at a. on the other hand,! b.a|! b.c is untypable because b is associated with two replicators.



we consider the model of traffic lights from. let a be a driver, and let inred, inyell, ingreen represent colours of the traffic light. the process ainred(y) represents the traffic light signalling to the driver it is red, at the same time communicating the name y of the crossing. the behaviour of the driver at the crossing is either braking, staying still, or driving( inbrake, instill, indrive).



structures ai.ei, where the order relation is the disjoint union of the orders, the labelling function is the disjoint union of the labelling functions, and the conflict is the disjoint union of the conflicts extended by putting in conflict every two events in two different copies. it is a generalisation of prefixing, where we add an initial reactive cell, instead of an initial event.



fully probabilistic event structures, that is event structures which do not contain reactive cells. in particular, in light of corollary 5.3, it applies to closed processes. more generally it applies to processes whose free names do not include linear inputs. to exemplify the confluence theorem, consider a process p such that p d a:



a simpler calculus, without renormalisation, is presented in. this version is very similar to ours, in that all choices are local; in fact, the protocol example presented in(via an encoding into our calculus) is linearly typable. we believe we could apply a typing system similar to ours to the calculus in, prove the same results in this paper and identify a good class of probabilistic name-passing behaviours.



