to handle the complexity inherent in these structures, one way to construct such embedded control systems is a modular, component-based approach. for each installation of such a system, e.g., for a given industrial plant or a given railway network, an instance of the embedded system is created by instantiating some basic component types and plugging them together in an appropriate way. for many of these systems, one finds that the number of possible instances, is huge and effectively unbounded.



the rest of this paper is organized as follows: in section 2, prior work is described. the compose approach is described in section 3. it is illustrated by a running example. section 4 describes how we plan to evaluate our approach with the claims stated above, and gives some preliminary results. finally, we summarize our work and point out further improvements and directions.



many ideas in this paper are based on common ideas found in component-based software and model-based engineering. the focus of this paper is not on extending these results, but rather on the application of these techniques to software testing, in particular, to model-based testing. it continues the work of a prior case study from the railway domain, which has been described in. as noted there, the use



often, composition operators are given by describing the action of the operator in natural language, usually together with a mathematical specification(cf.[5,21,13] and various others). we are not aware of any formalizations of composition operators in some machine-readable language, except for some simple examples of operators for process calculi.



for mealy automata and more general state-event systems, a number of compositional techniques exist. first of all, statecharts can be seen as a method to describe the composition of state-event systems in a compact notation. another approach is the use of communicating automata, for example in uppaal. further compositional approaches have cropped up in the area of model-driven development. some of these approaches(e.g.) describes connectors using process calculi, which is quite close to the approach taken here. as our goal was to have a single technique for the construction of composite markov chain models and system models, these approaches were not directly applicable to our problem, as these approaches do not provide appropriate handling for markov chains.



the next step is the description of component behaviour. as single components are modelled as mealy machines, one can use various methods in this step, e.g. by direct construction of the state/transition graph, by transformation from statecharts(cf.) or a wealth of other techniques(e.g.,).



the high-level composition operator works as follows: an instance of the central interlocking unit is composed with a set of instances of concrete blocks. whenever a stimulus describing some operation on a path in the network enters the central interlocking unit, all blocks on this path are sent the corresponding stimulus in the reservation protocol. if the stimulus has a synchronous response, a transactional pattern is employed to guarantee that all blocks are in a consistent state.



to describe an instance of a complicated system, domain experts have usually developed their very own notation, e.g., block diagrams of the system or railroad network diagrams. the language is derived from such a notation, and should be designed in a way familiar to domain experts. additionally, the translation from syntactic elements of the language to instances of the components and composition operators should be easy to implement. optimally, each syntactic element maps to a fixed set of component instances and composition operator applications.



starting from here, we plan to do three things. the first task, which is already close to completion, is the implementation of a tool to support this approach. next, we plan to apply this approach on different examples, e.g., an example from industrial control. finally, we will investigate how the concepts behind this approach can be used for quantitative reliability estimation of complex systems.



