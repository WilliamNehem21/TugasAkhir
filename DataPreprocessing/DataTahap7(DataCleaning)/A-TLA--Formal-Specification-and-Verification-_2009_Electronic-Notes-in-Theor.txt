the set of nodes(slow or fast) connected through a shared medium make up a doris segment. although many doris segments can be inter-connected by switches or routers, we will restrict our specification and verification to a single doris segment. at each node, a server is responsible for the transmission of hard real-time and best-effort messages. slow nodes send only hard real-time messages and fast nodes may send both hard and best-effort messages. each server maintains a hard queue, which stores hard real-time messages to be sent. fast servers also maintain a soft queue, which stores outgoing best-effort messages. although there is only a single server in each node, we define hardserv[i] and softserv[i], the two server threads of node i dealing with the hard and soft queues, respectively. as there may be many processes executing on a node, some local priority policy has to be defined to schedule messages of different applications. however, this topic is beyond this paper scope, which is focused only on the communication aspects.



the medium access control of doris is regulated by an implicit token, which rotates in the hard and soft rings(section 2.1), according to timing and/or logical conditions built upon observed communication activities. a pure tdma scheme is used to isolate the two rings of doris. as for the soft ring scheme, the process group membership is dynamically managed using the following mechanism. elementary messages contain a bit which, whenever set, informs all servers that the sending server will thenceforth participate of the soft ring. when the soft queue of a server transition function on steps. in our example, the action defined by[v'= v+ 1] is true of step s. note that for a given step s, the next-state relation from state i to state f, usually called state transition function in finite state machine formalism, is defined by the set of actions defined on s. as an action can be made up of several other actions, this set is also an action.



the field cons of hardstate[i] is a tuple of flags that keeps track of the elementary messages received by each server. the entry cons[j] is set to 1 whenever an elementary message sent by server j is received by server i or when server i= j sends its elementary message. when an elementary message sent by j is omitted at server i, the corresponding entry of tuple hardstate[i].cons[j] remains null, allowing for the detection of the failure. as will be seen, the action nexttick resets all values of cons[shared.chipcount] to 0.



when server i is not in norecvset(m), m is received normally and the various fields of hardstate are updated. message m then is appended to the msg list of incomming messages and the associated timer exectimer is set to the maximum processing time of m if it was not previously set. the entry m.id of cons is set to 1 to represent the successful reception of an elementary message and, finally, the res field is updated, according to the res set piggybacked on m.



the absence of deadlocks is automatically checked by tlc. on the other hand, type invariance are elementary properties to be specified. instead of describing such basic properties, this section focus on those more related to the protocol functionalities. more specifically, the following relevant properties of the doris protocol were verified:(i) the protocol provides communication isolation, avoiding collisions;



although the protocol specification has given several insights to carry out its implementation, it was not possible to use the specification straightway. indeed, doris was implemented in a linux-based real-time operating system which has itself a complex architecture. however, most functions of the protocol could be translated from the specification and adapted into the operating system infrastructure.



plementation of a specified protocol using an existing complex software, such an operating system, as a basic infra-structure. a more automatic way for performing such a task is needed. the development of doris and its described formal specification can well serve as a motivating case study for this field of research.



