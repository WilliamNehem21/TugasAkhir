as the algorithms of arora and borradaile et al., ours also depends on recursively partitioning the space enclosing terminals with lines. the proposed algorithm is a dynamic programming which finds an optimal solution that crosses each of such lines a constant amount of times and only at specified points called portals. this partition, called dissection, works as follows.



initially, we have a root dissection square, which is a bounding box containing all points of the input instance. the length of the side of this root dissection square is l, which is a power of two and it is at least twice the length of the side of the smallest square enclosing all terminals of the input. we assume this root square is initially positioned with its bottom left corner at position(0, 0) in the plane. hence, every terminal is in a position inside the square defined by points(0, 0) and(l/2, l/2).



we say that the four squares created by dissecting a given square r are children of r and that r is their parent. if a dissection square r encloses another dissection square rj, then rj is a descendant of r. note that the depth of any square is one plus the depth of its parent. this nested structure of squares forms the quadtree. the depth of a dissection line l, denoted by depth(l), is defined as the lowest depth of dissection squares that l separates. observe that the squares that are leaves of the quadtree have depth at most o(log l).



the first step of the transformation is to partition the set t of terminals, which is performed by partition, given in algorithm 1. proposition 3.1 shows that the union of optimal solutions for each element of such a partition gives an optimal solution for the whole instance t. this partition allows us to bound the diameter of each part of the partition considering the number of pairs of terminals it contains and the maximum distance between such terminals. this bound is shown in proposition 3.2.



the second step to transform the instance is the discretization. herein, we consider that there is an integer grid of granularity one in the euclidean plane, that is, a grid that divides the plane into cells of side length one and whose lines cross at integer points. the idea is to move the terminals, which can have any coordinates in the original instance, into centers of grid cells.



in 2011, bateni et al. devised a polynomial-time approximation scheme(ptas) for the steiner forest problem in planar graphs. therefore, a natural direction for further research is to investigate the existence of a ptas for the steiner multi cycle problem on planar graphs.



