many cryptographic protocols and attacks on these protocols make use of the fact that the order in which encryption is performed does not affect the result of the encryption, i.e., encryption is commutative. however, most models for the automatic analysis of cryptographic protocols can not handle such encryption functions since in these models the message space is considered a free term algebra. in this paper, we present an np decision procedure for the insecurity of protocols that employ rsa encryption, which is one of the most important instances of commuting public key encryption.



only recently the perfect encryption assumption for protocol analysis has been slightly relaxed. in, unification algorithms are designed for handling properties of diffie-hellman cryptographic systems. although these results are useful, they do not solve the more general insecurity problem. in[7,8], decidability of security has been proved for protocols that employ exclusive or. in, we have extended this result to protocols that are based on diffiehellman exponentiation. diffie-hellman exponentiation has also been studied in and. however, in the former work no decision procedure is provided and in the latter severe restrictions are imposed on the protocol and intruder model.



let us illustrate by two simple examples given in how commutative properties of public key encryption schemes are employed in cryptographic protocols. the first protocol is due to shamir. the aim of this protocol is to permit secure communication between two agents who neither share a symmetric key nor know the public key of the other agent. the protocol uses the commuta-



agent a4 can then also sign the contract using her private key k4. the point here is that due to the commutativity property, a4 does not need to know in what order the agents signed the message. certainly, this protocol, when for instance used as a contract signing protocol, has many problems, which, however, we do not want to discuss here.



message. these conditions do not seem to exclude realistic protocols. see for more detailed remarks on the above conditions. note that in our model, a protocol corresponds to a specification in the alice&bob notation together with an instantiation. as a result, several sessions are modelled as only one protocol.



<={((a, 1),(a, 2))}, i.e., it only satisfies(a, 1)<(a, 2), and thus, makes sure that(a, 1) must be performed before(a, 2). the initial intruder knowledge is{1, ki, k'}, i.e., besides the constant 1, the intruder knows her public and



while the first three conditions are standard for dolev-yao intruders, the last condition, which gives the intruder the ability to perform commuting public key encryption, is new. we call this extended intruder the rsa intruder. note that by performing pubic key encryption, the intruder can both encrypt and decrypt messages. also note that if e is a set of normalized messages, then so is forge(e).



in definition 3.2 we restrict ourselves to k= card(i) for simplifying notations. considering k< card(i) would amount to detect attack even with partial(i.e. unfinished) sessions. this kind of attacks can be captured too by analyzing protocols with some final steps removed.



