a scunak signature can be translated into a twelf or automath signature. in both twelf and automath, one begins by declaring three basic type families corresponding to obj, prop and pf. when translating to twelf or automath, any occurrences of class types are removed by currying. so long as the scunak signature can be type-checked using the simplified typing system above(i.e., proof irrelevance is not needed), the resulting twelf and automath files should be welltyped. in the signature described below, we have managed to remove all essential uses of proof irrelevance so that the corresponding twelf and automath files do type check.(actually, one must explicitly add%abbrev to some twelf abbreviations by hand, but this is a separate issue.)



starting from the axioms of set theory described above, one can define the usual propositional connectives as well as bounded quantification. also, one can construct pairs and define binary relations as certain sets of pairs. this provides the infrastructure for defining functions(at the object level). we describe this infrastructure below.



a set a is a kuratowski pair if there exist u and v such that a={{u},{u, v}}. to define this notion using bounded quantification, we make use of a as a bound. one can prove that if any such u and v exist, they must inhabit a.



is of class type class singleton. applying the description operator the, we obtain a member of{y:b|<<x,y>>::f}. one can prove the first component of(the<{y:b|<<x,y>>::f},(funcimagesingleton a b f x)>) is in b. in the signature, approp abbreviates such a proof. given this information, we can define an object level application as follows:



note that in twelf, ap is a function of six arguments instead of four. in particular, the object f is separated from the proof fp that f is a function from a to b. likewise, the object x is separated from the proof xp that x is a member of a. intuitively, abbreviations. in particular, 4 of the scunak abbreviations(the, kpair, ap, and lam) return a class type and therefore correspond to 8 abbreviations in twelf and automath. in twelf, 11 abbreviations must be declared using%abbrev since there is no strict occurrence of some argument. each of the three systems can type check the signature in less than a second.



scunak provides a convenient way to specify a set theory and represent mathematics within the set theory. two of the reasons for the naturality of mathematics represented in scunak are class types and the pam syntax. class types allow one to treat arbitrary predicates(set-theoretic classes) as subtypes of the type of(untyped) mathematical objects. the pam syntax allows one to give types and terms in a reasonably natural way.



