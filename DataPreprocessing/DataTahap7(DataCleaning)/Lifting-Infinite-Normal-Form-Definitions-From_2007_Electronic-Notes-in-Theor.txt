the non-confluence causes a number of technical problems. unfortunately, the way in which infinite normal forms were defined in[2,3] means that for every different infinite normal form that is defined, one has to deal with these problems all over. in an improved framework was given in which the substitution related problems are separated from the rewrite system related problems. this separation is achieved by relating the infinite normal form of a term graph to the infinite normal form of the unwinding of the term graph. the price for the separation is that we have to assume that the infinite normal form of a graph is the infinite normal form of the unwinding of that graph. in the context of modeling programming languages, this means that the letrec cannot be used to model sharing sensitive side-effects such as assignment. however, one can first model the sharing sensitive side-effects in a non-recursive setting and then use the letrec to add recursion.



overview. after the preliminaries, we will define the notion of infinite normal form. in the next section, we extend rewrite relations and infinite normal forms from terms to graphs. using these extensions, we then identify a class of term graph rewrite systems for which we define extensions of infinite normal forms from terms to term graphs.



one way of deriving a cyclic extension is to begin with modifying the right-hand sides of the given rewrite rules to use letrecs for substitutions. next, rewrite rules that do not modify the unwinding may be added. finally, some completion must be done. the simple cyclic extension of the lambda calculus in the introduction(1) was derived in this way. if a cyclic extension of an orthogonal crs is derived in this way then the following theorem, which was proven in, might be useful to show infinitary soundness:



n. however, we cannot expect this due to the fact that a rewrite step on a cyclic term often corresponds to more than one step on an approximation. the matter of completeness is discussed in depth in. in this paper, we merely present the solution.



we have presented a framework for lifting infinite normal form definitions from term rewrite systems to term graph rewrite systems. the non-confluence problems, which had to be dealt with for proving uniqueness of infinite normal forms in are now dealt with in a proof of infinitary soundness. the advantage is that in a proof of infinitary soundness we can use known results about rewrite rules that preserve the unwinding of a term. the framework does not supersede the notion of skew confluence(). this notion is still useful to prove results about rewrite rules that preserve the unwinding of a term.



