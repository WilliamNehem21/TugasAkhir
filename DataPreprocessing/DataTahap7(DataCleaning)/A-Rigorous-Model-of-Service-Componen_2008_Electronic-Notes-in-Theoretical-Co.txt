the service component architecture(sca) provides a platform-independent component model for serviceoriented development. a service component with different communication mechanisms and implementation languages can be modeled in sca. however, it lacks a formal foundation for sca-based system specification and verification. this paper presents a formal service component signature model with respect to the specification of the sca assembly model. inspired by the idea of independence in sca, a language-independent dynamic behaviour model is proposed for specifying the interface behaviour of the service component by port activities. based on the dynamic behaviour model, the compatibility relation between components is discussed. a set of transition rules are given to map business process execution language for web services(bpel) to dynamic behaviour expressions and then to petri nets, thus the service component based system can be verified with existing tools. a case study is demonstrated to illustrate how to use our approach to constructing a web application in a rigorous way.



nowadays service orientation becomes an important theme in software development. based on the emerging computer network technologies, service oriented computing(soc) enables an environment in which software can be collaboratively and remotely developed rather than just locally developed. the key idea in soc is the service-oriented architecture(soa), which provides a new paradigm for the existence and development of software system. currently, many industrial standards are proposed in the spirits of soa, such as web services and open services gateway initiative(osgi). though many specifications are presented in those standards, the main attention is usually put on the service communication and com-



the contributions of this paper contain four parts. firstly, a formal service component signature model is presented with respect to the specification of the sca assembly model. secondly, based on the signature model, a language-independent dynamic behaviour model is proposed for specifying the interface behaviour of the service component by port activities. thirdly, a method for translating bpel to the dynamic behaviour expression is given for showing that the dynamic behaviour model is rich enough in expressivity. lastly, based on the dynamic behaviour model, we present a verification method for the service component based system by translating the dynamic behaviour model to a petri nets and using the existing tools for verification.



the paper is organized as follows. in section 2, a component model for the assembly model in sca is presented and the operational semantics of the dynamic behaviour model is given. section 3 models bpel interface behaviour with sca and verifies bpel process by mapping dynamic behaviour expressions to petri nets. section 4 is a case study to illustrate the formalism and the verification. in section 5, the related work is reviewed and compared. section 6 concludes the paper and discusses some future directions.



each method is of the form op(t x; t y), where op is the method name, t x and t y are the input and output parameter lists, in which t is the parameter type and x, y are the parameter names. we use p.m to denote the method set of port p, p.t to denote the port type, and p.c to denote the communication type.



besides the static consistency checking, the formal reasoning or verification during the development process cannot be supported using the static signature information. we use port activities to describe the component dynamic behavior, the basic activity of which is assumed to be the message exchange between two ports. the syntax of the component dynamic behaviour expression is defined as follows.



the basic synchronous semi-message activity does not have the complete communicating partner information, which will be achieved in the future. we adopt an optimistic semantics at here, and assume that the component environment will always provide a legal support for the semi-message activities in the component behaviour expression, so the basic synchronous semi-message activity will always complete. after getting the complete port information, the basic synchronous message activity can complete after synchronization.



after translating the dynamic behavior expression into a petri nets, we can perform the analysis on the sca model of the online shop by the following two ways: either using net tools such as design/net, or converting the petri-net model into the input languages of analysis tools such as spin, smv, smc, and iota. in design/cpn, we can perform two kinds of analysis through simulation. the first can be done on the standard simulation report directly, which includes boundedness and liveness properties. the second is performed based on user-defined queries about the occurrence graph, which is the state space of the model.



because sca is a new proposed specification, there are few existing work in formalization and verification for sca. in, a small core formal language(srml-p) is presented to specify the interaction protocol between components. srml-p follows the ideas in sca and provides a mathematical framework in which some servicemodeling primitives are defined and application models can be reasoned about. based on the primitives, some communication paradigm can be specified, such as on the this model, it is possible to formally reason about the choreography in a manual way. in, antonio brogi et al. formalize wsci using ccs. compatibility and replaceability between web services are discussed. in, g. pu et al. develop semantics for bpel and then to verify bpel. compared with them, we are con-



cerned with the interface dynamic behavior from an orchestration view, and apply our platform-independent description mechanism to bpel. in, csp is directly used to formalize ws-cdl and bpel, and verification can be taken after translation. we share the idea of using existing tools for verification, and the dynamic behavior model is proposed according to the sca specification, which is convenient to model the system using sca.



is constructed based on the service. it is not only directly for internet use but also provides dynamic property check in composition. when chaining components together, the verification and calculation should be based on the semantics of the behavior. in, static structure, dynamic behavior and refinement of component systems is proposed based on uml 2.0 superstructure. interface protocol state machine(ipsm) in uml 2.0 is used to specify the interface behaviour and contract automata is presented as the transition model of ipsm. the component structure model is also hierarchical, and the stateless operation feature is included in the contract automata. compared with the work in, we unify the component definition using port, and take into account different communication types in the behaviour model.



we have proposed a rigorous approach to supporting service oriented development based on service component. service component is modeled according to the standard of service component architecture issued recently. dynamic behavior expression is developed to describe the composition activities in service composition. a set of transition rules are given to map bpel to dynamic behavior expression, thus the service composition process can be verified with petri net. a case study is given to show how to use this approach to constructing web based software in a rigorous way.



this work is partially supported by the national high tech research 863 program of china under grant no.2006aa01z165; the national natural science foundation of china under grant no.60673114, no.60603033, no.60603037, the projects htts funded by macao science and technology fund. the second author is partially supported by the project highqsoftd funded by macao science and technology development fund, the national basic research program of china(973) under grant no.2005cb321802 and nsfc under grant no.90612009 and no.60573085.



