the analysis we perform with some existing tools shows that even simple examples cannot be efficiently solved. we need approximations to reduce the number of variables in our formulae: this is the main source of time computation growth. we study standard approximation methods based on taylor polynomials and ad-hoc strategies to solve the problem and we show their effectiveness on the repressilator case study.



in this paper we start from the considerations presented in concerning the effectiveness of bounded reachability computation on semi-algebraic hybrid automata and we show on some examples which kind of approximations are necessary to keep complexity under control. as done in we may distinguish space and time discretizations in our work. as far as space discretizations are concerned, instead of implementing an ad-hoc algorithm, we try to exploit tools which allow approximate computations over the reals such as rsolver and ecli pse. unfortunately, this is not enough: space approximations which separate the continuous variables are necessary. we notice that time discretization and taylor polynomials are essential ingredients in our approach.



the paper is organized as follows. in section 1 we quickly overview the state of the art. some basic notions about semi-algebraic hybrid automata and reachability find place in section 2, while section 3 is the core part of our work. in section 4 we apply our analysis to the repressilator case study. some conclusions are drawn in section 5.



semi-algebraic hybrid automata introduced in intrinsically combine syntactic restrictions and semantics approximations. on the one hand taylor polynomials can be used to approximate a large class of hybrid automata with semi-algebraic ones. in lanotte and tini proposed an approximation technique for hybrid automata that exploits taylor polynomials to obtain from an hybrid automaton h a polynomial hybrid automaton h' that over-approximate h. on the other hand, cylindrical algebraic decomposition(cad) algorithms(see, e.g.,[16,22,34,10]) can be used to reason on semi-algebraic hybrid automata. such considerations are also at the basis of the abstractions and analysis techniques presented in.



hybrid automata have a mixed discrete and continuous behaviour. the discrete component is represented by a graph, while the continuous one is given as a set of continuous variables. for each node of the discrete graph we have an invariant condition and a dynamic law over the continuous variables. the dynamic law may depend on the initial conditions, i.e., on the values of the continuous variables at the beginning of the evolution in the state. the jumps from one discrete state to another are regulated by activation and reset conditions on the continuous variables.



at this point the only possibility we have is that of introducing approximations. a first approximated approach to the reachability problem consists in the application of the above method exploiting rsolver instead of qepcad b. acting in this way we hope to solve both the problems mentioned in example 3.1. unfortunately, this approach is less effective than the previous one.



the analysis of the two models shows that the one obtained from the s-system does not permit to observe the oscillatory behaviour of the repressilator, this because of the approximations introduced for simulation. the other model, instead, results to be less sensitive to approximation and simulating it we can observe the oscillations in proteins concentrations. this points out that in order to define robust models for biological systems it is important to distinguish from the beginning the discrete from the continuous parts of the systems. hybrid automata allow to do this and hence to obtain simpler dynamics in each discrete location. such dynamics are less sensible to the approximations which are necessary to carry out formal analysis.



