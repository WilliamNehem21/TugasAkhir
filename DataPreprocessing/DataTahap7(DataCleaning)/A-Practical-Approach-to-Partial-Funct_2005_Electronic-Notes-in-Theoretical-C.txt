a more pragmatic issue that must be dealt with is that most theoremprovers are based on classical logic. various approaches have been advocated for modifying standard theorem-proving to accommodate logics with partial functions[6,7,9,14]. however, we are interested in finding a method for supporting partiality without modifying the theorem prover. one way to do this is by building overand under-approximations for the formula. this technique has been successfully applied for three-valued model-checking[3,5].



in this paper, we propose a technique for checking the validity of a formula in three-valued logic by reducing the problem to checking two formulas in standard two-valued logic. similarly to pvs, we construct a tcc formula whose validity implies that the original formula is always defined. after checking the tcc, we check the original formula. both of these checks can be done using



the paper is organized as follows. section 2 gives the syntax and semantics for our three-valued logic. section 3 gives two fundamental theorems which justify the reduction to two-valued logic. section 4 describes results obtained by implementing these ideas in the theorem prover cvc lite, and section 5 concludes.



from the implementation point of view, the approach was extremely easy to code: it took only a few hours to implement and debug. furthermore, checking tccs does not noticeably affect the performance of the tool on classical examples(without subtypes or partial functions), as the tccs of such formulas immediately simplify to true. how it affects the performance on large examples with partial functions still remains to be seen.



we have proposed a three-valued kleene logic for use in applications which are most naturally modeled using partial functions. we have shown how the question of checking validity of formulas in this logic can be solved by checking the formula and a type correctness condition whose size is linear in the size of the original formula. both of these checks can be done using standard two-valued semantics.



