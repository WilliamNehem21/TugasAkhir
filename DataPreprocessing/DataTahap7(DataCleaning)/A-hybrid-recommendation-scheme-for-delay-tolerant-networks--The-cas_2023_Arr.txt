recommender systems are widely-adopted by numerous popular e-commerce sites, such as amazon and ebay, to help users find products that they might like. although much has been achieved in the area, most recommender systems are designed to work on top of centralized platforms that are traditionally supported by fixed infrastructure like the internet. hence, additional work is warranted to examine the applicability and performance of recommender systems in challenging environments that are characterized by dynamic network topology and variable transmission delays. this study deals with the design of a recommender system that is compatible in a delay-tolerant network where communication is supported by opportunistic encounters between participating nodes. the proposed approach combines collaborative filtering and contentbased filtering techniques to generate rating predictions for users. to make the system more tolerant against interruptions, each node maintains a local recommender that generates predictions using user profiles that are obtained through opportunistic exchanges over a clustered topology. simulation results indicate that the proposed approach is able to improve coverage while alleviating the cold-start problem.



ease of user profile construction: collaborative filtering simplifies the process of building user profiles. user profiles are created by compiling a list of items that the user has rated, along with their corresponding ratings. this approach avoids the complexity of weighing terms and determining their relevance in representing user interests.



cold start problem: collaborative filtering faces a cold start problem when dealing with new users or new items. for new users who have not rated any items, the system struggles to find similar users for effective recommendations. similarly, if a new item is introduced, the system lacks sufficient data to recommend it to any user.



specifically for a delay-tolerant digital marketplace environment. the dynamic nature of the network poses challenges in implementing a recommender system, as acquiring the necessary data for user profiling and generating predictions must be done opportunistically. additionally, in the absence of a central entity, recommendation processing needs to be distributed across mobile participating nodes. despite the limitations in communication network, the recommender system is expected to generate meaningful recommendations. to address this, a hybrid approach is employed, combining both content-based and collaborative filtering techniques. this hybridization aims to strike a balance between recommendation accuracy and coverage.



mobile devices with the necessary computing resources(e.g., cpu, bandwidth, and storage) are ubiquitous in the real world. we imagine these devices to cooperate and collectively form the communication infrastructure necessary for supporting a delay-tolerant digital marketplace. using readily available network interfaces, each device defines a communication buffer. whenever two devices come within the range



the hybrid recommender system proposed in this study leverages the concept of node clusters to facilitate message propagation throughout the network. while following the general phases of the recommendation process found in traditional online recommender systems(as discussed in section 1.1.1), the proposed system incorporates certain modifications to accommodate the dynamic nature of the network.



during the prediction phase of the proposed hybrid recommender system, each node operates its own local recommender to generate item predictions for its active user. the local recommender relies on the data stored in its local database to make accurate rating predictions. this decentralized approach allows the recommender system to continue functioning even when nodes are disconnected from other nodes in the network.



the propagation of user profiles in the recommender system is highly dependent on the dynamic formation of clusters. nodes within the system assume distinct responsibilities based on their specific roles in the cluster. the cluster head serves as a central entity in facilitating the dissemination of user profiles within the cluster. on the other



upon receiving a similarprofilesupdatemessage, the cluster member calculates the similarity between its user profile and each of the received user profiles from the cluster head. if the similarity is greater than its lsn value, the user profile is added to its similarprofilesbuffer, replacing the previously least similar user profile. on the other hand, if the received user profile does not meet the similarity criteria, it is disregarded.



and type:way, to extract only the relevant road networks. the extracted data is then exported in geojson format. next, we import the downloaded data into qgis, an open-source geographic information system software, for further processing. within qgis, we utilize the disconnected islands plugin to group line segments into connected network groups. among these groups, we select the one that represents the main roads, which will serve as the final road network for the simulation. the selected road network is exported in wkt format. the



the total number of nodes that will be included in the experiments is set to 170 nodes. 20 nodes are allotted for public utility vehicles(puvs) and the remaining 150 nodes are allotted for pedestrians and private cars. the distribution of the remaining nodes between pedestrians and private cars are based on available data on private vehicle ownership and the population of tacloban city as indicated by the land transportation office and the philippines statistics authority.



to establish a baseline, the recommender system is tested in a controlled setup where users possess complete knowledge of all other users in the network. in this scenario, nodes are strategically positioned within communication range of each other, and their mobility is disabled. the objective of this experiment is to compare the performance of pure collaborative filtering as described in, hereinafter referred to as reference algorithm, with the proposed hybrid approach, utilizing the amazon dataset. note that a more recent work by beierle et al. uses pure collaborative filtering but varies the way at which profiles are propagated in the network. the experiment also aims to determine the maximum achievable performance of both approaches when nodes can access the user profiles of their most similar users in the network. to explore the impact of the number of similar users considered in rating predictions, the experiment varies the number of similar users from 5 to 25, with an interval of 5. this variation enables an analysis of how



the next set of experiments focus on how our proposed recommender system makes rating predictions on products in a delay-tolerant environment. over time, the mae and coverage may change as the nodes obtain the profiles of their most similar users. therefore, we compute the mae and coverage every 5.0 s from the start of the simulation to track the performance of the recommender system as it gathers the profiles of more similar users in the network. we compare the performance of the reference algorithm and our proposed hybrid recommender system in a dtn environment. this experiment determines the viability of our proposed hybrid approach in improving the performance of our reference algorithm in building a recommender system in a delay-tolerant environment. finally, we conduct a comparison between the performance of the proposed hybrid approach in both a centralized setup and a dtn setup. this experiment aims to determine the degree of success achieved by the dtn version despite the challenging network conditions.



the mae of both approaches did not increase nor decrease as it considers the opinions of more similar users. because the nodes in this part of the experiment are chosen at random, the nodes have low similarity with each other. there are instances where the nodes cannot fill up their corresponding similarprofilesbuffer. therefore, their list of similar users considered in making rating predictions is no longer increased despite increasing the size of the similarprofilesbuffer.



added to the buffer does not yet matter as long as the buffer is not yet full. this explains why the mae of the reference algorithm is considerably higher at the start of the simulation. meanwhile, for the hybrid approach, it does not purely rely on the ratings of its similar users but also on its own ratings. therefore, the mae of the proposed hybrid approach is not as high at the beginning as compared to the reference algorithm. the mae of the reference algorithm becomes lower because the contents of the similarprofilesbuffer are eventually replaced with more similar user profiles as the simulation progresses. meanwhile, the mae of the proposed hybrid approach did not decrease but it remained consistent despite the increase in its coverage.



on the other hand, the results show that the coverage of both approaches increases as the recommender system considers the ratings of more similar users. the coverage of the reference algorithm initially starts at 0 which implies that it was not able to predict the rating of any product for any user. as mentioned previously, the similarprofilesbuffer of users at the start of the simulation is still empty; hence, the reference algorithm has no basis for making rating predictions at this time. meanwhile, our proposed hybrid approach can already make rating predictions even if the similarprofilesbuffer of a node is still empty. however, at this point, the recommender system is reduced to pure content-based filtering because it will only rely on the ratings of the target user on items similar to the one that needs to be predicted. for both approaches, the coverage eventually increases as the recommender system considers the ratings of more similar users in the network.



