cally started proctype. to fix|si| all variables are padded to the size of an integer using compiler directives. the introduced overhead is mitigated by pins as our performance and memory benchmarks show(sec. 4). sec. 3 shows how mr can be encoded in the model.



ified that indeed all these models are correctly explored by our tools(see sec. 4). to this end, we had to turn off control flow optimization(-o3) in some cases, due to its limited implementation in spins. the following subsections present different verification strategies on these models with ltsmin and give some background on the used algorithms.



symbolic model checking. the tool prom2lts-sym implements symbolic model checking, learning the symbolic transition relation on-the-fly. this approach also works well on models with high locality. as such models have a sparse pins dependency matrix, our reordering algorithms(-rga) can optimize them further for bdds. using a chaining heuristic, we can explore> 1020 states in a second: prom2lts-sym-rga--order=chain peterson5.prom counter-example and owcty typically explores a large portion of it[6, sec. 4.2], and cndfs is found to return even shorter counter-examples than a parallel bfsbased algorithm[6, sec. 4.3]! on the other hand, the bfs-based algorithms owcty and pb can be distributed on a cluster, as divine demonstrates.



