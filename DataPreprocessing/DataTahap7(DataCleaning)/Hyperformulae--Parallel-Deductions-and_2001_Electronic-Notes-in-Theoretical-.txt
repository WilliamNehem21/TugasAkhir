in this perspective, intersection on types seems to be somewhat esoteric, because of the crucial shape of the introductory rule. namely, the^ introduction rule says that a term m has type^ if and only if the same term m has both type and type. thus, in logical terms,^ becomes a proof-functional connective, restricting the classical conjunction; the proof of the^ formula depends in an essential way upon intensional aspects of the component subformulae, namely they must be proved by the same proof.



as formal de nitions will clarify, both the order and the position of each formula in a hyperformula are signi cant. however, during the derivation, a component of a hyperformula can move to a di erent position for fusing with another component. for this reason, we use a special marker,", to denote a hole in a parallel composition. in other words" can be considered as a logical constant, whose meaning is just the lack of information. it does not contribute to forming implicative and conjunctive formulae, but to forming hyperformulae.



the global ones are(! i) and(! e), which involve the whole hyperformula. by(! i) one may discharge an assumption only if the same activity is done in all the other components at the same time. when saying that the performed action is the same, we also mean that what is really discharged is a component of a parallel composition of assumptions. namely each component of the hyperformula-assumption is discharged by each component of the hyperformula-conclusion.



instead, we need a richer context for deducing an^ formula. first, all the assumptions, that are used in all the conclusions, must be composed in one^ formula. then several copies of this^ formula, composed by j in one hyperformula, are available as assumptions for the deductions, which have to go on in a parallel way in order to fuse their conclusions at the nal step. in other words, the main di erence between a deduction of j and a deduction of^ consists in using di erent resources(assumptions) in a di erent way during the parallel deductions of and, respectively.



in this section we de ne a labeling procedure that associates-terms to hlproofs. this annotation of proofs by terms is instrumental to the isomorphism between t a^ and hl. informally speaking, the rst step will consist in labeling the context of a deduction by associating distinct lambda variables to hyperformulae which are assumptions. then, once a labeled set of assumptions is provided, any(! i) and(! e)-rule application will correspond to perform a abstraction and an application on the label, respectively. instead, local rules, that is(^i),(^e), and(j w), do not modify the term decorating the proof. finally, the term associated to the whole proof will encode, by its structure, the deductive history of the proof.



a rst step toward this result is to de ne an interpretation of formulae and hyperformulae as types. formulae of de nition 3.1 can be read as types, mapping propositional variables,! and^ into type variables, arrow and intersection on types.



let us consider the case when the last applied rule is the(! e). then, by induction hypothesis, bi`^ m: i! i and bi`^ n: i, where bi=()i. hence by using the typing rule(! e) we obtain the thesis bi`^ mn: i.



the most interesting application of the logic we proposed here should be the de nition of an explicitly typed lambda calculus with intersection types. this would be a very powerful functional language, in which all(and only) strongly normalizing terms-programs have a well-typed version. it is in this context that we are currently investigating such a typed lambda calculus. deduction rules of hl and labeled proofs suggest a smooth solution to this further issue.



we would like to thank a group of ph.d. students in siena, c. bianchini, d. luchi and s. sadocco, for many helpful discussions and ideas that originated the notion of parallel deductions presented in this paper. we are grateful to f.barbanera and m.dezani for useful suggestions.



