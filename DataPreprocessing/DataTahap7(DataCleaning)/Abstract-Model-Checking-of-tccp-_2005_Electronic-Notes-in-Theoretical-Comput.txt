ingredients of these systems, such as timeouts, preemptions, etc. the automatic verification of systems specified in the timed concurrent constraint language tccp of was first studied in. then, an exhaustive method for applying the classical model checking technique to tccp was proposed in which uses the temporal logic for reasoning about tccp programs of. the main idea behind these methods is to take advantage of the constraint dimension of tccp in order to obtain a compact representation of the system which is then used as an input for the model checking algorithms. unfortunately, both



developed). however, inaccurate abstract models would be obtained by overapproximation due to the time dimension of tccp. we overcome this problem by combining overand under-approximation in the abstraction of tccp operators. this approach is novel and allows us to build abstract models which are satisfactorily precise.



in this section, we demonstrate that some additional conditions concerning the suspension behavior of the program are needed for the abstract semantics of tccp programs to correctly approximate the standard one. in the case these conditions hold, we develop an abstraction-by-transformation method which allows us to approximate tccp computations. finally, we show how the abstract semantics can be refined in order to preserve suspension. however, the transformation method for implementing abstraction can not be directly applied to the refined abstract semantics anymore.



intuitively, we can imagine that we split each time instant into n parts. when we abstract a concrete program, the structure of the abstracted program ensures that all agents corresponding to concrete agents(except for the conditional agent) are executed in the last part of each n block. furthermore, the execution of conditional agents will start during the corresponding part of the block depending on its relative depth.



