given a logic-based specification of a formal system, establishing properties of the system reduces to answering questions about what is provable in the logic encoding the specification. different approaches can be adopted for this task. at one end, the specification logic can be formalized and reasoned about within a general purpose theorem-proving framework such as that provided by coq or isabelle. at the other end, one can develop another logic, often called a meta-logic, that is explicitly tuned to reasoning about the specification logic. it is the latter approach that we examine here. in particular, we expose its practical use within the context of a specific theorem-proving system called abella.



since we have encoded the entire specification logic, we can prove general properties about it in g that can then be used in reasoning about particular specifications. in abella, various such specification logic properties can be invoked either automatically or through the use of tactics. for example, the following property, which is provable in g, states the judgment l h g is not affected by permuting, contracting, or weakening the context of hypothetical assumptions l.



a natural number argument to provide a target for induction. in abella, such arguments are unnecessary since the system implicitly assigns such an additional argument to all definitions. thus when we refer to induction over a definition we mean induction on the implicit natural number argument of that definition.



the rest of this section describes definitions and lemmas necessary to prove this formula. in general, almost all results in this section have simple proofs based on induction, case analysis, applying lemmas, and building results from hypotheses. for such proofs, we will omit the details except to note the inductive argument and key lemmas used. the full details of this development are available in the software distribution of abella.



the logical relation the difficulty with proving weak normalizability directly is that the halting property is not closed under application, i.e., halts m and halts n does not imply halts(app m n). instead, we must strengthen the halting property to one which includes a notion of closure under application. we define the logical relation reduce by induction over the type of a term as follows: an empty context. now, such judgments actually enter the picture through uses of the specification logic rule for of that deals with the case of abstractions. this means that we have to consider judgments involving type that have a context meant to be used in judgments involving the of predicate. to use the result we have just established, we must show that these contexts can be ignored. we formalize this as



given our repertoire of results about the occurrences of nominal constants in judgments, we can now prove fundamental properties of arbitrary cascading substitutions. the first property states that closed terms, those typeable in the empty context, are not affected by substitutions, i.e.,



the abella system has been tested with several prototypical examples; details are available with the system distribution. these experiments indicate considerable promise for the two-level logic based approach in reasoning about formal systems. however, the experiments have also revealed some issues with abella at a practical level. we discuss these below and suggest work aimed at addressing them.



