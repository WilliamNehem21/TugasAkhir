ties that can be programmatically accessed through the web. these functionalities represent the different operations made available by the web service and are described in its service description using the wsdl standard language. autonomy and heterogeneity of services induce several interoperability problems. the interoperability is the key for several issues such as the service composition which involves the synthesis problem(i.e., how to coordinate the component services to fulfill a given goal). in this context, the compatibility analysis plays a crucial role. this analysis consists in checking if a client and a provider can properly interact.



the paper first recalls the model we rely on in section 2. section 3 presents the motivating example used to illustrate our model. the different forms of temporal constraints we define are described in section 4. in section 5, we show how we integrate the different forms of temporal constraints by extending to the web services timed transitions systems(wstts). in section 6, we present the compatibility analysis process of web services regarding their different constraints(constraints over data and temporal constraints). related work is introduced in section 7, and section 8 concludes.



definition 4.2 an external constraint e is a tuple(p, q, d), where q denotes an input/output message in m?!, p is the pre-condition that must hold to perform q, such that d is the period in which q can be performed. if q is an input(resp. output) message, the external constraint is called an input(resp. output) external constraint.



(2) external constraints. internal constraints can be specified by(i) temporal constraints and(ii) constraints over data. the temporal constraints can be specified over local clocks and a global clock. the local clocks rely on standard timed automata clocks, whereas, the global clock relies on an absolute time. the constraints over data involve parameters of the exchanged messages, or counters. the internal constraints specify the activation constraints(cancellation) and dependency constraints(non-cancellation). the external constraints are constraints exposed by the client and the provider service, that must be checked before initializing the interaction. those external constraints are inferred from the internal constraints(see section 6.2).



an information system is used to manage data. it is characterized by a set of objects defined by a set of attributes that can change their values by performing three atomic operations: add, update, and delete. information can also be read. these atomic operations are effects of actions performed by services. to enforce constraints over counters, we consider a set of data that represent the counters. the value of counters can be incremented, decremented or reset.



two web services q1 and q2 are said compatible if each message sent by the service q1(resp. q2) is received by the service q2(resp. q1). so the compatibility checking relies on the consistency of the transitions that correspond to the pairs(input message, output message). by considering constraints over data and temporal constraints, we distinguish three classes of consistency of two transitions:(1) absolute consistency,(2) likely consistency and(3) absolute inconsistency.



period to send the message is included in the period to receive it. however, when the sending period is not included in the receiving period but the two periods have some common values, we say that constraints are likely consistent. when the two periods are disjoint, we say that the two constraints are absolutely inconsistent.



in, the authors deal with analyzing and verifying properties of composite web services specified as multiple bpel processes. the properties are expressed via the temporal logic ltl. the services are specified using an automaton-based formalism, where services are specified by the messages they can exchange asynchronously and the data flow. so, investigates an approach that analyzes some given properties in a given composition, whilst we are interested in the compatibility analysis needed to build a composition.



in this paper, we have presented an approach to deal with the automatic compatibility checking of web services by considering their operations, messages, data associated to messages, together with conditions on these data and temporal constraints. we have defined two forms of constraints:(i) internal constraints used to model the service and(ii) external constraints inferred from internal ones. the inference of external constraints allows to detect some implicit constraints that can be used to show the incompatibility of services. the internal constraints can be local or global. our notion of local clock is identical to the one used in timed automata. we use a global clock to specify constraints that relies on absolute dates. as the global clock relies on the absolute time, thus it is never reset. the internal constraints can express activation and dependency conditions. moreover, we consider data capabilities that allow us to specify guards. then, in order to analyze the compatibility of services by considering these properties, we have proposed to extend the notion of wstts.



