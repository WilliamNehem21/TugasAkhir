multi-languages are programming languages arising from the combination of already existing languages[27,1,32,9,14,26,24,21]. intuitively, terms of multilanguages are obtained by performing cross-language substitutions. for instance, the multi-language designed in allows programmers to replace ml expressions with scheme expressions and vice versa. potential benefits are code reuse and software interoperability. in order to provide a semantics, introduces new constructs to regulate the flow of values between the underlying languages, the so-called boundary functions.



a key property of such signatures sg, related to polymorphism, is regularity. we will shortly show how to build a set of terms out of sg, and regularity ensures that each term has a unique least sort[13, proposition 2.10].(all signatures in this paper are assumed regular).



let th,(sg, ax) be an order-sorted theory. if an sg-algebra a satisfies all the axioms in ax, we call a a model of th. the category of models osmod(c, i)th is the full subcategory of osalg(c, i)sg given by all the models of th in(c, i).



given a multi-language signature sg, the class of all sg-algebras and sghomomorphisms form a category denoted by mlalg(c, i)sg. we have a simple connection between this category and osalg(c, i)sg, outlined in theorem 3.7, after more of the running example.



regularity and coherence for a multi-language signature sg,(sg 1, sg 2,) are defined with respect to its associated signature. that is, sg is regular(resp., coherent) if sg is regular(resp., coherent). it is immediate that sg is regular(resp., coherent) if and only if sg 1 and sg 2 are regular(resp., coherent).



the running example has the sole purpose of illustrating our theory in an elementary way: we are very much aware of its limitations. here we give a taste of a more realistic example. for space reasons, we can convey only the main ideas: full details are in an extended version of the paper.



in synchrony with theoretical developments, with each approach supporting and informing the other. to this end, we are pursuing practical developments of the work presented in this paper. as a side note, we have also begun to look at the implementation of our examples within maude.



