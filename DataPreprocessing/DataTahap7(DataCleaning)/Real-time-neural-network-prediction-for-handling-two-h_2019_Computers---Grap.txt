the fact that there is no confusion among markers. our work focuses on the former category. alternative technologies are based on inertial measurement units(imus) which, in the 9-axis variant, can track acceleration and angular rate. they can be very precise in a short-term context, but suffer from long-term drifts due to the lack of an absolute positional reference.



the experience of full-body motion control of an avatar into a vr experience is referred to as embodiment. important limitations for a successful embodiment of the avatar are the discontinuities potentially caused by self-occlusions and the absence of movement of the hands, both leading to a reduced sense of body ownership. in such scenarios, increasing the number of cameras is not always feasible, and does not solve the problem entirely.



as an alternative to inverse kinematics, we propose a real-time algorithm based on machine learning that addresses the issue of occlusions through a predictive model. in the first part of the paper(section 1.1) we discuss the state of the art and analyze how our method relates to other approaches. in section 2 we describe the features of the dataset used for training our model. in section 3, we recall three baseline methods for correcting occlusions and we introduce a more complex model based on neural networks for handling both occlusions and inverse and focus their work on limbs, and do not address the particular case of fingers. finally, a large portion of research in this field exploits the assumption that an underlying skeleton model is available, thereby allowing the algorithm to put some constraints on the solution. recently alexanderson et al. addressed the problem of labeling markers in a passive system for the fingers and the face. instead of tracking markers in the temporal domain, it estimates the most likely assignments using gaussian mixture models(gmms). this allows a fast recovery from occlusions and avoids the so-called ghost markers, i.e. detection of markers that do not exist. this approach, however, does not address the problem of predicting the marker positions during occlusions.



resulting in self-occlusions. previous work has tried to address this problem, for instance tkach et al. fit the hand posture using a combination of sphere meshes while mueller et al. use a cascade of convolutional neural networks(cnns) to first localize the hand center and then regress 3d joint locations. they also employ a synthesized dataset that simulates cluttered environments via a merged reality approach, allowing the model to generalize better. these approaches, however, are still very limited in terms of range of motion as they are optimized for a user facing the camera.



as for tracking with motion capture, han et al. frame the problem as a keypoint estimation task, which is tackled with cnns. while their approach allows using a passive system, the authors highlight some shortcomings with multiple occlusions. other frameworks based on motion capture typically employ some sort of sensor fusion from multiple data sources. andrews et al. propose a tracking system which uses imus and a physics model to recover from sensor dropout. our approach is related to



machine learning for inverse kinematics. as an improvement over existing techniques,[14,15] proposed a deep learning framework in which a forward kinematics layer is added to a neural network to constrain the output to feasible postures. specifically, zhou et al. focuses on hand pose estimation and on full-body pose estimation. as with the ms kinect, these techniques rely on regular cameras and computer vision algorithms. as such, they are unable to exploit the potential that a full motion capture system has to offer, in terms of both precision and range of motion.



inputs: the absolute positions(i.e. 3d points) of the markers. given that we employ an active motion capture system, each marker is tagged with its own unique id. some positions can be missing from the data stream if the corresponding markers are not visible from a minimum number of cameras, i.e. they are occluded.



the phasespace motion capture system provides us with absolute tracking, whereas the perception neuron offers relative tracking. as the data streams between these sources are very different, it is crucial to devise a sensor fusion algorithm that yields plausible results. from a high-level perspective, the algorithm is divided into a series of steps.



where xi=[xix, xiy, xiz, 1] and yj=[yjx, yjy, yjz, 1]. we are again assuming a row-major vector notation. this problem can be solved using exactly 4 non-coplanar markers. if more markers are available, the problem is underdetermined, as there are infinite solutions to the linear system. therefore, we apply l2 regularization, which means that among all possible solutions, we choose the one that minimizes the squared norm of the weight vector. in other words, the predicted position should depend on all the other markers, each of which has a small weight; this leads to a better robustness to noise. we minimize the loss function:



last known position. the simplest baseline consists in keeping the last known position of an occluded marker. with regard to discontinuities on occlusions, this method is temporally consistent. moving average. inspired by piazza et al., we take velocity into account. we keep a moving average of the velocities of each marker over the last k frames(we use k= 20, i.e. one third of a second) to minimize the effect of noise. when a marker is occluded, this baseline simply moves the marker along the trajectory[26,27]. the output layer uses a linear activation function, thereby allowing an unbounded output range. all hyperparameters were chosen to minimize the reconstruction error on the validation set, also taking into account performance and latency constraints. we also experimented with varying numbers of layers and discovered that more layers lead to overfitting on this specific task(regardless of regularization).



= 0.001. the learning rate is automatically adjusted once the error reaches a plateau; more specifically, it is halved if the error has not improved over the last 5 epochs. the model is trained only on simulated occlusions, as they are the only ones for which a reliable ground truth can be obtained, and with a batch size of 32 samples.



having both hands in vr gives the user a more natural way to interact with elements of the virtual world. it allows us to perform simultaneous actions, like changing gears while driving, but also to achieve more complex tasks like handling large objects. the provided video illustrates the actions of opening a drawer to grab an object, fingers crossing and shaking hands.



with regard to related work on this subject, previous methods have mainly addressed passive motion capture and limb reconstruction. out of the few occlusion-handling solutions targeted at active-marker technologies, we investigated, which has already been employed in some studies. however, this method requires at least three markers for each segment, which follows from the assumption that the distance between neighboring markers is approximately constant. given that our hand model comprises at most two markers per finger(tip, and optionally, base), we suggest that a data-driven approach is more suited to this task because it adapts better to the specific domain that should be addressed(hand and fingers reconstruction with only 1 or 2 markers per finger, in our case). this also explains why, in our setting, analytic inverse kinematics perform significantly worse: in the absence of intermediate markers, the algorithm has no knowledge of the priors that constitute a good-looking posture.



previous frames, and they can potentially handle discontinuities without manual corrections, although it is not trivial to enforce temporal consistency on occlusions while keeping the target function differentiable. in the future, we would like to experiment with convolutional, long short-term memory(lstm), and gated recurrent unit(gru) architectures. we would also like to add seamless support for passive motion capture systems, perhaps as a pluggable encoder.



with the current architecture, we have a single-hand neural network that is exploited independently for each hand. it means that each hand position is reconstructed only with its own markers positions regardless the relative position of the second hand, leading to possible collisions. in the future, we would like to extend the architecture with a second neural network trained with a dataset of two interacting hands. another important point to address in future work is to improve the enforcement of consistent self-contact as this feature has been shown to be critical for supporting the avatar body ownership.



