the language de ned by a prcg is based on the notion of range. for a given string w= a1::: an 2 t, a pair of integers(i; j) s.t. 0 i j n is called a range, and is denoted hi::jiw. in the range hi::jiw, i is its lower bound,



in any prcg, terminals, variables and arguments of a clause denote ranges. the empty argument denotes an empty range. a terminal t denotes the range hj 1::jiw i w= a1::: an and t= aj. more generally, a string of the form xy denotes a range i both x and y denote ranges that can be concatenated: the concatenation on strings matches the concatenation on ranges.



in a nrcg, a negative predicate call de nes the complement language(w.r.t. t) of its positive counterpart: an instantiated negative predicate succeeds(i.e., the derive relation) is extended to allow a(~))") i its posx= x1 x2 x3, y= x1 ux2vx3 for(u; v) 2 ci, x2 2 si, for some i, 1 i n. if is a derive relation mode(i.e., 2 fex; ing), the language de ned by k



30 can only be instantiated i x x x, the argument of the rightmost predicate call, denotes a range, that is i the three ranges bounded respectively to x1, x2 and x3 can be concatenated. this is possible i x1ux2vx3= x1x2x3(i.e., uv=").



