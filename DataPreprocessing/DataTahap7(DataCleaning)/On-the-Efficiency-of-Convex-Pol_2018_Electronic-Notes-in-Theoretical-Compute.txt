the domain of convex polyhedra plays a special role in the collection of numerical domains considered for program analysis and verification. as far as precision is concerned, it would be the most natural choice in many contexts but, due to its worst case exponential complexity, it is sometimes considered an unaffordable option. this has led to a systematic quest for simpler domains that are capable of reasonable precision using less computational resources. there are anyway cases where the use of the domain of convex polyhedra turns out to be feasible, also due to recent progress in their implementation. after reviewing a few known approaches to decrease the amount of resources needed when computing on this domain, we will introduce a couple of novel techniques that can be used to further improve its efficiency, without incurring precision losses.



as far as precision is concerned, the domain of convex polyhedra would be the most natural choice in many contexts. however, due to its worst case exponential complexity, it is often considered an unaffordable option from a practical point of view. this has led to a systematic quest for domains that are simpler than convex polyhedra, so as to be less demanding in terms of computational resources, and yet capable of reasonable precision. an incomplete list of so-called weakly relational abstract domains can be filled by a review of the relevant literature of the past years: bounded differences[26,33], bounded logahedra, octagons, octahedra,



in the following we will consider new algorithms and implementation techniques that can be used to decrease the amount of resources needed when computing on the domain of convex polyhedra. in particular, we will focus on those approaches that have the potential of improving the efficiency of the analysis without incurring precision losses. the techniques presented, which are the result of ongoing collaborations, have all been implemented in the context of the parma polyhedra library. being work in progress, only preliminary experimental evaluations have been conducted so far. the initial results, besides confirming the absence of precision losses, are encouraging in terms of the efficiency gains that can be obtained.



the paper is structured as follows. section 2, after introducing some notation and terminology, provides an informal presentation for the dd method. in the next two sections we present some of the work in progress on the domain of convex polyhedra: section 3 discusses the use of domain wrappers to improve the efficiency in specific contexts; section 4 describes a new approach for the representation and manipulation of nnc polyhedra. we conclude in section 5.



the double description method due to motzkin et al., by exploiting the duality principle, allows to combine the constraints and the generators of a polyhedron p into a dd pair(c, g): a conversion procedure is used to obtain each description starting from the other one, also removing the redundant elements. 4 for presentation purposes, we focus on the conversion from constraints to generators. we also omit the description of important concepts such as polyhedral cones, homogenization, the lattice of faces and adjacency; the interested reader is referred to for the theory and to[9,24] for the details related to implementation.



another possible optimization can be applied to the approximation of invertible affine assignments, i.e., those where the variable assigned also occurs in the right hand side affine expression(e.g., x= x+ 1). if the variable is known to be unconstrained, then the affine map modeling the assignment is the identity function. however, the apron interface layer to the ppl domains seems to prevent the use of domain operators computing affine images: an assignment such as x= x+ 1 is implemented by(a) adding the primed variable xj,(b) adding the constraint xj= x+ 1,(c) projecting away the unprimed variable x and finally(d) renaming xj to x. also, invertible assignments rarely occur when analyzing programs using pagai(we conjecture this is another side effect of the ssa transformation).



a preliminary experimental evaluation, passing all of the regression tests of the ppl, shows important efficiency improvements on many benchmarks. besides the expected gains on the nnc tests, we also observed a few unexpected efficiency gains on the topologically closed tests, i.e., when comparing the new algorithm with the



despite the intrinsic limitations implied by its theoretical complexity bounds, the domain of convex polyhedra turns out to be a feasible option in several contexts. this is due not only to the recent progress on their implementation, but also to the understanding of the common efficiency bugs that a static analysis tool using this domain should definitely avoid. in this paper we have proposed a few domain wrappers that are able to provide an automatic workaround to some of these efficiency bugs. we have also sketched a new idea for the representation and manipulation of nnc polyhedra that seems to have a great potential in terms of efficiency with respect to the currently available implementations.



most of the new material presented in this paper is the result of joint work still in progress. the author would like to acknowledge gianluca amato and francesca scozzari for the contents presented in sections 3.2 and 3.3; anna becchi and simone perri for the contents of section 4.



