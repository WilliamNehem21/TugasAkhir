implementation relations play a fundamental role in the study of complex interacting systems because they allow us to prove that a given concrete system implements an abstract specification. formally, an automaton is said to implement another automaton if the set of traces or the observable behavior of the first is subsumed by that of the latter. many different kinds of implementation or abstraction relations and their corresponding proof methods have been developed for timed, hybrid[17,30,29] and probabilistic automata[19,20,5,2,28,4].



as we mentioned, jou and smolka first introduced the idea of formalizing similarity of traces by using metrics. approximation metrics for probabilistic systems in the context of labelled markov processes(lmp) have been extensively investigated and many fundamental results have been obtained by desharnais, gupta, jagadeesan and panangaden[10,8,9] and by van breugel, mislove, ouaknine, and worrell[35,32,33,21,22]. the first set of authors introduced a kantorovich-like metric for lmps and presented the logical characterization of this metric. van breugel et al. have presented intrinsic characterizations of the topological space induced by the above metric. this characterization is based on a final coalgebra for a functor on the category of metric spaces and nonexpansive maps. another interesting facet of this body of work is the polynomial time algorithm for computing the metric presented by van breugel and worrell in. for generalized semi-markov processes(gsmp), gupta, jagadeesan and panangaden have developed pseudo-metric analogues of bisimulation and have shown that certain observable quantitative properties are continuous with respect to the introduced metric. kwiatkowska and norman have developed the denotational semantics for a divergence-free probabilistic process algebra based on a metric on probability distribution over executions. in the non-probabilistic setting, girard and pappas[13,12] have developed the theory of approximate implementations for metric transition systems(mts). the state space and the space of external actions of an mts are metric spaces. based on these metrics, the authors develop a hierarchy of approximation pseudo-metrics between mtss measuring distance between reachable sets, sets of traces and bisimulations. the authors have also developed algorithms for exactly and approximately computing these metrics.



in the next section, we give the basic definitions and results from the task-pioa framework. we refer the reader to for a detailed treatment and for all the proofs. in section 3 we introduce uniform approximate implementations for closed task-pioas and we propose expanded approximate simulations as a sound method for proving uniform implementations. in section 4, we discuss the need for discounting when measuring discrepancies in trace distributions. this leads to the notion of discounted approximate implementations and we propose a second type of simulations for proving such implementation relationships. finally, in section 5 we outline how our results extend to general(not necessarily closed) task-pioas and conclude with a discussion on future research directions. proofs of auxiliary lemmas and formal statements of some relevant results from appear in the appendices.



now we give the definition of exact simulation relation for task-pioas. note that the simulation relations do not just relate states to states, but rather, probability measures on executions to probability measures on executions. the use of measures on executions here rather than just executions is motivated by certain cases that arise in proofs where related random choices are made at different points in the low-level and high-level models(see, e.g., proof of ot protocol in).



metrics over probability distributions have been a subject of intense research in probability theory(see, for example, the books and). because of their applicability to probabilistic safety and termination proofs, in this paper we use the uniform metric and the discounted version of the uniform metric(see section 4), to define approximate implementations for task-pioas. as we shall see in the next section, the soundness of expanded approximate simulations rely only weakly on the choice of the metric. in fact, with the appropriate changes in the definition of eas, it is sound for proving approximate implementations with respect to any metric satisfying proposition 3.2.



simulation functions that we would obtain would be sound for proving approximate implementations. however, such non-expanded approximate simulation functions are be considerably less powerful than eass. the key motivation for generalizing simulation relations to their current expanded form, first came from the verification of the oblivious transfer protocol in. in this section, we present a version of this example adapted to our setting of approximate implementations.



in our formulation of expanded approximate simulations, a simulation proof reduces to finding an optimal joint distribution satisfying certain constrains on the marginals. this is closely related to the well known kantorovich optimal transportation problem. for well-behaved classes of simulation functions, therefore, we would like to explore the possibility of proving approximate simulations by solving optimization problems.



in the future, we want develop a new kind of discounted expanded approximate simulations that combines the features of eas and das. we would also like to develop simulation based proof techniques where the simulation functions are functions of distributions over states and not functions of distributions over execution fragments. finally, we would like to extend the notion approximate implementations to the probabilistic timed i/o automaton framework.



