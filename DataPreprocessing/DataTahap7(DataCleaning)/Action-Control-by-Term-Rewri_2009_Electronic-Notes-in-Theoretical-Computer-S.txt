in this section, we recall some basic notions and notations for term rewriting that we will use in the rest of the paper. we refer the reader to for additional information. a signature f is a finite set of function symbols together with their(fixed) arity.



x denotes a denumerable set of variables x1, x2,..., and t(f, x) denotes the set of terms built up from f and x. terms are identified with finite labeled trees. the symbol at the root of t is denoted by root(t). positions are strings of positive integers. the subterm of t at position p is denoted by t|p and the result of replacing t|p with u at position p in t is denoted by t[u]p.



ualistic satisfaction, the shared group ethos. other forms of group ethos are, of course, possible(e.g., to allow for group competitiveness, altruism, etc); these alternatives are the basis for different e-collective meta-policies that can, nevertheless, be naturally represented in our framework.



example 3.2 consider the following empowerment theories empm1, empm2, empm3, and empm4, for the e-collective members m1, m2, m3 and m4, respectively. the empowerment theories assume that the principle of maximal satisfaction is to be implemented.



in addition to an fnt theory and an emp theory, each agent m in the e-collective will define an aut h theory. an aut h theory is a set of rules for specifying whether m authorizes a client c to perform an action a on a resource r when m is acting in f-mode or c-mode. the specification of the authorization policy may follow any of the standard access control models. for instance, we may specify a role-based authorization policy. we omit the details of the access control model(see for instance for a rewrite-based specification of the rbac model) and just show the general form of the rules:



termination and confluence of term rewriting systems are undecidable properties in general, but there is an extensive body of work aimed at providing decidable sufficient conditions for confluence and termination(see, for example,[20,25,24,3,2,9]). in particular, orthogonal systems are confluent, and systems that define recursive functions using a primitive recursive scheme are terminating. these conditions have been used in to derive sufficient conditions for totality and confluence of access control policies, and the same techniques can be used for action control policies.



