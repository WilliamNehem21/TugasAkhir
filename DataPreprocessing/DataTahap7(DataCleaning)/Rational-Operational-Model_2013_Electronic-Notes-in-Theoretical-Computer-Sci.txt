of regular tree modulo bisimilarity. simple gsos rules differ from ordinary gsos in that the target of a conclusion is either a single operation or a variable, rather than an arbitrary term. moreover, while the number of operations can be infinite, each operation may only depend on finitely many others. most operations used in practice can be specified in simple gsos.



we assume that the reader is familiar with basic notions from category theory, including(initial) algebras and(final) coalgebras for endofunctors. let us now fix notation and briefly mention some examples. we denote by set the category of sets and functions and by jsl the category of join semilattices and their morphisms.



tn lifts to coalg(f). this is proved by induction on n. the base case t 0= id is trivial. for the induction step let an f-coalgebra(s, f) be given and let tn(s, f)=(tns, fn). now define tn+1(s, f)=(tn+1s, fn+1) to be the following(2) that filtered colimits are necessary in definition 4.5 is demonstrated by the usual definition of constants in the stream calculus:[r]= r:. all constants[r] depend on, and therefore the signature can not be decomposed into a coproduct. in the context of simple gsos rules on transition systems, a similar example can



thus by corollary 4.8 the rational fixpoint, i.e., the set of regular languages, is closed under any operations defined by a dfa specification having finite dependency. and by theorem 4.11 the operational model is locally finite. we proceed to show several examples.



