as for the rest of the syntax,[ai]t is an abstraction and f(t1,..., tn) is a termformer applied to some terms. subscripts on t, u, and v are for identification only and have nothing to do with levels. we shall see examples later; for now it suffices



our idea when designing hierarchical nominal rewriting is that it should be able to represent meta-levels and instantiation. we used atoms to represent variable symbols. our first task is therefore to use the framework of rewriting to give some framework by which atoms may be instantiated to terms.



these are axiom-schemes for all i and j and every n, and for every term-former f(if we like). we could avoid having such schemes by enriching the syntax of rewrite rules, but it does not seem worth the trouble here. we always assume at least an axiom(subsub).



we believe that our rewrite system is confluent but proving this is nontrivial even in the two-level case. the problem is(1) above, which is non-directed and makes terms syntactically larger. these problems have been investigated and overcome(see and see the brief discussion in section 7) but investigating them here is outside the scope of this paper.



