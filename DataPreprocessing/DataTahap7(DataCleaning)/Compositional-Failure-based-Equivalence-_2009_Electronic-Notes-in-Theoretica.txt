constraint automata have been introduced as the operational semantics of reo specifications. in this section, after a short review on reo, we present the original definition of constraint automata(as the acceptors of languages of timed data streams, presented in. then we introduce an extended definition of them such that they can be considered as labeled transition systems and each label transition system can be translated into a constraint automaton. also, in this section we introduce two composition operators for our defined constraint automata: join(production) of two constraint automata with respect to their common port names and hiding of a name from all transition labels of a constraint automaton. for more about reo specification language and constraint automata as its semantics model, see[1,3,2,4]



definition 3.2 is the original definition of constraint automaton(presented in). in this paper, we will use a modified definition of constraint automaton(such as it will be defined in definition 3.3). thus, we sometimes will refer to automaton defined in definition 3.2 as traditional constraint automaton.



and hiding a port name from a constraint automaton. in this section, we present our definitions of these two composition operators using the new definition of constraint automaton. these definitions are generalizations of their original counterparts and save all properties proved for them in.



