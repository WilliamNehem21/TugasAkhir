in this paper, we present a formal model of virtual organisations that incorporates the concept of conflicts of interest. the model, which follows an incremental development approach using event-b, focuses on goals and organisations at the abstract level and introduces resources at the concrete level. the model is motivated by the type of virtual organisations used in the domain of scientific experiments. individual organisations, at the abstract level, are allowed to pursue conflicting goals within a virtual organisation. however, at the concrete level, these conflicts are isolated by applying a separation of resources mechanism. this ensures that no resource is allocated to any two conflicting goals.



in order to support rapid formation of vos, it is necessary that the potential partners are ready and prepared to participate in such collaboration. this readiness includes common interoperable infrastructure, common operating rules, and common representation of capabilities, among others. the concept of virtual breeding environment(vbe) has emerged as the necessary context for the creation of vos. a vbe can be defined as an association of organisations adhering to a base long term cooperation agreement and adoption of common operating principles and infrastructure with the main objective of participating in potential vos.



in this paper, we have adopted the view that potential partners in a vo are selected from a vbe. we are interested in goal-oriented vos, so organisations willing to participate in a vo will join the vbe, advertising the goals they can achieve and their resources. we are assuming that this step has been performed previously and concentrate on the management of vos.



the model of vos we present here is motivated by several examples. among these is the management information concerning scientific experiments undertaken using large facilities. in this environment, a scientist from one organisation may be working in collaboration with other organisations on one experiment, whilst his colleagues from the same organisation may be working on another experiment in a different collaboration on the same facility. the facility providers themselves, in particular, are often collaborators in many of the experiments.





event-b is a refinement methodology that is an extension of the b language. the refinement methodology can be used by software architects to incrementally develop a model of a system starting from the initial, most abstract, model sometimes called the specification and following gradually onto further layers of detail until a model with satisfactory detail is reached. if successful, the most detailed model will be the implementation itself.



machines have contexts that they can see. a context has the following elements: a name, a set of carrier sets, a set of constants and a set of axioms. carrier sets are essentially user-defined types and constants must have a particular type(primitive or user-defined). usually, axioms are used to express such constant types and any other truths about the context elements.



the vbe context defines three types: the non-empty type goals, which represents the set of possible goals in some vbe; the non-empty type organisations, which represents the set of vbe organisations willing to participate in potential vos; and finally the type status, which contains the flags sl for the selection phase, op for the operation and dissolution phases and stop, which marks the end of the vo lifecycle(when no further events are possible). the context also defines the set, coi, which denotes the global conflict of interest among goals in the vbe. the definition of coi states that it is a powerset of all two-element sets representing any two goals that are in conflict with each other. it also states that a goal cannot be in conflict with itself.



the vo machine captures essentially three phases of the vo lifecycle: selection, operation and dissolution. the machine defines a number of local variables including the set of goals it is pursuing, a subset of those goals that the vo has completed and the current goal it is working on. the machine also defines a collaboration model variable, collm, which is a relation from one of its uncompleted goals(the current goal) to a set of organisations that will collaborate to achieve that goal. in addition to the current collaboration model, there is also the collaboration history, collh, which is a relation from any completed goal to the organisations that have collaborated in the past to achieve that goal. the machine also defines a status flag, which indicates the next event to be fired.



the selection event: this is the first event that is executed after the initialisation event and in it, an uncompleted goal, agoal, is chosen and nominated as the current goal on which the vo is working along with a suitably typed collaboration model, acollm, which must contain at least one organisation that will work on agoal. the event also selects a suitably typed coi relation, called acoi, which maps every organisation in the range of acollm to a pair whose first element is agoal and the second element is a conflicting goal on which the organisation worked on in the past(in collh). once these conditions are satisfied, selection performs a number of substitutions to update the currentgoal, collm, coi and status variables. the status variable is set to op to indicate that the machine is ready to enter the operation event.



the first implication of the invariant states that if an organisation is collaborating towards some current goal and has in the past collaborated on some conflicting goal, then the conflict of interest relation coi must register this fact. on the other hand, the second implication states that if an organisation has collaborated in the past on two conflicting goals, then that fact will have been captured by the coi relation. this invariant is essentially maintaining information relating to the need for a chinese wall separation between conflicting goals that an organisation is(has been) working on.



by the concept of resources committed by organisations owning them to the cause of achieving the goals of a vo. the main idea driving the concrete model presented in this section is to enforce a separation, within each organisation, among the resources allocated to conflicting goals. hence an organisation wishing to work on conflicting goals must not use the same resource for both goals.



on the other hand, the refined machine introduces two new variables: the allocation model, allocm, and the allocation history, alloch. the former is a relation from the current goal to resources allocated to it and the latter is a relation from completed goals to resources allocated to them in the past. the machine is still composed from the same events representing the vo lifecycle, namely, selection, operation and dissolution.



in the selection event, a local variable, anallocm, represnting an allocation model, is chosen that will achieve the current working goal, agoal, using a nonempty set of resources. this variable is then assigned to allocm. the allocation model variable must sound and complete with respect to the collaboration model variable introduced in the abstract machine. this is ensured by the following two conditions, respectively:



proof. the proof of the invariant relies on showing that substitutions in every event in the concrete machine preserve the invariant. this can be shown using the chinese wall guard for the selection event. in the operation event, the proof is based on showing that the domain of allocm will always be a singleton goal and that no goal is conflicting with itself.



this invariant states that the current goal will never share a resource within an organisation that was allocated in the past to a conflicting goal within the same organisation. this isolation of resources will be based on information recorded by the coi relation in the abstract machine. the invariant demonstrates how the chinese wall policy is refined from the abstract level to the concrete level.



conflicts of interest arise naturally in dynamic coalitions such as virtual organisations. to our knowledge, there is not previous work on analysing conflicts of interest in virtual organisations. recently, bryans et al have modeled formally general aspects of dynamic coalitions paying especial attention to information flow. they use the vienna development method(vdm) to construct a suit of models representing important aspects of coalitions: membership policies, information discovery, and information transfer. however, the conflict-of-interest dimension is not included in their analysis. in, zhou and foley describe a logic-based language that provides a foundation for coalition regulation and security policies. they propose a formal framework for regulating the establishment of dynamic coalitions in which coalitions are formed with the involvement of founders, constructors and oversight, and do not rely on the traditional notion of a super-administrator; their emphasis is on coalition delegation.





