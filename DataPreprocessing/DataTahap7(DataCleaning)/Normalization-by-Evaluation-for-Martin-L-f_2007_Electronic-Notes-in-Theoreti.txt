we are grateful to thierry coquand for many discussions and much insight into normalization for type theory in general and feedback on normalization by evaluation in particular. for example, he pointed out to us that it is more elegant to write the algorithm for lambda terms a la curry than for the lambda terms a la church that we used in a preliminary version. we also thank the anonymous referees for detailed comments on draft versions of this article.



the discrepancy between the mathematical treatment and the haskell program could be overcome by adding strictness annotations in the datatypes tm and d. in this way we could model the construction of d exactly. however, as we have argued, the haskell program works correctly without these annotations. alternatively, one could switch to a strict language like ml to get a one-to-one correspondence with the mathematical development.



