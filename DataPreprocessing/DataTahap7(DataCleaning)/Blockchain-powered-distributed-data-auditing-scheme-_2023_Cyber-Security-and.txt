blockchain provides a possible direction for data integrity auditing for cloud-edge healthcare system. each hospital server can become a blockchain node to join the consensus and maintain a distributed ledger for data integrity auditing. intuitively, cloud-edge computing is a prominent architecture for a data-shared healthcare system, and blockchain is a technology to support tamper-proofing and anti-collusion.



the rest of this paper is organized as follows. the related work is discussed in section 2. the proposed scheme is given in section 3 specifically. the results of experiments and the performance evaluation of the proposed scheme are shown in section 4. finally, section 5 summarizes this paper and points out our future plan.



propose a new data dynamic update integrity verification scheme based on merkel hash tree(mht). this scheme supports public auditing and reduces some overhead, but cannot resist replacement attacks. mao et al. improve mht and propose a position-aware merkle tree(pmt), with position information in each node to resist replacement attacks. rao et al. design a dynamic audit scheme based on batch authentication mht to solve the anti-collusion problem. bowers et al.



users participate in transactions after being authenticated by the authorized party, preventing malicious users from abusing privacy attributes, and can track malicious users. gao et al. propose a cloud data audit scheme that supports data deduplication to achieve low-entropy security. malicious clouds cannot forge validators to pass audits, and users do not need to interact with third-party auditors. xu et al. propose a public cloud auditing scheme that periodically updates the audit authorization code to prevent malicious clouds from tampering with file keys.



the merkle tree. two blockchain-based data integrity verification frameworks in and adopt a similar way based on the merkle tree and sampling. the success rate of verification cannot be guaranteed. to this end, we design novel scheme to improve the success rate.



the proposed system framework has three roles: users, hospital server, and cloud server. users, such as doctors and patients, can be trusted. they upload their data to the nearest hospital servers and request the service of data integrity verification. hospital servers cannot be trusted. they save the data for the users, conduct the process of data integrity verification, and attend to the blockchain consensus. the malicious edge servers try to hide the fact of losing data. the cloud server is semi-trust. it is only responsible for setting the initial system parameters and generating the genesis block. besides being distributed without a trusted third party, blockchain can also endue the advantages of tamper-proofing and anti-collusion.



phase 1: hospital servers and the cloud server generate their public keys and private keys. then they hash their public keys as their addresses and broadcast the public keys and addresses to the other servers. once the cloud server receives all the public keys of hospital servers, it will assign an order to the hospital servers and generate the first block of the blockchain, in other words, the genesis block. the genesis block includes the timestamp, edge servers order, addresses, and public keys. then the cloud server sends the genesis block to all hospital servers.



phase 2: the user(doctor or patient) first generates the public and private keys and hash the public key as his address. then the user processes the data for the verification information. after that, the user uploads the data to the nearest hospital server and sends the verification information to the blockchain. after consensus, the verification information is stored on the blockchain between all the edge servers.



in this stage, the cloud server has to determine the initialization, including the hash functions, the pseudo random function, the number of data blocks, the blockchain nodes, and the block structure. proposed scheme has three block structures: genesis block, data upload block, and data verification block. the genesis block is used for storing the public keys of blockchain nodes. the data upload block is for recording the data verification message. the data verification block is for aggregating the verification results generated by the blockchain nodes.



in proposed scheme, the malicious nodes try to forge identities to attend the data verification. however, all the true identities are bound with their public key and saved on the blockchain. the malicious node cannot tamper with the information saved on the blockchain. therefore, proposed scheme is resistant to the sybil attack.



in proposed scheme, the adversaries can hide the fact of data loss or modification. in the experimental part, we show that the verification rate is near 100%, even a part of the malicious node exists. so, proposed scheme is resistant to the collusion attack.



