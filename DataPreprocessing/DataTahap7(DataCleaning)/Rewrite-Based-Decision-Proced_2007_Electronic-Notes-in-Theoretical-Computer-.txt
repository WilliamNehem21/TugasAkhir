show that the inference system is modular with respect to termination. such a modularity result was obtained in by introducing the notion of variable-inactivity: if the combined theories are variable-inactive, a strategy based on sp terminates on their combination, provided it terminates on each individual theory. as far as efficiency is concerned, contrary to the common expectation that a generic theoremprover would be outperformed by more specialized systems such as cvc([6,15]) or cvc lite(), the experimental results of showed that this is not the case, and that such procedures are very efficient on several problems.



the next step is to investigate how to generalize the rewrite-based approach to t-decision problems, or deciding t-satisfiability of quantifier-free formulae. of course, a t-satisfiability procedure could be applied after reduction to disjunctive normal form, but this approach is not practical. another method would be to investigate how to integrate rewrite-based t-satisfiability procedures with a sat solver, as done for example in[7,10,2,12,5] for t-satisfiability procedures based on congruence closure. here, we choose instead to study the problem of whether rewrite-based theorem-proving strategies can be themselves t-decision procedures.



definition 2.3 a literal is strictly flat if its depth is 0. for a clause c, let maxd(c)= max{depth(t)| t is a term appearing in c}. the clause c is flat, respectively, strictly flat, if all its literals are.



definition 3.2(ordered flatness) a clause c is ordered flat if it only contains strictly flat literals except for one, say l da r. furthermore, it must be r< l, and r must contain only function symbols appearing in l.



definition 3.6(weak flatness) a clause c is weakly flat, if c only contains literals with terms of depth at most 1, and at least one non-ground literal l da r which is not strictly flat. furthermore, if c contains a literal x da t, then t is of depth 0.



maria paola bonacina and mnacho echenim. rewrite-based satisfiability procedures for recursive data structures. in byron cook and roberto sebastiani, editors, proceedings of the fourth workshop on pragmatics of decision procedures in automated reasoning(pdpar), third international joint conference on automated reasoning(ijcar) and fourth federated logic conference(floc), electronic notes in theoretical computer science. elsevier, august 2006. to appear.



