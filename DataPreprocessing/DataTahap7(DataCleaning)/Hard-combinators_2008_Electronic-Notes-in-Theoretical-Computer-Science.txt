the difference between the principal port and the auxiliary ones is essential since rewriting(or interaction) can be applied only on cuts. in other words, the left member of an interaction rule is composed of two cells connected by their principal ports. interaction consists in relabeling cells and changing the orientation of the principal ports; we shall say that the cell is turning. to sum up, an interaction rule is pictured as follows,



remark 5.3 according to the previous definition, an invariant net is a pair composed of a net and a partition of its free ports and there may be several invariant nets corresponding to a unique net. however, we also say that a net is invariant when such a partition exists.



in the uniform subsystem, we have defined constants, pipes, duplication and plus. so one may wonder if it is possible to define product as well in this subsystem. the answer is probably negative. indeed, the plus operation(binary xor) is weaker than binary addition that is computing the sum and but also the carry. moreover, one can prove that is impossible to build a uniform system that is universal.



in the same way, we can define invariant nets with several inputs and outputs for vectorial boolean functions on several inputs. eventually, those invariant nets can be used to build the corresponding functions on binary words. to that purpose, the nets spit and merge can be composed to build some kind of parallel/serial adaptators.



the system we propose seems to be a good candidate for a universal hard system. however this work is a first step in the domain of hard interaction nets. indeed many questions related to fundaments as well as applications remain still open.



