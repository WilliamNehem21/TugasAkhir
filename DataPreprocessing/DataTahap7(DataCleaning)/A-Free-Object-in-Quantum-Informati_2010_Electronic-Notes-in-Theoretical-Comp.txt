we consider three examples of affine monoids. the first stems from information theory and provides a natural model of image distortion, as well as a higher-dimensional analogue of a binary symmetric channel. the second, from physics, describes the process of teleporting quantum information with a given entangled state. the third is purely a mathematical construction, the free affine monoid over the klein four group. we prove that all three of these objects are isomorphic.



an image becomes distorted when environmental noise flips some of the bits in a pixel. this has the effect of altering the original intensity of a pixel. for instance, if all the bits in a white pixel are flipped, the pixel would become black, causing the image to appear dark in a place where it should be light. to model the distortion of an image, we will use a channel whose input is a pixel and whose output is a pixel that in general has been degraded in some manner.



and since the flip operations on two bits form a copy of the klein four group, prop 4.2 gives that(i) is isomorphic to(iii). in the proof of theorem 4.3 from, it is proven that the convex closure of has the same property. but since this convex closure is the set of diagonal qubit channels, prop. 4.2 and theorem 3.4 give that(ii) is also isomorphic to(iii). since both(i) and(ii) are free affine monoids over the klein four group, the uniqueness of free objects implies that they must be isomorphic! and in fact,



interestingly, the set of single qubit channels contains an infinite number of copies of the finite group a4, the alternating group on four letters, but not one of them has a convex closure that yields the free object over a4: the reason is that there is a copy of a4 in so(3) whose convex closure is not free and that all copies of a4 in so(3) are conjugate. thus, the free affine monoid over a4 has no quantum representation using single qubit channels. whether the free affine monoid over a finite group always has a quantum representation in some higher dimension is an open question.



