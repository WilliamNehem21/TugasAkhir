systems biology exploits different languages and formalisms mainly inherited from mathematics and computer science with the aim of modeling and analyzing complex biological systems in terms of their components and their interactions. a formal modeling and understanding of the underlying laws of life are at the basis of all the scientific research in biology. we just mention here the impact that systems biology could produce on the development of new therapies and drugs.



the huge complexity of biological systems calls for the definition of a range of modeling languages operating at different levels of description(e.g., different space/time scales). however, it is also essential to compare and integrate such languages in a global framework in which information is shared and analyzed from many perspectives.



a first idea could be that of introducing a control process in the system and asking the reactants to communicate only with the control process. the control process should acquire information from the reactants and give them back the orders. unfortunately, this makes life very complex, since too many communications and stochastic rates are involved. as a matter of fact in this way both the reactants and the reactions would be active players.



let us focus on the passive reactants. we model them as arguments of messages which are sent and received on a memory channel. in particular, inside a message of the form!mem(react1,...,reactn) the argument reacti represents the number of molecules of the ith reactant inside the system.



the first line is a declaration for a polyadic channel mem. notice that the channel does not have any rate, so we have instantaneous exchanges on it. this agrees with our target, that is to demand the stochastic behavior to the execution phase.



summarizing we can say that from the structural point of view our approach is compact and modular. further, since in our approach we focus more on the chemical reactions, than on the reactants, the complexity of our models should not depend on the reactant quantities. moreover, the kinetic behavior is syntactically(explicitly) declared in the delay rates, which depends also on the reactant concentrations.



in this section we present a set of case studies. some case studies are taken from the spim test suite 3, where they are modeled and studied exploiting the approach described in[16,14,13,6]. here we model them as defined in our approach and we compare the simulation results, always obtained using spim. our last case study, namely the brusselator, is taken from and cannot be modeled with the classical molecule centric approach, since it also involves ternary reactions. it is immediate to model it with our approach.



distribution. the repressilator is a biological system containing three genes, namely a, b, and c. each gene produces a protein, in particular b is produced by a, c by b, and a by c. each gene can also be blocked by its suppressant protein(each gene is suppressed by the protein with the same letter, e.g., a is blocked by a).



our idea is based on the use of passive reactants and active reactions: this choice injects an external point of view inside a typical internal point of view framework, but retains the structure of the language and its available theoretical tools. we got this result by translating chemical reactions in delay transactions, following the chemical meaning of the formers. the pure chemical based models(such as odes) are not usable in the context of formal analysis(e.g., model checking techniques). our approach should allows us to get around this problem.



in the long period our main aim is that of providing a deeper understanding and integration between different formalisms. in particular, we are interested in translations from odes and hybrid automata into processes algebra. in this sense the external point of view seems necessary for the translation of the global constraints(invariant, activations, and resets). a continuos semantics in terms of odes has been provided for biocham(see, e.g.,), while translations from sccp programs into hybrid automata have been considered in.



