as the genetic algorithm(ga), to search for ca able to exhibit a desired computational behavior over their rule space. two of the most studied computational tasks in this context are the synchronization task(st) and the density classification task(dct). these tasks have been historically studied in 1d cellular automata rule spaces, except for some explorations about dct in 2d spaces using moore neighborhood-.



some results and considerations about investigations we performed in both these computational tasks are presented here. we explore st and dct in classical 1d space using radius 2 and radius 3 rules, resulting in rules with 32 and 128 bits respectively. besides, we investigated these tasks in 2d spaces using von neumann and moore neighborhoods, resulting in rules with 32 and 512 bits.



section 2 gives a brief description about two computational problems widely employed in ca studies. section 3 describes the previous usage of evolutionary algorithms to find good ca rules that perform a specific task. section 4 presents a brief historical discussion about experiments involving synchronization task and density classification task in one and two-dimensional ca lattices, including the results and analysis of current experiments. the main conclusions of this work are present in section 5.



st is also nontrivial since a small-radius ca employs only local interactions while synchronous oscillation is a global property. the locality of interaction can directly lead to regions of local synchrony and it is more difficult to design a ca that will guarantee that spatially distant regions are in phase 0. an effective ca rule must transfer information over large space-time distances.



other evolutionary computation techniques were used to find such kind of ca rules. genetic programming was also used as a search procedure for ca rules to perform the density classification task. furthermore, for the same task, an important radius-3 rule was obtained by a coevolutionary approach. it has an efficacy of 86% in performing dct and it remained as the best-known rule for this task until 2008. recently, wolz and de oliveira(2008) have found a large set of 1d radius 3 rules(more than 100 rules) able to perform this task with an efficacy above 88%. they have used a two-tier evolutionary environment and the best rule found in this work is 1461077c0f00cebf1721047f0f333fbf(the rules are presented by their hexadecimal code representing the output bits from neighborhood 0000000 to 1111111). it is the best-known rule for this task and it has an efficacy of 88.99%.



the experiments reported in a genetic search was used to look for radius-3 rules able to perform the synchronization task. several radius-3 1d rules that perform st with an efficacy of 100% were obtained. by other hand, they did not obtain success in ca with radius-2. in this rule space, they only found rules with virtually 0% of efficacy. later on, oliveira and collaborators(2001) had evidenced that a simple ga as the employed in was able to find radius-2 rules with efficacy around 80%. moreover, by introducing a kind of parameter information it was possible to find radius-2 ca rules with more than 90% of efficacy solving st. recently, mariano and oliveira found the best known rule for this task with 96.4% of efficacy: fd9e9042.



in previous works, a simple ga environment was modified to incorporate a heuristic based on some forecast parameters and it was used to find dct and st rules. this approach uses parameter bands where good rules are more likely to occur. once this information is available, it is used in an active way, as an auxiliary metric to guide the processes underlying the ga search. this approach has been previously used to search for ca rules in: 1d dct, 2d dct and 1d st.



since we already knew about the existence of 1d radius 3 rules able to solve this task with 100% of efficacy, formed by 128 bits, the results with moore neighborhood were not surprising, once they have 512 bits. however, in the case of von neumann neighborhood, the rules have exactly the same size of radius 2 1d rules: 32 bits. therefore, the spatial arrangement of the 144 cells has facilitate the communication among cells in a such manner that they were able to solve the problem with a better performance than the linear arrangement of 149 cells used with radius 2 ca rules. this behavior was also observed in dct experiments reported in next section.



wo rule related to the lattice sizes: it performance oscillates between odd and even lattices, being that it efficacy is high in odd-size lattices and significant low in evensize one. the performance of this rule is very similar to what was observed with 32-bits rule 111315ff: both rules oscillate and each one has a better performance when applied in lattices with the same parity in which it has been evolved. the other rule evolved in the even-size lattice(os) exhibits a lower oscillation as the observed for 32-bits rule 040f35bf.



of adaptive fitness evaluation was used. it was established in that the initial lattices used to evaluate the individuals should be generated by a uniform distribution for a better performance of the evolutionary search. however, the best rule found is evaluated in a sample of random lattices generated by a gaussian distribution in the final of each ga run. a strategy that has presented a better performance is starting from the uniform distributed lattices and as the rules becoming better we change to sort a portion of the lattice using gaussian distribution. as better as the rules turned on, as larger as the portion sorted by gaussian distribution. this strategy was previously used in and to find rules with high performance on 1d dct. however, it was not used in to find os rule in the experiments with 2d dct. another kind of adaptive evaluation was also used in but it is not the same used here and in references and as the initial lattices do not start from a totally uniform sample; besides in the lattices started with small sizes and they are smoothly shifted towards larger sizes during the evolution.



evaluation) to use a heuristic related to bwlr-symmetry to guide the evolutionary search. this information was incorporated not in the same way as in as a repairing infeasible solutions procedure. we incorporated it in a similar way to what was done in the parameter-based heuristic described in and. the parameter bwlr-symmetry was the only one used in this heuristic with a desirable range defined as above 0.9. a series of ga runs was executed using this parameter-



in this work, we try to perform a more extensive inquiry over two of the most-studied computational tasks in ca context: synchronization task and density classification task. to do this, we evaluated the two computational tasks applying them to two different neighborhoods in both one-dimensional and two-dimensional cases. using 1d lattices, we analyzed neighborhoods of radius 2 and 3 generating 32-bits and 128-bits rules, respectively. in 2d lattices, it was analyzed von neumann and moore neighborhoods generating rules of 32 bits and 512 bits, respectively.



