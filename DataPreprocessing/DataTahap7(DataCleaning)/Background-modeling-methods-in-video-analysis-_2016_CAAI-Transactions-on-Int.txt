over the past few decades, a large number of background modeling methods have been proposed to identify foreground objects in a video. they generally share the same following scheme[2,12]: they utilize the first frame or previous frames to build a background model, and then compare the current frame with the background model to detect foreground objects, and finally they update the background model. various background modeling methods can be categorized into pixelbased, region-based, and hybrid methods. background modeling methods can also be categorized into parametric and nonparametric methods. one of the most famous pixel-based parametric methods is the gaussian model. wren et al. first proposed modeling the background at each pixel and panahi et al. provided a comparison for various pixel-based background modeling methods. their evaluation compared background modeling methods and described the challenges that background modeling methods need to deal with. cheung et al.[81,82] evaluated six background modeling methods using traffic monitoring videos under different weather conditions. this comparison was only conducted on four grayscale test datasets. parks et al. and brutzer et al.



illumination changes are not only just progressive, but sudden once-off illumination changes also often occur in scenes. for example, a sudden switch of light or sunlight blocked by clouds strongly affect the appearance of the background model. therefore, the ability to quickly adapt to sudden illumination changes is a key to evaluate the background modeling methods.



the gmm algorithm is sensitive to illumination changes. it defines a pixel value within 2.5 standard deviations of a distribution. this threshold can ensure that performance of the algorithm is only slightly perturbed by illumination changes which is extremely useful when different regions have different lighting. in order to minimize the effects of brightness changes, sobs uses the hsv color space and sacon uses a normalized color space. the main reason is that rgb color space is sensitive to changes of illumination. in addition, a long term background model and a short term background model are combined in kde to quickly adapt to changes in the scene to achieve sensitive detection and low false positive rates. codebook uses a color model to perform a separate evaluation of color distortion and brightness distortion. the motivation of this model is that background pixel values lie along the principal axis of the codeword along with the low and high boundaries of brightness, since the variation is mainly due to brightness.



to deal with the dynamic background, gmm and sobs assume that the intensity values of a pixel are modeled by multimodal distributions. in contrast to a single unimodal model, multimodal models usually have high time complexity. vibe and sacon are sample-based methods. they use the difference between new pixels and the sample to discriminate a moving background. sacon uses a selective strategy to update the background model. it can not only efficiently cope with lighting changes but can deal with objects appearing or fading in the background. it can incorporate the moved/ inserted background object into the background model. for example, if a background object is moved to a new place, or a new background object is inserted into the background scene, this method can adaptively add the corresponding pixels of the background object to the background model.



among region-based methods, texture or descriptor-based methods model background changes using descriptors provide reliable information to represent dynamic backgrounds and illumination changes. a discriminative texture called local binary pattern(lbp) was used by heikkila et al. to model backgrounds. zhu et al. proposed a corner-based



the idea that a cast shadow certainly darkens the background while a moving object can darken it or not is used in the sobs algorithm to detect shadows. specifically, in a shadowed area, there is significant illumination variation, but only a small color variation. if a pixel belongs to the background model but has been darkened by a shadow, then it belongs to the shadow cast by an object in the scene. kde and sacon separate color information from lightness information and use the chromaticity coordinates to suppress shadows. however, using the chromaticity coordinates has the disadvantage of losing lightness information which is related to the difference in whiteness, blackness, and grayness between different objects.



vibe and sacon only need to compare the current pixel with a small number of close background samples rather than most of samples in the background model, so they can weaken the effects of noise in the model. two factors explain why vibe has a high resilience to noise. the first factor is that the design of the vibe method allows the pixel model of vibe to be exclusively comprised of observed pixel values. the pixel models of vibe automatically adapt to noise, as they are constructed from noisy pixel values. the use of the pure conservative update scheme in vibe is the other factor. by relying on pixel values exclusively classified as background, the model update scheme of vibe prevents the inclusion of any outlier in the pixel models.



the traditional gmm has several advantages. it does not need to store a set of input data in the running process. gmm uses the mean value and covariance to measure the pixel. this means that each pixel has its own unique threshold without the constraint of a unified global threshold. the multimodality of gmm allows it to deal with multimodal backgrounds caused by waving trees and gradual illumination changes.



a new pixel xt, is checked against the exiting k gaussian distributions, until a match is found. a match is defined as a pixel value within 2.5 standard deviations of a distribution. if none of k distributions match the current pixel value, the least probable distribution is replaced with a distribution with the current value as its mean value, an initially high variance, and low prior weight. the prior weights of the k distributions at time t, ui,t are updated as, example, cars might enter or leave a parking area on a street surveillance application, and the system can detect the foreground. kim et al. also introduced another structure similar to codewords called cache book to avoid detecting false background or foreground pixels because codebook cannot be adapted to changes in the scene.



gmm with just a few gaussians cannot accurately model quickly varying backgrounds. it depends on the learning rate to adapt to background changes, and thus for a low learning rate, it is difficult to detect a sudden change in the background. for a high learning rate, slowly moving object will be absorbed into the background. to solve these problems, kde was exploited. it can quickly adapt to changes in the background and detect the foreground with high sensitivity. however, kde cannot be used when long-time periods are needed to sufficiently sample the background.



the codebook algorithm was intended to sample values over a long time, but there are no parametric assumptions. it can capture background motion over a long period of time under limited memory which allows it to encode dynamic backgrounds. in addition, it can efficiently cope with local and global illumination changes. in contrast to gmm, it properly deals with moving foreground objects in the scene during the initial training period. however, there are some problems that codebook cannot cope with. for example, if the color of foreground pixels is similar to that of background pixels, it will incorrectly segment the foreground. though it can tune data points that are within error tolerance tr of a mode and tn is influenced by sample size n. if n is large, tn should also be large. thus, tn can be effectively set to ttrn where t is a constant and is empirically determined.



xi m i 1,..., n, n< t, where xt(m) is an observation of a pixel m at time t. each observation xt m xc1 m,..., xck m has k channels. for each sample in the cache, the sample



when the value of tom at a pixel is larger than threshold ttm, then the pixel is classified as a background pixel. once the value of the pixel is assigned to the background, the value of tom will be set to zero. in fact, tom is used to record how many frames a pixel has been continuously classified as a foreground pixel.



the algorithm utilizes the first frame of the video to initialize the background model based on an assumption the same as, i.e. neighboring pixels share a similar temporal distribution. the authors used t 0 to index the first frame and ng(x) is a spatial neighborhood of pixel location x, therefore which prevents its background pixel model from being updated. to address this problem, vibe uses the spatial consistency via a background sample propagation scheme. according to this scheme, when a pixel has been updated, the algorithm uses this value v(x) to update the neighborhood pixel samples in m( y2nc(x)).



hofmann et al. combined vibe with sacon to create a novel pixel-based adaptive segmenter(pbas) method for foreground segmentation. the pbas method uses a history of n image values as the background model and uses a random update rule similar to vibe. in contrast to vibe, pbas does not treat parameter values as fixed parameters, but instead as adaptive state variables, which can dynamically change over time for each pixel.



we evaluated the performance of background modeling methods at the pixel-level. thus, we considered foreground detection as binary classification of each pixel. the correctness of this classification is expressed by the framework of the cdnet 2014 challenges. the framework implements the following seven different measure metrics: recall, specificity, false positive rate(fpr), false negative rate(fnr), percentage of wrong classification(pwc), precision, and f-measure. let tp denote the number of true positives and tn denote the



if positive is regarded as foreground and negative is regarded as background, then tp gives the number of correctly detected foreground pixels, and tn gives the number of correctly identified background pixels. in contrast, fn is the number of pixels that are falsely marked as background whereas fp is the number of pixels that are falsely detected as foreground. the method can trivially optimize one of them by ignoring the other one with precision and recall conflict to each other. in section 5, the values of the seven measure metrics are given in details.



gmm. the programs of vibe and pbas methods were provided by the authors of vibe and pbas. we used the best parameters of two methods suggested by the authors. for the kde method, we used the implementation available in the bgslibrary. we adjusted the parameters by the suggestion in the bgslibrary. because the codes of sacon, sobs, and codebook methods are not available, we finished the code by ourselves, and selected the optimal parameters following the paper of the authors.



we evaluated the eight state-of-the-art background modeling methods discussed in section 3. we tested these different background modeling methods and did not use any pre-processing and post-processing schemes. we also present the amount of memory as well as the computational time used by each method.



than 20%. in addition, the fnr scores of agmm and pbas are also greater than 60%. hence, in order to strengthen the results of detection, the background model needs to be able to quickly respond after the camera rotates or zooms.



the work reported in this paper is partly supported by nsfc under grants nos. 61370163, as well as the shenzhen municipal science and technology innovation council under grant no. jcyj20140904154630436. thanks to dr. edward c. mignot, shandong university for linguistic advive.



