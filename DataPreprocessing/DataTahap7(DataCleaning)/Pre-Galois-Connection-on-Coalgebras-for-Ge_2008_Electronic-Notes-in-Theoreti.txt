the technique of galois connections has been applied successfully in many areas of computer science. by employing coalgebras as models for software components, we claim that different forms of behavior model and types of state transitions for components are instances of a single form of coalgebra in a kleisli category. based on the kleisli category, the results on forward/backward morphisms and refinement of components in set are still satisfied in this more generic framework. we propose a notion of pre-galois connection in the context of coalgebras for refinement of state-based software components which takes into consideration not only the refinement ordering but also the dynamics of the components, and we study its properties in the kleisli category. this notion is a powerful tool for relating a component to its refinement and for relating a component to its abstraction. thus it provides a basis for reasoning about state-based software designs and reverse engineering.



in the past decade or so, the notion of component based software development emerged as a promising paradigm to deal with the ever increasing complexity in software design, evolution and reuse. a component is a modular, deployable, and replaceable part of a system that encapsulates implementation and exposes a public interface. in component based software development, a component must be specified and then implemented before it can be analyzed and used. the development step from specification to implementation is called refinement.



in terms of future work, what we would like to do in the next step is to apply pre-galois connection to some refinement examples. another challange to this work is to go deeper into the concept itself. for example, one issue we intend to study is to establish the theorems that predict the existence of the adjoints in a pregalois connection, another interesting problem is the completeness of pre-galois connections for refinement, i.e., if we can build a pre-galois connection for every refinement relation.



