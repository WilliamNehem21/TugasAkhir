typically much larger than the formula being monitored we also show that the algorithm has better bounds for certain sublogics of mtl, including ltl. in fact, the bounds for past and future time ltl match the previously best known monitoring algorithms for these logics[11,12]. finally, we derive lower bounds for monitoring mtl and its sublogics, which show that our algorithm is close to optimal.



java pathexplorer(jpax) is a nasa runtime verification system providing monitoring algorithms for past and future time ltl. mtl non-trivially generalizes ltl, and the motivation for generalizing the ltl monitoring algorithms to mtl is clearone would often like to monitor not only qualitative specifications such as those that can be expressed in ltl, but also quantitative specifications that refer to timing constriants. the algorithms we present, when used on ltl specifications, are as efficient or more efficient than the corresponding specialized algorithms in jpax.



eagle is a fix-point based logic formalism designed around and for jpax, combining temporal aspects and data, thus allowing one to define temporal operators and support time. it is shown that eagle is capable of defining and implementing several finite trace monitoring logics including the metric temporal logic. in a recent and independent work, upper bounds of o(m22m log m) for space complexity and o(m422mlog2m) for time complexity have been shown for eagle when specialized to future and past time ltl. these are comparable to the bounds we establish for our mtl monitoring algorithm when specialized to ltl.



