from the foundry. the design measures two main components: the efficiency of a new elastic protocol applied to a network fabric, and the overheads of synchronizing into a clocked domain using a gals protocol. the new network fabric shows near 100% link utilization can be achieved, and that real time constraints can be achieved even under full network saturation. a comparison between three synchronization interfaces shows that asynchronous interface logic can be nearly as efficient as a fully synchronous system, and that clocked synchronization protocols can show substantial overhead.



elastic systems are just like clocked systems in that they consist of a collection of modules and channels. however, the elastic communication channels have two control wires, valid and stall that implement a handshake between the sender and receiver. the data and valid signals propagate down the pipeline, and stall propagates backwards up the pipeline. we have chosen a protocol similar to the synchronous elastic flow(self) channel protocol.



2) a clocked synchronizer and synchronous handshake protocol with synchronous buffering, and 3) a novel fast synchronizer with asynchronous buffering. we have built all of the buffers as simple linear flow-through fifos, where the interfaces contain four data words of buffering. the fully synchronous interface has no need for buffers so they are not included.



the network fabric in this work uses design targets that differ significantly from other network on chip(noc) designs, including: a) a non-redundant network topology. b) no multi-word packetseach transmission is a single data word containing all necessary routing information. c) simple high throughput network routers and buffers. d) both clocked and fully asynchronous realizations of the noc fabric. this produces a fabric that has ultra low latency, high throughput, and a static worst case latency for all transmissions(assuming sufficient buffering exists in the network interfaces).



two fifo designs are employed, a clocked design and asynchronous design. both designs are simple four-deep linear shift fifos. the asynchronous fifo has a significant advantage since data propagates very quickly from the tail to the head of the fifo, whereas in the simple clocked domain it takes four full clock cycles. the clocked fifo is implemented as four elastic half buffers.



the data words for each communication in the test chip contain a payload that allows us to calculate the network latency. the data word consists of 9 bits containing a 3-bit address, 6-bit time stamp, and valid and stall bits. these small values are due to pin and area limitations on the chip.



the circuit was built using a simple digital university of utah static library. some additional custom cells were designed as part of this project including domino gates for the asynchronous fifos and a mutual exclusion element for the fast synchronizer. the results reported in this section are modelsim simulations of the extracted netlist of the circuit sent to fabrication. the simulations were made using a unit delay model since the custom gates were not characterized for timing.



