anonymity means that the identity of the user performing a certain action is maintained secret. the protocols for ensuring anonymity often use random mechanisms which can be described probabilistically. in this paper we propose a notion of weak probabilistic anonymity, where weak refers to the fact that some amount of probabilistic information may be revealed by the protocol. this information can be used by an observer to infer the likeliness that the action has been performed by a certain user. the aim of this work is to study the degree of anonymity that the protocol can still ensure, despite the leakage of information. we illustrate our ideas by using the example of the dining cryptographers with biased coins. we consider both the cases of nondeterministic and probabilistic users. correspondingly, we propose two notions of weak anonymity and we investigate their respective dependencies on the biased factor of the coins.



be revealed by the protocol. typical causes may be either the presence of attackers which interfere with the normal execution the protocol, or some unavoidable imperfection of the internal mechanisms, or may even be inherent to the way the protocol is designed. in any case, the information leaked by the system can be used by an observer to infer the likeliness that the action has been performed by a certain user. the aim of this work is to study the degree of anonymity that the protocol can still ensure, despite the leakage of information.



we consider a more realistic scenario in which some probabilistic information may be leaked by the system. in particular, we consider the case in which this happens due to imperfections in its internal mechanisms. in the case of the dcp, this means to relax the hypothesis of perfect fairness of the coins. it is worth noting that even if an observer does not know a priori whether and how much the coins in the dcp are biased, he may be able to infer it statistically by running the protocol several times. one of the main purposes of this work is to investigate how the biased factor of the coins influences the level of anonymity that the system can still achieve.



in anonymity protocols, depending on the circumstances, the users may be either probabilistic or nondeterministic. typically the latter applies in dynamic scenarios, when the users change all the time. in the nondeterministic case, the probabilistic aspect of anonymity can only be relative to the probability of the observables, which derives solely from the randomness of the internal mechanisms of the protocol. the natural notion of anonymity is then that the probability of the observables does not give information about the user.



in next section we recall some notions which are used in the rest of the paper: the probabilistic automata, the dining cryptographers problem, and the framework for anonymity developed in. in section 3 we propose a notion of weak anonymity for nondeterministic users, and we study the dependency on the biased factor of the coins for the dcp. in section 4 we do the same for the case of probabilistic users. in section 5 we code in prism the dcp and the notions of anonymity. finally, in section 6 we conclude and discuss some related work.



in this paper we consider systems that can perform both probabilistic and nondeterministic choices. intuitively, a probabilistic choice represents a set of alternative transitions, each of them associated to a certain probability of being selected. the sum of all probabilities on the alternatives of the choice must be 1, i.e. they form a probability distribution. nondeterministic choice is also a set of alternatives, but we have no information on how likely one alternative is selected.



there have been many models proposed in literature that combine both nondeterministic and probabilistic choice. one of the most general is the formalism of probabilistic automata proposed in. we give here a brief and informal description of it.



in this paper, we use only a simplified kind of automaton, in which from each node we have either a probabilistic choice or a nondeterministic choice(more precisely, either one step or a set of singleton steps), like in(b). this is not a real restriction since it subsumes the so-called alternated model, in which probabilistic and nondeterministic choices alternate, and which is known to have the same expressive power as the full probabilistic automata. in the particular case that the choices are all probabilistic, like in(c), the automaton is called fully probabilistic.



the general dining cryptographers problem is described as follows: a number of cryptographers, situated in the nodes of a given connected graph, are having a dinner. the representative of their organization(master) may or may not pay the bill of the dinner. if he does not, then he will select exactly one cryptographer and order him to pay the bill. the master will tell secretly each cryptographer whether he has to pay or not. the cryptographers would like to reveal whether the bill is paid by the master or by one of them, but, in the latter case, they wish to keep anonymous the identity of the payer.



let us consider the dcp on a linear graph consisting of three nodes, i.e. three cryptographers crypt 0, crypt 1, and crypt 2, and two edges, coin 0 between crypt 0 and crypt 1, and coin1, between crypt 1 and crypt 2.



where b0b1b2 refers to the outputs of crypt 0, crypt 1 and crypt 2, respectively. for instance, if crypt 1 is the payer, then o1 is obtained when both the two coins give 1, o2 is obtained when coin0 gives 1 and coin 1 gives 0, etc. in case the master pays, then the possible observables are o5= 110, o6= 101, o7= 011, o8= 000. for instance, o5= 110 is obtained when coin 0 gives 1 and coin1 gives 0.



dcp is synonymous of nondeterministic users). in general in a system there is also the nondeterminism caused by the different possible interleaving of the various components of the system, but here, for simplicity, we will assume that the order in which the various components of the system(master, cryptographers, coins) execute their operations is fixed. in any case, it can be shown that this latter form of nondeterminism would not affect the properties of the dcp with respect to anonymity.



in the following, we consider the case n= 3. we use the variables crypt0, crypt1, crypt2 to record the values computed by each cryptographer, that are either 0 or 1 and depend on whether the cryptographer is paying and on the sides of the coins the cryptographer can see. initially, their values are 0. in the model, there are two coins coin0 and coin1. the first is shared shared by cryptographers 0 and 1, the second is shared by cryptographers 1 and 2. we use 0 for head, and 1 for tail.



once toss becomes true, the coins start to flip. with probabilities beta0 and beta1, the side of the coins will be head. with probabilities 1-beta0 and 1-beta1, the side of the coins will be tail. each time when a coin is flipped, the value of s coin is increased by one.



after all the coins have been flipped(s coin=n-1), the cryptographers calculate the value of their variable crypt0, crypt1 and crypt2. once a cryptographer has terminated this calculation, the value of s crypt is increased by 1. since the cryptographers 0 and 2 sit at the two ends of the line, they can only observe one coin: cryptographer 0 sees coin 0, and cryptographer 2 sees coin 1. if cryptographer 0 is the payer, he will set the variable crypt0 to 1 if he sees the head of coin 0, and to 0 otherwise. if cryptographer 0 is not the payer, he will set crypt0 to 0 if he sees the head of coin 0, and to 1 otherwise. the code for cryptographer 2 is similar: just rename crypt0 into crypt2, coin0 into coin1, and s crypt=0 into s crypt=2.



the behavior of cryptographer 1 is slightly different, since he can observe two coins. if he is the payer, he will set the variable crypt1 to 1 if the two coins have the same side, and to 0 otherwise. if he is not the payer, he will set crypt1 to 0 if the two coins have the same side, and to 1 otherwise.



in the dcp, an external observer can see the values of the variables crypt0, crypt2 and crypt2. furthermore, the values of the variables in the prism model define the states of the system. for example, the following predicate represents the final states in which all cryptographers output 1. we denote it by o1.



we propose two notions of weak probabilistic anonymity, for the cases of nondeterministic and probabilistic users, respectively. we have applied these two notions to the dcp with biased coins, and we have described the functional dependency of the weakness level on the biased factor of the coins. furthermore we have coded in prism the dcp and the formulas that express weak anonymity.



to our knowledge, the first notion of probabilistic anonymity was proposed(although not with an explicit definition) in. that notion corresponds to one of the notions of strong anonymity for probabilistic users investigated in, and more precisely, to the one recalled in definition 2.4. this is the notion for which we have given the weak version in definition 4.2.



in reiter and robin have proposed an hierarchy of notions of probabilistic anonymity in the context of crowds. we recall that crowds is a system aimed at protecting the identity of users when sending(originating) messages. this is achieved by forwarding the message to another user selected randomly, which in turn forward the message, and so on, until the message reaches its destination. part of the users may be corrupted(attackers), and one of the main purposes of the protocol is to protect the identity of the originator of the message from those attackers.



