in view of its pervasiveness in exact sciences, set theory deserves sustained efforts that bring to light richer and richer decidable fragments of it, general inference rules for reasoning in it[36,2], effective proof strategies based on its domain-knowledge, and so forth. while this specialized area of automated reasoning progresses and attains autonomous results and a larger horizon(cf.), many experiments with set-theories have been carried out by means of standard theorem-proving systems. still today such experiments pose considerable stress on state-of-the-art theorem provers, or demand the user to give much guidance to proof assistants; theytherefore constitute ideal benchmarks. even for those who are striving to develop something entirely ad hoc in the challenging arena of set-theories, it is important to assess what can today be achieved by unspecialized proof methods and where the context-specific bottlenecks of set theorypreciselyreside.



the experimentation activity reported in was carried out by relying completely on the autonomous mode supplied by otter, and by always adopting the default settings. the explicit tuning of parameters and flags was avoided in order to obtain a higher independence of the approach from the specific theorem-prover. since the syntactic complexity of the theorems tackled in was quite low, this approach represented a viable choice.



next come the laws on map inclusion and left-absoluteness. this extension of the signature can be considered as preparatoryfor the studyon totalityand functionalityof maps. in turn, the laws on totalityand functionalitywill play a crucial role in proving the set-theoretical theses we will report on in later sections.



there are also cases of laws whose proofs become easier if some additional lemmas are given in input(cf., for instance, u3 or labs1). this is a motivation for our choice of splitting in several groups the laws regarding a particular map construct.



the next task consists in obtaining the proof of a general law for deriving the totalityof expressions of the form total(f( r)). this law will give us the capabilityof defining a number of set-constructs(cf.[11, sec. 5]). let us start with two useful lemmas.



