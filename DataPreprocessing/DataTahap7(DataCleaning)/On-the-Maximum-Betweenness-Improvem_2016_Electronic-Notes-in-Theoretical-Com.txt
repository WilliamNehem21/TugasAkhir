the betweenness is a well-known measure of centrality of a node in a network. we consider the problem of determining how much a node can increase its betweenness centrality by creating a limited amount of new edges incident to it. if the graph is directed, this problem does not admit a polynomial-time approximation scheme(unless p= np) and a simple greedy approximation algorithm guarantees an almost tight approximation ratio.



in this paper we focus on the undirected graph case: we show that also in this case the problem does not admit a polynomial-time approximation scheme(unless p= np). moreover, we show that, differently from the directed case, the greedy algorithm can have an unbounded approximation ratio. in order to test the practical performance of the greedy algorithm, we experimentally measured its efficiency in term of ranking improvement, comparing it with another algorithm that simply adds edges to the nodes that have highest betweenness. our experiments show that the greedy algorithm adds only few edges in order to increase the betweenness of a node and to reach the top positions in the ranking. moreover, the greedy algorithm outperforms the second approach.



over all the possible shortest paths between all pairs of nodes different from v. having high betweenness centrality can have positive impact on the node itself. let us consider a network where there are messages passing along the edges by using shortest paths(e.g. information is a social network or packets in the internet). then, the number of messages passing through a given node v is, to some extent, proportional to the number of shortest paths passing through v. hence, a node with high betweenness has an high probability of receiving an high number of messages and hence it is central.



the problem of increasing the centrality of a node in a network has been studied for several centrality measures different from betweenness, i.e. page-rank[4,20], eccentricity, stress and some measures related to the number of paths passing through a given node, closeness, and average distance.



in the next section we formally define the problem and give the notation used in the paper. in section 3 we give the hardness of approximation result. in section 4, we describe the two algorithms and show that their approximation ratio can be arbitrarily small. in section 5 we present our experimental study. section 6 concludes the paper and outlines some research directions.



the above rule increases the value of bv(s). in fact, all the shortest paths passing through v in the original solution still passes through v also in the obtained solution. moreover, if condition(2) is satisfied for the obtained solution, then it is satisfied also for the original solution.



v. after adding such edge the new value of bv is 5. in the second iteration the algorithm adds edge{a2, v}, then the value of bv becomes 11. an optimal solution(right), has value bv({{a, v},{c, v}})= 13.



betweenness centrality: the first three columns report the type and size of the graphs. the last four report the minimum number kmin of edges that have to be added in order to let the node reach the first 5 nodes in the final ranking. we distinguish between those added by the greedy algorithm(g) and those added by the topk(t) one.



