modelling and verification of systems such as communication, network and security protocols, which exhibit both probabilistic and non-deterministic behaviour, typically use markov decision processes(mdps). for large, complex systems, abstraction techniques are essential. this paper builds on a promising approach for abstraction of mdps based on stochastic two-player games which provides distinct lower and upper bounds for minimum and maximum probabilistic reachability properties. existing implementations work at the model level, limiting their scalability. in this paper, we develop language-level abstraction techniques that build game-based abstractions of mdps directly from high-level descriptions in the prism modelling language, using predicate abstraction and smt solvers. for efficiency, we develop a compositional framework for abstraction. we have applied our techniques to a range of case studies, successfully verifying models larger than was possible with existing implementations. we are also able to demonstrate the benefits of adopting a compositional approach.



verification of systems that exhibit both non-deterministic and probabilistic behaviour has proved to be very useful in domains such as communication and network protocols, security protocols, and randomised distributed algorithms. markov decision processes(mdps) are a natural model for such systems and several tools, such as prism and liquor, implement efficient solution methods for these models. as in the field of non-probabilistic model checking, however, the state space explosion problem tends to limit the scalability of these approaches and techniques to counter this are an important area of research.



to separate the non-determinism that is introduced by the abstraction from the non-determinism present in the original mdp. this results in abstract models that provide distinct upper and lower bounds on minimum and maximum reachability probabilities. this is in contrast to alternative abstraction methods, where only an upper bound on the maximum probability and a lower bound on the minimum probability can be extracted. besides being a more informative abstraction, these bounds also provide a measure of the quality of the abstraction. this information is potentially very useful when considering refinement.



a limitation of the existing implementation in is that abstractions are performed at the model level, i.e. the full concrete model(mdp) is constructed and then reduced to the corresponding stochastic game. in this paper, we develop techniques to construct the abstraction directly from a high-level description of the mdp(in this case the modelling language of prism) using predicate abstraction[12,1,5], which has been very successful in the non-probabilistic setting.



predicate abstraction for prism models was recently considered in, but using the abstraction technique of which represents abstractions as mdps. applying predicate abstraction to the approach of provides the additional benefits of the game-based approach but proves to be more involved. this is because the game-based abstraction preserves additional information which is non-trivial to extract from language-level descriptions of prism models.



the techniques introduced in this paper are for markov decision processes(mdps). however, in order to adopt a compositional approach, we use a variant called controlled markov decision processes which represent components of an mdp. these are similar to the probabilistic modules of.



we now describe the parallel composition of acmdps. as for cmdps, acmdps can only be combined when they agree on the total set of variables and their control variables are disjoint. we call such acmdps composable. let ai=



suppose we wish to abstract a prism model. one possibility is to(compositionally or non-compositionally) apply the abstraction method of section 3 to its cmdp semantics. in either case, the disadvantage of such a method is that the concrete cmdps have to be constructed, limiting the applicability of the approach. in this section we define a language-level abstraction method to remedy the situation.



in definition 4.4 each abstract command is induced by a concrete valuation and the concrete commands enabled for this valuation. however, considering each concrete valuation individually is clearly inefficient. our implementation therefore employs an approach which detects multiple valuations inducing identical commands.



practical approaches for abstracting mdps are presented in[6,18], the former using mdps themselves as abstract models and the latter using stochastic two-player games. in the tool rapture is presented which performs successive abstractions and refinements for checking bounds on reachability probabilities. in, a prototype implementation is used to construct abstract models from the corresponding mdps and partition of the state space and compute upper and lower bounds on reachability probabilities.



we provide conditions which guarantee a precise abstraction. we have developed an implementation of our techniques based on the smt solver yices and present experimental results from a range of case studies, illustrating how our work can generate game-based abstractions for larger models than was previously possible. we also highlight the benefits of adopting a compositional approach.



in the future, we hope to improve the performance of our tool chain using symbolic decision procedures. we also plan to integrate this with ongoing work to develop an abstraction-refinement loop for mdp verification. finally, we also intend to extend the current method to imperative programming languages.



