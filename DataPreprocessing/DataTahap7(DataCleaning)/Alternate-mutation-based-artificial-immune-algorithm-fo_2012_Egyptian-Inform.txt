one of the versions of fctp is the step fixed-charge transportation problem(sfctp) where the fixed cost is incurred for every route that is used in the solution. in sfctp, the fixed cost is proportional to the amount shipped. this cost structure causes the value of the objective function to behave like a step function. considerable work has been done in solving fctp, such as, lagrangian relaxation method, heuristic approach, genetic algorithm, more-for-less algorithm, branching method, adaptive genetic algorithm spanning tree-based



section 3 reviews the previous methods for solving sfctps. in section 4, the main architecture of the proposed mai algorithm and the proposed mutation functions are described, and in section 5 parametric analysis for the proposed mutation functions(mfs) is carried out. numerical experiments with proposed mai algorithm are presented in section 6. finally, the conclusion and future work are reported in section 7.



solutions as antibodies. the candidate antibodies evolve according to the matching degree between antibodies and antigen that is fitness. the better the matching between them, is the less the mutation degree of candidate antibody. due to ais self organizing and learning capability, the ais has been widely used in many real world complex applications such as job shop scheduling problems[18,19], multi-objective programming problems, a hybrid particle swarm method with artificial immune learning for solving the fctp, a novel artificial immune algorithm for solving fctps, solv-



a set of mutation functions in order to improve the quality of the solution. therefore a set of mutation functions is suggested and tested using forty different problems with different dimensions. in addition to that two problems with different sizes are solved to evaluate the performance of the mai algorithm and to compare its performance with the recent five methods.



tation problem found from converting sfctp kowalski and lev have proposed a heuristic technique for improving such solution. but such heuristic algorithm can be used for solving only small sfctps. this paper introduces an alternate mutation based artificial immune(mai) algorithm for solving sfctps. further a comparison of the performance and quality of the proposed algorithm is undertaken with the earlier proposed methods bal, kow, alt1, alt2 and alt3.



the proposed shipping procedure is used to allocate the transported units xij based on the orders(s and d) resulting from the decoding procedure. in other words, this procedure finds a feasible solution for sfctp based on the outputs of the decoding procedure. this procedure guarantees the validity of both the first and the second constraints, denoted by(2) and(3) respectively. also, this procedure can be used to solve both balanced and unbalanced transportation problems without introducing a dummy supplier or a dummy customer. the pseudo code for the shipping procedure is as follows:



as mentioned above each antibody is decoded and the result is used as an input for shipping procedure. the solution resulted from shipping procedure is evaluated using objective function z, as denoted in(1). the value of objective function is assigned to the antibody as its fitness.



followed by two mfs each based on invswap mf, neibswap. the other five mfs proposed are functions of two parameters. the first parameter is the non-uniform factor based on which the number of swaps is determined. the second parameter is the degree of non-uniformity(u). these mfs are designed to



elapsed; less will be the number of swaps. first start with applying random number of two-points-swap till a pre-defined ratio of time is elapsed. after that the two points swap mf is applied for the remaining time. the time is represented by the ratio of current iteration to the total number of iterations.



the ninth mf is based on the time where more is the time elapsed; less will be the number of swaps. first start with applying random number of swap till the time passes a pre-defined ratio. after that the invswap mf is applied for the remaining time.



the 11th mf is based on the time where more is the time elapsed; less will be the number of swaps. first start with applying random number of neibswap mf till a pre-defined ratio of time elapsed. after that the neibswap mf is applied for the remaining time.



the twelfth mf is based on the fitness of the solution. as the sfctp is a minimization problem, the function is designed to be directly related with the normalized fitness(nf) of the solution. that is, solutions with normalized fitness closer to one, i.e. relatively bad solutions, will be subject to more number of swaps. this actually gives the chance for low affinity solutions to mutate more in order to improve their affinities. the ns for this mf is adopted as(13) and the normalized fitness of each antibody is calculated using(14).



the 14th mf is based on both the time and the normalized fitness of the solution. it basically uses the average of these two factors to decide the number of swaps. basically, the mf is designed to be directly related with the fitness but inversely related to the time. the average of time(t) and normalized fitness(tf) is calculated as represented in(16) and the number of swaps for this mutation is adopted as(17).



so that the number of swaps is based on the non-uniform factor, time and fitness respectively, but with some randomization. the random factor r takes values between zero and one. the functions behave almost the same way as the original ones when rand is close to zero. the closer the r to one is; the closer is the number of swaps to the max swaps number. these two mfs allow the search to escape from local optima by occasionally increasing the number of swaps. the numbers of swaps for these mutations are adopted as in(18) and(19), respectively.



the calculations of the affinity af(similarity) between each pair of antibodies are applied to prevent similar solutions with high evaluation from being copied to the next generation and hence dominating the search. the selection of the antibodies from one generation to the next depends on calculation of the affinity among all the antibodies of the current generation. this is technically applied to reduce the chance of a premature convergence to local optima. the technique used to check the similarity between every two antibodies in a population is through counting the number of similar digits in the two solutions. the basic idea is that the more the number of similar variables in the two antibodies is, the higher the similarity between them. based on a specific parameter, the algorithm eliminates those solutions that



due to the important affect of the mutation functions in the performance of the artificial immune algorithm, in this section a calibration of the proposed mai algorithm through discovering the best mf from the implemented 16 functions is presented. because the scale of the objective functions in each problem is different, they could not be compared directly. therefore, the relative percentage deviation(rpd) is used for each combination. rpd is calculated by using(21).



