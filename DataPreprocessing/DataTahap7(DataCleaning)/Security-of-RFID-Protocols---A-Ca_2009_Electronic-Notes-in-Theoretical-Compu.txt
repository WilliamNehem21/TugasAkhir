our paper is structured as follows. in section 2 we explain our terminology and describe the hmnb protocol. in section 3 we exhibit an authentication flaw in hmnb. in section 4 we show an attack on untraceability. in section 5 we show a desynchronization attack and a related untraceability attack, and in section 6 we conclude with a comparison of our attacks to typical attacks on these properties and give an outlook on future work.



in the following, reader refers to the actual rfid reader as well as the database communicating with the reader, since this communication takes place over a secure channel. an agent can be a tag or a reader, while a role refers to the protocol steps a tag or reader is expected to carry out. a run is the execution of a role by an agent.



in this model which are not feasible in a real-world rfid system. additionally, the feasibility of attacks does not only depend on the intruder model, but also on the circumstances under which a system is used. therefore, for each of the attacks presented in the following sections, we explain a scenario in which it can be carried out. when describing an explicit attack scenario, we speak of one or more attackers carrying out the attack. thus the single theoretical adversary embodies one or more real attackers.



the protocol assumes that the reader r and tag t share a secret id, which is updated at the end of a successful protocol execution. for efficiency reasons, the reader also stores the hash of the id in hid and the value of id before the last update in id'. additionally, the tag keeps track of whether its last run ended successfully or not. for this purpose, the variable s is used. thus the protocol is stateful.



we have found the same type of flaw in several other protocols. the protocols in[12,30,31,32] are also challenge-response-based protocols in which the response does not depend on the challenge. therefore, these protocols contain a similar authentication flaw, which has hitherto gone unnoticed and is illustrated in a technical report.



adversary can simply query a tag to obtain h(id). if no trusted reader is present, then there is no communication between tag and reader, thus the reader will not update id. therefore the adversary may use h(id) to impersonate the tag.



the ubiquity and wireless communication capability of rfid tags facilitate and encourage their tracing through space and time. from a privacy perspective this is highly undesirable. intuitively, a protocol provides untraceability if an adversary is not able to recognize a tag he has previously observed. for stateful protocols, such as hmnb, it follows that the adversary should not be able to observe in which state a certain tag is.



the authors of hmnb claim that their protocol provides untraceability, because the tag never sends the same response twice. they provide a formal proof for untraceability using the strong privacy definition of explained above. in the following, we first show that the protocol is not untraceable by providing an algorithm that gives the adversary a non-negligible advantage of guessing the selected tag. we then discuss the flaw in the security analysis of hmnb.



in terms of the privacy experiments, the strategy of the adversary is therefore as follows. in the learning phase, two tags ti and tj are selected and tag ti is put into state s= 1. the adversary can do this by challenging ti and terminating the protocol before sending the third message. the learning phase is formalized by algorithm 1.



in the challenge phase, the adversary performs a man-in-the-middle attack. he obtains a challenge from the reader and sends it to the tag to obtain a response. he then replaces the nonce provided by the tag with a different value and submits the response to the reader. if the reader accepts the response, the tag was in state s= 0, hence the selected tag is tj. if the reader rejects the response, the tag was in state s= 1, hence the selected tag is ti. this phase is formalized by algorithm 2.



desynchronizing a tag from the reader also compromises untraceability of the tag. the adversary can obtain a challenge from the reader and use this challenge to obtain a response from a tag. the adversary can then test the response against the reader, which will reject the response if and only if the response came from a desynchronized tag. therefore, the adversary will always be able to recognize a desynchronized tag.



in this paper, we have investigated the security claims of an rfid protocol, designed to achieve mutual authentication, strong privacy, and desynchronization resistance, while limiting the computational cost for reader and tags. we have presented a flaw in the protocol which led to attacks on tag authentication, tag untraceability, and desynchronization resistance. we have referred to other rfid protocols suffering from the same authentication flaw, but which to our knowledge have not been noticed to be flawed before. these protocols are discussed in a technical report.



we note that the authentication flaw in hmnb could have been found using automated verification tools, e.g.[2,5]. although automated verification of untraceability is still an open problem, the flaws in the untraceability proof of hmnb and several other protocols, recently[9,23,27,28,34,38,42], indicate a need for automated verification of this notion. similarly, the introduction of stateful rfid protocols and the resulting attacks, for instance on[20,34,38,42], call for a formal definition and verification of desynchronization resistance.



