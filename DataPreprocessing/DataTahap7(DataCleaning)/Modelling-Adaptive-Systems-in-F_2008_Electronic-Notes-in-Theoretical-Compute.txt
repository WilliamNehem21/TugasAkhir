3. the core of the paper is section 4. here the concept of adaptive process is introduced and the modelling of adaptive systems is illustrated by two examples. further we give examples for the application of design transformations. finally section 5 concludes the paper and gives also an overview of future work.



forsyde is a transformational system design methodology targeting heterogeneous embedded systems. in forsyde an initial abstract system model is refined by the application of semantic-preserving and non-semantic preserving design transformations into a detailed model that can be mapped to an implementation in hardware or software. this section presents the modelling concepts of forsyde. design transformations are discussed in the context of adaptive systems in section 4.3. a more detailed description of the forsyde methodology, in particular design transformations, is given in.



we start the description of the forsyde model with the general aspects of the modelling elements, in particular signals(section 3.1) and processes(section 3.2). at present forsyde provides a synchronous moc, an untimed moc and a discrete time moc. however, we will only discuss the synchronous moc in section 3.3, since we illustrate our concepts of adaptivity in section 4 with that model. the concepts of adaptivity can be easily applied to other mocs.



6 previous forsyde versions defined the process constructors mapsy and zipwithsy n instead of the process constructor combsy n. only the naming has changed, there has not been a change in the formal definition. mapsy corresponds to combsy 1 and zipwithsy n to combsy n(for n> 1).



supplies current parameters to change the functionality of a system. a typical example is the parameterisation of an analog circuit that executes a transfer function, such as h(s)= 1. here the signal spa is used to adapt the function h(s) by supplying new values for the parameters k1 and k2.



using the classification introduced by mckinley in parameter and mode adaptive processes belong to their category of parameter adaptation, while function and interface adaptive processes belong to compositional adaptation. we could even refine our classification further. especially the class of interface adaptive processes could be divided into several subcategories, since there is a big difference, if only the number of input or output signals is changed, or if there is a change of the model of computation.



7. at the highest level of abstraction we assume adaptation to be instantaneous. thus the change of functionality indicated by a new value of the signal s occurs at the same time instant as the input or output values that trigger the change of the functionality of the adaptive process.



in the forsyde methodology the designer refines a system by the stepwise application of design transformations. the formal concepts developed in forsyde for design transformation can also be used for adaptive systems. forsyde defines not only semantic-preserving transformations, which do not change the semantics of the model, but also non-semantic transformations, which change the meaning of a model. while semantic preserving transformations have the nice property that they are correct-by-construction, they are not sufficient to yield an efficient implementation of a system model. non-semantic preserving transformations are needed to increase the efficiency of the model, e.g. to introduce shared resources or to constrain the size of a buffer. in order to ensure design correctness the forsyde project proposes also a verification method for non-semantic preserving transformations.



since adaptivity adds another dimension of complexity to the design process, design methodologies have to give the designer additional support to ensure the correct of the system during the course of adaptation. we have presented how adaptivity can be treated as first-class citizen in the transformational system design methodology forsyde. a main concept is the adaptive process, which is based on the use of functions as signal values and allows to model different classes of adaptive processes. since adaptivity is fully embedded into the forsyde framework, the formal concepts that have been developed for forsyde can also be used for adaptive systems. especially important is the possibility to define semantic and non-semantic preserving design transformations for adaptive systems.



we have focused our work on systems with a static number of processes. systems where processes are created and deleted dynamically have been so far beyond the scope of our research. future work will analyse the course of adaptation in more detail and develop design transformations for typical patterns in the design of adaptive systems. in order to be able to verify the system during the course of adaptation, a transformation should not only cover the initial and the transformed process network, but also visualise the intermediate steps of a transformation. particularly challenging is the development of transformations for the class of interface adaptive processes, since it is not obvious how to design a correctly working system during complex cases of interface adaptation, like a change of the model of computation.



