over the past few years there has been an increasing amount of interest for resource-sensitive logical systems. the notion of resource is a basic one in many fields, including in computer science. the location, ownership, access to and, indeed, consumption of, resources are central concerns in the design of systems, such as networks, and in the design of programs, which access memory and manipulate data structures like pointers. among so-called resource logics, we can mention linear logic(ll) with its resource consumption interpretation, and bunched implications logic(bi)[15,16] with its straints and resource graphs can be defined in order to capture the interactions between commutative and non-commutative connectives(and thus its phase semantics) in this logic. they give rise to the definition of a connection-based characterization of provability in mnl and a related proof-search method. finally, we aim to extend our results to proof-search and verification in separation logics[12,17] and spatial logics[2,3].



<formula> parameter is written with the following syntax: the additive conjunctive unit is 1; the additive disjunctive unit is 0; the multiplicative unit is i; the additive connectives are:^(and), v(or),->(implication); the multiplicative connectives are*(star),-*(magicwand); the propositional variables are alphabetic characters,(p,q,...), except i, reserved for the multiplicative unit, and v, reserved for the additive disjunction.



generated the resource graph described in section 3. moreover the document provides the explanations of the non-validity of the formula by describing, for each subformula, the worlds for which it is verified or falsified. as one can notice, the proof given in section 3 is recovered.



another point to be studied is the combination of the theorem-proving and model-checking approaches in order to improve the proof-search process for our resource logics. it involves studying how our tools, bill and checkbi, can be mutually used to devise efficient proof and disproof tactics and also how they can be extended to deal, for instance, with pointer logic and with various fragments of separation logics. the relationships between resource graphs and countermodels in new resource semantics will also be more deeply explored.



