the categorical concept of a monad(see e.g.[19, ch. vi]) has found multiple applications in mathematical foundations of programming science, and they have become an important design pattern in languages such as haskell[12, 33] or scala. depending on the context, monads can be viewed as abstract notions of computational effects[26, 34], or as collections to gather computed values, or as structures of values to be computed upon. these perspectives are not mutually exclusive: for example, the(covariant) powerset monad can be seen either as a very simple kind of unstructured collections, or as a carrier of nondeterminism as a computational effect.



(1) preserves preimages and(2) admits what we call a nontrivial idempotent term, then there is no distributive law of t over(both considered as pointed functors). this contrasts with(but does not contradict) some known positive results about the existence of distributive laws. in[13, sec. 4] it is proved that every functor that preserves weak pullbacks admits a distributive law over the monad. by[25, thm. 2.9], every analytic functor has a distributive law over every commutative monad.( is commutative, and although it is not analytic, it is easy to find an analytic functor that satisfies our conditions(1) and(2) above.) finally,[15, lem. 8] shows a very simple distributive law of any monad over the underlying functor of another monad, provided that the two monads are linked by a monad morphism. in all these works, distributive laws of the functor-over-monad or monad-over-functor shape are constructed, whereas we show the lack of distributive laws of pointed



this is essentially the same proof as in[32, prop. 3.2] for the probability distribution monad taken as t, in that the same sets a, u and functions f, g, h are used there. here we distilled assumptions so that the proof covers also the case of t.



is a monad morphism. both our t and tt arise from monoids as in(8), and monad morphisms between such monads correspond to homomorphisms between the corresponding monoids. however, the only monoid homomorphism from z2 to our m is trivial and therefore non-injective. this gives a contradiction, since by



