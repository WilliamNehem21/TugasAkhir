the internet has spawned its own application domain: multithreaded server applications, capable of interacting with hundreds or thousands of clients simultaneously, are becoming increasingly important. examples include ftp(file transfer protocol), e-mail transport, dns(name servers), usenet news, chat servers, distributed file-sharing, and the most popular of all: http servers. http(hypertext transfer protocol[fie99]) is the protocol used to transport web pages over the internet.



asynchronous i/o, posix real-time signals, and kernel event queues. these are all methods of alleviating the aforementioned problems with select(). they are relatively new, non-standard features which are not supported by all operating systems. however, any implementation which uses select() can be converted to use one of these alternatives with relatively little effort.



user-space threads are essentially an implementation of a thread abstraction inside a single process(or possibly on top of a small number of operating system threads; see later). the programmer gets to write his/her application using the concurrency primitives provided by the language, and the userspace threads implementation will provide the low-level time-sharing and i/o multiplexing support. several implementations of user-space posix threads exist for unix.



concurrent haskell(or at least the implementation in ghc) is also an instance of this model; the haskell runtime system runs in a single operating system process and multiplexes many haskell threads. to support multiple haskell threads performing i/o simultaneously, the runtime system may choose between the i/o multiplexing options described in the previous section. however this is implemented, the choice is invisible to the programmer.



the actual generation of the log entries and writing of log entries to the file is done by a separate thread 4. worker threads communicate with the logging subsystem via a global unbounded channel, by calling logaccess. the logging thread removes items from the channel and manufactures log entries which are then written to a log file.



