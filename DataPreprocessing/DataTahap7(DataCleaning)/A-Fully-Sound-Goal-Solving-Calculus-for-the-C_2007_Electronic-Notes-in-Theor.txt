constraints(so-called bridges) supplied by m. under natural correctness assumptions for the projection operations, the cooperative goal solving calculus can be proved fully sound w.r.t. the declarative semantics of cflp(c). as a relevant concrete instance of our proposal, we consider the cooperation between herbrand, real arithmetic and finite domain constraints.



the structure of the paper is as follows: section 2 introduces the basic notions of constraint domains and solvers underlying the cflp scheme. section 3 describes the constructions needed for coordination in our setting, namely coordination domains, bridges and projections. programs, goals, the lazy narrowing calculus for cooperative goal solving(with a typical example), and the full soundness result are described in section 4. section 5 summarizes conclusions and future work.



in this section, we recall the essentials of the cflp(d) scheme, which serves as a logical and semantic framework for lazy constraint functional logic programming(briefly cflp) over a parametrically given constraint domain d. the proper choice of d for modeling the coordination of several constraint domains will be discussed in section 3. as a main novelty w.r.t., the current presentation of cflp(d) includes now an explicit treatment of a milner-like polymorphic type system in the line of previous work in functional logic programming.



the cooperative constrained lazy narrowing calculus cclnc(c) presented in this section generalizes to cooperative goal solving in cflp(c) for any coordination domain c and has been proved fully sound w.r.t. crw l(c) semantics, as shown in subsection 4.4. moreover, projections(as understood in this paper and) can operate over the constraints included in the constraint stores of the current goal, while the propagations used in can only operate over constraints in the c part of the current goal, that are not yet placed in any particular store. due to this difference, projections are computationally more powerful and more difficult to implement than propagations.



r. we compute all the solved forms from the constraint rc(par ra rb)== 200 and the program rules given in subsection 4.1. at each goal transformation step, we underline which subgoal is selected. for the sake of readability, we omit explicit quantification of existential variables. see section 5 for a comparison between the computations below and those sketched in.



