model-checking can provide valuable insight into the behaviour of biochemical systems, answering quantitative queries which are more difficult to answer using stochastic simulation alone. however, model-checking is a computationally intensive technique which can become infeasible if the system under consideration is too large. moreover, the finite nature of the state representation used means that a priori bounds must be set for the numbers of molecules of each species to be observed in the system.



in this paper we present an approach which addresses these problems by using stochastic simulation and the prism model checker in tandem. the stochastic simulation identifies reasonable bounds for molecular populations in the context of the considered experiment. these bounds are used to parameterise the prism model and limit its state space. a simulation pre-run identifies interesting time intervals on which modelchecking should focus, if this information is not available from experimental data.



the aim of the present work is to investigate how combined use of stochastic simulation and model-checking can lead to a better understanding of biochemical systems. in particular, we investigate how to exploit the knowledge acquired from the simulation to make the model-checking feasible. specifically, the simulation results are used to establish reasonable lower and upper bounds for the molecule counts of the species involved. we show with a simple example how, by using the bounds estimated by our approach, we are able to substantially speed up the model-checking without introducing significant error.



the novel contribution offered by the present paper is the use of simulation and model-checking conjoined in two ways. firstly, we use simulation to bound the model-checking problem and later we compare model-checking results obtained through both exact and approximate probabilistic model-checking. the former method elaborates the full state-space of the model and uses linear algebra to solve the underlying markov chain. the latter uses simulation to answer the modelchecking problem, up to a satisfactory confidence interval.



analysing models of biological processes via probabilistic model-checking has considerable appeal. as with stochastic simulation the answers which are returned from model-checking give a thorough stochastic treatment of the small-scale phenomena which are of greatest interest to computational biologists today. however, in contrast to a simulation run which generates just one of many possible trajectories, the analysis results computed by probabilistic model-checking give a definitive answer. that is, it is not necessary to re-run the analysis repeatedly and compute ensemble averages of the results. further, by building a reward structure over the model it is possible to express complex analysis questions and evaluate these through modelchecking. this form of analysis has the power to expose of the system under study significant temporal behaviour which could not be appreciated from simple inspection of the species time-series generated by simulation runs(see for example). set against this, the probabilistic model-checking approach faces the well-known problem of state-space explosion where, as the complexity of the system under study increases, there is an exponential growth in the state-space of the underlying model. the use of an exact discrete-state representation of the state-space of the model restricts the use of probabilistic model-checking to the analysis of problems where all of the species are available in low copy numbers. multi-scale models(where some species are in plentiful supply and others have very low molecule counts) generally



even in the case where all of the chemical species involved are present only in low copy numbers it is still necessary to place a bound on the maximum molecule count which each species will attain. for models involving biochemical processes such as synthesis, no such bounds can be established. in the present paper we describe the application of stochastic simulation to the problem of bounding discrete-state models allowing us to convert an unbounded model-checking problem into a bounded one.



the context of application we consider is that of biochemical networks. a biochemical network is composed of n species which interact through m reactions; the dynamics of reaction j is described by a kinetic law fj. the quantitative behaviour of a biochemical network depends on the initial values of the involved species and on the kinetic parameters.



note that, in the real world, biochemical networks are generally bounded: degradation, for instance, is an important mechanism cells use to avoid an uncontrolled increase of molecules. however, structurally unbounded networks are interesting because an anomalous behaviour of some biological entity could trigger such an uncontrolled growth. moreover, biological models are often limited to particular sub-systems, in which the bounding reaction might not be included.



species and model components, we need to define a set of functional rates f expressing the kinetic laws of the reactions, a set of constant parameters k and the compartment size(in the set v). for discrete state space analysis the behaviour of the system is defined in terms of an operational semantics. the rules are reported in. in the following we indicate a bio-pepa model with m.



the style of the apmc tool[13,14]). in approximate model-checking monte-carlo simulation is used together with the theory of randomised approximation schemes to give accurate approximations of satisfaction probabilities. properties of large discrete-state systems can be checked using very little memory but in practice the run-times of such simulations can be very long. in our experience a simulation prerun followed by exact probabilistic model-checking is less costly than computing the same results using approximate model-checking alone. we will compare the results obtained from the two methods.



as mentioned above, from a bio-pepa system m we can generate a dizzy model for stochastic simulation and a prism model for model-checking. the initial amount of each species, stoichiometric information and the kinetic laws with the associated parameters are needed for the simulation model. this information can be collected from m. in addition, the lower and upper bounds for each species are also needed in the prism model in order to build a finite ctmc and, hence, to make the analysis by means of ctmc feasible. especially in the case of unbounded networks it is essential to define an upper bound that makes the analysis feasible but still is



the main issue we investigate in this work is: how to specify the minimum and maximum amount of each involved species? in principle, in some networks, bounds on the number of molecules can be obtained from pre-existing biological knowledge about the system and from experimental data. however, this information is often incomplete, we could have only little pre-existing knowledge of the(normal and anomalous) behaviour of the system and there can be a high variability among different experiments. in these cases the derivation of the bounds is particularly hard to face. furthermore, the bound values are tightly dependent on the initial conditions and on the parameter values; since wet experiments are generally time-consuming and costly, assuming that such bounds are known for each relevant parameter set is not realistic.



here we use stochastic simulation to estimate the minimum and maximum number of molecules for each species. we run a number of simulation experiments and use the output results as a rule of thumb for selecting lower and upper bounds for model-checking. the number of simulation runs should be chosen depending on the variability of the specific system under study. due to the nature of stochastic simulation, the more simulation experiments we perform, the higher will be our confidence in the derived bounds. this approach is the sole way of deriving bounds if the total number of molecules present in the system can increase compared to the initial state.



steady-state behaviour. generally, the time bound considered is the one used in the experimental work. when analysing models, therefore, we are interested in checking properties within that time bound, as these can be validated against the available experimental data. however, when experimental data is not available or is partial or incomplete, the time bound needs to be arbitrarily defined. since checking properties can be very time-consuming for models representing real life systems, it is desirable to focus on the shortest time interval which allows us to capture the interesting behaviour. for example, if a steady state exists, it is pointless to consider a time longer than the one at which the steady state is reached. on the other hand, one might not be interested in the very first time steps. again, the time-series generated by a simulation pre-run can provide a good estimate of the time interval to choose for the verification of transient properties.



our two models represent the network described above with two different sets of parameters and a different assumption on the degradation of the protein. the set of parameters used in the first model makes the protein degradation fast enough to yield to a pragmatically bounded system(on average). in the second model, instead, we consider different values for some of the parameters and the complete absence of protein degradation. these assumptions have a dramatic effect on the systems behaviour: it makes the amount of protein increase indefinitely.



in this case the state space truncation has almost no impact on the behaviour of the system. however, it is worth mentioning that, in general, the effect of such truncation is dependent on the nature of the specific system under study. notably, the results obtained by checking the last property shown can be used to refine the model, by increasing the bounds in case the probability of them being reached is considered to be too high. when one is satisfied with the resulting probabilities, prism can be used to evaluate other csl formulae on the defined model, in order to provide additional insight into the system behaviour.



network of chemical reactions. in our earlier work we used the stochastic process algebra pepa[16,15] to express the model and applied numerical linear algebra to solve the underlying markov chain. in this paper we are using the bio-pepa language and applying model-checking to obtain our results.



we have automated the generation of the simulation model and the modelchecker input from a model expressed in the bio-pepa process algebra. we have automated the repeated execution of a set of independent simulation runs and the identification of the maximum and minimum values of each species from the simulation results. the user then only needs to load the prism model, supply the identified parameters and execute it. however, the choice of the number of simulation runs to be performed remains in the hands of the modeller.



we point out that the upper bounds estimated by using this approach are approximate because, given the stochastic nature of the simulation, we can have genuine confidence in the chosen bounds only if we run a suitably large number of simulations. however, this issue is not specific to this approach. the choice of the number of simulation runs is needed for any stochastic simulation experiment; on top of that, we use the simulation just as a supporting technique to the modelchecking, and we believe that the combined use of the two approaches helps to minimize the uncertainty due to the stochastic simulation.



