we define a class of local stochastic rewrite rules on directed site trees. we give a compact presentation of(often countably infinite) coarse-grained differential systems describing the dynamics of these rules in the deterministic limit, and study in a simple case finite approximations based on truncations to a certain size. we show an application to the modelling of the dynamics of sugar polymers.



consider proteins that can bind together via specific domains[17,14] and create a number of different species which is so enormous that it calls for different methods, perhaps even different questions and perspectives on the protein world. enters rule-based modelling. the idea is that basic molecules are now described as sets of domains, and the various reactions in which they can take part are pooled together into reaction classes or rules. this gives means to describe highly constructive systems in a compact form and without having to enumerate a(possibly infinite) set of species. this idea has been captured, studied, and implemented in two languages which are essentially the same, namely kappa and the bng language. other formalisms, in the tradition of process algebras, use rules of less direct expressivity but broadly similar in their intentions, and have the same fundamental ability to cope with unbounded sets of species.



these rules were chosen as a simple class of rules that allows nevertheless a stylised version of the action of different classes of enzymes involved in the polymerisation and management of large sugar polymers. see next section for more motivations and explanations about the biological context. having said that, in the context of this paper these rules serve mostly as a testbed to investigate infinite fragmentations as said earlier in the introduction.



as said, adding deletions changes things dramatically in that fragmentations become infinite in general. in fact, even with just es and bs it is sometimes infinite as we will see. as we will also see, unless one is ready to ask very specific constraints, chains are not closed under fragmentation; specifically, the right glueings on d described below allow branching on any free site, and b glueings will generate such sites. so one strong conclusion of this section is that the simple be fragmentation space, which we have studied above, is somewhat atypical and far from documenting the complexity of the general problem.



for this to work, however, one needs to be able to swap to a site that one can also co-extend. this would not be the case with our earlier sugar polymers example(previous section) even with volume branching since one swaps away from the edges generated by e rules. indeed the fragmentation of the volume variant without deletion is finite in this case.



it follows immediately that deciding whether a given monomial is in the differential system associated to s is decidable. clearly, the decision procedure delineated above could be made more efficient. the style of proof might extend to cover the b case but we have not done it yet.



we have defined a simple but expressive class of kappa rules operating on directed polymers and which generates a type of coarse-graining called fragmentations, which lead in general to infinite ode systems. we have shown on an example that such coarse-graining can be invaluable in the study of the dynamics of our ideal tree polymers. we have also captured the generation of fragments(the variables featuring in the coarse-grained ode system) in a simple set of rewrite rules which use an extension of kappa to the manipulation of partial objects(trees in our case). finally we have shown that the ed class generates decidable fragmentations.



but perhaps the most important question before one moves to a larger class is that of how to define a truncated version. decidability should ensure that one can write syntactic truncations but as we have seen they might be entirely useless because they fail to propose consistent boundary conditions. dually, one would like an appropriate version of kurtz theory which explains why truncations are sometimes working very well as approximations.



finally, there are questions related to the algebraic aspects of the fragmentation expansion. for one thing, one would like to know in which generic rewriting universe the operations underpinning the construction of the generative rules are possible and for what specific rule class. another point is that the fragmentation process as we have defined it is entirely syntactical, and will produce observables that are not all linearly independent. when that happens, there is no need to incorporate the new fragment into the current stock. so a natural question is whether we can recognise such situations and use it to simplify the above generation scheme.



