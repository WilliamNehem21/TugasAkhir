besides the transformation of complete documents, it is essential to be able to propagate small changes from an informal pl representation to the formal dl/tl one and the way back. if we always perform a global transformation, we would on the one hand rewrite the whole document in the text-editor which means to lose large parts of the natural language text written by the user. on the other hand we would reset the datastructure of the proof assistance system to the abstract level of proof sketches. for example, any already developed expansion towards calculus operations in an update have to be applied in parallel to the target document. xml-rpc is a remote procedure call protocol which uses xml to encode its calls and http as a transport mechanism. it is a very simple protocol, defining only a handful of data types and commands, and its entire two page description can be found at.



in contrast to that, we suggest in our approach a formal representation language for mathematical content detached from any particular logic or calculus. this allows us to represent arbitrary content regardless of the underlying logic. moreover, the language allows us to represent both different levels of concept and underspecification and is thus particularly well-suited to represent proofs that are authored in a natural way by human beings. closely related to our approach is the mathlang project. it also proposes a top-down approach starting from natural mathematical texts towards machine processing. however, the mathlang project so far concentrates mainly on supporting the analysis of the abstract representations based on type checking and, in contrast to our approach, the gap between real theorem provers and mathematical assistance tools remains open.



triggers the execution of an action with its evaluated arguments. the arguments are the session name(string), the unique identifier of the selected action(string) and the arguments as a list of pairs with name(string) and value(string). it returns a list with a patch for the current menu(string), a patch for the document(string) and a custom answer(string), or an error message.



