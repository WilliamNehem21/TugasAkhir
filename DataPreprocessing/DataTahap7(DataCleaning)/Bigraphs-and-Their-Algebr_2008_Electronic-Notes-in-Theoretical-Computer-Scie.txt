bigraphs are a framework in which both existing process calculi and new models of behaviour can be formulated, yielding theory that is shared among these models. a short survey of the main features of bigraphs is presented, showing how they can be developed from standard graph theory using elementary category theory. the algebraic manipulation of bigraphs is outlined with the help of illustrations. the treatment of dynamics is then summarised. finally, origins and some related work are discussed. the paper provides a motivating introduction to bigraphs.



computer programming ramifies the use of space and spatial metaphor, both for writing programs and for explaining them. this shows up in our vocabulary: flow chart, location, send and fetch, pointer, nesting, tree, etc. concurrency expands the vocabulary further: distributed system, remote procedure call, network, routing, etc.



elementary bigraphs there are three kinds of elementary bigraph. the first two kinds are node-free. if a node-free bigraph also has no links it is called a placing; if it has no places, it is called a linking. here are the elementary placings and linkings, from which all others can be formed using composition and product.



the modelling of large-scale informatic systems is still at an experimental stage. moreover, as with programming languages, the useful experiments are those carried out with real applications, involving real users and an assessment of their experience. with this in mind, a group led by lars birkedal at the it university of copenhagen has embarked on the design and implementation of a bigraphical language for specification and programming, and its implementation as a simulator. the first experiments with the language are now being carried out in their laboratory. in the same group bigraphs are also being applied experimentally to the modelling of business processes.



