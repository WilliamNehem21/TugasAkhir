we lay down plans to study how inductive reasoning ability(ira) affects the analyzing and understanding of program visualization(pv) systems. current pv systems do not take into account the abilities of the user but show always the same visualization independently of the changing knowledge or abilities of the student. thus, we propose ira as an important skill when comprehending animation, which can be used to model the students and thus to adapt the visualization for different students. as an initial step we plan to check if ira correlates with ability to answer program related questions during program visualization. we discuss the possible benefits of using ira modeling in adaptive pv.



this paper starts with an introduction to the research done in inductive reasoning ability(section 2. following in section 3 there is a description of jeliot 3 and the modifications done to support the experiment described in section 4. we end the paper with a discussion of the possible implications of the findings we may come across.



the pattern finding in point(2) is detection of co-variation from a stack of samples or past experiences as explained by holland et al.. in the research done by heller et al., the instructors believed that the attainment of problem solving skill in physics comes from reflective practices to extract knowledge from previous experiences of working on other problems or from sample problem solutions. point



jeliot 3 is a program visualization system that animates the execution of java programs. it has been used as an lecturing aid by teachers and a learning aid by students. jeliot is currently used in classrooms and in distance education. different problems have been identified in these contexts.



in classrooms, the mediocre students seem to benefit from the utilization of the program visualization tool the most. however, for the weakest and strongest students, jeliot 3 in its current form might not be that helpful and useful. on the one hand, the visualization in jeliot is still too complex and hard to grasp for the weakest students. on the other hand, the strongest students do not need the visualization as much and would like to use it only as needed or their learning might be even harmed because of this.



in distance education, students are studying alone and can have problems with learning and motivation. for visualization tools, this means that the use of the system should be both motivating and give students support in order to overcome barriers or even become a partial replacement of a teacher. as there is no teacher explaining the program visualization and the related programming concepts for the students, the tool should assume this role and provide explanations and hints to students as needed.



the programming course is divided in weekly lessons, and concepts are distributed across them. for the experiment purposes, user model concepts will be also tied with the week they are explained, i.e. before a concept is learned students are asked to answer questions related to the concept(pre-test) and after the students have learned about the concept they will be presented with questions related to the same concept(post-test).



on week 2, they will be introduced to jeliot 3 and the experiment. each students will use a web start version of jeliot, which will connect to an on-line version of the student model. jeliot 3 will be updating the user model as the questions are answered.



