one of the main features of hott is higher inductive types(hits). these are types generated by constructors for their points, paths, homotopies, and so on. hits have been used in numerous applications among which are homotopical patch theory, synthetic homotopy theory[31,32,41], defining type theory within type theory[6,7], constructive finiteness, and the partiality monad. to get a feeling for what hits are, let us look at some examples.



1 the authors would like to thank dan frumin and andrej bauer for inspiring discussions. the authors also thank the reviewers for their helpful comments to improve the readability of this paper. work on this article was supported by a grant from the cost action eutypes ca15123.



the main result of this paper is about constructing a class of higher inductive types from simple ones. both kraus and van doorn show that the propositional truncation can be constructed from non-recursive hits[29,43] and rijke shows that every truncation can be constructed via non-recursive hits. note that these all are about truncations instead of a more general scheme. however, contrary to our result, they do not rely on the restriction to set-truncated types. kaposi et al.



reducing the existence of hits to the existence of a small number of them, gives an approach to defining the semantics of hits. other approaches to this problem have also been considered. coquand et al. interpret various higher inductive types, such as spheres, the torus, the truncation, and the pushout, in cubical type theory[13,17,18]. all of these examples are not set-truncated and thus not covered by our scheme. on the other hand, lumsdaine and shulman also study the semantics of higher inductive types using a semantic scheme(cell monads with parameters) and they prove existence in sufficiently nice quillen model categories. dybjer and moeneclaey give an interpretation of their scheme in the groupoid model[20,25].



definition 2.2 a type x is a(mere) proposition if for all x, y: x we have x= y. a type x is a set if for all x, y: x the type x= y is a proposition. we write isaprop(x) and isaset(x) to say that x is a proposition and set respectively.



to define hits on a signature, we need to give the introduction, elimination, and compuation rules. let us start with the introduction rule, which we define via algebras. note that this rule comes in two flavors: one for the points and one forthe paths. for this reason, we define algebras in two steps.



with the introduction rules covered by the algebra structure, we now take a look a the elimination and computation rules. for this, we use displayed algebras[26,39]. these represent the input of the elimination rule. for the output, we define displayed algebra maps, also known as sections. the elimination rule says that we have a displayed algebra map to every displayed algebra, while the computation rule says that the algebra in place. once we have this machinery in place, we define higher inductive type on a signature.



since our goal is to construct hits, we need to find an algebra for which the elimination rule holds, and for that, we use initial algebra semantics[4,11,39]. more specifically, we show that the initial algebra satisfies the induction rule. hence, to obtain a hit, it suffices to construct the initial algebra, which is more convenient in the language of category theory.



now we got the input for the elimination rule in place and the next step is to look at the output. this is a dependent map which preserves the algebra structure. to state this preservation property, we need yet another operation on polynomials.



definition 5.5 let y be a displayed algebra over x. then a displayed algebra map to y consists of a map f:(x: x),y x such that for each x: jspt)x, we have f(pointx x)= cy x(spt f x).



note that hits of s satisfy analogous rules to those defined by basold et al.. as usual, the induction rule only guarantees the existence of a dependent map. this obtained map is unique, which is again proven by induction. furthermore, hits on the signatures we discussed before, the integers modulo 2 in example 3.4 and the propositional truncation in example 3.5, satisfy the induction rule given in basold et al..



to show a hit h is initial, we must show that for each algebra x the set of morphisms from h to x is contractible. this means that there is precisely one homomorphism from h to x. to show the existence, we use the following two lemmata.



we have shown how to construct finitary set-truncated higher inductive types using the quotient and propositional truncation in theorem 6.14. since truncations and the quotient can be constructed from non-recursive hits, this proves that all finitary set-truncated hits can be constructed from non-recursive ones. besides that, we took advantage of this construction to show uniqueness of hits in corollary 7.6 and to characterize their path space in corollary 7.8.



the method used in this paper crucially relies on the polynomials being finitary. to show that infinitary polynomials commute with quotients, one needs the axiom of choice. furthermore, lumsdaine and shulman gave an infinitary hit which cannot be constructed from pushouts, and thus this result cannot be extended to infinitary polynomials.



