termination of term rewrite systems(trss) is an undecidable property. nevertheless, nowadays powerful(incomplete) algorithms exist that can prove termination of many rewrite systems as can be witnessed by the international termination competition. 5 in 2004 kurihara and kondo were the first who encoded a termination method in propositional logic and in 2006 the first tools(jambox 6 and matchbox) employed sat-solving techniques in the competition. they surprised the community by the gains in power and speed. their success was mainly due to the so-called matrix-method which can effectively be implemented using satsolvers. but even for very simple and ancient methods like the lexicographic path order[13,6](lpo) the recent development in the sat community allows way faster implementations than some years ago. a similar speedup is achieved for the knuth-bendix order(kbo). this is remarkable because kbo orientability is known to be decidable in polynomial time whereas sat is np-complete. in other words, the sophisticated algorithms for solving the computationally harder(unless p= np) problem sat outperform the dedicated methods for kbo[7,18]. in this paper we address the question whether a similar result also holds when translating the np-complete sat problem into the undecidable termination property of trss. however, the experiments reveal that at least for our translations the results are as expected. concerning the transformation from sat to termination, the dedicated sat approaches perform much better. even further, only the most simple propositional formulas produce trss which can be shown terminating by state-of-the-art termination provers. therefore the translations can be used to generate a large set of difficult termination problems automatically.



