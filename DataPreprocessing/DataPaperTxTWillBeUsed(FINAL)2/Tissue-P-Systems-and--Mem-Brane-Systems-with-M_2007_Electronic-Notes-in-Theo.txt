	Electronic Notes in Theoretical Computer Science 171 (2007) 105–115	
www.elsevier.com/locate/entcs

Tissue P Systems and (Mem)Brane Systems with Mate and Drip Operations
Working on Strings
Rudolf Freund 1	Marion Oswald 2 ,3
Faculty of Informatics Vienna University of Technology
Favoritenstr. 9-11, 1040 Vienna, Austria

Abstract
We investigate tissue P systems with (non-restricted, symmetric) versions of mate and drip operations and prove that such systems are computationally complete with the minimal number of two cells when working on strings. Moreover, we consider the variant of scattered context tissue P systems with mate and drip operations and show a similar computational completeness result with using at most four cells during any computation. In all cases, the corresponding results for (mem)brane systems are established, too.
Keywords: brane calculi, drip, mate, tissue P system


Introduction
Recently, some attempts have been made to combine the various models in the area of membrane systems (P systems, e.g., see [12], [15]), where the objects are found in the regions enclosed by the membranes, and of brane calculi [4], where the ob- jects are found on the membranes (e.g., see [2], [3], [5], [6], [7], [11], [13]). We here follow this research line by investigating tissue P systems with the brane operations mate and drip; in fact, we shall consider non-restricted, symmetric variants of the mate and drip operations (as already suggested in [1]). A closer look shows that the (mem)brane systems investigated in [1] are only of depth 2, i.e., elementary membranes are placed in the skin membrane. Hence, these systems could also be interpreted as tissue P systems where the skin membrane corresponds to the en- vironment. Having this interpretation in mind, we can immediately establish the

1 Email: rudi@emcc.at
2 The work of Marion Oswald is supported by FWF-project T225-N04.
3 Email: marion@emcc.at

1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2007.05.011

results for tissue P systems with mate and drip operations working with multisets of objects placed on the membranes of the cells based on the proofs given in [1]. Hence, in this paper we shall focus on tissue P systems with mate and drip oper- ations working on strings; a variant of such systems with scattered context will be investigated, too.
After some preliminary definitions, we will present our definitions for tissue P systems with mate and drip operations. First, we shall consider such systems working with multisets placed on the membranes of the cells, yet due to the direct correspondence of these systems with those investigated in [1], the main (computa- tional completeness) results for these systems can directly be taken over from the proofs given there. Hence, in the rest of the paper we focus on tissue P systems with mate and drip operations working on strings placed on the membranes of the cells, and we show that these systems are computationally complete (i.e., they can generate any recursively enumerable string language) with the minimal number of two cells occurring at most during any computation; a similar result, but with using at most four cells, is established for the variant with scattered contexts. Some open questions and further remarks conclude the paper.
Preliminary Definitions
For the basic elements of formal language theory needed in the following, we refer to any monograph in this area, in particular to [14]. We just list a few notions and notations: N denotes the set of non-negative integers (natural numbers), Nk the set of all k-vectors of natural numbers. By NkRE (NkRE) we denote the set of all recursively enumerable sets of k-vectors of natural numbers (≥ h).
V ∗ is the free monoid generated by the alphabet V under the operation of concatenation; its unit element is the empty string, denoted by λ. The length of a string x ∈ V ∗ is denoted by |x|; by RE (RE (k)) we denote the family of recursively enumerable languages (over a k-letter alphabet).
Let {a1, ..., an} be an arbitrary alphabet; the number of occurrences of a symbol ai in x is denoted by |x|ai ; the Parikh vector associated with x with respect to a1, ..., an is |x|a1 , ..., |x|an  . The Parikh image of a language L over {a1, ..., an} is the set of all Parikh vectors of strings in L. For a family of languages FL, the family of Parikh images of languages in FL is denoted by PsFL. A (finite) multiset
⟨m1, a1⟩ ... ⟨mn, an⟩ with mi ∈ N, 1 ≤ i ≤ n, is represented as any string x the Parikh vector of which with respect to a1, ..., an is (m1, ..., mn) .
In the following we will not distinguish between a vector (m1, ..., mn) , its repre- sentation by a multiset ⟨m1, a1⟩ ... ⟨mn, an⟩ or its representation by a string x with
Parikh vector  |x|a1 , ..., |x|an  = (m1, ..., mn) .In that sense, PsRE (1) = N RE.
1

For the proofs elaborated in this paper, we need the following models of string- generating systems:
A Post system G (e.g., see [10]) is a construct
(V, T, P, w0)

where
V is a set of (non-terminal and terminal) symbols,
T ⊆ V is a set of terminal symbols,
P = {(xi, yi) | 1 ≤ i ≤ n} is a set of productions with (xi, yi) ∈ V + × V ∗,1 ≤ i ≤
n, for some n ≥ 0, and
w0 is the axiom.
The derivation relation =⇒G is defined as follows: For each (x, y) ∈ P, we define the derivation relation =⇒(x,y) by wx =⇒(x,y) yw for all w ∈ V ∗, i.e., x is cut away on the right-hand side of the underlying sentential form and y is inserted on its left-hand side; =⇒G then is the union of all =⇒(x,y), i.e., =⇒G := (x,y)∈P =⇒(x,y). Whenever clear from the context, we will only write =⇒ instead of =⇒G. The reflexive and transitive closure of =⇒G is denoted by =⇒∗ . The language generated by the Post system G is the set of all terminal strings derivable from the axiom w0
(in other words, it contains the results of successful computations in G), i.e.,

L (G)= {w ∈ T ∗ | w0 =⇒∗
w} .

A Post system (V, T, P, w0) is said to be in (2, 3)-normal form if
P = {(xi, yi) | 1 ≤ i ≤ n}
with 2 ≤ |xi| + |yi|≤ 3, i.e., (|xi| , |yi|) ∈ {(2, 1) , (1, 2) , (1, 1)} for 1 ≤ i ≤ n.
According to the results proved in [9], for every L ∈ RE, L ⊆ Σ∗, we can con- struct a Post system G in (2, 3)-normal form such that G = (V, Σ ∪ {ql, qr} , P, w0) ,
L (G)= {ql} L {qr} , and
for every word v ∈ V ∗, a derivation in G halts with v if and only if v is of the form qlwqr for some w ∈ L, i.e., for all words v ∈ V ∗ − L (G) there is a rule in P that can be applied to v,
for every word v ∈ V ∗ derivable from the axiom w0 in G, v can only be of the form
qlv' or v''qr if v ∈ L (G), i.e., if v is of the form
qlwqr for some w ∈ L.

A context-free graph controlled grammar is a construct
GC = (N, T, (R, Lin, Lfin) , S); 
N and T are alphabets of nonterminal and terminal symbols, respectively, with N ∩ T = ∅, S ∈ N is the start symbol; R is a finite set of rules r of the form (l (r): p (l (r)) ,σ (l (r)) ,ϕ : (l (r))), where l (r) ∈ Lab (GC ), Lab (GC) being a set of labels associated (in a one-to-one manner) to the rules r in R, p (l (r)) is a context-free production over (N ∪ T ) , σ (l (r)) ⊆ Lab (GC ) is the success ﬁeld of the rule r, and ϕ (l (r)) is the failure ﬁeld of the rule r; Lin ⊆ Lab (GC ) is the set of initial labels, and Lfin ⊆ Lab (GC ) is the set of final labels. For r = (l(r): p (l (r)) ,σ (l (r)) ,ϕ (l (r))) and v, w ∈ (N ∪ T )∗ we define (v, l (r)) =⇒G

(w, k) if and only if
either p (l (r)) is applicable to v, the result of the application of the production
p(l(r)) to v is w, and k ∈ σ (l (r)),
or p (l (r)) is not applicable to v, w = v, and k ∈ ϕ (l (r)). The language generated by GC is
L (GC)= {w ∈ T ∗ | (w0, l0) =⇒G  (w1, l1) =⇒G  ... (wk, lk) , k ≥ 1,
wj ∈ (N ∪ T )∗ and lj ∈ Lab (GC ) for 0 ≤ j ≤ k, w0 = S, wk = w, l0 ∈ Lin, lk ∈ Lfin} .

Tissue P Systems with Mate and Drip Operations
The reader is supposed to be familiar with basic elements of membrane computing, (e.g., from [12]; comprehensive information can be found on the P systems web page http://psystems.disco.unimib.it), as well as of brane calculi (see, e.g., [5]).
The model we are dealing with in this paper is inspired by the ideas from both areas of P systems and of brain calculi: we consider cells like in tissue P systems but with the objects being placed on the membranes of the cells, and, moreover, the operations we use for computing with these cells is taken from the area of brain calculi (in fact, we only need the mate and drip operations). We are going to consider two main variants: the first one is very closely related to the model of (mem)brane systems already considered in various papers (e.g., see [5], [13], [1]), where multisets (in the biological interpretation we may speak of proteins) are placed on the membranes, and the second one assigns a string to (the membrane of) each cell. In order to visualize a cell with the multiset of objects/string w assigned
to its membrane we will use the notation [ ] w (in a similar way as this is written in the model of (mem)brane systems, where a membrane and the multiset of objects assigned to it are written in the form [ ]w ).
The two operations we shall use in this paper now can be defined as follows:
mate : (u|a, b|v; x)
drip : (u|c|v; y, z)
In all the models we describe in the following, these formal notations describe the variants of fusing two cells into one (mate) and to split one cell into two cells (drip).
Following the notations of [1], in the model of (mem)brane systems these op- erations have the following meaning: (u|a, b|v; x) fuses a membrane carrying the multiset sua and the membrane carrying the multiset bvw into one cell which then has the multiset suxvw, i.e., ab is replaced by x and the remaining multisets are taken as they are. In fact, this means that from the two membranes [ ]sua and [ ]bvw we get the membrane [ ]suxvw . In our model of tissue P systems with mate and drip operations this means that from the two cells [ ]sua and [ ]bvw we get the cell

[ ] suxvw.
The drip operation (u|c|v; y, z) in the model of (mem)brane systems splits a membrane [ ]sucvw into the two membranes [ ]suy and [ ]zvw where s and w are arbitrary splits of the remaining objects except those specified in the drip rule (i.e., u, c, v). In the model of tissue P systems this means that the cell [ ] sucvw is split into the two cells [ ] suy and [ ]zvw.

When dealing with strings, the formal notation is exactly the same as given above for the case of multisets of objects with the only difference that suy, zvw, and sucvw have to be interpreted as strings in exactly the sequence they are written which means that in the case of the drip operation, we really start from a string sucvw which then is split at the site c yielding the two new strings suy and zvw, hence, now s and w are not arbitrary anymore.

In the general case, a, b, c, s, u, v, w, x, y, z can be arbitrary strings over an alpha- bet V (no matter whether these are interpreted as multisets of objects or directly as strings).
In contrast to this general case, several restrictions were imposed in [1]:
a, b, c ∈ V ;
b = λ, z = λ;
v /= λ, ux /= λ.
In the proofs given below, we shall also respect the first restriction, but not the second (which allows us to have a symmetry in the rules) or the third one.
In contrast to [1], where the weight of a drip rule (u|c|v; y, z) is defined as the length of the multiset ucv and the weight of a mate rule (u|a, b|v; x) as the length of the multiset uxv, we now define |ucvyz| to be the weight of the drip rule (u|c|v; y, z) and |uabvx| to be the weight of a mate rule (u|a, b|v; x) .

The rules defined above can be used in a tissue P system with mate and drip operations of the form


where
Π= (V, [ ] w1 ,... , [ ]wn , R)

V is a finite, non-empty alphabet;
w1,... , wn are finite multisets over V (represented as strings) assigned to the membranes of the n initial multiset of cells [ ] w1 ,... , [ ] wn ;
R is a finite set of mate and drip rules over V .
Starting from the initial configuration given by the initial (multiset of) cells [ ] w1 ,... , [ ] wn , a computation is performed by applying suitable mate and drip rules from R in a non-deterministic, maximally parallel way, thereby passing from
one configuration of the system to the next one.

A computation is successful only if (i) it halts (which is the case when no rule can be applied anymore), and (ii) in the halting configuration there is only one cell. The result of a successful computation is the multiset found at the membrane of the single cell at the end of this successful computation.
The set of all vectors of non-negative integers (interpreting the number of oc- currences of the symbols {a1, ..., ak} ⊆ V as the corresponding components of the vector) computed in this way by Π is denoted by N (Π, k). The family of all sets N (Π, k) computed by tissue P systems Π with mate and drip operations using at any moment during any computation at most m cells, and mate, drip rules of weight at most p, q, respectively, is denoted by N OktPm(matep, dripq). When any of the parameters k, m, p, q is not bounded, it is replaced with ∗.
¿From this definition of tissue P systems with mate and drip operations we imme- diately get the corresponding model of (mem)brane systems with mate and drip op-
erations considered in [1] by just replacing the initial multiset of cells [ ] w1 ,... , [ ] wn by the corresponding multiset of membranes [ ]w1 , ..., [ ]wn embedded in the skin membrane (which only carries the empty multiset and can never be involved in a
rule), i.e., we get the system
Π= (V,  [ ]w1 ... [ ]wn  , R).
The family of all sets N (Π, k) computed by (mem)brane systems Π using at any moment during any computation at most m +1 membranes, and mate, drip rules of weight at most p, q, respectively, is denoted by N OkPm(matep, dripq). When any of the parameters k, m, p, q is not bounded, it is replaced with ∗.
In [1], the following result was proved:
Proposition 3.1 N O1Pm(matep, dripq) ⊇ N1RE for all m ≥ 4, p ≥ 4,q ≥ 4.
The proof given there even shows the following more general result when taking into account that we have allowed a slightly more general variant of the rules (in fact, we could keep all the restrictions with the effect that the zero-vector cannot be generated):
Corollary 3.2 N OkPm(matep, dripq)= NkRE for all k ≥ 1,m ≥ 4, p ≥ 4,q ≥ 4. As an immediate consequence of this result for (mem)brane systems we im-
mediately get the corresponding result for tissue P systems with mate and drip
operations:
Corollary 3.3 N OktPm(matep, dripq)= NkRE for all k ≥ 1,m ≥ 4, p ≥ 4,q ≥ 4.

In the following, we shall now consider tissue P system with mate and drip operations working on strings; again, such a system is of the form
Π= (V, [ ] w1 ,... , [ ]wn , R)
with the rules in R being mate and drip operations, but now to be interpreted on strings assigned to the membranes of the cells; the strings w1, ..., wn assigned to

the initial cells are to be interpreted as strings, too. In analogy to the previous definitions, a (mem)brane system with mate and drip operations is a system of the form
Π= (V,  [ ]w1 ... [ ]wn  , R).
The remaining definitions of (halting) computations etc. are the same as given above, with the only difference that now we are dealing with strings and not with (strings interpreted as) multisets. The families of string languages generated by (mem)brane/tissue P systems with mate and drip operations working on strings and using at any moment during any computation at most m cells/ at most m +1 membranes, and mate, drip rules of weight at most p, q, respectively, is denoted by SPm(matep, dripq) and StPm(matep, dripq), respectively. When any of the param- eters m, p, q is not bounded, it is replaced with ∗.
We shall also consider another variant of tissue P systems with mate and drip operations working on strings, where the contexts given in the rules do not appear directly on the left- or right-hand side of the related symbol, but at an arbitrary position in the substring to the left or to the right, respectively. In that way, we obtain the following definition of a scattered context tissue P system with mate and drip operations of the form
Π= (V, [ ] w1 ,... , [ ] wn, R).
A mate operation (u|a, b|v; x) applied to [ ] s1us2a  and [ ] bw1vw2  yields [ ] s1us2xw1vw2 , i.e., we look at the ends of the strings as before, but the contexts u and v to the left and to the right, respectively, can be at any position of the remain-
ing string and need not be directly connected to a and b, respectively (hence, we use the notion scattered context). The same holds true for the contexts u and v at the left and at the right of the cutting site c in the drip rule (u|c|v; y, z) ,i.e., for the scattered context variant the drip rule is interpreted as follows: applying the drip operation (u|c|v; y, z) to [ ] s1us2cw1vw2 yields the two cells [ ] s1 us2y and [ ] zw1vw2 .
Obviously, the remaining definitions for scattered context tissue P systems with
mate and drip operations can be taken over from the corresponding ones for string P systems with mate and drip operations, and similar definitions can be given for scattered context (mem)brane systems with mate and drip operations.
The families of languages generated by scattered context tissue P/ (mem)brane systems with mate operations of weight ≤ p and drip operations of weight ≤ q,with at most m cells/at most m + 1 membranes occurring during any computation, is denoted by scStPm (matep, dripq) and scSPm (matep, dripq), respectively. When any of the parameters m, p, q is not bounded, it is replaced with ∗.

Results	for	Tissue	P/(Mem)Brane	Systems	with Mate and Drip Operations Working on Strings
In this section, we prove our main results establishing the computational complete- ness of the variants of (scattered context) tissue P/(mem)brane systems with mate and drip operations working on strings.

Theorem 4.1 StPm (matep, dripq)= RE for all m ≥ 2,p ≥ 4,q ≥ 4.

Proof. Let L ∈ RE and let G = (V, Σ ∪ {ql, qr} , P, w0) be a Post system in (2, 3)- normal form such that L (G) = {ql} L {qr} fulfilling the features explained in the previous section according to the results proved in [9]. The simulation of the rule r : (ad, bc) from P works as follows:
[ ]XwadY
(a|d|Y ; Yr, λ)	[ ] XwaYr	[ ]Y
(a|Yr,Y |λ; Y '')	[ ]	
''	'

(λ|a|Yr ; Yr ,X)	[ ] XwY '
[ ] ''
r

(λ|Y '',X|λ; X''c)	[ ]
X'' cwY '
''
(λ|X  |λ; X, Xb)	[ ] X	[ ]XbcwY '
'
(λ|Yr ,X|λ; Y )	[ ] XbcwY
For r : (a, bc) , i.e., d = λ, we take the following rules:
'	''

(λ|a|Y ; Yr , Yr )	[ ] XwY '
[ ] ''
r

(λ|Y '',X|λ; X''c)	[ ]
X'' cwY '
''
(λ|X  |λ; X, Xb)	[ ] X	[ ]XbcwY '
'
(λ|Yr ,X|λ; Y )	[ ] XbcwY
Observe that both constructions also work for c = λ.
For the final extraction of the terminal string w from [ ] XqlwqrY we need the following rules:

[ ]XqlwqrY
(λ|qr|Y ; λ, Y ')	[ ]
(Y '|Y, X|ql; λ)	[ ] '
(λ|Y '|ql; Z, λ)	[ ]
(λ|Z, ql|λ; λ)	[ ] w


[ ] Y ' Y


[ ] qlw

By the constrctions given above we immediately see that the tissue P system with mate and drip operations generates L.	 
Corollary 4.2 SPm (matep, dripq)= RE for all m ≥ 2,p ≥ 4,q ≥ 4.

We should like to mention that the system constructed in the preceding proof is already optimal with respect to the number of cells (with only one cell during a computation, no computation steps are possible). Moreover, the system even works in a sequential way, i.e., in each derivation step exactly one rule is applied. Both special features are not valid any more when going to systems with scattered context in the proof of the next theorem.

Theorem 4.3 scStPm (matep, dripq)= RE for all m ≥ 4,p ≥ 4,q ≥ 4.
Proof. Given L ∈ RE, we simulate the graph-controlled grammar G = (N, T, (R, Lin, Lfin) , S) generating L as constructed in [8] by the scattered con- text tissue P system with mate and drip operations
Π= (V, [ ] XSr0 , R)
described as follows:
We start with the axiom XSr0 where X is an additional symbol to mark the left-hand side of the string, S is the start symbol of G, and r0 ∈ Lin is the single start label in the graph-controlled grammar G. The construction given in [8] guar- antees that with only two non-terminal symbols usually scattered in the sentential form, the terminal symbols nevertheless are generated in the correct sequence; our construction of a tissue P system with mate and drip operations will heavily rely on this specific feature; moreover, concerning the complexity of the rules constructed in the following, we refer to the feature of the graph-controlled grammar constructed in [8] using only context-free rules of the form A → w with |w| ≤ 2.
The success case of a graph-controlled rule r : (A → w, σ (r) ,ϕ (r)) now is simulated by the following rules in four steps:

Using the drip rule (X|A|r; r', r'') we obtain the two cells [ ]	' and [ ] ''
from the single cell [ ] Xw1Aw2r.
The cell [ ]r'' w2r then is further divided into [ ] r''w2r''' and [ ] riv by the drip rule r''|r|λ; r''', riv .

By using the mate rule (X|r', r''|r'''; w) the two cells [ ] joined to the cell [ ]Xw1 ww2r''' .

Xw1r
' and [ ] r''w2 r
''' are

Finally, joining the newly created cell [ ]Xw1 ww2r''' with the cell [ ] riv by the

mate rule  X|r''', riv|λ; q  we obtain the cell [ ]

Xw1ww2q
, where the symbol

A between w1 and w2 has been replaced by w thus simulating the context-
free production A → w and the label r has been replaced by the new label
q ∈ σ (r) .
We now consider the failure case of the graph-controlled rule r	: (A → w, σ (r) ,ϕ (r)) which is simulated in six steps:
The failure case starts with generating a second cell to be used as a checker:

From [ ]
Xvr
we obtain [ ]
Xvr˜' and [ ] C0
by the drip rule (X|r|λ; r˜', C0) .

The cell [ ]Xvr˜' evolves to the two cells [ ] Xvr˜'' and [ ] r˜''' by the drip rule
(X|r˜'|λ; r˜'', r˜''') , whereas in parallel the cell [ ]	evolves to the two cells [ ]
C1
and [ ] C2 by the drip rule (λ|C0|λ; C1, C2) .
In the third step, [ ]r˜''' and [ ]C2 fuse to one cell [ ] C3 by the mate rule (λ|r˜''', C2|λ; C3) , whereas in the case that v does not contain a symbol A, the
cell [ ] Xvr˜'' remains as it is. If, in the contrary, A occurs in v, then the mate rule
 A|r˜'', C1|λ; #˜  will be applied in parallel thus yielding the cell [ ]	˜ carrying
Xv#

the trap symbol #˜ . The introduction of this trap symbol #˜ will guarantee an
infinite loop by the rules  X|#˜ |λ; #, #'  and  X|#, #'|λ; #˜  .
In the fourth step, [ ] C3 evolves to the two cells [ ] C4 and [ ] C5 by the drip rule (λ|C3|λ; C4, C5) . In the correct case that A does not occur in v, the cell [ ] Xvr˜'' is still present.
The cell [ ]Xvr˜'' now may fuse with the cell [ ] C4 yielding the cell [ ]Xvr˜iv by the mate rule X|r˜'', C4|λ; r˜iv .
Finally, fusing the tow cells [ ] Xvr˜iv  and [ ]C5 by applying the mate rule
X|r˜iv, C5|λ; q , we obtain the cell [ ]Xvq with q ∈ ϕ (r) .
The simulation of the failure case either successfully ends with the string Xvq in case v does not contain the non-terminal symbol A or else leads to an infinite computation. On the other hand, the success case can only be started if the required non-terminal symbol occurs in the string assigned to the membrane of the cell. Hence, in any case it is guaranteed that the computation does not stop without correctly simulating one derivation step or else getting cought in an infinite loop.
If we finally succeed to reach the final label rh, we have got a cell [ ]Xwrh with
w ∈ L; by applying the rules (X|rh|λ; λ, r' ) and (λ|r' ,X|λ; λ) we finally obtain the
h	h
cell [ ]w just carrying the terminal string w.	 
Corollary 4.4 scSPm (matep, dripq)= RE for all m ≥ 4,p ≥ 4,q ≥ 4.

Conclusion
Tissue P systems with mate and drip operations are closely related to (mem)brane systems with mate and drip operations having a flat hierarchy of membranes with elementary membranes situated in the skin membrane. Hence, results established for one model can also be interpreted in the other model. On the other hand, there are some slight differences in the exact definitions of the mate and drip operations in these approaches which give rise to some open problems, e.g., when taking the restricted definition of the mate and drip operations used in [1], we may ask how this influences the results established in this paper for (scattered context) tissue P systems with mate and drip operations working on strings. In the case of multisets placed on the membranes, we may also consider another variant of the drip operation where the remaining objects are not distributed in an arbitrary way, but where all these objects are inherited by the second membrane/cell, i.e., for tissue P systems with mate and drip operations this means that by applying the drip operation
(u|c|v; y, z) to [ ]ucvw we now get [ ] uy and [ ] zvw. Among others, we shall investigate these variants in the future.

References
Besozzi, D., N. Busi, G. Franco, R. Freund, and Gh. P˘aun, Two universality results for (mem)brane systems, to appear.

Busi, N., and R. Gorrieri, On the computational power of brane calculi, “Third Workshop on Computational Methods in Systems Biology”, Edinburgh (2005).
Busi, N., On the computational power of the mate/bud/drip brane calculus: interleaving vs, maximal parallelism, in: Freund, R., Gh. P˘aun, G. Rozenberg, and A. Salomaa (Eds.), “Membrane Computing, International Workshop, WMC6”, Vienna, Austria, 2005, Selected and Invited Papers, LNCS 3850, Springer, Berlin (2006), 144–158.
Cardelli, L., Brane calculi. Interactions of biological membranes, in: Danos, V., and V. Schachter (Eds.),“Computational Methods in Systems Biology: International Conference CMSB 2004”, Paris, France, May 26-28, 2004, Revised Selected Papers, LNCS 3082, Springer, Berlin (2005), 257–280.
Cardelli, L., and Gh. P˘aun: A universality result for a (mem)brane calculus based on mate/drip operations, Intern. J. Found. Computer Sci. 17, 1 (2006), 49–68.
Cavaliere, M., A. Riscos-Nu´n˜ez, R. Brijder, and G. Rozenberg: Membrane systems with marked membranes, submitted, 2005.
Danos, V., and S. Pradalier, Projective brane calculus, in: Danos, V., and V. Schachter (eds.),“Computational Methods in Systems Biology: International Conference CMSB 2004”, Paris, France, May 26-28, 2004, Revised Selected Papers, LNCS 3082, Springer, Berlin (2005), 134–148.
Fernau, H., R. Freund, M. Oswald, and K. Reinhardt, Refining the nonterminal complexity of graph- controlled grammars. In: Mereghetti, C., B. Palano, G. Pighizzini, and D. Wotschke (Eds.), “Seventh International Workshop on Descriptional Complexity of Formal Systems” (2005), 110–121.
Freund, R., M. Oswald, and A. P˘aun, Optimal Results for the Computational Completeness of Gemmating (Tissue) P Systems, International Journal of Foundations of Computer Science 16, 5 (2005), 929–942.
Minsky, M.L., “Computation – Finite and Infinite Machines”, Prentice Hall, Englewood Cliffs, NJ, 1967.
P˘aun, A., and B. Popa, P systems with proteins on membranes, submitted, 2005.
P˘aun, Gh., “Membrane Computing – An Introduction”, Springer, Berlin, 2002.
P˘aun, Gh., One more universality result for P systems with objects on membranes, “Proc. Third Brainstorming Week on Membrane Computing”, Sevilla, 2005, RGNC Report 01/2005, 263–274.
Rozenberg, G., and A. Salomaa, eds., “Handbook of Formal Languages”, 3 volumes, Springer, Berlin, 1997.
The P Systems Web Page http://psystems.disco.unimib.it .
