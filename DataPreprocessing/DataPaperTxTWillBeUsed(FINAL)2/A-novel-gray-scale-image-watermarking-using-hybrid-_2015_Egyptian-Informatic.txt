
ORIGINAL ARTICLE
A novel gray-scale image watermarking using hybrid Fuzzy-BPN architecture

Charu Agarwal a,*, Anurag Mishra b, Arpita Sharma c

a Department of Computer Science, University of Delhi, Delhi, India
b Department of Electronics, Deendayal Upadhyay College, University of Delhi, Delhi, India
c Department of Computer Science, Deendayal Upadhyay College, University of Delhi, Delhi, India

Received 12 October 2014; revised 17 December 2014; accepted 12 January 2015
Available online 26 February 2015

Abstract In this paper, we model HVS characteristics using hybrid Fuzzy-BPN to implement a novel image watermarking scheme to embed a permuted binary watermark in gray-scale images. The signed images yield high values of full reference metrics – PSNR and SSIM which suggest their good visual quality. Extracted watermarks yield high normalized correlation values which indicate successful watermark recovery. Eight different image processing attacks are carried out to examine the robustness of embedding scheme. High computed values of normalized correlation from the attacked images clearly indicate that the proposed algorithm is robust against the selected attacks. Time complexity analysis indicates fast execution of watermarking processes. It is found that the proposed watermarking scheme is fast enough to carry out these operations on a real timescale. Overall, it is concluded that the Fuzzy-BPN is successful candidate for implementing novel gray- scale image watermarking scheme meeting real timelines.
© 2015 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.
org/licenses/by-nc-nd/4.0/).



Introduction

The digital watermarking of images has acquired an important dimension in the research of image processing applications.

* Corresponding author. Tel.: +91 9891994775.
E-mail addresses: agarwalcharu2@rediffmail.com (C. Agarwal), anurag_cse2003@yahoo.com (A. Mishra), arpt1_mishra1@yahoo. com (A. Sharma).
Peer review under responsibility of Faculty of Computers and Information, Cairo University.
This is the process by which logo or watermark is embedded into images, giving those objects a unique digital identity that can be used for a variety of valuable applications. Tradition- ally, image watermarking is used to establish content authenti- cation and ownership verification [1–3]. Watermarking techniques are categorized into two groups: spatial domain and frequency domain. In the first case, the pixel values of the cover image are directly altered by inserting the watermark. It leads to ease of implementation and low cost of operation but are generally not robust to affine transformations and image processing attacks [4,5]. In contrast, methods of second category transform the image into the frequency domain and then modify its coefficients to embed the watermark. This leads to robust watermark embedding. There are many transform


http://dx.doi.org/10.1016/j.eij.2015.01.002
1110-8665 © 2015 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



domain watermarking techniques such as discrete cosine trans- forms (DCT) [6–8], singular value decomposition (SVD) [9–11] and discrete wavelet transform (DWT) [12–16]. It is well known that human eyes are more sensitive to low frequency and midfrequency band coefficients [1,4]. Therefore, transform domain techniques are found to work well if the watermarks are embedded within the low frequency coefficients of the image. Moreover, it has been reported that among the trans- form domain methods, DWT is more suitable for achieving robust watermarking and imperceptible leading to good visual quality signed image [1,14].
Several research groups are working to optimize a generic algorithm which can be effectively used by the industry. On the other hand, the digital content, especially images and vid- eos are subject to vulnerable attacks. The attacker may want to eliminate watermark from the signed image. Due to this rea- son, the embedding algorithm must be robust against common image processing attacks.
In view of this, image watermarking is presently perceived as an optimization problem which should be capable to bal- ance out the requirements of imperceptibility and robustness. To this end, various pure and hybrid soft computing tech- niques such as Artificial Neural Networks (ANNs) [17–19], Fuzzy Inference Systems (FIS) [20,21], and Genetic Algo- rithms (GAs) [22] are used to embed and extract the digital content (watermark) from the given images. Besides this, var- ious evolutionary algorithms are also used for this purpose. These are Fuzzy based Bacterial Foraging [23], Particle Swarm Optimization (PSO) [24] and Ant Colony Optimiza- tion (ACO) [25]. The objective of using these schemes is to implement a comprehensive watermarking scheme capable of balancing out the requirements of imperceptibility and robustness. This is particularly true as these two criteria are often found to be mutually exclusive to each other. The third important parameter required to be examined for information security – the watermark embedding capacity is assumed to be constant. This is because, unlike steganography, the size of the watermark to be embedded is very small as compared to that of the host image. Although, all these techniques have successfully carried out watermarking schemes, a comparison of these algorithms is important to understand the inherent strengths and weakness of individual methods. A brief survey of the research work conducted in this area is presented below.
Huang et al. [17] have proposed a novel blind watermarking technique based on BP neural network in wavelet domain. In this paper, with the aid of HVS characteristics, a scrambled watermark is embedded robustly and imperceptibly. They suc- cessfully apply a neural network to memorize the relation between the watermark and corresponding watermarked image. This way, the authors are successful to blindly recover the exact watermark from the signed image. Their experimen- tal results show that the proposed scheme has a good imper- ceptibility and high robustness to various image processing attacks.
Mohanty et al. [26] have analyzed the implementation of the HVS model in the context of watermarking of images. For this purpose, they consider three HVS features namely: edge blocks of the image to be watermarked, the effect of var-
iance across the blocks available in the host image (blocks hav- ing low variance are more sensitive to noise and the blocks having high variance are less sensitive to noise) and the com- puted values of the block intensity. They argue that the HVS based watermarking is expected to give good quality impercep- tibly signed images.
Motwani et al. [20] have implemented a MAMDANI type Fuzzy Inference System (FIS) which uses as its input the HVS characteristics namely brightness, texture and edge sensi- tivities of the gray-scale image in question. The output of this inference system is successfully used to embed the watermark in the host image in the DWT domain. This FIS uses a set of 27 inference rules which are primarily based on the follow- ing facts:

The eye is less sensitive to noise in those areas of the image where brightness is high or low.
The eye is less sensitive to noise in highly textured areas, but among these, more sensitive near the edges.
The eye is less sensitive in the regions with high bright- ness and changes in very dark regions.

The authors claim that the fuzzy based watermarking scheme is robust to image processing attacks and at the same time achieve a high level of imperceptibility.
Melin et al. [27] stressed upon the design of hybrid systems in general and its applications in pattern recognition and intel- ligent manufacturing in particular. The authors specifically highlight the importance of designing and implementing hybrid systems for real world applications. They combine sev- eral soft computing methodologies to build powerful hybrid intelligent systems that can fully exploit the advantages that individual technique offers. For this purpose, they consider face recognition, fingerprint recognition and voice identifica- tion as thrust areas. They amalgamate neural networks and fuzzy logic to examine face recognition in their paper. The authors also stress upon the use of Genetic Algorithms (GAs) to optimize the architecture of the face recognition sys- tem as well as the use of Neuro-Fuzzy system for fingerprint recognition. For designing of voice recognition system, they suggest a mixture of all three – Neural Networks, Fuzzy logic, and GA. They argue that the main disadvantage of the fuzzy system is their lack of adaptability to changing situations. For this reason, they suggest combining fuzzy logic with ANNs or GAs because ANNs and GAs give necessary adapt- ability to fuzzy systems.
Latif [28] proposed an adaptive digital image watermarking technique using fuzzy logic and tabu search. They had used Hadamard transform to transfer the image from spatial domain to transform domain. The selected transform includes some parameters that can be handled to control the require- ments of watermarking such as robustness and imperceptibili- ty. They had applied the transform parameters to enhance the robustness by tabu search and after embedding, the watermark is adapted to the image by exploiting human visual system characteristics using fuzzy gradient to ensure the imperceptibil- ity. They claim that their experimental results have high imperceptibility as well as high robustness against variety of attacks.



Jacobsen [29] has first classified state-of-the-art intelligent systems utilized for various applications. He suggests integration of individual techniques by hybridization or fusion. This is aimed at overcoming the limitation of individual tech- niques. First, he categorizes the intelligent techniques into four categories (1) simple component system, (2) fusion based sys- tem, (3) hierarchical system and (4) hybrid system. Second, he introduces a unifying paradigm derived from concepts well known in artificial intelligence and agent community as a con- ceptual framework to better understand, modularize, compare and evaluate individual intelligent approaches. According to the author, neural networks are like a black box and hence it is not interpretable. Fuzzy techniques, on the other hand, show complementary behavior. He, thus, suggests integrating ANNs and Fuzzy system to overcome the limitation of the individual categories of intelligent systems.
Negnevitsky [30] proposed a novel design of Neuro-fuzzy hybrid system with heterogeneous and homogeneous struc- tures. The system with a heterogeneous structure is used to diagnose myocardial perfusion from cardiac images which is subsequently used to predict cardiac attack. The system with a homogenous structure is developed for predicting an air- craft’s trajectory during its landing abroad an aircraft carrier. According to the authors, both heterogeneous and homoge- neous systems are quite successful in their implementation. The former is capable to predict a heart attack using the out- put of the fuzzy system to which the inputs are supplied by the trained ANN. The latter system using homogeneous capabili- ties is capable to predict the trajectory of the landing aircraft at two seconds in advance, based on the aircraft’s current posi- tion. According to the author, although the field of hybrid intelligent systems is still evolving, and most hybrid tools are not yet particularly effective, neuro-fuzzy systems have already matured as an advanced technology with numerous successful applications. While neural networks can learn from data, the key benefit of fuzzy logic lies in its ability to model decision- making of humans.
Abraham [31] presented hybrid architecture of intelligent systems involving fuzzy-clustering algorithms, neural network learning, fuzzy inference systems and finally the evolutionary computation. He uses the concept of hierarchical layers to demonstrate the evolution of intelligence in his hybrid intelli- gent models. He argued that for two applications (approximat- ing the expert behavior of multinational subsidiaries and web usage mining) the hybrid-architecture, as described above, pro- duced better results than individual approaches in terms of low RMSE and high Cross-Correlation (CC). According to the author, better results are achieved by taking into account less number of learning rules. He claims that his approach is very suitable to hardware implementation.

Motivation

It can be inferred from this discussion that pure soft comput- ing techniques have given solutions to a wide range of prob- lems including gray-scale image watermarking. However, these techniques have their own advantages and disadvan- tages. For example, in case of an ANN, the precision is often limited to the least squares errors, the training time is quite
large, the training data are sufficiently large and they have to be chosen over the entire range where the variables are expected to change. On the other hand, although the Fuzzy logic addresses the imprecision of inputs and outputs defined by fuzzy sets and allows greater flexibility in formulating a detail system description, yet it lacks in adaptability. It is, therefore, advisable to integrate ANN with Fuzzy logic. The resultant Neuro-Fuzzy systems are expected to extend the capabilities of the systems beyond either of the two pure tech- niques as applied individually. The proposed watermarking scheme implements a hybrid Fuzzy-BPN system which maps the fuzzy inputs to crisp outputs without involving a large training data set. Therefore, the problem of lack of adaptabil- ity of a pure fuzzy rule based system is also expected to be resolved by using it.

Research focus and contribution

This research work focuses on optimizing the trade-off between the twin parameters of image watermarking: imper- ceptibility and robustness. We, thus, propose a novel grayscale image watermarking scheme using the hybrid Fuzzy-BPN architecture developed by Lee and Lu [32] by taking into account the HVS characteristics of the gray-scale host images. To the best of our information, this hybrid network has not been used earlier for developing any image watermarking application. We employ three different characteristics of the Human Visual System (HVS) to embed and extract the water- mark from five different gray-scale host images of size 256 · 256. These images are Lena, Baboon, Boat, Pepper and Man. The proposed applied work assumes more signifi- cance particularly because hybrid intelligent architectures are rarely in use for development of image watermarking schemes. Moreover, the processing time of the processes involved is also computed and discussed. It has been found that these pro- cesses do not consume much time to carry out computations. The HVS characteristics – luminance sensitivity, contrast sen- sitivity and edge sensitivity are fed to a Fuzzy-BPN as inputs. The Fuzzy-BPN is driven by the same set of 27 inference rules as proposed by Motwani et al. [20]. This network produces a weighting factor as its output. The weighting factor is used to embed a permuted binary watermark in the LL3 coefficients of the host image. The watermark is of size 32 · 32 pixels. In addition to this, we carry out eight different image processing operations over signed images as attacks to examine the robustness of the embedding scheme. These attacks are described in detail in Section 3.7. Perceptible quality of the watermarked and attacked images is quantified by PSNR
ated by Normalized Correlation, NC(X; X*). It is found that and SSIM. The robustness of the embedding scheme is evalu- the embedding and extraction processes are well optimized
and the hybrid embedding scheme is robust enough against the selected attacks.
The paper is organized as follows. Section 2 deals with the- ory of hybrid Fuzzy expert system based BPN proposed by Lee and Lu [32]. Section 3 described experimental details including embedding, extraction and robustness. Experimental results are discussed in Section 4 which finally concluded in Section 5. The list of references is given at the end.

It performs nonlinear mapping between the weighted summa- tion of fuzzy input vectors and crisp outputs. Given the fuzzy
input vector Ie = (Ie0; Ie1; ... ; Iel ) and fuzzy weight vector,












Figure 1	A triangular LR-type fuzzy number (m, a, b).



Mathematical formulations

This paper implements an Fuzzy-ANN based hybrid architec- ture, namely Lee and Lu’s Fuzzy-BP network [32] for image watermarking. Fuzzy-BPN is a hybrid architecture which per- forms nonlinear mapping between fuzzy input vectors and crisp outputs. Therefore, it has the ability to process fuzzy numbers. The fuzzy numbers are represented in LR-type to reduce network complexity. The connection weights and biases are represented as fuzzy numbers to enhance fuzzy inference ability of this network. In addition, it uses a fuzzy neuron which performs fuzzy weighted summation, defuzzification and nonlinear mapping.

LR-type fuzzy number

fuzzy numbers in terms of that the fuzzy number (Mf) can be The LR-type fuzzy number is a special representation of a
W = (W0; W1; ... ; Wl), the fuzzy neuron computes the crisp
output Oj.
and NET is the inference result computed as NET = CE(netj). The function CE is the centroid operation of the tri- In the above figure netj is the fuzzy weighted summation
angular fuzzy number and is treated as a defuzzification oper-
ation which maps fuzzy weighted summation value to a crisp output value. In the present case, the function f is sigmoid function which performs nonlinear mapping between the input and output.

Fuzzy BPN architecture

Fuzzy-BPN is a three layer feed forward architecture. The three layers are as follows: input layer, hidden layer, and output layer. As in case of BPN, the execution of Fuzzy- BPN proceeds in two stages namely,

Learning or Training.
Inference.

Fig. 3 illustrates a l–m–n (l input neurons, m hidden neu- rons, and n output neurons) architecture for the Fuzzy-BP net-
work. Let Ip = (Ip1; Ip2; .. . ; Ipl) be the input pattern string supplied to the Fuzzy-BPN architecture shown in Fig. 3. In
this notation, p = 1, 2, 3, .. ., N being the pth pattern for a total of N input patterns that the Fuzzy-BPN needs to be trained. The bias value is taken as I0 = (1, 0, 0). Ipi is the ith input com-
ponent of the pth input pattern and is an LR-type triangular fuzzy number.
Let Oepi be the output value of the ith input neuron, O' and

representation, m is the mean value of Mf, a and b are left and
output layer neurons respectively. Wfji is the fuzzy weight

right spreads of M respectively. If both a and b are zero, the LR-type fuzzy number indicates a crisp value.

Fuzzy neuron

The fuzzy neuron is the basic element of the Fuzzy BPN model. Fig. 2 illustrates the architecture of the fuzzy neuron.
between ith input neuron and jth hidden neuron. Wkj is the fuzzy weight between jth hidden neuron and kth output neuron.

Algorithm for training of Fuzzy-BPN

Listing 1 illustrates the algorithm for training of Fuzzy-BPN.















Oj






Figure 2	The architecture of jth fuzzy neuron.

Given  a  set  of  patterns  Fep  to  be  inferred,  where

Listing 1: Algorithm Fuzzy_BP_TRAINING
/* let the configuration of Fuzzy-BPN be l–m–n */
Step 1:	Randomly generate the initial weight sets W for the input–hidden layer where each
Wji = (Wmji; Waji; Wbji) is an LR_Type fuzzy number. Also generate the weight set W' for hidden–output
 	 
   
Fp = (Fp1; Fp2; .. . ; Fpl) and Fpi is an LR-type fuzzy number given by Fpi = (Fpmi; Fpai; Fpbi). The aim is to obtain Op, the

term O'' computed by the output neurons is the output corre- allowing Fp to pass through the series of computations. The sponding to Fep.



Step 2:	Let (Ip; Dp); ∀p = 1; 2; .. . ; N be N input–output Here, Ip = (Ip0; Ip1; .. . ; Ipl) where each Ipi is an LR- type fuzzy number, i.e. Ipi = (Ipmi; Ipai; Ipbi)· Dp is a pattern sets that Fuzzy-BPN needs to be trained with.
crisp output
Step 3:	Let ITR is a variable which denotes the number of iterations. Set the counter for the number of iterations to zero and the counter for number of pattern sets to be trained to one. i.e. COUNT_OF_ITR = 0; and p = 1;
Step 4:	Assign values to training parameters – learning rate (g) and a constant value (c). Initialize the variables used to
hidden–output layers at time t — 1 respectively as: compute change in the weights for input–hidden and
DW(t — 1)= 0;
The weights at time t — 1 for input–hidden and hidden–output layer are given respectively as
W(t — 1)= 0;
Step 5:	Get next pattern set (Ip; Dp)
For the input neuron, assign
Opi = Ipi; ∀i = 1; 2; ... ; l; and O0 = (1; 0; 0)
Step 6:	For hidden neurons compute
' = f(NETpj); ∀j = 1; 2; .. . ; m; and O' = 1

i=0 l
Step 7:	For output neurons compute
Wfji Oepi)

'' = f(NET' ); ∀k = 0; 1; ... ; n — 1
where NET' = CE	m W O'
Step 8:	Compute change of weights DW'(t) for hidden–output layer as follows:
DW'(t)= —g∇Ep(t)+ cDW'(t — 1)
Step 9:	Compute change of weights DW(t) for input- hidden layer as follows:
DW'(t)= —g∇Ep(t)+ cDW'(t)
Step 10:	Update weights by using:
W(t)= W(t — 1)+ DW(t) for input–hidden layer and
W'(t)= W'(t — 1)+ DW'(t) for hidden–output layer.
Step 11:	p = p + 1;
if (p 6 N) goto step 5;
Step 12:	COUNT_OF_ITR = COUNT_OF_ITR + 1 if COUNT_OF_ITR < ITR
{Reset pointer to first pattern in the training set;
p = 1;
goto step 5;
}
Step 13:	Output Wf and Wf' as the final weight sets
Classification of simulation work

The present problem is classified for simulation under follow- ing categories.

Block coding and computing HVS parameters of original image

The host image (I) of size 256 · 256 is first divided into blocks of size 8 · 8 pixel each in spatial domain. The obtained 1024 blocks are then transformed into transform domain using DCT method. Three HVS characteristics namely: luminance sensitivity, contrast sensitivity and edge sensitivity are com- puted over these blocks using Eqs. (1)–(3).

The luminance (brightness) sensitivity
The DC coefficients of the DCT blocks of the host image are used as luminance sensitivity according to the formula given by Eq. (1)

 XDC;i 
L =
(1)

Inference by Fuzzy-BPN

Once the Fuzzy-BPN is trained for a given set of input–output patterns a definite number of times, it is ready for inference.
XDCM

where XDC,i denotes the DC coefficient of the ith block and XDCM is the mean value of the DC coefficients of all the blocks put together.


1
I0 = (1, 0, 0)	O’
I0	H0



Ip1	I1



Ip2	I2
O’p1
H1

O’p2
H2
O1	O’’p1








Ipl





Il	Hm




O’pm
On	O’’pn


Input Layer	Hidden Layer	Output Layer
Figure 3	An architecture of three-layered Fuzzy BPN.



































Figure 4	Fuzzy membership functions used for three input attributes – brightness sensitivity, contrast sensitivity and edge sensitivity.


The contrast sensitivity
The texture of a region (block) in an image can be quantified by its contrast sensitivity. The computed variance value of an image block is the direct metric to quantify this parameter. For this purpose, a Matlab routine proposed by Gonzalez et al. [33] is used. The implementation of this routine is given by Eq. (2).
t = statxture( f )	(2)
where f is the input image or the sub-image (block) and t is the 7 – element row vector. These elements are (1) average gray level, (2) average contrast, (3) smoothness measure, (4) third
moment, (5) measurement of uniformity, (6) entropy and (7) normalized variance value.

The edge sensitivity
As the edge is detected in the image using threshold operation, edge sensitivity can be quantified as a natural corollary to the

computation of the block threshold T. The Matlab image processing toolbox implements graythresh() routine which computes the block threshold using histogram-based Otsu’s method [33]. The implementation of this routine is given by Eq. (3)
T = graythresh(f)	(3)
where f is the host sub-image (block) in question and T is the
computed threshold value. These parameters are also calcu- lated by other researchers [20,26]. They, however, use different formulations to compute them.

Fuzzy linguistic terms for three input attributes


Fig. 4 illustrates the fuzzy linguistic terms associated with luminance (brightness) sensitivity, contrast sensitivity and edge sensitivity computed. Note that each linguistic variable con- sists of three fuzzy sets. For example, luminance sensitivity has dark, medium and bright levels. Contrast sensitivity has low, medium and high levels and edge sensitivity has small, medium and large levels. This is done to decompose these parameters into fuzzy equivalent variables to constitute the fuzzy inference rules. These fuzzy sets are represented in LR- type. Table 1 illustrates the LR-type fuzzy number equivalents for the associated attribute values.

Fuzzy inference rules

Fuzzy-BPN is driven by the set of 27 inference rules as listed below:
The final outcome of application of these rules is the suit- able output of the expert system and is given by one of the five crisp output values namely: Least (0.0), Less (0.25), Average (0.5), Higher (0.75) and Highest (1.0).

Training and inference of Fuzzy-BPN for gray-scale image watermarking

In the present work, a three layered Fuzzy-BPN with a 3–3–1 configuration (3 input neurons, 3 hidden neurons and 1 output neuron) is used. This network is trained using Lee and Lu’s
[32] training procedure. The values of learning rate (g) and constant (c) are 0.9 and 0.1 respectively. To train the network, 27 HVS rules are used as given in Section 3.3. In accordance with Table 1, the computed LR-type fuzzy numbers are used to train the network for a definite number of iterations. In this simulation, the iteration number is optimized to 50 iterations. During trials of this algorithm, we observe that beyond ITR = 50, the visual quality and robustness of signed images
ITR = 50. After training, let W and W' be the weight sets do not improve. Hence, the embedding is optimized for obtained for the input–hidden and hidden–output layers
respectively. These weight sets are used in Fuzzy-BPN inference.
For the inference, we first compute brightness sensitivity, contrast sensitivity and edge sensitivity of all blocks of the host image using Eqs. (1)–(3). Thereafter, the block wise computed values are converted into their equivalent LR-type fuzzy num- bers using Table 1. The set of LR-type fuzzy numbers of three
HVS parameters is inferred by the Fuzzy-BPN using W and W' weight sets, which results in a crisp output O''. Therefore, for each block, O'' is computed in one pass by allowing each set of three parameters (block wise) to pass through the series of
computations of Fuzzy-BP network. The crisp outputs are fur- ther used in watermark embedding using a prespecified for- mula given by Eq. (4).

Embedding the watermark

In the present simulation, we use five gray-scale host images represented by (I) to demonstrate watermark embedding. These images are Lena, Baboon, Boat, Man and Pepper. The watermark (W) embedded in I is a permuted binary image of size m · m pixels. Fig. 5 depicts the block diagram of the pro- posed watermark embedding scheme. The formula for embed-













Figure 5	Block diagram of watermark embedding scheme.



ding the watermark used in the present work is given by Eq. (4) [1]
LL3' = LL3 * ((k * O'' * Xp)+ 1)	(4)
host image, O'' is the crisp output of Fuzzy-BPN, Xp is the ori- where LL3 is the 3 – level DWT low frequency region of the cient and LL3' is the DWT low frequency region of the ginal permuted watermark, k is the watermark scaling coeffi- signed image. The scaling coefficient k is optimized to be
0.07 for the binary watermark. The optimization of k is explained in Section 4. The watermark embedding procedure is given by Listing 3.
Quality assessment of the signed images (I') is done by com-
puting two full reference quality assessment metrics PSNR and
SSIM given by Eqs. (5) and (6) respectively.

PSNR = 10 log10

2
max 
(5)

MSE
where Imax is the maximum possible pixel value of the image I
and MSE is the mean square error.

SSIM =   (2lIlI' + C1)(2rII' + C2) 
(l2 + l2 + C )(r2 + r2 + C )
(6)
Watermark extraction from signed image and computation

I	I'
1	I	I'	2
of normalized cross-correlation parameter NC(X, X*)

where l
= 1 Pn
I and l ' = 1 Pn I' are mean intensity or

C1 = (J1L)2 and C2 = (J2L)2 are constants with L being the luminance component of image signals x and y respectively. dynamic range of the grayscale image (0–255) and J1  1
and J2  1 being small constants. Besides this,
The extraction procedure is inverse of that of embedding and is
informed in the present work. Fig. 6 depicts the block diagram of the watermark extraction scheme. The formula for extract- ing the watermark used in the present work is given in Eq. (7)
[1]

 1  Xn	 1  Xn	2
*	''	''

rI = n — 1
i=1
(Ii — lI) , rI' = n — 1
i=1
(Ii — lI' )
and rII'
Xp = (LL3
— LL3)/(k * wO )	(7)

n	where LL3 is the low frequency DWT coefficient of the host

 1  X	'
''	*

i=1
tion for I and I' respectively and is used to estimate contrast where rI and rI' are signal contrast given by standard devia- comparison for SSIM. Listing 3 gives watermark embedding
algorithm.
coefficient and LL3'' is the DWT coefficient of the signed extracted permuted watermark, k is the watermark scaling image. The scaling coefficient k is optimized to be 0.07 for
the binary watermark. The watermark extraction procedure is given by Listing 4.














Figure 6	Block diagram of watermark extraction scheme.


Median Filter (aperture = 3.0 and 5.0).
Wiener Filter (aperture = 3.0).
Scaling (1 → 2 → 1).
Cropping: (a) upper left 1/4 of the watermarked image is cropped and the removed portion is filled with original image, (b) left half of the watermarked image is cropped and the removed portion is filled with original image, (c) upper left 1/4 of the watermarked image is cropped and the removed portion is filled with 1s, (d) left half of the watermarked image is cropped and the removed portion is filled with 1s, (e) left half of the watermarked image is cropped and the removed portion is filled with 0s.

As mentioned in Section 1 that the signed as well as the attacked images are examined for their visual quality by using two full reference metrics PSNR and SSIM.

Results and discussion



The embedded and recovered watermarks X and X* respec- tively are compared and correlated by using the correlation
parameter NC(X, X*) given by Eq. (8).
This section presents results obtained by carrying out the embedding and extraction of watermark into five standard gray-scale host images. These images are Lena, Baboon, Boat, Man and Pepper. These processes are explained below:

Pm Pn
[X(i, j)· X*(i, j)]

Pm Pn
[X(i, j)]2

i=1  j=1
3.7. Robustness studies
Fig. 7(a–e) depicts five standard gray-scale host images – Lena, Baboon, Boat, Man and Pepper of size 256 · 256. Fig. 7(f) depicts original binary watermark of size 32 · 32. Fig. 8(a–e)

To examine the issue of robustness of the proposed embedding scheme, the watermarked images are subject to eight different image processing attacks. These are

JPEG compression (Q = 90, 75, 50, 25 and 10).
Rotation (180°).
Gaussian Blur (radius = 1.0 unit).
Gaussian Noise addition (5% and 10%).
depicts the signed images obtained by embedding the same bin- ary watermark in host images of Fig. 7(a–e) respectively. The computed values of PSNR and SSIM are mentioned on top of these signed images. These values indicate that their visual quality is good. Fig. 9(a–e) depicts watermarks recovered from  signed  images  of  Fig.  8(a–e)  respectively.  The
NC(X, X*) values are mentioned on top of these watermarks. High computed NC(X, X*) values indicate that extraction is quite successful.




92	C. Agarwal et al.















































Figure 7	(a) Lena.bmp, (b) Baboon.bmp, (c) Boat.bmp, (d) Man.bmp, (e) Pepper.bmp and (f) Binary Watermark.


4.2. Executing image processing operations

To examine the robustness of the proposed embedding scheme, eight different image processing operations are executed on all five signed images of Fig. 8(a–e). These attacks are namely: (1) JPEG compression (Q = 90, 75, 50, 25 and 10), (2) Rotation
(180°), (3) Gaussian Blur (radius = 1.0 unit), (4) Gaussian
Noise addition (5% and 10%), (5) Median Filter (aper-
ture = 3.0 and 5.0), (6) Wiener Filter (aperture = 3.0), (7) Scaling (1 → 2 → 1), and (8) Cropping ((a) upper left 1/4 of the watermarked image is cropped and the removed portion is filled with original image, (b) left half of the watermarked image is cropped and the removed portion is filled with origi- nal image, (c) upper left 1/4 of the watermarked image is cropped and the removed portion is filled with 1s, (d) left half of the watermarked image is cropped and the removed portion is filled with 1s, (e) left half of the watermarked image is
cropped and the removed portion is filled with 0s). Table 2 compiles the computation results obtained from signed images after executing the said attacks.
As far as intelligent computing techniques are concerned, ANNs, fuzzy rule based methods, machine learning tech- niques, evolutionary algorithms have been frequently used to implement digital image watermarking in gray-scale and col- ored images. We have discussed in Section 1, the limitations of these pure techniques to carry out this simulation. For example, ANNs suffer from time complexity issues while Fuzzy Inference System (FIS) based methods suffer from the adaptability issue. To overcome this limitation, hybrid intelli- gent techniques are proposed. Neuro-Fuzzy architecture is one such example which has been successfully used in the area of image processing in general [29]. As far as digital water- marking is concerned, these hybrid techniques have been used very recently.


PSNR = 44.8919 dB SSIM = 0.9857

PSNR = 45.3276 dB SSIM = 0.9953













(a)














(c)
















Figure 8	Signed Images: (a) Lena, (b) Baboon, (c) Boat, (d) Man and (e) Pepper.


=1.000


Figure 9	(a–e) Extracted watermarks and their respective NC(X, X*) values obtained from Fig. 6(a–e).

A careful observation of these results indicates the follow-
ing points:

A Neuro-Fuzzy architecture given by Lee and Lu is suc- cessfully used for the first time to implement a novel dig- ital image watermarking scheme in five different gray- scale images.
High computed values of PSNR and SSIM indicate that
signed images have good imperceptibility.
High computed values of NC(X , X *) indicate that water- mark recovery is successful and efficient. Note that NC
value less than 0.5, in case of JPEG (Q = 10), 10% Gaussian Noise and Cropping half of the watermarked image and filling the missing portion with zeros and ones

Table 2  PSNR, SSIM and NC(X, X*) values for attacked Lena, Baboon, Boat, Man and Pepper images.
Attack	Image	PSNR (dB)	SSIM	NC(X, X*)	Extracted





















JPEG (Q = 75)	Lena	33.7320	0.9468	1
Boat	30.7580	0.9534	1
Baboon	34.0424	0.9570	0.9707
Man	34.2261	0.9522	0.9754
Pepper	32.2892	0.9429	0.9871
JPEG (Q = 50)	Lena	32.0685	0.9235	0.9931
Boat	28.8021	0.9250	0.9957
Baboon	32.1784	0.9312	0.9352
Man	31.5007	0.9305	0.9317
Pepper	30.9166	0.9147	0.9262



Table 2  (continued)
Attack	Image	PSNR (dB)	SSIM	NC(X, X*)	Extracted




















JPEG (Q = 10)	Lena	27.5762	0.7421	0.4024



Boat	24.4228	0.6780	0.4057



Baboon	26.7240	0.7465	0.4102



Man	26.2753	0.7628	0.4367



Pepper	26.8561	0.7241	0.4356



Rotation (180°)	Lena	30.5623	0.8634	0.9445



Boat	29.6718	0.8217	0.9442



Baboon	31.7856	0.9023	0.9435



Man	30.7877	0.8725	0.9441



Pepper	31.9826	0.9147	0.9411




(contined on next page)







(contined on next page)










attacks indicate difficult recover or possible nonrecovery of the watermark.
The plot of PSNR, SSIM and NC(X , X *) or signed and
attacked Lena images with respect to k is shown in
NC(X , X *) values get saturated at around k = 0.07 Fig. 10(a–c) respectively. According to Fig. 10(c), as and the respective PSNR and SSIM values tend to
decrease beyond k = 0.07, we consider this value of k to be the optimized one for all our practical computations.
ical quantities – PSNR and NC(X , X *) for signed and (v) Table 3 compiles and compares two different mathemat- attacked Lena image. The results compiled by us are
compared with those proposed by Huang et al. [17] and Motwani et al. [20]. Both these groups consider dif- ferent category of watermarks for their respective embedding/extraction schemes. Huang et al. [17] used a binary image of size 25 · 25 while Motwani et al.
[20] used the weighting factor as watermark generated pixel wise by the Mamdani Fuzzy Inference System. The entry ‘NA’ in Table 3 indicates nonavailability of a specific attack in these papers. It is clear that our Fuzzy-BPN based hybrid watermarking scheme outper-
forms both other schemes for obtaining signed and attacked images except for the cropping attack.
Table 4 compiles computed time spans for embedding and extraction processes. Note that these computed time spans are of the order of few seconds only.
We compute time complexity for all five host images using a system with following specifications: Processor – Intel Core i3-3110M CPU @ 2.40 GHz with 2 GB RAM and Windows 8 (64-bit operating System). Other results are also computed by the same system. Note that the maximum time consumed to embed and extract the binary watermark is about 8.8 s per image. This indi- cates that the embedding and extraction algorithm is quite fast and the proposed hybrid intelligent scheme can be safely used for real time processing of images for watermarking purpose. Due to its faster processing, we intend to use this algorithm for video watermarking on a real timescale as well.
The comprehensive effects of image processing attacks indicate that the embedding algorithm is robust enough against the selected/used attacks. Results compiled in
PSNR,  SSIM  and  NC(X , X *)  values. Table 2 show that the attacked images produce good







52
50
48	1.0
46
44
42	0.9
40
38	0.8
36
34	0.7
32
30
28	0.6
26
24	0.5
22
0.00 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.10	0.00 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.10
K	K

1.1

1.0

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.00  0.01  0.02  0.03  0.04  0.05  0.06  0.07  0.08  0.09  0.10
K
Figure 10	(a) Plot of PSNR vs. scaling parameter, (b) plot of SSIM parameter (k), and (c) plot of NC(X, X*) vs. scaling parameter (k).

marking scheme is quite successful to fulfill these criteria.

Conclusions

This paper presents a novel image watermarking technique which involves three basic characteristics of the HVS model namely – Luminance, Contrast Sensitivity computed using block variance and Edge sensitivity computed using block threshold value. These HVS characteristics are modeled using Lee and Lu’s Fuzzy-BP network to implement watermarking in five gray-scale images – Lena, Baboon, Boat, Man and Pep- per. Lee and Lu’s Fuzzy-BPN is trained by 27 inference rules. For each block of the host image, the trained Fuzzy-BPN pro- duces a single crisp output value which is used to embed a bin- ary watermark of size 32 · 32, into the host image in the transform (DWT) domain.
The major contribution of the proposed scheme is the application of Fuzzy expert system based back-propagation network for gray-scale image watermarking. To examine the robustness of the proposed algorithm, eight different image processing attacks are executed over signed images. Experi- mental results show that the proposed scheme yields high val- ues of PSNR and SSIM, which indicate that the signed and attacked images have good perceptible quality. The watermark is also extracted from the signed and attacked images using Fuzzy-BPN. The embedded and extracted watermarks are
compared and NC(X, X*) parameter is computed. The NC(X, X*) values are found to be within expected range and well above the required threshold value which indicates that
the embedding and extraction processes are well optimized with a good time complexity. Thus, the proposed algorithm is found to be extremely suitable for practical real time appli- cations. The performance of the proposed scheme is compared with pure intelligent techniques [17,20] and it is shown that the hybrid intelligent technique based watermarking scheme out- performs the performance of two other schemes based on pure intelligent methods.

References













As the proposed watermarking scheme is based on a Neuro-Fuzzy hybrid architecture, it is expected to resolve the problems which otherwise affect ANNs and Fuzzy Inference Systems (FIS) for the reasons men- tioned in Section 1. The most important aspect of a com- mercial watermarking application is its requirement of real time implementation of successful embedding, extraction and meeting the robustness criteria. The Neuro-Fuzzy hybrid architecture based proposed water-
Cox I, Kilian J, Leighton FT, Shamoon T. Secure spread spectrum watermarking for multimedia. IEEE Trans Image Process 1997;6:1673–87.
Liu R, Tan T. A SVD-based watermarking scheme for protecting rightful ownership. IEEE Trans Multimedia 2002;4(1):121–8.
Abdallah Emad E, Ben Hamza A, Bhattacharya Prabir. Improved image watermarking scheme using fast Hadamard and discrete wavelet transforms. J Electron Imag 2007;16(3):0330201–09.
Nikolaidis N, Pitas I. Robust image watermarking in the spatial domain. Signal Process 1998;66(3):385–403.
Liu J-C, Chen S-Y. Fast two-layer image watermarking without referring to the original image and watermark. Image Visual Comput 2001;19(14):1083–97.
Briassouli A, Strintzis MG. Locally optimum nonlinearities for DCT watermark detection. IEEE Trans Image Process 2004;13(12):1604–17.
Patra JC, Phua JE, Bornand C. A novel DCT domain CRT-based watermarking scheme for image authentication surviving JPEG compression. Digit Signal Process 2010;20:1597–611.
Hernandez J, Amado M, Perez-Gonzalez F. DCT-domain water- marking techniques for still images: detector performance analysis and a new structure. IEEE Trans Image Process 2000;9(1):55–67.



Jain C, Arora S, Panigrahi PK. A reliable SVD based water- marking scheme. adsabs.harvard.edu/abs/2008arXiv0808.0309J; 2008.
Liu F, Liu Y. A watermarking algorithm for digital image based on DCT and SVD. In: IEEE congress on image and signal processing, Sanya, Hainan, China, vol. 1; 2008. p. 380–3.
Liu R, Tan T. An SVD-based watermarking scheme for protect- ing rightful ownership. IEEE Trans Multimedia 2002;4:121–8.
Xianghong T, Lu L, Lianjie Y, Yamei N. A digital watermarking scheme based on DWT and vector transform. In: Proceeding of international symposium on intelligent multimedia, video and speech processing; 2004. p. 635–8.
Ohnishi J, Matsui K. Embedding a seal in to a picture under orthogonal wavelet transform. In: Proceedings of IEEE interna- tional conference on multimedia and computing system, Hiro- shima, Japan; 1996. p. 514–21.
Meerwald P, Uhl A. A survey on wavelet domain watermarking algorithms. In: Proceedings of SPIE, electronic imaging, security and watermarking of multimedia contents III, vol. 4314; 2001. p. 505–16.
Barni M, Bartolini F, Piva A. Improved wavelet based water- marking through pixel wise masking. IEEE Trans Image Process 2001;10:783–91.
Dawei Z, Guanrong C, Wenbo L. A chaos based robust wavelet domain watermarking algorithm. Chaos Solitons Fractals 2004;22:47–54.
Huang Song, Zhang Wei, Feng Wei, Yang Huaqian. Blind watermarking scheme based on neural network. In: Seventh world congress on intelligent control and automation; 2008. p. 5985–9.
Lou Der-Chyuan, Hu Ming-Chiang, Liu Jiang-Lung. Healthcare image watermarking scheme based on human visual model and back-propagation network. J CCIT 2008;37(1):151–62.
Mei Shi-chun, Li Ren-hou, Dang Hong-mei, Wang Yun-kuan. Decision of image watermarking strength based on artificial- neural networks. In: Ninth international conference on neural information processing, vol. 5; 2008. p. 2430–4.
Motwani Mukesh C, Harris Jr Fredrick C. Fuzzy perceptual watermarking for ownership verification. In: International con- ference on image processing, computer vision, and pattern recognition, Las Vegas, Nevada; 2009.
Agarwal Charu, Mishra Anurag, Sharma Arpita. Digital image watermarking in DCT domain using fuzzy inference system. In: Twenty fourth IEEE Canadian conference on electrical and computer engineering (CCECE 2011); 2011. p. 822–5.
Shieh C, Huang H, Wang F, Pan J. Genetic watermarking based on transform domain techniques. Pattern Recogn Lett 2004;37:555–65.
Huang Hsiang-Cheh, Chen Yueh-Hong, Abraham Ajith. Opti- mized watermarking using swarm-based bacterial foraging. J Inf Hiding Multimedia Signal Process 2010;1(1):51–8.
Tsai Hung-Hsu, Jhuang Yu-Jie, Lai Yen-Shou. An SVD-based image watermarking in wavelet domain using SVR and PSO. Appl Soft Comput 2012;12(8):2442–53.
Loukhaoukha Khaled, Chouinard Jean-Yves, Taieb Mohamed Haj. Optimal image watermarking algorithm based on LWT-SVD via multi-objective ant colony optimization. J Inf Hiding Multi- media Signal Process 2011;2(4):303–19.
Mohanty Saraju P, Ramakrishnan KR, Kankanhalli Mohan. A dual watermarking technique for images. ACM Multimedia 1999;Part 2:49–51.
Melin P, Castillo O, Kacprzyk J, Pedrycz W. Design of hybrid intelligent systems. Fuzzy Information Processing Society; 2007, ISBN: 1-4244-1213-7.
Latif Alimohammad. An adaptive digital image watermarking scheme using fuzzy logic and tabu search. J Inf Hiding Multi- media Signal Process 2013;4:250–71.
Jacobsen Hans-Arno. A generic architecture for hybrid intelligent systems. In: IEEE world congress on computational intelligence, vol. 1; 1998. p. 709–14.
Negnevitsky Michael. Hybrid neuro-fuzzy system: heterogeneous and homogeneous structures. In: World congress on computer science and information engineering; 2008. p. 533–40.
Abraham Ajit. Hybrid intelligent systems: evolving intelligence in hierarchical layers. Stud-fuzz, vol. 173. Berlin Heidelberg: Springer-Verlag; 2005. p. 159–79.
Lee Hahn Ming, Lu Bing Hui. Fuzzy BP: a neural network model with fuzzy inference. ICANN 1994:1583–8.
Gonzalez Rafel C, Woods Richard E, Eddins Steven L. Digital image processing using MATLAB. Pearson Education; 2005. p. 406–7.
