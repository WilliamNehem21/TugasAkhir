Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 284 (2012) 105–124
www.elsevier.com/locate/entcs

Model Decomposition and Stochastic Fragments
Tatjana Petrov1 Arnab Ganguly2 Heinz Koeppl3
Automatic Control Lab, ETH Zurich Switzerland

Abstract
In this paper, we discuss a method for decomposition, abstraction and reconstruction of the stochastic semantics of rule-based systems with conserved number of agents. Abstraction is induced by counting fragments instead of the species, which are the standard entities of information in molecular signaling. The rule-set can be decomposed to smaller rule-sets, so that the fragment-based dynamics of the whole rule-set is exactly a composition of species-based dynamics of smaller rule-sets. The reconstruction of the transient species-based dynamics is possible for certain initial distributions. We show that, if all the rules in a rule set are reversible, the reconstruction of the species-based dynamics is always possible at the stationary distribution. We use a case study of colloidal aggregation to demonstrate that the method can reduce the state space exponentially with respect to the standard, species-based description.
Keywords: cell signaling, continuous-time Markov chain, lumpability


Introduction
Internal dependencies of multi-site post-translational modifications [22] and confor- mational changes [4,21] of signaling proteins reflect the rich internal logic of proteins. Since chemical kinetics [11] operates on states which are based on descriptions of full molecular complexes, often times a model becomes too complex to analyze. This calls for decomposition techniques, i.e. determining the effective dimension of the state-space. Authors in [2,5,7,9] proposed approaches where they first constructed a large state-space and then reduced it. In [14], we however took a bottom-up ap- proach and observed the effective degrees of freedom of each agent, denoted as agent

Heinz Koeppl and Arnab Ganguly acknowledge the support from the Swiss National Science Foundation, grant no. PP 00P 2 128503. Tatjana Petrov acknowledges the support from SystemsX.ch, the Swiss Initiative in Systems Biology.
1 Email: tpetrov@control.ee.ethz.ch
2 Email: gangulya@control.ee.ethz.ch
3 Email: koeppl@ethz.ch

1571-0661 © 2012 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2012.05.018

views. This is because the language Kappa for specifying reactions allows for sym- bolic encoding of reactants by using site-graphs instead of structureless variables. The decomposition is performed by detecting that, for example, modifications over one site of the agents’ interface never condition the state of another site on the inter- face of the same agent. The equivalent observation is exploited in the framework of stochastic fragments [8], [9] – where we directly, without performing decomposition, observe entities of information that are more abstract than the standard species and are called stochastic fragments.
To illustrate the idea behind the decomposition and stochastic fragments, con- sider a programming module A that contains two Boolean variables x and y. The values of variables change as a discrete-time stochastic process, so that the next value of each variable is conditioned only on the current value of that same vari- able. Assume that the module can be instantiated more times, and that all instances are running in parallel. For example, consider two instances of module A: A1 and A2. Let Zn ∈ {(i1, i2, i3, i4)∣i1+i2+i3+i4 = 2} represent the state (i1, i2, i3, i4) at time n, with i1 instances of A setting (x, y) to (0, 0), and i2, i3, i4 instances of A setting (x, y) to (0, 1), (1, 0) and (1, 1) respectively. Due to the independent updates of variables x and y, we can decompose module A to two smaller modules– Ax, that contains only the updates of variable x, and Ay, that contains the updates of variable
y. Let the random variables Xn ∈ {0, 1, 2} and Yn ∈ {0, 1, 2} represent the number of x and y variables that are set to 1 at time n ∈ N. The independence of x and y allows us to compute the correct joint probability of, for example, states with one variable x set to 1, and one variable y set to 1: P ((X, Y )n = (1, 1)) = P (Xn = 1)P (Yn = 1). The sites x and y that are taking value 1 may belong to the same instance of A, that is, Zn = (0, 1, 1, 0), or to different instances of A, that is, Zn = (1, 0, 0, 1). Hence,
P ((X, Y )n = (1, 1)) = P (Zn ∈ {(0, 1, 1, 0), (1, 0, 0, 1)}). Finally, knowing that there is one variable x set to 1, and one variable y set to 1, the conditional probability that
they belong to the same instance of A is P (Zn = (1, 0, 0, 1)∣Xn = 1 and Yn = 1)= 0.5. Along these lines, we show that the decompositions of rule-based systems [14] give rise to counting fragments [9] instead of species, and that we can effectively re- construct information about the concrete system by only analyzing the abstract one.
We start by encoding the rule-based models and assigning the stochastic seman- tics to it. In Section 2, we detail how to encode the rule-based models. In Section 3, we define the fragment-based abstraction, and how to decompose the rule set into smaller independent units. In Theorem 3.6, we demonstrate how these two frame- works relate. In Section 4, we use a model of colloidal aggregation, to demonstrate that the method can exponentially reduce the state space. Finally, in Section 5, we review the practical aspects of using the fragment-based abstraction. In particular, the probability distributions over the species-based system can be reconstructed from the fragment-based abstraction for certain initial distributions. We show in Theorem 5.2 that the reconstruction is applicable on a set of reversible rules, re- gardless of the initial distribution, because the underlying process is a non-explosive, irreducible CTMC with a stationary distribution.

Preliminaries
We embed the framework of classical stochastic chemical kinetics into the formalism of labelled transition systems (LTS) [18]. The stochastic semantics of an LTS is defined as a continuous-time Markov chain (CTMC in further text).
Definition 1.1 (Interpreted labelled transition system – ILTS) A labelled transi- tion system (LTS) is a tuple M = (S, L, a), where
S is a finite set of states,
L is a finite set of labels,
a ∶ S × L × S → R≥0 is the activity of a transition.
Let (Xt) be a CTMC over the state space S with the generator matrix
′	⎧⎪∑l∈L a(s, l, s′)	for s ≠ s′
W (s, s )= ⎨⎪⎪− ∑	′′	a(s, l, s′′)	for s = s′.
For any pair of states (s, s′)∈ S × S, there will be at most one label l ∈ L, such that
a(s, l, s′)> 0, that is, the one which enables the transition from s to s′.
In order to assign a set of properties to states of a LTS, we introduce the set of Boolean variables Var . A property is encoded by a corresponding valuation: x ∶ Var → {0, 1}. The interpretation function L ∶ S → ℘(Var → {0, 1}) assigns to each state s ∈ S a set of valuations. The interpreted LTS (ILTS) M is well-deﬁned, if the sets of properties assigned to different states are disjoint: if s ≠ s′, then L(s)∩ L(s′)= ∅.
Two ILTS’s can be composed by a cross-product operator, if their sets of labels, and their sets of variables are mutually disjoint.
Definition 1.2 (Cross-product of two ILTS) Consider two ILTS: M1, 1  = (S1, L1, a1) and M2, 2 = (S2, L2, a2), interpreted over a set of variables Var 1 and Var 2 respectively, such that L1 ∩ L2 = ∅, and Var 1 ∩ Var 2 = ∅. The product M  = M1, 1 × M2, 2 is an ILTS M  = (S, L, a) defined over the set of variables Var = Var 1 ⊎ Var 2 (the symbol ⊎ denotes disjoint union), such that
S = S1 × S2,
L = L1 ⊎ L2,
a((s1, s2), l1, (s′1, s2)) = a1(s1, l1, s′1), and a((s1, s2), l2, (s1, s′2)) = a2(s2, l2, s′2), for
s1, s′1 ∈ S1, s2, s′2 ∈ S2, l1 ∈ L1 and l2 ∈ L2.
L((s1, s2)) = L1(s1)∣Var ∩ L2(s2)∣Var , where notation L1(s1)∣Var denotes the ex- tension of the function L1 to a set of variables Var 4 .
If the generators of M 1 and M 2 are W1 and W2, then the generator matrix of M equals their Kroenecker sum W = W1⊕W2 [3]. In other words, the stochastic process assigned to ML can be seen as processes M1,L1 and M2,L2 running in parallel.

4 Formally, L1(s1)∣Var = {x ∈ (Var → {0, 1}) ∣ x∣Var1 ∈ L1(s1)}.

We will need the notion of isomorphic LTS’s when considering the generator matrices of the underlying CTMC’s.
Definition 1.3 (isomorphic LTS’s) We say that two LTS M1 = (S1, L1, a1) and M2 = (S2, L2, a2) are isomorphic, written M1 ≅ M2, if their generators are equiva- lent, i.e. if there is a bijection α ∶ S1 → S2, such that W1(s1, s′1)= W2(α(s1), α(s′1)) for all s1, s′1 ∈ S1.
Definition 1.4 (ILTS: Valid abstraction) Consider an ILTS M = (S, L, a), and two equivalence relations: ∼⊆ S × S and ∼l ⊆ L × L. The ILTS M˜ ˜ = (S˜, L˜, a˜) is an abstraction of ML, induced by ∼ and ∼l, such that S˜ = S/∼, L˜ = L/∼, and
1
a˜([s]∼, [l]∼l , [s′]∼)= ∣[s] ∣	∑	a(s, l, s′).
~ s∈[s]∼ ,s′∈[s′]∼ ,l∈[l]∼l
The lumped state [s]∼ is interpreted by the union of interpretations of the containing

states: L˜([s] )= ⋃
s′∈[s]∼
L(s′).

Let [[s]∼, [l]∼l , s′] be the number of transitions from the class [s]∼ towards the state s′ ∈ S via the labels class [l]∼l . The abstraction M˜L˜ = (S˜, L˜, a˜) is valid if
all lumped labels establish the same activity: if l1∼ll2 and s1, s′1, s2, s′2 ∈ S, a(s1, l1, s′1)> 0 and a(s2, l2, s′2)> 0, then a(s1, l1, s′1)= a(s2, l2, s′2);
every two lumped states have the same total activity:	if s1 ∼ s2, then
∑l∈L,s′∈S a(s1, l, s′)= ∑l∈L,s′∈S a(s2, l, s′); and
every two lumped states are backward uniform bisimilar: if s1 ∼ s2, and s ∈ S, then [[s]∼, [l]∼l , s1]= [[s]∼, [l]∼l , s2].
Fix s, s′ ∈ S. The activity between states [s] and [s′] via label [l] l of a valid abstraction can be computed as


a˜([s] , [l] , [s′] )= a(s, l, s′)[[s] , [l]
, s′] ∣[s′]∼∣ .

∼	∼l	∼
∼	∼l


∣[s]∼∣

The condition imposed for an abstraction to be valid is known in the literature as a form of weak lumpability [13], or uniform backward bisimulation. In Section 2.1, the ILTS assigned to a rule-based model is such that each state is interpreted by exactly one valuation of variables from Var . The lumped state [s] is interpreted by a union over interpretations of containing states.
The following Lemma suggests a criterion for showing that an abstraction is valid.
Lemma 1.5 (Valid abstraction) Given an ILTS M = (S, L, a), and two equiv- alence relations: ∼⊆ S × S and ∼l ⊆ L × L, if (i) all lumped labels establish the same activity, (ii) every two lumped states have the same total activity, and (iii) for s, s1, s2 ∈ S, such that s1 ∼ s2, there is a bijection between the sets of predeces- sors of s1(s2) in the class [s]∼, via labels from the class [l]∼, then the abstraction
M˜L˜ = (S˜, L˜, a˜) is valid.






[
1 ∼
]∼




Fig. 1. Valid abstraction of LTS. (left) The LTS M = (S, L, a), such that S = {s, s′, s1, s′ , s2, s′ },
L = {l1, l2, l′ , l′ }. and a(s, l1, s1) = a(s, l2, s2) = a(s′, l′ , s′ ) = a(s′, l′ , s′ ) = k. The abstraction is induced
by S/∼ = {{s, s′}, {s1, s2, s′ , s′ }} and L/∼ = {{l1, l2, l , l }}. (right) Since the condition from Definition 1.4
is met, the abstraction is valid, and the activity between lumped states is a([s1]∼, [l1]∼ , [s]∼) = 2 2 k = k.
The proof is obvious from the Dfn. 1.4.
Rule-based models: Boolean encoding and semantics
In this section, a rule-based system is defined, and it is shown how to associate an ILTS to it. The model is built over a set of agent names A and a set of site names
S. Agents typically model proteins, and sites model protein domains. Each agent has an interface, that is a set of sites – Σ ∶ A → ℘(S). Sites can be internal or binding sites, but not both: Σ = Σi ⊎ Σl. Each site is assumed to be in one of the two modification states, denoted by 0 and 1. In particular, a binding site has a bond if and only if its modification state is 1. We use site graphs to formalize the model.
Definition 2.1 (Site graph) Site graph is a pair G = (V, E), such that V ⊆
{(A, Σi, Σl) ∣ A ∈ A and Σi, Σl ⊆ ℘(S)} is a set of nodes, and the set of pairs of binding sites, E ⊆ {((A, s), (A′, s′)) ∣ (A, Σi, Σl), (A′, Σi′, Σl′)∈ V,s ∈ Σl, s′ ∈ Σl′}, is a set of edges. The set of edges is a symmetric relation.
Definition 2.2 (Annotated site graph) Annotated site graph (V, E) is a site graph (V, E), with an equivalence relation ≡ over the agent-site pairs:  ≡⊆
{((A, s), (A′, s′))∣A, A′ ∈ A,s ∈ Σ(A), s′ ∈ Σ(A′)}.
In rule-based modelling, we use site-graphs to formalize different kinds of objects (we define each of these objects formally in Sec. 2.1):
a contact map is a site graph which summarizes the protein names and their possible bindings [6];
an annotated contact map is an annotated site graph; two sites are grouped by the annotation relation, to formalize that their values depend on each-other (are correlated) in the behaviour of interest (which is stochastic chemical kinetics in this paper);
A reaction mixture map is used for encoding one state of the system, i.e. the whole reaction mixture. It is a site-graph constructed from the contact map, by copying nodes and edges a given number of times.

Encoding reaction mixtures
Let Var be a set of variables assigned to each site of a given contact map:
Var ≅ {(A, v)∣A ∈ A,v ∈ S} ∪ E .
A variable that encodes the value of site v of agent A is denoted by vA. A variable that encodes the bond between sites u and v of agents A and B is denoted by uv A,B . There can be more copies of each agent in the system: assume n(A) copies of agent A, then n(B) copies of agent B etc. Each copy of the agent is identified by a number in its superscript: A1, A2,... A bond may exist between two sites over identified agents – (Ai, v) and (Aj, v′) only if it exists between corresponding sites (A, v) and (A′, v′) in the contact map.
Formally, a reaction mixture map over a contact map (V, E) is a site graph
(Vn, E n) with the set of identified agent names An and site names S, such that
Vn = {(Ai, Σi(A), Σl(A)) ∣ A ∈A and i = 1, ..., n(A)},
and the set of edges is
E n = {((Ai, v), (A′j, v′)) ∣ A, A′ ∈A and i = 1,..., n(A),j = 1,..., n(A′)}.
Let Var n be a set of variables assigned to each site of a full contact map:
Var n ≅ {(Ai, v)∣Ai ∈ An,v ∈ S} ∪ E n.


We denote by vi
the variable assigned to the site v of agent Ai, and by uvi,j
(A,B)

the variable assigned to the bond between sites u and v of agents Ai and Bj. One
valuation of the variables from Var n encodes one reaction mixture. Each state of the ILTS corresponds to one reaction mixture: L(s) ∈ (Var n → {0, 1}). The ILTS counts as many states as there are valuations over Var n, i.e. S ≅ (Var n → {0, 1}), although typically only a small subset of them is reachable.
Encoding transitions
The dynamics of a rule-based model is given by a set of rules. A classical chemical reaction consists of a left-hand-side (lhs), a right-hand-side (rhs), and a rate. The lhs is a set of reactants, which can transform to a set of products, and the transformation occurs at a velocity depending on the reaction rate. Similarly, the lhs and rhs of a rule are sets of agents with different values of sites in their interfaces.
Assumptions. The rule-based model we present here is inspired by a rule-based modelling framework Kappa [6], but we restrict to the following assumptions:
An agent appears at most once in a rule;
An agent cannot be created or deleted by a rule.
Consider the set of propositional formulae P over variables Var generated by the grammar p ≡ 0 ∣ 1 ∣ a ∈ Var ∣ ¬p ∣ p ∧ p. We denote by Var p a subset of variables Var

that occur in the proposition p. The satisfaction region of the formula p is denoted by Jp) = {x ∣ state x satisfies proposition p}.
Definition 2.3 (Rule) A rule is a triple (p, q, k) ∈ P×P×R0 such that Var p = Var q.
Definition 2.4 (Rule-based system) A rule-based system B = (V, E , n, R) is defined by (i) a reaction mixture map (Vn, E n), and (ii) a set of rules R= {R1,..., Rm}.
Two sites in a contact map are in stochastic annotation if they both appear in some rule.
Definition 2.5 (Contact map: stochastic annotation, [8]) Given a rule-based sys- tem B = (V, E , n, R) over a contact map (V, E), its stochastic annotation is the least reflexive and symmetric relation ≡⊆ {((A, v), (A′, v′))∣A, A′ ∈ A, v, v′ ∈ S}, such that
each two sites that form an edge are correlated: E ⊆≡, and
if R = (p, q, k)∈R and {vA, vA′ }⊆ Var p, then ((A, v), (A, v′)) ∈≡, and
the restriction of ≡ to sites of the same agent is transitive: for any agent A ∈ A, such that v, v′, v′′ ∈ Σ(A), if ((A, v), (A, v′)) ∈≡ and ((A, v), (A, v′′)) ∈≡, then ((A, v′), (A, v′′)) ∈≡.
Let us now consider a reaction mixture map (Vn, E n) and let ≡s⊆ Var n × Var n be the least equivalence relation such that (Ai, v) ≡s (Bj, v′) if [A = B, i = j and (A, v) ≡ (A, v′)] or [A ≠ B and (A, v) ≡ (B, v′)]. The equivalence classes [vA] s ∈ Var s , that are induced by the stochastic annotation on the set of variables, are called stochastic fragments.
Rules are defined over the set of variables Var . On the other hand, a reaction mixture is defined over the set of variables Var n. The application of a rule to a reaction mixture is formalized through a concept of agent identification.
Definition 2.6 (Agent identiﬁcation) The agent identification function ν ∶ Var → Var n assigns to each agent’s variable an identified version of it, in such a way that one agent’s site variables are mapped to that agent’s same identified version: if u, v ∈ Σ(A), and ν(u) ∈ Σ(Ai), then also ν(v) ∈ Σ(Ai). Given a proposition p ∈ P over the set of variables Var , the same proposition with variables renamed by agent identification function ν is denoted by p[/ν]. The state s, interpreted by L(s), satisﬁes the lhs of the rule, if for some identification function ν, it holds that L(s)∈ Jp[/ν]).
For example, if a variable vA ∈ Var denotes value of site v in agent A, it can be identified by using instead a variable ν(vA)= v1 ∈ Var n. After agent identification, a proposition p = ¬vA becomes p[/ν] = ¬v1 . A bond variable uv(A,B) ∈ Var can be

identified by a variable ν(uv	)= uv2,4
(A,B)
∈ Var n. The proposition p′ = ¬uA ∧ vA

becomes, for example, p′[/ν]= ¬u3 ∧ v3 . Note that, by definition, an identification
such as p′[/ν]= ¬u3 ∧ v5 is impossible.
Application of a rule to a reaction mixture can be done, if after some agent identification, the lhs of the rule is satisfied by that reaction mixture’s interpretation function. After the rule application, the reaction mixture is updated accordingly,

so as to satisfy the rhs of the rule. The transition is labelled by the name of the rule accompanied with the identification function.
Definition 2.7 (ILTS of a rule-based system) Given a rule-based system B = (V, E , n, R), the ILTS ML = (S, L, a) assigned to the set of rules R in interpre- tation L, written also ML ⊧ R, is defined by
a state space S = {s1, s2,.. .}≅ (Var n → {0, 1}),
set of labels L = {(R, ν)∣ rule R = (p, q, k) ∈ R and identification ν ∶ Var p →
Var n},
for any two states s, s′ ∈ S, a rule R = (p, q, k), and an identification function ν ∶ Var → Var n, the activity of transition from state s to state s′ via label (R, ν) is equal to k, i.e. a(s, (R, ν), s′)= k, if and only if:
L(s)∈ Jp[/ν]), i.e. state s satisfies the lhs of the rule,
L(s′)∈ Jq[/ν]), i.e. state s′ satisfies the rhs of the rule, and
if no variable gets identified to a site v ∈ Var n, then its value remains unchanged after the rule application.
The defined ILTS has dynamics which coincides with the standard way of defin- ing stochastic chemical kinetics over a continuous-time Markov chain [11],[1],[8].
Example 2.8 Consider the following set of rules:
R1 ∶ ¬xA → xA (k1) R1− ∶ xA → ¬xA (k1−) R2 ∶ ¬yA → yA (k2) R2− ∶ yA → ¬yA (k2−).
where R ∶ p → q (k) denotes a rule R = (p, q, k). If there are two copies of agent A,
i.e. n(A)= 2, there are two different agent identifications for the rule R1:


(R1,A ↦ A1)∶ ¬x1 (R1,A ↦ A2)∶ ¬x2
→ x1
→ x2
(k1), and
(k1).


The contact map is a site graph (V, E) with agent names A = {A} and site names S = {x, y}; Set of nodes is given by V = {(A, {x, y}, {})}, and edges E = {}. The set of variables associated to the rule set is Var = {xA, yA}. Since no rule involves both variables xA and yA, the stochastic fragments are Var s = {{xA}, {yA}}.
For n(A) = 2, the reaction mixture map is a site-graph (Vn, E n), where Vn =
{A1, A2}, and E n = {}. For n(A) = 2, the set of variables to encode one state of a CTMC is Var n = {x1 , y1 , x2 , y2 }. Therefore, interpreting state s ∈ S of ILTS
ML = (S, L, a) assigned to the rule set R is such that L(s) ∈ ({x1 , y1 , x2 , y2 } → 
{0, 1}) ≅ {0, 1}4. For example, the state s, with L(s) = (0, 0, 0, 0), denotes the mixture where all site values are set to 0. A part of the ILTS that models rule- based system of this example is shown in Fig.2d.

Example 2.9 Consider the following set of rules:

R1 ∶ ¬bA, ¬aB, ¬ba(A,B) → bA, aB, ba(A,B)  (k1)
R1− ∶ bA, aB, ba(A,B) → ¬bA, ¬aB, ¬ba(A,B) (k1−)
R2 ∶ ¬cB, ¬bC, ¬cb(B,C) → cB, bC, cb(B,C)  (k2)
R2− ∶ cB, bC, cb(B,C) → ¬cB, ¬bC, ¬cb(B,C) (k2−).

The contact map is a site graph (V, E) with agent names A = {A, B, C} and site names S = {b, a, c}; Set of nodes is V = {(A, {}, {b}), (B, {}, {a, c}), (C, {}, {b})}, and the set of edges E is the symmetric closure of the set {((A, b), (B, a)), ((B, c), (C, b))}.
For n(A) = 1, n(B) = 2 and n(C) = 1, the set of identified agents is A =
{A1, B1, B2,C1}, the reaction mixture map is a site-graph (Vn, E n), where Vn =
{(A1, {b}, {}), (B1, {}, {a, c}), (B2, {}, {a, c}), (C1, {}, {b})}. The set of associated variables is Var = {bA, aB, ab(A,B), cB, bC, bc(B,C)}. Interpreting state s ∈ S of ILTS ML = (S, L, a) assigned to the rule set R is a function


L(s)∈ ({b1 , a1 , a2 , ab1,1
, ab1,2
, c1 , c2 , b1 , b2 , bc1,1
, bc2,1
}→ {0, 1}).

A	B	B
(A,B)
(A,B)  B  B  C	C
(B,C)
(B,C)


For example, the state s, such that L(s)= (1, 1, 0, 1, 0, 1, 0, 1, 1, 0) encodes the mix- ture with one complex between agents A1, B1 and C1, and a free B2 agent. The stochastic fragments are Var /≡s = {{bA, aB, ab(A,B)}, {cB, bC, bc(B,C)}}.


A	(x, y)
a)



b)



c)

Fig. 2. Illustration for Example 2.8: a) contact map (CM), b) annotated contact map (ACM), c) reaction mixture map, for n(A) = 2, d) A part of the ILTS assigned to the rule-based system.

a)
c)
contact map
b)

annotated contact map

Fig. 3. Illustration for Example 2.9: a) contact map (CM), b) annotated contact map (ACM), c) reaction mixture map, for n(A) = 1, n(B) = 2, n(C) = 1.
From model decomposition to stochastic fragments
Let M be an ILTS of a rule-based system B = (V, E , n, R). We introduce two valid abstractions of M : (i) a species-based abstraction, that is a standard level of observation in classical chemical kinetics, and (ii) a fragment-based abstraction, specific to rule-based models, first introduced in [9,8]. Both abstractions are induced by the following labels’ lumping:
Definition 3.1 (Lumping labels) Two labels l1, l2 ∈ L are lumped by relation ∼l ⊆ L × L if and only if they are created by identifying agents of the same rule: given a rule R ∈ R, and two identification functions ν1, ν2 ∶ Var → Var n, it holds that l1 = (R, ν1) ∼l (R, ν2)= l2.
Species-based abstraction is done by lumping the states, which are equivalent up to permutation over agents’ identifiers. For example, if a state has one agent A with interface (0, 0), and one agent A with interface (1, 1), it does not matter which interface is of agent A1, and which of A2 (for example, see states s1 and s2 in Fig.4).
Definition 3.2 Let {σA ∈ ({1,... n(A)} → {1,... n(A)}}A be a family of per- mutations over the set {1,... n(A)}, identifiers of agent A.  Each such family of permutations induces another permutation, over the set of variables Var n, Φσ ∶ Var n → Var n:


⎧⎪vσA(i)
if w = vi

Φσ(w)= ⎨⎪ Aσ
(i),σ
A
(j)

⎩	(A,B)
(A,B)

Definition 3.3 (Species-based abstraction) The states s and s′ are lumped, i.e. s∼ps′, if there exists a family of permutations over its identifiers: {σA ∈ ({1,... n(A)} → {1,... n(A)}}A∈A, such that
for all u ∈ Var n, it holds that L(s)(u)= L(s′)(Φσ(u)).
Let the equivalence relation ∼p⊆ S × S be the transitive closure of ∼p. The species-
based abstraction Mp  = (Sp, Lp, ap) is an abstraction of ML induced by lumping
states with ∼	Lp	∼ .

In fragment-based abstractions, two states are lumped if we can permute the identifiers of agents, so that the parts (fragments) of their interfaces match site values. In Example 2.8, there are two fragments: Var s = {{xA}, {yA}}. A state with agent A1 of interface (0, 0) and agent A2 of interface (1, 1) (state s1 in Fig.3), and an agent A1 of interface (0, 1) and agent A2 of interface (1, 0) (state s3 in Fig.3) are lumped by relation ∼f .
Definition 3.4 (Fragments-based abstraction) Let (V, E) be the contact map of a rule-based system B = (V, E , n, R), with stochastic annotation ≡ which induces a set of stochastic fragments Var /≡s = {Var 1,..., Var l}. The states s and s′ are lumped,
i.e. s∼f s′, if there exist l families of permutations over its identifiers, {σ1 }A∈A,
{σ2 }A∈A, ..., {σl }A∈A, such that for i = 1, 2,..., l,
A	A
for all u ∈ Var n, it holds that L(s)(u)= L(s′)(Φσi (u)).
Let the equivalence relation ∼f ⊆ S × S be a transitive closure of ∼f . The fragment-

based abstraction Mf
Lf
= (Sf , Lf , af ) is an abstraction of ML induced by lumping

of the states and labels with ∼f and ∼l respectively.

Lemma 3.5 Abstractions Mp and Mf
are valid. Moreover, equivalence relation

~	Lp	Lf

f is coarser than ∼p: ∼p ⊆ ∼f .
Proof. We first show that the abstraction Mp
Lp

is valid. The proof for showing

that the abstraction Mf
is valid is similar. Consider two species-based states

[	Lf
s1] p , [s2] p ∈ S p , and a rule R ∈R which can be applied to some state in [s1] p .
Let s2, s′2 ∈ [s2] p . By Dfn. 1.4, it suffices to show that there is a bijection between the set of applications of rule R from a lumped state [s2] p towards a state s2 and the set of applications of rule R from a lumped state [s2] p towards state s′2. By Dfn.3.3, there exists a permutation of agent identifiers σA ∶ {1,... n(A)} → {1,... n(A)}, such that for all u ∈ Var n, it holds that L(s2)(u)= L(s′2)(Φσ(u)).
Let s1 ∈ [s1] p  be a state such that a(s1, (R, ν), s2) = k, that is, application
of the rule R = (p, q, k) can be done on state s1 via agent identification function ν ∶ Var → Var n. By Dfn. 2.7, it means that L(s1)∈ Jp[/ν]), L(s2)∈ Jq[/ν]), and all variables that are not identified keep the same values: if v ∈ Var n ∖ {ν(u)∣u ∈ Var }, then L(s1)(v)= L(s2)(v).
Let the identification function ν′ ∶ Var → Var n be such that it first maps a site
u by function ν, and then permutes the identifiers by function Φσ:
ν′(v)= Φσ(ν(v)).
Let s′1 be such that L(s′1) ∈ Jp[/ν′]) and all variables that are not identified by ν′ keep the same values: if v ∈ Var n∖{ν′(u)∣u ∈ Var }, then L(s′1)(v)= L(s′2)(v). Then, a(s′1, (R, ν′), s′2)= k. Moreover, s1∼ps′1, because, by construction of the function ν′, for all u ∈ Var n, it holds that L(s1)(u)= L(s′1)(Φσ(u)).
Now we show that ∼p ⊆ ∼f . Take two states s, s′ ∈ S and assume that s∼ps′.
Then, by Dfn.3.3, there exists a permutation of agent identifiers σA ∶ {1,... n(A)} →




s1 =
A	(x, y)

s2 =
A	(x, y)

s3 =
A	(x, y)


L(s1)= (0, 0, 1, 1)	L(s2) = (1, 1, 0, 0)	L(s3)= (0, 1, 1, 0)

Fig. 4.  Three states s1, s2, s3  S, and their interpretations. States s1 and s2 are lumped in species-based abstraction, i.e. s1 ps2. The witness permutation is σ 1  2,σ 2  1. This is be- cause L(s1)(x1 ) = L(s2)(x2 )(= 0), L(s1)(y1 ) = L(s2)(y2 )(= 0), L(s1)(x2 ) = L(s2)(x1 )(= 1) and
s1 yA	s2 yA	1 . Stochastic annotation gives classes of variables Var /≡s	x , y . Species s1 and s3 are not lumped in the species-based abstraction, i.e. s1, s3 p, but they are lumped in the frag- ment-based abstraction: s1∼f s3. The permutations σ{x}(1) = 2, σ{x}(2) = 1 and σ{y}(1) = 1, σ{y}(2) = 2 justify lumping states s1 and s3 by relation ∼f .
{1,... n(A)}, such that for all u ∈ Var n, it holds that L(s1)(u) = L(s′1)(Φσ(u)). Take
{σ1 }A∈A = {σ2 }A∈A = ... = {σl }A∈A = {σA}A∈A
Then it holds that for all u ∈ Var n, L(s)(u) = L(s′)(Φσ1 (u)), for i = 1,..., l, and hence s2∼f s′2.	◻
We now show a complementary viewpoint to the fragment-based abstraction: it is a result of a particular composition operator over the species-based abstractions of appropriately chosen smaller sets of rules. More specifically, the ILTS M  can be represented as a cross-product of smaller ILTS such that each of the small ILTS is assigned to a subset of rules. To do so, each of the two chosen subsets of rules must be independent, in the sense that they operate on mutually disjoint sets of sites. Finally, we show that the fragment-based abstraction is a cross-product of species-based abstractions of smaller ILTS’s. The theorem is illustrated in Fig.5.
Theorem 3.6 (Decomposing ILTS, Prop. 4.2, [14] extended) Let M be the ILTS assigned to a rule-based system B = (V, E , n, R), and R = R1 ⊎ ... ⊎ Rm the largest partitioning of the rule-set to smaller ones, such that each two subsets of rules have mutually disjoint sets of variables. Then, M can be decomposed in the following form:
ML = M1L1 × ... × MmLm ,
where ILTS Mi,Li (1 ≤ i ≤ m) is an ILTS assigned to a set of rules Ri. Moreover,

fragment-based abstraction of Mf
Lf
is isomorphic to a cross-product of the species-
p

based abstractions of all the smaller ILTS’s – MiLi ’s:


Mf ≡ Mp
Lf	1L1
× ... × Mp	.
mLm

Lemma 3.7 Let ML = (S, L, a), Mf = (Sf , Lf , af ), and Mp
= (Sp, Lp, ap). Let

Lf	iLi	i	i	i
vi ∈ Var be a variable involved in the subset of rules Ri. The partition class [vi] s = Var i ⊆ Var contains exactly the set of variables that appear in the subset of rules Ri.











Fig. 5. Decomposition for Example 2.8: rule-set R = {R1, R−, R2, R−} is split into two smaller of sets of

rules: R1 = {R1, R−} and R2 = {R2, R−}. a) An ILTS M1L
1	2
assigned to rule-set R1, and an ILTS M2L

assigned to rule-set R2. b) The species-based projection M1L1 ; the population-based projection M2L2 .

The Theorem 3.6 states that Mf
Lf
= M1L1
× M2L2 .

Proof. Recall that for any two variables u, v ∈ Var , they are correlated by relation
≡s, i.e. u ≡s v if and only if they belong to the same subset of rules, e.g. Ri. Due to the Dfn. 2.5, for some rule R = (p, q, k), either u, v ∈ Var p, or because of the transitive closure, there is a sequence of rules R1 = (p1, q1, k1), ..., Rl = (pl, ql, kl), such that u ∈ Var p1 and v ∈ Var pl , but Var pi ∩ Var pi+1 ≠ ∅ for i = 1,...,l − 1. Conversely, if two variables u, v ∈ Var appear in the subset of rules Ri, then u ≡s v,
because the partitioning R = R1 ⊎ ... ⊎ Rm is assumed to be the largest one where subsets of rules do not share variables.	◻

Proof. (Thm. 3.6) Let Var n ⊆ Var be the set of variables that identify agents
from the set Var i, and thus Var n = Var n ⊎ ... ⊎ Var n.  Consider the function
α ∶ S → S1 × ... × Sm that takes a state s with valuation L(s), and picks the states s1 ∈ S1, ..., sm ∈ Sm which have the corresponding valuations of subsets of variables Var n,..., Var n: for all v ∈ Var i, let Li(si)(v)= L(s)(v). Then,
1	l

s∼f s′ if and only if s1∼ps′1, s2∼ps′2,... sm∼ps′m,
because the i-th witness family of permutations {σi }A∈A for s∼f s′ is exactly the
′	A	f	p	p

α˜([s]∼f )= ([s1]∼p , ..., [sm]∼p ) so that s = α(s1,..., sm).
is a well-defined bijective function.



?	y	x
k
?		?	?
k−

k

?	y	x
?		?	?
k−


Fig. 6. Example 4.1–colloidal aggregation model.
Moreover, we show that the rate between states sf , sf′ ∈ Sf is equal to the
′
rate between the states α˜(sf ), α˜(sf ) ∈ Sp × ... × Sp .	Let [s]  , [s′]	∈ Sf , a
1	m	∼f	∼f	n
rule R ∈ Ri, and assume that for some identification function ν ∶ Var → Var ,
we have that a(s, (R, ν), s′) = k. The transition with label (R, ν) will happen
only in the ILTS Mp , because rules from other classes do not intersect with

the variables from
i
Ri, and thus Var p.
Therefore, a([s]∼f
, [(R, ν)]∼l
, [s′]∼f ) =

ai(([s1]∼p ,..., [si]∼p ,..., [sl]∼p ), [(R, ν)]∼l , ([s1]∼p ,..., [s′i]∼p ,..., [sl]∼p )).	◻

Case study: Colloidal aggregation
In the following, we illustrate the framework for a simple model of colloidal aggre- gation [15]. Such aggegration dynamics represent the simplest form of self-assembly – a process ubiquitous in molecular cell biology. Microtubuli assembly [10], actin filament polymerization [19] or prion replication [20] fall into this class - to name but a few. With this case-study, we demonstrate that using a fragment-based ab- straction instead of the standard, species-based abstraction brings an exponentially smaller state space.
Example 4.1 Consider a system with particles of type A and B, each having two sites, x and y. Whenever two complexes encounter, they may form a bond between a free site y and a free site x, at rate k 5 . The bond can be released at rate k−. In graphical notation, the model is summarized in Fig.6.
The set of agent types is A = {A, B}, and the set of site types is S =
{x, y}. The contact map is G = (V, E), with V = {(A, ∅, {x, y}), (B, ∅, {x, y})},
E = {((A, y), (B, x)), ((A, x), (B, y))}. Annotated contact map is a contact map
G , with annotation ≡= {((A, y), (B, x)), ((A, x), (B, y))}.  Set of variables is Var = {xA, yA, xB, yB, yx B,A , yx A,B }, and the set of rules is R= {R1, R1−, R2, R2−}, where
R1 ∶ ¬yA, ¬xB, ¬yx(A,B) → yA, xB, yx(A,B)@k, R1− ∶ yA, xB, yx(A,B) → ¬yA, ¬xB, ¬yx(A,B)@k−, R2 ∶ ¬yB, ¬xA, ¬yx(B,A) → yB, xA, yx(B,A)@k, R2− ∶ yB, xA, yx(B,A) → ¬yB, ¬xA, ¬yx(B,A)@k−.

5 The rate of binding does not depend on the size of interacting complexes, as it is often assumed for aggregation models.

Abstractions
Reachable species can be categorized into two types: chains– with two free sites and rings– with no free sites. We say that a chain or a ring is of length i if it has i agents in total. Chains can be classified into four different kinds, depending on

which sites are free. Let the chains be denoted by CAB
(free site x of agent A,

and site y of agent B), CBA, CAA, CBB, and let C○ be the ring of length i. Given
nA = nB = n copies of each of the agents, the species is either CAB, CBA, or C○,
for i = 2, 4,..., 2n, or CAA, CAB, for i = 1, 3,..., 2n − 1. All states lumped in the
species-based abstraction are abstracted by the same multiset of reachable species.
The stochastic annotation induces two stochastic fragment classes: Var s =
{{yA, xB, yxAB}, {yB, xA, yxBA}}. The common feature of all states lumped in the
fragment-based abstraction are: the number of bonds between y site of agent A and
x site of agent B, called AB-bond type in the remaining text, and the number of bonds between y site of agent B and x site of agent A, called BA-bond type in the remaining text.
Assume given two instances of agent A and two instances of agent B, i.e.
n(A) = n(B) = 2, and let the states s1, s2 ∈ S be such that L(s1)(yx1,1	) =
(A,B)

L(s1)(yx1,2
(B,A)
) = 1 (and all other sites are evaluated to 0), and L(s2)(yx1,2	) = 
(A,B)

L(s2)(yx2,2
(B,A)
) = 1 (and all other sites are evaluated to 0). It is easy to inspect

that s1 ∼p s2. The witness permutation over the identifiers is σA(1) = 1, σA(2) = 2, σB(1) = 2, σB(2) = 1. The witness permutation exists, because both states s1 and s2 have a chain of length 3, containing two agents A and one agent B, and one free B.  We use the multiset notation {CAA,CBB} to represent the lumped
f	f
state [s1]∼  = [s2]∼ . In the fragment-based abstraction M	= (Sf , Lf , af ,S ),
p	p	′	L

L(s3)(yx1,1
(A,B)
)= L(s1)(yx2,1
(B,A)
)= 1 (and all other sites are evaluated to 0). Then,

s1 ∼/p s3, but s1 ∼f s3, and the witness family of permutations is: σ(1), the identity
function, and σ(2)(1) = 2, σ(2)(1) = 1, σ(2)(1) = 2, σ(2)(2) = 1. The corresponding
population-based state [s3]∼ is described by a multiset {C○,CAA,CBB} .

Comparing the fragment-based and species-based abstraction
The comparison between the species-based and fragment-based abstraction is sum- marized in Fig. 7. For the presented estimation, we assume the same number of copies of agents A and B: nA = nB = n.
In order to count the number of reachable states, we used the approximation for the number of partitions of n, denoted by P (n) (one partition of n is writing it as a sum of non-negative integers). There exists no closed-form expression for P (n), but


one of the well-known asymptotic limits is P (n)≈ 
  1   e
2n
3  [12]. The connection

between the number of partitions of 2n, and the number of reachable species-based states is the following. Consider one partition n = n1 + ... + nk, n1 ≤ ... ≤ nk, and
a state s ∈ S, such that [s]∼  is represented by a multiset {CAB,...,CAB}. It has


Fig. 7. Species-based and fragment-based abstraction for Example 4.1: for nA nB n, 2n2 reactions are needed to describe the model specified by 4 rules; The number of species is 5n, and the number of stochastic fragments is two. The state space of species-based abstraction counts O en states, and the state space of
fragment-based abstraction counts (n + 1)2 states.

exactly n agents A and n agents B, so it is a reachable state in Mp
. Therefore,

the set Sp
p
counts at least P (n) states. Note that this rough estimation can be

significantly improved with more detailed combinatorial analysis.
Convergence properties
In this section, we reason about the practical aspect of using the fragment-based abstraction instead of the standard, species-based abstractions of rule-based models. The properties, discussed already in [8], are: (i) soundness: the probability of being in a fragment-based state is equal to the sum of probabilities of being in the corresponding species-based states, (ii) invertability: being in a fragment-based state, can one reconstruct the probabilities over the corresponding species-based states, by applying the function γˆ, that is a static property of the set of rules only. The invertability property however holds only for certain initial distributions. If the modeler cannot enforce the system to start reacting in those initial states, the approach becomes useless for reconstructing the species-based dynamics.
We show here that, if all rules are reversible, then the invertability property holds at the stationary distribution, regardless of the initial distribution.
Definition 5.1 (reversible rule) Given a rule-based system B = (V, E , n, R), we say that a rule R = (p, q, k) ∈ R is reversible, if there exists a rule R′ = (p′, q′, k′) ∈ R, such that p′ = q and q′ = p.
Theorem 5.2 Consider ML, the ILTS of a rule-based system B = (V, E , n, R), its

species-based abstraction Mp
Lp
= (Sp, Lp, ap), and its fragment-based abstraction

Mf = (Sf , Lf , af ). Let the corresponding stochastic processes be (Xt), (Yt), and
( Lf
Zt).
Let γ ∶ Sf × Sp → [0, 1] denote the ratio of the number of states lumped to [s]∼

and to [s]∼f :


γˆ([s′]


, [s]


⎧⎪ ∣[s]∼p ∣
) ∶= ⎨ ∣[ ]  ∣


, if s∼ps′


(1)

∼f	∼p
⎪⎩0	, otherwise.

Due to Lemma 3.5, for a given s ∈ S, the function γ([s]∼f
) ∶ Sp → [0, 1] is a

probability distribution, i.e.	∑
[s ]∼p ∈S
γˆ([s]∼f )([s′]∼p )= 1.



Fig. 8. ILTS ML that models the rule-based system, its species-based abstraction Mp , and its frag-

ment-based abstraction Mf
Lf
. The CTMC’s underlying the systems are (Xt), (Yt) and (Zt). Given the

fragment-based state [s]∼ , the function γ ∶ Sf × Sp → [0, 1] is used for reconstructing the probability of being in a species-based state [s]∼p , given the probability of the process Zt being in the fragment-based state [s]∼f .

Moreover, let γt ∶ Sf × Sp → [0, 1], t ∈ R 0 denote the conditional probability that the process Yt is in state [s] p , given that it is in one of the states [s′] p , that it is lumped with s in the fragment-based abstraction:

γt([s′]∼f , [s]∼p ) ∶= P (Yt = [s]∼p ∣Zt = [s′]∼f , s′∼f s).


Note that γt is a time-dependent variable, whereas γˆ following holds:
is a constant.  Then the

(soundness) If γ0 = γˆ, then P (Zt = [s]∼f )= P (Yt ⊆ [s]∼f ), and
(invertability) If γ0 = γˆ, then γt = γˆ, for t ∈ [0, ∞);
(convergence) If (Yt) has a unique stationary distribution, then γt → γˆ, as t → ∞.
The properties of soundness and invertability are discussed in our previous pa- pers [8,9]. The detailed mathematical proofs are given in [17].
Corollary 5.3 Given a rule-based system B = (V, E , n, R), if all rules in R are reversible, then γ → γˆ, when t → ∞.

Proof sketch. Since we deal with rule-based models with a conserved number of agents, the state space is finite, and hence the stationary distribution exists. If all the rules in a rule set are reversible, then the underlying CTMC is irreducible, since each transition in the CTMC is symmetric. Since the CTMC is non-explosive and irreducible, its stationary distribution is unique, and convergence of γt to γˆ follows ([16], Thm.3.6.2).
Example 5.4 (Ex.4.1 Cont’d)
Let nA = nB = 2, and consider the fragment-based state [s]∼f ∈ S , that lumps all
f
states with one bond of type AB, and one bond of type BA. There are four different population-based states which are lumped to [s] f : a multiset containing one chain CAA and one chain CBB, a multiset containing one ring C○ and two chains– CAA
and CBB, and a multiset containing chains CAB and CBA.  The function γˆ is
1	2	2



0.4	0.4

0.35	0.35


0.3


0.25


0.2
0.3


0.25


0.2



0.15


0.1


0.05
0.15


0.1


0.05



0	50	100	150	200	250	300	0	50	100	150	200	250	300


Fig. 9. Example 4.1: Convergence. The conditional probability γt s′ ∼ , s ∼p is computed for for two different random initial distributions, by a numerical integration of the CTMC’s assigned to Mp . We
p
choose a fragment-based state s ∼f which lumps all states with one bond of type AB, and one bond of type BA. The four plots correspond to the distributions of the corresponding four species-based states:
AB	BA	AA	BB
[s1]∼p , containing complexes C2	and C2  , and [s2]∼p , containing complexes C3	and C1  , [s3]∼p ,
containing complexes CAA and CBB, and [s4]∼p , containing complexes C○ and CAA and CBB. The
convergence to γˆ (given in Eq. 2) is evident. We remark that γˆ is uniform distribution for the chosen states, but it is not uniform in a general case.
computed by using the Eq. (2) given in Thm.5.2:
⎛{CAA,CBB} {CAB,CAA,CBB} {CAB,CBA} {CBB,CAA}⎞

γˆ = ⎜	3	1
2	1	1
2	2	3
1	⎟ .	(2)

⎝ 4/12 = 1/4	4/12 = 1/4	4/12 = 1/4	4/16 = 1/4 ⎠
The convergence is illustrated in Fig.9. The reasoning for computing the distribution
γˆ is the following: there are four different states lumped to {CAA,CBB}: either B1
or B2 is free, and either A1 or A2 is the one bound to a B agent via the y site.
There are 16 different states lumped to [s] f : four ways to identify the A and B which form the bond yxAB, combined with one of four ways to identify the bond yxBA.
It is worth noting that the function γˆ is not necessarily uniform. For example, for nA = nB = 3, the fragment-based state with 3 bonds of type AB and 3 bonds of type BA has three different population-based states, described by the multisets:
{C6○}, {C2○, C4○} and {3C2○}. The γˆ function in this case is


⎛
γˆ = ⎜
{C6○}	{C2○, C4○}	{3C2○} ⎞

⎝12/36 = 1/3 18/36 = 1/2 6/36 = 1/6⎠
Conclusions
We have extended the framework for analysing the stochastic semantics of rule- based models, by showing that if all the rules in a rule set are reversible, the reconstruction of the probabilities over species-based states is always possible at

the stationary distribution.
The analysis is done on a novel formalism of Boolean encodings of site-graphs and interpreted labelled transition systems, rather than on syntactic analysis of Kappa expressions, as it was done in previous related works [9], [8]. We showed in this formalism a complementary viewpoint to the fragment-based abstraction: it is a result of a particular composition operator over the species-based abstractions of appropriately chosen smaller sets of rules.
Finally, we demonstrated that the state space of the fragment-based abstraction can be exponentially smaller than the one of the species-based abstraction, on an example of colloidal aggregation.
Some of the questions which we plan to address in the future work are: (i) re- moving the assumptions about agent birth, deletion and the same agent appearing in one rule; (ii) relaxing the decomposition criterion by exploiting additional con- servation laws; (ii) a tool which computes the decomposition, the fragment-based variables, and the γˆ function; (ii) error measure for non-exact abstractions.

References
Baier, C., B. Haverkort, H. Hermanns and J.-P. Katoen, Model-checking algorithms for continuous-time Markov chains, IEEE Transactions on Software Engineering 29 (2003), p. 2003.
Borisov, N. M., N. I. Markevich, J. B. Hoek and B. N. Kholodenko, Signaling through receptors and scaffolds: Independent interactions reduce combinatorial complexity, Biophysical Journal 89 (2005),
pp. 951—966.
Buchholz, P. and P. Kemper, Kronecker based matrix representations for large Markov models, in:
Validation of Stochastic Systems, Lecture Notes in Computer Science 2925, 2004, pp. 256—295.
Changeux, J.-P. and S. J. Edelstein, Allosteric mechanisms of signal transduction, Science 308 (2005),
pp. 1424–1428.
Conzelmann, H., J. Saez-Rodriguez, T. Sauter, B. N. Kholodenko and E. D. Gilles, A domain oriented approach to the reduction of combinatorial complexity in signal transduction networks, BMC Systems Biology 7 (2006).
Danos, V. and C. Laneve, Core formal molecular biology, Theoretical Computer Science 325 (2003),
pp. 69–110.
Feret, J., V. Danos, J. Krivine, R. Harmer and W. Fontana, Internal coarse-graining of molecular systems, Proceedings of the National Academy of Sciences of the United States of America 106 (2009),
pp. 6453–6458.
Feret, J., T. A. Henzinger, H. Koeppl and T. Petrov, Lumpability abstractions of rule-based systems, MeCBIC (2010), pp. 142–161.
Feret, J., H. Koeppl and T. Petrov, Stochastic fragments: A framework for the exact reduction of the stochastic semantics of rule-based models, http://en.scientificcommons.org/52625730 (2010), accepted in International Journal of Software and Informatics.
Gardner, M. K., B. D. Charlebois, I. M. J´anosi, J. Howard, A. J. Hunt and D. J. Odde, Rapid microtubule self-assembly kinetics, Cell 146 (2011), pp. 582–592.
Gillespie, D., Exact stochastic simulation of coupled chemical reactions, Journal of Physical Chemistry
81 (1977), pp. 2340–2361.
Hardy, G. H. and S. Ramanujan, Asymptotic formula in combinatory analysis, Proceedings of the London Mathematical Society S2-17(1) (1918), pp. 75–115.
Kemeny, J. and J. L. Snell, “Finite Markov Chains,” Van Nostrand, 1960.

Koeppl, H. and T. Petrov, Stochastic semantics of signaling as a composition of agent-view automata, Electronic Notes in Theoretical Computer Science 272 (2011), pp. 3 – 17.
Meakin, P., Models for Colloidal Aggregation, Annual Review of Physical Chemistry 39 (1988), pp. 237– 267.
Norris, J. R., “Markov Chains (Cambridge Series in Statistical and Probabilistic Mathematics),” Cambridge University Press, 1998.
Petrov, T., A. Ganguly and H. Koeppl, Markov chain aggregation and its applications to combinatorial reaction networks (in preparation), BISON group, ETH Zurich.
Plotkin, G. D., A structural approach to operational semantics, Journal of Logic and Algebraic Programming 60-61 (2004), pp. 17–139.
Pollard, T. D., Regulation of actin filament assembly by Arp2/3 complex and formins., Annual review of biophysics and biomolecular structure 36 (2007), pp. 451–77.
Rubenstein, R., P. Gray, T. Cleland, M. Piltch, W. Hlavacek, R. Roberts, J. Ambrosiano and J.-I. Kim, Dynamics of the nucleated polymerization model of prion replication, Biophysical Chemistry 125 (2007), pp. 360 – 367.
Smock, R. G. and L. M. Gierasch, Sending signals dynamically, Science 324 (2009), pp. 198–203.
Walsh, C. T., “Posttranslation Modification of Proteins: Expanding Nature’s Inventory,” Roberts and Co. Publisher, 2006.
