Egyptian Informatics Journal 22 (2021) 1–13








Full length article
An approach based on the ifcOWL ontology to support indoor navigation
Evelio González ⇑, José Demetrio Piñeiro, Jonay Toledo, Rafael Arnay, Leopoldo Acosta
Departamento de Ingeniería Informática y de Sistemas, Avenida Astrofísico Francisco Sánchez S/N. CP 38206, Universidad de La Laguna, Spain



a r t i c l e  i n f o 

Article history:
Received 3 September 2019
Revised 20 January 2020
Accepted 21 February 2020
Available online 6 March 2020

Keywords: Applications Decision support Ontology
Software experience Indoor navigation
a b s t r a c t 

This paper presents an indoor navigation support system based on the Building Information Models (BIM) paradigm. Although BIM is initially defined for the Architecture, Engineering and Construction/Facility Management (AEC/FM) industry, the authors believe that it can provide added value in this context. To this end, the authors will focus on the Industry Foundation Classes (IFC) standard for the formal repre- sentation of BIM. The approach followed in this paper will be based on the ifcOWL ontology, which trans- lates the IFC schemas into Ontology Web Language (OWL). Several modifications of this ontology have been proposed, consisting of the inclusion of new items, SWRL rules and SQWRL searches. This way of expressing the elements of a building can be used to code information that is very useful for navigation, such as the location of elements related to the actions desired by the user. It is important to note that this design is intended to be used as a complement to other well-known tools and techniques for indoor nav- igation. The proposed modifications have been successfully tested in a variety of simulated and real sce- narios. The main limitation of the proposal is the immense amount of information contained in the ifcOWL ontology, which causes difficulties involving its processing and the time necessary to perform operations on it. Those elements that are considered important have been selected, removing those that seem secondary to navigation. This procedure will result in a significant reduction in the storage and semantic processing of the information. Thus, for a system with 1000 individuals (in the ontological sense), the processing time is about 90 s. The authors regard this time as acceptable, since in most cases the tasks involved can be considered part of the system initialization, meaning they will only be executed once at the beginning of the process.
© 2020 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial Intel-
ligence, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creative-
commons.org/licenses/by-nc-nd/4.0/).






Introduction

The widespread adoption of the Building Information Models (BIM) paradigm in Architecture, Engineering and Construction/ Facility Management (AEC/FM) industry has brought undoubted benefits over previous methods: cost reduction during the design and construction, better interoperability among stakeholders, bet- ter management of the life cycle of buildings (planning, construc- tion, maintenance, dismantling), among others [1]. Furthermore, it has made the actors involved more likely to share the ‘‘semantic” information of buildings, which implies a collective improvement of knowledge. In this context, it is thus necessary to define a formal representation that acts as a standard, the Industry Foundation Classes (IFC), an open standard for over 15 years. In this context,

* Corresponding author.
E-mail address: ejgonzal@ull.es (E. González).
Peer review under responsibility of Faculty of Computers and Information, Cairo University.
Zhong et al. [2] carried out a scientometric analysis and critical review of ontological research related to construction, analyzing 199 references published between 2007 and 2017. From this anal- ysis, the authors observed that keywords in those works naturally evolved from ‘‘project management” and ‘‘knowledge manage- ment” to ‘‘building information modeling” and ‘‘compliance con- trol”, coinciding in time with the rise of the BIM in the field of AEC. Moreover, three challenges were identified for future research: automated or semi-automated generation of domain ontologies from documents, semantic enrichment of IFC schema, and deep learning-based OBIE (Ontology-based Information Extraction) for automated compliance checking.
The motivation of BIM with regard to data reuse and compati- bility between heterogeneous applications could suggest interact- ing with the concept of Semantic Web (SW). Faithfully translating the IFC schemas into OWL (Ontology Web Language) is equivalent to generating an ontology from IFC schemas, and would yield sub- stantial advantages, among which the authors highlight the follow- ing [3]:


https://doi.org/10.1016/j.eij.2020.02.008
1110-8665/© 2020 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial Intelligence, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



Reuse of existing ontologies both in the field of AEC and other areas.
Facilitate the use of SW tools, especially those related to searches, such as SPARQL.
Provide the logical formalism that the EXPRESS language (in which IFC schemes are usually expressed) lacks.
Communication with external data sources.
New use cases and applications.
Encourage open publication of models
Use reasoning techniques developed for the SW [4].
Discover and use resources present in the SW.
Soft integration with the Internet of Things (IoT) or with Geo- graphic Information Systems (GIS).
Support for stakeholders to make faster decisions with more detailed global information.
More intuitive manipulation of building information [5].
More widespread use due to the wider community of users, and more possibilities to develop technology in this sense.
It allows predefined relations, restricted constructions and expressiveness, avoids fragmentation and favors the appear- ance of de facto standards [6].

These possible advantages have encouraged several researchers to implement a set of more or less functional IFC-OWL conversions, despite the fact that IFC has a rather complicated and compressed structure. One of these implementations is ifcOWL [3,7–12]. This ontology maintains the strong structure of the original EXPRESS version [13], although some expressiveness is lost with the conver- sion [14] due to certain problems, such as the conversion of list data types. In addition, ifcOWL is a huge ontology which, due to its size, poses serious difficulties for use in real applications requir- ing consultation or reasoning [7]. However, the advantages obtained with the conversion compensate for these disadvantages, and it is reasonable to affirm that ifcOWL is a reliable version of the IFC schema. This ontology also has two interesting features in favor of its adoption: its growing use and the support of an organization of experts, such as the buildingSMART Linked Data Working Group. Although BIM is not generally considered suitable for naviga- tion [15], it provides some promising features in this regard, such as semantic information about building elements and their use, the properties of each building element, the spatial relationships between those elements and their geometric representation [16]. Furthermore, the very nature of ifcOWL (focused on the description of building elements) allows it to be integrated with complemen- tary approaches for indoor navigation. The aim of this paper is to leverage these possible advantages by proposing some uses of ifcOWL for an indoor navigation system, and in particular to deter- mine the global position of the elements in the navigation map and to fix the destination position based on the orders of the users. This paper, although it involves more the field of navigation of autono- mous systems, can be categorized under the topic of semantic enrichment of IFC schema, identified in Ref. [2]. It is important to note that this design is not intended to be used as a standalone sys- tem, but as a complement to other well-known tools and tech- niques for indoor navigation. In this regard, several ontological approaches applied to navigation tasks have been implemented independently from BIM. For example, Kun, Varga and Toth [17] develop the ILONA system, a flexible positioning framework for indoor environments. The system uses an ontology to describe the indoor environment in a detailed way that, as in the case of OntoNav, is geometric and semantic. The main elements of the model are gateways and zone groups. Dudas, Ghafourian and Kar- imi [18] present an ontology and an algorithm for Indoor Routing called ONALIN that takes into account the individual needs and preferences of users according to the standards of the American with Disabilities Act (ADA). However, in this paper, the authors
are interested in exploring BIM’s potential. Sriharee [19] proposes a prototype for indoor navigation using symbolic information (mainly spatial object description) described by OWL. Anagnos- topoulos et al. [20] introduce OntoNav to a user-centric integrated indoor navigation mechanism based on an ontological framework that uses a hybrid model (geometric and semantic) of its environ- ment encoded in OWL. Scholz and Schabus [21] propose an ontol- ogy for indoor navigation in a production environtment that consists of mainly corridors.
The article can be understood as a proposed methodology to make the information contained in an IFC file useful for navigation purposes. This methodology, which includes some extensions on the ifcOWL ontology, allows matching the possible actions desired by a user with the different types of room. These two objectives are achieved, as will be seen below, in a reasonable processing time.
The rest of this document is structured as follows. In Subsection 1.1, the concept of ontology and the Semantic Web is briefly dis- cussed. The authors consider it important to introduce the reader to these concepts, which are the basis of the ensuing work. In Sub- section 1.2, BIM and the structure of IFC are presented in more detail. Subsection 1.3 summarizes work related to ontology appli- cations in the field of the AEC, especially those based on ifcOWL. This recapitulation will prepare the reader for the description of the system implementation contained in Section 2. The results of the application of the approach are shown in Section 3 and several open lines of future work are suggested in Section 4. Finally, the conclusions are presented.


Brief introduction to the semantic web: The concept of ontology

The World Wide Web contains a large and growing amount of information that is mainly encoded using HTML. This language is based on tags intended mainly to instruct a web browser how the information should be displayed, and not on the rational orga- nization of the information. This implies that the power of its use is conditioned by the ability of users to navigate between heteroge- neous sources of information and avoid saturation and data over- load. The Semantic Web concept [22,23] implies the goal of encoding information in a way that is understandable to both humans and computer systems. This goal has involved the devel- opment of new and increasingly complex forms of knowledge expression for true semantic interoperability.
As can be deduced from the above, the paradigm for the opera- tion of the semantic Web implies the need for formal definitions of the domain models. These formal models (called ontologies) should include the definition of the terms used and their relation- ships explicitly and more effectively than thesauri or metadata. In the field of Artificial Intelligence, an ontology is ‘‘an artefact consti- tuted by a specific vocabulary used to describe a certain reality, along with a set of explicit assumptions related to the desired meaning of the vocabulary” [24]. Although Studer’s [25] is the best-known definition of ontology (‘‘a formal, explicit specification of a shared conceptualization”), other authors have proposed other definitions that adjust the meaning of an ontology in a less ambiguous manner [26–29]. These definitions integrate the ideas of explicit representation of knowledge [30] and the method of communication of the actors involved in a domain (human- human, human-computer or computer-computer [31]). Ontologies are also defined as ‘‘a well-founded mechanism for the representation and exchange of structured information” [32], so they have been suc- cessfully applied in several fields.
Ontologies consist mainly of vocabulary, but this is not enough to express the intended meaning when planning a new design. A functional ontology is composed of concepts (abstract terms gener- ally organized into taxonomies), relationships (links between non-



hierarchical concepts), instances (concrete existences of abstract concepts) and axioms (valid rules in the domain model).
The growing interest in ontologies has given rise to new forms of expression of knowledge which add the capacity to deduce new knowledge that is not explicitly expressed from an analysis of existing data. In this way, systems are provided with a greater capacity for reasoning and a common way of expressing knowl- edge between the different systems that collaborate toward achieving the same goal. The World Wide Web Consortium (W3C) defines the Resource Description Framework (RDF) as the ‘‘standard model for data interchange on the Web” [33]. RDF repre- sents an increase in semantic interoperability, but it is insufficient for the needs of the SW. In practice, other languages with more possibilities are used, such as OWL, for building ontologies [34– 36].


BIM and IFC schema structure

There are several formal definitions of what a BIM is. Some rel- evant definitions are given below.

‘‘A BIM is a digital representation of physical and functional char- acteristics of a facility. As such it serves as a shared knowledge resource for information about a facility forming a reliable basis for decisions during its lifecycle from inception onward”. [37]
‘‘Discrete set of electronic object-oriented information used for design, construction and operation of a built asset”. [38]
‘‘Shared digital representation of physical and functional character- istics of any built object (including buildings, bridges, roads, etc.) which forms a reliable basis for decisions”. [39]

As is to be expected from these definitions, BIM is used in sev- eral areas of interest such as: implementation and adoption, energy efficiency and simulation or training in academia and industry, among others [40]. However, the use of BIMs produces a large amount of data, since any type of information in the AEC field should be described in the models. In addition, this immense amount of data must be adequately handled by very heteroge- neous sectors [41].
IFC is a neutral platform and open-data model for representing most of the components of a physical building [42]. It was pro- posed by buildingSMART, which defines it as a ‘‘conceptual data schema and an exchange file format for BIM data” [43]. IFC specifica- tions include entities that define building elements (walls, beams, doors.. .), geometry features (extruded solid area, swept area solid.. .) and basic constructs (cartesian points.. .). IFC is mainly encoded in EXPRESS schemas (although an XML schema specifica- tion is also available), which contain hundreds of entities orga- nized in an object-based hierarchy. However, the promising impact that the advantages offered by IFC should have is mitigated by a set of severe constraints [44]:

IFC is suitable for the production and exchange of information but it does not have an optimal structure for searching and ana- lyzing results.
The use of IFC schemas has contributed to the adoption of the BIM approach in numerous applications; however, the rigidity of its schema places serious limitations on the integration of heterogeneous sources of information from different domains [45].
It is highly redundant to cover the needs and point of view of the various AEC sectors, which complicates its use [46].
Lack of formal rigidness.
Limited reuse and interoperability.
Lack of built-in distribution [10].

IFC schema are structured into four layers [47]: resource layer, core layer, interoperability layer and domain/application layer. IFC allows new classes to be defined as subclasses of an existing class, from which they inherit their properties. Fig. 1 shows an extract of the IFC hierarchy. All IFC classes (except resource classes) are derived from the IfcRoot superclass. This class allows establishing basic attributes of the model such as identity, description and own- ership. IfcRoot yields three fundamental classes for the categories defined: objects (IfcObjectDefinition), relationships (IfcRelation- ship) and properties (IfcPropertyDefinition). Each of these three classes has its respective inheritance tree of subclasses. An in- depth analysis of the IFC structure can be found in Ref. [48] and in the corresponding technical documentation [49].





Fig. 1. IFC basic hierarchy.



Related work on BIM and ontologies: ifcOWL

There are quite a few references to the use of ontologies in fields related to the construction industry, but it is also true that, in gen- eral, the use of SW technologies in AEC is not as broad as initially expected [50]. As indicated above, this paper will focus on the use of ontologies based on BIM standards, and in particular on the use of ifcOWL.
Liu et al. [51] establish a model for estimating the cost of build- ing construction based on ontologies. These ontologies mainly refer to the model concept, work item and construction conditions. For the reasoning they use, among other tools, Jess and SWRLJess- Bridge. In another work, Barbau et al. [52] describe the OntoSTEP project, which involves the development of a plugin for the Protégé tool. This plugin is capable of translating STEP’s EXPRESS schemas into OWL. In [42], Farias et al. present another semi-automatic method to generate an OWL ontology for COBie, another BIM stan- dard. Cursi, Simeone and Coraglia [53] present a prototype for inte- grating a building information model with a series of ontologies that act as a knowledge base. Lee, Eastman and Solihin [54] pro- pose a new way of formalizing the knowledge domain in the con- text of building information modeling. This proposal, based on ontological principles, aims to reduce the redundant requirements and rules for the exchange of information when model views are defined. Zhang, Beetz and de Vries [44] propose a general frame- work based on expanded SPARQL functions with a dual purpose: to simplify the search syntax and to retrieve useful information related to 3D geometry based on the requirement to check the use cases. Krijnen and Beetz [55] develop a SPARQL implementa- tion that works directly on a binary serialization format for IFC instance models. This format is based on ISO 10303-26 and relies on the HDF5 standard, resulting in files that are 2–3 times smaller than RDF databases. Terkaj and Pauwels [7] analyze attempts in the literature to obtain a usable ontology from IFC EXPRESS sche- mas. From this analysis, these authors conclude that the ontology should be used initially to allow the IFC instances conversion into RDF graphs, and they propose a new conversion procedure. Ma and Liu [56] propose a mechanism for transforming BIM data into an ontology for developing BIM-R applications (BIM applications with reasoning support) using freeware components. This approach is based on OWL, SWRL and SPARQL-DL for ontology statements, rules and queries respectively.
In the literature, there are several works in this regard that doc- ument some problems with the IFC-OWL conversion. These prob- lems focus especially on those structures allowed in EXPRESS that are shared differently in OWL. One example is the ordered lists in EXPRESS, where each item represents a concept according to its position in the list. In OWL, it would be translated by a succession of rdf:list-rdf:first-rdf:rest items, which is considered in depth in Ref. [3]. This makes it difficult to enjoy the full semantic power of the resulting ontologies. Despite these problems, several conver- sions are available, since the transition from IFC to OWL is not unique and each author has adapted the conversion to the specific needs of the user [55]. Some of these proposals are analyzed and compared in Ref. [9], where the need for a standard for the effec- tive use of the ontology is also confirmed.
Focusing on the ifcOWL, Schevers and Drogemuller [57] develop a primitive (and incomplete) version of a unidirectional conversion of an IFC schema to an OWL ontology for research purposes. Later, Pauwels and Terkaj, based on several previous studies such as [6], propose a conversion procedure from EXPRESS schema to OWL ontology [9]. That work can be regarded as the basis of the ifcOWL ontology. In Ref. [5], a semi-automatic method is proposed for gen- erating an ontology called IfcWoD to yield a better ontology for linking IFC data in the field of the Semantic Web. This ontology uses terms included in the ifcOWL. The authors show that the
two ontologies together (ifcOWL and ifcWoD) simplify the syntax and response time when searching. Terkaj and Sojic [11] propose improving the ifcOWL ontology by including new classes that explain the relationships between existing classes, especially those relationships between IFC object occurrences, object type and pre- defined property sets. In Ref. [13], the authors analyze three approaches to reference checking for AEC to obtain a benchmark performance.
In Ref. [16], a BIM-based model (called BO-IDM) is defined that provides highly detailed semantic information. This model repre- sents a building using 18 classes. In Ref. [58], the authors detail a Semantic Web-based approach to defining building views from the ifcOWL ontology. This ontology, expressed in the OWL/RDF serialization, is combined with SWRL logical rules. The use of these logical rules makes it possible to outline the definition of new con- cepts (ExternalDoor, BuildingEnvelope, etc.) and thus increase the expressiveness of the models, while at the same time extracting subgraphs from the ontology for processing as building views. These building views contain the necessary and sufficient informa- tion needed to properly execute a building process. Pauwels et al.
[8] propose an improvement of the ifcOWL ontology through an alternative representation for geometric data. This representation relies on the inclusion of a WKT (Well-Known Text) serialization. Another improvement proposed by Pauwels and Roxin [12] is Sim- pleBIM, a simplification of building models defined in ifcOWL graphs that removes the geometry part and reuses new properties defined by ifcWoD.
Other authors have proposed extensions of the ifcOWL ontology by including other well-known ontologies. This is the case of Chbeir et al. [59], who have developed a knowledge-based model for storing building information. This new model, called OntoH2G, extends, among other ontologies, the Semantic Sensor Network Ontology (SSN) and the W3C Geospatial Ontology (W3CGeo). Bus et al [60] use ifcOWL to automate the model checking for compli- ance against normative regulations (particularly the French one). To this end, they define a Regulations ontology that uses the terms of a simplified version of ifcOWL and expands it with certain com- plex concepts related to regulation. Finally, this paper will cite the work of Gómez-Romero et al. [45], which presents a fuzzy exten- sion of the ifcOWL ontology.
As a summary, Table 1 shows a reduced set of extensions pro- posed in the literature for the ifcOWL (those cited in this section), with examples of the terms implemented.


Material and methods

In this section, the authors will describe the system implemen- tation process, which includes the use of ifcOWL to support well- known techniques in indoor navigation. This description also includes a brief analysis of the software tools used in the process. Before starting with this description, it is important to empha- size that, in the context of this project, the IFC files can be used as a source model that will be complemented with the information provided by the different sensors included in the navigation sys- tem. In this sense, some recent works already propose extracting the information contained in an IFC file to determine evacuation routes for people with mobility problems [61] or support for robot navigation [62,63]. An interesting work in this regard is that of Taneja et al. [64], who describe a series of algorithms for automat- ically generating indoor navigation models from BIM. However, the scarcity of references in the literature shows that the benefits of this application have not been sufficiently exploited, especially as more and more BIM models become available (especially in public buildings). In the context of this work, the information contained in the IFC file can be used to support the construction of a Robot


Table 1
Proposed Ifcowl Extensions in the Literature (Examples).


Reference	Implemented ontology/ vocabulary

Other ontologies involved in the work

Examples of classes/properties implemented

Isikdag, Zlatanova and Underwood (2013)
BO-IDM	WallPart, SlabPart, BeamPart, DoorPart, Storey_ID, OpeningDirection

Pauwels et al. (2015)	OWLList, OLO	coordinates_IfcCartesianPoint, IfcPolyLoop.Polygon, IfcPolyLine.Points,
IfcCartesianPointList3D.CoordList

Goméz-Romero et al. (2015)
de Farias, Roxin and Nicolle (2015)

Pauwels and Roxin (2016)


Belsky, Sacks and Brilakis (2016)
Zhang, Beetz and de Vries (2018)
Similar_to_IfcMaterial, High_IfcWindow, Wide_IfcWindow

ifcWoD	isDefinedBy_IfcObject, isPredecessorTo_IfcProcess, hasSimpleProperty, hasComplexProperty, hasReferenceValue, has SimpleValue, hasListValue, hasEnumeratedValue, hasTableValue, hasBoundedValue
SimpleBIM	Area, Base_Constraint, Base_Extension_Distance, Base_Offset, Base_is_Attached, Category, Enable_Analytical_Model. ExtendToStructure, Family, Family_and_Type, isExternal, Length, LoadBearing, Location_line, Phase_Created, Reference, Related_To_Mass. Room_Bounding,
Structural, Structural_Usage
is_made_of, is_a, is_related_to, is_part_of, Face, orientation, proportion, is_adjacent_to, create_relationship
BimSPARQL	hasBodyGeometry, hasAABB, hasMVBB, hasOverallHeight, hasSurface, hasUpperSurface, hasVolume, hasSpaceArea, hasWindowArea, hasGrossWallArea, touches, disjoints, intersects, within, equals,contains, distance, distanceZ, distanceXY, hasUpperStorey, isLocatedInStorey

Chbeir et al. (2019)	OntoH2G	SSN, QUDT, W3C Time
Ontology, W3CGeo
Occupant, Action, Need, Driver, BuildingInfrastructure, BuildingAppliance, BuildingState, EconomicProperty, PhysicsProperty, OccupantStateProperty





Operating System (ROS) navigation map [65]. A way to do this is to extract a map in SVG format from the IFC file and export it to a gra- phic format compatible with ROS, like PNG files. Conversion tools such as ifcConverter [66] can be used to generate the SVG file. An interesting feature of this tool is that it allows using command lines to select the classes of elements to be displayed in the output. As an example, Fig. 2 shows the conversion of the IFC file for the duplex apartment model available in Ref. [67]. However, despite this interesting contribution from IFC to the project, the aim of this paper is to focus on the use of techniques that take advantage of the semantic approach.
Fig. 3 shows the proposed flow for the system implemented with the software applications used. RDF statements are obtained from the supplied IFC file. These statements (and those that could be formed from the observations made by the system sensors) will be treated together with the ifcOWL ontology and a set of items (classes, properties and individuals) proposed as an extension of the ontology. The system implemented performs knowledge infer- ence operations on the resulting items. The result of these opera- tions is included in the ontology. If the user communicates their
intention to carry out one of the anticipated actions through the corresponding adapted interface, a query will be made to the ontology module, which will respond with a list with the locations of possible destinations. The authors will describe the system in greater detail in what remains of the section. As we can see, this method seeks an improved representation of the navigation envi- ronment. In this way, strictly geometrical data is included, as well as high-level qualitative information and relationships with other objects in the environment, as indicated in Ref. [68]. Thanks to this approach, semantic maps can be used as an element to improve the navigation and as a basis for decision-making. The ontology will be nourished both by the information contained in the IFC file and by the information collected by the different sensors available after the recognition algorithms are applied to the data provided. Once this information is stored, the ontology can interact with the semantic map to make navigation decisions. This proposal differs from the references mentioned above, which are more oriented toward improving searches within IFC files and toward static ontologies in terms of their content.





Fig. 2. Example of IFC to SVG conversion.




Fig. 3. Proposed flow in the system implemented.


The functionality is achieved by expanding the ifcOWL ontology with simple but powerful modifications, as will be seen later in this section. The method applied also allows for the inclusion of new elements in a simple way. Accordingly the authors wish to show the potential of reusing ontologies (initially designed for other industries) in the field of mobile Robotics. In this sense, Table 2 shows the list of namespaces used by the ontology (from IFC ver- sion 2.3).
One of the first tools to be used in the implementation must be an ontology editor/viewer. Although there are other tools for developing and implementing ontologies, the authors have used Protégé [69,70]. Next, in order to take advantage of ifcOWL, an IFC2RDF translator [71] is used to obtain RDF graphs, which can be used to manage the stored information in a more practical way by using reasoning techniques developed for the SW. Its oper- ation required some minor modifications to the code provided by the developer. Some of these modifications involve the use of namespaces in ontologies, since namespaces for ontologies have changed, under the impulse of the Technical Room of build- ingSMART International. Another necessary modification is the redefinition of the annotation axioms for the inference rules to work. RDF Turtle syntax is used for the output files.
To simplify the management of the ontology, we followed a strategy similar to that posed in [8], in particular in terms of the Cartesian coordinates and rotation angles in the relative direction of the axes. As mentioned above, the ifcOWL ontology makes use of an intricate system based on RDF lists. In this work, these lists are converted to a WKT in the IFC2RDF translator runtime. That WKT is accessed for each instance through a data property called inst:hasValueAsWKT, defined ad hoc for this work. Although there are specific programs and other ways of calculating the global posi- tion of the elements, the authors have opted for the way described so as to achieve a more direct integration with the rest of the ele- ments and at the same time show the potential of the ontology. However, by their nature, ontologies can be rapidly integrated with other elements with which they share the knowledge domain.
The positions of the elements in IFC are defined relative to another element, except in an IfcProduct instance (more specifi- cally, an instance of one of its subclasses) that does not have the corresponding property defined. However, an alternative to this chain system of relative positions would be desirable for naviga- tion. The option proposed in this work is to take advantage of the strength of semantics in ontology to convert relative positions into global ones, thus facilitating the determination of the position
of the navigation system and the elements of its environment. In this respect, the following data properties are defined as an exten- sion of the ifcOWL ontology.
inst : hasGlobalPositionI C ifcowl : IfcProductIx xsd : stringI.  (1)

inst : hasNoPlacementRelToI C (ifcowl : IfcProductI ∪ ifcowl
: IfcGridPlacementI) x xsd : booleanI	(2)
The data property inst:hasGlobalPosition indicates the global position of each instance of a subclass of IfcProduct with respect to the instance taken as origin in the navigation map. This position is stored as a string, similar to a WKT. The second property, inst: hasNoPlacementRelTo, has a Boolean value as range that indicates if it is the element without relative reference.
A reason for using the ifcOWL is to take advantage of its struc- tured information by including ontological deduction rules. To this end, the authors will use the Semantic Web Rule Language (SWRL) [72], proposed by W3C, which allows editing Horn-type rules that include statements expressed in OWL. SWRL allows for the effi- cient development of knowledge deduction rules, especially in cases where OWL cannot express that induced knowledge. An example is the deduction of the hasUncle property from the has- Father and hasBrother properties. SWRL edition is done through the SWRLTab of the Protégé tool. As we will see later, the nature of the problem of indoor navigation is adequately adapted to this approach. Using SWRL involves selecting an inference engine that allows executing those rules, deducing new statements about the knowledge domain and including them as facts in the ontology. Taking into account the characteristics indicated in Ref. [73], the authors have opted for SWRLAPI [74], a set of tools based on OWLAPI for efficiently managing SWRL rules. These definitions make it possible to calculate the global positions of the elements in the navigation environment. To do this, the SWRL rules shown in Table 3 are defined. These rules rely on a built-in property, implemented by the authors for this work, that takes advantage of the modularity of SWRLAPI. This built-in property, called geo:- globalPosition, allows calculatig the global position of the IfcPro- duct when the global position of the instance with respect to which its relative position is defined is known. In this way, the cal- culation of the global position of each IfcProduct instance is prop- agated. This design of the rules takes into account two important considerations of the SWRL language: the Open World Assumption and the monotonic inference. According to the former, if an


Table 2
Prefixes and namespaces for the ontology implemented (from IFC2.3).





Table 3
SWRL rules used for element global position.
type of room in the navigation environment. An important factor to work with is determining the location of each element in the hier-

Rule ID
SWRL rule
archy tree of the ifcOWL ontology. This is not an easy operation, however, since here the implementer has to deal with the intrica-



S1	ifcowl:IfcProduct(?x) ^ ifcowl:objectPlacement_IfcProduct(?x, ?y) ^ inst:hasNoPlacementRelTo(?y, true) ^ ifcowl: relativePlacement_IfcLocalPlacement(?y, ?z) ^ ifcowl: location_IfcPlacement(?z, ?c) ^ inst:hasValueAsWKT(?c, ?d) -> inst: hasGlobalPosition(?x, ?d)
S2	ifcowl:IfcProduct(?x) ^ ifcowl:objectPlacement_IfcProduct(?x, ?y) ^ ifcowl:relativePlacement_IfcLocalPlacement(?y, ?z) ^ ifcowl: location_IfcPlacement(?z, ?c) ^ inst:hasValueAsWKT(?c, ?d) ^ ifcowl: refDirection_IfcAxis2Placement3D(?z, ?r) ^ ifcowl: axis_IfcAxis2Placement3D(?z, ?ax) ^ inst:hasValueAsWKT(?ax, ?v1)
^ inst:hasValueAsWKT(?r, ?v2) ^ ifcowl:placementRelTo_IfcLocalPlacement(?y, ?rel) ^ ifcowl: IfcProduct(?x1) ^ ifcowl:objectPlacement_IfcProduct(?x1, ?rel) ^ inst:hasGlobalPosition(?x1, ?pos1) ^ geo:globalPosition(?result, ? pos1, ?d, ?v1, ?v2) ^ differentFrom(?x, ?x1) -> inst:hasGlobalPosition (?x, ?result)






instance has not explicitly defined a value for a property, it can be for two reasons: because it really has no value for that property or because that information is missing in the ontology. In other words, every individual in the ontology is supposed to have a cer- tain value for a property, unless explicitly stated otherwise. As for monotonic inference, it implies that the retraction or modification of statements is not supported [72].
To improve indoor navigation, it would be useful to know the location of the different types of rooms in the environment: kitchen, bedroom, toilet, and so on. This information is not explic- itly defined in the IFC files, and thus not in the ifcOWL ontology either. However, the scheme allows for the inclusion of character- istic elements of some rooms: microwave, refrigerator, dishwasher, toilet tank, etc. By determining the global position of each element, it would be possible to locate the probable global position of each
cies of language, which often make it cumbersome to determine the different types and classes. In addition, the authors recommend being very careful with the changes between the different versions of IFC. For example, a microwave is an instance of the class ifcowl: IfcFlowTerminal whose value for the property ifcowl:IfcElectricAp plianceType is ifcowl:MICROWAVE. This value corresponds to one of the possible items predefined for the property, which are defined in the ontology as instances of the class ifcowl:IfcElectri cApplianceTypeEnum. As an example, Table 4 shows the instances defined for ifcowl:IfcElectricApplianceTypeEnum.
For the implementation, the authors have followed the method- ology of defining express:ENUMERATION subclasses. The ontology has been extended by defining a subclass, inst:RoomTypeEnum.
inst : RoomTypeEnumI C express : ENUMERATIONI	(3)
This enumeration will contain instances referring to each type of room to be implemented. In the case of the kitchen, it would be formally defined as
inst:RoomTypeEnum(inst:KITCHEN)I	(4)
There are currently four room types implemented (inst:BATH- ROOM, inst:BEDROOM, inst:KITCHEN and inst:OTHER_ROOM), although it is easily expandable to other types. For proper perfor- mance, these individuals must be explicitly declared as different from each other by means of the built-in differentFrom. This type of room can be linked to the instances of its characteristic elements by means of a new object property defined in the ontology: inst: hasUsualLocation.
inst : hasUsualLocationI C ifcowl : IfcProductIx inst
: RoomTypeEnumI.	(5)



Table 4
Instances defined for ifcowl:IfcElectricApplianceTypeEnum in ifcOWL ontology.


ifcowl:COMPUTER ifcowl:DIRECTWATERHEATER
ifcowl:DISHWASHER ifcowl:ELECTRICCOOKER ifcowl:ELECTRICHEATER
ifcowl:FACSIMILE ifcowl:FREESTANDINGFAN
ifcowl:FREEZER ifcowl:FRIDGE_FREEZER

ifcowl:HANDDRYER ifcowl:INDIRECTWATERHEATER
ifcowl:MICROWAVE ifcowl:NOTDEFINED ifcowl:PHOTOCOPIER ifcowl:PRINTER ifcowl:RADIANTHEATER ifcowl:REFRIGERATOR ifcowl:SCANNER

ifcowl:TELEPHONE ifcowl:TUMBLEDRYER ifcowl:TV ifcowl:USERDEFINED ifcowl:VENDINGMACHINE ifcowl:WASHINGMACHINE
ifcowl:WATERCOOLER ifcowl:WATERHEATER






This definition can be used to implement a set of SWRL infer- ence rules for associating elements with their usual location. Thus,
Table 6
Example of SQWRL search for the system implemented.



for example, the following rule indicates that every microwave instance has the kitchen as its usual place.
Search ID
SQWRL expression

ifcowl : IfcProduct(?x)fco^wl
: predefinedType fcElectricApplianceType(?x, ifcowl
: MICROWAVE)— > inst : hasUsualLocation(?x, inst
: KITCHEN).	(6)
Accordingly, Table 5 shows a set of common positions of ele- ments that can be assumed in a first version of the prototype implemented, for kitchen and bathroom instances.
An important advantage of using ifcOWL is being able to search the ontology. In practice, two search languages are used: SPARQL and SQWRL. The SPARQL [75] language is widely used, but it has the problem [74] of not fully understanding OWL semantics. On the other hand, SQWRL (Semantic Query-enhanced Web Rule Lan- guage) [76] is an OWL-specific search language with a more com-

Q1	ifcowl:IfcProduct(?x) ^ inst:hasUsualLocation(?x, inst:KITCHEN) ^ inst:hasGlobalPosition(?x, ?position) -> sqwrl:select(?x, ? position)





Table 7
Defined object properties for sentence processing.





Table 8
Example of SWRL rule for planned actions with a fridge as the destination.

pact and easy-to-use syntax, but the authors believe ifcOWL has not been used enough. Other advantages of SQWRL of interest to
Search ID
SWRL expression

this work are the possibility of using SWRL built-ins in the defini- tion of the searches and the support provided by the SWRLAPI tool. The extension proposed in this work for the ifcOWL ontology allows implementing SQWRL searches like the one shown in Table 6. In this case, the prototype wants to retrieve the list of coor- dinates of all elements (IfcProduct instances) whose usual location
is the kitchen.
As indicated above, the intent of this implementation of the approach is to support indoor navigation. In particular, the authors have applied these statements to a semi-autonomous wheelchair. In the current prototype (described in Section 3), the goal is for the ontology to allow suggesting a destination position when an action is required by the user. In this case, a user command recep- tion system similar to the one described in Ref. [77] is imple- mented, which includes a mechanism to check if the reception time of each word of the order is below a previously defined max- imum. Each type of input device (joystick, eye tracker, voice recog- nizer, etc.) will have a different maximum time. Any order received that exceeds this minimum time will be rejected. This time control will be carried out by a module other than the ontology module.
The result of that processing is also treated by a simple but effective ontological approach in a separate module, in order to improve system performance. To do this, three main classes are defined: words:Sentence, words:Word and words:Destination. Each sentence (command from the processing module) will be composed of a set of words and a result that will be the probable destination for the action that will be relayed to the rest of the modules of the wheelchair. Thus, each sentence received creates an individual with the corresponding object properties, in which each word is included in the ontology by means of an individual of the class words:Word. From the superclass words:Word, a series of subclasses is defined relative to the different processable actions


Table 5
Common positions of elements assumed in the prototype implemented (ifcowl prefix has been removed for the sake of simplicity).


ifcowl:IfcProduct Individual	inst: RoomTypeEnum Individual


R1	words:Sentence(?x) ^ words:startsWith(?x, ?w1) ^ words: DesireAction(?dw2) ^ words:KitchenAction(?dw3) ^ words: FridgeObject(?dw4) ^ words:isAfter(?w2, ?w1) ^ words:isAfter(? w3, ?w2) ^ words:isAfter(?w4, ?w3) ^ words:hasString(?w2, ?s2) ^ words:hasString(?w3, ?s3) ^ words:hasString(?w4, ?s4) ^ words: hasString(?dw2, ?ds2) ^ words:hasString(?dw3, ?ds3) ^ words: hasString(?dw4, ?ds4) ^ swrlb:equal(?ds2, ?s2) ^ swrlb:equal(? ds3, ?s3) ^ swrlb:equal(?ds4, ?s4) -> words:hasDestination(?x, words:FridgeDestination)




and to the locations: DesireAction, FridgeObject, KitchenAction, etc. As for the properties, the object properties listed in Table 7 are defined, with their corresponding ranges and domains.
The fact that the words:isAfter property is defined as transitive facilitates the normalization process, since in both the phrase ‘‘I want to drink water” and ‘‘I want to drink a glass of water”, the word ‘‘water” is after the word ‘‘to drink”. The data property words:hasString is also defined as follows:

words : hasStringI C words : WordIx xsd : stringI.	(7)
The value of this property contains the corresponding string of each word in the sentence.
The ontology is complemented with a set of predefined individ- uals, which will help to match each word from the command with its category (formally with the subclass of words: Word). Thus, for example, the EatAction individual is defined as follows:

words : EatAction(words : KitchenAction)I	(8)
The definition of these entities allows SWRL rules to be defined for determining the probable destination where the action requested by the User will be carried out. As an example, Table 8 shows the SWRL rule for planned actions with a fridge as the des- tination. Thus, a command received with the text ‘‘I want to drink some beer, please”, would activate this rule.
Note that the proposed approach is compatible with situations where the IFC file is not available, since elements of the navigation environment can be included either manually or as the wheelchair sensors discover these elements (one way to do this is by recogniz-

Dishwasher, Electric Cooker, Fridge Freezer, Hand Dryer, Kitchen Exhaust, Microwave, Refrigerator, Sink
Bath, Toilet tank, Sanitary Fixture, Shower, Toilet Pan, Urinal, Wash Hand Basin, WC Seat
inst:KITCHEN


Inst:BATHROOM
ing scenes through the cameras that determine what type of room the system is in). This inclusion of new information could be done on the fly, without the need to recompile any code. In addition, the way the information is stored means that it can be exchanged with other devices in the environment by taking advantage of Internet



of Things (IoT) technology. Finally, the ontological approach is also compatible with actions such as ignoring events not contemplated in the design and complementary situations based, for example, on the user’s health status.


Results

The authors have carried out several simulation tests in which the indoor navigation environment is defined by the set of demo files supplied by various tools and IFC repositories. An example file of these sites is shown in Fig. 4, supplied by the usBIM tool. This example consists of 1 IfcBuilding, 3 IfcBuildingStorey, 9 IfcDoor, 1
IfcSite, 4 IfcSlab, 1 IfcStair, 29 IfcWall, 13 IfcWindow, 5 IfcTypeOb- ject and 3 IfcPresentationLayerAssignment. The tests were con- ducted using an Intel® CoreTM i7-2600 CPU @ 3.40 GHz processor, 8 GB RAM. Most of the tests carried out included new elements (using SWRLAPI code) from these examples with random positions
in the model, from which their position was calculated with refer- ence to the origin of the coordinates. The ontology is opened from the simplified version (using the procedure explained earlier), and the proposed implementation creates the rules manager and the necessary OWLClass, OWLObjectProperty, OWLDataProperty and OWLNamedIndividual instances. This served to validate the SWRL rules shown in Table 3. As an example, the following code repre- sents the inclusion of an instance of ifcowl:relativePlacement_IfcLo calPlacement in the ontology using the SWRLAPI tool.
String inst = ‘‘https://w3id.org/express1#”;
String ifcowl= ‘‘http://standards.buildingsmart.org/IFC/DEV/ IFC2x3/TC1/OWL#”;
... 
IRI IRIRELATIVEPLACEMENT = IRI.create(ifcowl + ‘‘relativePlace ment_IfcLocalPlacement”);
OWLObjectProperty relativePlacement = df.getOWLObjectProp erty(IRIRELATIVEPLACEMENT);
OWLNamedIndividual obs2 = df.getOWLNamedIndividual(IRI.c reate(inst + ‘‘IfcLocalPlacement” + index));
OWLNamedIndividual axis1 = df.getOWLNamedIndividual(IRI. create(inst + ‘‘IfcAxis2Placement3D” + index));
OWLDeclarationAxiom da3 = df.getOWLDeclarationAxiom (axis1);
OWLClassAssertionAxiom caa3 = df.getOWLClassAssertionAx iom(axisClass, axis1);
ontologyManager.addAxiom(ontology, da3); ontologyManager.addAxiom(ontology, caa3); OWLObjectPropertyAssertionAxiom opa4 = df.getOWLObject
PropertyAssertionAxiom(relativePlacement, obs2, axis1); ontologyManager.addAxiom(ontology, opa4);
A second set of tests made use of the modifications to the initial model noted and on the correct processing of various specific room searches (as shown in Table 6) and the style rules (as shown in Table 8). Satisfactory results were obtained in those tests. It is important to note that SQWRL searches provide a list of items that are located, with some probability, in the desired destination. Another module in the navigation system should be responsible for properly managing this information in order to unambiguously determine the destination.
It is important to remark that, although the approach proposed in this paper is general, its development has taken into account the particular case of a smart wheelchair, as noted above. In particular, the prototype described in depth in Ref. [78] was used (Fig. 5). This wheelchair is a conventional wheelchair that has been adapted to




Fig. 4. Example of IFC file (supplied by usBIM tool).



navigate autonomously. It has sensors of different types, such as lasers, ultrasound and cameras, with which to detect objects of interest, obstacles and navigable areas. It also features an on- board computer with which to process the information provided by the sensors and send commands to the actuators. Its control software is implemented in ROS. The navigation system of the pro- totype has two levels; on the global level, static environmental information is used to set routes from the current position to the destination; on the local level, it tries to match the local route while avoiding dynamic obstacles not anticipated at the global level. These systems use a ‘‘cost map”, which stores information regarding the navigability of the environment, depending on the distance to the obstacles. Using the semantic information of the BIMs, not only could the navigation objectives be established, but so could the maximum speed at which the different areas can be navigated, as well as the minimum distance to the obstacles. Ulti- mately, the cost map could be modified based on this information. This scheme can be extrapolated to any environment that can be navigated by a mobile robot or to any architecture that requires this information.
However, one of the problems to solve is the large amount of information generated from the ifcOWL, which even exceeds the information deduced by the SWRLAPI engine. As an example of this immense amount of information, the example file ‘‘Hello Wall” available in Ref. [79] has been used. This simple file (with 163 lines of text) consists of only three elements, IfcWallStandardCase, IfcOpeningElement, and IfcWindowand. This example has been used in this work as a scheme to add elements and obtain results. Table 9 shows an extract of the ontology metrics before and after the use of SWRLAPI in this case.



Fig. 5. Prototype of smart wheelchair implemented.
Table 9
Effect of applying SWRLAPI to the ‘‘Hello Wall” (+ifcOWL) ontology (v 2.3).



An alternative is to decrease the size of the ontology by removing those entities that have no impact on the application domain. This yields a more workable subset of the ontology. In the case of indoor navigation, for example, it can be assumed that information such as the material of which a wall is constructed or the persons involved in the construction of the building could be ignored in the processing of the ontology. In this work, the original ifcOWL ontology has been simplified, resulting in an ontology whose main elements are:

Elements referred to the location.
Subclasses of the IfcProduct class.
Elements proposed as an extension of the ifcOWL ontology in the framework of this work.
Subclasses of express:ENUMERATION.
Object properties of predefined types.

Table 10 shows the number of axioms resulting from this sim- plification. A comparison with Table 9 reveals a significant reduc- tion in the number of axioms included in the ontology. This simplification also implies a considerable reduction in the time needed to process the operations in the ontology. The variation in the corresponding items is indicated in parentheses.
The performance of this simplified ontology (which could be reduced even more in terms of the number of axioms) was ana- lyzed with respect to the processing times, in a similar way to Ref. [73]. The first analysis will focus on the time taken by the rules engine with respect to the number of instances of subclasses of the IfcProduct class. It should be noted that each inclusion of a new element implies entering a minimum of 21 axioms in the ontology: six OWLDeclarationAxiom, six OWLClassAssertionAxiom, six OWLObjectPropertyAssertionAxiom and three OWLDataProperty AssertionAxiom. From the ‘‘Hello_Wall” example, an individual set has been included and the average values obtained in the acti- vation of the rules are shown in Fig. 6. For a number of observa- tions inferior to 1000 individuals, the time to activate all the SWRL rules (and therefore to build the navigation map) was veri- fied to be acceptable (less than 80 s). In this sense, it is necessary to clarify that this calculation operation is only carried out once, when the navigation system is initialized.
In the second experiment, the trend in the processing time for the SQWRL searches is analyzed with respect to the number of individuals of the IfcProduct subclass present in the ontology. For this experiment, the search shown in Table 8 (for processing an order by the user) was selected. Fig. 7 shows the result for the pro- cessing time when the number of individuals (instances of sub- classes of the IfcProduct class) in the ontology is increased. As in the previous case, for a number of observations inferior to 1000 individuals, acceptable data are obtained for the problem at hand and in the interaction with the potential users. Once the query is made, the result for each room type can be stored in the System’s semantic map, meaning it is not necessary to make the query


Table 10
Effect of applying SWRLAPI on the ‘‘Hello Wall” (+ifcOWL) ontology (Simplified).





Fig. 6. Trend in processing time for a set of new IfcProduct individuals.


Fig. 7. Trend in processing time for SQWRL queries.


again. Another alternative would be to perform an initial query for each room type defined.



Open lines for future work

The approach presented in this paper also offers several open areass of work besides those intended to optimize the size of the resulting ontology. Most of these areas are related to the advance- ment of technology and the development of new approaches in the fields of AEC and indoor navigation.
For the operational extension of the ifcOWL, it is possible to resort to existing ontologies or resources (precisely one of the strengths in the field of ontologies is that they can be reused and integrated into systems). In this sense, a complementary element is the topological vision of the indoorGML, a standard proposed by the Open Geospatial Consortium (OGC) aimed at facilitating indoor navigation. Teo and Yu [80] provided an important relation- ship between IFC and indoorGML, adapting the previous work described in Ref. [81]. The IFC entities involved in this case are IfcS- pace, IfcOpeningElement, IfcDoor, IfcOpeningElement, IfcWindow, IfcRelSpaceBoundary, IfcWall and IfcWallStandardCase. This list could serve as a starting point for better optimizing the subset of



elements of the ontology if it is used in this work. The joint use of ifcOWL and indoorGML is another open line to explore new works. Apart from this, a further area to explore is other recent advances that take advantage of the benefits of the Semantic Web in the field of AEC to reduce the immense amount of informa- tion stored in IFC files. In this sense, an interesting approach is the Building Topology Ontology (BOT), proposed by the W3C Linked Building Data Community Group. This group defines it as ‘‘a mini- mal ontology for describing the core topological concepts of a building” [82]. This ontology is complemented by other proposals from the same development group, related to products, properties and pro- ject management. As in the case of RDF, an IFC to LBD (Linked
Building Data) converter is available [83].
Another line to explore in this work is to delve a little more into the semantic relationships contained in the ontology, such that a more complex use can be made by means of, for example, the properties of the relationship between the elements of the IFC scheme shown in Section 2. The IfcRelConnects property seems particularly promising in this regard. The operation of the most promising properties will be validated and, if the results are suit- able, they will be coded as ROS modules, and the ways of commu- nicating with the module corresponding to the semantic map will be defined. Configuration options will make it possible to choose to use one or more of these algorithms at any given moment. Besides, information on the different types of users, their needs and limita- tions can be included in the ontology.

Conclusions

This paper presents an approach based on the ifcOWL ontology as a support for indoor navigation. Its aim is to try to take advan- tage of the increasing use of BIM files for application to indoor nav- igation, since this kind of file contains useful information in that context. This information should be complemented by data from sensors included in the navigation system. To this end, a series of modifications of this ontology have been proposed that include new items, SWRL ontological deduction rules and SQWRL searches. These extensions can be used to calculate the absolute position of the different elements of the ontology with respect to a global coordinate system, to deduce the possible location of different room types and to process orders for setting navigation destinations.
This approach was validated using several tests, with satisfac- tory results. However, the authors consider it important to inte- grate their findings into real, more advanced prototypes in different environments. The authors also note that the proposed approach is easily expandable to other types of rooms, configura- tions, etc., and it should be mainly considered as a complement to other well-known indoor navigation techniques. By using this ontology, it is possible to interact quickly and easily with other ele- ments within the same knowledge domain.
Among the problems with its implementation are mainly the large amount of information (partly as a result of the complicated structure of IFC) and the processing time required. Both problems can be mitigated by simplifying the information contained in the ontology. This paper provides an initial simplification, subject to improvement.

Funding

This work was supported in part by the Spanish Ministry of Science and Technology through the SIRTAPE project under Grant DPI2017-90002-R and in part by the CajaCanarias Foundation through the Mobility and Smart Accessibility In Hotels project under Grant 2016TUR13.
Conflict of interest

There is no conflict of interest.

References

Pauwels P, Zhang S, Lee Y-. Semantic web technologies in AEC industry: a literature overview. Autom Constr 2017;73:145–65.
Zhong B, Wu H, Li H, Sepasgozar S, Luo H, He L. A scientometric analysis and critical review of construction related ontology research. Autom Constr 2019;101:17–31.
Pauwels P, Terkaj W, Krijnen T, Beetz J. Coping with lists in the ifcOWL ontology. In: EG-ICE 2015–22nd workshop of the European group of intelligent computing in engineering, Eindhoven, The Netherlands. p. 111–20.
Pauwels P, Törmä S, Beetz J, Weise M, Liebich T. Linked data in architecture and construction. Autom Constr 2015;57:175–7.
Farias TMD, Roxin A, Nicolle C. IfcWoD, semantically adapting IFC model relations into OWL properties. In: 32nd CIB W78 conference, Eindhoven, The Netherlands. p. 175–85.
Beetz J, Leeuwen VJP, d. B. Vries,. An ontology web language notation of the industry foundation classes. In: Proceedings of the 22nd CIB W78 conference on information technology in construction. p. 193–8.
Terkaj W, Pauwels P. A method to generate a modular ifcOWL ontology. CEUR workshop proceedings, 2017.
Pauwels P, Krijnen T, Terkaj W, Beetz J. Enhancing the ifcOWL ontology with an alternative representation for geometric data. Autom Constr 2017;80:77–94.
Pauwels P, Terkaj W. EXPRESS to OWL for construction industry: towards a recommendable and usable ifcOWL ontology. Autom Constr 2016;63:100–33.
Beetz J, Van Leeuwen J, De Vries B. IfcOWL: a case of transforming EXPRESS schemas into ontologies. Artif Intell Eng Des Anal Manuf 2009;23(1):89–101.
Terkaj W, Šojic A. Ontology-based representation of IFC EXPRESS rules: an enhancement of the ifcOWL ontology. Autom Constr 2015;57:188–201.
Pauwels P, Roxin A. SimpleBIM: from full ifcOWL graphs to simplified building graphs. In: eWork and eBusiness in architecture, engineering and construction – proceedings of the 11th European conference on product and process modelling, ECPPM 2016. p. 11–8.
Pauwels P, de Farias TM, Zhang C, Roxin A, Beetz J, De Roo J, et al. A performance benchmark over semantic rule checking approaches in construction industry. Adv Eng Inf 2017;33:68–88.
Bonsma P, Bonsma I, Ziri AE, Parenti S, Lerones PM, Hernández JL, et al. INCEPTION standard for heritage BIM models. In: Lect. Notes Comput. Sci., vol. 10058 LNCS. p. 590–9.
Boysen M, De Haas C, Lu H, Xie X. A journey from IFC files to indoor navigation. In: Lect. Notes Comput. Sci., vol. 8470 LNCS. p. 148–65.
Isikdag U, Zlatanova S, Underwood J. A BIM-oriented model for supporting indoor navigation requirements. Comput Environ Urban Syst 2013;41:112–23.
Kun DP, Baksáné Varga E, Tóth Z. Ontology based indoor navigation service for the ILONA system. Infocommun J 2018;10(3):20–9.
Dudas PM, Ghafourian M, Karimi HA. ONALIN: ontology and algorithm for indoor routing. In: Proceedings – IEEE international conference on mobile data management. p. 720–5.
Sriharee G. A symbolic-based indoor navigation system with direction-based navigation instruction. Proc Comput Sci 2015:647–53.
Anagnostopoulos C, Tsetsos V, Kikiras P, Hadjiefthymiades SP. OntoNav: a semantic indoor navigation system. CEUR workshop proceedings, 2005.
Scholz J, Schabus S. An indoor navigation ontology for production assets in a production environment. In: Lecture notes in computer science (including subseries lecture notes in artificial intelligence and lecture notes in bioinformatics). p. 204–20.
Berners-Lee T, Hendler J. Publishing on the semantic web. Nature 2001;410 (6832):1023–4.
Berners-Lee T, Hendler J, Lassila O. The semantic web. Sci Am 2001;284 (5):34–43.
Guarino N. Formal ontology, conceptual analysis and knowledge representation. Int J Hum Comput Stud 1995;43(5–6):625–40.
Studer R, Benjamins VR, Fensel D. Knowledge engineering: principles and methods. Data Knowl Eng 1998;25(1–2):161–97.
Gruber TR. A translation approach to portable ontology specifications. Knowl Acquisition 1993;5(2):199–220.
Swartout B, Patil R, Knight K, Russ T. Toward distributed use of large-scale ontologies. In: Ontological engineering, AAAI-97 spring symposium series. p. 138–48.
Blomqvist E, Öhgren A. Constructing an enterprise ontology for an automotive supplier. Eng Appl Artif Intell 2008;21(3):386–97.
Uschold M, Gruninger M. Ontologies: principles, methods and applications. Knowl Eng Rev 1996;11(2):93–136.
García Rodríguez I. Modelos de conocimiento basados en ontologías para la construcción de software en el dominio de la Ingeniería de control. Universidad de León; 2012.
Altman RB, Bada M, Chai XJ, Carillo MW, Chen RO, Abernethy NF. RiboWeb: an ontology-based system for collaborative molecular biology. IEEE Intell Syst Appl 1999;14(5):68–76.
Ye J, Coyle L, Dobson S, Nixon P. Ontology-based models in pervasive computing systems. Knowl Eng Rev 2007;22(4):315–47.



World wide web consortium (W3C): resource description framework (RDF). Available: https://www.w3.org/RDF/ [accessed on 2019-03-04].
Rector A, Drummond N, Horridge M, Rogers J, Knublauch H, Stevens R, et al. OWL pizzas: practical experience of teaching OWL-DL: common errors and common patterns. In: Lecture notes in artificial intelligence (subseries of lecture notes in computer science). p. 63–81.
World wide web consortium (W3C): OWL web ontology language guide. Available: http://www.w3.org/TR/owl-guide/ [accessed on 2019-03-04].
Ma L, Yang Y, Qiu Z, Xie G, Pan Y, Liu S. Towards a complete OWL ontology benchmark. In: Eswc 2006. Lncs; 2006. p. 125–39.
NBIMS-USTM. National BIM standard-united states® (NBIMS-USTM) fact sheet,
2015.
BSI Group. BSI PAS 1192–-5:2015: specification for security-minded building information modelling, digital built environments and smart asset management, 2015.
ISO 29481-1:2010. Building information modelling – information delivery manual – part 1: Methodology and format, 2010.
Yalcinkaya M, Singh V. Building information modeling (BIM) for facilities management-literature review and future needs. IFIP Adv Inf Commun Technol 2014;442:1–10.
Niknam M, Karshenas S. Sustainable design of buildings using semantic BIM and semantic web services. Proc Eng 2015:909–17.
Farias TM, Roxin A, Nicolle C. COBieOWL, an OWL ontology based on COBie standard. Lect Notes Comput Sci 2015;9415:361–77.
buildingSMART web page. Available: https://www.buildingsmart.org/ [accessed on 2019-04-03].
Zhang C, Beetz J, De Vries B. BimSPARQL: domain-specific functional SPARQL extensions for querying RDF building data. Semantic Web 2018;9(6):829–55.
Gómez-Romero J, Bobillo F, Ros M, Molina-Solana M, Ruiz MD, Martín-Bautista MJ. A fuzzy extension of the semantic building information model. Autom Constr 2015;57:202–12.
Belsky M, Sacks R, Brilakis I. Semantic enrichment for building information modeling. Comput Aided Civ Infrastruct Eng 2016;31(4):261–74.
Terkaj W, Viganò GP. Semantic GIOVE-VF: an ontology-based virtual factory tool. CEUR workshop proceedings, 2017.
Wix J, Liebich T. IFC: current reality and future potential. In: Proc. ISPE Int. Conf. Concurrent Eng.. p. 679–86.
buildingSMART International Limited: IFC4 official release. Available: http:// www.buildingsmart-tech.org/ifc/IFC4/final/html/ [accessed on 2019-03-04].
Häfele K, Benner J, Nisbet N, Weise M, Geiger A. Recommendation to buildingSMART, OGC, WC3 on open standards improvement, 2017. Streamer consortium tech. rep. D8.8.
Liu X, Li Z, Jiang S. Ontology-based representation and reasoning in building construction cost estimation in China. Future Internet 2016;8(3).
Barbau R, Krima S, Rachuri S, Narayanan A, Fiorentini X, Foufou S, et al. OntoSTEP: enriching product model data using ontologies. CAD Comput Aided Des 2012;44(6):575–90.
Cursi S, Simeone D, Coraglia UM. An ontology-based platform for BIM semantic enrichment. In: ShoCK – sharing of computable knowledge – proceedings of the 35th international conference on education and research in computer aided architectural design in Europe, Rome, Italy. p. 649–56.
Lee Y-, Eastman CM, Solihin W. An ontology-based approach for developing data exchange requirements and model views of building information modeling. Adv Eng Inf 2016;30(3):354–67.
Krijnen T, Beetz J. A SPARQL query engine for binary-formatted IFC building models. Autom Constr 2018;95:46–63.
Ma Z, Liu Z. Ontology- and freeware-based platform for rapid development of BIM applications with reasoning support. Autom Constr 2018;90:1–8.
Schevers H, Drogemuller R. Converting the industry foundation classes to the web ontology language. Proceedings – first international conference on semantics, knowledge and grid, SKG 2005, Beijing China, 2005.
Farias TMD, Roxin A, Nicolle C. A rule-based methodology to extract building model views. Autom Constr 2018;92:214–29.
Chbeir R, Cardinale Y, Corchero A, Bourreau P, Salameh K, Charbel N, et al. OntoH2G: a semantic model to represent building infrastructure and occupant interactions. Smart Innov Syst Technol 2019;131:148–58.
Bus N, Roxin A, Picinbono G, Fahad M. Towards french smart building code:
compliance checking based on semantic rules. In: CEUR workshop proceedings. p. 6–15.
Strug B, S´ lusarczyk G. Reasoning about accessibility for disabled using building graph models based on BIM/IFC. Vis Eng 2017;5(1).
Lin WY, Lin PH, Tserng HP. Automating the generation of indoor space topology for 3D route planning using BIM and 3D-GIS technique. In: ISARC 2017 – proceedings of the 34th international symposium on automation and robotics in construction. Taipei, Taiwan: National Taiwan University of Science and Technology (NTUST); 2017. p. 437–44.
Hamieh A, Deneux D, Tahon C. BiMov: BIM-based indoor path planning. In: Eynard B, Nigrelli V, Oliveri SM, Peris-Fajarnes G, Rizzuti S, editors. Advances on mechanics, design engineering and manufacturing : proceedings of the international joint conference on mechanics, design engineering & advanced manufacturing  (JCM  2016),  14-16  September,  2016,  Catania, Italy. Cham: Springer International Publishing; 2017. p. 889–99.
Taneja S, Akinci B, Garrett Jr JH, Soibelman L. Algorithms for automated generation of navigation models from building information models to support indoor map-matching. Autom Constr 2016;61:24–41.
Quigley M, Conley K, Gerkey BP, Faust J, Foote T, Leibs J, et al. ROS: An open- source robot operating system. ICRA workshop on open source software, 2009.
IfcOpenShell: IfcConverter web site. Available: http://www.ifcopenshell.org/ ifcconvert.html [accessed on 2019-03-04].
National Institute of Building Sciences web page. Common building information model files and tools. Available: https://www.nibs.org/page/ bsa_commonbimfiles [accessed on 2019-03-04].
Kostavelis I, Gasteratos A. Semantic mapping for mobile robotics tasks: a survey. Rob Autom Syst 2015;66:86–103.
Knublauch H, Horridge M, Musen M, Rector A, Stevens R, Drummond N, et al. The Protégé OWL experience. Proc.OWL: experiences and directions workshop, 2005.
Horridge M. A practical guide to building OWL ontologies using protégé 4 and CO-ODE tools edition 1.3. The University of Manchester; 2011.
IfctoRDF converter. Available: https://github.com/pipauwel/IFCtoRDF [accessed on 2019-03-04].
Horrocks I, Patel-Schneider PF, Boley H, Tabet S, Grosof B, Dean M. SWRL: a semantic web rule language combining OWL and RuleML. W3C member submission, 2004.
Gonzalez E, Marichal R, Hamilton A. Software experience for an ontology- based approach for the definition of alarms in geographical sensor systems. IEEE Access 2018;6:55556–72.
O’Connor MJ, Shankar RD, Nyulas C, Das AK, Musen MA. The SWRLAPI: A development environment for working with SWRL rules. OWL: experiences and directions (OWLED), 4th international workshop, Washington, D.C., U.S.A, 2008.
Lee J, Pham M, Lee J, Han W, Cho H, Yu H, et al. Processing SPARQL queries with regular expressions in RDF databases. BMC Bioinf 2011;12(Suppl 2).
O’Connor M, Tu S, Nyulas C, Das A, Musen M. Querying the semantic Web with SWRL. In: Lect. Notes Comput. Sci., vol. 4824 LNCS. p. 155–9.
Djaid NT, Saadia N, Ramdane-Cherif A. Multimodal fusion engine for an intelligent assistance robot using ontology. Proc Comput Sci 2015.
Arnay R, Hernandez-Aceituno J, Toledo J, Acosta L. Laser and optical flow fusion for a non-intrusive obstacle detection system on an intelligent wheelchair. IEEE Sens J 2018;18(9):3799–805.
buildingSMART International limited: hello wall example. Available: http:// www.buildingsmart-tech.org/implementation/get-started/hello-world [accessed on 2019-03-28].
Teo TA, Yu SC. The extraction of indoor building information from bim to OGC indoorgml. In: International archives of the photogrammetry, remote sensing and spatial information sciences – ISPRS archives. p. 167–70.
Kim J, Yoo S, Li K. Integrating IndoorGML and CityGML for indoor space. In: Lect. Notes Comput. Sci., vol. 8470 LNCS. p. 184–96.
Linked building data community group. Building topology ontology. Draft community group report 07 January 2019. Available: https://w3c-lbd-cg. github.io/bot/ [accessed on 2019-03-04].
Bonduel M, Oraskari J, Pauwels P, Vergauwen M, Klein R. The IFC to linked building data converter – current status. In: CEUR workshop proceedings. p. 34–43.
