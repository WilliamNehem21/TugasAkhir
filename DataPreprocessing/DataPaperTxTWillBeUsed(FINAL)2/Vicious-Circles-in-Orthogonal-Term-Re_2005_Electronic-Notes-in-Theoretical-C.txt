Electronic Notes in Theoretical Computer Science 124 (2005) 65–77  
www.elsevier.com/locate/entcs


Vicious Circles in
Orthogonal Term Rewriting Systems
Jeroen Ketema1
Department of Theoretical Computer Science, Vrije Universiteit, De Boelelaan 1081a, 1081 HV Amsterdam, The Netherlands
Jan Willem Klop2
Department of Theoretical Computer Science, Vrije Universiteit, De Boelelaan 1081a, 1081 HV Amsterdam, The Netherlands; CWI, P.O. Box 94079, 1090 GB Amsterdam, The Netherlands; Department of Computer Science, Radboud Universiteit Nijmegen, Toernooiveld 1, 6525 ED Nijmegen, The Netherlands
Vincent van Oostrom3
Department of Philosophy, Utrecht University, Heidelberglaan 8, 3584 CS Utrecht, The Netherlands

Abstract
In this paper we first study the difference between Weak Normalization (WN) and Strong Normal- ization (SN), in the framework of first order orthogonal rewriting systems. With the help of the Erasure Lemma we establish a Pumping Lemma, yielding information about exceptional terms, defined as terms that are WN but not SN. A corollary is that if an orthogonal TRS is WN, there are no cyclic reductions in finite reduction graphs. This is a stepping stone towards the insight that orthogonal TRSs with the property WN, do not admit cyclic reductions at all.
Keywords: Term rewriting systems, cyclic reductions, normalization, functional programming.


1 Email: jketema@cs.vu.nl
2 Email: jwk@cs.vu.nl
3 Email: oostrom@phil.uu.nl



1571-0661 © 2005 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2004.11.020

Introduction
The main concern in this paper is the notion of reduction cycle. Intuitively, cyclic terms (i.e., terms lying on a reduction cycle) are ‘bad’, whereas normal forms are ‘good’; a cyclic reduction is a failed attempt at normalization. This picture is complicated by the fact that a term may be cyclic, but still have a normal form, e.g., the CL-term KI(SII(SII)) has normal form I, but is also cyclic. What we will prove is that the presence of a cyclic term t ‘entails’ the presence of a term s without normal form, and even stronger, a term s without head normal form. The latter means that the term s refuses to normalize even at depth zero. (In λ-calculus such a term is also called ‘unsolvable’.) And this in turn means that the term is meaningless. In a slogan: cycles ⇒
undeﬁned terms, which confirms our intuition, that cycles are ‘vicious’. The
contraposition is that when ‘everything is defined’, there are no cycles. The precise statement for orthogonal term rewriting is the implication WN ⇒ AC, weak normalization implies acyclicity. This is in fact our main theorem in the present paper. In fact, we also have the implication ‘head normalization’ ⇒ AC.
Of course we have trivially SN ⇒ AC, strong normalization implies acyc- licity. In the context of non-erasing reductions, where SN and WN are equi- valent, that would be the end of the present story.
The idea for these implications arose from establishing the weaker fact that WN ⇒ ACfin, where the latter property means that at least ﬁnite reduction graphs do not admit cycles. We will refer to this property in words as ‘ﬁnite
acyclic’. This is a property that, remarkably, also CL as based on I, K, S, or just K, S enjoys (even while CL is by no means WN!). (See Klop [7].) We will establish this implication WN ⇒ ACfin first, because the proof yields some interesting information: it is done by a ‘pumping property’ that
is a consequence of the Erasure Lemma, a useful lemma in orthogonal term rewriting.
Figure 1 shows the simplest cycles that there are, in λ-calculus, and to the right, in Combinatory Logic (CL). As just mentioned, it is not possible to have a cycle in CL and keep the reduction graph finite, and indeed the reduction graph of SII(SII) is infinite.


Preliminaries
We suppose familiarity with the basic notions of term rewriting, such as CR, (confluence or Church-Rosser property), UN (unique normal form property),



(x.xx)(x.xx)
SII(SII)

	
Figure 1. The ‘ur-cycles’, in λ-calculus and Combinatory logic (CL)
SN (strong normalization), WN (weak normalization). 4 In particular we need the notion of orthogonal TRSs. 5 For general reference see Terese [9]. Here we single out the notion of a sub-TRS, which will play an essential role later on.

Sub-TRSs
In this paper we will employ only a ‘neat’ kind of sub-TRS, namely one where:
the signature is a sub-signature of the original TRS,
the reduction rules are a subset of the original set of rules, and
the set of terms is a subset of the original set of terms.
In particular, the reduction graph G(t) of t is a sub-TRS. Here the set of terms consists of t and all of its reducts. Another sub-TRS that we will use below is the family F(t) of t, where the set of terms consists of t and all subterms of reducts, i.e., the universe contains t and is not only closed off under reduction but also under taking subterms. It is important that sub-TRSs, including F(t) and G(t), are considered as TRSs in their own right, for which the usual notions and theorems apply, e.g., that orthogonal TRSs are confluent.

4 See, e.g., Terese [9], Ch. 1, p. 13.
5 See, e.g., Ch. 4, Orthogonality, in Terese [9].


Remark 2.1
The notion of family of a term F(t) stems from Barendregt [1].
Note that the reduction graph G(t) is a sub-TRS of the family F(t) of t. For example, consider the TRS with rules {A → B(C),C → D}. Then the TRS G(A) has as universe of terms {A, B(C), B(D)}, while F(t) has universe {A, B(C), B(D), C, D}.
Define d =→ ∪ ⊃, where ⊃ is the converse of the proper subterm relation. Then: → is SN iff d is SN. 6 Using K¨onig’s Lemma 7 , we therefore have that G(t) is finite iff F(t) is finite.
Example 2.2 (The set of S-terms in Combinatory Logic) The sig- nature consists of a constant S, and binary application A. The single rule is A(A(A(S, x), y), z) → A(A(x, z), A(y, z)), or in the usual notation of CL, Sxyz → xz(yz).
The salient features of this orthogonal TRS are: ¬SN, WHN (head nor- malization, defined below), AC (acyclicity, defined below). An example of a term with ¬SN is SSS(SSS)(SSS). The head normalization property was established by Waldmann [12]. The property AC is proved by Bergstra and Klop [2].
Example 2.3 (The set of J-terms in CL) (See D. Probst and T. Studer [8]) This orthogonal TRS is SN. The single reduction rule is in applicative notation: Jxyzw → xy(xwz).

Basic notions
We need the folllowing basic properties of orthogonal first-order TRSs, as in Figure 2. Some are standard, and we will not repeat their definitions: SN (strong normalization), WN (weak normalization), WIN (weak innermost normalization), NE (non-erasing ). Further, AC means that the TRS has no
reduction cycles t →+ t or is acyclic. The property ACfin (ﬁnite acyclic) means that finite reduction graphs G(t) contain no cycle. In other words: if t →+ t, then t has infinitely many different reducts.
The property LF (locally ﬁnite) is that all reduction graphs G(t), and hence also the families F(t), are finite. This property is of marginal importance, and is only mentioned to complete the picture given by the diagram in Figure 2.

6 This is Exercise 2.3.11, p. 41 in Terese [9].
7 Lemma A.1.25, p.798 in Terese [9].

O’Donnell






LF

ACfin

Figure 2.
Head normal forms
Definition 2.4
A term t is in head normal form, if it is not a redex already, and also can- not reduce to a redex. In other words, there is no reduction ‘activating’ the root. (We use ‘root’ and ‘head’ as synonyms.)
Further, t has a head normal form if it reduces to one.
A TRS has the property WHN (Weak Head Normalization) if every term t in the TRS has a head normal form. If the term t has a head normal form, we also write t ∈ WHN, or WHN(t). (The qualification ’weak’ is in analogy with weak normalization, and refers to the existential content
of this property: there exists a reduction to head normal form.)
Theorem 2.5 (Head Normalization Theorem) Let R be an orthogonal TRS and let t be a term in R with a reduction t → t' → t'' → ... containing inﬁnitely many head steps.
Then t has no head normal form.
A fortiori, t has no normal form.
Proof We employ outermost-fair reductions (see Def. 4.9.15(ii) and especially Def. 9.3.1 in Terese [9]) and the theorem that outermost-fair reductions are normalizing (see Theorem 9.3.10 in Terese [9]). From this, the theorem follows immediately, since an infinite reduction with infinitely many head steps is


clearly outermost fair. So the initial term cannot have a normal form—if it had, this outermost-fair reduction would have reached it.	 
Remark 2.6 For CL a warning is in order. The notion of head reduction just defined, pertains to the root of the term. The analogy with λ-calculus suggests another notion of head reduction, namely the one which contracts the redex whose leading symbol S, K, or I is the leftmost symbol of the term at hand. So, given the CL-term SKSIK the head-redex in that sense would be SKSI. This term however has no redex at the root, so it admits no head reduction step in the sense defined above. For S-terms these notions of reduction are indeed different: head reduction as above (‘root reduction’) terminates, but the head reduction in the sense of λ-calculus does not. An example was given by Barendregt (personal communication): consider the term BB with B = SAA and A = SSS. This term has an infinite reduction of head steps in the sense of λ-calculus.

The Erasure Lemma
The Erasure Lemma (EL) was stated without proof by Klop [5,6] and seems to be first proved in Bergstra et al. [3]. 8 The EL has several important corollaries, including the theorem of Church, the theorem of O’Donnell, and has applications such as the modularity of SN for orthogonal TRSs. 9 We now recall the relevant notion and the statement of the EL.
Definition 3.1
Notation: ∞(t) means that t has an infinite reduction. So ¬∞(t) means that t is strongly normalizing, or t ∈ SN.
A reduction step t → t' is called critical if ∞(t) but ¬∞(t'). So a critical step is one where the possibility of performing an infinite reduction is lost.
Proposition 3.2 (Erasure Lemma) Let t → t' be a critical step in an or- thogonal TRS, where s is the contracted redex. Then this step erases a subterm p with ∞(p).
Proof See Terese [9], p. 126, Proposition 4.8.4.	 
Remark 3.3 The Erasure Lemma also holds for weakly orthogonal TRSs. This is a consequence of Terese [9], Exercise 9.3.28.

8 A proof is also in Terese [9], p. 126, Proposition 4.8.4 or p. 514, Lemma 9.3.27 together with Exercise 9.3.28(i).
9 Theorem 5.9.5, p. 175 in Terese [9].


t0	C1[A1]





C1[A1]


t	B1

Figure 3. First zoom-in step
The Pumping Lemma
We will now use the Erasure Lemma to obtain some information about terms that are weakly normalizing, but still admit an infinite reduction. For ease of reference we define:
Definition 4.1 Let the term t be weakly normalizing, but not strongly nor- malizing. Otherwise said: t ∈ WN − SN. Then t is an exceptional term.
Remark 4.2 A related definition occurring in the literature is the following: the term t is uniformly normalizing if WN(t) ⇒ SN(t). So t is uniformly normalizing iff it is not exceptional. See, e.g., Khasidashvili et al. [4].
Now consider the exceptional term t0 as in Figure 3. Let t◦ be its normal form. Consider a reduction t0 → t◦ to the normal form. Now t0 has an infinite reduction, ∞(t0), but t◦ has not, ¬∞(t◦). So the reduction t0 → t◦ must have a critical step contracting redex s (denoted by {s}), which is the heavily drawn one in the vertical reduction t0 → t◦. The start of this critical step {s} is of
the form C1[A∞] for some non-empty context C1[], and term A∞ having an
1	1
infinite reduction. (It is nonempty, as redex s contains the ‘infinite’ subterm
A∞ to be erased.)
In turn, we normalize A∞ to A◦ (which is still contained in the residual
1	1
s' of redex the s, at some erasable position). We conclude with a step {s'} in which the normal form A◦ is erased. The result is B1. (Not necessarily a normal form, but reducible by confluence to the first normal form t◦, the reduction at bottom to the left in Figure 3.)
The vertical normalizing reduction A∞ → A◦ contained in the non-empty
1	1
context C1[], now has again a critical step, the heavy one in the second vertical
reduction in Figure 3, which is by the same reasoning, an erasing step in a non-empty context C2[]. Zooming in on this step yields the third vertical reduction in Figure 4.
We repeat the zoom-in construction infinitely many times, yielding terms



: t0	C1[A ]
C1[C2[A ]]
C1[C2[C3[A ]]]





C1[A1]
C1[C2[A2]]
C1[C2[C3[A3]]]



: t	B1
C1[B2]	C1[C2[B3]]


Figure 4. Repeated zoom-in construction
as in Figure 5. Since the contexts Ci[] are non-empty, the terms in the upper horizontal reduction in Figure 4 are unbounded in length, and likewise the terms in the lower expansion in Figure 4. Here an ‘expansion’ is a backward reduction.
So we can choose the upper reduction t → t1 → t2 → ... in the ‘ladder’ so constructed to be pairwise different, and so that also for the lower expansion

t0 ← t'
← t'
← ... we have pairwise different terms. So, both the upper

reduction as well as the lower expansion are free from repetitions (acyclic),
and therefore infinite.
Definition 4.3 A ladder of reductions is a diagram of reductions as in Figure
5. Here the ti and the t' are pairwise different, so a ladder consists of infinitely
many different terms.


t	t1
infinite acyclic reduction
t2	t3



t0	t’1
t’2	t’3
infinite acyclic expansion


Figure 5. Infinite ladder of reductions

Theorem 4.4 (Pumping Lemma) Let t be an exceptional term in a weakly normalizing orthogonal TRS. Then:
t is the starting point of an inﬁnite ladder.


t has an inﬁnite acyclic reduction, and its normal form has an inﬁnite acyclic expansion.
Proof Directly from the definition of a ladder, and the iterated zoom-in con- struction described above.	 
We will now conclude that for orthogonal TRSs: WN ⇒ ACfin.
Theorem 4.5 Let R be a weakly normalizing orthogonal TRS.
Let G(t) be a ﬁnite reduction graph in R. Then t is SN.
A fortiori, G(t) does not contain a reduction cycle. That is, R has the property ACfin.
Proof Suppose t is not SN. Then t is an exceptional term, and Theorem 4.4 applies. So t is the start of a ladder, which by definition is infinite. But that does not fit in the finite G(t).	 


Figure 6.
The well-known TRS in Figure 6 has four constant symbols in its signature and the reduction rules as in the figure. It seems to refute the theorem, as it is normalizing, while the finite reduction graph of the term B does have a reduction cycle. However, this TRS is not orthogonal; the rules B → C and
B → A are overlapping.
Example 4.6 Consider the TRS with the two rules {A → B(A), B(x) → C}. This is the simplest example of Theorem 4.4: A is an exceptional term, and is indeed starting point of a ladder, see Figure 7. Note that this TRS also
satisfies WN. It is not SN, but is head normalizing (WHN). It is also AC. Note that it is erasing (¬NE), which must be the case since WN holds, but ¬SN.
Remark 4.7 A rather similar zoom-in construction as used above also occurs in Van Oostrom [10].
A  B(A)  B(B(A))  B(B(B(A))) 
C	 B(C)	 B(B(C))	

Figure 7.



Figure 8.
Theorem 4.8 Let R be an orthogonal TRS, not necessarily WN. If G(t) is ﬁnite and contains a cycle, then t has a term in its family without normal form.
Proof Suppose not, then the TRS G(t) is WN. By Theorem 4.5 there cannot be a cycle in the finite graph G(t). Contradiction.	 
Theorem 4.8 was stated without proof by Klop [6]. Likewise the following:
Theorem 4.9 Let R be an orthogonal TRS, and t a term in R. If G(t) con- tains an inﬁnite reduction, but does not contain an inﬁnite acyclic expansion, then t contains a term without normal form in its family.
Proof Assume R is an orthogonal TRS, t a term in R, and G(t) has an infinite reduction but not an infinite expansion. Now suppose for a proof by contradiction, that t does not contain a term without normal form in its family. In other words, the sub-TRS F(t) has the property WN. F(t) is an orthogonal TRS, in which t is an exceptional term, because t has an infinite reduction and WN holds. So by Theorem 4.4(ii) t is starting point of an infinite ladder. Note that all the points in the ladder are in fact reducts of
t, hence the ladder resides entirely in G(t). But then G(t) does contain an infinite acyclic expansion, contradiction.	 

Example 4.10 Let t be a term in an orthogonal TRS R with reduction graph as in Figure 8; t0 is the top of this graph. (Such R and t0 do indeed exist,


an example is easily given.) So we have t0 → t1 → t2 → ... tn → .. ., and for all i ≥ 0: ti → tω, tω → tω+1, ti → tω+1. Then, since the graph contains an infinite reduction but no infinite acyclic expansion, t0 must have a term without normal form in its family. It follows that an orthogonal TRS R which is WN, cannot have a term with such a reduction graph.

Cycles and Weak Normalisation
Let us now survey the situation, in Figure 9.
WIN  SN
AC	 WN	LF

ACfin

Figure 9.
Theorem 4.5 above raises the question for an example of a weakly normal- izing, orthogonal TRS where a reduction cycle is present. We know that it cannot occur in a finite reduction graph; but maybe then in an infinite re- duction graph? Somewhat surprisingly, such an example is not easy to find, and thus the conjecture arises that such an example does not exist. In other words, the conjecture arises that weakly normalizing orthogonal TRSs do not admit any reduction cycle, or for short, are acyclic (AC). This is the implica- tion labeled with ‘?’ in the Figure 9, which we will prove now. As an essential part of the proof we use the Head Normalisation Theorem.
Theorem 5.1 For orthogonal TRSs: WN ⇒ AC.
Proof We will prove the contraposition ¬AC ⇒ ¬WN. Suppose ¬AC. So there is a cycle. Now take a minimal cyclic term t, minimal with respect to the size of t. So there is a cyclic reduction C: t → ... → t, and all terms smaller than t are not cyclic.

Claim 5.2 One of the steps of C is a root step.
Proof of the claim Let t have the form F (t1,... , tn) for some n. Suppose the claim is not true. So the root symbol F is ‘frozen’, i.e., not active, and all steps in C take place in the subterms t1,... , tn. There must be a step done in C, say in ti. Now we lift out of C all the steps in ti. They are not influenced by the the other steps in C. But then, obviously, these steps in C constitute a cycle ti → ... → ti, a contradiction with the minimality of t.	 
Now we unwind the cycle into an infinite reduction C; C; C; ... C; .. ., i.e., C repeated infinitely often, notation Cω. By Claim 5.2 the reduction Cω has infinitely many root steps. Hence, by the Head Normalisation Theorem, the starting term t does not have a head normal form, and a fortiori no normal form. That is, we have proved ¬WN.	 
Corollary 5.3 Let R be an orthogonal TRS, not necessarily WN. If t is a cyclic term, then t has a term in its family without normal form.
Proof Let t be a cyclic term in R. Suppose t does not have a term without normal form in its family. That is, F(t) is an orthogonal TRS with property WN. Then by Theorem 5.1, F(t) is acyclic, contradiction.	 
Remark 5.4 Compare Theorem 5.1 with the following related observation by Van Oostrom [11]: A term allowing a trivial head step is not normalizing in a weakly orthogonal TRS. Here a step is ‘trivial’ if it is of the form t → t, so a one-step cycle. Compared to the present Theorem 5.1 this observation
is more general in that it holds for weakly orthogonal TRSs (left-linear and only trivial critical pairs). On the other hand it is less general in that only one-step cycles are considered. However, in our planned sequel to the present paper (see Section 6), a full generalization to the weakly orthogonal case is obtained.
Remark 5.5 Theorem 5.1 is also stated in Terese [9], p. 469, where it has been proved in a very different way that yields a more general theorem. The technique used there will be employed in our planned sequel, described in Section 6.

Concluding Remarks and Questions
The main theorem of this paper, Theorem 5.1 stating that WN ⇒ AC for orthogonal TRSs, in fact extends into three distinct directions:
to fully-extended higher-order pattern rewrite systems, where terms may contain bound variables,


to the weakly orthogonal case, where rules may have (trivial) conflicts, and
to weak head normalisation (WHN), where reductions to head normal form are assumed to exist.
In a sequel to the present paper we will treat these extensions, first sep- arately, and next their combinations. By means of alternative techniques it turns out that for each pair of combinations of the three extensions we find a generalization of our present theorem. Part of the relevance of these exten- sions is that our theorem is shown to hold for sub-calculi of λβη-calculus, in particular typed sub-calculi. Then our result pertains to the area of typed λ-calculi. The combination of all three extensions remains open however.

References
Barendregt, H. P., “The Lambda Calculus: Its Syntax and Semantics,” Studies in Logic and the Foundations of Mathematics 103, Elsevier Science, Amsterdam, 1985, second edition.
Bergstra, J. and J. W. Klop, Church-Rosser strategies in the lambda calculus, Theoretical Computer Science 9 (1979), pp. 27–38.
Bergstra,  J.  A.,  J.  W.  Klop  and  A.  Middeldorp, “Termherschrijfsystemen,” Programmatuurkunde, Kluwer Bedrijfswetenschappen, Deventer, 1989, in Dutch.
Khasidashvili, Z., M. Ogawa and V. van Oostrom, Perpetuality and uniform normalization in orthogonal rewrite systems, Information and Computation 164 (2001), pp. 118–151.
Klop, J., Unpublished notes for the seminar on reduction machines.
Klop, J., Term rewriting systems, in: S. Abramsky, D. Gabbay and T. S. E. Maibaum, editors,
Handbook of Logic in Computer Science, 2, Oxford University Press, 1995 pp. 1–116.
Klop, J. W., Reduction cycles in combinatory logic, in: J. P. Seldin and J. R. Hindley, editors, To H. B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism, Academic Press, 1980 pp. 193–214.
Probst, D. and T. Studer, How to normalize the Jay, Theoretical Computer Science 254 (2001),
pp. 677–681.
Terese, “Term Rewriting Systems,” Cambridge Tracts in Theoretical Computer Science 55, Cambridge University Press, 2003.
van Oostrom, V., Eventually increasing (April 1998), CWI and University of Utrecht, Draft,
http://www.phil.uu.nl/~oostrom/publication/ps/ei.ps .
van	Oostrom,	V.,	Trivial	(August	1998),	University	of	Utrecht,	Draft,
http://www.phil.uu.nl/~oostrom/publication/ps/trivial.ps .
Waldmann, J., The combinator S, Information and Computation 159 (2000), pp. 2–21.
