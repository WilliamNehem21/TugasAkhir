Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 325 (2016) 299–304
www.elsevier.com/locate/entcs

On the Representation of Semigroups and Other Congruences in the Lambda Calculus
Rick Statman1
Mathematical Sciences Carnegie Mellon University Pittsburgh, PA
USA

Abstract
We show that every semigroup with an RE word problem can be pointwise represented in the lambda calculus. In addition, we show that the free monoid generated by an arbitrary RE subset of combinators can be represented as the monoid of all terms which fix a finite set of points.
Keywords: lambda calculus, semigroups, representation


1	Introduction
Combinators being both functions and arguments can act on one another by ap- plication and composition. More generally, if $j and $” are sets of combinators closed under beta conversion, the A action of $j on $” is the set {AMN|M : $j and N:$”} closed under beta conversion. First we recall the definitions of some familiar combinators:


B := λabc.a(bc) Bj := λabc.b(ac) C∗ := λab.ba
K := λab.a I := λa.a
S := λabc.ac(bc)
O := (λx.xx)(λx.xx) 0 := λyz.z
s := λxyz.y(xyz)
Y := (λxz.z(xxz))(λxyz.z(xxz))

Example 1.1 A := K : this is the trivial action.
Example 1.2 A := I : this is the applicative action.

1 Email: statman@cs.cmu.edu

http://dx.doi.org/10.1016/j.entcs.2016.09.044
1571-0661/© 2016 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).

Example 1.3 A := B : this is the semigroup action.
Example 1.4 A := S : the pointwise applicative action.
Of course, this definition extends to multiple arguments by Currying. We write
M = N mod beta
if M beta converts to N .
It is trivial that general A can be reduced to I, and that multiple arguments can be reduced to a single argument by pairing. In addition, applicative action can be reduced to the semigroup action since K(xy)= Bx(Ky) mod beta. However, there is another reduction which is lambda I.
Let
D := Y (λfxyz. fx(zy)) where Y is Turing’s fixed point combinator as above.
Lemma 1.5 For any U, V if B(C∗U )D = B(C∗V )D mod beta then
U = V mod beta.
Proof. Straightforward.	2
Now given $j and $jj, since
C∗(AM ) = B(B(C∗M )(C∗A))B mod beta
C∗(AMN ) = B(B(B(C∗M )(C∗A))B)(B(C∗N )D) mod beta,  and
= B(C∗M )(B(C∗A)(BB(B(C∗N )D))) mod beta
the A action of $j on $jj is equivalent to the semigroup action of
{C∗M | M : $j} on {(B(C∗A)(BB(B(C∗N )D))) | N : $jj}. We next consider an example of the action of I in representing semi-groups.
Definition 1.6 Let $j be an RE set of combinators closed under beta conversion. An equivalence relation ∼ on $j is said to be pointwise representable on $jj if for every M, N : $j we have
MP : $jj for all P : $jj
M ∼ N iff for all P : $jj
MP = NP mod beta
Example 1.7 (Kleene):
$j = any RE set of definitions of total recursive functions
$jj = the Church numerals and ∼ = extensional equality
Non-example (Plotkin):

$j = all combinators
$jj = all combinators and ∼ = beta conversion.
Let $ be a semigroup on a countable number of generators. We assume that the generators are denoted by the positive integers. Elements of $ are then denoted by words
w = w(1) ... w(l).
of variable length l, on the generators of $. We write u = v mod $ if the words u
and v are equal in $. We represent the word w by the lambda term
‘wj := BjOw(1)(BjOw(2)(... BjOw(n − 1)Ow(n) .. .))
where integers are replaced by their Church numerals.
We define combinators P, Q, R as follows.
By Theorem 3 of [7] there exists a closed term P such that PM = PN mod beta if and only if either M = N mod beta or both M = ‘ujU mod beta, N = ‘vjV mod beta, and u = v mod $, where either U or V , or both, may not exist, but each must be of positive order if it exists. Now we set
p := predecessor for Church numerals, and
A := Y (λxy. y0(B(py)1) (An = nth eta expansion of I mod beta)
Q := λxy .Y (Ax(fsx)(Py))
R := Q0.

For each word w we define a second representation by the lambda term
“wjj := B(C∗ ‘wj)B. Then “wjj = λab.a(‘wjb) mod beta and for words, w, u
B“wjj“ujj = “wujj mod beta
and for any words w1,..., wn, u1,..., um
“wjj(R“wjj ... “wjj)(Rjjujj ... “ujj )
1	n	1	m
= Q(n + 1)(P (“wjj)) ... (P (“wjj))(P “wjj((R“ujj ... “ujj )))
1	n	1	m
= Q(n + 1)(P (“wjj)) ... (P (“wjj))(P “wjj) mod beta.
1	n
Now it is not difficult to prove that if
Q(n + 1)(P (“wjj)) ... (P (“wjj))(P “wjj)
1	n
= Q(n + 1)(P (“wjj)) ... (P (“wjj))(P “ujj) mod beta
1	n
then w = u mod $.
Now take for $j the set of all “wjj and for $jj the set of all R(“wjj) ... (“wjj). Thus
1	n
we have proved the
Proposition 1.8 Every RE semigroup is pointwise representable.

For a general RE congruence ∼, we illustrate with the case of one binary function symbol f . We assume that we have G¨odel numbering ‘tj, ‘rj of terms t, r with a recursive function t, r '→ f tr represented by a lambda term F ; that is F ‘tj‘rj = ‘f trj mod beta. By Theorem 3 of [7] there exists a closed term P such that PM = PN mod beta if and only if either M = N mod beta or both M = ‘uj mod beta, N = ‘vj mod beta and u = v mod $. Now define an app
A := λabcde.⟨a, e⟩
and define
”t” := ⟨A,j tj,Pjtj⟩
”f ” := λxy.⟨A, F (xK)(yK),P (F (xK)(yK))⟩.
The set $jj can be taken to be the set of all terms ⟨A, Pjtj⟩. Thus,
Proposition 1.9 Every RE congruence is pointwise representable.
These representation results implicitly use the “regularity” of the representation. If the representing functions are essentially irregular and beta conversion on that set is decidable, such as the set of Church numerals, then co-RE congruences can be represented. Using Kleene brackets {e} for the recursive function with Godel number e, we have
Lemma 1.10 Let ∼ be a co-RE equivalence relation on the set of natural numbers. Then there exists a recursive function f such that for any e, {f (e)} is total recursive and i ∼ j iff {f (i)} = {f (j)}.
Proof. We proceed recursively assuming that f (i) is defined for i = 0,..., n. To define f (n + 1) we compute successive values {f (n + 1)}(j) for j = 0,..., k. Assume that these have been computed up to k. To compute the value for k +1 let @ be the subset of {0, 1,..., n} such that i :@ iff there is not j < k +1 with {f (i)}(j)= / =
{f (n + 1)}(j). Now compute {f (i)}(k + 1) for each i : @. The values partition @; i and j belong to the same block iff {f (i)}(k + 1) = {f (j)}(k + 1). Now the set of all i such that i is inequivalent to n + 1 is uniformly RE in n + 1. For any two distinct blocks in the partition of @, eventually every member of at least one of the blocks will appear in the enumeration. When there is only one block left in the partition we can set {f (n+1)}(k +1) = {f (i)}(k +1) any i in that block provided after k +1 steps in the enumeration of the inequivalents to n+1 at least one member of that block has not been found. Otherwise, we set {f (n + 1)}(k + 1) = 1+ max[{f (i)}(k + 1)|i : @]. End of proof.	2
The construction for Proposition 2 can now be modified to give
Proposition 1.11 Every co-RE congruence is pointwise representable.
Next we consider the case of a general RE set $ closed under beta conversion.
The members of $ generate a free monoid under the map

M '→ C∗M.

Here we intend to include the Church numeral 1 = I mod eta as well as I. If
$jj is a set of terms closed under beta conversion we say that $j is fixed-pointwise representable on $jj if the set {L | LX = X mod beta for all X : $jj} = the free monoid generated by

{L | L = C∗M mod beta for some M : $j}
Note here that we have specifically allowed $jj to contain open terms. We recall some of the s of [5] with a few small changes. T is the fixed point combinator of Bohm ([1] 6.5.4) with a free variable b;


E := the enumerator of {C∗N | M : $}
T := (λxyz. z(xxyz))(λxyz. z(xxyz))b
Aj := λfg. λxyz. fx(a(Ex))(f (Sx)y(g(Sx))z)
Ajj := λfg. λx. f (Sx)(a(E(Sx))(g(Sx))(gx) G := T (λu. Ajj(T (λv. Ajvu))u)
F := T (λu. AjuG)
H := λxa. F 0(ax)(G0)
J := Y (λf. λxy. f (x(Hy)))(Y (λg.g(H(E0))))

L := Y (λfxy. f (x(Jy))
P := Y (λf. f J )
Q := LP
Lj := Y (λf. λxy.⟨f, x⟩)
Ljj := Y (λf. λxyz.⟨f, x, z⟩).

as in [3] have
Lemma 1.12 JM = J mod beta iff there exists an m such that Em = C∗M mod beta.
Now consider the following “points fixed” equations
x⟨Lj, 0⟩ = ⟨Lj, 0⟩
x⟨Ljj, 0, 1⟩ = ⟨Ljj, 0, 1⟩
xQ = Q.
Now if


then
M = λa. a(C∗M1) ... (C∗Mm) for Mi :$ 

M⟨Lj, 0⟩ = LjM10(C∗M2) ... (C∗Mm)
= ⟨Lj, 0⟩(C∗M2) ... (C∗Mm)= ... 
= ⟨Lj, 0⟩ mod beta,
and similarly
M⟨Ljj, 0, 1⟩ = ⟨Ljj, 0, 1⟩ mod beta.
In addition,
MQ = LP (C∗M1) ... (C∗Mm)= L(P (J (C∗M1)))(C∗M2) ... (C∗Mm)
= L(PJ )(C∗M2) ... (C∗Mm)= LP (C∗M2) ... (C∗Mm)= ... 
= Q mod data

Thus all the members of the free monoid generated by the C∗M with M : $ satisfy (1), (2), and (3).
Proposition 1.13 Suppose that N satisﬁes the equations (1), (2), and (3) mod beta, then N lies in the free monoid generated by the C∗M for M in $j.
Proof. Suppose that such an N is given. Since N satisfies (1) mod beta N has a head normal form. W.l.o.g. we may assume N is in head normal form. Since N satisfies equation (2) mod beta, and ⟨Lj, 0⟩, ⟨Ljj, 0, 1⟩ have head variables with a different number of arguments, the head variable of N is the first one bound in its lambda prefix. Since ⟨Lj, 0⟩ has order 1, the lambda prefix of N has length 1 or 2. First suppose that N has order 2: N = λxy. xX1 ... Xm. Then setting Zi := [Q/x]Xi
NQ = λy. QZ1 ... Zm = λy. L(P (JZ1)) ... (JZm)) mod beta.
By an argument similar to the argument of [7] Theorem 3, this can only be the case if Zm = y mod beta and for i < m we have JZi = J mod beta. Since Q contains an unprojectible free variable in F and G it must be the case that each Zi beta converts to a term without x, and for i < m without y. In other words, x is head original and thus we assume that
N = λxy. xN1 ... Nm—1y.
Hence, by Lemma 3 there exist M1,..., Mm—1 :$ such that Ni = C∗Mi mod beta for
i = 1,..., m−1, and we have N = B1(B(C∗M1)(... (B(C∗Mm—2)C∗Mm—1 : $)) .. .)
mod beta. The case for N of order 1 is similar with I replacing 1.	2
Remark 1.14 If the members of $j all have normal forms then the members of $jj can be taken to be closed terms.

References
Barendregt, H., The Lambda Calculus, North Holland (1982)
Church, A., A Note on the Entscheidungs Problem, J. of Symbolic Logic, 1 (1936).
Curry, H. B., Feys, R., “Combinatory Logic Vol.I”, North Holland, (1958).
Statman, R., Combinators and the theory of partitions, CMU Research Report No. 88-31, (1988).
Statman, R., Some Examples of Non-Existent combinators, Theoretical Computer Science, 121, (1993).
Statman, R., On Cartesian Monoids, CSL ’97 LNCS 1258.
Statman, R., Morphisms and Partitions of V -sets, CSL, (1998).
Statman, R., Cartesian Monoids, MFPS 2010 ENTCS Vol 65, Sept. 6, 2010.
Statman, R., Near semirings and lambda calculus, TLCA (2014).
