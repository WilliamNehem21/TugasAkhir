Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 335 (2018) 113–130
www.elsevier.com/locate/entcs

Stable States of Boolean Regulatory Networks Composed Over Hexagonal Grids
Pedro L. Varelaa,b,1 Inˆes Lyncea,2 Vasco Manquinho,a,3 Claudine Chaouiyab,4 Pedro T. Monteiroa,5
a INESC-ID/Instituto Superior T´ecnico, University of Lisbon, Portugal
b Instituto Gulbenkian de Ciˆencia, Oeiras, Portugal

Abstract
Cellular processes are governed by complex molecular regulatory networks. To understand the dynamics emerging from these networks, a popular approach relies on a Boolean abstraction. These Boolean regulatory networks define qualitative models with discrete dynamics in which properties of interest relate to the so- called attractors and their reachability. When considering multi-cellular systems, cell-cell communication must be accounted by properly inter-connecting cellular network models. This is done through logical composition rules that define cell-cell communication, leading to a (composed) model of the regulatory control of the whole.
This work focuses on Boolean models composed over hexagonal grids, which suitably represent simple epithelia. Stable states embody stable patterns of the grid, i.e., ensembles of differentiated cell types, each characterized by a specific pattern of gene expression. Identification of these stable states is a challenging problem due to the combinatorial explosion of the dimensions of the model state space and to the potentially huge number of solutions.
Following the formalisation of model composition, we present a SAT-based method to identify the stable states of Boolean models composed over hexagonal grids. This approach is applied to a few prototypical case studies, illustrating counter-intuitive dependencies of the number of stable states on: the cellular model, the composition rule and the grid characteristics (i.e., dimensions and border conditions).
Keywords: Stable patterns, multi-cellular systems, Boolean regulatory networks, model composition, SAT encoding


Introduction
Molecular components (genes, transcription factors, proteins, etc.) interact and define complex networks, which control cellular processes (differentiation, prolifer- ation, death, etc.). Appropriate computational tools are needed to analyse the be-

1 Email:Pedro.Varela@tecnico.ulisboa.pt
2 Email:Ines.Lynce@tecnico.ulisboa.pt
3 Email:Vasco.Manquinho@tecnico.ulisboa.pt
4 Email:chaouiya@igc.gulbenkian.pt
5 Email:Pedro.Tiago.Monteiro@tecnico.ulisboa.pt

https://doi.org/10.1016/j.entcs.2018.03.011
1571-0661/© 2018 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).

haviours of such regulatory networks. In this context, the logical formalism defines discrete models in which each regulatory component is associated with a Boolean (or multi-valued) variable and a logical function defining the evolution of this vari- able depending on the component’s regulators [2,5,7]. Such models are amenable to formal methods to characterise the network dynamics and, in particular, to identify attractors and their reachability properties. Attractors are of the utmost impor- tance as they relate to long term behaviours of the modelled processes. An attractor reduced to a single state is referred to as a stable state, which generally embodies a differentiated cellular state. Complex attractors encompass several states and denote oscillatory behaviours.
Various methods have been devised to determine stable states in logical models, a problem known to be NP-hard [3]. Using a Binary Decision Diagram representation of the dynamics, Garg et al. proposed an efficient algorithm to recover the stable states of Boolean models [17]. Also relying on the exploration of the dynamics, a SAT-based bounded model checking approach allows to find all the attractors of Boolean models under a synchronous update [14]. In contrast, some methods search for the stable states as fixed points of the transition function. For example, constraint programming can be used to solve stability equations [12], or yet the table states of multi-valued logical models are recovered by properly defining a decision diagram representation of the stability condition which allows to recover the stable states [23].
Dealing with models of multi-cellular systems worsens the problem of the com- binatorial explosion of, not only the size of the state spaces, but also, potentially, of the number of stable states. This precludes the use of methods currently available, calling for novel approaches.
In this work, we consider Boolean models of simple epithelia (i.e. single layers of cells) defined as the composition of cellular models over 2D grids of hexagonal cells. We propose to use a SAT-based approach to determine all the stable states of such models. Cellular models were defined using GINsim, a tool for the logical modelling of regulatory networks equipped with SAT encoding features (available at http://ginsim.org) [22]. We assume that all the cells are controlled by the same internal regulatory network, which is modelled using the logical formalism. A com- posed model is defined by specifying logical rules governing the interactions between instances of this cellular model. Using a similar rational, several logical models of pattern formation within multi-cellular systems have been published, particularly in the fruit fly development [4,15,26]. In the same vein, for multi-cellular logical models under an asynchronous update, Mendes et al. relied on a process alge- bra framework to define a compositional procedure that uncovers the stable states reachable from an initial condition, a very challenging problem, since the dynamics has to be considered [21].
This paper is organised as follows. Section 2 introduces the basics of the logi- cal framework, covering the modelling of single cell regulatory networks and their composition. This composition is specified through integration functions that de- fine the rules of cell-cell communication, and are appropriately expressed in terms

of cardinality constraints. Section 3 then presents two SAT encodings to retrieve the stable states of a composed model over a 2D hexagonal grid. Using the in- tegration functions, the first encoding assembles the stability conditions of all the single cell model instances. The second encoding specifies compatibility rules be- tween abstracted representations of the cellular stable states. Besides discussing the performances of both encodings, Section 4 is mainly devoted to uncovering trends in the evolution of the numbers of stable states, using case studies to identify the parameters that matter. We conclude with a discussion of our current results and future work.
Logical Regulatory Graphs and Composition
This section introduces the logical modelling formalism and model composition. We refer to [2,5,7] for further details on the modelling framework.

Logical Regulatory Graph (LRG)
As formalised in Definition 2.1, an LRG is a graph in which the nodes embody genes or, more generally, regulatory components and the directed, signed edges represent regulatory interactions between these components. Moreover, variables are associated with components to denote their states (ON/OFF or yet true/false), and logical functions specify the evolution of these variables.
Definition 2.1 A Logical Regulatory Graph is defined by a triplet N = (G, U, F ) with:
G = {gi}i∈LG is the indexed set of the internal components (LG being the corre- sponding set of indices);
U = {ui}i∈LU is the indexed set of the input components (LU being the corre- sponding set of indices, with LG ∩ LU = ∅);
each component of G∪U is associated with a Boolean variable: ∀i ∈ LG ∪LU , xi ∈
{0, 1} denotes the state of the component with index i;
the state space S is given by {0, 1}|G∪U| and x ∈ S denotes a state of the LRG;
F = {fi}i∈LG∪LU is the transition function specified by the logical functions defin- ing the evolution of the component states; ∀i ∈ LG ∪ LU , fi : S → {0, 1}, and at any state x the future value of xi is given by fi(x).
Input components can be viewed as receptors at the cellular membrane, receiving external signals. They represent the environment and, in the context of a cellular model, their levels are assumed constant. Therefore, the logical function associated to any input component is the identity: ∀ui ∈ U, ∀x ∈ S, fi(x) = xi. Figure 1 provides an illustration of a simple LRG. From now on, to denote a component, we will indistinctly use its index i rather than gi (resp. ui) for an internal component (resp. input component).
In this work, we focus on Boolean LRGs as specified in Definition 2.1 (in contrast

A) Regulatory graph	B) Logical functions	C) Stable states
Figure 1. The logical formalism illustrated: A) LRG with 3 internal components (G = {g1, g2, g3}) and a single input component (U = {u0}); activations are represented by green arrows (e.g., g1 activates g2 and g3), the red blunt arrow represents an inhibition (u0 inhibits g1). B) Logical functions defining the evolution of the variables (ч denotes the logical negation, Λ the conjunction and V the disjunction). C) The two model stable states, where a stable state is characterised by the values of the internal components and may be possible for different values of the input component.
to multi-valued LRGs whose variables can take a broader range of discrete values). This is not a limitation because any multi-valued LRG can be formally mapped to a Boolean LRG [13]. Indeed, this mapping was been used in our first case study in Section 4.
An LRG defines a discrete dynamics over its (finite) state space, for each state x ∈ S, if xi < fi(x) then xi will increase (i.e. xi will be set to 1 or true, reflecting the fact that gi is activated); if xi > fi(x) then xi will decrease (i.e. xi will be set to 0 or false, reflecting the fact that gi is inhibited); if xi = fi(x) then xi remains unchanged i.e. gi is stable in state x.
Definition 2.2 Given an LRG N = (G, U, F ) and its state space S, a state x ∈ S
is stable if and only if it satisfies the stability condition:
F (x)= x.	(1)
Hence, stable states are the fixed points of the function F . Note that to satisfy the stability condition above, it is enough to verify that ∀gi ∈ G, fi(x)= xi. This is because input components are maintained constant.
Composition of Logical Regulatory Graphs
Cells communicate through signals emitted by specific internal components that, in biological terms, correspond to e.g. secreted proteins; these signals are received by input components of neighbouring cells. For a multi-cellular system encompassing p communicating cells, we build a composed logical model consisting of p LRGs instances properly connected by defining integration functions, which specify how signals are combined to define the levels of some input components (see Figure 2). Definition 2.3 formalises this composition procedure.
Definition 2.3 Given p identi cal LRGs Nk = Gk,Uk,Fk , k = 1,..., p, the com-
i	i	i	i
components with:
Zk ⊆ S	k′	k

hk : {0, 1}|Zk| → {0, 1}, the logical integration function defining the value of uk.

i
If Zk
i

/= ∅, uk
i
is a mapped input component, otherwise it remains an input

component and hk is the identity function.
Then the composition of the p LRGs, denoted  n  Nk}
N = (G, U, F ) where:

k=1,...,p
, is an LRG

the set of internal components is G =  Sk=1,...,p Gk ∪ Sk=1,...,p U˜k , where
U˜k = {uk ∈ Uk s.t. Zk /= ∅} is the set of mapped input components of Nk;
the set of input components is U = Sk=1,...,p Uk \ U˜k ;
the state space is S = {0, 1}|G∪U|;
a mapping ind reindexes all the components with, ∀k = 1,..., p:
∀gk ∈ Gk ∪ U˜k, ind(gk) ∈ LG and ∀uk ∈ Uk \ U˜k, ind(uk) ∈ LU ;
the logical regulatory functions are defined adequately: ∀j ∈ LU , fj is the identity function and ∀j ∈ LG,
- if the component is such that ind(gk)= j is in Gk, i.e., is an internal component

of Nk, then

∀x ∈ S, fj(x)= fk(x Sk ),

where x Sk is the projection of x onto Sk, the state space of Nk;
- if the component such that ind(uk) = j is in U˜k with M(uk) = Zk, hk , i.e.,

i
is a mapped input of Nk, then
i	i	i


∀x ∈ S, fj(x)= hk(x Sk ).

Figure 2 illustrates this model composition. For simplicity, we assume that the LRGs to be composed are identical instances. Moreover, the composition rules of the several instances of any input component are also assumed to be identical. The generalisation to the composition of distinct LRGs would be straightforward (see [21]) as well as the consideration of distinct composition rules.

Given a composed model  n  Nk}

k=1,...,p
, its stable states are the solutions of

Equation 1. However, the following property asserts that we can also recover these
stable states from those of the single cell LRGs Nk. For notation convenience, we assume that the mapping ind verifies:
∀k ∈ {1,..., p}, ∀ck, ck ∈ Gk ∪ Uk such that i < ij, ind(ck) < ind(ck ) (the order
i	i′	i	i′
of the components in Nk is preserved) and,
∀k, kj ∈ {1,..., p} such that k < kj and ∀ck ∈ Gk ∪Uk, ∀ck′ ∈ Gk′∪ k′	k

i	i	U
k′
, ind(ci ) <

ind(ci ) (the order of the LRG instances is preserved).
Property 1 Given a composed model (G, U, F ) =  n Nk}


k=1,...,p

and its state

space S = Sk=1,...,p Sk,a state x = (x1, x2,..., xp) ∈ S (with xk ∈ Sk,k = 1,..., p),

is stable if and only if:
∀k = 1,..., p,Fk(xk)= xk and	(2)
∀j ∈ LG s.t. j = ind(gk) with gk ∈ U˜k, fj(x)= xj.	(3)
Property 1 asserts that a state of the composed model is stable if and only if it is defined as the concatenation of compatible stable states of its constituent LRGs. More precisely, Equation 2 indicates that the states of each LRG must be stable when not affected by the composition. Furthermore, Equation 3 specifies the compatibility rule for the composition of stable states instances: the values of the mapped input components must remain stable considering the values of their regu- lators (internal components of neighbouring LRGs, as specified by M). Although rather straightforward, the proof is cumbersome due to convoluted notation.
In practice, to compose LRGs, one needs to specify how they influence each other. This is done through the composition rule M, where the definition of the sets Zk depends on the topology of the system. Here, as previously mentioned, we consider that all the cells encompass the same LRG, are hexagonal and arranged over a 2D grid.  This leads to the definition of a simple neighbouring relation,
A) Model composition, 2x2 cells	B) Integration function: OR
h1(x)= x2 V x3
0	1	1
at-least-1 neighbour with x1 =1 
Stable states
C) Integration function: AND
h1(x)= x2 Λ x3
0	1	1
at-least-v neighbours with x1 =1 
Stable states
Figure 2. Composition of the toy model of Figure 1. A) A 2×2 2D hexagonal grid, displaying the cellular networks and cell-cell communication; the integration input u0 is regulated by (i.e. integrates signals from)
g1 of neighbouring cells (e.g. Z1 = {g2, g3} and Z2 = {g1, g3, g4}). B) Stable states of the composed
0	1  1	0	1  1  1
model when the integration function of u0 is a disjunction. C) Stable states of the composed model when the integration function of u0 is a conjunction. Specification of the integration function as a cardinality constraint is indicated, v denoting the number of neighbours (v=2 for cell 1, v=3 for cell 2). Note that, different integration functions lead to different set of stable states.

depending on a distance: cells have up to 6 direct neighbours (contacting cells on the grid, i.e. at distance 1) and possibly more neighbours at greater distances. If the neighbouring relation specifies a distance 2, a cell has up to 6 + 12 = 18 neighbours. The number of neighbours thus depends on the distance, but also on the position of the cell in the grid (less neighbours for cells at the grid borders than at its center).

SAT encoding
In GINsim, a software tool for the logical modelling of cellular regulatory networks [22], the stability condition of a model component (Equation 1) is encoded in the form of an ordered decision diagram, and the conjunction of these conditions for all the components is efficiently computed [23]. More precisely, the resulting decision diagram encodes the stability conditions of the whole model as a Disjunctive Normal Form (DNF) formula, where each conjunctive clause in the formula is given by a path from the root to a leaf labelled true. Nevertheless, as SAT solvers support Conjunctive Normal Form (CNF) formulas, we retrieve the equivalent CNF formula. This CNF formula includes one clause for each path from the root to a leaf labelled false, each clause being the disjunction of the negated literals defining the path. Our SAT encoding relies on this export feature of GINsim for stability conditions of cellular models (as defined in Equation 1).
Logical integration functions are more easily specified as cardinality constraints over the value(s) of internal components across neighbours. We denote a cardinality constraint by #q(y1,..., yv) where q is the cardinal restriction, v is the number of variables over which the restriction applies, and # is an operator in {≤, ≥}, representing at-most-q or at-least-q, respectively. The compatibility rule as stated in Equation 3 thus requires, for each mapped input component uk, the encoding of

a constraint uk
⇐⇒ #q(y1,..., yv), that is:
 ¬uk ∨ #q(y1,..., yv)  ∧  uk ∨ ¬#q(y1,..., yv) .	(4)


The SAT community has addressed the encoding of cardinality constraints, fo- cusing mostly on the at-most-1 constraint [9,19,24]. A survey of these encodings goes beyond the scope of this paper, and we refer to [8,16] for additional details. In this work, we use the classical Binomial encoding. Different SAT encodings gener- ate different formulas (varying in the numbers and sizes of the clauses, and possibly requiring additional variables). The performance of a SAT solver depends on the problem characteristics and on a trade-off between the numbers and sizes of the clauses and the number of variables [1,24].
Our first approach relies on the composition rule to combine the stability condi- tions of all the cellular model instances, thus defining the stability condition of the multi-cellular, composed model (i.e., “compose first, compute afterwards”). Our second approach computes the stable states of the cellular model, which are then combined using the compatibility rules as specified in Equation 3 (i.e., “compute

first, compose afterwards”).

Stability condition of a composed model
The specification of a composed model includes p LRG instances Nk,k = 1,...,p 
and the composition rule M(uk)= Zk, hk for each mapped input component. For
each mapped input component, the integration function is defined as a cardinality
constraint over a set of internal components of neighbouring cells (elements of Zk).
k′	i k′
If an input receives signals from distinct internal components (i.e., Egi1 and gi2
in Zk with i1 /= i2), its integration function may combine cardinality constraints
over these distinct regulators. For simplicity, here we consider that this is not the case, i.e., an input component is mapped to the same, unique internal component
of neighbouring cells. The integration function hk is thus defined over a set of
k′
Boolean variables, (y1,..., yv), where each yi refers to a xi , the level of the internal
component gk′ in Zk, and v is the number of neighbours of Nk. To encode the
stable states of the composed model, we first encode the stability condition of all internal components (Equation 2), and then the integration function of the mapped inputs (Equation 3), expressed as a cardinality constraint (Equation 4).
In the sequel, we will refer to this SAT encoding as Stability condition.

Composition of cellular stable states
Here, we first determine the set of all the stable states of the LRG to be composed and, to each of those states a Boolean variable is associated. The compatibility rules (see Property 1) are then encoded as follows, for each mapped input component ui:
#q(σui ,..., σui ) =⇒ Σui ,	(5)
1	v
ч#q(σui ,..., σui ) =⇒ Σчui ,	(6)
1	v
where, for all j = 1,..., v, the Boolean variable σui is true if the jth neighbour is in a stable state for which the internal component mapped to ui is at the required

level to activate ui. In other words, each σui
accounts for the disjunction of the

stable states compatible with a true value of the input component ui. Moreover, Σui (resp. Σчui ) is the disjunction of the Boolean variables associated to the LRG stable states for which ui = 1 (resp. ui = 0).
Unlike the equivalence in Equation 4, we have an implication because a stable state can be possible for both values of the input component, and thus the associated Boolean variable will appear in both Σui and Σчui (see example in 4.1).
Note that if there was no cell-cell communication (i.e., no mapped inputs), the number of stable states would be the cardinal of Σ to the power of the number of LRG instances in the composed model. This gives an upper bound of the number of stable states of a composed model, and when some inputs are mapped, the compatibility rules lead to a lower number of stable states.
In the sequel, we will refer to this SAT encoding as Compatibility condition.

Case studies
We first present a case study, which corresponds to a concrete regulatory module and mainly serves to compare our two SAT encodings for the identification of the stable states of a composed model. Then, three synthetic models are presented to illustrate the diverse parameters that influence the numbers of stable states.
Note that, because the number of stable states may grow exponentially with the number of cells in the grid, to perform the tests presented below, we settle for counting the number of stable states instead of characterising their actual identity. To this intend, we use the model counter Cachet [27].

Segment-Polarity
Along its development, the fruit fly embryo is segmented in repeated units, which give rise to specific anatomical structures of the adult fly (e.g. thorax, wings, etc.). This process is controlled by a set of genetic modules among which the segment- polarity module establishes the borders between the embryo segments. Here, we consider the logical model proposed by S´anchez et al. for this regulatory module as depicted in Figure 3-A) [26]. To account for the formation of the segmental borders across the embryo, S´anchez et al. composed the segment-polarity model over a row of 6 cells. Figure 3 further provides the cellular model stable states, the integration functions used for model composition in addition to compatibility rules and characteristics of the two SAT encodings (i.e. the Stability condition versus the Compatibility condition, see Section 3). The performances of these encodings are assessed by increasing the number of rows in the hexagonal grid and thus the number of LRG instances in the composed model (see Figure 4).
As shown in Figure 4-A, the Compatibility condition encoding yielded better performances, allowing us to explore grids up to 6 rows, while the Stability condi- tion encoding only permitted the counting of stable states for grids up to 4 rows (given a timeout of 14000 seconds). This gain in performance is mainly due to the fact that, for this specific model, the Compatibility condition encoding requires less variables and less clauses (see Figure 3-E). In general, we expect that the Com- patibility condition encoding should perform better than the Stability condition encoding when the number of LRG components is higher than the number of cellu- lar stable states. This is the case for the segment-polarity model as well as for most realistic models. To analyse the remaining case studies, the Compatibility condition encoding was used.
Moreover, Figure 4-B shows that, although drastically limited by the composi- tion (cell-cell communication), the number of stable states increases exponentially with the number of rows.
Although the number of stable states increases exponentially, some of pairs of states are symmetric, as observed by S´anchez et al. and as illustrated in Figure 3-F
[26]; indeed, there are 65 stable states for a 6 × 1 grid but, if we discard symmetrical states (i.e., considering only one of them), this number drops to 29. This symmetry property could be used to reduce the search space of grid stable configurations.


Figure 3. Segment-Polarity model: A) LRG as defined in [26], where multi-valued components have been duplicated following the Boolean mapping defined in [13]; e.g. Wg b1 and Wg b2 replace the multi-valued Wg. B) Integration functions of the two input components: e.g. Wg ext is 1 iff at-least-1 neighbour has Wg b2 equals to 1. C) The segment-polarity LRG has 5 stable states; the table names those states and provides the corresponding values of the inputs and relevant internal components (that influence the integration functions). The symbol ٨ indicates both values 0 and 1. D) Compatibility rules: e.g. if at-least-1 neighbour is in state W, then the considered LRG instance can be either in state W, E or N. E)
CNF characteristics for the two SAT encodings: number of variables and clauses for grids of sizes 1 × 6 and 6 × 6. F) Illustration of two pairs of symmetric stable states over a 1 × 6 grid as described in [26].


Finally, it may be worth noting that here all possible stable states are counted and that reachability from specific initial conditions is not considered, which would not only greatly reduce the number of (reachable) stable states, but also provide grid stable states with a biological relevance.

Time performance

10000


1000


100


10


1


0.1


0.01
1	2	3	4	5	6
Grid size p x 6
Stable states
1e+30


1e+25


1e+20


1e+15


1e+10


100000


1
1	2	3	4	5	6
Grid size p x 6

Figure 4. Segment-polarity module composed over a p × 6 hexagonal grid (composition rules given in Figure 3-D). A) Running times for the two SAT encodings when varying p the number of rows. B) Number of stable states when varying p the number of rows (this number obviously does not depend on the chosen SAT encoding); curves depict the number of stable states of the composed model (in green) and 56p, the upper bound of the number of stable states (in red). All plots are on a logarithmic scale.

Toy model
We define the composition of the toy model defined in Figure 1 over a 4 × 4 grid, with a composition rule set to: at-least-q neighbours with g1 at level 1 (x1 = 1). Assuming that the neighbouring distance is 2, we observe that the number of stable states depends on the value of q in the cardinality constraint. However, due to the borders of the grid, not all the cells have the same number of neighbours (see Figure 5). To assess how borders affect the number of stable states, we consider an horizontal roll-over (i.e., defining an hexagonal cylinder), which makes the left border of the grid adjacent to the right border, and a double roll-over (i.e., defining an hexagonal torus).
Results show that the number of stable states of the composed model increases


		

Figure 5. Numbers of neighbours in a 8 × 8 hexagonal grid, for distances 1, 2 and 3. Numbers is the cells indicate the number of their neighbours.

with q, independently of the border existence (Figure 6-A). This is not surprising, because as q (the number of required neighbours) tends to v (the number of actual neighbours), the restriction on the state of neighbouring cells is harder to fulfill (as more cells are required to be in SS2). If the cardinality constraint is not satisfied, more configurations are possible, since a cell may be either in SS1 or SS2, explaining the increase of the number of stable states.
The compatibility rule influences the number of stable states. Indeed, modifying the toy model in such a way that the compatibility rule asserts that a cell is in state SS1 or SS2 when the cardinality constraint is satisfied and otherwise is necessarily in SS1, a similar reasoning explains the decreasing number of stable states (Figure 6- B); as the cardinality constraint is harder to satisfy, less cells are in SS2, and the grid quickly evolves to a stable configuration where all the cells are in SS1.
The consideration of roll-over limits the effect of borders, meaning that more cells are able to satisfy the cardinality constraints for higher q. For the toy model, roll-over leads to a decrease of the number of stable states, with the cylinder and the torus having a very close number of stable states. On the other hand, for the modified toy model the influence of the roll-over on the number of stable states is more visible, since limiting the border effect increases the number of cells that are likely to comply with the cardinality constraint, resulting in a higher number of stable states.

Model of lateral inhibition
Lateral inhibition is a mechanism widely used in developmental patterning, and it has been the subject of significant modelling studies (e.g., see [11]). Notch signalling is one of the most classical pathways implementing lateral inhibition, where cell- cell interaction is mediated by the transmembrane proteins Notch and Delta. The simplest model assumes that Notch is activated by Delta from neighbouring cells and , in turn, activated Notch inhibits Delta in the cell, which generates a positive feedback loop between neighbouring cells. The Delta-Notch mediated signalling plays a crucial role is establishing the diversity of cell types within a tissue in the embryonic development of a wide range of organisms [10]. Here, we consider a lateral inhibition synthetic model, presented in Figure 7.
Figure 8 illustrates the influence of the neighbouring distance on the number of stable states. Considering signalling distances ranging from 1 to 3, we observe that

Toy model (f1(x)= чx0 ∧ x3)
Compatibility rules:	≥q(SS21,.. .,SS2v) =⇒ SS1
ч ≥q(SS21,.. .,SS2v) =⇒ SS1 or SS2
70000

60000

50000

40000

30000

20000

10000

0
2	4	6	8	10	12	14	16	18
at-least-q
Modified toy model (f1(x)= x0 ∧ x3)
Compatibility rules:	≥q(SS21,.. .,SS2v) =⇒ SS1 or SS2
ч ≥q(SS21,.. .,SS2v) =⇒ SS1
70000

60000

50000

40000

30000

20000

10000

0
2	4	6	8	10	12	14	16	18
at-least-q

Figure 6. Number of stable states for models composed over a 4 × 4 cellular configuration, with three different border conditions and varying q in the cardinality constraint at-least-q. A) Toy model (as defined in Figure 1): the logical function of the internal component g1 is recalled, the compatibility rules are given (LRG stable states given Figure 1), and the numbers of stable states are plotted. B) Modified toy model, where the input now activates g1: evolution of the number of stables is reverted.




the number of stable states decreases with the distance. Indeed, as the neighbouring distance increases, the cardinality constraint is easier to fulfill. More precisely, as illustrated in Figure 9, if a cell is in state SS2, its neighbours are necessarily in SS1, and the largest the distance the more cells are restricted by this compatibility rule. Moreover, increasing the size of the grid leads to an increase of the number of stable states, independently of the distance.


Figure 7. Lateral inhibition model: A) LRG with 3 internal components and 1 input component. B)
Logical functions governing the values of the internal components. C) Stable states of the single cell model.
D) Integration function: the mapped input is 1 iff at-least-1 neighbour has g1 at level 1. E) Compatibility rules: if at-least-1 of its neighbours is in state SS1, a cell is then in SS2.


1e+12


1e+10


1e+08


1e+06


10000


100


1
1	2	3	4	5	6	7	8	9	10	11	12	13
Grid size p x p

Figure 8. Lateral inhibition model composed over a p × p grid: evolution of the numbers of stable states, for different neighbouring distances and varying the grid size p. Plots are on a logarithmic scale.

Model of lateral induction
Similarly to lateral inhibition, lateral induction is a signalling mechanism for pattern formation [25]. Figure 10 illustrates a lateral induction synthetic model. Unlike the lateral inhibition model (Figure 7), the input component u0 now activates g1, which in turns activates the input in neighbouring cells.
To assess the influence of the neighbouring distance on the number of stable states, we reproduce the same experiment as in Figure 8, i.e., we vary the size of the grid for different distances (see Figure 11). However, now if a cell is surrounded by q cells in state SS2, it also adopts this state. Hence, for a small q (e.g., q = 1),


		

Figure 9. Three stable states for the model composed over a 10 × 10 grid, where each cell encompasses the lateral inhibition model (Figure 7), considering a cardinality constraint of at-least-1 neighbour at distances 1, 2 and 3, respectively. Green cells are in state SS2, whereas white cells correspond to cells in SS1.



Figure 10. Lateral induction model: A) LRG with 3 internal components and 1 input component. B) Logical functions governing the internal components. C) Stable states of the single cell model. D) Integra- tion function: the mapped input is 1 iff at-least-q neighbours have g1 at level 1. E) Compatibility rules: if at-least-q of its neighbours is in state SS2, a cell is then in SS2.



all cells are in the same state (either SS1 or SS2), thus leading to an homogeneous stable pattern of the whole. This behaviour does not depend on the size of the grid, but it is disrupted whenever some cells, and not all, comply with the cardinality constraint. In Figure 11, we observe that an increase on the number of stable states with the size of the grid is only possible for intermediate values of q, i.e., only when cells have less neighbours than required by the cardinality constraint, q ≥ v, or when the cardinality constraint is above half the number of neighbours, q > v/2. The first cells to be in this interval are the cells at the borders of the grid (see Figure 5). In this case, the grid stable states are no longer homogeneous, and their numbers depend on the size of the grid. This shows that increasing the size of the grid or the neighbouring does not necessarily lead to an increase of the number of stable states.

Distance 1
1e+08

1e+07

1e+06

100000

10000

1000

100

10

1
3	4	5	6	7	8	9	10	11
Grid size p x p
Distance 2
100000



10000



1000



100



10



1
3	4	5	6	7	8	9	10	11
Grid size p x p

Figure 11. Lateral induction model composed over a p × p grid: evolution of the numbers of stable states varying p, the grid size, and for different values of q in the cardinality constraint. A) Neighbouring distance is fixed to 1 whereas in B) the distance is 2. Plots are on a logarithmic scale.

Discussion
The identification of attractors in Boolean networks has received great attention, albeit mainly focusing on the single-cell case (i.e., cellular models). In this paper, we have addressed the identification of stable states of multi-cellular systems defined over 2D hexagonal grids. To this end, we proposed two SAT encodings. The first defines the tability condition of a composed model as an appropriate combination of stability conditions of the constituent cellular models. This encoding is similar to previous work as it results in searching stable states of a large model [18,14]. The second encoding uses compatibility rules to combine (previously determined) cellular stable states across neighbouring cells. For most models, this abstraction should yield a significant improvement in performance (Figure 4-A). We show that models composed over grids of cells may yield an exponential number of stable

states. For the case studies presented here, the number of stable states ended up being the limiting factor for the grid sizes considered, as the computational cost of counting all stable states surpassed the timeout (4 hours).
Moreover, we demonstrate that the evolution of the number of stable states depends on parameters such as q, the number of neighbours required to be in a specific state, the neighbouring distance as well as the grid size and the border conditions.How the number of stable states evolves with q greatly depends on the cellular model and on the composition rule (e.g. a state being possible if neighbour- ing cells are (or not) in the same state).
As future work, we aim to exploit the grid topology as well as intrinsic model characteristics, to use symmetry breaking and thus cut down the number of solu- tions [6,20]. This will allow the consideration of ever larger grids. Furthermore, there is room for generalisation of the framework presented here, as integration functions (and hence the compatibility rules) may depend on distinct internal com- ponents. Finally, we intend to integrate the SAT Compatibility condition encoding in EpiLog (http://epilog-tool.org), a software tool dedicated to the definition, simulation and visualisation of qualitative models of pattern formation on epithe- lia [28].
Acknowledgment
This work was supported by national funds through Funda¸c˜ao para a Ciˆencia e a Tecnologia (FCT) with reference UID/CEC/50021/2013 and FCT project PTDC/EEI- CTP/2914/2014. PTM and PLV were supported by FCT grants IF/01333/2013 and IF/01333/2013/CP1204, respectively. CC was supported by the Calouste Gul- benkian Foundation.

References
I. Ab´ıo, R. Nieuwenhuis, A. Oliveras, and E. Rodrigu´ez-Carbonell. A parametric approach for smaller and better encodings of cardinality constraints. In Principles and Practice of Constraint Programming – CP 2013, volume 8124 of Lecture Notes in Computer Science, pages 80–96. Springer, 2013.
W. Abou-Jaoud´e, P. Traynard, P. T. Monteiro, J. Saez-Rodriguez, T. Helikar, D. Thieffry, and
C. Chaouiya. Logical modeling and dynamical analysis of cellular networks. Frontiers in Genetics, 7:94, 2016.
T. Akutsu, S. Kuhara, O. Maruyama, and S. Miyano. Identification of gene regulatory networks by strategic gene disruptions and gene overexpressions. In Proc. 9th ACM-SIAM Symposium Discrete Algorithms – SODA 1998, pages 695–702, 1998.
R. Albert and H. G. Othmer. The topology of the regulatory interactions predicts the expression pattern of the segment polarity genes in Drosophila melanogaster. Journal of Theoretical Biology, 223(1):1–18, 2003.
R. Albert and J. Thakar. Boolean modeling: a logic-based dynamic approach for understanding signaling and regulatory networks and for making useful predictions. Wiley Interdisciplinary Reviews: Systems Biology and Medicine, 6(5):353–69, 2014.
F. A. Aloul, K. A. Sakallah, and I. L. Markov. Efficient symmetry breaking for Boolean satisfiability.
IEEE Transactions on Computers, 55(5), 2006.
D. B´erenguier, C. Chaouiya, P. Monteiro, A. Naldi, E. Remy, D. Thieffry, and L. Tichit. Dynamical modeling and analysis of large cellular regulatory networks. Chaos: An Interdisciplinary Journal of Nonlinear Science, 23(2):025114, 2013.


A. Biere, D. Le Berre, E. Lonca, and N. Manthey. Detecting cardinality constraints in CNF. In Theory and Applications of Satisfiability Testing – SAT 2014, volume 8561 of Lecture Notes in Computer Science, pages 285–301. Springer, 2014.
J. Chen. A new SAT encoding of the at-most-one constraint. In Proc. International Workshop on Constraint Modelling and Reformulation (ModRef), 2010.
A. B. Chitnis. The role of Notch in lateral inhibition and cell fate specification. Molecular and Cellular Neuroscience, 6(4):311–321, 1995.
J. R. Collier, N. A. Monk, P. K. Maini, and J. H. Lewis. Pattern formation by lateral inhibition with feedback: a mathematical model of delta-notch intercellular signalling. Journal of Theoretical Biology, 183(4):429–446, 1996.
V. Devloo, P. Hansen, and M. Labb´e. Identification of all steady states in large networks by logical analysis. Bulletin of Mathematical Biology, 65(6):1025–51, Nov 2003.
G. Didier, E. Remy, and C. Chaouiya. Mapping multivalued onto Boolean dynamics. Journal of Theoretical Biology, 270(1):177–84, 2011.
E. Dubrova and M. Teslenko. A SAT-based algorithm for finding attractors in synchronous Boolean networks. IEEE/ACM Transactions on Computational Biology and Bioinformatics, 8(5):1–7, 2011.
A. Faur´e, B. M. I. Vreede, E. Sucena, and C. Chaouiya. A discrete model of Drosophila eggshell patterning reveals cell-autonomous and juxtacrine effects. PLoS Computational Biology, 10(3):e1003527, 2014.
A. M. Frisch and P. A. Giannaros. SAT encodings of the at-most-k constraint: Some old, some new, some fast, some slow. In Proc. International Workshop on Constraint Modelling and Reformulation (ModRef), 2010.
A. Garg, I. Xenarios, L. Mendoza, and G. DeMicheli. An Efficient Method for Dynamic Analysis of Gene Regulatory Networks and in silico Gene Perturbation Experiments, pages 62–76. Springer Berlin Heidelberg, Berlin, Heidelberg, 2007.
K. Inoue. Logic programming for Boolean networks. In 22nd Intl. Joint Conference on Artificial Intelligence – IJCAI 2011, pages 924–930. AAAI Press, 2011.
W. Klieber and G. Kwon. Efficient CNF encoding for selecting 1 from N objects. In Proc. Intl. Workshop on Constraints in Formal Verification, 2007.
I. Lynce and J. Marques-Silva. Breaking symmetries in SAT matrix models. In Theory and Applications of Satisfiability Testing – SAT 2007, volume 4501 of Lecture Notes in Computer Science, pages 22–27. Springer, 2007.
N. D. Mendes, F. Lang, Y.-S. Le Cornec, R. Mateescu, G. Batt, and C. Chaouiya. Composition and abstraction of logical regulatory modules: application to multicellular systems. Bioinformatics, 29(6):749–57, 2013.
A. Naldi, D. Berenguier, A. Faur´e, F. Lopez, D. Thieffry, and C. Chaouiya. Logical modelling of regulatory networks with GINsim 2.3. Biosystems, 97(2):134–139, 2009.
A. Naldi, D. Thieffry, and C. Chaouiya. Decision diagrams for the representation and analysis of logical models of genetic networks. In Computational Methods in Systems Biology, pages 233–247. Springer Berlin Heidelberg, 2007.
V.-H. Nguyen and S. T. Mai. A new method to encode the at-most-one constraint into SAT. In Proc. of the 6th Intl. Symposium on Information and Communication Technology – SoICT 2015, pages 1–8. ACM Press, 2015.
M. R. Owen, J. A. Sherratt, and H. J. Wearing. Lateral induction by juxtacrine signaling is a new mechanism for pattern formation. Developmental Biology, 217(1):54–61, 2000.
L. Sanchez, C. Chaouiya, and D. Thieffry. Segmenting the fly embryo: logical analysis of the role of the segment polarity cross-regulatory module. The International Journal of Developmental Biology, 52(8):1059–75, 2008.
T. Sang, F. Bacchus, P. Beame, H. A. Kautz, and T. Pitassi. Combining component caching and clause learning for effective model counting. In Intl. Conf. on Theory and Applications of Satisfiability Testing – SAT 2004, 2004.
P. Varela, P. Monteiro, N. Mendes, A. Faur´e, and C. Chaouiya. EpiLog, a computational tool for the logical modelling of epithelial pattern formation. In European Conference on Computational Biology – ECCB 2014, volume 5, page 1709. F1000Posters, 2014.
