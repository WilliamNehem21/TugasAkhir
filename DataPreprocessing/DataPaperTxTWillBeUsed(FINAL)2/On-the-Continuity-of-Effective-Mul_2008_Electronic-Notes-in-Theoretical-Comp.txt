

Electronic Notes in Theoretical Computer Science 221 (2008) 271–286
www.elsevier.com/locate/entcs
On the Continuity of Effective Multifunctions
Dieter Spreen1
Theoretische Informatik, Fachbereich Mathematik Universit¨at Siegen, 57068 Siegen, Germany
E-mail:  spreen@informatik.uni-siegen.de



Dedicated to Klaus Weihrauch on the occasion of his 65th birthday

Abstract
If one wants to compute with infinite objects like real numbers or data streams, continuity is a necessary requirement: better and better (finite) approximations of the input are transformed in better and better (finite) approximations of the output. In case the objects are constructively generated, they can be rep- resented by a finite description of the generating procedure. By effectively transforming such descriptions for the generation of the input (respectively, their codes) in (the code of) a description for the generation
of the output another type of computable operation is obtained. Such operations are also called effec- tive. The relationship of both classes of operations has always been a question of great interest and well known theorems such as those of Myhill and Shepherdson, Kreisel, Lacombe and Shoenfield, Ce˘ıtin, and/or Moschovakis present answers for important special cases. A general, unifying approach has been developed by the present author in [19].
In this paper the approach is extended to the case of multifunctions. Such functions appear very naturally in applied mathematics, logic and theoretical computer science. Various ways of coding (indexing) sets are discussed and effective versions of several continuity notions for multifunctions are introduced. For each of these notions an indexing system for sets is exhibited so that the multifunctions that are effective with respect to this indexing system and possess certain witness functions are exactly the multifunction which are effectively continuous with respect to the continuity notion under consideration. Important special cases are discussed where such witnessing functions always exist.
Keywords: Multifunctions, effectivity


Introduction
As is well known [11,22], the test whether for two given real numbers the first is smaller than the second is not computable as a map from the reals to, say, {0, 1}. This fact creates a serious problem to the design of programming languages for real number computations, as tests of this kind abundantly appear in algorithms. The

1 This research has been supported by the German Research Foundation (DFG) under grants no. 446 CHV 113/240/0-1, no. 436 RUS 113/850/0-1(R) and no. 445 SUA-113/20/0-1

1571-0661 © 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2008.12.023

problem can be solved by using the relaxed tests <k (k a natural number) instead, which compare two reals with a given uncertainty of 2−k :

x <  y =  0	if x < y,

However, these test functions are over-defined: for real numbers x and y with y −
2−k < x < y both values 0 and 1 are possible.
Consider the equation
f (x) = u.
Among others one would be interested in knowing whether the solutions behave well under small perturbations of the right hand side. One will have to study f−1(u) as a function of u in this case. But this is a set-valued or multifunction in general.
There are many more examples showing that multifunctions occur very naturally in mathematical practice. They have indeed been used with great success in various branches of mathematics, logic and computer science and there is already a vast literature (cf. e.g. [1,2,16,21,8]).
In this paper we will study multifunctions in the setting of effective topological spaces [19]. These are second-countable T0 spaces where we assume that there has already been a way to define what are their computable points and it is only these
elements that our spaces contain. We moreover expect the space to come with a canonical numbering of them as well as an indexing of the topological basis. Here, we follow M. B. Smyth’s approach [17] and think of the basic open sets as easy to encode observations that can be made about the computational process determining the elements. So, we let the indexing of the basic open sets be total. As has been shown in [18] however, in general we cannot expect canonical numberings of the points to be total as well. By a canonical numbering we mean a numbering that is obtained from a coding of the computational process determining the elements in such a way that we can enumerate all basic open sets containing a given point, uniformly in any of its indices.
By doing better and better observations we want finally be able to determine every element. (A second requirement for a numbering to be canonical or, as we will later say, acceptable is that this can be done in an effective way.) Thus, we need a relation of definite refinement between the basic open sets which in many cases will be stronger than set inclusion. In most applications it will be recursively enumerable. As it turns out in these cases, the refinement relation is a relation between the codes of the basic open sets rather than the sets itself.
Therefore, we assume that the indexing of the basic open sets is such that there is a transitive relation on the indices so that the property of being a topological basis holds with respect to this relation instead of just set inclusion. The property of being a base of the topology is a ∀∃ statement. We require it to be realized by a computable function on the involved indices. This leads us to the notion of an effective space.
Note that we think of the topological basis with its numbering and the associated

refinement relation as being part of the structure under consideration. This seems to be a typical feature of constructive approaches: constructive notions may depend on how objects are represented.
A well known prerequisite for a (single-valued) function to be computable is its continuity. It allows to transform converging approximations of the argument in converging approximations of the function value. All one has to ensure in addition is that this can be done in an effective way. In the framework of effective spaces, however, there is also another kind of functions that could be called computable. Since our spaces contain only points that can be approximated in an effective way, each point can be represented by a program that computes such an approximation, or a code of it. This is the way the already mentioned numbering of the points is obtained. What this other kind of functions do is simply to effectively map (the codes of) programs generating an approximation for the argument to (the codes
of) programs generating an approximation for the function value. We call such functions effective.
Functions computable in the first way are also computable in the second way, i.e., they are also effective. The converse is not true in general, but it is true in some important special cases such as constructive domains and recursive metric spaces [14,10,7,13,9,23]. In [19] this situation has been analysed in detail and a further condition has been presented that forces any effective map between effective spaces to be computable. As was shown, in the case of effective maps between constructive domains or recursive metric spaces the extra condition is always satisfied.
It is the aim of this paper to study the analogous question for set-valued maps. To do so we first have to look for a suitable coding system by which we can represent the values of such maps. In the point case the codes were obtained by effectively enumerating sufficiently many basic properties of a point, uniquely determining it. In the set case there are too many sets to be uniquely representable by codes. So, we no longer require the objects under consideration to be uniquely determined by the properties we are listing. The coding system will induce an equivalence relation among the sets and what is actually listed are properties of certain canonical members of the respective equivalence classes. In computations only information that does not distinguish between members of a class is used. Our attitude is that the objects we are dealing with are given by other means. We will examine several coding systems for sets.
A function is computable in the above way if it is effectively continuous. For multifunctions several continuity notions are in use. We consider two of them and discuss effective versions. For each of them the question of when an effective multi- function is effectively continuous is studied and sufficient conditions are exhibited. Note that the outcome is a consequence of the central result in [19]. Finally it is shown that the extra conditions are satisfied in the case of constructive domains and effectively given metric spaces. In all these investigations the choice of the coding system for sets we are using will be important.
The paper is organised as follows: Section 2 contains basic definitions and prop- erties. The notion of an effective space as well as results that are needed in later

sections are recalled in Section 3. Moreover, important, standard examples of such spaces are discussed. In Section 4 various subspace indexings are introduced.
Notions of effective continuity for multifunctions are defined in Section 5. By applying one of the central results in [19] it is shown that multifunctions are effec- tively lower semi-continuous just if they are effective with respect to hit indices and possess certain witness functions, and that compact-valued multifunctions are effec- tively upper semi-continuous exactly if they are effective with respect to covering indices and also possess certain witness functions. Hit indices allow the generation of all basic open sets that meet the indexed set, and from a covering index one can compute all finite covers of the indexed set, where in this case only compact sets are considered. As follows from [19], the witnessing condition is always satisfied if the domain space of the multifunction is a constructive domain. In the present paper we will show that it is always satisfied as well, if the range space of the multifunction is an effectively given metric space. However, the multifunction has to satisfy stronger effectivity requirements in this case. In order to obtain lower semi-continuity e.g., we must, for each value of the multifunction, uniformly be able to list all basic open sets missing the value set.
No proofs are given here. They will appear in a more comprehensive journal publication.

Basic definitions and properties
In what follows, let ⟨ , ⟩ : ω2 → ω be a recursive pairing function with corresponding projections π1 and π2 such that πi(⟨a1, a2⟩) = ai, and let D be a standard coding of all finite subsets of natural numbers. Moreover, let P (n) (R(n)) denote the set of all n-ary partial (total) recursive functions, and let Wi be the domain of the ith partial recursive function ϕi with respect to some G¨odel numbering ϕ. We let ϕi(a)↓ mean that the computation of ϕi(a) stops, ϕi(a)↓∈ C that it stops with value in C.
Let S be a nonempty set. If X is a subset of S, then its complement S \ X will be denoted by X. A (partial) numbering ν of S is a partial map ν : ω - S (onto) with domain dom(ν). The value of ν at n ∈ dom(ν) is denoted by νn. Note that instead of numbering we also say indexing.
Definition 2.1 For numberings ν and κ of set S, ν is reducible to κ, written ν ≤ κ, if there is a function g ∈ P (1) such that dom(ν) ⊆ dom(g), g(dom(ν)) ⊆ dom(κ), and νm = κg(m), for all m ∈ dom(ν).
A subset X of S is completely enumerable (c.e.), if there is a recursively enu- merable (r.e.) set Wn such that νi ∈ X if and only if i ∈ Wn, for all i ∈ dom(ν). Set Mn = X, for any such n and X, and let Mn be undefined, otherwise. Then M is a numbering of the class CE of completely enumerable subsets of S. Every index of X with respect to M is called a c.e. index of X.
A relation R ⊆ S × S is completely enumerable, if there is an r.e. set A so that (νi, νj) ∈ R if and only if ⟨i, j⟩∈ A, for all i, j ∈ dom(ν).
X is enumerable, if there is an r.e. set A ⊆ dom(ν) such that X = { νi | i ∈ A}.

Thus, X is enumerable if we can enumerate a subset of the index set of X which contains at least one index for every element of X, whereas X is completely enu- merable if we can enumerate all indices of elements of X and perhaps some numbers which are not used as indices by the numbering ν. Any r.e. index of A, that is any index with respect to W , is said to be an enumeration index of X.
Every indexing ν of S induces a family of natural topologies on this set. A topology η on S is a Mal’cev topology, if it has a subbasis C of completely enumerable subsets of T . Any such subbasis is called a Mal’cev subbasis. All Mal’cev subbases

on S can be indexed in a uniform canonical way. Let Mη = Mn
, if Mn
∈ C, and let

it be undefined, otherwise.
Now, let T = (T, τ ) be a topological T0 space with countable basis B. We also write τ = ⟨B⟩ to express that B is a countable basis and τ = ⟨⟨B⟩⟩ in case that B is a countable subbasis of τ .
As is well known, each point y of a T0 space is uniquely determined by its neighbourhood filter N (y) and/or a base of it. Moreover, on T0 spaces there is a canonical partial order, the specialisation order, which we denote by ≤τ .
Definition 2.2 Let T = (T, τ ) be a T0 space, and y, z ∈ T. y ≤τ z if N (y) ⊆ N (z).
Let B be a numbering of B. By definition each open set is the union of certain basic open sets. In the context of effective topology one is only interested in enu- merable unions. We call an open set O ∈ τ Lacombe-open or a Lacombe set, if there is an r.e. set A ⊆ dom(B) such that

O =  { Ba | a ∈ A}.

Set Lτ =  { Ba | a ∈ Wn }, if Wn ⊆ dom(B), and let Lτ be undefined, otherwise.
Then Lτ is a numbering of the Lacombe sets of τ . The indices are called Lacombe
indices. Obviously, B ≤ Lτ .
If we want to deal with the points and open sets of space T in an effective way, then the interplay between both should at least be such that we can effectively list the points of each basic open set, uniformly in its index. To this end we restrict ourselves to countable spaces.
At first sight this seems to be a rather severe restriction. But note that we think of T as being the subspace of computable elements of some larger space. There are several approaches to topology that come with natural computability notions for points and maps (cf. e.g. [15,20,4,22]). It allows to assign indices to the computable points in a canonical way so that important properties become computable.
Definition 2.3 Let T = (T, τ ) be a countable topological T0 space with countable basis B, and let x and B be numberings of T and B, respectively. We say that x is computable if there is some r.e. set L ⊆ ω such that for all i ∈ dom(x) and all n ∈ dom(B),
⟨i, n⟩∈ L ⇔ xi ∈ Bn.
Clearly, if x is computable then every Lacombe set is completely enumerable, uniformly in its Lacombe index, i.e. Lτ ≤ M .

Now, we can effectively compare second-countable topologies.
Definition 2.4 Let τ = ⟨B⟩ and η = ⟨⟨C⟩⟩ be a topologies on T, and B and C, respectively, be numberings of B and C.
η ⊆p τ, read η is effectively pointwise coarser than τ, if there is some function h ∈ P (2) such that h(i, m)↓ ∈ dom(B) and xi ∈ Bh(i,m) ⊆ Cm, for all i ∈ dom(x) and m ∈ dom(C) with xi ∈ Cm.
η ⊆e τ, read η is effectively coarser than τ, if C ≤ Lτ .
If x is computable, the first notion is implied by the second. For Mal’cev topolo- gies both notions coincide, in case T and x satisfy stronger effectivity requirements [19].

Effective spaces
In this section, let T = (T, τ ) be a countable topological T0 space with countable basis B.
As said earlier, we think of T as being the subspace of computable elements of some larger space. In general the notion of computable point is rather complex, mainly harder than Σ0. Consequently, the indexings of the computable points thus obtained are only partial maps.
Contrary to this, in most applications the basic open sets have a simple fi- nite description. By coding the descriptions one obtains a total numbering of the topological basis. For us basic open sets are predicates. Each point is uniquely determined by the collection of all predicates it satisfies, thus the T0 requirement.
Usually, set inclusion between basic open sets is not completely enumerable. But in the applications we have in mind there is a canonical relation between the descriptions of the basic open sets (respectively, their code numbers), which in many cases is stronger than set inclusion. This relation is r.e. We assume that the topological basis B comes with a numbering B of its elements and such a relation between the codes.
Definition 3.1 Let ≺B be a transitive binary relation on ω. We say that:
≺B is a strong inclusion, if for all m, n ∈ dom(B), from m ≺B n it follows that Bm ⊆ Bn.
B is a strong basis, if ≺B is a strong inclusion and for all z ∈ T and m, n ∈ dom(B) with z ∈ Bm ∩ Bn there is a number a ∈ dom(B) such that z ∈ Ba, a ≺B m and a ≺B n.
For what follows we assume that ≺B is a strong inclusion with respect to which
B is a strong basis.
Definition 3.2 Let T = (T, τ ) be a countable topological T0 space with countable basis B, and let x and B be numberings of T and B, respectively. Then T is effective, if B is total and the property of being a strong basis holds effectively, which means that there exists a function sb ∈ P (3) such that for i ∈ dom(x) and m, n ∈ ω with

xi ∈ Bm ∩ Bn, sb(i, m, n)↓, xi ∈ Bsb(i,m,n), sb(i, m, n) ≺B m, and sb(i, m, n) ≺B n.
Note that very often the totality of B can easily be achieved, if the space is recursively separable, which means that it has a dense enumerable subset, called its dense base.
As is readily verified, T is effective if x is computable, B is total and the strong inclusion relation is r.e.
Since we work with strong inclusion instead of set inclusion, we had to adjust the notion of a topological basis. In the same way we need to modify that of a filter base, which leads to the notion of strong filter base [19].
If x is computable, a strong base of basic open sets can effectively be enumerated for each neighbourhood filter. For effective spaces this can always be done in a normed way.
Definition 3.3 An enumeration (Bf (a))a∈ω with f : ω → ω such that range(f ) ⊆ dom(B) is said to be normed if f is decreasing with respect to ≺B. If f is recursive, it is also called recursive and any Go¨del number of f is said to be an index of it.
In case (Bf (a)) enumerates a strong base of the neighbourhood filter of some point, we say it converges to that point.
Definition 3.4 Let x be a numbering of T. We say that:
x allows effective limit passing if there is a function pt ∈ P (1) such that, if m is an index of a normed recursive enumeration of basic open sets which converges to some point y ∈ T, then pt(m)↓∈ dom(x) and xpt(m) = y.
x is acceptable if it allows effective limit passing and is computable.
We have already seen, if x is computable, all basic open sets are completely enumerable, which means that τ is a Mal’cev topology. The next condition helps classifying those Mal’cev topologies which are effectively coarser than τ .
Definition 3.5 Let η = ⟨⟨C⟩⟩ be a topology on T, and C a numbering of C. We say that a pair of functions (s, r) with s ∈ P (2) and r ∈ P (4) is a realiser for noninclusion of τ with respect to η, if for all i ∈ dom(x), n ∈ dom(B) and m ∈ dom(C) the following hold:
If xi ∈ Cm, then s(i, m)↓∈ dom(M ) and xi ∈ Ms(i,m) ⊆ Cm.
If moreover Bn /⊆ Cm, then also r(i, n, n', m)↓ ∈ dom(x) and xr(i,n,n',m) ∈
Bn' \ Ms(i,m), for all n' ∈ dom(B) with n ≺B n'.
Note that this condition is weaker than the one given in [19]. Nevertheless, the proof of the next theorem goes through with only minor changes.
Theorem 3.6 ([19]) Let T be effective and x be acceptable. Then any Mal’cev topology on T with respect to which τ has a realiser for noninclusion is effectively pointwise coarser than τ. If T is also recursively separable, then any such topology is even effectively coarser than τ.
Provided that τ has a realiser for noninclusion with respect to itself, the converse holds as well.

Corollary 3.7 Let T be effective, x be acceptable and let τ have a realiser for noninclusion with respect to itself. Then any Mal’cev topology η on T is effectively pointwise coarser than τ if, and only if, τ has a realiser for noninclusion with respect to η.
If the strong inclusion relation ≺B is r.e., we effectively obtain positive informa- tion about set inclusion between basic open sets: pairs (m, n) are listed such that Bm ⊆ Bn. However, no information is obtained, if Bn /⊆ Bm. Such knowledge is provided, if topology τ has a realiser for noninclusion with respect to itself.
Let us next consider some important standard examples of effective T0 spaces.
Example 3.8 (Constructive metric spaces). Let R denote the set of all real num- bers, and let ν be some canonical total indexing of the rational numbers. Then a real number z is said to be computable, if there is a function f ∈ R(1) such that for all m, n ∈ ω with m ≤ n, the inequality |νf (m) −νf (n)| < 2−m holds and z = limm νf (m). Any Go¨del number of the function f is called an index of z. This deﬁnes a partial indexing γ of the set Rc of all computable real numbers.
Now, let M = (M, δ) be a separable metric space, and let β be a total numbering of the dense subset M0. As is well-known, the collection of sets B⟨i,m⟩ = { y ∈ M | δ(βi, y) < 2−m }, for i, m ∈ ω, is a basis of the canonical Hausdorff topology Δ on
M. Deﬁne
⟨i, m⟩ ≺B ⟨j, n⟩⇔ δ(βi, βj)+ 2−m < 2−n.
Then ≺B is a strong inclusion and the collection of all Ba is a strong basis.
M is said to be effectively given, if the distance function δ maps M0×M0 into Rc and the restriction of δ to this set is effective, i.e., there is a function d ∈ R(1) so that δ(βi, βj) = γd(i,j), for i, j ∈ ω. Since the usual less-than relation on the computable real numbers is completely enumerable [12], the strong inclusion relation ≺B is r.e. in this case.
A sequence (ya)a∈ω of elements of M0 is said to be fast, if δ(ym, yn) < 2−m, for all m, n ∈ ω with m ≤ n. Moreover, (ya) is recursive, if there is some function f ∈ R(1) such that ya = βf (a), for all a ∈ ω. Any G¨odel number of f is called an index of (ya).
M is called constructive, if it is effectively given and, in addition, each element y of M is the limit of a fast recursive sequence of elements of M0. If m is the index of such a sequence, set xm = y. Otherwise, let x be undeﬁned. Then x is a numbering of M with respect to which and the indexing γ of the computable real numbers the distance function is effective [18]. Moreover, x is acceptable [19]. It follows that M is effective.
Example 3.9 (Constructive domains). Let Q = (Q, ±) be a partial order with least element. The way-below relation  on Q is deﬁned as follows: y1  y2 if for every directed subset S of Q the least upper bound of which exists in Q, the relation y2 ± S implies the existence of an element u ∈ S with y1 ± u. Note that  is transitive.
A subset Z of Q is a basis of Q, if for any y ∈ Q the set Zy = { z ∈ Z | z  y }
is directed and y = . Zy. A partial order that has a basis is called continuous.

Now, assume that Q is countable and let x be an indexing of Q. Let Q contain least upper bounds of all completely enumerable directed subsets and be continuous with basis Z. Moreover, let β be a total numbering of Z. Then (Q, ±, Z, β, x) is said to be a constructive domain, if the restriction of the way-below relation to Z as well as all sets Zy, for y ∈ Q, are completely enumerable with respect to the indexing β and β ≤ x. Note that the numbering x can always be chosen as acceptable [23].
Partial orders come with several natural topologies. In the applications we have in mind, one is mainly interested in the Scott topology σ. For constructive domains this topology is generated by the sets Bn = { y ∈ Q | βn  y } with n ∈ ω. It follows that Q = (Q, σ) is a countable T0-space with countable basis. Moreover, Q is recur- sively separable with dense base Z. Observe that the partial order on Q coincides with the specialisation order deﬁned by the Scott topology.
Deﬁne
m ≺B n ⇔ βn  βm.

Then ≺B is a strong inclusion with respect to which the collection of all Bn is a strong basis. Because the restriction of  to Z is completely enumerable, ≺B is r.e. It follows that Q is effective.
An essential property of continuous partial orders, is that there canonical topol- ogy has a basis with every basic open set Bn being an upper set generated by a point which is not necessarily included in Bn but in hl(Bn), where for n ∈ dom(B),

hl(Bn) =   { Bm | m ∈ dom(B) ∧ n ≺B m}.

Definition 3.10 Let T = (T, τ ) be a countable T0 space with a countable strong basis B, and let x and B be numberings of T and B, respectively. We say that T is effectively pointed, if there is a function pd ∈ P (1) such that for all n ∈ dom(B) with Bn /= ∅, pd(n)↓∈ dom(x), xpd(n) ∈ hl(Bn) and xpd(n) ≤τ z, for all z ∈ Bn.
Obviously,
Bn ⊆ { z ∈ T | xpd(n) ≤τ z }⊆ hl(Bn).

Note that if T is effectively pointed, it is recursively separable with dense base
{ xa | a ∈ range(pd) } [19].
As we have seen above, if topology τ has a realiser for noninclusion with respect to some Mal’cev topology η, then η is effectively coarser than τ . For the results we are aiming for it will be important to know with respect to which Mal’cev topologies such a realiser exists. In the case of effectively pointed spaces and hence in the case of constructive domains there is an easy answer:
Proposition 3.11 ([19]) Let T be effective and effectively pointed. Moreover, let x be acceptable. Then τ has a realiser for noninclusion with respect to every Mal’cev topology on T.

Subspace indexings
In the previous sections we have investigated effectiveness properties in T0 spaces. To this end we encoded the essential objects, the points and the basic open sets. In this section we will study ways of assigning indices to subspaces. For cardinality reasons, in general not all subspaces can be given an index.
We have already encountered two classes of subsets with indexing systems: the completely enumerable and the enumerable sets. By listing (indices of) all elements of a set we have effective access to all of them. However, this limits the kind of sets we can deal with in a computable way. Sometimes it suffices to enumerate a generating part of the set or certain properties of its points. Note that in general the set will not be uniquely determined by these properties and as a result different sets may have the same index. We think of the set as being given by other means. The index codes only a procedure generating certain useful properties. The naming systems considered in this paper have also been studied in [6,5,8].

Hit indices
We will now represent a subspace by using the open sets that hit the space. Note that we write m “B n to mean that m ≺B n or m = n.
Definition 4.1 Let T = (T, τ ) be a T0 space with countable strong basis B and B be a numbering of B. A subset X of T is said to be effectively covered if there is some r.e. set A ⊆ dom(B) such that the following two conditions hold:
(∀m ∈ A)Bm ∩ X /= ∅.
(∀n ∈ dom(B))[Bn ∩ X /= ∅⇒ (∃m ∈ A)m “B n]. Every r.e. index of A is called hit index of X.
Note that the closed subsets of T are uniquely determined by their hit index.

Covering indices
Definition 4.2 Let T = (T, τ ) be a T0 space with countable strong basis B and B
be a numbering of B. A subset X of T has computable finite covers if there is some
r.e. set A ⊆ ω such that the following two conditions hold for all i ∈ A and all
n ∈ ω with Dn ⊆ dom(B):
Di ⊆ dom(B) and X ⊆	{ Ba | a ∈ Di }, i.e., { Ba | a ∈ Di } is a ﬁnite cover of X.
If { Ba | a ∈ Dn } is a ﬁnite cover of X, then there is some i ∈ A so that for all a ∈ Di there exists some b ∈ Dn with a “B b.
Each r.e. index of A is called covering index of X.
Observe that a covering index does not code just one finite cover of X, but a family of finite covers of X from which any other such cover can be derived by taking supersets.

As is readily verified, the compact saturated subsets of T are uniquely de- termined by their covering indices, where a subset X of T is saturated if X =
{ z ∈ T | (∃y ∈ X')y ≤τ z }, for some subset X' of X.
A finite cover of a set X gives few information about the set X itself, but negative information about which points of the space can definitely not be in X, namely all those outside the cover. In order to have also some kind of positive information about X, one has to combine a covering index i of with a hit index j. Any such pair ⟨i, j⟩ will be called a complete covering index of X.

Indexing the complement
We will now consider a further way to encode information about the complement of a set.
Let M = (M, δ) be an effectively given metric space as introduced in Ex- ample 3.8.  Then the canonical topology Δ has the collection of sets B⟨i,m⟩ =
{ y ∈ M | δ(βi, y) < 2−m } (i, m ∈ ω) as strong basis. Here, β is a numbering of the
dense subset M0. Let Bc	= { y ∈ M | δ(βi, y) ≤ 2−m }. Note that each setBc is
closed.
Definition 4.3 Let M be an effectively given metric space. A subset X of M
admits effective complement exhaustion if the set { n ∈ ω | Bc ∩ X = ∅} is r.e. Any
r.e. index of this set is called complement exhaustion index.
Lemma 4.4 Let M = (M, δ) be an effectively given metric space and X be a compact subset of M that has computable ﬁnite covers. Then X admits effective complement exhaustion. Moreover, a complement exhaustion index of any such set X can be computed from a covering index of X in a uniform way.
Observe that for a closed set X, the existence of an effective complement ex- haustion has a rather strong implication on the complement of X.
Lemma 4.5 Let M = (M, δ) be a constructive metric space and X be a closed subset that admits effective complement exhaustion. Then the complement X of X is completely enumerable. Moreover, a c.e. index of the complement of any such set X can be computed from a complement exhaustion index of X in a uniform way.

Multifunctions
Multifunctions generalise the concept of function to the case that several values may be assigned to an argument.
Definition 5.1 Let S and S' be sets. A multifunction F : S ⇒ S' is given by a relation RF between S and S'. For y ∈ S,

F (y) = { z ∈ S' | (y, z) ∈ RF }

is the image or value of F at y.

The domain and the range of F are taken to be the sets
dom(F ) = { y ∈ S | F (y) /= ∅ },	range(F ) = { z ∈ S' | (∃y ∈ S)z ∈ F (y) }.
The image of a subset Y of S under F is F (Y ) =  { F (y) | y ∈ Y }. For a subset
Z of S', the lower inverse and the upper inverse, respectively, of F are
F−(Z) = { y ∈ S | F (y) ∩ Z /= ∅ },	F +(Z) = { y ∈ S | F (y) ⊆ Z }.

In the preceding section we introduced indexings for certain collections of sub- spaces. As we have seen, in general the indexed sets are not uniquely determined by their index.
Definition 5.2 Let S be a nonempty countable set. A multinumbering Θ of S is a multifunction Θ: ω ⇒ S that has S as its range.
Definition 5.3 Let S, S' be sets, S' be a collection of subsets of S', θ be a (partial) numbering of S, and Θ' be multinumbering of S'. Moreover, let F : S ⇒ S' such that F (y) ∈ S', for all y ∈ S. Then we call F effective with respect to Θ' if there is some function f ∈ P (1) so that for all i ∈ dom(θ), f (i)↓∈ dom(Θ') and
F (θi) ∈ Θ'	.
Now, let T = (T, τ ) and T ' = (T ',τ'), respectively, be T0 spaces with countable strong bases B and B' and indexings B as well as B' of B and B'. We always let T be countable and x be a numbering of T . The question we are interested in for the rest of this paper is whether effective multifunctions F : T ⇒ T ' are continuous. Without restriction we assume that the multifunctions considered in what follows have only nonempty values.
Several continuity notions for multifunctions have been considered in the liter- ature.
Definition 5.4 Let F : T ⇒ T ' and y ∈ T.
F is lower semi-continuous at y if for each open set O ∈ τ' meeting F (y) there is a neighbourhood V of y such that V ⊆ F−(O).
F is upper semi-continuous at y if for each open set O ∈ τ' containing F (y)
there is a neighbourhood V of y such that V ⊆ F +(O).
F is continuous at y if it is both lower and upper semi-continuous at y.
F is lower semi-continuous, upper semi-continuous and continuous in T, re- spectively, if it is lower semi-continuous, upper semi-continuous and continuous at each point of T.
Obviously, F is lower semi-continuous in T , exactly if F−(O) ∈ τ , for each O ∈ τ', and similarly upper semi-continuous in T , exactly if F +(O) ∈ τ , for each O ∈ τ'.
As is easily seen, it is no restriction if in the definition of lower semi-continuity we quantify only over all basic open sets meeting F (y). This leads us to the following

definition of when a multifunction is effectively lower semi-continuous.
Definition 5.5 A multifunction F : T ⇒ T ' is said to be
effectively pointwise lower semi-continuous, if there is a function d ∈ P (2)
such that for all i ∈ dom(x) and n ∈ dom(B') for which F (xi) intersects B' ,
d(i, n)↓∈ dom(B), xi ∈ Bd(i,n), and Bd(i,n) ⊆ F−(B' ).
effectively lower semi-continuous, if there is a function g ∈ R(1) so that for all
n ∈ dom(B'), g(n) ∈ dom(Lτ ) and F−(B' ) = Lτ	.
n	g(n)
Next, we want to find a definition of when a multifunction could be called effec- tively upper semi-continuous. Unfortunately, we cannot proceed as in the case of lower semi-continuity. If we assume, however, that the multifunction F is compact- valued, i.e. that each image F (y) (y ∈ T ) is compact, we can, without loss of generality, restrict the quantification in the definition of upper semi-continuity to all finite unions of basic open sets containing F (y). Note that Berge [3] defines upper semi-continuity only for compact-valued multifunctions. For n ∈ ω with Dn ⊆ dom(B) let
Un =	{ Ba | a ∈ Dn }.
In any other case, let Un be undefined.
Definition 5.6 A compact-valued multifunction F : T ⇒ T ' is said to be
effectively pointwise upper semi-continuous, if there is a function t ∈ P (2) such that for all i ∈ dom(x) and n ∈ dom(U') with F (xi) ⊆ U' , t(i, n)↓∈ dom(B),
xi ∈ Bt(i,n), and Bt(i,n) ⊆ F +(U' ).
effectively upper semi-continuous, if there is a function h ∈ R(1) so that for all
n ∈ dom(U'), h(n) ∈ dom(Lτ ) and F +(U' ) = Lτ	.
n	h(n)
effectively pointwise continuous if it is both effectively pointwise lower semi- continuous and effectively pointwise upper semi-continuous.
effectively continuous if it is effectively lower semi-continuous and effectively upper semi-continuous.
Proposition 5.7 Let x be computable and B' be total. Then following two state- ments hold:
Every effectively lower semi-continuous multifunction F : T ⇒ T ' is effective with respect to hit indices.
Every compact-valued effectively upper semi-continuous multifunction F : T ⇒
T ' is effective with respect to covering indices.
As has already been said, we are interested in whether and when the converse statements hold. Let to this end for a (compact-valued) multifunction F : T ⇒ T ', F−(τ') and F +(τ'), respectively, be the topologies on T generated by the sub- bases { F−(B' ) | n ∈ dom(B') } and { F +(U' ) | n ∈ dom(U') }, called the lower in-
n	n
verse image under F of τ' and the upper inverse image under F of τ'.	For
n ∈ dom(B') and n ∈ dom(U'), respectively, set F− = F−(B' ) and F + = F +(U' ).
n	n	n	n
Then F− and F + are indexings of the subbases { F−(B' ) | n ∈ dom(B') } and

{ F +(U' ) | n ∈ dom(U') }, respectively.
Lemma 5.8 Let ≺B' be r.e. and F : T ⇒ T '. Then the following two statements hold:
If F is effective with respect to hit indices then F− ≤ M. In particular, F−(τ')
is a Mal’cev topology on T.
If F is effective with respect to covering indices then F + ≤ M. In particular,
F +(τ') is a Mal’cev topology on T.
As is readily verified, the converse implications hold as well.
Note that F is effectively pointwise lower semi-continuous exactly if F−(τ') ⊆p τ , and effectively lower semi-continuous just if F−(τ') ⊆e τ . Similarly, F is effectively pointwise upper semi-continuous if, and only if, F +(τ') ⊆p τ , and effectively upper semi-continuous if, and only if, F +(τ') ⊆e τ .
As a consequence of Theorem 3.6 we now obtain the continuity result we are looking for. All we need is that topology τ has a realiser for noninclusion with re- spect to F−(τ') and/or F +(τ'). We say in this case that F has a lower, respectively, upper witness for noninlcusion.
Theorem 5.9 Let T be effective, x be acceptable, and ≺B' be r.e. Then the follow- ing two statements hold:
Every multifunction F : T ⇒ T ' that is effective with respect to hit indices and has a lower witness for noninclusion must be effectively pointwise lower semi- continuous. If T is also recursively separable, then it is even effectively lower semi-continuous.
Every compact-valued multifunction F : T ⇒ T ' that is effective with respect to covering indices and has an upper witness for noninclusion must be effectively pointwise upper semi-continuous. If T is also recursively separable, then it is even effectively upper semi-continuous.
As follows from [19], the witness for noninclusion requirement is indispensable for this result. Under somewhat stronger, but still very natural assumptions we obtain that the sufficient conditions used in the theorem are also necessary.
Corollary 5.10 Let T be effective and recursively separable, let τ have a realiser for noninclusion with respect to itself, x be acceptable, B' be total, and ≺B' be r.e. Then the following two statements hold:
A multifunction F : T ⇒ T ' is effectively lower semi-continuous if, and only if, it is effective with respect to hit indices and has a lower witness for noninclu- sion.
A compact-valued multifunction F : T ⇒ T ' is effectively upper semi-continuous if, and only if, it is effective with respect to covering indices and has an upper witness for noninclusion.
By Proposition 3.11, τ has a realiser for noninclusion with respect to any Mal’cev topology if the space is effectively pointed.

Theorem 5.11 Let T be effective and effectively pointed, x be acceptable, B' be total, and ≺B' be r.e. Then the following two statements hold:
A multifunction F : T ⇒ T ' is effective with respect to hit indices if, and only if, it is effectively lower semi-continuous.
A compact-valued multifunction F : T ⇒ T ' is effective with respect to covering indices if, and only if, it is effectively upper semi-continuous.
In the remainder of this section we will consider the case that T ' is an effec- tively given metric space and investigate which effective multifunctions have a lower and/or upper witness for noninclusion. As we shall see, we need not only know the basic open sets that meet a set X in this case, but also those that will not do so. We call a pair ⟨i, j⟩ a hit-and-miss index of X, if i is a hit and j a complement exhaustion index of X.
Proposition 5.12 Let T be effective and recursively separable and T ' be an effec- tively given metric space. Moreover, let x be acceptable. Then every multifunction F : T ⇒ T ' that is effective with respect to hit-and-miss indices has a lower witness for noninclusion.
The following result is now a consequence of Theorem 5.9.
Theorem 5.13 Let T be effective and recursively separable and T ' be an effec- tively given metric space. Moreover, let x be acceptable. Then every multifunction F : T ⇒ T ' that is effective with respect to hit-and-miss indices must be effectively lower semi-continuous.
Let us see next when F has an upper witness for noninclusion.
Proposition 5.14 Let T be effective and recursively separable and T ' be an effec- tively given metric space. Moreover, let x be acceptable. Then every compact-valued multifunction F : T ⇒ T ' that is effective with respect to complete covering indices has an upper witness for noninclusion.
By applying Theorem 5.9 again we obtain an analogue to Theorem 5.13 for the case of upper semi-continuity. Now recall that by Lemma 4.4 we can compute a complement exhaustion index from any covering index. Therefore, every compact- valued multifunction that is effective with respect to complete covering indices and has values in an effectively given metric space is both effectively lower and upper semi-continuous.
Theorem 5.15 Let T be effective and recursively separable and T ' be an effectively given metric space. Moreover, let x be acceptable. Then every compact-valued mul- tifunction F : T ⇒ T ' that is effective with respect to complete covering indices must be effectively continuous.

References
J.-P. Aubin and H. Frankowska. Set-valued Analysis. Birh¨auser, Boston, 1990.
G. A. Beer. Topologies on Closed and Closed Convex sets. Kluwer Academic, Dordrecht, 1993.

C. Berge. Topological Spaces. Dover Publications, Mineola, New York, 1997.
J. Blanck. Domain representations of topological spaces. Theoretical Computer Science, 247 (2000), 229–255.
V. Brattka and G. Presser. Computability of subsets of metric spaces. Theoretical Computer Science, 305 (2003), 43–76.
V. Brattka and K. Weihrauch. Computability on subsets of Euclidean space I: closed and compact subsets. Theoretical Computer Science, 219 (1999), 65–93.
G. S. Ce˘ıtin. Algorithmic operators in constructive metric spaces. Trudy Mat. Inst. Steklov, 67 (1962), 295–361, English translation: American Mathematical Society Translation, series 2, 64 (1967), 1–80.
P. Collins. Continuity and computability of reachable sets. Theoretical Computer Science, 341 (2008), 162–195.
H. Egli and R. L. Constable. Computability concepts for programming language semantics. Theoretical Computer Science, 2 (1976), 133–145.
G. Kreisel, D. Lacombe, and J. Shoenfield, Partial recursive functionals and effective operations, In
A. Heyting, editor, Constructivity in Mathematics, pp. 290–297. North-Holland, Amsterdam, 1959.
H. Luckhardt. A fundamental effect in computations on real numbers. Theoretical Computer Science, 5 (1977), 321–324.
Y. N. Moschovakis. Recursive Analysis. Ph.D. thesis, University of Wisconsin, Madison, Wisconsin, 1963.
Y. N. Moschovakis. Recursive metric spaces. Fundamenta Mathematicae, 55 (1964), 215–238.
J. Myhill and J. C. Shepherdson. Effective operators on partial recursive functions. Zeitschrift fu¨r mathematische Logik Grundlagen der Mathematik, 1 (1955), 310–317.
I. Sigstam. Formal spaces and their effective presentations. Archiv for Mathematical Logic, 34 (1995), 211–246.
M. B. Smyth. Power domains and predicate transformers: A topological view. In J. Diaz, editor, Automata, Languages and Programming. Lecture Notes in Computer Science 154, pp. 662–675. Springer-Verlag, Berlin, 1983.
M. B. Smyth. Finite approximation of spaces. In D. Pitt et al., editors, Category Theory and Computer Programming. Lecture Notes in Computer Science 240, pp. 225–241. Springer-Verlag, Berlin, 1986.
D. Spreen. On some decision problems in programming. Information and Computation, 122 (1995), 120–139. Corrections ibid., 148 (1999), 241–244.
D. Spreen. On effective topological spaces. The Journal of Symbolic Logic, 63 (1998), 185–221. Corrections ibid., 65 (2000), 1917–1918.
V. Stoltenberg-Hansen and J. Tucker. Effective algebras. In S. Abramsky et al., editors, Handbook of Logic in Computer Science, vol. 4 , pp. 357–526. Clarendon Press, Oxford, 1995.
J. V. Tucker and Zucker. Abstract versus concrete computation on metric partial algebras. ACM Transactions on Computational Logic, 5 (2004), 611–668.
K. Weihrauch. Computable Analysis. An Introduction. Springer, Berlin, 2000.
K. Weihrauch and T. Deil. Berechenbarkeit auf cpo’s. Schriften zur Angewandten Mathematik und Informatik, no. 63, Rheinisch-Westf¨alische Technische Hochschule Aachen, 1980.
