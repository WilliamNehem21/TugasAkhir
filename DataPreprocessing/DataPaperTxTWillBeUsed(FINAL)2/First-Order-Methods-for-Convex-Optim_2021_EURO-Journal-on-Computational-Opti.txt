EURO Journal on Computational Optimization 9 (2021) 100015

		




First-Order Methods for Convex Optimization
Pavel Dvurechenskya,b,c, Shimrit Shternd, Mathias Staudigle,‚àó
a Weierstrass Institute for Applied Analysis and Stochastics, Mohrenstr. 39, Berlin 10117, Germany
b Institute for Information Transmission Problems RAS, Bolshoy Karetny per. 19, build.1, Moscow, 127051, Russia
c Moscow Institute of Physics and Technology, 9 Institutskiy per., Dolgoprudny, Moscow Region, 141701, Russia
d Faculty of Industrial Engineering and Management, Technion - Israel Institute of Technology, Haifa, Israel
e Maastricht University, Department of Data Science and Knowledge Engineering (DKE) and Mathematics Centre Maastricht (MCM), Paul-Henri Spaaklaan 1, Maastricht 6229 EN, The Netherlands


a r t i c l e	i n f o	a b s t r a c t

	

2010 MSC:
90C25
90C30
90C06
68Q25
65Y20
68W40

Keywords:
Convex Optimization Composite Optimization First-Order Methods Numerical Algorithms Convergence Rate Proximal Mapping Proximity Operator Bregman Divergence
First-order methods for solving convex optimization problems have been at the forefront of mathematical opti- mization in the last 20 years. The rapid development of this important class of algorithms is motivated by the success stories reported in various applications, including most importantly machine learning, signal process- ing, imaging and control theory. First-order methods have the potential to provide low accuracy solutions at low computational complexity which makes them an attractive set of tools in large-scale optimization problems. In this survey, we cover a number of key developments in gradient-based optimization methods. This includes non-Euclidean extensions of the classical proximal gradient method, and its accelerated versions. Additionally we survey recent developments within the class of projection-free methods, and proximal versions of primal- dual schemes. We give complete proofs for various key results, and highlight the unifying aspects of several optimization algorithms.





Introduction

The traditional standard in convex optimization was to trans- late a problem into a conic program and solve it using a primal- dual interior point method (IPM). The monograph Nesterov and Ne- mirovski (1994) was instrumental in setting this standard. The primal- dual formulation is a mathematically elegant and powerful approach as these conic problems can then be solved to high accuracy when the di- mension of the problem is of moderate size. This philosophy culminated into the development of a robust technology for solving convex opti- mization problems which is nowadays the computational backbone of many specialized solution packages like MOSEK (Andersen and Ander- sen, 2000), or SeDuMi (Sturm, 1999). However, in general, the iteration
mension. As a result, as the dimension ùëõ of optimization problems grows, costs of interior point methods grow non-linearly with the problem‚Äôs di-
off-the shelve interior point methods eventually become impractical. As an illustration, the computational complexity of a single step of many
standardized IPMs scales like ùëõ3, corresponding roughly to the complex-
ity of inverting an ùëõ √ó ùëõ matrix. This means that for already quite small problems of size like ùëõ = 102, we would need roughly 106 arithmetic op-
erations just to compute a single iterate. From a practical viewpoint, such a scaling is not acceptable. An alternative solution approach, par- ticularly attractive for such ‚Äùlarge-scale‚Äù problems, are first-order meth- ods (FOMs). These are iterative schemes with computationally cheap iterations usually known to yield low-precision solutions within reason- able computation time. The success-story of FOMs went hand-in-hand with the fast progresses made in data science, analytics and machine learning. In such data-driven optimization problems, the trade-off be- tween fast iterations and low accuracy is particularly pronounced, as these problems usually feature high-dimensional decision variables. In these application domains precision is usually considered to be a sub- ordinate goal because of the inherent randomness of the problem data, which makes it unreasonable to minimize with accuracy below the sta- tistical error.
The development of first-order methods for convex optimization problems is still a very vibrant field, with a lot of stimulus from the


‚àó Corresponding author.
E-mail addresses: pavel.dvurechensky@wias-berlin.de (P. Dvurechensky), shimrits@technion.ac.il (S. Shtern), m.staudigl@maastrichtuniversity.nl (M. Staudigl).

https://doi.org/10.1016/j.ejco.2021.100015
Received 30 December 2020; Received in revised form 19 August 2021; Accepted 11 October 2021
2192-4406/¬© 2021 The Author(s). Published by Elsevier Ltd on behalf of Association of European Operational Research Societies (EURO). This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/)



already mentioned applications in machine learning, statistics, optimal control, signal processing, imaging, and many more, see e.g. the recent review papers on optimization for machine learning (Bottou et al., 2018; Jain and Kar, 2017; Wright, 2018). Naturally, any attempt to try to sur- vey this lively scientific field is already doomed from the beginning to be a failure, if one is not willing to make restrictions on the topics cov- ered. Hence, in this survey we tried to give a largely self-contained and concise summary of some important families of FOMs, which we believe have had an ever-lasting impact on the modern perspective of continu- ous optimization. Before we give an outline of what is covered in this survey, it is therefore fair to mention explicitly, what is NOT covered in the pages to come. One major restriction we imposed on ourselves is the concentration on deterministic optimization algorithms. This is in- deed a significant cut in terms of topics, since the field of stochastic op- timization and randomized algorithms has particularly been at the fore- front of recent progresses made. Nonetheless, we intentionally made this cut, since most of the developments within stochastic optimization al- gorithms are based on deterministic counterparts, and actually in many cases one can think of deterministic algorithms as the mean-field equiv- alent of a stochastic optimization technique. As a well-known example, we can mention the celebrated stochastic approximation theory initi- ated by Robbins and Monro (1951), with its close connection to deter- ministic gradient descent. See Benveniste et al. (1990); Kushner (1984); Ljung et al. (2012), for classical references from the point of view of systems theory and optimization, and Bena√Øm, 1998 for its deep con- nection with deterministic dynamical systems. This link has gained sig- nificant relevance in various stochastic optimization models recently (Davis et al., 2020; Duchi and Ruan, 2018; Mertikopoulos and Staudigl,
timization, mainly because of its good scalability properties and small iteration costs. Conceptually, it is an interesting optimization method, as it allows us to solve convex programming problems with complicated geometry on which proximal operators are not easy to evaluate. This, in fact, applies to many important domains, like the Spectrahedron, or domains defined via intersections of several half spaces. CG is also rele- vant when the iterates should preserve structural features of the desired solution, like sparsity. Section 5 gives a comprehensive account of this versatile method.
All the methods we discussed so far generally provide sublinear con-
ity of ùëÇ(1‚àïùúÄ). In his influential paper (Nesterov, 1983), Nesterov pub- vergence guarantees in terms of function values with iteration complex- lished an optimal method with iteration complexity of ùëÇ(1‚àï ùúÄ) to reach an ùúÄ-optimal solution. This was the starting point for the development
of acceleration techniques for given FOMs. Section 6 summarizes the recent developments in this field.
With writing this survey, we tried to give a holistic presentation of the main methods in use. At various stages in the survey, we establish connections, if not equivalences, between various methods. For many of the key results we provide self-contained proofs.
Notation We use standard notation and concepts from convex and variational analysis, which, unless otherwise specified, can all be found in the monographs (Bauschke and Combettes, 2016; Hiriart-Urrut and
we let ùñµ represent a finite-dimensional vector space of dimension ùëõ with Lemar√©chal, 2001; Rockafellar and Wets, 1998). Throughout this article, norm  ‚ãÖ . We will write ùñµ‚àó for the (algebraic) dual space of ùñµ with
is ùë¶  = sup{ ùë¶, ùë•   ùë• ‚â§ 1}. The set of proper lower semi-continuous


important classes of alternating minimization methods, such as block- coordinate descent, and variations thereof. Section 14 in the beautiful book (Beck, 2017) gives a thorough account of these methods, and we urge the interested reader to start reading there.


0
given continuously differentiable function ùëì
gradient vector
(  ùúïùëì	 ùúïùëì )‚ä§
‚à∂ ùñ∑
‚äÜ ùñµ ‚Üí|


‚Ñù we denote its

ferent optimization algorithms are surveyed, all of which belong now to the standard toolkit of mathematical programmers. After introduc- ing the (standard) notation that will be used in this survey, we give a precise formulation of the model problem for which modern convex optimization algorithms are developed. In particular, we focus on the general composite convex optimization model, including smooth and non-smooth terms. This model is rich enough to capture a significant class of convex optimization problems. Non-smoothness is an impor- tant feature of the model, as it allows us to incorporate constraints via penalty and barrier functions. Non-smooth optimization methods also gained a lot of attention in statistical and machine learning where regu- larization functions are usually included in the estimation part in order to promote sparsity or other a-priori relevant information about the es- timator to be obtained. An eÔ¨Écient way to deal with non-smoothness is provided by the use of proximal operators, a key methodological contri- bution born within convex analysis (see Rockafellar and Wets (1998) for an historical overview). Section 3 introduces the general non-Euclidean proximal setup, which describes the mathematical framework within which the celebrated Mirror Descent and Bregman proximal gradient meth- ods are analyzed nowadays. These tools achieved extreme popularity in online learning and convex optimization (Bubeck, 2015; Juditsky and Nemirovski, 2011a; 2011b). The main idea behind this technology is to exploit favorable structure in the problem‚Äôs geometry to boost the prac- tical performance of gradient-based methods. The proximal revolution has also influenced the further development of primal-dual optimization methods based on augmented Lagrangians. We review proximal variants of the celebrated Alternating Direction Method of Multipliers (ADMM) in Section 4. We then move on to give an in-depth presentation of projection-free optimization methods based on linear minimization ora-
cles, the classical Conditional Gradient (CG) (a.k.a Frank-Wolfe) method
The subdifferential at a point ùë• ‚àà ùñ∑ ‚äÜ ùñµ of a convex function ùëì ‚à∂ ùñµ ‚Üí
‚Ñù ‚à™ {+‚àû} is denoted as
ùúïùëì (ùë•) = {ùëù ‚àà ùñµ‚àó ùëì (ùë¶) ‚â• ùëì (ùë•) + ùëù, ùë¶ ‚àí ùë•  ‚àÄùë¶ ‚àà ùñµ}.	(1.1)
The elements of ùúïùëì (ùë•) are called subgradients.
Given some set ùñ∑ ‚äÜ ùñµ, denote its relative interior as relint(ùñ∑). Recall As a notational convention, we write matrices in bold capital fonts.
that, if the dimension of the set ùñ∑ agrees with the dimension of the
interior, which we denote as int(ùñ∑). Hence, the two notions differ only ground space ùñµ, then the relative interior coincides with the topological
We denote the closure as cl(ùñ∑). The boundary of ùñ∑ is defined in the usual in situations where ùñ∑ is contained in a lower-dimensional submanifold. way bd(ùñ∑) = cl(ùñ∑) ‚ßµ int(ùñ∑).

Composite convex optimization

In this survey we focus on the generic optimization problem
min{Œ®(ùë•) ‚à∂= ùëì (ùë•) + ùëü(ùë•)}.	(P)
ùë•‚ààùñ∑
At many stages of this survey, the following properties are imposed on the data of the minimization problem (P):
Assumption 1.
ùñ∑ ‚äÜ ùñµ is a nonempty closed convex set embedded in a finite- dimensional real vector space ùñµ;
ùëì ‚à∂ ùñµ ‚Üí ‚Ñù is convex and continuously differentiable on a neighbor- hood of ùñ∑. Furthermore, it possesses a ùêøùëì -Lipschitz continuous gra-
dient on ùñ∑:

and its recent variants. CG gained extreme popularity in large-scale op-
(‚àÄùë•, ùë•‚Ä≤ ‚àà ùñ∑) ‚à∂
‚àá (ùë•) ‚àí ‚àáùëì (ùë•‚Ä≤)
‚â§ ùêø
ùëì ‚Äñùë•  ùë• ‚Äñ
(2.1)

ùëü ‚àà Œì0(ùñµ) and ùúá-strongly convex on ùñµ for some ùúá ‚â• 0 with respect to a norm ‚ãÖ on ùñµ. This means that for all ùë•, ùë¶ ‚àà dom ùëü, and any selection ùëü (ùë•) ‚àà ùúïùëü(ùë•), we have
ùëü(ùë¶) ‚â• ùëü(ùë•) + ùëü‚Ä≤(ùë•), ùë¶ ‚àí ùë• + ùúá ùë• ‚àí ùë¶ 2.
2
If ùúá = 0 then the function ùëü is called convex.
We are interested in problems which are feasible.
Assumption 2. dom ùëü ‚à© ùñ∑ ‚â† ‚àÖ.
In many recent applications, the smooth function ùëì represents a data fidelity term and the non-smooth part ùëü takes the role of a penalty func- tion or regularizer. The most important examples of function ùëü are as
follows:

Wajs (2005). This led to a rich interplay between convex programming on the one hand and machine learning and signal/image processing on the other hand. Indeed, several work-horse models in these application domains are of the composite type
Œ®(ùë•) = ùëî(ùêÄùë•) + ùëü(ùë•)	(2.7)
where ùëî ‚à∂ ùñ§ ‚Üí ‚Ñù is a smooth function defined on a finite-dimensional set ùñ§ (usually of lower dimension than ùñµ), and ùêÄ ‚àà Bùñ´(ùñµ, ùñ§) is bounded linear operator mapping points ùë• ‚àà ùñµ to elements ùêÄùë• ‚àà ùñ§. Convexity al-
lows us to switch between primal and dual formulations freely, so that the above problem can be equivalently considered as a convex-concave minimax problem
min max{ùëü(ùë•) + ùêÄùë•, ùë¶ ‚àí ùëî‚àó(ùë¶)}	(2.8)

ùëü is an indicator function of a closed convex set ùñ¢ ‚äÇ ùñµ with ùñ¢ ‚à© ùñ∑ ‚â†
ùë•‚ààùñ∑ ùë¶‚ààùñ§	‚ü®	‚ü©

‚àÖ:
ùëü(ùë•) = ùõøùñ¢(ùë•) ‚à∂=
0	if ùë• ‚àà ùñ¢,
+‚àû	if ùë• ‚àâ ùñ¢.
Such minimax formulations have been of key importance in signal pro- cessing and machine learning (Juditsky et al., 2013; Juditsky and Ne- mirovski, 2011b), game theory (Sorin, 2000), decomposition methods (Tseng, 1991) and its very recent innovation around generative adver-

ùëü is a self-concordant barrier (Nesterov, 2018b; Nesterov and Ne-
mirovski, 1994) for a closed convex set ùñ¢ ‚äÇ ùñµ with ùñ¢ ‚à© ùñ∑  ‚àÖ.
ùëü is a nonsmooth convex function with relatively simple structure.
For example, it could be a norm regularization like the celebrated
ùìÅ -regularizer ùëü(ùë•) = ùë•  . This regularizer plays a fundamental role
sarial networks (Goodfellow et al., 2014).
Another canonical class of optimization problems in machine learn- ing is the finite-sum model
Œ®(ùë•) =  1 ‚àë ùëì (ùë•) + ùëü(ùë•),	(2.9)




cone associated with the closed convex set ùñ∑ ‚äÜ ùñµ as For characterizing solutions to our problem (P), define the tangent
ùñ≥ùñ¢ (ùë•) ‚à∂= {{ùë£ = ùë°(ùë•‚Ä≤ ‚àí ùë•)|ùë•‚Ä≤ ‚àà ùñ∑, ùë° ‚â• 0} ‚äÜ ùñµ	if ùë• ‚àà ùñ∑,
which comes from supervised learning, where ùëìùëñ (ùë•) corresponds to the loss incurred on the ùëñ-th data sample using a hypothesis parameter- ized by the decision variable ùë•. Typically, ùëÅ is an extremely large
number as it corresponds to the size of the data set. The recent liter-




and the normal cone
{{ùëù ‚àà ùñµ‚àó| sup
‚â§ 0}	if ùë• ‚àà ùñ∑


very active in making such large scale optimization problems tractable. Surveys on the latest developments in these fields can be found in



We remark that ùúïùõøùñ∑(ùë•) = ùñ≠ùñ¢ùñ∑(ùë•) for all ùë• ‚àà ùñ∑.
Given the feasible set ùñ∑ ‚äÜ ùñµ, we denote the value function
Œ®  (ùñ∑) ‚à∂= inf Œ®(ùë•).	(2.3)
ùë•‚ààùñ∑
We are focusing in this survey on problems which are solvable.
The Proximal Gradient Method

Motivation

In the context of the composite optimization problem (P), a classical

Assumption 3. ùñ∑‚àó ‚à∂= {ùë• ‚àà ùñ∑ Œ®(ùë•) = Œ®
min
(ùñ∑)} ‚â† ‚àÖ.
and very powerful idea is to construct numerical optimization meth- ods by exploiting problem structure. Following this philosophy, we de-

Given the standing hypothesis on the functions ùëì and ùëü, it is easy
to see that ùñ∑‚àó is always a closed convex set. Moreover, if ùúá > 0, then problem (P) is strongly convex, and so ùñ∑‚àó is a singleton.
Optimality conditions for problem (P) can be formulated using dif- ferential calculus tools from convex analysis. (P) can be treated as an
linearization of the smooth part, the non-smooth part ùëü ‚àà Œì0(ùñµ), and a termine the position of the next iterate by minimizing the sum of the quadratic regularization term with weight ùõæ > 0:
ùë•+(ùõæ) = argmin{ùëì (ùë•) + ‚àáùëì (ùë•), ùë¢ ‚àí ùë• + ùëü(ùë¢) +  1  ùë¢ ‚àí ùë• 2}.	(3.1)

unconstrained problem by augmenting the objective function Œ® = ùëü + ùëì
ùë¢‚ààùñ∑	‚ü®
‚ü©	2ùõæ ‚Äñ	‚Äñ2

by the non-smooth penalty ùõøùñ∑. Our main problem becomes then
min(ùëì (ùë•) + ùëü(ùë•) + ùõø (ùë•)).	(2.4)
ùë•‚ààùñµ
Fermat‚Äôs rule says that ùë•‚àó ‚àà ùñµ is a solution to (2.4) if and only if 0 ‚àà
ùúïŒ®(ùë•‚àó) + ùñ≠ùñ¢ùñ∑(ùë•‚àó) (Rockafellar and Wets (1998, Theorem 8.15)). In gen-
eral, the subdifferential operator is not linear, and we only have a ‚Äùfuzzy


Disregarding terms which do not influence the computation of the so-
set constraint into the non-smooth part by defining ùúô(ùë•) = ùëü(ùë•) + ùõøùñ∑(ùë•), lution of this strongly convex minimization problem, and absorbing the
we see that (3.1) can be equivalently written as
ùë•+ (ùõæ) = argmin {ùõæùúô(ùë¢) + 1 ‚Äñùë¢ ‚àí (ùë• ‚àí ùõæ‚àáùëì (ùë•))‚Äñ2 }.	(3.2)

and ùëì is smooth on a neighborhood containing ùñ∑ (Assumptions 1(b)). Hence, by Rockafellar and Wets (1998, Exercise 8.8c), we have ùúïŒ®(ùë•‚àó) =
‚àáùëì (ùë•‚àó) + ùúïùëü(ùë•‚àó). Therefore, Fermat‚Äôs optimality condition becomes
0 ‚àà ‚àáùëì (ùë•‚àó) + ùúïùëü(ùë•‚àó) + ùñ≠ùñ¢ùñ∑(ùë•‚àó).	(2.5)
This means that there exists ùúâ ‚àà ùúïùëü(ùë•‚àó) such that
interesting geometric principles acting here. Indeed, if ùëü would be a This way of writing the updating scheme immediately reveals some
finite constant on ùñ∑ (say 0 for concreteness), then the rule (3.2) is nothing else than the Euclidean projection of the directional vector
ùë• ‚àí ùõæ‚àáùëì (ùë•) onto the set ùñ∑. In this case, the minimization routine re-
turns the classical projected gradient step ùë•+(ùõæ) = ùëÉùñ∑(ùë• ‚àí ùõæ‚àáùëì (ùë•)), where

‚àá (ùë•‚àó) + ùúâ, ùë£ ‚â• 0	‚àÄùë£ ‚àà ùñ≥ùñ¢ (ùë•‚àó).	(2.6)	ùñ∑
ùë¶‚ààùñ∑ 2 ‚Äñ	‚Äñ2	ùñ∑


The structured composite optimization problem (P) has attracted a lot of interest in convex programming over the last 20 years moti- vated by a number of important applications, see, e.g. Combettes and
cases where the non-smooth function ùëü is non-trivial over the domain erates the classical gradient projection method. A new obstacle arises in
ùñ∑. A fundamental idea, going back to Moreau (1965), is to define the
proximity operator Proxùúô ‚à∂ ùñµ ‚Üí ùñµ associated with a function ùúô ‚àà Œì0(ùñµ)



as1
Prox (ùë•) ‚à∂= argmin {ùúô(ùë¢) + 1 ‚Äñùë¢ ‚àí ùë•‚Äñ2}.	(3.3)
of the domain ùñ∑, see e.g. Auslender and Teboulle (2009). This can not only positively affect the per-iteration complexity, but also will have a

Remark 3.1. The classical Moreau proximity operator of ùúô is, in gen- eral, explicitly computable when ùúô is norm like, or when ùúô is the in-
dicator function of sets whose geometry is favorable to Euclidean pro- jections. Although quite frequent in applications (orthant, second-order
cone, ùìÅ1 norm), these prox-friendly functions are very scarce, see, e.g.,
Combettes and Wajs (2005, Section 2.6). A significant improvement will
be made in Section 3.2, where a general Bregman proximal framework will be introduced.
The value function
 1
algorithms is to introduce a distance generating function ‚Ñé ‚à∂ ùñµ ‚Üí (‚àí‚àû, ‚àû], which is a barrier-type mapping suitably chosen to capture geometric
features of the set ùñ∑.

Definition 3.1. Let ùñ∑ be a closed convex subset of ùñµ. We say that ‚Ñé ‚àà Œì0(ùñµ) is a distance generating function (DGF) with modulus ùõº > 0 with
respect to  ‚ãÖ  on ùñ∑ if
‚Ñé is closed, convex and proper;
ùñ∑ ‚äÜ dom ‚Ñé;
the set ùñ∑‚ó¶ = {ùë• ‚àà ùñ∑ ùúï‚Ñé(ùë•)  ‚àÖ} is nonempty and convex;

ùúô (ùë•) = inf{ùúô(ùë¢) +
ùë¢
2ùõæ
‚Äñùë¢  ùë•‚Äñ
‚Ñé restricted to ùñ∑‚ó¶
is|continuously differentiable and strongly convex

is called the Moreau envelope of the function ùúô, and is an important
smoothing and regularization tool, frequently employed in numerical
analysis. Indeed, for a function ùúô ‚àà Œì (ùñµ) and ùõæ > 0, its Moreau enve-
under the norm  ‚ãÖ  with parameter ùõº:
(‚àÄùë•, ùë•‚Ä≤ ‚àà ùñ∑‚ó¶) ‚à∂	‚àá (ùë•) ‚àí ‚àá‚Ñé(ùë•‚Ä≤), ùë• ‚àí ùë•‚Ä≤ ‚â•
ùõº‚Äñùë•
‚Äì ùë•‚Ä≤ 2.

0
lope is finite everywhere, convex and has ùõæ‚àí1-Lipschitz continuous gra- dient on ùñµ given by ‚àáùúôùõæ (ùë•) = 1 (ùë• ‚àí Proxùõæùúô(ùë•)) Bauschke and Combettes
(2016, Prop. 12.30).
In the context of minimization the composite model Œ® = ùëì + ùëü, the
gradient-based methods. Choosing ùúô = ùëü + ùõøF in (3.3), and replacing the proximity operator is the key actor in generating a large family of generic input with the specific input ùë• ‚àí ùõæ‚àáùëì (ùë•), we are in the frame-
work of the Proximal Gradient Method (PGM). PGM is a very powerful method which received enormous interest in optimization and its ap- plications. For a survey in the context of signal processing we refer the reader to Combettes and Pesquet (2011). A general survey on proximal operators can be found in Beck (2017); Parikh and Boyd (2014).
We denote by Óà¥ (ùñ∑) the set of DGFs on ùñ∑.

(1970, Section 23-25), we know that dom(ùúï‚Ñé) ‚äÇ dom ‚Ñé. Hence, ùñ∑‚ó¶ = From classical differential theory of convex functions Rockafellar dom(ùúï‚Ñé) ‚à© ùñ∑ is contained in the set dom ‚Ñé ‚à© ùñ∑, which in turn agrees with
ùñ∑ thanks to property (b). Restricted to ùñ∑‚ó¶ the DGF ‚Ñé is continuously
differentiable.
In many proximal settings we are interested in DGFs which act as
function ‚Ñé are captured by its scaling near bd(ùñ∑), usually encoded in barriers on the feasible set ùñ∑. Naturally, the barrier properties of the
terms of the notion of essential smoothness (Rockafellar (1970, Section 26).)
Definition 3.2 (Essential smoothness). ‚Ñé ‚àà Óà¥ (ùñ∑) is essentially smooth


Input:    ùë•0     ‚àà    ùñ∑. The Proximal Gradient Method (PGM)
General step: For ùëò = 0, 1, ‚Ä¶ do: Choose ùõæùëò > 0.
if it satisfies the following three conditions:
int(dom ‚Ñé) ‚â† ‚àÖ;
‚Ñé is differentiable throughout int(dom ‚Ñé);
limùëñ‚Üí‚àû ‚Äñ‚àá‚Ñé(ùë•ùëñ)‚Äñ = +‚àû whenever ùë•1, ùë•2, ‚Ä¶ is a sequence in int(dom ‚Ñé)

Given ‚Ñé ‚àà Óà¥ (ùñ∑), its Bregman divergence ùê∑ ‚à∂ dom ‚Ñé √ó dom(ùúï‚Ñé) ‚Üí ‚Ñù

Remark 3.2. In the fully non-smooth case, i.e. when ùëì = 0 in our model
is defined as
ùê∑ (ùë¢, ùë•) ‚à∂= ‚Ñé(ùë¢) ‚àí ‚Ñé(ùë•) ‚àí ‚àá‚Ñé(ùë•), ùë¢ ‚àí ùë• .	(3.4)

problem, PGM reduces to a classical recursion known as the proximal	‚Ñé	‚ü®	‚ü©



ùë•ùëò+1 = Prox	(ùë•ùëò) = argmin{ùúô(ùë¢) +  1
ùë¢ ‚àí ùë•ùëò 2}.
(‚àÄùë• ‚àà dom(ùúï‚Ñé), ‚àÄùë¢ ‚àà dom ‚Ñé) ‚à∂	ùê∑ (ùë¢, ùë•) ‚â• ùõº
ùë¢ ‚àí ùë• 2.	(3.5)

ùëò	ùë¢‚ààùñµ
2ùõæùëò ‚Äñ	‚Äñ
‚Ñé	2 ‚Äñ	‚Äñ

This scheme has been first proposed by Martinet (1970) and Rockafellar (1976b).

Bregman Proximal Setup
Hence, ùê∑‚Ñé(ùë•, ùë•) = 0 for ùë• ‚àà dom(ùúï‚Ñé), but in general it is not a symmetric
function and it does not satisfy a triangle inequality. This disqualifies
ùê∑‚Ñé from carrying the label of a metric, but it can still be interpreted as
a distance measure.
The convex conjugate ‚Ñé (ùë¶) = supùë•‚ààùñµ{ ùë•, ùë¶ ‚àí ‚Ñé(ùë•)} for a function ‚Ñé ‚àà ( )	‚àó	1

the ùìÅ -norm 1 ùë¢ ‚àí	2
gradient (Rockafellar and Wets (1998, Proposition 12.60)):

2	2 ‚Äñ	ùë•‚Äñ by a different distance-like function which is tai-

distance-like functions that will be used are Bregman divergences. The
2	1	‚ü®
1	2	1‚ü©
2ùõº ‚Äñ 2
1‚Äñ‚àó

transition from Euclidean to non-Euclidean distance measures is mo- tivated by the usefulness and flexibility of the latter in computational perspectives and potentials for improving convergence properties for specific application domains. In particular, the move from Euclidean to non-Euclidean distance measures allows to adapt the algorithm to the underlying geometry, typically explicitly embodied in the description
for all ùë¶1, ùë¶2 ‚àà ùñµ‚àó.
It will be instructive to go over some standard examples of dis-
tance generating functions. See also Combettes and Wajs (2005), Bauschke and Combettes (2016), and Ben-Tal and Nemirovski (2020).
Example 3.1 (Euclidean Projection). We begin by revisiting the ùìÅ2- projection on some closed convex subset ùñ∑ ‚äÇ ùñµ = ‚Ñùùëõ. Letting ‚Ñé(ùë•) =

1	2
1 The repository http://proximity-operator.net/index.html provides codes
‚ó¶ = ùñ∑. Moreover, for ùë• ‚àà ùñ∑‚ó¶,

2 ‚Äñùë•‚Äñ2 for ùë•
ùñµ, we readily see that ùñ∑



Guttmann-Beck (2019).
ùê∑ (ùë¢, ùë•) = 1 ùë¢ ‚àí ùë• 2 for all ùë¢, ùë• ‚àà ùñ∑.

‚Ñé	2 ‚Äñ	‚Äñ2

Example 3.2 (Ent‚àëropic Regularization). Let ùñ∑ = {ùë• ‚àà ‚Ñùùëõ | ‚àëùëõ
ùë•ùëñ =
(Bauschke et al., 2003; Censor and Zenios, 1992) onto the set ùñ∑. It should

‚Ñù+	ùë•
‚Ñù |  ùëñ=1 ùë•ùëñ
ùñµ  ‚Ñùùëõ. De-

fine the function ùúì ‚à∂ ‚Ñù ‚Üí [0, ‚àû] as
‚éß‚é™ùë° ln(ùë°) ‚àí ùë°	if ùë° > 0,
Example 3.1 the Bregman proximal operator boils down to the Moreau proximal operator (3.3). As we already alluded to, the main rationale
for the introduction of Bregman proximal operators is that it allows us

ùúì (ùë°) =
0	if ùë° = 0,
‚é™‚é©+‚àû	else.
of ùñ∑. Below, we give examples for which Prox‚Ñé (ùë•) is easy to compute in to define a projection framework which can be adapted to the geometry
‚àë

dowing the ground space ùñµ with the ùìÅ1 norm ‚Äñ ‚ãÖ ‚Äñ  ‚Äñ ‚ãÖ ‚Äñ1, i‚àët can be

nested scheme if used in an algorithm).

1}	1	+	++ |
ùëñ=1 ùëñ
=

. Indeed, on ùñ∑‚ó¶ the function ‚Ñé is continuously differentiable with
‚àá‚Ñé(ùë•) = [ln(ùë•1 ), ‚Ä¶ , ln(ùë•ùëõ )]‚ä§. Furthermore, ùúï‚Ñé(0) = ‚àÖ, so that dom(ùúï‚Ñé) =
ùëõ . The resulting Bregman divergence is the Kullback-Leibler diver-
gence
ùëõ	( ùë¢ )	ùëõ
Example 3.6. In the following examples we assume that ùñµ  ‚Ñù for sim- plicity.
1. Let ùúô(ùë•) = ùõæ ùë• ‚àí ùúâ where ùõæ, ùúâ > 0. Take ‚Ñé(ùë•) = ùë• ln(ùë•), dom ‚Ñé = [0, ‚àû).
Then

ùê∑‚Ñé (ùë¢, ùë•) =
ùëñ=1
ùë¢ùëñ ln
ùëñ
ùë•ùëñ
+
ùëñ=1
(ùë•ùëñ ‚àí ùë¢ùëñ ).
‚àè
Prox‚Ñé (ùë•) =
exp(ùõæ)ùë•	if ùë• < exp(‚àíùõæ)ùúâ,
ùúâ	if ùë• ‚àà [exp(‚àíùõæ)ùúâ, exp(ùõæ)ùúâ],
‚é™

0 ‚â§	‚â§
0 ‚â§  ‚â§
ùëñ=1  ùëñ  ùëñ	‚é©



( ‚àí ) ln( ‚àí
) + (
‚Äì  ) ln(   ‚àí  )
‚àà (	)
2 (‚àö	)




ùúìùëé,ùëè
(ùë°) ‚à∂=
0	if ùë° ‚àà {ùëé, ùëè},
‚é™+‚àû

Note that f‚é©or ùë° ‚àà (ùëé, ùëè), we have ùúì ‚Ä≤
else
(ùë°) = ln ( ùë°‚àíùëé ), and ùúïùúìùëé,ùëè (ùë°) = ‚àÖ for ùë° ‚àà
Bregman proximal gradient method

For solving our main problem (P), a special selection of the function

‚Ñù ‚ßµ (ùëé, ùëè). Accordin‚àègly, the function ‚Ñé(ùë•) = ‚àëùëõ
ùúìùëé ,ùëè (ùë•ùëñ ) is a DGF on ùñ∑ =
ùúô ‚àà Œì (ùñµ) in (3.7) is ùúô(ùë¢) = ùõæ(ùëü + ùõø )(ùë¢) + ùõæ‚àáùëì (ùë•), ùë¢ ‚àí ùë• . Replacing the

ùúì ‚Ä≤
ùëé1 ,ùëè1
ùë• ,	, ùúì ‚Ä≤
ùëéùëõ ,ùëèùëõ
(ùë•ùëõ )]‚ä§.
mapping
P ‚Ñé

(ùë•, ùë¶) ‚à∂= argmin{ùõæùëü(ùë¢) + ùë¶, ùë¢ ‚àí ùë• + ùê∑ (ùë¢, ùë•)}.	(3.8)

Example 3.4 (Semidefinite Constraints). Let ùñµ = Sùëõ be the set of real
symmetric matrices and ùñ∑ = Sùëõ be the cone of real symmetric positive
ùõæùëü
ùë¢‚ààùñ∑
‚Ñé
‚àó

+
ùêÄ ùêÅ
= tr(ùêÄùêÅ).
The prox-mapping takes as inputs a ‚Äùprimal-dual‚Äù pair (ùë•, ùë¶) ‚àà ùñ∑
√ó ùñµ

semi-definite matrices equipped with the inner product	,
Define the negative von Neumann entropy ‚Ñé(ùêó) = tr[ùêó log(ùêó)], which
entropy. It can be verified that dom ‚Ñé = ùñ∑ and ‚àá‚Ñé(ùêó) = log(ùêó) + ùêà for can be seen as the matrix-equivalent of the negative Boltzmann-Shannon
ùêó ‚àà Sùëõ . Hence, dom ‚Ñé = ùñ∑, and ùñ∑‚ó¶ = Sùëõ , the cone of positive definite matrices. For ùêó ‚àà S++, the corresponding Bregman divergence is given
by
ùê∑‚Ñé (ùêó‚Ä≤, ùêó) = tr[ùêó‚Ä≤ log(ùêó‚Ä≤) ‚àí ùêó‚Ä≤ log(ùêó) + ùêó‚Ä≤ ‚àí ùêó]
where ùë• is the current iterate, and ùë¶ is a dual variable representing a
‚Äúgradient signal‚Äù we obtain on the smooth part of the minimization
problem (P) (usually obtained after consulting a black-box oracle). Var- ious conditions on the well-posedness of the prox-mapping have been stated in the literature. We will not repeat them here, but rather refer to the recent survey (Teboulle, 2018). Below we give some examples.
Example 3.7 (Moreau Proximal Operator). Let ùñµ = ‚Ñùùëõ and ùñ∑ a
nonempty, closed and convex set in ùñµ. Let  ‚ãÖ  =  ‚ãÖ  , and ‚Ñé(ùë•) =

‚Äñ	‚Äñ ‚Äñ  ‚Äñ ‚Äñ2

is 1 -strongly convex with respect to the nuclear norm ‚Äñùêó‚Äñ1 = ‚àë |ùúÜ (ùêó)|
ùõæùëü(ùë•, ùë¶) = Proxùõæ(ùëü+ùõøùñ∑ )(ùë• ‚àí ùë¶).

‚Äñ ‚ãÖ ‚Äñ . Consider the set ùñ∑
‚àà  ùëõ | ‚àëùëõ
1
= 1}

ùê∑ (ùêó , ùêó) ‚â•	ùêó ‚àí ùêó  .
2
with the Boltzmann-Shannon entropy ‚Ñé(ùë•) = ‚àëùëõ
ùë•ùëñ ln(ùë•ùëñ ). For ùëü(ùë•) = 0,

{ùë• ‚àà ùñµ ùë• > (ùë•2 + ‚Ä¶+ ùë•2
)1‚àï2 }
++	ùë• ùëíùë¶ùëñ

| ùëõ	1


ùëõ‚àí1
the interior of the second-order cone.
[P ‚Ñé (ùë•, ùë¶)] =	ùëñ
1 ‚â§ ùëñ ‚â§ ùëõ, ùë• ‚àà ùñ∑, ùë¶ ‚àà ùñµ‚àó.	(3.9)

‚Äì ln( ùêâ ùë•, ùë• ) + ùõº ùë• 2. Then ‚Ñé ‚àà Óà¥ (ùñ∑) with dom ‚Ñé = ùñ∑‚ó¶ = ùêøùëõ
‚äÇ ùñ∑. The

ùëõ	2	2	ùõº
associated Bregman divergence is
ùê∑ (ùë•, ùë¢) = ‚àí ln ( ‚ü®ùêâùëõ ùë•, ùë•‚ü© ) + 2 ‚ü®ùêâùëõ ùë•, ùë¢‚ü© ‚àí 2 + ùõº ‚Äñùë• ‚àí ùë¢‚Äñ2 .
++	ponentiated gradient descent (Beck and Teboulle, 2003; Juditsky et al.,
2005).
Example 3.9 (Box Constraints). Consider the setting introduced in

‚Ñé	ùêâ ùë¢, ùë¢
ùêâ ùë¢, ùë¢	2	2
Example 3.3. For ùëü(ùë•) = 0, one can compute

The proximal framework for general conic constraints has been devel-
oped in Auslender and Teboulle (2006b).
[P ‚Ñé (ùë•, ùë¶)] = ùëé +
	ùëèùëñ ‚àí ùëéùëñ	
1 ‚â§ ùëñ ‚â§ ùëõ, ùë• ‚àà ùñ∑, ùë¶ ‚àà ùñµ‚àó.

ùõøùñ∑
ùëñ	ùëñ
1 + ùëèùëñ ‚àíùë•ùëñ exp(ùë¶ )

Once we endow our set ùñ∑ with a DGF, the technology generating a gradient method in this non-Euclidean setting is the Bregman proximal
operator (Teboulle, 1992) applied to the function ùúô ‚àà Œì (ùñµ):
ùë•ùëñ ‚àíùëéùëñ	ùëñ
If ùõæ > 0 is a step-size parameter and ùë¶ = ùõæ‚àáùëì (ùë•), then we obtain the
Bregman proximal map ùëá ‚Ñé(ùë•) ‚à∂=  ‚Ñé (ùë•, ùõæ‚àáùëì (ùë•)) for all ùë• ‚àà ùñ∑. Iterating

0	ùõæ
ùõæùëü

Prox‚Ñé (ùë•) ‚à∂= argmin{ùúô(ùë¢) + ùê∑‚Ñé (ùë¢, ùë•)}.	(3.7)
ùúô	ùë¢‚ààùñµ
If ùúô(ùë•) = ùõøùñ∑(ùë•) is the indicator function of the closed convex set ùñ∑ ‚äÇ ùñµ,
then the Bregman proximal operator defines the Bregman projection
this map generates a discrete-time dynamical system known as the Breg- man proximal gradient method (BPGM).

assumption that the prox-mapping ‚Ñé(ùë•, ùë¶) can be evaluated eÔ¨Éciently Remark 3.3. For simple implementation, BPGM relies on the structural

(3‚â§.5) ùëì (ùë¢) ‚àí ùëì (ùë•+) + ùêøùëì ùê∑ (ùë•+, ùë•).

The Bregman Proximal Gradient Method (BPGM)
Input: ‚Ñé ‚àà	(ùñ∑). Pick ùë•0 ‚àà dom(ùëü) ‚à© ùñ∑‚ó¶.
ùõº	‚Ñé

ùõº
General step: For ùëò = 0, 1, ‚Ä¶ do: choose ùõæ > 0.
Using this estimate in relation (3.12), we obtain, for all ùë¢ ‚àà dom ‚Ñé ‚à© ùñ∑,
ùõæ(Œ®(ùë•+) ‚àí Œ®(ùë¢)) ‚â§ ùê∑ (ùë¢, ùë•) ‚àí ùê∑ (ùë¢, ùë•+) ‚àí (1 ‚àí ùõæ ùêøùëì )ùê∑ (ùë•+, ùë•).	(3.17)

ùõæùëò ùëü	ùëò
If ùõæ ‚àà (0,  ùõº ], then the above yields
ùëì
ùõæ(Œ®(ùë•+) ‚àí Œ®(ùë¢))  ùê∑ (ùë¢, ùë•) ‚àí ùê∑ (ùë¢, ùë•+),  ùë¢ ‚àà dom ‚Ñé ‚à© ùñ∑.

on the trajectory {(ùë•ùëò, ùõæ ‚àáùëì (ùë•ùëò)) 0 ‚â§ ùëò ‚â§ ùêæ ‚àà ‚Ñï‚àó}. This, often somewhat	‚Ñé	‚Ñé

ùëò	|
Setting  = ùëò  + = ùëò+1 and  =  , one can reformulate the previous



Basic Complexity Properties
To assess the iteration complexity of BPGM, let us start with some preparatory estimates. The first-order optimality condition for the point
+	‚Ñé
ùõæùëü
ùõæ  Œ®(ùë•ùëò+1) ‚àí Œ®(ùë¢) ‚â§ ùê∑ (ùë¢, ùë•ùëò) ‚àí ùê∑ (ùë¢, ùë•ùëò+1),  ùë¢ ‚àà dom ‚Ñé ‚à© ùñ∑.
Choosing ùë¢ = ùë•ùëò, we readily see ùõæ (Œ®(ùë•ùëò+1) ‚àí Œ®(ùë•ùëò)) ‚â§ ‚àíùê∑ (ùë•ùëò, ùë•ùëò+1) ‚â§ 0,

i.e. the sequence of function values {Œ®(ùë•ùëò)}ùëò‚àà‚Ñï is non-increasing. On the other hand, for a general reference point ùë¢ ‚àà dom ‚Ñé ‚à© ùñ∑, we also see that

ùëÅ ‚àí1	ùëÅ ‚àí1

0 ‚àà ùõæùúïùëü(ùë•+) + ùõæ‚àáùëì (ùë•) + ‚àá‚Ñé(ùë•+) ‚àí ‚àá‚Ñé(ùë•) + ùñ≠ùñ¢ùñ∑(ùë•+)
‚àë (Œ®(ùë•ùëò+1 ) ‚àí Œ®(ùë¢)) ‚â§ ‚àë  1 [ùê∑‚Ñé (ùë¢, ùë•ùëò ) ‚àí ùê∑‚Ñé (ùë¢, ùë•ùëò+1 )]

=	+	+
ùëò=0
ùëò=0 ùõæùëò

ùõæ(ùúïùëü + ùñ≠ùñ¢ùñ∑)(ùë• ) + ùõæ‚àáùëì (ùë•) + ‚àá‚Ñé(ùë• ) ‚àí ‚àá‚Ñé(ùë•).
+
=  1
ùê∑‚Ñé (ùë¢, ùë•0 ) ‚àí
 1  ùê∑‚Ñé (ùë¢, ùë•ùëÅ ) +
ùëÅ‚àë‚àí2 (  1 
1 )ùê∑‚Ñé (ùë¢, ùë•ùëò+1 ).

Whence, there exists ùúâ ‚àà ùúïùëü(ùë• ) such that, for all ùë¢ ‚àà ùñ∑,
ùõæ0
ùõæùëÅ ‚àí1
ùëò=0
ùõæùëò+1
ùõæùëò

‚ü®ùõæùúâ
+ ùõæ‚àáùëì (ùë•) + ‚àá‚Ñé(ùë•+) ‚àí ‚àá‚Ñé(ùë•), ùë•+ ‚àí ùë¢
‚â§ 0.	(3.10)
Assuming a constant step size policy ùõæùëò = ùõæ, this gives us




tain for all ùë¢ ‚àà ùñ∑:
ùëü(ùë•+) ‚àí ùëü(ùë¢) ‚â§ ‚àáùëì (ùë•), ùë¢ ‚àí ùë•+
+ 1 ‚àá‚Ñé(ùë•+) ‚àí ‚àá‚Ñé(ùë•), ùë¢ ‚àí ùë•+
.	(3.11)
ùëò=0
ùõæ  ‚Ñé
ùëò	ùëò
ùëò+1	ùëò
ùëò+1

‚ü®	‚ü©	ùõæ ‚ü®
Define the function gap ùë†
Œ®(ùë•ùëò)  0, and therefore
‚à∂= Œ®(ùë• ) ‚àí Œ®(ùë¢), then ùë†
‚Äì ùë†
= Œ®(ùë•	) ‚àí

For further analysis, we need the celebrated three-point identity, due to Chen and Teboulle (1993), whose simple proof we omit.
ùë†ùëÅ ‚â§  1
ùëÅ ‚àí1
ùë†ùëò+1 =  
ùëÅ ‚àí1
ùê∑‚Ñé (ùë¢, ùë• )

Lemma 3.3 (3-point lemma). For all ùë•, ùë¶ ‚àà ùñ∑‚ó¶ and ùëß ‚àà dom ‚Ñé we have
ùëÅ ùëò=0
ùëÅ ùëò=0
ùëÅùõæ

ùê∑ (ùëß, ùë•) ‚àí ùê∑ (ùëß, ùë¶) ‚àí ùê∑ (ùë¶, ùë•) = ‚àá‚Ñé(ùë•) ‚àí ‚àá‚Ñé(ùë¶), ùë¶ ‚àí ùëß .
for all ùë¢ ‚àà dom ‚Ñé ‚à© ùñ∑. As an attractive step size choice, we may take the

‚Ñé	‚Ñé	‚Ñé
‚ñ°
greedy choice ùõæ	 ùõº . However, we need to know the Lipschitz constant
ùêøùëì

Thanks to Lemma 3.3, relation (3.11) reads as
ùõæ(ùëü(ùë•+) ‚àí ùëü(ùë¢)) ‚â§ ùõæ ‚àáùëì (ùë•), ùë¢ ‚àí ùë•+ + ùê∑ (ùë¢, ùë•) ‚àí ùê∑ (ùë¢, ùë•+) ‚àí ùê∑ (ùë•+, ùë•)
of the gradient map of the smooth part ùëì of the minimization problem
(P) to make this an implementable solution strategy.
Proposition 3.4. Consider problem (P) with Assumptions 1-3 in place. Let

for all ùë¢ ‚àà dom ‚Ñé ‚à© ùñ∑.
ùõº
ùë•‚àó ‚àà ùñ∑‚àó, we have
ùëò	ùêøùëì

Remark 3.4. Note that if ùë•+ is calculated inexactly in the sense that instead of (3.10), for some ùúâ ‚àà ùúïùëü(ùë•+), it holds that
Œ®(ùë•ùëò) ‚àí Œ®min
(ùñ∑) ‚â§ ùêøùëì ùê∑ (ùë•‚àó, ùë•0).	(3.18)
ùõºùëò

‚àáùëì (ùë•) + ‚àá‚Ñé(ùë•+) ‚àí ‚àá‚Ñé(ùë•), ùë•+ ‚àí ùë¢
‚ü®ùõæùúâ  ùõæ
‚â§ Œî	(3.13)
This global sublinear rate of convergence for the Euclidean setting is due to Beck and Teboulle (2009b); Nesterov (2013).



ùõæ(ùëü(ùë•+) ‚àí ùëü(ùë¢)) ‚â§ ùõæ ‚àáùëì (ùë•), ùë¢ ‚àí ùë•+ + ùê∑ (ùë¢, ùë•) ‚àí ùê∑ (ùë¢, ùë•+) ‚àí ùê∑ (ùë•+, ùë•) + Œî.
strongly-convex with ùúá > 0 it is possible to obtain linear convergence
rate of BPGM, i.e. Œ®(ùë•ùëò) ‚àí Œ®  (ùñ∑)  2ùêø exp(‚àíùëòùúá‚àïùêø )ùê∑ (ùë•‚àó, ùë•0).

(3.14)
See Auslender and Teboulle (2006b) for an explicit analysis of the error-
min	ùëì
Subgradient and Mirror Descent
ùëì	‚Ñé

prone implementation.
Assumption 1(a) gives rise to the the classical ‚Äùdescent Lemma‚Äù (Nesterov, 2018b):
ùëì (ùë•+) ‚â§ ùëì (ùë•) + ‚àáùëì (ùë•), ùë•+ ‚àí ùë• + ùêøùëì  ùë•+ ‚àí ùë• 2.	(3.15)
2
Additionally, for all ùë¢ ‚àà ùñ∑, differential convexity of ùëì on ùñµ implies (cf.
(1.1))
ùëì (ùë¢) ‚â• ùëì (ùë•) + ‚àáùëì (ùë•), ùë¢ ‚àí ùë• .	(3.16)
This allows us to bound
ùëì (ùë•), ùë¢ ‚àí ùë•+ = ‚àáùëì (ùë•), ùë• ‚àí ùë•+ + ‚àáùëì (ùë•), ùë¢ ‚àí ùë•
In the previous subsections we focused on the setting of problem
(P) with smooth part ùëì and obtained for BPGM a convergence rate
ùëÇ(1‚àïùëò). The same method actually works for non-smooth convex op- timization problems when ùëì has bounded subgradients In this setting BPGM with a different choice of the step-size (ùõæùëò )ùëò is known as the Mir-
ror Descent (MD) method (Nemirovski and Yudin, 1983). A version of this method for convex composite non-smooth optimization was pro- posed in Duchi et al. (2010), and an overview of Subgradient/Mirror Descent type of methods for non-smooth problems can be found in Beck (2017); Dvurechensky et al. (2020b); Lan (2020). The main dif- ference between BPGM and MD is that one replaces the assumption that
‚àáùëì is Lipschitz continuous with the assumption that ùëì is subdifferen-
tiable with bounded subgradients, i.e. ùëì ‚Ä≤(ùë•)   ùëÄ  for all ùë• ‚àà ùñ∑ and

2 ‚Äñ	‚Äñ	‚ü®
‚ü©	next test point as

(3‚â§.16) ùëì (ùë¢) ‚àí ùëì (ùë•+) + ùêøùëì ùë•+ ‚àí ùë• 2
ùë•ùëò+1 = argmin {‚ü®ùõæ ùëì ‚Ä≤(ùë•ùëò), ùë¢ ‚àí ùë•ùëò‚ü© + ùõæ ùëü(ùë¢) + ùê∑ (ùë¢, ùë•ùëò)} = P ‚Ñé (ùë•ùëò, ùõæ ùëì ‚Ä≤(ùë•ùëò)).



policy like ùõæùëò ‚àº ùëò‚àí1‚àï2. Under such a specification, the MD sequence (ùë•ùëò)ùëò A typical choice for the step size sequence is a monotonically decreasing can be shown to converge with rate ùëÇ(1‚àï ùëò) to the solution, which
is optimal in this setting. A proof of this result can be patterned via a suitable adaption of the arguments employed in our analysis of the Dual Averaging Method in Section 3.4.

Potential Improvements due to relative smoothness
A key pillar of the complexity analysis of BPGM was the descent inequality (3.15), which is available thanks to the as-
sumed Lipschitz continuity of the gradient ‚àáùëì . The influential work
Bauschke et al. (2016) introduced a very clever construction which al-
lows one to relax this restrictive assumption.2 The elegant observation
The first important observation is an extended version of the fundamen- tal inequality (3.17), which reads as
ùõæ(Œ®(ùë•+) ‚àí Œ®(ùë¢)) ‚â§ ùê∑ (ùë¢, ùë•) ‚àí ùê∑ (ùë¢, ùë•+) ‚àí (1 ‚àí ùõæùêø‚Ñé )ùê∑ (ùë•+, ùë•) ‚àÄùë¢ ‚àà dom ‚Ñé ‚à© ùñ∑.	(3.21)
The derivation of this inequality is analogous to inequality (3.17), re- placing the Lipschitz-gradient-based descent inequality (3.15) by the
relative smoothness inequality (3.19) with parameter ùêø‚Ñé . The contin-
introduction of the symmetry coefficient of the DGF ‚Ñé as uation of the proof differs then in one important aspect. It relies on the
( ) ‚à∂= inf	ùê∑‚Ñé(ùë•, ùë¢) (	) ‚àà  ‚ó¶ √ó  ‚ó¶	‚â†
ùê∑‚Ñé(ùë¢, ùë•)
The symmetry coeÔ¨Écient ùúà(‚Ñé) is confined to the interval [0,1], and
ùúà(‚Ñé) = 1 applies essentially only to the energy function ‚Ñé(ùë•) = 1 ùë• 2.

made in Bauschke et al. (2016) is that the Lipschitz-gradient-based de- scent lemma has the equivalent, but insightful, expression
( ùêøùëì ‚Äñùë•‚Äñ2 ‚àí ùëì (ùë•)) ‚àí ( ùêøùëì ‚Äñùë¢‚Äñ2 ‚àí ùëì (ùë¢)) ‚â• ‚ü®ùêø ùë¢ ‚àí ‚àáùëì (ùë¢), ùë• ‚àí ùë¢‚ü©	‚àÄùë•, ùë¢ ‚àà ùñµ.
Choosing ùõæ
ùëò+1
= 1+ùúà(‚Ñé)
ùëì
, ùë•+ =


ùë•ùëò+1
ùëò
, ùë•
= ùë•


ùëò gives
ùëò+1
1 ‚àí ùúà(‚Ñé)

ùëò+1
2 ‚Äñ ‚Äñ

ùëò

This is just the gradient inequality for the convex function ùë• ‚Ü¶ ùêøùëì	2 ‚àí
Setting ùë¢ = ùë•ùëò gives descent of the function value sequence (Œ®(ùë•ùëò)) ‚â• .

ùëì (ùë•).
2 ‚Äñùë•‚Äñ
Moreover, it immediately follows that
ùëò 0

DÓà¥efinition 3.5. The family of functions ¬£(ùñ∑) is the class of DGFs ‚Ñé ‚àà
Œ®(ùë•ùëò) ‚àí Œ®(ùë¢) ‚â§ 	ùëì   (ùê∑ (ùë¢, ùë•ùëò‚àí1) ‚àí ùê∑ (ùë¢, ùë•ùëò))

0(ùñ∑) which are of Legendre type: ‚Ñé essentially smooth and strictly con-	1 + ùúà(‚Ñé)	‚Ñé	‚Ñé

vex on int dom ‚Ñé with cl(dom ‚Ñé) = ùñ∑.
In this section we work in a Bregman proximal setting with Legendre type distance generating function.
Summing from ùëò = 1, 2, ‚Ä¶ , ùëÅ , the same argument as for the BPGM give
sublinear convergence of NoLips
2ùêø‚Ñé

Assumption 4. ùñ∑ has nonempty interior and ‚Ñé ‚àà ¬£(ùñ∑).
Œ®(ùë•ùëÅ ) ‚àí Œ®(ùë¢) ‚â§
ùëì
ùëÅ (1 + ùúà(‚Ñé))
ùê∑‚Ñé(ùë¢, ùë•0).	(3.23)

Remark 3.6. For ‚Ñé ‚àà ¬£(ùñ∑), it is true that ùñ∑‚ó¶ ‚äÜ int(dom ‚Ñé) ‚à© ùñ∑.
Based on the general intuition we have gained while working with a general proximal setup, a very tempting and natural generalization is the following.
Definition  3.6  (Relative  Smoothness,  (Bauschke  et  al.,  2016;
Comparing the constants in the complexity estimates of NoLips and BPGM we see that the relative eÔ¨Éciency of the two methods depends on
2ùêø‚Ñé ‚àï(1+ùúà(‚Ñé))
the relative condition number	ùëì	 . Hence, even if the objective
ùêøùëì ‚àïùõº
function is globally Lipschitz smooth (i.e. admits a Lipschitz continu-
ous gradient), exploiting the idea of relative smoothness might lead to superior performance of NoLips.

Van Nguyen, 2017)). The function ùëì is smooth relative to ‚Ñé ‚àà ¬£(ùñ∑), if
To establish global convergence of the trajectory (ùë•ùëò)
ùëò‚àà‚Ñï
, additional

there exists ùêø‚Ñé > 0 such that for any ùë•, ùë¢ ‚àà ùñ∑‚ó¶
ùëì (ùë¢) ‚â§ ùëì (ùë•) + ‚àáùëì (ùë•), ùë¢ ‚àí ùë• + ùêø‚Ñé ùê∑ (ùë¢, ùë•).	(3.19)
‚Äùreciprocity‚Äù conditions on the Bregman divergence must be imposed.
Assumption 6. The DGF ‚Ñé ‚àà ¬£(ùñ∑) satisfies the Bregman reciprocity con-

ùëì  ‚Ñé
Rearranging terms, a very concise and elegant way of writing the
dition: The level sets {ùë¢ ‚àà ùñ∑‚ó¶ ùê∑ (ùë¢, ùë•) ‚â§ ùõΩ} are bounded for all ùõΩ ‚àà ‚Ñù,
and ùë•ùëò ‚Üí ùë• ‚àà ùñ∑‚ó¶ if and only if limùëò‚Üí‚àû ùê∑‚Ñé(ùë•, ùë•ùëò) = 0.

relative smoothness condition is ùê∑ùêø‚Ñé ‚Ñé ùëì
ùëì
(ùë¢, ùë•) ‚â• 0 on ùñ∑‚ó¶. This amounts

This assumption is necessary, as in some settings Bregman reci-

to saying that ùêø‚Ñé ‚Ñé ‚àí ùëì is convex on ùñ∑‚ó¶. Clearly, if ùëì and ‚Ñé are twice
ùëì	‚ó¶	procity is violated. See Example 4.1 in Doljansky and Teboulle (1998) as

continuously differentiable on ùñ∑ , the relative smoothness condition can be stated in terms of a positive semi-definitness condition on the set ùñ∑‚ó¶ as
ùêø‚Ñé ‚àá2‚Ñé(ùë•) ‚àí ‚àá2ùëì (ùë•) ‚™∞ 0   ‚àÄùë• ‚àà ùñ∑‚ó¶.	(3.20)
Beside providing a non-Euclidean version of the descent lemma, the no- tion of relative smoothness allows us to rigorously apply gradient meth- ods to problems whose smooth part admits no global Lipschitz continu- ous gradient. This gains relevance in solving various classes of inverse problems under Poisson noise (see Section 5.2 in Bauschke et al. (2016)), and optimal experimental design (Lu et al., 2018), a class of problems structurally equivalent to finding the minimum volume ellipsoid con- taining a list of vectors (Boyd and Vandenberghe, 2004; Todd, 2016).
Assumption 5. There exists a DGF ‚Ñé ‚àà ¬£(ùñ∑) for which (ùëì, ‚Ñé) is a rela-
a simple illustration. Under Bregman reciprocity, one can prove global convergence in the spirit of Opial‚Äôs lemma (Opial, 1967):

1-6 hold. Let (ùë•ùëò)ùëò‚àà‚Ñï be the sequence generated by BPGM with the relatively Theorem 3.7 (Bauschke et al. (2016), Theorem 2). Suppose Assumptions smooth pair ùëì, ‚Ñé with ùõæ  , 1+ùúà(‚Ñé) and ‚Ñé  ùñ∑ . Then, the sequence
ùêø‚Ñé
ùëì
(ùë•ùëò)ùëò‚àà‚Ñï converges to some solution ùë•‚àó ‚àà ùñ∑‚àó.
Under additional assumption that ùëì is ùúá‚Ñé -relatively strongly convex (Lu et al., 2018) with ùúá‚Ñé > 0, i.e. (cf. (3.20))
‚àá2ùëì (ùë•) ‚àí ùúá‚Ñé ‚àá2‚Ñé(ùë•) ‚™∞ 0   ‚àÄùë• ‚àà ùñ∑‚ó¶,	(3.24)
it is possible to obtain linear convergence rate of BPGM, i.e.
Œ®(ùë•ùëò) ‚àí Œ®min(ùñ∑)  2ùêø‚Ñé exp(‚àíùëòùúá‚Ñé ‚àïùêø‚Ñé )ùê∑‚Ñé(ùë•‚àó, ùë•0). Stonyakin et al. (2020,

ùëì	ùëì	ùëì

tively smooth pair.

assumption on the pair (ùëì, ‚Ñé) (the so called NoLips algorithm of The complexity analysis of BPGM under a relative smoothness
Bauschke et al. (2016)), proceeds analogous to the previous analysis.

2 Variations on the same theme can be found in Lu et al. (2018) and further de- velopments can be found in B√πi and Combettes (2021); Stonyakin et al. (2020).
2019) show how to adapt the method to cope with inexact oracles and inexact Bregman proximal steps.

Dual Averaging

An alternative method called Dual Averaging (DA) was proposed in Nesterov (2009) and, on the contrary, is a primal-dual method making alternating updates in the space of gradients and in the space of iterates.



Below we give a self-contained complexity analysis of this scheme for
Rearranging and summing over ùëò = 1, 2, ‚Ä¶ , ùëÅ , we get

non-smooth optimization. The following assumptions shall be in place:
Assumption 7. ùñ∑ is a nonempty convex compact set.
Assumption 8. ùëü = 0 and ùëì ‚àà Œì0(ùñµ) with ùñ∑ ‚äÇ dom(ùëì ). Furthermore,
ùëÅ
ùëò	ùêª
ùëò=1
Observe
ùõΩ1
(ùë¶1) ‚àí ùêª
ùõΩùëÅ +1
ùëÅ
(ùë¶ùëò+1) +
ùëò=1
2
ùëò
2ùõºùõΩùëò
‚Äñùëì ùë• ‚Äñ‚àó

sup
ùë•‚ààùñ∑ ‚Äñùëì
‚â§ ùëÄ
for all ùëì ‚Ä≤(ùë•) ‚àà ùúïùëì (ùë•) and some ùëÄùëì
‚àà (0, +‚àû).
ùêª (ùë¶1) = ùêª (‚àíùúÜ ùëì ‚Ä≤(ùë•0)) ‚â§ ùêª (0) + ‚àáùêª (0), ‚àíùúÜ ùëì ‚Ä≤(ùë•0) +  0  ùëì ‚Ä≤(ùë•0) 2
2

0  ùõº	= ùúÜ0
‚Ä≤(ùë•0) 2 ‚â§  ùúÜ0
‚Ä≤(ùë•0) 2 .

‚Ñé-center ùë• = argminùë•‚ààùñ∑ ‚Ñé(ùë•). Without loss of generality with assume
2ùõºùõΩ ‚Äñùëì
‚Äñ‚àó  2ùõºùõΩ ‚Äñùëì	‚Äñ‚àó

‚Ñé(ùë•0) = 0. Denote by
Œò‚Ñé(ùñ∑) ‚à∂= max ‚Ñé(ùëù).	(3.25)
1
Therefore,
ùëÅ
0
ùëÅ	2

ùëù‚ààùñ∑
‚àë ùúÜ ‚ü®ùëì ‚Ä≤(ùë•ùëò), ùë•ùëò ‚àí ùë•0‚ü© ‚â§  1 ‚àë ùúÜùëò ‚Äñùëì ‚Ä≤(ùë•ùëò)‚Äñ2 ‚àí ùêª
(ùë¶ùëÅ+1).	(3.30)

function
(‚àÄùë¶ ‚àà ùñµ‚àó) ‚à∂ ùëî(ùë¶) = max ùë¶, ùë• ‚àí ùë•0 ,	(3.26)
Note that
‚àëùëÅ
‚àëùëÅ
‚àëùëÅ


and
ùëò=0
ùëò‚ü®	ùë•
ùëò=0
‚àëùëÅ
ùëò‚ü®
‚ü©  ùëò=0
ùëò‚ü®	‚ü©

ùõΩ	ùë•‚ààùñ∑ ‚ü®	‚ü©
ùëò‚ü®
‚ü©  ‚ü®	‚ü©

Also, observe that for ùõΩ2
‚â• ùõΩ1
> 0, it holds ùêªùõΩ
(ùë¶) ‚â§ ùêª
(ùë¶) for all ùë¶ ‚àà ùñµ‚àó.	ùëÅ
ùëÅ  2

2	1	‚àë ùúÜ ‚ü®ùëì ‚Ä≤(ùë•ùëò), ùë•ùëò ‚àí ùë•‚ü© ‚â§  1 ‚àë ùúÜùëò ‚Äñùëì ‚Ä≤(ùë•ùëò)‚Äñ2 ‚àí ùêª

(ùë¶ùëÅ+1) + ùë¶ùëÅ+1, ùë• ‚àí ùë•0	(3.31)

ùõº
ùêª (ùë¶) = max{ ùë¶, ùë• ‚àí (‚Ñé + ùõø )(ùë•)} ‚àí ùë¶, ùë•0
for all ùë• ‚àà ùñ∑. Defining ùúÉùëò
‚à∂= max
ùë•‚ààùñ∑
ùëò
ùëñ=0
ùúÜ	‚Ä≤( ùëñ ), ùë•ùëñ ‚àí ùë• , (3.31) gives

ùõΩ	ùë•‚ààùñµ ‚ü®	‚ü©
ùñ∑	‚ü®	‚ü©
the estimate

= ùõΩ(‚Ñé + ùõø ) (ùë¶‚àïùõΩ) ‚àí ùë¶, ùë•


ùúÉ  ‚â§  1 ‚àë ùúÜùëò ‚Äñùëì ‚Ä≤(ùë•ùëò)‚Äñ2 ‚àí ùêª	(ùë¶ùëÅ+1) + ùëî(ùë¶ùëÅ+1).

ùëÑùõΩ (ùë¶) ‚à∂= argmax { ùë¶, ùë• ‚àí ùõΩ‚Ñé(ùë•)}.	(3.28)
ùë•‚ààùñ∑
A simple application of the min-max inequality shows
ùëî(ùë¶) = max ùë¶, ùë• ‚àí ùë•0

(‚àÄùë¶ ‚àà ùñµ‚àó) ‚à∂ ‚àáùêªùõΩ (ùë¶) = ùëÑùõΩ (ùë¶) ‚àí ùë•0.
ùë•‚ààùñ∑ ùõΩ‚â•0 ‚ü®	‚ü©	‚Ñé

1	‚â§ min [(max{‚ü®ùë¶, ùë• ‚àí ùë•0‚ü© ‚àí ùõΩ‚Ñé(ùë•)) + ùõΩŒò‚Ñé(ùñ∑)]



DA performs a gradient step in the dual space ùñµ‚àó to produce a new gradi- ent feedback point ùë¶+ = ùë¶ ‚àí ùúÜùëì ‚Ä≤(ùë•), where ùúÜ > 0 is a step size parameter.
for all ùë¶ ‚àà ùñµ‚àó and ùõΩ > 0. Hence, (3.31) gives

Taking this as a new signal, we update the primal state by applying the


ùúÉ  ‚â§
 1 ‚àë ùúÜùëñ ‚Äñ ‚Ä≤
ùëò  2

		Define ŒõùëÅ ‚à∂= ‚àëùëÅ
ùúÜùëò , and the ergodic average ùë•ÃÑùëÅ ‚à∂= 1
ùëÅ
ùëÅ
ùëò=0
ùúÜùëò ùë•ùëò.

The Dual Averaging method (DA)
The subgradient inequality (1.1) applied to ùëì gives

Input: pick ùë¶0 = 0, ùë•0 = ùëÑùõΩ (0), nondecreasing learning sequence	ùëÅ	ùëÅ

(ùõΩ )
0
(ùúÜ )
‚àë ùúÜ ‚ü®ùëì ‚Ä≤(ùë•ùëò), ùë•ùëò ‚àí ùë•‚ü© ‚â• ‚àë ùúÜ ùëì (ùë•ùëò) ‚àí Œõ


ùëì (ùë•) ‚â• Œõ
(ùëì (ùë•ÃÑ
) ‚àí ùëì (ùë•)).

set ùë•ùëò+1 = ùëÑùõΩ  (ùë¶ùëò+1).
ùëÅ	2

	ùëò+1	
Œ®(ùë•ÃÑ
) ‚àí Œ®
(ùñ∑) ‚â§ ùõΩùëÅ +1 Œò (ùñ∑) +   1   ‚àë ùúÜùëò ‚Äñ
‚Ä≤( ùëò ) 2

The function ùë¶ ‚Ü¶ ùêª (ùë¶) is convex and ‚àöcontinuously differentiable
Let us now make the concrete choice of parameters ùõΩùëò = ùõΩ > 0 and ùúÜùëò =
‚àöùëò+1 for all ùëò  0. Then,

with
ùêª (ùë¶ + ùë§) ‚â§ ùêª (ùë¶) + ‚àáùêª (ùë¶), ùë§ +  1
ùë§ 2
‚àÄùë¶, ùë§ ‚àà ùñµ‚àó.	(3.29)
ùëÅ
ùëÅ	‚àö
‚â•	ùëÅ +1	1
‚àö
ùëëùë• ‚â• ‚àöùëÅ + 1,

ùõΩ	ùõΩ
‚ü®	ùõΩ
‚ü©	2ùõºùõΩ ‚Äñ ‚Äñ‚àó
ùëò=0
ùëò + 1	0
ùë• + 1

Thanks to the monotonicity in the parameters, we get through some elementary manipulations the relation


as well as
‚àë ùúÜùëò = 1 ‚àë  1  ‚â§ 1 + ln(ùëÅ + 1) .

‚â§	(	‚àá	(  ) ‚àí	(  ) + ùúÜ2	(  )
Theorem 3.8. Suppose Assumptions 3, 7 and Assumption 8 hold true. Let

ùõΩùëò
‚ü® ùêªùõΩùëò ùë¶ ,
ùúÜùëò ùëì ùë• ‚ü©
2ùõºùõΩ ‚Äñùëì ùë• ‚Äñ‚àó
(ùë• )ùëò be generated by DA with parameters ùõΩùëò = ùõΩ > 0 and ùúÜùëò = ‚àöùëò+1 . Then,

= ùêª
(ùë¶ùëò) ‚àí ùúÜ
ùúÜ2
ùë•ùëò ‚àí ùë•0, ùëì ‚Ä≤(ùë•ùëò) +	ùëò 
ùëì ‚Ä≤(ùë•ùëò) 2 .
‚â§  ùõΩŒò‚Ñé(ùñ∑)
ùëÄ 2 (1 + ln(ùëÅ + 1))

ùõΩùëò
ùëò‚ü®
‚ü©	2ùõºùõΩùëò ‚Äñ	‚Äñ‚àó
Œ®(ùë•ÃÑùëÅ ) ‚àí Œ®min(ùñ∑)
‚àöùëÅ + 1
2ùõºùõΩ
‚àöùëÅ + 1
(3.32)



fixed time window ùëò ‚àà {0, 1, ‚Ä¶ , ùëÅ }. Committing over this time interval A slightly better bound can be obtained if we decide to run DA over a on the constant parameter sequences ùõΩùëò = ùõΩ > 0 and ùúÜùëò = ùúÜ > 0 yields
 Œò ( )		
Assuming that the penalty function ‚Ñé is of Legendre type, the primal
projection step is seen to be the regularized maximization step
ùë•ùëò = argmax{ ùë¶ùëò, ùë¢ ‚àí ùõΩ ‚Ñé(ùë¢)} ‚áî ùë¶ùëò = ùõΩ ‚àá‚Ñé(ùë•ùëò).

ùëÅ	min
(ùëÅ + 1)ùúÜ
2ùõº ùõΩ ùëÄùëì .
ùõΩ ‚àö 2ùõºŒò (ùñ∑)
Using the definition of the dual trajectory, we see that for all ùëò ‚â• 0 the
primal-dual relation obeys:



the complexity upper bound
‚àö  2Œò ( )
Assuming that ùõΩùëò
‚â° 1, this implies

Œ®(ùë•ÃÑùëÅ ) ‚àí Œ®min(ùñ∑)
ùõº(ùëÅ + 1) ùëÄùëì .
ùë¢‚ààùñ∑
‚ü® ùëò
‚ü©	‚Ñé	ùõøùñ∑	ùëò

The eÔ¨Äectiveness of non-Euclidean setups With the help of the explicit rate estimate (3.32) we are now in the position to evaluate the potential
We will do so by focusing on the geometry ùñ∑ = {ùë• ‚àà ‚Ñùùëõ	ùë•ùëñ = 1}. eÔ¨Éciency gains we can make by adopting the non-Euclidean framework.


We have thus shown that DA and BPGM/MD agree if all parameters and initial conditions are chosen in the same way.

3.4.2. Links to continuous-time dynamical systems




Consider the ùìÅ setup in which	‚ãÖ  =  ‚ãÖ	and ‚Ñé(ùë•) = 1 ùë• 2 ‚àí
in the literature (see e.g. Helmke and Moore (1996) for a textbook

2
1	0
‚Äñ 0‚Äñ  ‚Äñ ‚Äñ2	2 ‚Äñ ‚Äñ2
reference). Here we describe an interesting link between dual av-

Œò‚Ñé(ùñ∑) = ùëõ‚àí1 . We denote by ùëÄùëì, ‚ãÖ
the bound on the subgradients

2ùëõ
‚Äñ ‚Äñ2
duced in Alvarez et al. (2004); Attouch et al. (2004); Attouch and

of the function ùëì under the ùìÅ2-norm. The corresponding complexity
estimate is
Teboulle (2004) and further studied in Bolte and Teboulle (2003). A complexity analysis of discretized versions of these gradient flows

Complexity(ùñ∑, ‚Äñ ‚ãÖ ‚Äñ2) = ‚àö (ùëõ ‚àí 1)‚àïùëõ ùëÄ
ùëì,‚Äñ‚ãÖ‚Äñ2
has recently been obtained in Bomze et al. (2019). Our point of departure is the following continuous-time dynamical system based on dual averaging, which has been introduced in Mertikopoulos and

A different sensible projection framework is obtained by consider the
ùìÅ1 -norm  ‚ãÖ	1	ùëñ	ùëñ
diameter is Œò‚Ñé(ùñ∑) = ln(ùëõ). We let ùëÄùëì, ‚ãÖ	denote the bound on the
Staudigl (2018a) in the context of convex programming and in Mertikopoulos and Staudigl (2018b) for general monotone variational inequality problems. The main ingredient of this dynamical system is a

subgradients of the function ùëì
‚àû
under the dual norm
ùìÅ‚àû
. The corre-
pair of primal-dual trajectories (ùë•(ùë°), ùë¶(ùë°))ùë°‚â•0 evolving in continuous time

sponding complexity estimate is
‚àö 2 ln(ùëõ)
according to the differential-projection system
{ùë¶‚Ä≤(ùë°) ‚à∂= ùëëùë¶(ùë°) = ‚àíùúÜ(ùë°)‚àáùëì (ùë•(ùë°)),

Complexity(ùñ∑,
‚ãÖ ‚Äñ1
ùõº(ùëÅ + 1)
ùëì,‚Äñ‚ãÖ‚Äñ‚àû
ùëëùë°
ùë•(ùë°) = ùëÑ1(ùúÇ(ùë°)ùë¶(ùë°)) =‚à∂ ùëÑ(ùúÇ(ùë°)ùë¶(ùë°)).
(3.34)

To compare the complexity estimates implied by the two different Bregman setups, we compute the eÔ¨Éciency ratio
Complexity(ùñ∑, ‚ãÖ )	‚àö	‚Äñ ‚Äñ
In this formulation, Assumption 1(a) is in place, in order to ensure that the dynamical system is well-posed, thanks to the Picard-Lindel√∂f theorem. To relate this scheme formally to its discrete-time counter-

Complexity(ùñ∑,
‚ãÖ ‚Äñ1
2ùëõ ln(ùëõ) ùëÄ
ùëì,‚Äñ‚ãÖ‚Äñ‚àû
by ùë¶ùëò
‚Äì ùë¶
ùëò‚àí1
= ‚àíùúÜùëò ‚àáùëì (ùë•ùëò), and project the resulting point to the pri-

ùëé ‚àû	2
This implies
‚â§ ‚àöùëõ‚Äñùëé‚Äñ‚àû
ùëÄùëì, ‚ãÖ
ùëé  ‚Ñù
ùëÄùëì, ‚ãÖ
‚â§ ‚àöùëõ.
discrete-time learning rate appropriately sampled from the function ùúÇ(ùë°).
Legendre   function   ‚Ñé   ‚àà        (ùñ∑),   so   that As in Section 3.4.1, let us assume that the mirror map is generated by a

ùëõ ‚àí 1 2ùëõ ln(ùëõ)
‚â§	‚â§		ùëõ ‚àí 1 2 ln(ùëõ)
ùë•(ùë°) = ‚àá‚Ñé‚àó(ùúÇ(ùë°)ùë¶(ùë°)).
Let us further assume that ‚Ñé is twice continuously differentiable and

The closer the eÔ¨Éciency ratio ùëÖ gets to the upper bound, the more fa- vorable the ùìÅ1-setup would be compared to the standard ùìÅ2-setup. This
imentally verify the significant advantages of the ùìÅ1 setup for large- is not an unrealistic situation in practice. Ben-Tal et al. (2001) exper-
dimensional simplex domains.

On the connection between Dual Averaging and Mirror Descent
A deep and important connection between the Dual Averaging and Mirror Descent algorithms for convex non-smooth optimization has been observed in Beck and Teboulle (2003). To relate these iterates to BPGM,
we assume that ‚Ñé ‚àà  (ùñ∑), in the sense of Definition 3.5. Let us recall
that ‚Ñé is essentially smooth if and only if its Fenchel conjugate ‚Ñé‚àó is es- sentially smooth. Moreover, ‚àá‚Ñé ‚à∂ int(dom ‚Ñé) ‚Üí int(dom ‚Ñé‚àó) is a bijection
with
(‚àá‚Ñé)‚àí1 = ‚àá‚Ñé‚àó and ‚àá‚Ñé‚àó(‚àá‚Ñé(ùë•)) = ùë•, ‚àá‚Ñé(ùë•) ‚àí ‚Ñé(ùë•)	(3.33)
Since ùñ∑ = cl(dom ‚Ñé), it follows
dom ùúï‚Ñé = int(dom ‚Ñé) = int(ùñ∑) with ùúï‚Ñé(ùë•) = {‚àá‚Ñé(ùë•)}  ‚àÄùë• ‚àà int(ùñ∑).
ùúÇ(ùë°) ‚â° 1. Differentiating the previous equation with respect to time ùë°
gives
ùë•‚Ä≤(ùë°) = ‚àá2 ‚Ñé‚àó(ùë¶(ùë°))ùë¶‚Ä≤(ùë°) = ‚àíùúÜ(ùë°)‚àá2 ‚Ñé‚àó(ùë¶(ùë°))‚àáùëì (ùë•(ùë°)).
ing ‚àá‚Ñé‚àó(‚àá‚Ñé(ùë•)) = ùë• for all ùë• ‚àà int dom ‚Ñé (cf. (3.33)). Differentiating im- To make headway, recall the basic properties of Legendre function say- plicitly this identity, we obtain ‚àá2 ‚Ñé‚àó(‚àá‚Ñé(ùë•))  Id, or
‚àá2 ‚Ñé‚àó(‚àá‚Ñé(ùë•)) = [‚àá2 ‚Ñé(ùë•)]‚àí1 =‚à∂ ùêª (ùë•)‚àí1 .	(3.35)
As in Section 3.4.1, it holds true that ùë¶(ùë°) = ‚àá‚Ñé(ùë•(ùë°)) for all ùë° ‚â• 0, we
therefore obtain the interesting characterization of the primal trajectory
as
ùë•‚Ä≤(ùë°) = ‚àíùúÜ(ùë°)ùêª (ùë•(ùë°))‚àí1 ‚àáùëì (ùë•(ùë°)).
If ùñ∑ is a smooth manifold, we can define a Riemannian metric
ùëî (ùë¢, ùë£) ‚à∂= ùêª (ùë•)ùë¢, ùë£	‚àÄ(ùë•, ùë¢, ùë£) ‚àà ùñ∑‚ó¶ √ó ùñµ √ó ùñµ.
The gradient of a smooth function ùúô with respect to the metric ùëî is then given by ‚àáùëî ùúô(ùë•) = ùêª (ùë•)‚àí1 ‚àáùúô(ùë•). Hence, the continuous-time version of



the dual averaging method gives rise the class of primal Riemannian- Hessian gradient flows
ùë•‚Ä≤(ùë°) + ùúÜ(ùë°)‚àáùëî ùëì (ùë•(ùë°)) = 0,  ùë•(0) ‚àà ùñ∑‚ó¶.	(3.36)
for a given bounded linear operator ùêÄ. To streamline the presentation, we directly assume in this section that ùñµ = ùñµ‚àó = ‚Ñùùëõ, and the underly- ing metric structure is generated by the Euclidean norm ùëé   ùëé  =


literature in connection with Nesterov‚Äôs optimal method, which we will thoroughly discuss in Section 6. As an appetizer, consider the system of differential equations
ùë¶‚Ä≤(ùë°) = ‚àíùúÜ(ùë°)‚àáùëì (ùë•(ùë°)),  ùë•‚Ä≤(ùë°) = ùõæ(ùë°)[ùëÑ(ùúÇ(ùë°)ùë¶(ùë°)) ‚àí ùë•(ùë°)].	(3.37)
problem can be equivalently written as
inf {Œ¶(ùë•, ùëß) = ùëî(ùëß) + ùëü(ùë•) ùêÄùë• ‚àí ùëß = 0, ùë• ‚àà ùñ∑, ùëß ‚àà ùñπ},	(4.1)
where ùñ∑ = ‚Ñùùëõ and ùñπ = ‚Ñùùëö. We will call this the primal problem. The
Lagrangian associated to (4.1) is
ùêø(ùë•, ùëß, ùë¶) = ùëî(ùëß) + ùëü(ùë•) + ùë¶, ùêÄùë• ‚àí ùëß ,

Suppose that in (3.37) we take ùëÑ(ùë¶) = ùë¶, ùúÇ(ùë°) = 1. This corresponds to the	‚ü®	‚ü©

2 ‚Äñ ‚Äñ2	ùñ∑
where ùë¶ ‚àà ‚Ñù is the Lagrange multiplier associated with the linear con-

Under this specification, the dynamical system (3.37) becomes
ùë¶‚Ä≤(ùë°) = ‚àíùúÜ(ùë°)‚àáùëì (ùë•(ùë°)),  ùë•‚Ä≤(ùë°) = ùõæ(ùë°)[ùë¶(ùë°) ‚àí ùë•(ùë°)].
straint. The dual function is accordingly defined as
ùëû(ùë¶) = inf ùêø(ùë•, ùëß, ùë¶) = inf {ùëî(ùëß) ‚àí ùë¶, ùëß } + inf {ùëü(ùë•) + ùêÄùë•, ùë¶ }

Combining the primal and the dual trajectory, we easily derive a purely primal second-order in time dynamical system given by
ùë•,ùëß
ùëß  ‚ü®	‚ü©
ùëß	‚ü®	‚ü©	ùë•	‚ü®	‚ü©
ùë•  ‚ü®	‚ü©

‚Ä≤‚Ä≤	‚Ä≤
( ùõæ(ùë°)2 ‚àí ùõæ‚Ä≤(ùë°) )
= ‚àíùëî‚àó(ùë¶) ‚àí ùëü‚àó(‚àíùêÄ‚ä§ùë¶).

Setting ùõæ(ùë°) = ùõΩ‚àïùë° and ùúÜ(ùë°) = 1‚àïùõæ(ùë°) and rearranging gives

ùë•‚Ä≤‚Ä≤(ùë°) +
ùõΩ + 1
ùë°
ùë•‚Ä≤(ùë°) + ‚àáùëì (ùë•(ùë°)) = 0,
min{Œ®ÃÉ (ùë¶) = ùëî‚àó(ùë¶) + ùëü‚àó(‚àíùêÄ‚ä§ùë¶)}	(4.2)
ùë¶

method of Polyak Polyak (1964). For ùõΩ = 2 this gives the continuous- which corresponds to the continuous-time version of the Heavy-ball
time formulation of Nesterov‚Äôs accelerated scheme, as shown by Su et al. (2016).
More generally, suppose that ‚Ñé is a twice continuously differentiable
Legendre function and ùúÇ(ùë°)  1. Then a direct calculation shows that
ùë•‚Ä≤‚Ä≤(ùë°) + (ùõæ(ùë°) ‚àí ùõæ‚Ä≤(ùë°) )ùë•‚Ä≤(ùë°) + ùõæ(ùë°)ùúÜ(ùë°)(‚àá2 ‚Ñé)‚àí1 (ùëÑ(ùë¶(ùë°)))‚àáùëì (ùë•(ùë°)) = 0.
Using the identity (3.35), as well as ùë•‚Ä≤(ùë°) + ùë•(ùë°) = ‚àá‚Ñé‚àó(ùë¶(ùë°)), it follows
that
A classical implicit method for solving this minimization problem is the
proximal point method:
ùë¶ùëò+1 ‚àà argmin{Œ®ÃÉ (ùë¶) +  1 ùë¶ ‚àí ùë¶ùëò 2}	(4.3)
ùë¶	2ùëê
where ùëê > 0 is a regularization parameter controlling the effects of the quadratic penalty term. By Fermat‚Äôs optimality condition, the point ùë¶ùëò+1
satisfied the monotone inclusion
0 ‚àà ùúïùëî‚àó(ùë¶ùëò+1) ‚àí ùêÄùúïùëü‚àó(‚àíùêÄ‚ä§ùë¶ùëò+1) + 1 (ùë¶ùëò+1 ‚àí ùë¶ùëò).
ùëê
This means that there exists ùë•ùëò+1 ‚àà ùúïùëü‚àó(‚àíùêÄ‚ä§ùë¶ùëò+1) and ùëßùëò+1 ‚àà ùúïùëî‚àó(ùë¶ùëò+1)
such that

‚àá2 ‚Ñé(ùë•(ùë°) + ùë•‚Ä≤(ùë°) )( ùë•‚Ä≤‚Ä≤(ùë°) + (1 ‚àí ùõæ‚Ä≤(ùë°) )ùë•‚Ä≤(ùë°)) = ‚àíùúÜ(ùë°)‚àáùëì (ùë•(ùë°)) ‚áî ùëë ‚àá‚Ñé(ùë•(ùë°) + ùë•‚Ä≤(ùë°) )
+1	+1	1	+1

ùõæ(ùë°)
ùõæ(ùë°)
ùõæ(ùë°)2
ùëëùë°
ùõæ(ùë°)
0 = ùëßùëò
‚Äì ùêÄùë•ùëò
+  (ùë¶ùëò
ùëê
‚Äì ùë¶ùëò).

= ‚àíùúÜ(ùë°)‚àáùëì (ùë•(ùë°)).
This shows that for ùúÇ ‚â° 1, the dynamic coincides with the Lagrangian
family of second-order systems constructed in Wibisono et al. (2016).
This means that the proximal point method can be implemented for the given instance as the implicit method
ùë•ùëò+1 ‚àà argmin{ùëü(ùë•) + ùêÄùë•, ùë¶ùëò+1 },

These ideas are now investigated heavily when combined with numer- ical discretization schemes for dynamical system with the hope to get insights how to construct new and more eÔ¨Écient algorithmic formula-
ùë•
ùëßùëò+1 ‚àà argmin{ùëî(ùëß) +
ùëß
‚Äì ùëß, ùë¶ùëò+1‚ü© }
‚ü©

tion of gradient-methods. This literature grew quite fastly over the last years, and we mention (Attouch et al., 2020; 2018; Bah et al., 2019; Shi et al., 2019).
The Proximal Method of Multipliers and ADMM

In this section we turn our attention to a classical method for solv- ing linearly constrained optimization problems building on the classi- cal idea of the celebrated method of multipliers. An extremely powerful proponent of this class of algorithms is the Alternating Direction Method of Multipliers (ADMM), which has received enormous interest from dif- ferent directions, including PDEs (Attouch et al., 2011; 2007), mixed- integer programming (Feizollahi et al., 2017), optimal control (Lin et al., 2012) and signal processing (Yang and Zhang, 2011; Yuan, 2012). The very influential monograph (Boyd et al., 2011) contains over 180 refer- ences, reflecting the deep impact of alternating methods on optimization theory and its applications. Following the general spirit of this survey, we introduce alternating direction methods in a proximal framework,
ùë¶ùëò+1 = ùë¶ùëò + ùëê(ùêÄùë•ùëò+1 ‚àí ùëßùëò+1).
erates ùë•ùëò+1, ùëßùëò+1, ùë¶ùëò+1 simultaneously. Of course, this does not give rise This defines a fully implicit iteration, which requires to compute the it-
to a practical algorithm. The main idea behind alternating methods is to organize the computations in a Gauss-Seidel kind of iterations in which the sequences are updated sequentially using the most recent informa-
tion available. To set the stage, observe that (ùë•ùëò+1, ùëßùëò+1) defined above
is the coordinate-wise minimum of the function
ùêπ (ùë•, ùëß, ùë¶ùëò) = ùëî(ùëß) + ùëü(ùë•) + ùëê ùêÄùë• ‚àí ùëß + 1 ùë¶ùëò 2.
2	ùëê
In that sense, the proximal point method applied to the dual can be represented more compactly as
(ùë•ùëò+1, ùëßùëò+1) ‚àà argmin ùêπ (ùë•, ùëß, ùë¶ùëò), ùë¶ùëò+1 = ùë¶ùëò + ùëê(ùêÄùë•ùëò+1 ‚àí ùëßùëò+1).
(ùë•,ùëß)
This scheme is known as the augmented Lagrangian method.
Observe that minimizers of the function ùêπ (ùë•, ùëß, ùë¶ùëò) with respect to
(ùë•, ùëß) agree with the minimizers of the function

as pioneered by Rockafellar Rockafellar (1976a,b), and due to Shefi and
ùêø (ùë•, ùëß, ùë¶ùëò) = ùëî(ùëß) + ùëü(ùë•) + ùëê
ùêÄùë• ‚àí ùëß + 1 ùë¶ùëò 2,

Teboulle (2014). See also Banert et al. (2021) for some further important	ùëê
2 ‚Äñ	ùëê  ‚Äñ

elaborations.
To set the stage, consider the composite convex optimization prob- lem (P), in its special form (2.7):
Œ®(ùë•) = ùëî(ùêÄùë•) + ùëü(ùë•),
which is known as the augmented Lagrangian of problem (4.1). Using the augmented Lagrangian, an alternating minimization procedure build- ing on the proximal point idea gives rise to the celebrated Alternating Direction of Method of Multipliers (ADMM).




Input: pick (ùëß0, ùë¶0) ‚àà ùñπ √ó ‚Ñùùëö and penalty parameter ùëê > 0; The Alternating Direction of Method of Multipliers (ADMM) General step: For ùëò = 0, 1, ‚Ä¶ do:
The coupling between primal and dual variables reads as
ùë¶ùëò+1 = ùë¢ùëò+1 ‚àí ùëêùëßùëò+1 .
Combining all these relations, we can write the dual minimization prob-

ùë•ùëò+1
= argminùë•‚ààùñ∑{ùëü(ùë•) +
ùêÄùë• ‚àí ùëßùëò +
1 ùë¶
ùëò 2
}	(4.4)
lem as
ùëò+1
ùëê	ùëò
1 ùëò 2

ùëßùëò+1
= argmin
{ùëî(ùëß) +
2
ùëê ùêÄùë•
ùëò+1
ùëê
‚Äì ùëß +
2
1 ùë¶ùëò 2
}	(4.5)
ùë•	= argmin{ùëü(ùë•) +	ùêÄùë• ‚àí ùëß
ùë•	2
+  ùë¶	},
ùëê

ùëß‚ààùñπ	2 ‚Äñ
ùëê  ‚Äñ2
ùëßùëò+1 = argmin{ùëî(ùëß) + ùëê ùêÄùë•ùëò+1 ‚àí ùëß + 1 ùë¶ùëò 2},



Remark 4.1.  ADMM updates the decision variables in a sequential man-
trix ùêÄ is of special structure. In the context of the AC optimal power ner, and thus is not capable of featuring parallel updates unless the ma-
flow problem in electric power grid optimization (Sun et al., 2013) pro- vide such a modification of ADMM. Furthermore, the ADMM can be
form ùêÄ1ùë• + ùêÄ2ùëß = ùëè. For ease of exposition we stick to the simplified extended to consider formulations with general linear constraints of the
problem formulation above.

The Douglas-Rachford algorithm and ADMM

The Douglas-Rachford (DR) algorithm is a fundamental method to solve general monotone inclusion problems where the task is to find ze- ros of the sum of two maximally monotone operators (see Bauschke and Combettes (2016) and Auslender and Teboulle (2006a)). To keep the fo- cus on convex programming, we introduce this method for solving the
dual problem (4.2). To that end, let us define the matrix ùêä = ‚àíùêÄ‚ä§, so
that our aim is to solve the convex programming problem
ùë¶ùëò+1 = ùë¶ùëò + ùëê(ùêÄùë•ùëò+1 ‚àí ùëßùëò+1)
which is just the standard ADMM. By this we have recovered a classi- cal result on connection between the DR and ADMM algorithms due to Gabay (1983) and Eckstein and Bertsekas (1992).
Proximal Variant of ADMM

the term ùêÄùë• in the update of ùë•ùëò+1. The presence of this factor makes One of the limitations of the ADMM comes from the presence of
it impossible to implement the algorithm in parallel, which makes it slightly unattractive for large-scale problems in distributed optimiza- tion. Moreover, due to the result of Chen et al. (2016) the conver- gence of ADMM for general linear constraints does not generalize to more than two blocks. Leaving parallelization issues aside, Shefi and Teboulle Shefi and Teboulle (2014) proposed an interesting extension of the ADMM by adding further quadratic penalty terms, which allows much flexibility by suitably choosing the norms employed in the algo-
rithm. Given some point (ùë•ùëò, ùëßùëò, ùë¶ùëò) ‚àà ùñ∑ √ó ùñπ √ó ‚Ñùùëö and two positive def-
inite matrices ùêå1, ùêå2, we define the proximal augmented Lagrangian of
(4.1) as
ùëÉ (ùë•, ùëß, ùë¶) = ùêø (ùë•, ùëß, ùë¶) + 1 ùë• ‚àí ùë•ùëò 2  + 1 ùëß ‚àí ùëßùëò 2 .	(4.12)

min ùëî‚àó(ùëß) + ùëü‚àó(ùêäùëß).	(4.7)	ùëò
ùëß
ùëê	2 ‚Äñ
‚Äñùêå1	2 ‚Äñ
‚Äñùêå2

Any solution ùëßÃÑ ‚àà dom(ùëü‚àó) satisfies the monotone inclusion
0 ‚àà ùêä‚ä§ùúïùëü‚àó(ùêäùëßÃÑ) + ùúïùëî‚àó(ùëßÃÑ).	(4.8)
The DR algorithm aims to determine such a point ùëßÃÑ by iteratively con- structing a sequence {(ùë¢ùëò, ùë£ùëò, ùë¶ùëò), ùëò  0} determined by
ùë£ùëò+1 = (Id +ùëêùêä‚ä§‚ó¶ùúïùëü‚àó‚ó¶ùêä)‚àí1 (2ùë¶ùëò ‚àí ùë¢ùëò),
ùë¢ùëò+1 = ùë£ùëò+1 + ùë¢ùëò ‚àí ùë¶ùëò ,
ùêå, which is a norm
if ùêå is positive definite.


The Alternating Direction proximal Method of Multipliers (AD-PMM)
Input: pick (ùë•0, ùëß0, ùë¶0) ‚àà ùñ∑ √ó ùñπ √ó ‚Ñùùëö and penalty parameter ùëê > 0;
General step: For ùëò = 0, 1, ‚Ä¶ do:

ùë¶ùëò+1 = (Id +ùëêùúïùëî‚àó)‚àí1 (ùë¢ùëò+1).
ùë•ùëò+1 = argmin
{ùëü(ùë•) + ùëê
ùêÄùë• ‚àí ùëßùëò + 1 ùë¶ùëò 2 + 1
ùë• ‚àí ùë•ùëò 2
} (4.13)

ùë•‚ààùñ∑	2 ‚Äñ
ùëê  ‚Äñ2	2 ‚Äñ
‚Äñùêå1

the ùë¶ùëò+1 update, which reads as the inclusion
ùëß‚ààùñπ	2 ‚Äñ
ùëê  ‚Äñ2	2 ‚Äñ
‚Äñùêå2

0 ‚àà 1 (ùë¶ùëò+1
‚Äì ùë¢
ùëò+1
) + ùúïùëî‚àó(ùë¶
ùëò+1 ).
ùë¶ùëò+1 = ùë¶ùëò + ùëê(ùêÄùë•ùëò+1 ‚àí ùëßùëò+1)  (4.15).

ùëê
This is clearly recognizable as the first-order optimality condition of
the min {ùëî‚àó(ùë¶) +  1 ùë¶ ‚àí ùë¢ùëò+1 2}. Therefore, we can rewrite the above

ùë¶	2ùëê	2
iteration in terms of convex optimization subroutines as:
ùë£ùëò+1 = argmin{ùëü‚àó(ùêäùë£) + 1  ùë£ ‚àí (2ùë¶ùëò ‚àí ùë¢ùëò) 2 },	(4.9)
ùë£	2ùëê
ùë¢ùëò+1 = ùë£ùëò+1 + ùë¢ùëò ‚àí ùë§ùëò,	(4.10)
ùë¶ùëò+1 = argmin{ùëî‚àó(ùë¶) +  1 ùë¶ ‚àí ùë¢ùëò+1 2}.	(4.11)
ùë¶	2ùëê

AD-PMM allows for various choices of the matrices ùêå1, ùêå2.
With ùêå1 = ùêå2 = 0, we recover the classical ADMM. For any ùëê > 0,
it is known (Gabay, 1983; Glowinski and Tallec, 1989) that conver-
gence in function values as well as global convergence to to dual multiplier are warranted. To ensure convergence of the primal se-
quence (ùë•ùëò)ùëò, one needs to assume that ùêÄ has full column rank.
With the choice ùêå1 = ùúá1 ùêàùëõ, ùêå2 = ùúá2 ùêàùëö with ùúá1 , ùúá2 > 0, the AD-PMM
of (Eckstein, 1994) is recovered.
We give a brief analysis of the complexity of AD-PMM in the special




ùë•ùëò+1
= argmin{ùëü(ùë•) + ùëê
ùêÄùë• +
1 (2ùë¶ùëò
‚Äì ùë¢ùëò)
2 },
is that the smooth part ùëì of the composite convex programming prob-

ùë•	2	ùëê	2
where the coupling between the primal and the dual variables is
ùë¢ùëò+1 = ùë¶ùëò + ùëêùêÄùë•ùëò+1.
The dual to step (4.11) reads as
lem (P) admits a Lipschitz continuous gradient. Since ùëì (ùë•) = ùëî(ùêÄùë•), the Lipschitz constant of ‚àáùëì is determined by a corresponding Lipschitz as- sumption on ‚àáùëî, with the constant henceforth denoted as ùêøùëî , and a bound on spectrum of the matrix ùêÄ. To highlight the primal-dual na-
ture of the algorithm, a key element in the complexity analysis is the
bifunction

ùëßùëò+1 = argmin{ùëî(ùëß) + ùëê ùëß ‚àí 1 ùë¢ùëò+1 2}.	‚àó

ùëß	2 ‚Äñ	ùëê	‚Äñ2
ùëÜ(ùë•, ùë¶) = ùëü(ùë•) ‚àí ùëî (ùë¶) + ùë¶, ùêÄùë• = ùêø(ùë•, 0, ùë¶).



Our derivation of an iteration complexity estimate of AD-PMM proceeds in two steps. First, we present an interesting ‚ÄúMeta-Theorem‚Äù, due to Shefi and Teboulle (2014), and stated here as Proposition 4.2. It for-


Dividing both sides by ùëÅ and using the convexity of the Lagrangian with respect to (ùë•, ùëß) and the linearity in ùë¶, we easily get
ùêø(ùë•ÃÑ , ùëßÃÑ , ùë¶) ‚àí ùêø(ùë•, ùëß, ùë¶ÃÑ ) ‚â§  1  (ùê∂(ùë•, ùëß) + 1 ‚Äñùë¶ ‚àí ùë¶0‚Äñ2 )

satisfying a specific per-iteration bound. We then apply this general re-
sult to AD-PMM, by verifying that this scheme actually satisfies these
in terms of the ergodic average

mentioned per-iteration bounds.
We start with an auxiliary technical fact.
ùë•ÃÑùëÅ
=  1
ùëÅ
ùëÅ ‚àí1
ùë•ùëò, ùë¶ÃÑùëÅ
ùëò=0
=  1
ùëÅ
ùëÅ ‚àí1
ùë¶ùëò, ùëßÃÑùëÅ
ùëò=0
=  1
ùëÅ
ùëÅ ‚àí1
ùëßùëò,
ùëò=0

Lemma 4.1. Let ‚Ñé ‚à∂ ‚Ñùùëõ ‚Üí ‚Ñù be a proper convex and ùêø‚Ñé -Lipschitz contin-
and  the  constant  ùê∂(ùë•, ùëß) = ùëê ùêÄùë• ‚àí ùëß0 2 +
ùë• ‚àí ùë•0 2  + ùëß ‚àí ùëß0 2 .

uous. Then, for any ùúâ ‚àà ‚Ñùùëõ we have
‚Äñ	‚Äñ	‚Äñ	‚Äñùêå1  ‚Äñ	‚Äñùêå2

‚Ñé(ùúâ) ‚â§ max{ ùúâ, ùë¢ ‚àí ‚Ñé‚àó(ùë¢) ‚à∂ ùë¢  ‚â§ ùêø }.	(4.16)
Proof. Since ‚Ñé is convex and continuous, it agrees with its biconjugate:
‚Ñé‚àó‚àó = ‚Ñé. By Corollary 13.3.3 in Rockafellar (1970), dom ‚Ñé‚àó is bounded
averages (ùë•ÃÑùëò , ùëßÃÑùëò , ùë¶ÃÑùëò ) generated by AD-PMM, and derive a ùëÇ(1‚àïùëÅ ) Therefore, we can apply Proposition 4.2 to the sequence of ergodic
convergence rate in terms of the function value.

Relation to the Chambolle-Pock primal-dual splitting

with dom ‚Ñé‚àó ‚äÜ {ùë¢ ‚à∂
gives
‚â§ ùêø }. Hence, the definition of the conjugate
‚Äñùë¢‚Äñ2
In this subsection we discuss the relation between ADMM and the

‚Ñé(ùúâ) =  sup  { ùë¢, ùúâ
ùë¢‚ààdom ‚Ñé‚àó
‚ñ°
‚Äì ‚Ñé‚àó(ùë¢)} ‚â§	max { ùúâ, ùë¢ ‚àí ‚Ñé‚àó(ùë¢)}.
ùë¢‚à∂ ùë¢	ùêø
celebrated Chambolle-Pock (a.k.a Primal-Dual Hybrid Gradient) method (Chambolle and Pock, 2011), designed for problems in the form (2.8).




Proposition  4.2. Let  (ùë•‚àó, ùë¶‚àó, ùëß‚àó)  be  a  saddle  point  for  ùêø.  Let
{(ùë•ùëò, ùë¶ùëò, ùëßùëò); ùëò 0} be a sequence generated by some algorithm for which the following estimate holds for any ùë¶ ‚àà ‚Ñùùëö:

The Chambolle-Pock primal-dual algorithm (CP)
Input: pick (ùë•0, ùë¶0, ùëù0) ‚àà ‚Ñùùëõ √ó ‚Ñùùëö √ó ‚Ñùùëö and ùëê, ùúè > 0, ùúÉ ‚àà [0, 1];
General step: For ùëò = 0, 1, ‚Ä¶ do:
 1

( ùëò  ùëò  ) ‚àí Œ®( ‚àó) ‚â§  1 [ ( ‚àó  ‚àó) + 1
0 ‚Äñ2 ]
ùë•ùëò+1 = argminùë•{ùëü(ùë•) + 2	‚àí ( ùëò ‚àí ùúèùêÄ‚ä§ùëùùëò) 2
(4.19)

for some constant ùê∂(ùë•‚àó, ùëß‚àó) > 0. Then
ùë¶	2ùëê ‚Äñ	‚Äñ2

Œ®(ùë•ùëò) ‚àí Œ®(ùë•‚àó) ‚â§
ùê∂1 (ùë•‚àó, ùëß‚àó, ùêøùëî )
2ùëò	.
ùëùùëò+1 = ùë¶ùëò+1 + ùúÉ(ùë¶ùëò+1 ‚àí ùë¶ùëò)	(4.21).



where ùê∂ (ùë•‚àó, ùëß‚àó, ùêø ) = ùê∂(ùë•‚àó, ùëß‚àó) + 2 (ùêø2 + ùë¶0 2).

1	ùëî
ùëê  ùëî
‚Äñ ‚Äñ2
For later references it is instructive to write this algorithm slightly

Proof. Thanks to the Fenchel inequality
ùêø(ùë•, ùëß, ùë¶) ‚àí ùëÜ(ùë•, ùë¶) = ùëî(ùëß) + ùëî‚àó(ùë¶) ‚àí ùë¶, ùëß ‚â• 0.
of     the     step     ùë•ùëò+1,     we     see differently in operator-theoretic notation. From the optimality condition
0 ‚àà ùúïùëü(ùë•ùëò+1) + 1 (ùë•ùëò+1 ‚àí ùë§ùëò) ‚áî 0 ‚àà (Id +ùúèùúïùëü)(ùë•ùëò+1) ‚àí ùë§ùëò

By the definition of the convex conjugate
Œ®(	‚àó
ùë¶	ùë¶
Now, since ùëî is convex and continuous on ‚Ñùùëö, we know ùëî = ùëî‚àó‚àó, and we
can apply Lemma 4.1 to obtain the string of inequalities:
ùúè
where ùë§ùëò = ùë•ùëò ‚àí ùúèùêÄ‚ä§ùëùùëò. Hence, we can give an explicit expression of
the update as
ùë•ùëò+1 = (Id +ùúèùúïùëü)‚àí1 (ùë§ùëò) = (Id +ùúèùúïùëü)‚àí1 (ùë•ùëò ‚àí ùúèùêÄ‚ä§ùëùùëò).
Similarly, we can write the update ùë¶ùëò+1 explicitly as

Œ®(ùë•ùëò ) ‚àí Œ®(ùë•‚àó ) = sup{ùëÜ(ùë•ùëò , ùë¶) ‚àí Œ®(ùë•‚àó )}‚â§	sup
{ùëÜ(ùë•ùëò , ùë¶) ‚àí Œ®(ùë•‚àó )} ‚â§	sup  {ùêø(ùë•ùëò , ùëßùëò , ùë¶)‚àíŒ®(ùë•‚àó )} ùë¶ùëò+1 = (Id +ùëêùúïùëî‚àó)‚àí1 (ùë¶ùëò + ùëêùêÄùë•ùëò+1 ).

ùë¶	ùë¶‚à∂ ùë¶ ‚â§ùêøùëî
{  (
  

ùë¶‚à∂ ùë¶ ‚â§ùêøùëî
)}	[	]

	 	 

‚ñ°
To apply this Meta-Theorem, we need to verify that AD-PMM satis- fies the condition (4.17). To make progress towards that end, Lemma
4.2 in Shefi and Teboulle (2014) proves that
ùêø(ùë•ùëò+1, ùëßùëò+1, ùë¶) ‚àí ùêø(ùë•, ùëß, ùë¶ùëò+1) ‚â§ ùëá (ùë•, ùëß, ùë•ùëò+1) + ùëÖ (ùë•, ùë¶, ùëß)	(4.18)
for all (ùë•, ùëß, ùë¶) ‚àà ùñ∑ √ó ùñπ √ó ‚Ñùùëö and some explicitly given functions ùëáùëò and
ùëÖùëò . Furthermore, it is shown that
ùëùùëò+1 = 2ùë¶ùëò+1 ‚àí ùë¶ùëò, which corresponds to a simple linear extrapolation
Pock (2011) provide a ùëÇ(1‚àïùëÅ ) non-asymptotic convergence guarantees based on the current and previous iterates. In this case, Chambolle and
in terms of the primal-dual gap function of the corresponding saddle- point problem. The CP primal-dual splitting method has been of im- mense importance in imaging and signal processing and constitutes nowadays a standard method for tackling large-scale instances in these
application domains. Interestingly, if ùúÉ = 1, CP is a special case of the
proximal version of ADMM (AD-PMM). To establish this connection, let

1	‚ä§

ùëá (ùë•, ùëß, ùë•ùëò+1) ‚â§ ùëê (‚ÄñùêÄùë• ‚àí ùëßùëò‚Äñ2 ‚àí ‚ÄñùêÄùë• ‚àí ùëßùëò+1‚Äñ2 + ùëê ‚ÄñùêÄùë•ùëò+1 ‚àí ùëßùëò+1‚Äñ2 ), and
us set ùêå1 = ùëê Id ‚àíùëêùêÄ ùêÄ and ùêå2 = 0. After some elementary manipula-

ùëÖ (ùë•, ùëß, ùë¶) ‚â§ 1 (Œî (ùë•, ùêå ) + Œî (ùëß, ùêå ) + 1 Œî (ùë¶, Id)) ‚àí ùëê ‚ÄñùêÄùë•ùëò+1 ‚àí ùëßùëò+1‚Äñ2 ,


ùëò+1


 1	ùëò
‚ä§  ùëò
ùëò	ùëò
2 }.

Œî (ùëß, ùêå) = 1
ùëß ‚àí ùëßùëò 2 ‚àí 1
ùëß ‚àí ùëßùëò+1 2 .
lently as

ùëò	2 ‚Äñ	‚Äñùêå	2 ‚Äñ	‚Äñùêå
ùë•ùëò+1 = argmin{ùëü(ùë•) +  1
ùë• ‚àí (ùë•ùëò ‚àí ùúèùêÄ‚ä§ùëùùëò) 2 } = Prox
(ùë•ùëò ‚àí ùúèùêÄ‚ä§ùëùùëò).

Using these bounds and summing inequality (4.18) over ùëò = 0, 1, ‚Ä¶ , ùëÅ ‚àí
ùë•	2ùúè ‚Äñ
‚Äñ2	ùúèùëü

ùëÅ ‚àí1
[ùêø(ùë•
ùëò+1
, ùëßùëò+1
, ùë¶) ‚àí ùêø(ùë•, ùëß, ùë¶
ùëò+1
)] ‚â§

1 (ùëê ùêÄùë• ‚àí ùëß0 2
+ ùë• ‚àí ùë•0 2
+ ùëß ‚àí ùëß0 2
+ 1 ùë¶ ‚àí ùë¶
0 2 )
ùëßùëò+1
= (Id +
1 ùúïùëî)
‚àí1 (
ùêÄùë•
ùëò+1 +
1 ùë¶
ùëò)
= Prox 1
( 1 (ùëêùêÄùë•
ùëò+1
+ ùë¶ùëò)).

ùëò=0

2  ‚Äñ	‚Äñ2  ‚Äñ
‚Äñùêå1  ‚Äñ
‚Äñùêå2

ùëê ‚Äñ	‚Äñ2
ùëê	ùëê
ùëê ùëî  ùëê



Moreau‚Äôs identity Bauschke and Combettes (2016, Proposition 23.18) states that
ùëê Prox 1 ùëî (ùë¢‚àïùëê) + Proxùëêùëî‚àó (ùë¢) = ùë¢  ‚àÄùë¢ ‚àà ùñµ.	(4.22)
ùëê
The practical application of an LO requires to make a selection from the set of solutions of the defining linear minimization problem. The precise definition of such a selection mechanism is not of any impor-
tance, and thus we are just concerned with any answer	(ùë¶) revealed

Applying this fundamental identity, we see	by the oracle.

ùëêùëßùëò+1 + Proxùëêùëî‚àó (ùë¶ùëò + ùëêùêÄùë•ùëò+1) = ùë¶ùëò + ùëêùêÄùë•ùëò+1.
The second summand is just the ùë¶ùëò+1-update in the CP algorithm, so that
we deduce
ùëêùëßùëò+1 + ùë¶ùëò+1 = ùë¶ùëò + ùëêùêÄùë•ùëò+1 ‚áî ùë¶ùëò+1 = ùë¶ùëò + ùëê(ùêÄùë•ùëò+1 ‚àí ùëßùëò+1).
Consequently,
ùëùùëò+1 = ùë¶ùëò+1 + ùëê(ùêÄùë•ùëò+1 ‚àí ùëßùëò+1) = 2ùë¶ùëò+1 ‚àí ùë¶ùëò,
and hence we recover the three-step iteration defining CP:
The information-theoretic assumption that the optimizer can only query a linear minimization oracle is clearly the main difference be- tween CG and other gradient-based methods discussed in Section 3. For instance, the dual averaging algorithm solves at each iteration a strongly convex subproblem of the form
min{ ùë¶, ùë¢ + ‚Ñé(ùë¢)},	(5.3)
where ‚Ñé ‚àà Óà¥ (ùñ∑), whereas CG solves a single linear minimization prob-
lem at each iteration. This difference in the updating mechanism yields

ùë•ùëò+1
= argmin{ùëü(ùë•) +  1  ùë• ‚àí (ùë•ùëò ‚àí ùúèùêÄ‚ä§ùëùùëò) 2 }
ùë•	2ùúè
the following potential advantages of the CG method.
Low iteration costs: In many cases it is much easier to construct an

ùë¶ùëò+1 = argmin{ùëî‚àó(ùë¶) +  1
ùë¶ ‚àí (ùë¶ùëò + ùëêùêÄùë•ùëò+1) 2 }
LO rather than solving the non-linear subproblem (5.3). We empha-

ùë¶
ùëùùëò+1 = 2ùë¶ùëò+1 ‚àí ùë¶ùëò .
2ùëê ‚Äñ	‚Äñ2
ture of the objective function ùëì , but rather on the geometry of the size that this potential benefit of CG does not depend on the struc-

Given the above derivations, we can summarize this subsection by the following interesting observation.
Proposition 4.3 (Proposition 3.1, Shefi and Teboulle (2014)). Let
(ùë•ùëò, ùë¶ùëò, ùëùùëò) be a sequence generated by CP with ùúÉ = 1. Then, the ùë¶ùëò+1-update
(4.20) is equivalent to
feasible set ùñ∑. To illustrate this point, consider the spectrahedron
ùñ∑ = {ùêó ‚àà ‚Ñùùëõ√óùëõ ùêó ‚™∞ 0, tr(ùêó)  1}. Computing the orthogonal projec- tion of some symmetric matrix ùêò onto the spectrahedron requires first to compute the full spectral decomposition ùêò = ùêîùêÉùêî‚ä§ , and then for the diagonal matrix ùêÉ computing the projection of its diagonal el-
ements onto the simplex. The resulting projection is therefore given

ùëßùëò+1 = argmin{ùëî(ùëß) + ùëê
ùêÄùë•ùëò+1 ‚àí ùëß + 1 ùë¶ùëò 2},	by

ùëß	2 ‚Äñ
ùëê  ‚Äñ2
ùëÉùñ∑(ùêò) = ùêî Diag(ùëÉ
Œîùëõ
(diag(ùêÉ)))ùêî‚ä§.

ùë¶ùëò+1 = ùë¶ùëò + ùëê(ùêÄùë•ùëò+1 ‚àí ùëßùëò+1)
which corresponds to the primal ùëßùëò+1-minimization step (4.14) with ùêå2 = 0,
In contrast, computing a linear oracle over ùñ∑ for the symmetric
matrix ùêò involves finding the eigenvector of ùêò corresponding to

and to the dual multiplier update for ùë¶ùëò+1 (4.15) of AD-PMM, respectively.
the minimal eigenvalue, that is G (ùêò) = ùë¢ùë¢‚ä§, where ùë¢‚ä§ùêòùë¢ = ùúÜ
min
(ùêò).

Moreover, the minimization step with respect to ùë• in the CP algorithm given
in (4.19) together with (4.15) reduces to (4.13) of AD-PMM with ùêå1 =
ùúè Id ‚àíùëêùêÄ‚ä§ùêÄ.
The Conditional Gradient Method

The eÔ¨Éciency of the Bregman proximal gradient method stands and falls with the relative ease of evaluating the Bregman proximal operator (3.7). In this section, we present a class of first-order methods which gain relevance in large-scale problems for which the computation of the projection-like operators is a significant computational bottleneck. We describe conditional gradient (CG) methods, a family of methods which, originating in the 1960‚Äôs, have received much attention in both machine learning and optimization in the last 20 years. CG is designed to solve convex programming problems over compact convex sets. Therefore, we assume in this section that the feasible set ùñ∑ is a compact convex set.
Assumption 9. The set ùñ∑ is a compact convex subset in a finite- dimensional real vector space ùñµ.
Classical Conditional gradient

CG, also known as the Frank-Wolfe method, was independently de- veloped by Frank and Wolfe Frank and Wolfe (1956) for linearly con- strained quadratic problems, and by Levitin and Polyak Levitin and Polyak (1966) for general smooth convex optimization problems over compact domains:
This operation can be typically done using numerical linear algebra techniques such as Power, Lanczos or Kaczmarz, and randomized versions thereof (see Kuczy≈Ñski and Wo≈∫niakowski (1992) for gen- eral complexity results). For large-scale problems, computing such a leading eigenvector to a predefined accuracy is much more eÔ¨Écient than a full spectral decomposition.
Simplicity: The definition of an LO does not rely on a specific DGF
‚Ñé ‚àà  (ùñ∑) and makes the update aÔ¨Éne invariant.
Structural properties of the updates: When the feasible set ùñ∑ can be


represented as the convex hull of a countable set of atoms (‚Äùgener- ators‚Äù), then CG often leads to simple updates, activating only few atoms at each iteration. In particular, in the case of the spectrahe- dron, the LO returns a matrix of rank one, which allows for sparsity preserving iterates.
the LO at a given gradient feedback ùë¶ = ‚àáùëì (ùë•), and returns the target The classical form of CG takes the answer obtained from querying
vector
ùëù(ùë•) = G (‚àáùëì (ùë•))	‚àÄùë• ‚àà ùñ∑.	(5.4)
It proposes then to move in the direction ùëù(ùë•) ‚àí ùë•. As in every opti-
rules to guarantee reasonable numerical performance. Letting ùë•ùëò‚àí1 and mization routine, a key question is how to design eÔ¨Écient step-size
ùëùùëò = ùëù(ùë•ùëò‚àí1) be a current position of the method together with its im-
plied target vector, the following policies are standard choices:
Standard:  ùõæ =   1   ,	(5.5)

Œ®min
(ùñ∑) ‚à∂= min{ùëì (ùë•) ùë• ‚àà ùñ∑}.	(5.1)
2 + ùëò

CG attempts to solve problem (5.1) by sequentially calling a linear oracle
(LO), a fundamental notion we introduce next.
Exact line search:  ùõæùëò ‚àà argmin ùëì (ùë•ùëò‚àí1 + ùë°(ùëùùëò ‚àí ùë•ùëò‚àí1)),	(5.6)
ùë°‚àà(0,1]

Definition 5.1. The Operator G ‚à∂ ùñµ‚àó ‚Üí ùñ∑ is a linear oracle (LO) over

set
ùñ∑ if for any vector
ùë¶ ‚àà
ùñµ‚àó
ùñ∑
we have that
Adaptive:  ùõæ
= min { ‚ü®
ùëì (ùë•ùëò‚àí1), ùë•ùëò‚àí1 ‚àí ùëùùëò
	 
‚ü© , 1
}.	(5.7)



Exact line search is conceptually attractive, but can be costly in large- scale applications when computing the function value is computation-
Note that when choosing ‚Ñé to be the squared Euclidean norm ‚Ñé(ùë•) =
1 ùë• 2 and ùêø‚Ñé = ùêø , then Assumption 10 is equivalent to the Lipschitz

2 ‚Äñ ‚Äñ
ùëì	ùëì

ally expensive. To understand the construction of the adaptive step-size scheme, it is instructive to introduce a primal gap (merit) function to the problem defined as
ùöé(ùë•) ‚à∂= sup ‚àáùëì (ùë•), ùë• ‚àí ùë¢ .	(5.8)
ùë¢‚ààùñ∑
This merit function is just the gap program (see e.g. Facchinei and Pang (2003)) associated to the monotone variational inequality (2.6) in which the non-smooth part is trivial. In terms of this merit function, the descent lemma (3.15) yields immediately
gradient assumption, where Œ©‚Ñé(ùñ∑) is the diameter of set ùñ∑. On the other
hand, choosing ‚Ñé(ùë•) = ùëì (ùë•) and ùêø‚Ñé = ùêøùëì , we essentially retrieve the fi-
nite curvature assumption used by Jaggi Jaggi (2013).
Remark 5.1. It is clear that the finite curvature assumption (5.10) is not compatible with the DGF to be essentially smooth on ùñ∑. We are therefore forced to work with non-steep distance-generating functions.
The analysis of CG under a relative smoothness condition and Assumption 10 runs in the same way as for the classical CG. However, the adaptive step-size is reformulated as

ùëì (ùë• + ùë°(ùëù(ùë•) ‚àí ùë•)) ‚â§
( ) +
‚àá ( )
( ) ‚àí
+ ùêøùëì ùë°2
( ) ‚àí	2
{	ùëò‚àí1
ùëò‚àí1
ùëò	}

ùëì ùë•	ùë°‚ü® ùëì ùë• , ùëù ùë•
ùë•‚ü©	2  ‚Äñùëù ùë•	ùë•‚Äñ
ùõæ = min
‚àáùëì (ùë•
), ùë•
‚Äì ùëù
, 1  .

= ùëì (ùë•) ‚àí ùë°ùöé(ùë•) + ùêøùëì ùë°
ùëù(ùë•) ‚àí ùë• 2 = ùëì (ùë•) ‚àí ùúÇ (ùë°),
ùëì  ‚Ñé

ùêø ùë°2
2 ‚Äñ	‚Äñ	ùë•
This can be easily seen by replacing the upper model function ùëì (ùë•) ‚àí
ùë°ùöé(ùë•) + ùêø‚Ñé ùê∑‚Ñé (ùë• + ùë°(ùëù ‚àí ùë•), ùë•), with its more conservative bound ùëì (ùë•) ‚àí

where ùúÇ (ùë°) ‚à∂= ùë°ùöé(ùë•) ‚àí ùëì	ùëù(ùë•) ‚àí ùë• 2. Optimizing this function with re-	ùëì

ùë•	2 ‚Äñ	‚Äñ
ùêø‚Ñé ùë°2  2

returns the adaptive step-size rule in (5.7). Once the optimizer decided upon the specific step-size policy, the classical CG picks one of the step sizes (5.5), (5.6), or (5.7), and performs the update
ùë•ùëò = ùë•ùëò‚àí1 + ùõæùëò (ùëù(ùë•ùëò) ‚àí ùë•ùëò‚àí1).


The classical conditional gradient (CG)
Input: A linear oracle , a starting point ùë•0 ‚àà ùñ∑. Output: A solution ùë• such that Œ®(ùë•) ‚àí Œ®min(ùñ∑) < ùúÄ. General step: For ùëò = 1, 2, ‚Ä¶
Compute ùëùùëò =	(‚àáùëì (ùë•ùëò‚àí1));
sults in a smaller step-size than the adaptive step, which hints towards a deterioration of performance. Nevertheless, this trick allows us to han- dle convex programming problems outside the Lipschitz smooth case, which is not uncommon in various applications (Bian and Chen, 2015; Bian et al., 2015; Haeser et al., 2018).

Generalized Conditional Gradient

Introduced by Bach Bach (2015) and Nesterov (2018a), the general- ized conditional gradient (GCG) method, is targeted to solve our master problem (P) over a compact set ùñ∑. To handle the composite case, we need to modify our definition of a linear oracle accordingly.

Choose a step-size ùõæùëò either by (5.5), (5.6), (5.7);
Update ùë•ùëò = ùë•ùëò‚àí1 + ùõæùëò (ùëùùëò ‚àí ùë•ùëò‚àí1);
Definition 5.2. Operator G
ùñ∑,ùëü
‚à∂ ùñµ‚àó ‚Üí ùñ∑ is a generalized linear oracle
‚àó

Compute ùöéùëò = ùöé(ùë•ùëò‚àí1).
If ùöéùëò < ùúÄ return ùë•ùëò.
(GLO) over set ùñ∑ with respect to function ùëü if for any vector ùë¶ ‚àà ùñµ we
have that

G  (ùë¶) ‚àà argmin ùë¶, ùë• + ùëü(ùë•).

ùñ∑,ùëü
ùë•‚ààùñ∑  ‚ü®	‚ü©

The convergence properties of classical CG under either of the step- size variants above is well documented in the literature (see e.g. the recent text by Lan (2020), or Jaggi (2013)). We will obtain a full con-
vergence and complexity theory under our more general analysis of the
Besides this more demanding oracle assumption, the resulting gener- alized conditional gradient method is formally identical to the classical CG. In particular, we can consider the target vector


generalized CG scheme.
ùëù(ùë•) = G
ùñ∑,ùëü
(‚àáùëì (ùë•))	‚àÄùë• ‚àà ùñ∑	(5.11)

Relative smoothness
The basic ingredient in proving convergence and complexity results on the classical CG is the fundamental inequality
ùëì (ùë• + ùë°(ùëù(ùë•) ‚àí ùë•)) ‚â§ (ùë•) ‚àí ùë°ùöé(ùë•) + ùêøùëì ùë°  ùëù(ùë•) ‚àí ùë• 2.
2
and the same three step size policies as in the classical CG, with the standard step size remaining the same and the obvious modifications for the two other step size policies:
Exact line search:  ùõæùëò ‚àà argmin Œ®(ùë•ùëò‚àí1 + ùë°(ùëùùëò ‚àí ùë•ùëò‚àí1)),	(5.12)
ùë°‚àà[0,1]
{ ùëü(ùë•ùëò‚àí1) ‚àí ùëü(ùëùùëò) + ‚àáùëì (ùë•ùëò‚àí1), ùë•ùëò‚àí1 ‚àí ùëùùëò	}

Based on the relative smoothness analysis in Section 3.3.3, it seems to be intuitively clear that we could easily prove also convergence of CG when instead of the restrictive Lipschitz gradient assumption we make
Adaptive:	ùõæùëò = min
ùêøùëì ‚Äñùë•ùëò‚ü®‚àí1 ‚àí ùëùùëò ‚Äñ2
‚ü© , 1
.
(5.13)

a relative smoothness assumption in terms of the pair (ùëì, ‚Ñé) for some DGF ‚Ñé ‚àà ùõº(ùñ∑). Indeed, if we are able to estimate a scalar ùêø‚Ñé > 0 such
that ùêø‚Ñé ‚Ñé(ùë•) ‚àí ùëì (ùë•) is convex on ùñ∑, then the modified Descent Lemma
(3.19) yields the overestimation
ùëì (ùë• + ùë°(ùëù ‚àí ùë•)) ‚â§ ùëì (ùë•) ‚àí ùë°ùöé(ùë•) + ùêø‚Ñé ùê∑ (ùë• + ùë°(ùëù ‚àí ùë•), ùë•).	(5.9) Instead of requiring that ùëì has a Lipschitz continuous gradient over the convex compact set ùñ∑, let us alternatively require the following:
The adaptive step size variant is derived from an augmented merit func- tion, taking into consideration the non-smooth composite nature of the underlying optimization problem. Indeed, as again can be learned from the basic theory of variational inequalities (see Nesterov (2007)), the natural merit function for the composite model problem (P) is the non- smooth function
ùöé(ùë•) = sup Œì(ùë•, ùë¢), where Œì(ùë•, ùë¢) ‚à∂= ùëü(ùë•) ‚àí ùëü(ùë¢) + ‚àáùëì (ùë•), ùë• ‚àí ùë¢ .   (5.14)
ùë¢‚ààùñ∑

ùõº	ùëì	‚àó

such that ùêø‚Ñé ‚Ñé ‚àí ùëì is convex on ùñ∑, and ‚Ñé has a finite curvature on ùñ∑,
only if ùë• ‚àà ùñ∑ . These basic properties justify our terminology, calling

ùëì
that is,
2ùê∑ (ùë°ùë¢ + (1 ‚àí ùë°)ùë•, ùë•)
ùöé(ùë•) a merit function. Of course, ùöé(‚ãÖ) is also easily seen to be convex. Furthermore, using the convexity of ùëì , one first sees that

Œ©2 (ùñ∑) ‚à∂=	sup	‚Ñé
< ‚àû.	(5.10)
‚àá ( )  ‚àí
‚â•  ( ) ‚àí  ( )

‚Ñé	ùë•,ùë¢‚ààùñ∑,ùë°‚àà[0,1]
ùë°2
‚ü® ùëì ùë• , ùë•
ùë¢‚ü©
ùëì ùë•	ùëì ùë¢ ,



so that for all ùë•, ùë¢ ‚àà dom(ùëü),
Œì(ùë•, ùë¢) ‚â• ùëü(ùë•) ‚àí ùëü(ùë¢) + ùëì (ùë•) ‚àí ùëì (ùë¢) = Œ®(ùë•) ‚àí Œ®(ùë¢).
From here, one immediately arrives at the relation
where the second inequality follows from ùë†ùêæ < min{ùêøùëì Œ©2 , ùë†0}, the third inequality follows from  ùëé	 being a monotonic function in ùëé 0 for
any ùëò ‚â• ùêæ + 1, and the last inequality follows from ùêæ ‚â§ max {2,  ùë†0  }.

ùöé(ùë•) ‚â• Œ®(ùë•) ‚àí Œ®min(ùñ∑).	(5.15)	Combining these two results, we have that
ùë†ùëò ‚â§
Clearly, with ùëü = 0, the above specification yields the classical CG.	2 max{ùë†0 , ùêøùëì Œ©2 }
.
Basic Complexity Properties of GCG	ùëò
We now turn to prove that the GCG method with one of the above	‚ñ°
mentioned step-sizes converges at a rate of ùëÇ( 1 ). We will derive this rate

ùëò
under the standard Lipschitz smoothness assumption on ùëì . This gives us
assumed convexity of the non-smooth function ùëü(‚ãÖ), we readily obtain access to the classical descent lemma (3.15). Combining this with the
ùë°2 ùêø
Alternative assumptions and step-sizes
A key takeaway from the analysis of the generalized conditional gra- dient is that one needs to have a bound on the quadratic term of the upper model

Œ®(ùë•ùëò‚àí1 + ùë°(ùëùùëò ‚àí ùë•ùëò‚àí1)) ‚â§ ùëì (ùë•ùëò‚àí1) ‚àí ùë° ‚àáùëì (ùë•ùëò‚àí1), ùëùùëò ‚àí ùë•ùëò‚àí1 +
ùëì ùëùùëò ‚àí ùë•ùëò‚àí1 2

ùëò‚àí‚ü®1	ùëò
‚ü©	2 ‚Äñ	‚Äñ
ùë° ‚Ü¶ ùëÑ(ùë•, ùëù(ùë•), ùë°, ùêø ) ‚à∂= Œ®(ùë•) ‚àí ùë°ùöé(ùë•) +
ùêøùëì ùë°2
ùëù(ùë•) ‚àí ùë• 2.

+ (1 ‚àí ùë°)ùëü(ùë•  ) + ùë°ùëü(ùëù )
ùë°2 ùêøùëì
ùëì	2 ‚Äñ	‚Äñ

= Œ®(ùë•ùëò‚àí1) ‚àí ùë°ùöé(ùë•ùëò‚àí1) +
ùëùùëò ‚àí ùë•ùëò‚àí1 2 .
Such a bound was given to us essentially for free under the compactness

2
Based on this fundamental inequality of the per-iteration decrease, we
can deduce the iteration complexity via an induction argument. First, one observes that for each of the three introduced step-size rules (stan- dard, line search and adaptive), one obtains a recursion of the form
Œ®(ùë•ùëò‚àí1 + ùõæ (ùëùùëò ‚àí ùë•ùëò‚àí1)) ‚â§ Œ®(ùë•ùëò‚àí1) ‚àí ùõæ ùöé(ùë•ùëò‚àí1) +   ùëò ùëùùëò ‚àí ùë•ùëò 2.
on the smooth part ùëì . The resulting complexity constant is then de- assumption of the domain ùñ∑, and the Lipschitz-smoothness assumption termined by ùêøùëì Œ©2 . Moreover, this constant will be involved in lower
bounds of the adaptive step-size rule (5.13). However, such a constant may not be known, or may be expensive to compute. Moreover, a global
estimate of this constant is not actually needed for obtaining an upper

ùëò	ùëò
2  ‚Äñ	‚Äñ
bound. To see this, we proceed formally as follows. Consider an alter-



Œ©2	(ùñ∑) = max	ùë• ‚àí ùë¢ 2, this gives us	2

2 ‚Äñ‚ãÖ‚Äñ
ùë•,ùë¢‚ààùñ∑ ‚Äñ	‚Äñ
ùëÑ(ùë•, ùëù, ùë°, ùëÄ ) ‚à∂= Œ®(ùë•) ‚àí ùë°ùöé(ùë•) + ùë° ùëÄ ùëû(ùëù, ùë•),
2

ùêø ùõæ2
ùë†ùëò	ùë†ùëò‚àí1 ‚àí ùõæ ùöéùëò +	ùëò Œ©2 .
where ùëû(ùëù, ùë•) is a positive function bounded by some constant ùê∂, and

ùëò	2
choose ùõæ(ùë•, ùëÄ ) ‚à∂= min{1,   ùöé(ùë•)   }, for ùëù(ùë•) = G  (‚àáùëì (ùë•)). Let ùëÄ > 0

Applying to this recursion Lemma 13.13 in Beck (2017), we deduce the
ùëÄùëû(ùëù(ùë•),ùë•)
ùñ∑,ùëü

next iteration complexity result for GCG.
Theorem 5.3. Consider algorithm GCG with one of the step size rules: stan- dard (5.5), line search (5.12), or adaptive (5.13). Then
be a constant such that the point obtained by using this step-size is upper bounded by the corresponding quadratic function, i.e.,
Œ®((1 ‚àí ùõæ(ùë•, ùëÄ ))ùë• + ùõæ(ùë•, ùëÄ )ùëù(ùë•)) ‚â§ ùëÑ(ùë•, ùëù(ùë•), ùõæ(ùë•, ùëÄ ), ùëÄ ) < Œ®(ùë•).	(5.16)
Thus applying the update ùë•+ ‚à∂= (1 ‚àí ùõæ(ùë•, ùëÄ ))ùë• + ùõæ(ùë•, ùëÄ )ùëù(ùë•), we obtain

Œ®(ùë•ùëò) ‚àí Œ®min
(ùñ∑) ‚â§ 2 max{Œ®(ùë•0) ‚àí Œ®min(ùñ∑), ùêøùëì Œ©2 }
ùëò
‚àÄùëò
‚â• 1.
Œ®(ùë•+) ‚àí Œ®min(ùñ∑) ‚â§ Œ®(ùë•) ‚àí Œ®min(ùñ∑) ‚àí 1 ùöé(ùë•) ‚â§ 1 (Œ®(ùë•) ‚àí Œ®min(ùñ∑))

Proof. We give a self-contained proof of this result for the adaptive step-size policy (5.13).
If ùõæùëò = 1, the per-iteration progress is easily seen that ùöéùëò	ùêøùëì ‚Äñùëùùëò
  
2	2
if ùõæ(ùë•, ùëÄ ) = 1, and
Œ®(ùë•+) ‚àí Œ®min(ùñ∑) ‚â§ Œ®(ùë•) ‚àí Œ®min(ùñ∑) ‚àí 	1	 ùöé(ùë•)2 ‚â§ Œ®(ùë•) ‚àí Œ®min(ùñ∑)



ùë†ùëò ‚â§ ùë†ùëò‚àí1 ‚àí ùöéùëò + ùêøùëì
ùëùùëò ‚àí ùë•ùëò‚àí1 2 ‚â§ ùë†ùëò‚àí1 ‚àí 1 ùöéùëò ‚â§ ùë†ùëò‚àí1 ‚àí 1 ùë†ùëò‚àí1 = 1 ùë†ùëò‚àí1
ùöé(ùë•)	ùëò

2 ‚Äñ	‚Äñ	2
2	2	if ùõæ(ùë•, ùëÄ ) = ùëÄùëû(ùëù(ùë•),ùë•) . If (ùë• )ùëò‚â•0 is the trajectory defined in this specific


‚ü® ùëò‚àí1 ‚àíùëùùëò ‚Äñ2
‚ü© =	ùëò ‚àíùë•ùëò‚àí1 2 , a simple computation re-
ùë†ùëò ‚â§ min{ 1 ùë†ùëò‚àí1, ùë†ùëò‚àí1 ‚àí	1
(ùë†ùëò‚àí1)2 }

ùë†ùëò ‚â§ ùëò‚àí1	(ùöéùëò )2
‚â§ ùëò‚àí1	(ùöéùëò)2
‚â§ ùëò‚àí1 ‚àí (ùë†ùëò‚àí1)2
in terms of the approximation error ùë†ùëò ‚à∂= Œ®(ùë•ùëò) ‚àí Œ®min(ùñ∑), and the local

2ùêø
ùëì ‚Äñ
ùëùùëò ‚àí ùë•ùëò‚àí1 2
ùë†
2ùêøùëì Œ©2
2ùêø Œ©2 .
estimates (ùëÄùëò )ùëò‚â•0. Thus, as we are able to bound ùëÄùëò from above for all
iterations of the algorithm, the same convergence as for GCG can be

ùëò	{ 1 ùëò‚àí1
ùëò‚àí1
(ùë†ùëò‚àí1 )2 }
Based on this observation, and knowing that ùëÄùëò must be bounded for



Thus, the convergence is split into two periods, which are split by ùêæ ‚à∂= log	‚åà 	ùë†0	 ‚åâ . If ùëò ‚â§ ùêæ then ùë†ùëò‚àí1 ‚â• ùêø Œ©2 and thus ùë†ùëò ‚â§ 1 ùë†ùëò‚àí1,
struction, the resulting iterates ùë•ùëò will induce monotonically decreasing backtracking procedure, as suggested in Pedregosa et al. (2020). By con- function values so that the whole trajectory ùë•ùëò will be contained in the

which implies
ùë†ùëò ‚â§ 2‚àíùëòùë†0, ùëò ‚àà {0, 1, ‚Ä¶ , ùêæ}.
However,  if  ùëò > ùêæ  then  ùë†ùëò‚àí1 < min{ùêø Œ©2 , ùë†0}  and  ùë†ùëò ‚â§ ùë†ùëò‚àí1 ‚àí
be an upper bou|nd on Œ®(ùë•ùë° ) for any point ùë•ùë° = (1 ‚àí ùë°)ùë•ùëò‚àí1 + ùë°ùëùùëò such that sumed only on the appropriate level set and there is no need to insist on

  1  	ùëì	global Lipschitz smoothness on the entire set ùñ∑. This insight enabled, for

ùë†ùëò‚àí1 2, which by induction (see for example Dunn (1979,
2ùêøùëì Œ©
Lemma 5.1)) implies that
ùë†ùëò ‚â§ 	ùë†ùêæ	 ‚â§  2ùêøùëì Œ©2  ‚â§ max{ùêæ, 2}ùêøùëì Œ© ‚â§ 2 max{ùë† , ùêøùëì Œ© }	‚â•  + 1
example, proving the ùëÇ(1‚àïùëò) convergence rate of CG with adaptive and
exact step-size rules when applied to self-concordant functions, which
are not necessarily Lipschitz smooth on the predefined set ùñ∑ (Carderera

 ùë†ùêæ  ùëò  ùêæ
2ùêøùëì Œ©2
2 + (ùëò ‚àí ùêæ)	ùëò	ùëò
et al., 2021; Dvurechensky et al., 2020a; 2020; Zhao and Freund, 2020).


However, this observation need not apply to the standard step size rule
AW-CG produces ùëùùëò ‚àà A and ùë¢ùëò ‚àà ùëÜ ùëò, and the away step maximal step

(5.5), since the standard step-size choice does not guarantee that all the
iterates remain in the appropriate level set.
size is respecified as ùõæmax
ùúÜùë¢ùëò
1‚àíùúÜùë¢ùëò
. This implies, that using the maximal

To conclude, we reiterate that the step-size choices analyzed here are the most common, but there may be many more choices of step- size which provide similar guarantees. For example, Freund and Gri- gas (2016) suggests new step-size rules based on an alternative analysis of the CG method that utilizes an updated duality gap. (Nesterov, 2018a) discusses recursive step-size rules, and in Dvurechensky et al. (2020a); Odor et al. (2016) new step-size rules are suggested based on additional assumptions on the problem structure.

Variants of CG

One of the main drawbacks of CG method is that, in general, it comes with worse complexity bounds than BPGM for strongly convex functions. Indeed, it was shown as early as in 1968 by Canon and Cul-
lum (1968) (see also Lan (2013, 2020)) that the rate of ùëÇ( 1 ) is in fact

ary of ùñ∑. Thus, when ùëì is strongly convex, Jaggi and Lacoste-Julian away-step step-size will not necessarily result on a point on the bound-
Lacoste-Julien and Jaggi (2015) show a linear convergence of AW-CG with a rate that only depends on the geometry of set ùñ∑, which is cap- tured by the pyramidal width parameter. The Pairwise variant of AW-CG, which is also presented and analyzed in Lacoste-Julien and Jaggi (2015),
takes ùëëùëò = ùë¢ùëò ‚àí ùëùùëò and ùõæmax = ùúÜùë¢ùëò , and has similar analysis.
vergence results of AS-CG to functions of the form ùëì (ùë•) = ùëî(ùêÄùë•) + ùëè, ùë• In Beck and Shtern (2017), Beck and Shtern extend the linear con- where ùëî is a strongly convex function. The linear rate depends on a
the geometry of ùñ∑ as well as matrix ùêÄ. It is also worth mentioning, a parameter based on the Hoffman constant, which captures both on
stream of work which shows linear convergence of AS-CG where the strong convexity assumption is replaced by the assumption that suÔ¨É- cient second order optimality conditions, known as Robinson conditions

tight, even when the function ùëì
ùëò
is strongly convex. This slow conver-
(Robinson, 1982), are satisfied (see for example Damla et al. (2008)).

ferent extreme points in ùñ∑. In the smooth case, where ùëü = 0, and the gence is due to the well-documented zig-zagging effect between dif- objective function ùëì and the feasible set ùñ∑ are both strongly convex, only a rate of ùëÇ(  1 ) can be shown (Garber and Hazan, 2015), whereas
 1
5.3.2. Fully-corrective CG
The Fully-corrective variant of CG (FC-CG) also involves polyhedral
ùñ∑, and aims to reduce the number of calls to the linear oracle, by re- placing them with a more accurate minimization over a convex-hull of

(Nesterov, 2018a) showed an accelerated ùëÇ( ùëò2 ) rate of convergence
for GCG with strongly convex ùëü (ùúá > 0). Linear convergence of the CG
method can only be proved under additional assumptions regarding the
problem structure or location of the optimal solution (see e.g. Beck and Teboulle (2004); Dunn (1979); Epelman and Freund (2000); Gu√©lat and Marcotte (1986); Levitin and Polyak (1966)).
Departing from these somewhat negative results, variants of the clas- sical CG were suggested in order to obtain the desired linear conver-
gence in the case of strongly convex function ùëì . We will discuss four of
these variants: Away-step CG, Fully-corrective CG, CG based on a local
linear optimization oracle (LLOO), and CG with sliding.

Away-step CG
The away-step variation of CG (AW-CG), first suggested by
two calls of the LO at each iteration. The first call generates ùëùùëò = Wolfe (1970), treats the case where ùñ∑ is a polyhedron. It requires
ùñ∑(‚àáùëì (ùë•ùëò‚àí1)), defined in the original CG algorithm, while the second
call generates an additional vector ùë¢ùëò =  (‚àí‚àáùëì (ùë•ùëò‚àí1)). The two vec-
some subset Aùëò ‚äÜ A. The heart of the method is a correction routine, which updates the correction atoms Aùëò and iterate ùë•ùëò, and satisfy the
following:
ùëÜ ùëò ‚äÜ Aùëò
ùëì (ùë•ùëò) ‚â§ min ùëì ((1 ‚àí ùë°)ùë•ùëò‚àí1 + ùë°ùëùùëò)
ùë°‚àà[0,1]
ùúñ	max ‚àáùëì (ùë•ùëò), ùë† ‚àí ùë•ùëò
ùë†‚ààùëÜ ùëò
where ùëùùëò = G (‚àáùëì (ùë•ùëò‚àí1)), and ùúñ is a given accuracy parameter. The FC-
CG was known by various names depending on the updating scheme of
ùëò and ùë•ùëò (Holloway, 1974; Von Hohenbalken, 1977), and was uni-
fied and analyzed to show linear convergence in Lacoste-Julien and
Jaggi (2015). The convergence analysis of FC-CG is similar to that of AW-CG, and is based on the correction routine guaranteeing that the forward step is larger than the away-step computed in the previous it- eration.
In order to apply FC-CG one must choose a correction routine, and

ùñ∑
tors ùëùùëò and ùë¢ùëò define the forward direction ùëëùëò
= ùëùùëò ‚àí ùë•ùëò‚àí1 and the away
the linear convergence analysis does not take into account the computa-

direction ùëëùëò = ùë•ùëò‚àí1 ‚àí ùë¢ùëò, respectively. By construction, both of this di-
iteration      ùëò      is      obtained      by rections are non-ascent directions. The effectively chosen direction at
AS-CG on the subset ùëò = ùëÜ ùëò‚àí1 ‚à™ {ùëùùëò} until the conditions are satisfied. tional cost of this routine. One choice of a correction routine is to apply This correction routine is wise only if eÔ¨Écient linear oracles  Aùëò can

ùëëùëò =  argmax
‚Äì ‚àáùëì (ùë•ùëò‚àí1), ùëë ,
be constructed for all ùëò such that their low computational cost balances

ùëë  ùëëùëò
ùêπùëä
,ùëëùëò
ùê¥
the routine‚Äôs iteration complexity.

ensuring the chosen direction is a descent direction for non optimal ùë•ùëò‚àí1,
with a corresponding updating step
ùë•ùëò = ùë•ùëò‚àí1 + ùõæùëò ùëëùëò.
Here, the choice of the step-size ùõæùëò will also depend on the direc-
5.3.3. Enhanced LO based CG
A variant of CG which is based on an enhanced linear minimization oracle, was suggested by Garber and Hazan Garber and Hazan (2016).
GIn this variant, the linear oracle	(ùëê) is replaced by a local oracle

ùñ∑,ùúå
(ùëê, ùë•, ùõø) with some constant ùúå ‚â•
ùñ∑
1, which takes an additional radius

tion chosen. The first analysis of this algorithm by Gu√©lat and Mar-
input ùõø and returns a point ùëù ‚àà ùñ∑ satisfying

over ùõæ ‚àà [0, ùõæ	], where ùõæ	‚à∂= max{ùë° 0 ‚à∂ ùë•ùëò‚àí1 + ùë°ùëëùëò ‚àà ùñ∑}. Under cotte (1986) assumes that the step-size is chosen using exact line search
‚Äñùëù
‚Äì ùë•
‚â§ ùúåùõø
‚â§
min
ùë¢, ùëê .

convex ùëì . However, this rate estimate depends on the distance between this step-size choice, they prove linear convergence of CG for strongly
‚ü®ùëù, ùëê‚ü©
ùë¢‚ààùñ∑‚à∂‚Äñùë¢‚àíùë•‚Äñ‚â§ùõø ‚ü®	‚ü©

the optimal solution and the boundary of set ùëá ‚äÇ ùñ∑, which is the minimal	Thus, the only deviation from the CG algorithm is that ùëùùëò is obtained by
face of ùñ∑ containing the optimal solution. This result was later extended	applying G	(‚àáùëì (ùë•ùëò), ùë•ùëò, ùõø ) for a suitably chosen sequence (ùõø ) . The
ùëã,ùúå	ùëò	ùëò ùëò

in Lacoste-Julien and Jaggi (2015), with a slight variation on the original algorithm. In this variation, the set ùñ∑ is represented as the convex hull of a finite set of atoms  (not necessarily containing only its vertices), and a representation of the current iterate as a convex combination of these
ùëÜ ùëò = {ùëé ‚àà A ‚à∂ ùúÜùëò > 0} is defined as the set of active atoms. Thus, the
linear convergence for the case where the smooth part ùëì is strongly con-
vex, is obtained by a specific update of ùõøùëò at each step of the algorithm. This update depends on the Lipschitz constant ùêøùëì , the strong convex- ity constant of ùëì , and the parameter ùúå. Moreover, despite the fact that
LLOO-CG can theoretically be applied to any set ùñ∑, constructing a gen-
eral LLOO is challenging. In Garber and Hazan (2016), the authors sug-

ùëé






geometric properties the polytope which may generally not tractably computed. Thus, while the strong convexity and geometric properties
Input: ùë¢1 = ùë¢, ùë° = 1.
Output: point ùë¢+ = CndG(ùëî, ùë¢, ùõΩ, ùúÇ).
General step: Let ùë£ = argmax	ùëî + ùõΩ(ùë¢ ‚àí ùë¢), ùë¢ ‚àí ùë•

of the problem are only used for the analysis of the AW-CG and FC-CG,



‚ü® ùë°	ùë•‚ààùñ∑ ‚ü®	‚ü©  ùë°
ùë° = ‚ü©

geometric parameters renders the LLOO-CG less applicable in practice.
{  ‚ü®ùõΩ(ùë¢ ‚àí ùë¢ ) ‚àí ùëî, ùë£ ‚àí ùë¢ ‚ü©}

‚Äì ùë¢
ùõΩ‚Äñùë£ùë°	ùë° ‚Äñ
Each iteration of CG requires one call to the linear minimization or-		 acle and one gradient evaluation. Coupled with our knowledge about

the iteration complexity of CG, this fact implies that CG requires ùëÇ(1‚àïùúÄ)
where Œ© ‚â° Œ© 1
2 (ùñ∑). The number of calls of the linear minimization oracle

gradient evaluations of the objective function. This is suboptimal, when



2 ‚Äñ‚ãÖ‚Äñ


linear minimization oracle, the order estimate ùëÇ(1‚àïùúÄ) for the number timization, as we will see in Section 6. While it is known that within the
. In particular, if the parameter sequences in S-CG are
ùúÇùëò
chosen as
3ùêø	ùêø Œ©2

of calls of the LO is unimprovable, in this section we review a method based on the linear minimization oracle which can skip the computa- tion of gradients from time to time. This improves the complexity of
ùõΩùëò = ùëò + 1 , ùõæùëò =
then
, ùúÇ =	ùëì	,
ùëò + 2  ùëò	ùëò(ùëò + 1)

LO-based methods and leads us to the conditional gradient sliding (S-CG) algorithm introduced by Lan and Zhou Lan and Zhou (2016). S-CG is a numerical optimization method which runs in epochs and overall con- tains some similarities with accelerated methods, to be thoroughly sur-
ùëì (ùë¶ùëò) ‚àí ùëì (ùë¢) ‚â§	15ùêøùëì Œ©2
2(ùëò + 1)(ùëò + 2)
As a consequence, the total number of calls of the function gradients and the
ùêø Œ©2	2

convex  programming  problem  for  which  ùëü  =  0. veyed in Section 6. S-CG has been described in the context of the smooth
LO oracle is bounded by ùëÇ
Accelerated Methods
 ùëì 
ùúÄ
, and ùëÇ(ùêøùëì Œ© ‚àïùúÄ), respectively.


Input: A linear oracle	a starting point ùë•0 ‚àà ùñ∑. The conditional gradient sliding methods (S-CG) (ùõΩùëò )ùëò, (ùõæùëò )ùëò parameter sequence such that
ùõæ1 = 1, ùêøùëì ùõæùëò ‚â§ ùõΩùëò ,
ùõΩùëò ùõæùëò ‚â• ùõΩùëò‚àí1 ùõæùëò‚àí1
Œìùëò	Œìùëò‚àí1
where
In previous sections we focused on simple first-order methods with sublinear convergence guarantees in the convex case, and linear con- vergence in the strongly convex case. Towards the end of the discussion in Section 3, we pointed out the possibility to accelerate simple itera- tive schemes via suitably defined extrapolation steps. In this last section of the survey, we are focusing on such accelerated methods. The idea of acceleration dates back to 1980‚Äôs. The rationale for this research direc- tion is the desire to understand the computational boundaries of solv-

Œì = {1	if ùëò = 1,
(5.17)
ing optimization problems. Of particular interest has been the uncon-

ùëò	Œì
ùëò‚àí1
(1 ‚àí ùõæ )	if ùëò ‚â• 2.
strained smooth, and strongly convex optimization problem. This would
be covered by our generic model (P) by setting ùëü = 0, ùñ∑ = ùñµ = ‚Ñùùëõ and ùëì

General step: For ùëò = 1, 2, ‚Ä¶
Compute
ùëßùëò = (1 ‚àí ùõæùëò )ùë¶ùëò‚àí1 + ùõæùëò ùë•ùëò‚àí1,
ùë•ùëò = CndG(‚àáùëì (ùëßùëò), ùë•ùëò‚àí1, ùõΩùëò , ùúÇùëò ),
ùë¶ùëò = (1 ‚àí ùõæùëò )ùë¶ùëò‚àí1 + ùõæùëò ùë•ùëò.

tially updated sequences. The update of the sequence (ùë•ùëò) is stated in Similarly to accelerated methods, S-CG keeps track of three sequen-
terms of a procedure CndG, which describes an inner loop of condi- tional gradient steps. This subroutine aims at approximately solving for
strongly convex with parameter ùúáùëì > 0 and ùêøùëì -smooth. The standard
approach to quantify the computational hardness of optimization prob-
point ùë•, the oracle reports the corresponding function value ùëì (ùë•), and in lems is through the oracle model of optimization; Upon receiving a query first-order models, the function gradient ‚àáùëì (ùë•) as well. In their seminal
mization algorithm, there exists an ùêøùëì -smooth (with some ùêøùëì > 0) and work, Nemirovski and Yudin (1983) showed that for any first-oder opti- convex function ùëì ‚à∂ ‚Ñùùëõ ‚Üí ‚Ñù such that the number of queries required to obtain an ùúÄ-optimal solution ùë•‚àó which satisfies
ùëì (ùë•‚àó) < min ùëì (ùë•) + ùúÄ,
ùë•
is  at  least  of  the  order  of  min{ùëõ, ‚àöùêøùëì ‚àïùúáùëì } ln(1‚àïùúÄ)  if  ùúáùëì > 0

min ùëì (ùëßùëò) + ‚àáùëì (ùëßùëò), ùë• ‚àí ùëßùëò
+ ùõΩùëò
ùë• ‚àí ùë•ùëò‚àí1 2
information-theoretical arguments, turned out to be tight. Nemirovski Nemirovski (1982) proposed a method achieving the optimal rate

ùë•‚ààùëã	‚ü®
‚ü©	2 ‚Äñ	‚Äñ
ùëÇ(1‚àïùëò2) via a combination of standard gradient steps with the

up to an accuracy of ùúÇùëò . As will become clear later, the S-CG can thus
be thought of as an approximate version of the accelerated scheme pre-
sented in Section 6.1.
The main performance guarantee of the algorithm S-CG is summa- rized in the following theorem:
Theorem 5.4. For all ùëò ‚â• 1 and ùë¢ ‚àà ùñ∑, we have
classical center of gravity method, which required additional small- dimensional minimization, see also a recent paper (Nesterov et al., 2020). Nesterov (1983) proposed an optimal method with explicit step-sizes, which is nowadays known as Nesterov‚Äôs accelerated gradient method.
Accelerated Gradient Method

ùëì (ùë¶ùëò) ‚àí ùëì (ùë¢) ‚â§ ùõΩùõæùëò Œ© + Œì ‚àë ùúÇùëñ ùõæùëñ ,	(5.18)
In this section we consider one of the multiple variants of an Acceler-

ùëò
ùëñ=1
Œìùëñ
ated Gradient Method. This variant is close to the accelerated proximal



method in Tseng (2008), which has been very influential to the field. An- other very influential version of the accelerated method, especially in applications, is the FISTA algorithm (Beck and Teboulle, 2009a), which is excellently described in Beck (2017). A recent review on accelerated


where in the first inequality used the convexity of ùëü, and in the second inequality we used the convexity of ùëì . Now we plug (6.2) and (6.3) into
(6.1) to obtain
Œ®(ùë•ùëò+1) ‚â§  ùê¥ùëò  Œ®(ùë•ùëò) + ùõºùëò+1 (ùëì (ùë¶ùëò+1) + ‚ü®‚àáùëì (ùë¶ùëò+1), ùë¢ùëò+1 ‚àí ùë¶ùëò+1‚ü© + ùëü(ùë¢ùëò+1))

spired by the Method of Similar Triangles (Gasnikov and Nesterov, 2018; Nesterov, 2018b). For an illustration see Figure 1
Accelerated schemes generically produce three sequences (ùë¢ùëò, ùë•ùëò, ùë¶ùëò),
+  1  ùê∑ (ùë¢ùëò+1, ùë¢ùëò)
ùê¥ùëò+1  ‚Ñé

=  ùê¥ùëò  Œ®(ùë•ùëò) +  1  [ùõº  (ùëì (ùë¶ùëò+1) + ‚ü®‚àáùëì (ùë¶ùëò+1), ùë¢ùëò+1 ‚àí ùë¶ùëò+1‚ü© + ùëü(ùë¢ùëò+1))

ations are governed by control sequences (ùê¥ùëò )ùëò and (ùõºùëò )ùëò. laxation and gradient steps. The relative magnitude of inertia and relax-
The version we present below, is very flexible and allows one to obtain accelerated methods for many settings. As a particular example, below in Section 6.4, we show how a slight modification of this method
+ùê∑‚Ñé (ùë¢ùëò+1, ùë¢ùëò) .	(6.4)
Given the definition of ùë¢ùëò+1 as a Prox-Mapping, we can apply (3.12) by substituting ùë•+ = ùë¢ùëò+1, ùë• = ùë¢ùëò, ùõæ = ùõºùëò+1 . In this way, we obtain, for any
ùë¢ ‚àà ùñ∑,

allows one to obtain universal accelerated gradient method.
Œ®(ùë•ùëò+1) ‚â§  ùê¥ùëò  Œ®(ùë•ùëò) +  1  (ùõº
(ùëì (ùë¶ùëò+1) + ‚àáùëì (ùë¶ùëò+1), ùë¢ùëò+1 ‚àí ùë¶ùëò+1 + ùëü(ùë¢ùëò+1))

Our aim is to solve the composite model problem (P) within a general Bregman proximal setup, formulated in Section 3.2. We are given a DGF
‚Ñé ‚àà  1(ùñ∑). The scaling of the strong convexity parameter to the value
ùê¥ùëò+1
+ùê∑‚Ñé (ùë¢ùëò+1, ùë¢ùëò))
ùê¥ùëò+1
ùëò+1

actually is without loss of generality, modulo a constant rescaling of
(3‚â§.12)  ùê¥ùëò  Œ®(ùë•ùëò) +  1  (ùõº  (ùëì (ùë¶ùëò+1) + ‚àáùëì (ùë¶ùëò+1), ùë¢ ‚àí ùë¶ùëò+1 + ùëü(ùë¢))

+ùê∑‚Ñé (ùë¢, ùë¢ùëò) ‚àí ùê∑‚Ñé (ùë¢, ùë¢ùëò+1)
‚â§  ùê¥ùëò  Œ®(ùë•ùëò) + ùõºùëò+1 (ùëì (ùë¢) + ùëü(ùë¢)) +  1  ùê∑ (ùë¢, ùë¢ùëò) ‚àí  1  ùê∑ (ùë¢, ùë¢ùëò+1)

The Accelerated Bregman Proximal Gradient Method
ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1  ‚Ñé
ùê¥ùëò+1  ‚Ñé

(A-BPGM)
0	0	0
=  ùê¥ùëò  Œ®(ùë•ùëò) + ùõºùëò+1 Œ®(ùë¢) +  1  ùê∑ (ùë¢, ùë¢ùëò) ‚àí  1  ùê∑ (ùë¢, ùë¢ùëò+1),	(6.5)

Input: pick ùë•
= ùë¢
= ùë¶
‚àà dom(ùëü) ‚à© ùñ∑‚ó¶, set ùê¥0 = 0
ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1  ‚Ñé
ùê¥ùëò+1  ‚Ñé

General step: For ùëò = 0, 1, ‚Ä¶ do:
2	where we also used convexity of ùëì . Multiplying both sides of the last

Find ùõºùëò+1 from quadratic equation ùê¥ùëò + ùõºùëò+1 = ùêøùëì ùõºùëò+1 . Set
inequality by ùê¥
ùëò+1
, summing these inequalities from ùëò = 0 to ùëò = ùëÅ ‚àí 1,

ùê¥ùëò+1 = ùê¥ùëò + ùõºùëò+1 .
and using that ùê¥
‚Äì ùê¥
= ‚àëùëÅ ‚àí1 ùõº
, we obtain

Set ùë¶ùëò+1 = ùõºùëò+1 ùë¢ùëò +  ùê¥ùëò  ùë•ùëò.
ùê¥ Œ®(ùë•ùëÅ ) ‚â§ ùê¥ Œ®(ùë•0) + (ùê¥
‚Äì ùê¥ )Œ®(ùë¢) + ùê∑ (ùë¢, ùë¢0) ‚àí ùê∑ (ùë¢, ùë¢ùëÅ ).

ùê¥ùëò+1
ùê¥ùëò+1
ùëÅ	0
ùëÅ	0	‚Ñé	‚Ñé
(6.6)

Set
Since ùê¥ = 0, we can choose ùë¢ = ùë•‚àó ‚àà argmin{ùê∑ (ùë¢, ùë¢0) ùë¢ ‚àà ùñ∑‚àó} ‚äÜ ùñ∑‚àó and

ùë¢ùëò+1 = P ‚Ñé
(ùë¢ùëò, ùõº
‚àáùëì (ùë¶ùëò+1))
( ‚àó 0 ) ‚â• 0
‚â• 1	‚Ñé	|

= argminùë•‚ààùñ∑{ùõºùëò+1 (ùëì (ùë¶ùëò+1)+‚ü®‚àáùëì (ùë¶ùëò+1), ùë• ‚àí ùë¶ùëò+1‚ü©+ùëü(ùë•))+ùê∑‚Ñé (ùë•, ùë¢ùëò)}.
Œ®(ùë•ùëÅ ) ‚àí Œ®min(ùñ∑) ‚â§
ùê∑‚Ñé (ùë•‚àó, ùë¢0)
,  ùê∑ (ùë•‚àó, ùë¢ùëÅ ) ‚â§ ùê∑ (ùë•‚àó, ùë¢0).	(6.7)

Set
ùë•ùëò+1
ùõºùëò+1
ùê¥
ùë¢ùëò+1
 ùê¥ùëò 
ùê¥
ùë•ùëò.

ùê¥ùëÅ	‚Ñé	‚Ñé

	ùëò+1	ùëò+1	

We start the analysis A-BPGM applying the descent Lemma property
tween the iterates {ùë¢ùëÅ }ùëÅ‚â•0 and the solution ùë•‚àó is bounded by the Breg- So, we see from the second inequality that the Bregman distance be-
man distance between the starting point and the solution ùë•‚àó. Then,

from the inequality ùê∑ (ùë•‚àó, ùë¢ùëÅ ) ‚â• 1 ùë•‚àó ‚àí ùë¢ùëÅ 2 it follows that ùë•‚àó ‚àí ùë¢ùëÅ

(3.15) which holds for any two points due to ùêøùëì -smoothness:
‚Ñé	2 ‚Äñ	‚Äñ	‚Äñ	‚Äñ

‚ü®	‚ü©	2 ‚Äñ
‚Äñ (6.1)

in terms of the objective residual it remains to estimate the sequence

Let us next consider the squared norm term. Using the definition of
ùê¥ùëÅ from below.
2

ùë•ùëò+1
, ùë¶
ùëò+1
and the quadratic equation for ùõºùëò+1 given in the listing of A-
We prove by induction that ùê¥ ‚â• (ùëò+1)  . For ùëò = 1 this inequality
ùëì

BPGM, as well as the 1-strong convexity of the Bregman divergence, i.e. (3.5), we obtain
ùêøùëì ‚Äñùë•ùëò+1 ‚àí ùë¶ùëò+1 ‚Äñ2 = ùêøùëì ‚Äñ ùõºùëò+1 ùë¢ùëò+1 +  ùê¥ùëò ùë•ùëò ‚àí ( ùõºùëò+1 ùë¢ùëò +  ùê¥ùëò ùë•ùëò )‚Äñ2
holds as equality since ùê¥0 = 0, and, hence, ùê¥1 = ùõº1 =  1 . Let us prove
the induction step. From the quadratic equation ùê¥ùëò + ùõºùëò+1 = ùêøùëì ùõº2  , we
have

2	2  ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1	‚àö

2
ùëò+1
‚Äñùë¢
‚Äñ	2ùê¥ùëò+1 ‚Äñ
‚Äñ	ùê¥ùëò+1 ‚Ñé
ùëò+1
2ùêøùëì
4ùêø2
ùêøùëì
2ùêø
ùêøùëì
2ùêøùëì
2ùêøùëì
2ùêøùëì

Next, we consider the remaining terms in the r.h.s. of (6.1). Substituting
ùë•ùëò+1 and using ùê¥ùëò+1 = ùê¥ùëò + ùõºùëò+1 , we obtain
(6.8)

ùëì (ùë¶
ùëò+1
) + ‚àáùëì (ùë¶
(
ùëò+1
), ùë•
ùëò+1
‚Äì ùë¶
)
ùëò+1
+ ùëü(ùë•
ùëò+1 )
ùê¥ùëò+1
(	)
= ùê¥ùëò
+ ùõºùëò+1 ‚â•
(ùëò + 1)2
4ùêøùëì
+ ùëò + 2 = 2ùêøùëì
ùëò2 + 2ùëò + 1 + 2ùëò + 4 ‚â•
4ùêøùëì
(ùëò + 2)2
4ùêøùëì

ùê¥ùëò+1	ùê¥ùëò+1
+ ùëü( ùõºùëò+1 ùë¢ùëò+1 +  ùê¥ùëò  ùë•ùëò )
‚ü®	ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1	‚ü©
(6.9)
Thus, combining (6.9) with (6.7), we obtain that the A-BPGM has opti-

‚â§  ùê¥ùëò  ùëì (ùë¶ùëò+1) + ‚àáùëì (ùë¶ùëò+1), ùë•ùëò ‚àí ùë¶ùëò+1 + ùëü(ùë•ùëò)
ùê¥ùëò+1
+ ùõºùëò+1 (ùëì (ùë¶ùëò+1) + ‚ü®‚àáùëì (ùë¶ùëò+1), ùë¢ùëò+1 ‚àí ùë¶ùëò+1‚ü© + ùëü(ùë¢ùëò+1))
Œ®(ùë•ùëÅ ) ‚àí Œ®
min
(ùñ∑) ‚â§
4ùêøùëì ùê∑‚Ñé (ùë•‚àó, ùë¢0) (ùëÅ + 1)2
.	(6.10)

ùê¥ùëò+1
‚â§  ùê¥ùëò  (ùëì (ùë•ùëò) + ùëü(ùë•ùëò)) + ùõºùëò+1 (ùëì (ùë¶ùëò+1) + ‚ü®‚àáùëì (ùë¶ùëò+1), ùë¢ùëò+1 ‚àí ùë¶ùëò+1‚ü© + ùëü(ùë¢ùëò+1))
Closing Remarks Mainly driven by applications in imaging and ma- chine learning, the research on acceleration techniques has been very

=  ùê¥ùëò  Œ®(ùë•ùëò) + ùõºùëò+1 (ùëì (ùë¶ùëò+1) + ‚ü®‚àáùëì (ùë¶ùëò+1), ùë¢ùëò+1 ‚àí ùë¶ùëò+1‚ü© + ùëü(ùë¢ùëò+1)),	(6.3)


2013), general proximal setups (Nesterov, 2005b; 2018b), stochastic optimization problems (Dvurechensky et al., 2018a; Dvurechensky and


some fixed point and ùë• is such that ùë• ‚àí ùë•‚àó 2 ‚â§ ùëÖ2, then
( ùë• ‚àí ùë•‚àó )	Œ©

tion with inexact oracle (Cohen et al., 2018; d‚ÄôAspremont, 2008; De- volder et al., 2014; Dvurechensky and Gasnikov, 2016; Stonyakin et al., 2020), variance reduction methods (Allen-Zhu, 2017; Frostig et al., 2015; Lan and Zhou, 2017; Lin et al., 2015; Zhang and Xiao, 2015),
where Œ© is some known number. For example, in the Euclidean setup Œ© = 1, and other examples are given in Juditsky and Nesterov (2014, Section 2.3), where typically Œ© = ùëÇ(ln ùëõ).

random coordinate descent (Fercoq and Richt√°rik, 2015; Lee and Sid-		

ford, 2013; Lin et al., 2014; Nesterov, 2012; Nesterov and Stich, 2017; Shalev-Shwartz and Zhang, 2014) and other randomized methods such as randomized derivative-free methods (Dvurechensky et al., 2017; Gor-


The Restarted Accelerated Bregman Proximal Gradient Method (R-A-BPGM)
Input: ùëß0 ‚àà dom(ùëü) ‚à© ùñ∑‚ó¶ such that ùëß0 ‚àí ùë•‚àó 2	2 Œ©, ùêø , ùúá.

bunov et al., 2018; Nesterov and Spokoiny, 2017; Vorontsova et al., 2019b) and randomized directional search (Dvurechensky et al., 2017;
General step: For ùëù = 0, 1, ‚Ä¶ do:
2	ùë•‚àíùëßùëù
‚Äñ	ùëÖ0 ,	ùëì
‚àíùëù

Svaiter, 2013; Nesterov, 2008), and even high-order methods (Baes,

‚åà ‚àö Œ©ùêø ‚åâ


Bregman proximal gradient method in the setting of relative smooth- ness (Hanzely et al., 2021) and relative strong convexity (Dvurechensky et al., 2021; Hendrikx et al., 2020) (see Section 3.3.3 for the definition of relative smoothness). Yet, the negative result of (Dragomir et al., 2021) suggest that, in general, the acceleration in the relative smoothness set- ting is not possible.
As it was mentioned above, accelerated gradient method in the form of A-BPGM can serve as a template for many acceleration techniques.
The examples of accelerated methods which have a close form include
point ùë•0 = ùëßùëù and proximal setup given by DFG ‚Ñéùëù (ùë•)
Set ùëßùëù+1 = ùë•ùëÅ .

We next use the above assumptions to show the accelerated loga-
imal steps to find a point ùë•ÃÇ such that ùëì (ùë•ÃÇ) ‚àí ùëì (ùë•‚àó)  ùúÄ is proportional to rithmic complexity of R-A-BPGM, i.e. that the number of Bregman prox-


ùêøùëì ‚àïùúá log2(1‚àïùúÄ) instead of (ùêøùëì ‚àïùúá) log2(1‚àïùúÄ) for the BPGM under the er-
ror bound condition. The idea of the proof is to show by induction that,
for all ùëù  0, ùëßùëù ‚àí ùë•‚àó 2	ùëÖ2. For ùëù = 0 this holds by the assumption on

primal-dual accelerated methods (Dvurechensky et al., 2018b; Lin et al.,	0
‚Äñ	‚Äñ	ùëù

ized algorithms (Diakonikolas and Orecchia, 2018; Dvurechensky et al., 2017; Fercoq and Richt√°rik, 2015), methods for stochastic optimization
definition of ‚Ñéùëù‚àí1 , assumptions about ‚Ñé, and the inductive assumption,
we have

(Dvurechensky et al., 2018a; Lan, 2012), methods with inexact oracle (Cohen et al., 2018) and inexact model of the objective (Gasnikov and Tyurin, 2019; Stonyakin et al., 2020). Moreover, only using this one-
ùê∑	ùë•‚àó, ùëß
ùëù‚àí1
ùëù‚àí1
) ‚â§ ‚Ñé
ùëù‚àí1
(ùë•‚àó) = ùëÖ2
ùëßùëù‚àí1 ‚àí ùë•‚àó (6‚â§.12) Œ©ùëÖùëù‚àí1
ùëÖùëù‚àí1	2
.	(6.13)

projection version it was possible to obtain accelerated gradient meth- ods with inexact model of the objective (Gasnikov and Tyurin, 2019),
our  choice  of  the  number  of  steps  ùëÅ ,  we  obtain Thus, applying the error bound condition (6.11), the bound (6.10) and

accelerated decentralized distributed algorithms for stochastic convex	ùúá
(6.11)
(6.10) ùêøùëì ùê∑‚Ñé
(ùë•‚àó , ùëßùëù‚àí1 ) (6.13) ùêøùëì Œ©ùëÖ2

ùëù ‚àí ‚àó 2
‚â§ Œ®(ùëßùëù) ‚àí Œ®
(ùñ∑) = Œ®(ùë•ùëÅ ) ‚àí Œ®
(ùñ∑) ‚â§
	ùëù‚àí1	
‚â§ 	ùëù‚àí1

optimization (Dvinskikh et al., 2019; Gorbunov et al., 2019; Rogozin et al., 2021), and accelerated method for stochastic optimization with heavy-tailed noise (Gorbunov et al., 2020; 2021). The key to the last two
‚Äñùëß
ùë•		
2
ùëù‚àí1 =
8
 min
ùúáùëÖ2
2 .
min
(ùëÅ + 1)2
2(ùëÅ + 1)2

results is the proof that the sequence generated by the one-projection ac-
So, we obtain that
ùëù ‚àí ‚àó  ‚â§
= ùëÖ
‚ãÖ 2‚àíùëù and Œ®(ùëßùëù) ‚àí Œ®
(ùñ∑) ‚â§

celerated gradient method is bounded with large probability, which, to	ùúá ùëÖ2 ‚ãÖ2‚àí2ùëù
‚Äñùëß
ùë• ‚Äñ
ùëÖùëù	0
min

our knowledge, is not possible to prove for other types of accelerated methods applied to stochastic optimization problems.
02	. To estimate the total number of basic steps of A-BPGM to
achieve Œ®(ùëßùëù) ‚àí Œ®min(ùñ∑)  ùúÄ, we need to multiply the suÔ¨Écient num-

ber of restarts ùëùÃÇ = ‚åà 1 log2	‚åâ by the number of A-BPGM steps ùëÅ in
ùúáùëÖ2


Linear Convergence

Under additional assumptions, we can use the scheme A-BPGM to obtain a linear convergence rate, or, in other words, logarithmic in the
that Œ®(ùë•) satisfies a quadratic error bound condition for some ùúá > 0: desired accuracy complexity bound. One such possible assumption is
each restart. This leads to the complexity estimate ùëÇ(‚àö Œ©ùêøùëì log2	0 which is optimal (Nemirovski and Yudin, 1983; Nesterov, 2018b) for first-order methods applied to smooth strongly convex optimization problems.
Closing Remarks The restart technique which we used above was

Œ®(ùë•) ‚àí Œ®
min
(ùñ∑) ‚â• ùúá ùë•
2
‚Äì ùë•‚àó 2.	(6.11)
extended in the past 20 years to many settings including problems with non-quadratic error bound condition (Juditsky and Nesterov,

This is a weaker assumption than the assumption that Œ®(ùë•) is ùúá-strongly convex with ùúá > 0. For a review of different additional conditions
which allow to obtain linear convergence rate we refer the reader to Bolte et al. (2017); Necoara et al. (2019). The linear convergence rate can be obtained under quadratic error bound condition by a widely used restart technique, which dates back to Nemirovskii and Nesterov (1985); Nesterov (1983).
sumptions. First, without loss of generality, we assume that 0 ‚àà ùñ∑, To apply the restart technique, we make several additional as- 0 = arg minùë•‚ààùñ∑ ‚Ñé(ùë•) and ‚Ñé(0) = 0. Second, we assume that we are given
a starting point ùë•0 ‚àà ùñ∑ and a number ùëÖ > 0 such that ùë•0 ‚àí ùë•‚àó 2  ùëÖ2.
2014; Roulet and d‚ÄôAspremont, 2017), stochastic optimization prob- lems (Bayandina et al., 2018; Dvurechensky and Gasnikov, 2016; Gas- nikov and Dvurechensky, 2016; Ghadimi and Lan, 2013; Juditsky and Nesterov, 2014), methods with inexact oracle (Dvurechensky and Gas- nikov, 2016; Gasnikov and Dvurechensky, 2016), randomized methods (Allen-Zhu and Hazan, 2016; Fercoq and Qu, 2020), conditional gra- dient (Kerdreux et al., 2019; Lan, 2013), variational inequalities and saddle-point problems (Stonyakin et al., 2018; 2020), methods for con- strained optimization problems (Bayandina et al., 2018). There are ver- sions of this technique even for discrete and submodular optimization
problems (Pokutta, 2020).

0
Finally, we make the assumption that
‚Äñ	‚Äñ	0
A possible drawback of the restart scheme is that one has to

0	‚Äñ	‚Äñ



directly incorporating the parameter ùúá into the steps of A-BPGM,
see e.g. d‚ÄôAspremont et al. (2021); Devolder (2013); Lan (2020);
Nesterov (2018b); Stonyakin et al. (2020). Yet, in this case, a stronger
Here the adjoint operator ùêÄ‚àó is defined by equality  ùêÄùë•, ùë§ ùñ§ =
ùêÄ‚àó ùë§, ùë• ùñµ and the norm of the operator	ùñµ,ùñ§ is defined by ùêÄ	= max { ùêÄùë•, ùë§ ‚à∂ ùë•	= 1, ùë§	= 1}. Since ùñ∂ is bounded, Œ® (ùë•) is a


vex (Lu et al., 2018) is used. The second drawback of the restart
Œ® (ùë•) ‚â§ Œ®(ùë•) ‚â§ Œ® (ùë•) + ùúèŒò  (ùñ∂),	(6.17)

technique and direct incorporation of ùúá into the steps, is that both
require to know the value of the parameter ùúá. This is in contrast
to non-accelerated BPGM, which using the same step-size as in the
ùúè
where
ùë§
ùúè
(ùñ∂) ‚à∂= max{‚Ñéùë§
‚Ñéùë§
(ùëß) ùëß ‚àà ùñ∂}, assumed to be a finite number.

(	2 )


ùúè	ùë•	1

	
only rough estimates of the parameter ùúá are proposed in Fercoq and 2019). Several recipes on how to restart accelerated methods with


0 ‚â§ Œ®(ùë•ùëÅ ) ‚àí Œ®
‚Ñéùë•
(ùñ∑) ‚â§ Œ® (ùë•ùëÅ ) + ùúèŒò
ùë•
(ùñ∂) ‚àí Œ® (ùë•‚àó) ‚â§ Œ® (ùë•ùëÅ ) + ùúèŒò
(ùñ∂) ‚àí Œ® (ùë•‚àó) ‚â§ ùúèŒò
(ùñ∂)

Qu (2020) and a parameter-free accelerated method is proposed in Carderera et al. (2021); Nesterov (2013).
min
ùúè
+ 4ùêøùúè Œò‚Ñéùë• (ùñ∑) (ùëÅ + 1)2
‚Ñéùë§

4 ùêÄ 2 Œò
ùúè
(ùñ∑)
ùúè
4ùêø Œò
(ùñ∑)
‚Ñéùë§
ùúè  ùúè
‚Ñéùë§

= ùúèŒò (ùñ∂) +
‚Äñ ‚Äñùñµ,ùñ§
‚Ñéùë•
+	ùëì
‚Ñéùë•	.

An important observation made during the last 20 years of devel-


Choosing ùúè to minimize the r.h.s., i.e. ùúè = 2‚ÄñùêÄ‚Äñùñµ,ùñ§ ‚àö Œò‚Ñéùë• (ùñ∑) , we obtain

a large gap between the optimal convergence rate for black-box non-

 
‚â§
‚â§  ‚Äñ ‚Äñ
‚àöŒò  (ùñ∑)Œò
(ùñ∂)

Certainly, there arises the need to understand how this significant gap can be reduced. An important step towards that direction is Nesterov‚Äôs smoothing technique (Nesterov, 2005b). To motivate this approach, let us make the following thought experiment. Assume that we mini-
mize a smooth function by ùëÅ steps of A-BPGM, i.e. solve problem
(6.18)
A more careful analysis in the proof of Nesterov (2005b, Theorem 3), allows also to obtain an approximate solution to the conjugate problem
max{ùúì (ùë§) ‚à∂= ‚àíùúÖ(ùë§) + min ( ùêÄùë•, ùë§ + ùëì (ùë•))}.	(6.19)

(P) with ùëü = 0. Then at each iteration we observe first-order information
(ùëì (ùë¶ùëò+1), ‚àáùëì (ùë¶ùëò+1)) and can construct a non-smooth piecewise linear ap-
ùë§‚ààùñ∂
ùë•‚ààùñ∑ ‚ü®	‚ü©

proximation of ùëì as ùëî(ùë•) = max
{ùëì (ùë¶ùëò+1) + ‚àáùëì (ùë¶ùëò+1), ùë• ‚àí ùë¶ùëò+1 }. If
In each iteration of A-BPGM, the optimizer needs to calculate ‚àáŒ®ùúè (ùë¶ùëò+1),

ùëò=1,...,ùëÅ	‚ü®
‚ü©	which requires to calculate ùë§ÃÇ (ùë¶ùëò+1). This information is aggregated to

we now make ùëÅ steps of A-BPGM with the same starting point to min-
imize ùëî(ùë•), and choose the appropriate subgradients of ùëî(‚ãÖ), the steps
ùúè
obtain the vector ùë§ÃÇùëÅ =  ùëÅ‚àí1 ùõºùëò+1 ùë§ÃÇ (ùë¶ùëò+1) and is used to obtain the

will be absolutely the same as when we minimized ùëì (ùë•), and we will be able to minimize a non-smooth function ùëî with much faster rate 1‚àïùëÅ 2 than the lower bound 1‚àï ùëÅ . This leads to a way of trying to find a
ùëò=0
following primal-dual result
0 ‚â§ Œ®(  ) ‚àí Œ®  ( ) ‚â§ Œ®(  ) ‚àí (
ùê¥ùëò+1  ùúè
) ‚â§ 4‚ÄñùêÄ‚Äñùñµ,ùñ§ ‚àöŒò‚Ñéùë• (ùñ∑)Œò‚Ñéùë§ (ùñ∂) + 4ùêøùëì Œò‚Ñé (ùñ∑)

suÔ¨Éciently wide class of non-smooth functions which can be eÔ¨Éciently minimized by A-BPGM. To do so in a systematic way, we have to leave the pure black-box model of convex programming.
ùë•ùëÅ
min ùñ∑
ùë•ùëÅ
ùúì ùë§ÃÇùëÅ		
ùëÅ + 1
ùë•
(ùëÅ + 1)2
.
(6.20)

Consider the model problem (P), with the added assumption that the non-smooth part admits a Fenchel representation of the form
ùëü(ùë•) = max{ ùêÄùë•, ùë§ ‚àí ùúÖ(ùë§)}.	(6.14)
ùë§‚ààùñ∂

Here, ùñ∂ ‚äÜ ùñ§ is a compact convex subset of a finite-dimensional real vec- tor space ùñ§, and ùúÖ ‚à∂ ùñ∂ ‚Üí ‚Ñù is a continuous convex function on ùñ∂. ùêÄ is a linear operator from ùñµ to ùñ§‚àó. This additional structure of the problem
gives rise to a min-max formulation of (P), given by
min max{ùëì (ùë•) + ùêÄùë•, ùë§ ‚àí ùúÖ(ùë§)}.	(6.15)
to obtain convergence rate ùëÇ(1‚àïùëÅ ) for non-smooth optimization, which In both cases using the special structure of the problem it is possible is better than the lower bound ùëÇ(1‚àï ùëÅ ) for general non-smooth opti-
mization problems.
We illustrate the smoothing technique by two examples of piecewise- linear minimization; see also Figure 2

fit of some signal ùëè ‚àà ùñ§, given linear observations ùêÄùë•. where ùêÄ ‚à∂ ùñµ ‚Üí ùñ§ Example 6.1 (Uniform fit). Consider the problem of finding a uniform
is a bounded linear operator. This problem amount to minimize the non-

ùë•‚ààùñ∑ ùë§‚ààùñ∂

tion ùëü can be well approximated by a class of smooth convex functions, The main idea of Nesterov is based on the observation that the func- defined as follows. Let ‚Ñéùë§ ‚àà 1(ùñ∂) with a nonrestrictive assumption
ùêÄùë• ‚àí ùëè	. Of course, this problem can be equivalently
parameter vector ùë• is large, such a direct approach could turn out to be formulated as an LP, however in case where the dimensionality of the
not very practical. Adopting the just introduced smoothing technology, the representation (6.15) can be obtained using the definition of the dual

that minùëß‚ààùñ∂ ‚Ñéùë§ (ùëß) = 0. For given ùúè > 0, define the function
norm  ‚ãÖ
, i.e.
ùêÄùë• ‚àí ùëè
= max
ùêÄùë• ‚àí ùëè, ùë§ . Yet, a better rep-

‚Äñ ‚Äñ1	‚Äñ	‚Äñ‚àû
ùë§‚à∂‚Äñùë§‚Äñ1 ‚â§1 ‚ü®
‚ü©	‚àë2

Œ® (ùë•) ‚à∂= ùëì (ùë•) + max{ ùêÄùë•, ùë§ ‚àí ùúÖ(ùë§) ‚àí ùúè‚Ñé (ùë§)}.	(6.16)
Since ‚Ñéùë§ is 1-strongly convex on the compact convex set ùñ∂, the inner
Bregman setup is the no‚àërm ‚Äñùë§‚Äñùñ§
‚Äñùë§‚Äñ1
+	ùëñ=1  ùëñ
and the Boltzmann-Shannon


main technical lemma needed for the analysis is the following.
Œ® (ùë•) = max{ ùêÄÃÇ ùë• ‚àí ùëèÃÇ, ùë§ ‚àí ùúè‚Ñé (ùë§)} = ùúè ln
(  1
ùëö
exp
(  ‚ü®ùëéùëñ , ùë•‚ü© ‚àí ùëèùëñ )


Proposition 6.1 (Nesterov (2005b)). The function Œ®ùúè (ùë•) is well defined, convex and continuously diÔ¨Äerentiable at any ùë• ‚àà ùñ∑ with ‚àáŒ®ùúè (ùë•) = ‚àáùëì (ùë•) +
ùêÄ‚àó ùë§ÃÇùúè (ùë•). Moreover, ‚àáŒ®ùúè (ùë•) is Lipschitz continuous with constant ùêøùúè = ùêøùëì +
ùêÄ 2
.
ùúè
ùúè	ùë§‚ààùñ∂	ùë§
+ exp (‚àí ‚ü®ùëéùëñ , ùë•‚ü© ‚àí ùëèùëñ )),
which is recognized as a softmax function.
2ùëö
ùëñ=1	ùúè

Fig. 1. Illustration of the three sequences of the A-BPGM in the uncon-
strained case ùñ∑ = ‚Ñùùëõ, ùëü = 0, ‚Ñé = 1 ùë• 2. In this simple case it is easy to


see that ùë¢ùëò+1 = ùë¢ùëò ‚àí ùõº
ùëò+1
2	2
, and the sequence
ùë¢ùëò accumulates the

previous gradient, while helping to keep momentum. Also by the similar-
ity of the triangles, ùë•ùëò+1 = ùë¶ùëò+1 ‚àí ùõº  ‚àáùëì (ùë¶ùëò+1) ‚ãÖ ùõºùëò+1 = ùë¶ùëò+1 ‚àí 1 ‚àáùëì (ùë¶ùëò+1),

ùëò+1
ùê¥ùëò+1
ùêøùëì

i.e. ùë¶ùëò is the sequence obtained by gradient descent steps. Finally, the se-
quence ùë•ùëò is a convex combination of the momentum step and the gra-
dient step. The illustration is inspired by personal communication with Yu. Nesterov on the Method of Similar Triangles (Gasnikov and Nesterov, 2018; Nesterov, 2018b).










Fig. 2. Absolute value function ùë• , its softmax smoothing and Huber smooth- ing, both with ùúè = 1.
Example 6.2 (. ùìÅ1-fit) In compressed sensing Candes and Tao (2007);
minimize the ùìÅ1 norm of the residual vector ùêÄùë• ‚àí ùëè over a given closed Candes et al. (2006); Donoho (2006) one encounters the problem to
convex set ùñ∑. While it is well-known that this problem can in principle again be reformulated as an LP, the typical high-dimensionality of such problems makes this direct approach often not practicable. Adopting the
smoothing technology, it is natural to choose ùñ∂ = {ùë§ ‚àà ‚Ñùùëö ùë§   1}
the above rate estimate with the one reported in Nemirovski (2004), one observes that the bound in Nemirovski (2004) has a similar to (6.20) structure, yet with the second term being non-accelerated,
i.e. proportional to 1‚àïùëÅ . This approach was generalized to obtain
an accelerated method for a special class of variational inequali-
ties in Chen et al. (2017), where an optimal iteration complexity
ùëÇ(ùêø‚àï  ùúÄ) to reach an ùúÄ-close solution is reported. In the original
paper (Nesterov, 2005b), the smoothing parameter is fixed and re-
quires to know the parameters of the problem in advance. This has been improved in Nesterov (2005a), where an adaptive version of the smoothing techniques is proposed. This framework was extended in Alacaoglu et al. (2017); Tran-Dinh et al. (2020); Tran-Dinh and Cevher (2014); Tran-Dinh et al. (2018) for structured composite opti- mization problems in the form (2.7) and a related primal-dual represen- tation (2.8). A related line of works studies minimization of strongly con- vex functions under linear constraints. Similarly to (6.16) the objective in the Lagrange dual problem has Lipschitz gradient, yet the challenge is that the feasible set in the dual problem is not bounded. Despite that it is possible to obtain accelerated primal-dual methods (Anikin et al., 2017; Chernov et al., 2016; Dvurechensky et al., 2016; 2018b; Guminov et al., 2021; 2019; Ivanova et al., 2020; Kroshnin et al., 2019; Nesterov et al., 2020; Tran-Dinh and Cevher, 2014; Tran-Dinh et al., 2018). In particular, this allows to obtain improved complexity bounds for differ- ent types of optimal transport problems (Dvurechensky et al., 2018a; 2018b; Guminov et al., 2021; Kroshnin et al., 2019; Lin et al., 2020; 2019; 2019; Tupitsa et al., 2020; Uribe et al., 2018).

Universal Accelerated Method

1 ‚àëùëö  ‚Äñ ‚Äñ	2
|‚Äñ ‚Äñ‚àû
As it was discussed in the previous subsection, there is a gap in the

and ‚Ñéùë§ (ùë§) = 2



ùëñ=1
ùëéùëñ ùñ§,‚àó ùë§ùëñ , which gives
ùëö
	

( |‚ü®ùëé , ùë•‚ü© ‚àí ùëè |)
convergence rate between the class of non-smooth convex optimization problems and the class of smooth convex optimization problems. In this subsection, we present a unifying framework (Nesterov, 2015) for these

where ùúì (ùë°) is the Huber function equal to ùë°2‚àï(2ùúè) for 0 ‚â§ ùë° ‚â§ ùúè and ùë° ‚àí
ùúè‚àï2 if ùë° ‚â• ùúè.
For the particular case of smoothing the absolute value function |ùë•|,
for both classes by a single method without the need to know whether the objective is smooth or non-smooth.
Consider the Problem (P) with ùëì which belongs to the class of func-
tions with H√∂lder-continuous subgradients, i.e. for some ùêø > 0 and

ing and Huber smoothing, both with ùúè = 1. Potentially, other ways Figure 2 gives the plot of the original function, its softmax smooth-
of smoothing a non-smooth function can be applied, see Beck and Teboulle (2012) for a general framework.
Closing Remarks Let us make several remarks on the related literature. A close approach is proposed in Nemirovski (2004), where the problem (6.15) is considered directly as a min-max saddle-point problem. These classes of equilibrium problems are typically solved via tools from mono- tone variational inequalities, whose performance is typically worse than the performance of optimization algorithms. In particular, contrasting
ùúà
ùúà
‚àó	ùúà
and all ùëì (ùë•) ‚àà ùúïùëì (ùë•) and ùëì (ùë¶) ‚àà ùúïùëì (ùë¶). If ùúà = 1, we recover the ùêøùëì - smoothness condition (2.1). If ùúà = 0 we have that ùëì has bounded varia-
tion of the subgradient, which is essentially equivalent to the bounded subgradient Assumption 8. The main observation (Devolder et al., 2014; Nesterov, 2015) is that this H√∂lder condition allows to prove an inex- act version of the ‚Äùdescent Lemma‚Äù inequality (3.15). More precisely
Nesterov (2015, Lemma 2), for any ùë•, ùë¶ ‚àà dom ùëì and any ùõø > 0,
ùëì (ùë¶) ‚â§ ùëì (ùë•) + ùëì ‚Ä≤(ùë•), ùë¶ ‚àí ùë• +  ùêøùúà  ùë¶ ‚àí ùë• 1+ùúà ‚â§ ùëì (ùë•) + ùëì ‚Ä≤(ùë•), ùë¶ ‚àí ùë• + ùêø ùë¶ ‚àí ùë• 2 + ùõø,

‚ü®	‚ü©  1 + ùúà ‚Äñ	‚Äñ	‚ü®	‚ü©  2 ‚Äñ	‚Äñ


the same steps as the derivation of the convergence rate for A-BPGM in Section 6.1. The first thing which is changed is equation (6.1), where now the inexact descent Lemma is used instead of the exact one. The
only difference is that ùêøùëì is changed to its local approximation ùêøùëò+1 and
add the error term ùúÄùõºùëò+1 appears in the r.h.s. In (6.2) the new quadratic
2ùê¥ùëò+1
equation with ùêøùëò+1 is used and the inequality remains the same. This
term  ùúÄùõºùëò+1  in the r.h.s. Finally, this leads to the bound eventually leads to (6.5) with the only change being an additive error
2ùê¥ùëò+1

Œ®(ùë•ùëÅ ) ‚àí Œ®min
(ùñ∑) ‚â§ ùê∑‚Ñé (ùë¢‚àó, ùë¢0) + ùúÄ
ùê¥ùëÅ	2

After some algebraic manipulation, Nesterov (2015, p.397) obtains an
inequality ùê¥  ‚â• ùëÅ 1+ùúà ùúÄ 1+ùúà . Substituting, we obtain
1+3ùúà 1‚àíùúà
ùëÅ	2+4ùúà  2 
2 1+ùúà ùêø 1+ùúà
2+4ùúà	 2 

2 1+ùúà ùê∑ (ùë¢‚àó, ùë¢0)ùêø 1+ùúà
Œ®(ùë• ) ‚àí Œ®min(ùñ∑)	+
ùúÄ .

1+3ùúà
1‚àíùúà	2

Fig. 3. Non-smooth function ùëì (ùë•) = max{ùë• ‚àí 1, ùë•‚àï2}, a quadratic function con-
ùëÅ 1+ùúà ùúÄ 1+ùúà
Since the method does not require to know ùúà and ùêøùúà , the iteration com- plexity to achieve accuracy ùúÄ is

structed using the first-order information at the point ùë• = 2, and a shifted
quadratic function constructed using the first-order information at the point
ùë• = 2. As one can see, adding a shift allows to obtain an upper quadratic bound
=	inf ( ùêøùúà
‚éúùúà‚àà[0,1]	ùúÄ
 2  1+3ùúà (
 1+ùúà
ùê∑‚Ñé (ùë¢‚àó , ùë¢0 ) 1+3ùúà
‚éü

for the objective, which is then minimized to obtain a new test point.




where


(6.21)
It is easy to see that the oracle complexity, i.e. the number of proximal
calls for each ùëò is 2(ùëñùëò + 1). Further, ùêøùëò+1 = 2ùëñùëò ‚àí1 ùêøùëò , which means that operations, is approximately the same. Indeed, the number of oracle the total number of the oracle calls up to iteration ùëÅ is  ùëÅ‚àí1 2(ùëñ + 1) = ‚àëùëÅ ‚àí1 2(2 log2 ùêøùëò+1 ) = 4ùëÅ + 2 log2 ùêøùëÅ , i.e. is, up to a logarithmic

ùêø ‚â•
( ) ‚à∂=  1 ‚àí ùúà 1 1+ùúà
1 + ùúà ùõø
2
1+ùúà
ùúà
(6.22)
term, four times larger than ùëÅ . The obtained oracle complexity coin-
cides up to a constant factor with the lower bound (Nemirovski and

with the convention that 00 = 1. We illustrate this by Figure 3 where we plot a quadratic bound in the r.h.s. of (6.21) with ùõø = 0 and a
tions with H√∂lder-continuous gradients. In the particular case ùúà = 0, we Yudin, 1983) for first-order methods applied to minimization of func-
ùêø2 ùê∑‚Ñé (ùë¢‚àó ,ùë¢0 )

quadratic bound can not be an upper bound for ùëì (ùë¶) for any ùêø > 0, and
the positive shift allows to construct an upper bound. Thus, it is suf-
ficient to equip the A-BPGM with a backtracking line-search to obtain

gence rate 1‚àï ùëò, which is typical for general non-smooth minimization. In the opposite case of smooth minimization corresponding to ùúà = 1, we
ùêø ùê∑ (ùë¢‚àó ,ùë¢0 )

sal Accelerated Bregman Proximal Gradient Method (U-A-BPGM). A key step is the potentially non-monotone adjustment of the local Lipschitz
gradient estimate ùêøùëò .
timal convergence rate 1‚àïùëò2. The same idea can be used to obtain uni-
versal version of BPGM (Nesterov, 2015). One can also use the strong
convexity assumption to obtain faster convergence rate of U-A-BPGM

		either by restarts (Kamzolov et al., 2020; Roulet and d‚ÄôAspremont,

The Universal Accelerated Bregman Proximal Gradient Method (U-A-BPGM)
Input: Pick ùë•0 = ùë¢0 = ùë¶0 ‚àà dom(ùëü) ‚à© ùñ∑‚ó¶, ùúÄ > 0, 0 < ùêø0 < ùêø(ùúÄ‚àï2), set
ùê¥0 = 0
General step: For ùëò = 0, 1, ‚Ä¶ do:
Find the smallest integer ùëñ	0 such that if one defines ùõº
2017), or by incorporating the strong convexity parameter in the steps (Stonyakin et al., 2020). The same backtracking line-search can be ap-
plied in a much simpler way if one knows that ùëì is ùêøùëì -smooth with
tice caused by a pessimistic estimate for ùêøùëì (Dvinskikh et al., 2020; some unknown Lipschitz constant or to achieve acceleration in prac-
Dvurechensky et al., 2016; 2018b; Malitsky and Pock, 2018; Nesterov,

ùëò
ùëñ ‚àí1	2
ùëò+1
2013; Tran-Dinh et al., 2018). The idea is to use the standard exact ‚Äùde-

from the quadratic equation ùê¥ùëò + ùõºùëò+1 = 2 ùëò
ùê¥ùëò+1 = ùê¥ùëò + ùõºùëò+1 ,
sets ùë¶ùëò+1 = ùõºùëò+1 ùë¢ùëò +  ùê¥ùëò  ùë•ùëò,
ùêøùëòùõºùëò+1 , sets
scent Lemma‚Äù inequality in each step of the accelerated method.
The idea of universal methods turned out to be very productive and

sets ùë¢ùëò+1 =
ùê¥ùëò+1
ùê¥ùëò+1
several extensions have been proposed in the literature, including uni- versal primal-dual methods (Baimurzina et al., 2019), universal method

argminùë•‚ààùñ∑ ùõºùëò+1 ùëì (ùë¶ùëò+1) + ùëì ‚Ä≤(ùë¶ùëò+1), ùë• ‚àí ùë¶ùëò+1 + ùëü(ùë•) + ùê∑‚Ñé (ùë•, ùë¢ùëò) ,
sets ùë•ùëò+1 = ùõºùëò+1 ùë¢ùëò+1 +  ùê¥ùëò  ùë•ùëò , then it holds that ùëì (ùë•ùëò+1) ‚â§
for convex and non-convex optimization (Ghadimi et al., 2019), and a universal primal-dual hybrid of accelerated gradient method with con-



ùëì (ùë¶ùëò+1) + ùëì ‚Ä≤(ùë¶ùëò+1), ùë•ùëò+1 ‚àí ùë¶ùëò+1
+ 2ùëñùëò ‚àí1 ùêøùëò
ùë•ùëò+1 ‚àí ùë¶ùëò+1 2 + ùúÄùõºùëò+1 .
(Nesterov et al., 2020). The above-described method is not the only way

2
Set ùêøùëò+1 = 2ùëñùëò ‚àí1 ùêøùëò and go to the next iterate ùëò.
We first observe that for suÔ¨Éciently large ùëñ , 2ùëñ ‚àí1 ùêø
‚Äñ	2ùê¥ùëò+1

‚â• ùêø( ùúÄùõºùëò+1 ), see
to obtain adaptive and universal methods for smooth and non-smooth optimization problems. An alternative way which uses the norm of the current (sub)gradient to define the step-size was initiated probably by Polyak (1987) and became very popular in stochastic optimization for


Nesterov (2015, p.396). This means that the process of finding ùëñùëò is finite
since the condition which is checked for each ùëñùëò is essentially (6.21) with
ùõø	ùúÄùõºùëò+1 . The proof of convergence of (U-A-BPGM) follows essentially
2ùê¥ùëò+1
it was possible to obtain for ùúà ‚àà {0, 1} universal accelerated optimiza-
tion method (Levy et al., 2018) and universal methods for variational
inequalities and saddle-point problems (Bach and Levy, 2019).



Connection between Accelerated method and Conditional Gradient

In this subsection we describe how a variant of conditional gradient method can be obtained as a particular case of A-BPGM with inexact
means that the change of (3.12) to (3.14) with Œî = Œ©2 leads to an addi- tive term  Œ©2  in the r.h.s. of (6.5):
ùê¥ùëò+1
Œ®(ùë•ùëò+1) ‚â§  ùê¥ùëò  Œ®(ùë•ùëò) + ùõºùëò+1 Œ®(ùë¢) +  1  ùê∑ (ùë¢, ùë¢ùëò) ‚àí  1  ùê∑ (ùë¢, ùë¢ùëò+1) +  Œ©2  ,  ùë¢ ‚àà ùñ∑.

Bregman Proximal step. We assume that ùëì is ùêøùëì -smooth and for sim-
ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1
ùê¥ùëò+1
(6.24)

plicity choose ‚Ñé to be the squared Euclidean norm ‚Ñé(ùë•) = 1 ùë• 2. Since

2
we consider a conditional gradient method, it is natural to assume that
Multiplying both sides of the last inequality by ùê¥ùëò+1 , summing these in-

the set ùñ∑ is bounded with maxùë•,ùë¢‚ààùñ∑
ùê∑ (ùë•, ùë¢) ‚â§ Œ©2	1  2
2 (ùñ∑). We fol-
equalities from ùëò = 0 to ùëò = ùëÅ ‚àí 1, and using that ùê¥ùëÅ ‚àí ùê¥0 =
ùëÅ ‚àí1 ùõºùëò+1 ,

2 ‚Äñ‚ãÖ‚Äñ
we obtain

vation of is that the Prox-Mapping in A-BPGM can be calculated inex-	ùëÅ
actly by applying the generalized linear oracle given in Definition 5.2.
0	ùëÅ	0	‚Ñé
‚Ñé
(6.25)

The idea is very similar to the conditional gradient sliding described in Section 5.3.4 with the difference that here we implement an approx- imate Bregman Proximal step using only one step of the generalized
Since ùê¥0 = 0, we can choose ùë¢ = ùë•‚àó ‚àà argmin{ùê∑‚Ñé (ùë¢, ùë¢0) ùë¢ ‚àà ùñ∑‚àó}, so that, for all ùëÅ	1,

conditional gradient method. The resulting algorithm is listed below
Œ®(ùë•ùëÅ ) ‚àí Œ®
(ùñ∑) ‚â§ ùê∑‚Ñé (ùë•‚àó, ùë¢0) + ùëÅ Œ©2 ‚â§ Œ©2
+ ùëÅ Œ©2

with the only difference with A-BPGM being the change of the Breg-
man Proximal step ùë¢ùëò+1 =	( ùëò	‚àáùëì (ùë¶ùëò+1)) to the step ùë¢ùëò+1 =
min
ùê¥ùëÅ	ùê¥ùëÅ
2ùê¥	ùê¥	,

ùñ∑,ùõº
ùëò+1
ùõºùëò+1 ùëü ùë¢ , ùõºùëò+1
ùëü(ùõºùëò+1 ‚àáùëì (ùë¶ùëò+1)) given by generalized linear oracle.
which, given the lower bound ùê¥ùëÅ
(ùëÅ +1)2 leads to the final result for
4ùêøùëì

the convergence rate of this inexact A-BPGM implemented via general- ized linear oracle:

Conditional Gradient Method by A-BPGM with Approximate Bregman Proximal Step
Input: pick ùë•0 = ùë¢0 = ùë¶0 ‚àà dom(ùëü) ‚à© ùñ∑‚ó¶, set ùê¥0 = 0
Œ®(ùë•ùëÅ ) ‚àí Œ®min
(ùñ∑) ‚â§ 2ùêøùëì Œ©2
(ùëÅ + 1)2
+ 4ùêøùëì Œ©2
ùëÅ + 1

General step: For ùëò = 0, 1, ‚Ä¶ do:
Find ùõºùëò+1 from quadratic equation ùê¥ùëò + ùõºùëò+1 = ùêøùëì ùõº2
. Set
Thus, we obtain a variant of conditional gradient method with the
same convergence rate 1‚àïùëÅ as for the standard conditional gradient

ùê¥ùëò+1
= ùê¥ùëò
+ ùõº
ùëò+1 .
ùëò+1
method. Using the same approach, but with U-A-BPGM as the basis

Set ùë¶ùëò+1 = ùõºùëò+1 ùë¢ùëò +  ùê¥ùëò  ùë•ùëò.
method, one can obtain a universal version of conditional gradient

ùê¥ùëò+1
ùê¥ùëò+1
method (Stonyakin et al., 2020) for minimizing objectives with H√∂lder-

Set (Approximate Bregman proximal step by generalized linear oracle)
ùë¢Gùëò+1 = argminùë•‚ààùñ∑ ùõºùëò+1 ùëì (ùë¶ùëò+1) + ‚ü®‚àáùëì (ùë¶ùëò+1), ùë• ‚àí ùë¶ùëò+1‚ü© + ùëü(ùë•)	=
continuous gradient. The bounds in this case a similar to the ones ob- tained in a more direct universal method in Nesterov (2018a). Similar


Set ùë•ùëò+1 = ùõºùëò+1 ùë¢ùëò+1 +  ùê¥ùëò  ùë•ùëò .

ùê¥ùëò+1
ùê¥ùëò+1
Conclusion





A-BPGM is in one simple change of the step for ùë¢ùëò+1, to obtain the con- Since the difference between such conditional gradient method and
vergence rate of the former, it is suÔ¨Écient to track, what changes such approximate Bregman Proximal step entails in the convergence rate proof for A-BPGM. In other words, we need to understand what hap- pens with the proof for A-BPGM if the Bregman Proximal step is made inexactly by applying the generalized linear oracle. The first important difference is that we need an inexact version of inequality (3.12), which was used in the convergence proof of A-BPGM and which the result of the exact Bregman Proximal step. To obtain its inexact version, let us denote
ùúë(ùë•) = ùõºùëò+1 ùëì (ùë¶ùëò+1) + ‚àáùëì (ùë¶ùëò+1), ùë• ‚àí ùë¶ùëò+1 + ùëü(ùë•) .
set ùñ∑ to obtain ùë¢ùëò+1. Thus, by the optimality condition, we have that Then generalized linear oracle actually minimizes this function on the there exists ùúâ ‚àà ùúïùúë(ùë¢ùëò+1) such that ùúâ, ùë¢ùëò+1 ‚àí ùë•  0 for all ùë• ‚àà ùñ∑. Now
we remind that the Bregman Proximal step in A-BPGM minimizes
ùúë(ùë•) + ùê∑‚Ñé (ùë•, ùë¢ùëò). These observations allow to estimate the inexactness
of the Bregman Proximal step implemented via generalized linear ora-
We close this survey, with a very important fact which Nesterov writes in the introduction of his important textbook (Nesterov, 2018b): in general, optimization problems are unsolvable. Convex programming stands out from this general fact, since it describes a significantly large class of model problems, with important practical applications, for which general solution techniques have been developed within the mathematical framework of interior-point techniques. However, mod- ern optimization problems are large-scale in nature, which renders these polynomial time methods impractical. First-order methods have become the gold standard in balancing cheap iterations with low solution accu- racy, and many theoretical and practical advances having been made in the last 20 years.
Despite the fact that convex optimization is approaching the state
of being a primitive similar to linear algebra techniques, we foresee that the development of first-order methods has not come to a halt yet. In connection with stochastic inputs, the combination of acceler- ation techniques with other performance boosting tricks, like variance reduction, incremental techniques, as well as distributed optimization, still promises to produce some new innovations. On the other hand,

cle. Indeed, for ùë¢ùëò+1 = G
ùñ∑,ùõºùëò+1 ùëü
(ùõºùëò+1
‚àáùëì (ùë¶ùëò+1))
there is also still much room for improvement of algorithms for opti- mization problems which do not admit a prox-friendly geometry. Dis-

+ ‚àá‚Ñé(ùë¢ùëò+1) ‚àí ‚àá‚Ñé(ùë¢ùëò), ùë¢ùëò+1 ‚àí ùë• ‚â§ ‚àá (ùë¢ùëò+1) ‚àí ‚àá‚Ñé(ùë¢ùëò), ùë¢ùëò+1 ‚àí ùë•
‚ü®ùúâ
tributed optimization, in particular in the context of federated learning

‚Ñé	‚Ñé	‚Ñé
max  ùê∑ (ùë•, ùë¢)  Œ©2 . This inequality provides inexact version of the where we used three-point identity in Lemma 3.3 and that optimality condition (3.10) in the problem minùë•‚ààùñ∑{ùúë(ùë•) + ùê∑‚Ñé (ùë•, ùë¢ùëò)}, i.e. (3.13) with Œî = Œ©2 . This in order leads to (3.14) with Œî = Œ©2 , which is
the desired inexact version of (3.12).
Let us now see, how this affects the convergence rate proof of A- BPGM. Inequality (3.12) was used in the analysis only in (6.5). This

recent review of federated learning and (Gorbunov et al., d) for a re- cent review of distributed optimization. Another important focus in the research in optimization methods is now on numerical methods for non- convex optimization motivated by training of deep neural networks, see Danilova et al. (2020); Sun (2019) for a recent review. A number of open questions remain in the theory of first-order methods for variational in- equalities and saddle-point problems, mainly in the case of variational inequalities with non-monotone operators. In particular, recently the



authors of (Cohen et al., 2021) observed a connection between extra- gradient methods for monotone variational inequalities and accelerated first-order methods. Thus, as we emphasize in this survey, new con- nections, that are still continuously being discovered between different methods and different formulations, can lead to new understanding and developments in this lively field of first-order methods.

Declaration of Competing Interest

The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.

Acknowledgment

The authors are grateful to Yurii Nesterov and Alexander Gas- nikov for fruitful discussions. Mathias Staudigl thanks the COST Action CA16228 (European Network for Game Theory), the FMJH Program PGMO and from the support of EDF (Project ‚ÄùPrivacy preserving algo- rithms for distributed control of energy markets‚Äù) for its support. The research of Pavel Dvurechensky is supported by the Ministry of Science and Higher Education of the Russian Federation (Goszadaniye) No.075- 00337-20-03, project No. 0714-2020-0005.

References

Alacaoglu, A., Tran Dinh, Q., Fercoq, O., Cevher, V., 2017. Smooth primal-dual co- ordinate descent algorithms for nonsmooth convex optimization. In: Guyon, I., Luxburg, U.V., Bengio, S., Wallach, H., Fergus, R., Vishwanathan, S., Garnett, R. (Eds.), Advances in Neural Information Processing Systems, Vol. 30. Curran Asso- ciates, Inc., pp. 5852‚Äì5861.
Allen-Zhu, Z., 2017. Katyusha: The first direct acceleration of stochastic gradient methods. In: Proceedings of the 49th Annual ACM SIGACT Symposium on Theory of Computing, STOC 2017. ACM, New York, NY, USA, pp. 1200‚Äì1205.
Allen-Zhu, Z., Hazan, E., 2016. Optimal black-box reductions between optimization ob- jectives. In: Lee, D., Sugiyama, M., Luxburg, U., Guyon, I., Garnett, R. (Eds.), Ad- vances in Neural Information Processing Systems, Vol. 29. Curran Associates, Inc.,
pp. 1614‚Äì1622.
Alvarez, F., Bolte, J., Brahic, O., 2004. Hessian Riemannian gradient flows in convex pro- gramming. SIAM Journal on Control and Optimization 43 (2), 477‚Äì501.
Andersen, E.D., Andersen, K.D., 2000. The Mosek Interior Point Optimizer for Linear Pro- gramming: An Implementation of the Homogeneous Algorithm. Springer US, Boston, MA, pp. 197‚Äì232.
Anikin, A.S., Gasnikov, A.V., Dvurechensky, P.E., Tyurin, A.I., Chernov, A.V., 2017. Dual approaches to the minimization of strongly convex functionals with a simple structure under aÔ¨Éne constraints. Computational Mathematics and Mathematical Physics 57 (8), 1262‚Äì1276.
Arrow, K., Hurwicz, L., Uzawa, H., 1958. Studies in linear and non-linear programming. In: Chenery, H., Johnson, S., Karlin, S., Marschak, T., Solow, R. (Eds.), Stanford Math- ematical Studies in the Social Sciences, Vol. II. Stanford University Press, Stanford.
Attouch, H., Bolte, J., Redont, P., Teboulle, M., 2004. Singular Riemannian barrier meth- ods and gradient-projection dynamical systems for constrained optimization. Opti- mization 53 (5-6), 435‚Äì454.
Attouch, H., Cabot, A., Frankel, P., Peypouquet, J., 2011. Alternating proximal algorithms for linearly constrained variational inequalities: application to domain decomposition for pde‚Äôs. Nonlinear Analysis: Theory, Methods & Applications 74 (18), 7455‚Äì7473.
Attouch, H., Chbani, Z., Fadili, J., Riahi, H., 2020. First-order optimization algo- rithms via inertial systems with hessian driven damping. Mathematical Programming doi:10.1007/s10107-020-01591-1.
Attouch, H., Chbani, Z., Peypouquet, J., Redont, P., 2018. Fast convergence of inertial dy- namics and algorithms with asymptotic vanishing viscosity. Mathematical Program- ming 168 (1-2), 123‚Äì175.
Attouch, H., Redont, P., Soubeyran, A., 2007. A new class of alternating proximal min- imization algorithms with costs-to-move. SIAM Journal on Optimization 18 (3), 1061‚Äì1081.
Attouch, H., Teboulle, M., 2004. Regularized lotka-volterra dynamical system as contin- uous proximal-like method in optimization. Journal of Optimization Theory and Ap- plications 121 (3), 541‚Äì570.
Auslender, A., Teboulle, M., 2006. Asymptotic cones and functions in optimization and variational inequalities. Springer Science & Business Media.
Auslender, A., Teboulle, M., 2006. Interior gradient and proximal methods for convex and conic optimization. SIAM Journal on Optimization 16 (3), 697‚Äì725.
Auslender, A., Teboulle, M., 2009. Projected subgradient methods with non-euclidean dis- tances for non-differentiable convex minimization and variational inequalities. Math- ematical Programming 120 (1), 27‚Äì48.
Bach, F., 2015. Duality between subgradient and conditional gradient methods. SIAM Journal on Optimization 25 (1), 115‚Äì129.
Bach, F., Levy, K.Y., 2019. A universal algorithm for variational inequalities adaptive to smoothness and noise. In: Beygelzimer, A., Hsu, D. (Eds.), Proceedings of the Thir- ty-Second Conference on Learning Theory, Vol. 99 of Proceedings of Machine Learn- ing Research, PMLR, Phoenix, USA, pp. 164‚Äì194.
Baes, M., 2009. Estimate sequence methods: extensions and approximations, Institute for Operations Research. ETH, Z√ºrich, Switzerland.
Bah, B., Rauhut, H., Terstiege, U., Westdickenberg, M., 2019. Learning deep linear neural networks: Riemannian gradient flows and convergence to global minimizers. Infor- mation and Inference: A Journal of the IMAIaaa039.
Baimurzina, D.R., Gasnikov, A.V., Gasnikova, E.V., Dvurechensky, P.E., Ershov, E.I., Kubentaeva, M.B., Lagunovskaya, A.A., 2019. Universal method of searching for equi- libria and stochastic equilibria in transportation networks. Computational Mathemat- ics and Mathematical Physics 59 (1), 19‚Äì33.
Banert, S., Bo≈¢, R.I., Csetnek, E.R., 2021. Fixing and extending some recent results on the admm algorithm. Numerical Algorithms 86 (3), 1303‚Äì1325.
Bauschke, H., Borwein, J., Combettes, P., 2003. Bregman monotone optimization algo- rithms. SIAM Journal on Control and Optimization 42 (2), 596‚Äì636.
Bauschke, H.H., Bolte, J., Teboulle, M., 2016. A descent lemma beyond lipschitz gradient continuity: First-order methods revisited and applications. Mathematics of Operations Research 42 (2), 330‚Äì348.
Bauschke, H.H., Combettes, P.L., 2016. Convex Analysis and Monotone Operator Theory in Hilbert Spaces. Springer - CMS Books in Mathematics.
Bayandina, A., Dvurechensky, P., Gasnikov, A., Stonyakin, F., Titov, A., 2018. Mirror de- scent and convex optimization problems with non-smooth inequality constraints. In: Giselsson, P., Rantzer, A. (Eds.), Large-Scale and Distributed Optimization. Springer International Publishing, pp. 181‚Äì215. Ch. 8
Beck, A., 2017. First-Order Methods in Optimization. Society for Industrial and Applied Mathematics.
Beck, A., Guttmann-Beck, N., 2019. FOM ‚Äìa matlab toolbox of first-order methods for solving convex optimization problems. Optimization Methods and Software 34 (1), 172‚Äì193.
Beck, A., Shtern, S., 2017. Linearly convergent away-step conditional gradient for non-strongly convex functions. Mathematical Programming 164 (1-2), 1‚Äì27.
Beck, A., Teboulle, M., 2003. Mirror descent and nonlinear projected subgradient methods for convex optimization. Operations Research Letters 31 (3), 167‚Äì175.
Beck, A., Teboulle, M., 2004. A conditional gradient method with linear rate of conver- gence for solving convex linear systems. Mathematical Methods of Operations Re- search 59 (2), 235‚Äì247.
Beck, A., Teboulle, M., 2009. A fast iterative shrinkage-thresholding algorithm for linear inverse problems. SIAM Journal on Imaging Sciences 2 (1), 183‚Äì202.
Beck, A., Teboulle, M., 2009. Gradient-based algorithms with applications to signal re- covery. In: Palomar, D.P., Eldar, Y.C. (Eds.), Convex optimization in signal processing and communications. Cambridge University Press, pp. 42‚Äì88.
Beck, A., Teboulle, M., 2012. Smoothing and first order methods: A unified framework.
SIAM Journal on Optimization 22 (2), 557‚Äì580.
Ben-Tal, A., Margalit, T., Nemirovski, A., 2001. The ordered subsets mirror descent opti- mization method with applications to tomography. SIAM Journal on Optimization 12 (1), 79‚Äì108.
Ben-Tal, A., Nemirovski, A., 2020. Lectures on Modern Convex Opti- mization (Lecture Notes). Personal web-page of A. Nemirovski. URL https://www2.isye.gatech.edu/~nemirovs/LMCOLN2020WithSol.pdf
Bena√Øm, M., 1998. Recursive algorithms, urn processes, and the chaining number of chain recurrent sets. Ergodic Theory and Dynamical Systems 18, 53‚Äì87.
Benveniste, A., M√©tivier, M., Priouret, P., 1990. Adaptive Algorithms and Stochastic Ap- proximations. Springer, Berlin.
Bian, W., Chen, X., 2015. Linearly constrained non-lipschitz optimization for image restoration. SIAM Journal on Imaging Sciences 8 (4), 2294‚Äì2322.
Bian, W., Chen, X., Ye, Y., 2015. Complexity analysis of interior point algorithms for non-lipschitz and nonconvex minimization. Mathematical Programming 149 (1), 301‚Äì327.
Bolte, J., Nguyen, T.P., Peypouquet, J., Suter, B.W., 2017. From error bounds to the com- plexity of first-order descent methods for convex functions. Mathematical Program- ming 165 (2), 471‚Äì507.
Bolte, J., Teboulle, M., 2003. Barrier operators and associated gradient-like dynamical systems for constrained minimization problems. SIAM Journal on Control and Opti- mization 42 (4), 1266‚Äì1292.
Bomze, I.M., Mertikopoulos, P., Schachinger, W., Staudigl, M., 2019. Hessian barrier algo- rithms for linearly constrained optimization problems. SIAM Journal on Optimization 29 (3), 2100‚Äì2127.
Bottou, L., Curtis, F., Nocedal, J., 2018. Optimization methods for large-scale machine learning. SIAM Review 60 (2), 223‚Äì311.
Boyd, S., Parikh, N., Chu, E., Peleato, B., Eckstein, J., 2011. Distributed optimization and statistical learning via the alternating direction method of multipliers. Foundations and Trends¬Æ in Machine learning 3 (1), 1‚Äì122.
Boyd, S., Vandenberghe, L., 2004. Convex optimization. Cambridge university press.
Bruckstein, A., Donoho, D., Elad, M., 2009. From sparse solutions of systems of equations to sparse modeling of signals and images. SIAM Review 51 (1), 34‚Äì81.
Bubeck, S., 2015. Convex optimization: Algorithms and complexity. Foundations and Trends in Machine Learning 8 (3-4), 231‚Äì357.
B√ºhlmann, P., van de Geer, S., 2011. Statistics for high-dimensional data. Springer Series in Statistics. Springer-Verlag Berlin Heidelberg.
B√πi, M.N., Combettes, P.L., 2021. Bregman forward-backward operator splitting. Set-Val- ued and Variational Analysis 29 (3), 583‚Äì603.
Candes, E., Tao, T., 2007. The Dantzig selector: Statistical estimation when ùëù is much
larger than ùëõ. The Annals of Statistics 35 (6), 2313‚Äì2351.



Candes, E.J., Romberg, J., Tao, T., 2006. Robust uncertainty principles: exact signal re- construction from highly incomplete frequency information. IEEE Transactions on Information Theory 52 (2), 489‚Äì509.
Canon, M.D., Cullum, C.D., 1968. A tight upper bound on the rate of convergence of frank-wolfe algorithm. SIAM Journal on Control 6 (4), 509‚Äì516.
Carderera, A., Besancon, M., Pokutta, S.. Simple steps are all you need: Frank-wolfe and generalized self-concordant functions.
Carderera, A., Diakonikolas, J., Lin, C.Y., Pokutta, S., 2021. Parameter-free locally accel- erated conditional gradients. In: Meila, M., Zhang, T. (Eds.), Proceedings of the 38th International Conference on Machine Learning, Vol. 139 of Proceedings of Machine Learning Research, PMLR, pp. 1283‚Äì1293.
Censor, Y., Zenios, S.A., 1992. Proximal minimization algorithm withd-functions. Journal of Optimization Theory and Applications 73 (3), 451‚Äì464.
Cesa-Bianchi, N., Lugosi, G., 2006. Prediction, Learning, and Games. Cambridge University Press.
Chambolle, A., Pock, T., 2011. A first-order primal-dual algorithm for convex problems with applications to imaging. Journal of Mathematical Imaging and Vision 40 (1), 120‚Äì145.
Chen, C., He, B., Ye, Y., Yuan, X., 2016. The direct extension of admm for multi-block con- vex minimization problems is not necessarily convergent. Mathematical Programming 155 (1-2), 57‚Äì79.
Chen, G., Teboulle, M., 1993. Convergence analysis of a proximal-like minimization algo- rithm using Bregman functions. SIAM Journal on Optimization 3 (3), 538‚Äì543.
Chen, Y., Lan, G., Ouyang, Y., 2017. Accelerated schemes for a class of variational in- equalities. Mathematical Programming. 10.1007/s10107-017-1161-4
Chernov, A., Dvurechensky, P., Gasnikov, A., 2016. Fast primal-dual gradient method for strongly convex minimization problems with linear constraints. In: Kochetov, Y., Khachay, M., Beresnev, V., Nurminski, E., Pardalos, P. (Eds.), Discrete Optimiza- tion and Operations Research: 9th International Conference, DOOR 2016, Vladivos- tok, Russia, September 19-23, 2016, Proceedings. Springer International Publishing,
pp. 391‚Äì403.
Cohen, M., Diakonikolas, J., Orecchia, L., 2018. On acceleration with noise-corrupted gra- dients. In: Dy, J., Krause, A. (Eds.), Proceedings of the 35th International Conference on Machine Learning, Vol. 80 of Proceedings of Machine Learning Research, PMLR. Stockholmsm√§ssan, Stockholm Sweden, pp. 1019‚Äì1028.
Cohen, M.B., Sidford, A., Tian, K., 2021. Relative lipschitzness in extragradient methods and a direct recipe for acceleration. In: Lee, J.R. (Ed.), 12th Innova- tions in Theoretical Computer Science Conference (ITCS 2021), pp. 62:1‚Äì62:18. doi:10.4230/LIPIcs.ITCS.2021.62. Vol. 185 of Leibniz International Proceedings in Informatics (LIPIcs), Schloss Dagstuhl‚ÄìLeibniz-Zentrum f√ºr Informatik, Dagstuhl, Ger- many
Combettes, P.L., Pesquet, J.C., 2011. Proximal splitting methods in signal processing.
Springer, pp. 185‚Äì212.
Combettes, P.L., Wajs, V.R., 2005. Signal recovery by proximal forward-backward split- ting. Multiscale Modeling & Simulation 4 (4), 1168‚Äì1200.
Cox, B., Juditsky, A., Nemirovski, A., 2014. Dual subgradient algorithms for large-scale nonsmooth learning problems. Mathematical Programming 148 (1), 143‚Äì180.
Damla Ahipasaoglu, S., Sun, P., Todd, M.J., 2008. Linear convergence of a modified frank‚Äìwolfe algorithm for computing minimum-volume enclosing ellipsoids. Optimi- sation Methods and Software 23 (1), 5‚Äì19.
Danilova, M., Dvurechensky, P., Gasnikov, A., Gorbunov, E., Guminov, S., Kam- zolov, D., Shibaev, I., 2020. Recent theoretical advances in non-convex optimization. arXiv:2012.06188Accepted to be a part of Springer volume ‚ÄùHigh Dimensional Opti- mization and Probability‚Äù.
d‚ÄôAspremont, A., 2008. Smooth optimization with approximate gradient. SIAM J. on Op- timization 19 (3), 1171‚Äì1183.
d‚ÄôAspremont, A., Scieur, D., Taylor, A.. Acceleration methods.
Daubechies, I., Defrise, M., De Mol, C., 2004. An iterative thresholding algorithm for linear inverse problems with a sparsity constraint. Communications on pure and applied mathematics 57 (11), 1413‚Äì1457.
Davis, D., Drusvyatskiy, D., Kakade, S., Lee, J.D., 2020. Stochastic subgradient method converges on tame functions. Foundations of Computational Mathematics 20 (1), 119‚Äì154.
Devolder, O., 2013. Exactness, inexactness and stochasticity in first-order methods for large-scale convex optimization Ph.d. thesis.
Devolder, O., Glineur, F., Nesterov, Y., 2014. First-order methods of smooth convex opti- mization with inexact oracle. Mathematical Programming 146 (1), 37‚Äì75.
Diakonikolas, J., Orecchia, L., 2018. Alternating randomized block coordinate descent. In: Dy, J., Krause, A. (Eds.), Proceedings of the 35th International Conference on Ma- chine Learning, Vol. 80 of Proceedings of Machine Learning Research, PMLR, Stock- holmsm√§ssan, Stockholm Sweden, pp. 1224‚Äì1232.
Doljansky, M., Teboulle, M., 1998. An interior proximal algorithm and the exponential multiplier method for semidefinite programming. SIAM Journal on Optimization 9 (1), 1‚Äì13.
Donoho, D.L., 2006. Compressed sensing. IEEE Transactions on Information Theory 52 (4), 1289‚Äì1306.
Dragomir, R.-A., Taylor, A.B., d‚ÄôAspremont, A., Bolte, J., 2021. Optimal complex- ity and certification of bregman first-order methods. Mathematical Programming doi:10.1007/s10107-021-01618-1.
Duchi, J., Hazan, E., Singer, Y., 2011. Adaptive subgradient methods for online learning and stochastic optimization. Journal of Machine Learning Research 12, 2121‚Äì2159. (Jul.)
Duchi, J., Shalev-Shwartz, S., Singer, Y., Tewari, A., 2010. Composite objective mirror descent. In: COLT 2010 - The 23rd Conference on Learning Theory, pp. 14‚Äì26.
Duchi, J.C., Ruan, F., 2018. Stochastic methods for composite and weakly convex opti- mization problems. SIAM Journal on Optimization 28 (4), 3229‚Äì3259.
Dunn, J.C., 1979. Rates of convergence for conditional gradient algorithms near singu- lar and nonsingular extremals. SIAM Journal on Control and Optimization 17 (2), 187‚Äì211.
Dvinskikh, D., Gorbunov, E., Gasnikov, A., Dvurechensky, P., Uribe, C.A., 2019. On primal and dual approaches for distributed stochastic convex optimization over networks. In: 2019 IEEE 58th Conference on Decision and Control (CDC), pp. 7435‚Äì7440.
Dvinskikh, D., Ogaltsov, A., Gasnikov, A., Dvurechensky, P., Spokoiny, V., 2020. On the line-search gradient methods for stochastic optimization. IFAC-PapersOnLine 53 (2), 1715‚Äì1720.
Dvurechensky, P., Dvinskikh, D., Gasnikov, A., Uribe, C.A., Nediƒá, A., 2018. Decentral- ize and randomize: Faster algorithm for Wasserstein barycenters. In: Bengio, S., Wallach, H., Larochelle, H., Grauman, K., Cesa-Bianchi, N., Garnett, R. (Eds.), Ad- vances in Neural Information Processing Systems, Vol. 31. Curran Associates, Inc.,
pp. 10783‚Äì10793. NeurIPS 2018
Dvurechensky, P., Gasnikov, A., 2016. Stochastic intermediate gradient method for convex problems with stochastic inexact oracle. Journal of Optimization Theory and Appli- cations 171 (1), 121‚Äì145.
Dvurechensky, P., Gasnikov, A., Gasnikova, E., Matsievsky, S., Rodomanov, A., Usik, I., 2016. Primal-dual method for searching equilibrium in hierarchical congestion popu- lation games. In: Supplementary Proceedings of the 9th International Conference on Discrete Optimization and Operations Research and Scientific School (DOOR 2016) Vladivostok, Russia, September 19 - 23, 2016, pp. 584‚Äì595.
Dvurechensky, P., Gasnikov, A., Kroshnin, A., 2018. Computational optimal transport: Complexity by accelerated gradient descent is better than by Sinkhorn‚Äôs algorithm. In: Dy, J., Krause, A. (Eds.), Proceedings of the 35th International Conference on Machine Learning, Vol. 80 of Proceedings of Machine Learning Research, pp. 1367‚Äì1376.
Dvurechensky, P., Gasnikov, A., Tiurin, A., Zholobov, V.. Unifying framework for acceler- ated randomized methods in convex optimization.
Dvurechensky, P., Gorbunov, E., Gasnikov, A., 2021. An accelerated directional derivative method for smooth stochastic convex optimization. European Journal of Operational Research 290 (2), 601‚Äì621.
Dvurechensky, P., Kamzolov, D., Lukashevich, A., Lee, S., Ordentlich, E., Uribe, C.A., Gasnikov, A.. Hyperfast second-order local solvers for eÔ¨Écient statistically precon- ditioned distributed optimization.
Dvurechensky, P., Ostroukhov, P., Safin, K., Shtern, S., Staudigl, M., 2020. Self-concordant analysis of frank-Wolfe algorithms. In: Daum√© III, H., Singh, A. (Eds.), Proceedings of the 37th International Conference on Machine Learning, Vol. 119 of Proceedings of Machine Learning Research, PMLR, Virtual, pp. 2814‚Äì2824.
Dvurechensky, P., Safin, K., Shtern, S., Staudigl, M.. Generalized self-concordant analysis of Frank-Wolfe algorithms.
Dvurechensky, P.E., Gasnikov, A.V., Nurminski, E.A., Stonyakin, F.S., 2020. Advances in Low-Memory Subgradient Optimization. Springer International Publishing, Cham,
pp. 19‚Äì59.
Eckstein, J., 1994. Some saddle-function splitting methods for convex programming. Op- timization Methods and Software 4 (1), 75‚Äì83.
Eckstein, J., Bertsekas, D.P., 1992. On the douglas‚Äîrachford splitting method and the proximal point algorithm for maximal monotone operators. Mathematical Program- ming 55 (1-3), 293‚Äì318.
Epelman, M., Freund, R.M., 2000. Condition number complexity of an elementary algo- rithm for computing a reliable solution of a conic linear system. Mathematical Pro- gramming 88 (3), 451‚Äì485.
Facchinei, F., Pang, J.S., 2003. Finite-dimensional variational inequalities and comple- mentarity problems - volume i and volume II. Springer Series in Operations Research.
Feizollahi, M.J., Ahmed, S., Sun, A., 2017. Exact augmented lagrangian duality for mixed integer linear programming. Mathematical Programming 161 (1), 365‚Äì387.
Fercoq, O., Qu, Z., 2020. Restarting the accelerated coordinate descent method with a rough strong convexity estimate. Computational Optimization and Applications 75 (1), 63‚Äì91.
Fercoq, O., Richt√°rik, P., 2015. Accelerated, parallel, and proximal coordinate descent.
SIAM Journal on Optimization 25 (4), 1997‚Äì2023.
Frank, M., Wolfe, P., et al., 1956. An algorithm for quadratic programming. Naval research logistics quarterly 3 (1-2), 95‚Äì110.
Freund, R.M., Grigas, P., 2016. New analysis and results for the frank‚Äìwolfe method.
Mathematical Programming 155 (1-2), 199‚Äì230.
Frostig, R., Ge, R., Kakade, S., Sidford, A., 2015. Un-regularizing: approximate proximal point and faster stochastic algorithms for empirical risk minimization. In: Bach, F., Blei, D. (Eds.), Proceedings of the 32nd International Conference on Machine Learn- ing, Vol. 37 of Proceedings of Machine Learning Research, PMLR, Lille, France,
pp. 2540‚Äì2548.
Gabay, D., 1983. Applications of the method of multipliers to variational inequalities, 15.
Elsevier, pp. 299‚Äì331. Ch. ix
Garber, D., Hazan, E., 2015. Faster rates for the frank-wolfe method over strongly-convex sets. In: 32nd International Conference on Machine Learning, ICML 2015.
Garber, D., Hazan, E., 2016. A linearly convergent variant of the conditional gradient algo- rithm under strong convexity, with applications to online and stochastic optimization. SIAM Journal on Optimization 26 (3), 1493‚Äì1528.
Gasnikov, A., Dvurechensky, P., Gorbunov, E., Vorontsova, E., Selikhanovych, D., Uribe, C.A., Jiang, B., Wang, H., Zhang, S., Bubeck, S., Jiang, Q., Lee, Y.T., Li, Y., Sid- ford, A., 2019. Near optimal methods for minimizing convex functions with lipschitz
ùëù-th derivatives. In: Beygelzimer, A., Hsu, D. (Eds.), Proceedings of the Thirty-Second
Conference on Learning Theory, Vol. 99 of Proceedings of Machine Learning Research, PMLR, Phoenix, USA, pp. 1392‚Äì1393.
Gasnikov, A.V., Dvurechensky, P.E., 2016. Stochastic intermediate gradient method for convex optimization problems. Doklady Mathematics 93 (2), 148‚Äì151.
Gasnikov, A.V., Nesterov, Y.E., 2018. Universal method for stochastic composite optimiza- tion problems. Computational Mathematics and Mathematical Physics 58 (1), 48‚Äì64.




lems with an oracle producing a (ùõø, l)-model of function at the requested point. Com- Gasnikov, A.V., Tyurin, A.I., 2019. Fast gradient descent for convex minimization prob-
putational Mathematics and Mathematical Physics 59 (7), 1085‚Äì1097.
Ghadimi, S., Lan, G., 2012. Optimal stochastic approximation algorithms for strongly con- vex stochastic composite optimization i: A generic algorithmic framework. SIAM Jour- nal on Optimization 22 (4), 1469‚Äì1492.
Ghadimi, S., Lan, G., 2013. Optimal stochastic approximation algorithms for strongly convex stochastic composite optimization, ii: Shrinking procedures and optimal al- gorithms. SIAM Journal on Optimization 23 (4), 2061‚Äì2089.
Ghadimi, S., Lan, G., Zhang, H., 2019. Generalized uniformly optimal methods for non- linear programming. Journal of Scientific Computing 79 (3), 1854‚Äì1881.
Glowinski, R., Tallec, P.L., 1989. Augmented Lagrangian and operator-splitting methods in nonlinear mechanics. SIAM.
Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., Courville, A., Bengio, Y., 2014. Generative adversarial nets. In: Advances in neural information processing systems, pp. 2672‚Äì2680.
Gorbunov, E., Danilova, M., Gasnikov, A., 2020. Stochastic optimization with heavy-tailed noise via accelerated gradient clipping. In: Larochelle, H., Ranzato, M., Hadsell, R., Balcan, M.F., Lin, H. (Eds.), Advances in Neural Information Processing Systems, Vol. 33. Curran Associates, Inc., pp. 15042‚Äì15053.
Gorbunov, E., Danilova, M., Shibaev, I., Dvurechensky, P., Gasnikov, A.. Near-optimal high probability complexity bounds for non-smooth stochastic optimization with heavy‚Äì tailed noise.
Gorbunov, E., Dvinskikh, D., Gasnikov, A.. Optimal decentralized distributed algorithms for stochastic convex optimization.
Gorbunov, E., Dvurechensky, P., Gasnikov, A.. An accelerated method for derivative-free smooth stochastic convex optimization.
Gorbunov, E., Rogozin, A., Beznosikov, A., Dvinskikh, D., Gasnikov, A., d. Recent the- oretical advances in decentralized distributed convex optimization. arXiv preprint arXiv:2011.13259Accepted to be a part of Springer volume ‚ÄùHigh Dimensional Opti- mization and Probability‚Äù.
Gower, R.M., Schmidt, M., Bach, F., Richt√°rik, P., 2020. Variance-reduced methods for machine learning. In: Proceedings of the IEEE, Vol. 108, pp. 1968‚Äì1983.
Gu√©lat, J., Marcotte, P., 1986. Some comments on wolfe‚Äôs ‚Äòaway step‚Äô. Mathematical Pro- gramming 35 (1), 110‚Äì119.
Guminov, S., Dvurechensky, P., Tupitsa, N., Gasnikov, A., 2021. On a combination of alternating minimization and Nesterov‚Äôs momentum. In: Meila, M., Zhang, T. (Eds.), Proceedings of the 38th International Conference on Machine Learning, Vol. 139 of Proceedings of Machine Learning Research, PMLR, Virtual, pp. 3886‚Äì3898.
Guminov, S.V., Nesterov, Y.E., Dvurechensky, P.E., Gasnikov, A.V., 2019. Accelerated pri- mal-dual gradient descent with linesearch for convex, nonconvex, and nonsmooth optimization problems. Doklady Mathematics 99 (2), 125‚Äì128.
Haeser, G., Liu, H., Ye, Y., 2018. Optimality condition and complexity analysis for linearly- constrained optimization without differentiability on the boundary. Mathematical Programming doi:10.1007/s10107-018-1290-4.
Hanzely, F., Richt√°rik, P., Xiao, L., 2021. Accelerated bregman proximal gradient methods for relatively smooth convex optimization. Computational Optimization and Applica- tions 79 (2), 405‚Äì440.
Helmke, U., Moore, J.B., 1996. Optimization and dynamical systems. Communications & Control Engineering. Springer Berlin Heidelberg.
Hendrikx, H., Xiao, L., Bubeck, S., Bach, F., Massoulie, L., 2020. Statistically precondi- tioned accelerated gradient method for distributed optimization. In: Daum√© III, H., Singh, A. (Eds.), Proceedings of the 37th International Conference on Machine Learn- ing, Vol. 119 of Proceedings of Machine Learning Research, PMLR, pp. 4203‚Äì4227.
Hiriart-Urrut, J.-B., Lemar√©chal, C., 2001. Fundamentals of Convex Analysis. Springer. Holloway, C.A., 1974. An extension of the frank and wolfe method of feasible directions.
Mathematical Programming 6 (1), 14‚Äì27.
Ivanova, A., Dvurechensky, P., Gasnikov, A., Kamzolov, D., 2020. Composite optimization for the resource allocation problem. Optimization Methods and Software 0 (0), 1‚Äì35. doi:10.1080/10556788.2020.1712599.
Jaggi, M., 2013. Revisiting frank-wolfe: Projection-free sparse convex optimization. Inter- national Conference on Machine Learning 427‚Äì435.
Jain, P., Kar, P., 2017. Non-convex optimization for machine learning. Found. Trends Mach. Learn. 10 (3-4), 142‚Äì336.
with applications to ùìÅ1 -minimization. Mathematical Programming 142 (1), 269‚Äì310. Juditsky, A., Kƒ±lƒ±n√ß Karzan, F., Nemirovski, A., 2013. Randomized first order algorithms
Juditsky, A., Nazin, A.V., Tsybakov, A.B., Vayatis, N., 2005. Recursive aggregation of estimators by the mirror descent algorithm with averaging. Problems of Information Transmission 41 (4), 368‚Äì384.
Juditsky, A., Nemirovski, A., 2011. First order methods for nonsmooth convex large-scale optimization, i: general purpose methods. In: Optimization for Machine Learning. MIT Press, pp. 121‚Äì148. Ch. 5
Juditsky, A., Nemirovski, A., 2011. First order methods for nonsmooth convex large-scale optimization, ii: utilizing problems structure. In: Optimization for Machine Learning. MIT Press, pp. 149‚Äì183. Ch. 6
Juditsky, A., Nesterov, Y., 2014. Deterministic and stochastic primal-dual subgradient algorithms for uniformly convex minimization. Stochastic Systems 4 (1), 44‚Äì80.
Kairouz, P., McMahan, H.B., Avent, B., Bellet, A., Bennis, M., Bhagoji, A.N., Bonawitz, K., Charles, Z., Cormode, G., Cummings, R., D‚ÄôOliveira, R.G.L., Eichner, H., Rouay- heb, S.E., Evans, D., Gardner, J., Garrett, Z., Gasc√≥n, A., Ghazi, B., Gibbons, P.B.,
Gruteser, M., Harchaoui, Z., He, C., He, L., Huo, Z., Hutchinson, B., Hsu, J., Jaggi, M., Javidi, T., Joshi, G., Khodak, M., Konecn√Ω, J., Korolova, A., Koushanfar, F., Koyejo, S., Lepoint, T., Liu, Y., Mittal, P., Mohri, M., Nock, R., √ñzg√ºr, A., Pagh, R., Qi, H., Ram-
age, D., Raskar, R., Raykova, M., Song, D., Song, W., Stich, S.U., Sun, Z., Suresh, A.T.,
Tram√®r, F., Vepakomma, P., Wang, J., Xiong, L., Xu, Z., Yang, Q., Yu, F.X., Yu, H.,
Zhao, S., 2021. Advances and open problems in federated learning. Foundations and Trends¬Æin Machine Learning 14 (1-2), 1‚Äì210. doi:10.1561/2200000083.
Kamzolov, D., Dvurechensky, P., Gasnikov, A.V., 2020. Universal intermediate gradient method for convex problems with inexact oracle. Optimization Methods and Software 0 (0), 1‚Äì28. doi:10.1080/10556788.2019.1711079.
Kerdreux, T., d‚ÄôAspremont, A., Pokutta, S., 2019. Restarting frank-wolfe. In: Chaudhuri, K., Sugiyama, M. (Eds.), Proceedings of Machine Learning Research, Vol. 89 of Proceed- ings of Machine Learning Research, PMLR, pp. 1275‚Äì1283.
Kroshnin, A., Tupitsa, N., Dvinskikh, D., Dvurechensky, P., Gasnikov, A., Uribe, C., 2019. On the complexity of approximating Wasserstein barycenters. In: Chaudhuri, K., Salakhutdinov, R. (Eds.), Proceedings of the 36th International Conference on Ma- chine Learning, Vol. 97 of Proceedings of Machine Learning Research, PMLR, Long Beach, California, USA, pp. 3530‚Äì3540.
Kuczy≈Ñski, J., Wo≈∫niakowski, H., 1992. Estimating the largest eigenvalue by the power and lanczos algorithms with a random start. SIAM Journal on Matrix Analysis and Applications 13 (4), 1094‚Äì1122.
Kushner, H.J., 1984. Approximation and Weak Convergence Methods for Random Pro- cesses. The MIT Press.
Lacoste-Julien, S., Jaggi, M., 2015. On the global linear convergence of frank-wolfe opti- mization variants. Advances in neural information processing systems 28, 496‚Äì504.
Lan, G.. The complexity of large-scale convex programming under a linear optimization oracle.
Lan, G., 2012. An optimal method for stochastic composite optimization. Mathematical Programming 133 (1), 365‚Äì397.
Lan, G., 2020. First-order and Stochastic Optimization Methods for Machine Learning.
Springer.
Lan, G., Zhou, Y., 2017. An optimal randomized incremental gradient method. Mathemat- ical Programming doi:10.1007/s10107-017-1173-0.
Lan, G., Zhou, Y., 2016. Conditional gradient sliding for convex optimization. SIAM Jour- nal on Optimization 26 (2), 1379‚Äì1409.
Lee, Y.T., Sidford, A., 2013. EÔ¨Écient accelerated coordinate descent methods and faster algorithms for solving linear systems. In: Proceedings of the 2013 IEEE 54th Annual Symposium on Foundations of Computer Science, FOCS ‚Äô13. IEEE Computer Society, Washington, DC, USA, pp. 147‚Äì156.
Levitin, E.S., Polyak, B.T., 1966. Constrained minimization methods. USSR Computational mathematics and mathematical physics 6 (5), 1‚Äì50.
Levy, K.Y., Yurtsever, A., Cevher, V., 2018. Online adaptive methods, universality and ac- celeration. In: Bengio, S., Wallach, H., Larochelle, H., Grauman, K., Cesa-Bianchi, N., Garnett, R. (Eds.), Advances in Neural Information Processing Systems, Vol. 31. Cur- ran Associates, Inc., pp. 6500‚Äì6509.
Lin, F., Fardad, M., Jovanoviƒá, M.R., 2012. Sparse feedback synthesis via the alternating direction method of multipliers. In: 2012 American Control Conference (ACC). IEEE,
pp. 4765‚Äì4770.
Lin, H., Mairal, J., Harchaoui, Z., 2015. A universal catalyst for first-order optimization. In: Proceedings of the 28th International Conference on Neural Information Processing Systems, NIPS‚Äô15. MIT Press, Cambridge, MA, USA, pp. 3384‚Äì3392.
Lin, Q., Lu, Z., Xiao, L., 2014. An accelerated proximal coordinate gradient method. In: Ghahramani, Z., Welling, M., Cortes, C., Lawrence, N.D., Weinberger, K.Q. (Eds.), Advances in Neural Information Processing Systems, Vol. 27. Curran Associates, Inc.,
pp. 3059‚Äì3067.
Lin, T., Ho, N., Chen, X., Cuturi, M., Jordan, M., 2020. Fixed-support wasserstein barycen- ters: Computational hardness and fast algorithm. In: Larochelle, H., Ranzato, M., Had- sell, R., Balcan, M.F., Lin, H. (Eds.), Advances in Neural Information Processing Sys- tems, Vol. 33. Curran Associates, Inc., pp. 5368‚Äì5380.
Lin, T., Ho, N., Cuturi, M., Jordan, M.I.. On the complexity of approximating multimarginal optimal transport.
Lin, T., Ho, N., Jordan, M., 2019. On eÔ¨Écient optimal transport: An analysis of greedy and accelerated mirror descent algorithms. In: Chaudhuri, K., Salakhutdinov, R. (Eds.), Proceedings of the 36th International Conference on Machine Learning, Vol. 97 of Proceedings of Machine Learning Research, PMLR, Long Beach, California, USA,
pp. 3982‚Äì3991.
Ljung, L., Pflug, G., Walk, H., 2012. Stochastic approximation and optimization of random systems, 17. Birkh√§user.
Lu, H., Freund, R., Nesterov, Y., 2018. Relatively smooth convex optimization by first-order methods, and applications. SIAM Journal on Optimization 28 (1), 333‚Äì354. Malitsky, Y., Pock, T., 2018. A first-order primal-dual algorithm with linesearch. SIAM
Journal on Optimization 28 (1), 411‚Äì432.
Martinet, B., 1970. R√©gularisation d‚Äôin√©quations variationnelles par approximations suc- cessives. Revue fran√ßaise d‚Äôinformatique et de recherche op√©rationnelle. S√©rie rouge 4 (R3), 154‚Äì158.
Mertikopoulos, P., Staudigl, M., 2018. On the convergence of gradient-like flows with noisy gradient input. SIAM Journal on Optimization 28 (1), 163‚Äì197.
Mertikopoulos, P., Staudigl, M., 2018. Stochastic mirror descent dynamics and their con- vergence in monotone variational inequalities. Journal of Optimization Theory and Applications 179 (3), 838‚Äì867.
Monteiro, R., Svaiter, B., 2013. An accelerated hybrid proximal extragradient method for convex optimization and its implications to second-order methods. SIAM Journal on Optimization 23 (2), 1092‚Äì1125.
Moreau, J.J., 1965. Proximit√© et dualit√© dans un espace hilbertien. Bulletin de la Soci√©t√© math√©matique de France 93, 273‚Äì299.
Necoara, I., Nesterov, Y., Glineur, F., 2019. Linear convergence of first order methods for non-strongly convex optimization. Mathematical Programming 175 (1), 69‚Äì107.
Nemirovski, A., 1982. Orth-method for smooth convex optimization. Izvestia AN SSSR, Transl.: Eng. Cybern. Soviet J. Comput. Syst. Sci 2, 937‚Äì947.



Nemirovski, A., 2004. Prox-method with rate of convergence ùëú(1‚àïùë°) for variational in-
equalities with lipschitz continuous monotone operators and smooth convex-concave saddle point problems. SIAM Journal on Optimization 15 (1), 229‚Äì251.
Nemirovski, A.S., Yudin, D.B., 1983. Problem Complexity and Method EÔ¨Éciency in Opti- mization. Wiley, New York, NY.
Nemirovskii, A., Nesterov, Y., 1985. Optimal methods of smooth convex minimization.
USSR Computational Mathematics and Mathematical Physics 25 (2), 21‚Äì30.
Nesterov, Y., 2019. Implementable tensor methods in unconstrained convex optimization.
Mathematical Programming doi:10.1007/s10107-019-01449-1.
rate  ùëú(1‚àïùëò2 ).  Soviet  Mathematics  Doklady  27  (2),  372‚Äì376. Nesterov, Y., 1983. A method of solving a convex programming problem with convergence
Nesterov, Y., 2005. Excessive gap technique in nonsmooth convex minimization. SIAM Journal on Optimization 16 (1), 235‚Äì249.
Nesterov, Y., 2005. Smooth minimization of non-smooth functions. Mathematical Pro- gramming 103 (1), 127‚Äì152.
Nesterov, Y., 2007. Dual extrapolation and its applications to solving variational inequal- ities and related problems. Mathematical Programming 109 (2), 319‚Äì344.
Nesterov, Y., 2008. Accelerating the cubic regularization of newton‚Äôs method on convex problems. Mathematical Programming 112 (1), 159‚Äì181.
Nesterov, Y., 2009. Primal-dual subgradient methods for convex problems. Mathematical Programming 120 (1), 221‚Äì259.
Nesterov, Y., 2012. EÔ¨Éciency of coordinate descent methods on huge-scale optimization problems. SIAM Journal on Optimization 22 (2), 341‚Äì362.
Nesterov, Y., 2013. Gradient methods for minimizing composite functions. Mathematical Programming 140 (1), 125‚Äì161.
Nesterov, Y., 2015. Universal gradient methods for convex optimization problems. Math- ematical Programming 152 (1), 381‚Äì404.
Nesterov, Y., 2018. Complexity bounds for primal-dual methods minimizing the model of objective function. Mathematical Programming 171 (1-2), 311‚Äì330.
Nesterov, Y., 2018. Lectures on convex optimization. Vol. 137 of Springer Optimization and Its Applications. Springer International Publishing.
Nesterov, Y., Gasnikov, A., Guminov, S., Dvurechensky, P., 2020. Primal-dual accelerated gradient methods with small-dimensional relaxation oracle. Optimization Methods and Software 1‚Äì28. doi:10.1080/10556788.2020.1731747.
Nesterov, Y., Nemirovski, A., 1994. Interior Point Polynomial methods in Convex pro- gramming. SIAM Publications.
Nesterov, Y., Spokoiny, V., 2017. Random gradient-free minimization of convex functions.
Found. Comput. Math. 17 (2), 527‚Äì566.
Nesterov, Y., Stich, S.U., 2017. EÔ¨Éciency of the accelerated coordinate descent  method  on  structured  optimization  problems.  SIAM  Jour- nal on Optimization 27 (1), 110‚Äì123. First presented in May 2015 http://www.mathnet.ru:8080/PresentFiles/11909/7_nesterov.pdf
Odor, G., Li, Y.-H., Yurtsever, A., Hsieh, Y.-P., Tran-Dinh, Q., Halabi, M.E., Cevher, V., 2016. Frank-wolfe works for non-lipschitz continuous gradient objectives: scalable poisson phase retrieval. In: 2016 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP). Ieee, pp. 6230‚Äì6234.
Opial, Z., 1967. Weak convergence of the sequence of successive approximations for non- expansive mappings. Bulletin of the American Mathematical Society 73 (4), 591‚Äì597. Parikh, N., Boyd, S., 2014. Proximal algorithms. Foundations and Trends¬Æ in Optimization
1 (3), 127‚Äì239.
Pedregosa, F., Negiar, G., Askari, A., Jaggi, M., 2020. Linearly convergent frank-wolfe with backtracking line-search. In: International Conference on Artificial Intelligence and Statistics, PMLR, pp. 1‚Äì10.
Pokutta, S., 2020. Restarting algorithms: Sometimes there is free lunch. In: Hebrard, E., Musliu, N. (Eds.), Integration of Constraint Programming, Artificial Intelligence, and Operations Research. Springer International Publishing, Cham, pp. 22‚Äì38.
Polyak, B.T., 1964. Some methods of speeding up the convergence of iteration methods.
USSR Computational Mathematics and Mathematical Physics 4 (5), 1‚Äì17.
Polyak, B.T., 1987. Introduction to Optimization. Optimization Software.
Robbins, H., Monro, S., 1951. A stochastic approximation method. The Annals of Mathe- matical Statistics 22 (3), 400‚Äì407.
Robinson, S.M., 1982. Generalized equations and their solutions, part ii: applications to nonlinear programming. In: Optimality and Stability in Mathematical Programming. Springer, pp. 200‚Äì221.
Rockafellar, R.T., 1970. Convex Analysis. Princeton University Press, Princeton.
Rockafellar, R.T., 1976. Augmented lagrangians and applications of the proximal point algorithm in convex programming. Mathematics of operations research 1 (2), 97‚Äì116. Rockafellar, R.T., 1976. Monotone operators and the proximal point algorithm. SIAM jour-
nal on control and optimization 14 (5), 877‚Äì898.
Rockafellar, R.T., Wets, R.J.B., 1998. Variational analysis. Vol. 317 of A Series of Com- prehensive Studies in Mathematics. Springer-Verlag, Berlin.
Rogozin, A., Bochko, M., Dvurechensky, P., Gasnikov, A., Lukoshkin, V., 2021. An acceler- ated method for decentralized distributed stochastic optimization over time-varying graphs. In: 2021 60th IEEE Conference on Decision and Control (CDC).
Roulet, V., d‚ÄôAspremont, A., 2017. Sharpness, restart and acceleration. In: Guyon, I., Luxburg, U.V., Bengio, S., Wallach, H., Fergus, R., Vishwanathan, S., Garnett, R. (Eds.), Advances in Neural Information Processing Systems, Vol. 30. Curran Asso- ciates, Inc., pp. 1119‚Äì1129.
Shalev-Shwartz, S., Zhang, T., 2014. Accelerated proximal stochastic dual coordinate as- cent for regularized loss minimization. In: Xing, E.P., Jebara, T. (Eds.), Proceedings of the 31st International Conference on Machine Learning, Vol. 32 of Proceedings of Machine Learning Research, PMLR, Bejing, China, pp. 64‚Äì72.
Shapiro, A., Dentcheva, D., Ruszczy≈Ñski, A., 2009. Lectures on stochastic programming.
Society for Industrial and Applied Mathematics.
Shefi, R., Teboulle, M., 2014. Rate of convergence analysis of decomposition methods based on the proximal method of multipliers for convex minimization. SIAM Journal on Optimization 24 (1), 269‚Äì297.
Shi, B., Du, S.S., Su, W., Jordan, M.I., 2019. Acceleration via symplectic discretization of high-resolution differential equations. Advances in Neural Information Processing Systems 5744‚Äì5752.
Sorin, S., 2000. A First-Course on Zero-Sum Repeated Games. Springer.
Stonyakin, F., Gasnikov, A., Dvurechensky, P., Alkousa, M., Titov, A.. Generalized Mirror Prox for monotone variational inequalities: Universality and inexact oracle.
Stonyakin, F., Tyurin, A., Gasnikov, A., Dvurechensky, P., Agafonov, A., Dvinskikh, D., Alkousa, M., Pasechnyuk, D., Artamonov, S., Piskunova, V., 2020. Inexact model: A framework for optimization and variational inequalities. Optimization Methods and Software doi:10.1080/10556788.2021.1924714.
Stonyakin, F.S., Dvinskikh, D., Dvurechensky, P., Kroshnin, A., Kuznetsova, O., Aga- fonov, A., Gasnikov, A., Tyurin, A., Uribe, C.A., Pasechnyuk, D., Artamonov, S., 2019. Gradient methods for problems with inexact model of the objective. In: Khachay, M., Kochetov, Y., Pardalos, P. (Eds.), Mathematical Optimization Theory and Operations Research. Springer International Publishing, Cham, pp. 97‚Äì114.
Sturm, J.F., 1999. Using sedumi 1.02, a matlab toolbox for optimization over symmetric cones. Optimization methods and software 11 (1-4), 625‚Äì653.
Su, W., Boyd, S., Candes, E.J., 2016. A differential equation for modeling nesterov‚Äôs accel- erated gradient method: Theory and insights. Journal of Machine Learning Research. Sun, A.X., Phan, D.T., Ghosh, S., 2013. Fully decentralized ac optimal power flow algo-
rithms. In: 2013 IEEE Power & Energy Society General Meeting. IEEE, pp. 1‚Äì5.
Sun, R.. Optimization for deep learning: theory and algorithms.
Teboulle, M., 1992. Entropic proximal mappings with applications to nonlinear program- ming. Mathematics of Operations Research 17, 670‚Äì690.
Teboulle, M., 2018. A simplified view of first order methods for optimization. Mathemat- ical Programming 170 (1), 67‚Äì96.
Todd, M.J., 2016. Minimum-volume ellipsoids. Society for Industrial and Applied Mathe- matics.
Tran-Dinh, Q., Alacaoglu, A., Fercoq, O., Cevher, V., 2020. An adaptive primal-dual frame- work for nonsmooth convex minimization. Mathematical Programming Computation 12 (3), 451‚Äì491.
Tran-Dinh, Q., Cevher, V., 2014. Constrained convex minimization via model-based exces- sive gap. In: Proceedings of the 27th International Conference on Neural Information Processing Systems, NIPS‚Äô14. MIT Press, Cambridge, MA, USA, pp. 721‚Äì729.
Tran-Dinh, Q., Fercoq, O., Cevher, V., 2018. A smooth primal-dual optimization frame- work for nonsmooth composite convex minimization. SIAM Journal on Optimization 28 (1), 96‚Äì134.
Tseng, P., 1991. Applications of a splitting algorithm to decomposition in convex program- ming and variational inequalities. SIAM Journal on Control and Optimization 29 (1), 119‚Äì138.
Tseng, P., 2008. On accelerated proximal gradient methods for convex-concave optimiza- tion. Tech. rep.. MIT.
Tupitsa, N., Dvurechensky, P., Gasnikov, A., Uribe, C.A., 2020. Multimarginal optimal transport by accelerated alternating minimization. In: 2020 59th IEEE Conference on Decision and Control (CDC), pp. 6132‚Äì6137.
Uribe, C.A., Dvinskikh, D., Dvurechensky, P., Gasnikov, A., Nediƒá, A., 2018. Distributed computation of Wasserstein barycenters over networks. In: 2018 IEEE Conference on Decision and Control (CDC), pp. 6544‚Äì6549.
Van Nguyen, Q., 2017. Forward-backward splitting with bregman distances. Vietnam Journal of Mathematics 45 (3), 519‚Äì539.
Von Hohenbalken, B., 1977. Simplicial decomposition in nonlinear programming algo- rithms. Mathematical Programming 13 (1), 49‚Äì68.
Vorontsova, E.A., Gasnikov, A.V., Gorbunov, E.A., 2019. Accelerated directional search with non-euclidean prox-structure. Automation and Remote Control 80 (4), 693‚Äì707. Vorontsova, E.A., Gasnikov, A.V., Gorbunov, E.A., Dvurechenskii, P.E., 2019. Accelerated gradient-free optimization methods with a non-euclidean proximal operator. Automa-
tion and Remote Control 80 (8), 1487‚Äì1501.
Wibisono, A., Wilson, A.C., Jordan, M.I., 2016. A variational perspective on accelerated methods in optimization. Proceedings of the National Academy of Sciences 113 (47), E7351.
Wolfe, P., 1970. Convergence theory in nonlinear programming. In: Abadie, J. (Ed.), In- teger and nonlinear programming. North-Holland, Amsterdam.
Wright, S.J., 2018. Optimization algorithms for data analysis. The Mathematics of Data 25, 49.
Yang, J., Zhang, Y., 2011. Alternating direction algorithms for ‚àñell_1-problems in com-
pressive sensing. SIAM journal on scientific computing 33 (1), 250‚Äì278.
Yuan, X., 2012. Alternating direction method for covariance selection models. Journal of Scientific Computing 51 (2), 261‚Äì273.
Zhang, Y., Xiao, L., 2015. Stochastic primal-dual coordinate method for regularized em- pirical risk minimization. In: Bach, F., Blei, D. (Eds.), Proceedings of the 32nd Interna- tional Conference on Machine Learning, Vol. 37 of Proceedings of Machine Learning Research, PMLR, Lille, France, pp. 353‚Äì361.
Zhao, R., Freund, R.M.. Analysis of the Frank-Wolfe method for logarithmically-homoge- neous barriers, with an extension.
