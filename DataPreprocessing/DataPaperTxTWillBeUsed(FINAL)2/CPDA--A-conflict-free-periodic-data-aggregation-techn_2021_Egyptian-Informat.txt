




CPDA: A conflict-free periodic data aggregation technique in wireless sensor networks

Chhabi Rani Panigrahi a,*, Bibudhendu Pati b, Joy Lal Sarkar b

a Department of Information Technology, C.V. Raman College of Engineering, Bhubaneswar, India
b Department of Computer Science and Engineering, C.V. Raman College of Engineering, Bhubaneswar, India

Received 15 December 2015; revised 4 May 2016; accepted 19 June 2016
Available online 10 September 2016

Abstract In Wireless Sensor Networks (WSNs), sensor nodes are generally placed in different geo- graphical locations. The sensor nodes collect data from environment and they react based on the received query requests. It is a great challenge for sensor nodes to send data periodically to the sink node in a conflict-free way. For this, authors present a Conflict-free Periodic Data Aggregation (CPDA) technique in WSNs. CPDA also works in heterogeneous environment where some of the sensor nodes in a network suffer from less amount of energy. The authors have also presented a mathematical model for the proposed data aggregation technique. The simulation results indicate that CPDA technique works well as compared with the existing approaches. The simulation results of CPDA technique are validated through NS-2 simulations.
© 2021 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial
Intelligence, Cairo University. This is an open access article under the CC BY-NC-ND license (http://
creativecommons.org/licenses/by-nc-nd/4.0/).




Introduction

In WSNs, different sensor nodes are deployed in various geo- graphical locations which collect various kinds of data period- ically from the environment [1,2]. The sensor nodes collect data based on the different received query requests. Different sensor nodes create a network for communication to send data by forming cluster and in each cluster, a cluster head is chosen

* Corresponding author.
E-mail addresses: panigrahichhabi@gmail.com (C.R. Panigrahi), patibibudhendu@gmail.com (B. Pati), joylalsarkar@gmail.com (J.L. Sarkar).
Peer review under responsibility of Faculty of Computers and Information, Cairo University.
based on highest energy label of nodes. The cluster head aggre- gates the data coming from different sensor nodes in a cluster and then it sends the aggregated data to the sink node. The data aggregation process by a cluster includes the collection of incoming data from different sensor nodes and sending those to the sink node for further processing. As the sensor nodes have very limited battery power, so it is very difficult to send data periodically to the sink node. Therefore, the data aggregation technique is used by a cluster head to enhance the battery life of sensor nodes.
In case of in-network, data aggregation can minimize the bandwidth of the network as well as the energy consumption. Nowadays, wireless cyber-physical frameworks provide real- time support for data collection in WSNs with high data rate [3,4]. There are a few applications like structural health moni-


http://dx.doi.org/10.1016/j.eij.2016.06.005
1110-8665 © 2021 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial Intelligence, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

toring [5] where response time is very important when emer- gency occurs [6]. Therefore, some of the applications must sup- port periodic data aggregation within deadline. For instance, in case of a chemical plant control, it is very important to col- lect periodically various readings such as pressure, tempera- ture. within deadline [7]. Similarly, in case of earthquake detection it is very important to collect various data about damages after certain periods. One major advantage of the periodic data aggregation in real time is that based on the cur- rent readings immediate actions can be taken. Another impor- tant application of periodic data aggregation is in defense forces. The sensor nodes collect the information about the sit- uation of the field over networks periodically.
To support periodic data aggregation with high data rate, authors propose a conflict-free periodic data aggregation tech- nique. CPDA technique supports conflict-free data aggrega- tion by maintaining d time between two consecutive data packets. CPDA also works with heterogeneous WSNs where some of the sensor nodes suffer from less amount of energy. Authors then present the mathematical analysis of the pro- posed data aggregation technique.
The rest of the paper is organized as follows: Section 2 describes the related work. Section 3 describes the proposed periodic data aggregation technique and also the scheduling policy in heterogeneous environment. Section 4 presents the problem formulation of data aggregation technique. Section 5 presents simulation results and analysis. Finally, Section 6 con- cludes the paper.

Related work

Through probabilistic separation, the conflict based protocols can provide supports in real time [8]. To work with congestion, there are several protocols such as rate and admission control were developed. These protocols are known as contention based protocols [9–12]. But, one of the major draw backs of these protocols is that they are not suitable for high data rate applications and also for real-time systems. In [13], authors proposed a SPEED protocol which is based on the geograph- ical routing and sends data packets at uniform velocity. This protocol works with multi-path routing [14]. The major disad- vantage of this protocol is that it is a contention based MAC protocol. In heavy load conditions, the throughput is large in case of TDMA protocol with respect to the contention based protocol. There are a few applications that use TDMA protocols support real time but these were developed for single-hop networks. The protocols as proposed in [15,16] are suitable for single-hop networks and they do not support multi-hop networks.
In [17], authors proposed a prioritized MAC protocol in WSNs which is based on the Earliest Deadline First (EDF) algorithm. To avoid channel interference, this protocol uses seven frequencies. In [18], authors proposed a Real-Time Query Scheduling (RTQS) approach which deals with preemp- tive and non-preemptive, and used for multihop networks. DRAND as proposed in [19] is a TDMA based protocol which supports lower capacity. DCQS [20] is a conflict-free query scheduling approach but it does not work in heterogeneous networks. WirelessHART model as proposed in [21] is a centralized approach and various plannings can be done using this model.
In [22], authors analyzed that in case of a simple one-shot query, the data aggregation problem with small amount of delay is NP-hard. In [3], authors proposed a data management technique in WSNs where different cluster heads collect data from their neighboring nodes and send the aggregated data to the sink via Action and Relay Station (ARS). For this, authors used assembly line scheduling algorithm. But, this approach does not support conflict-free periodic aggregation technique and also does not work with low battery power sen- sor nodes. The proposed data aggregation technique named that is CPDA works in heterogeneous environment when some of the nodes in the network suffer from less amount of energy which is the limitation of existing works [3,17–20].

Proposed periodic data aggregation technique

For periodic data aggregation, let a WSN be represented as a conflict-free graph called C — graph(N; E) where, N represents the set of nodes and E represents the set of communication edges among nodes. The communication edge lies between any two nodes if the two nodes are in the radio range of each other.  Let,  ns ∈ N  be  a  sink  node.  Let’s  assume 9 = {q1; q2 ; q3; ... ; qi }  be  a  set  of  queries  and P= {s1; s2; s3; ... ; sj} be a set of source nodes which can be able to answer each query. Let each source node produces a set of ð = {d1; d2; d3; ... ; dp} data units. The parent nodes
receive data units from the source nodes [22].
Let, t1 be the time required for receiving one data unit by a parent node for query qi and let hi be the delay for receiving that data unit. Now, let TR be the release time for kth instance then for receiving the answer of that query, and deadline for the sink node will be TR + hi . In CPDA, the parent nodes receive data units from the source nodes at different time slots to avoid conflicts and also to reduce end-to end delay, multiple parent nodes receive data unit at the same time slot. For that CPDA maintains at least d time for receiving two consecutive data units. Fig. 1 shows the example of a C-graph where differ- ent parent nodes collect data from various source nodes at dif- ferent time slots. Some of the nodes receive the data units in the same time slot for reducing the delay. That indicates that CPDA supports concurrent execution. A case may arise for

Fig. 1	Example of a C-graph.

a node e in C-graph which collects periodic data. The dash line in C-graph as shown in Fig. 1 indicates that e receives data unit twice from h at every 2 ms. When e receives first data unit then e determines whether it will collect the data unit from g before 2 ms or not. Here, e will give preference to h for time slot 2 as e cannot collect data from g before 1 ms. The different notations used to describe CPDA approach along with their descriptions are given in Table 1.
CPDA supports conflict-free query scheduling when some of the sensor nodes suffer from less battery power. It is very difficult to work when sensor nodes suffer from less amount of energy as if node A sends data to node B but B does not able to receive it due to less amount of energy. The idea behind CPDA is that if the data of node A are received by the next eli- gible node, the eligible node must receive these data by avoid- ing the conflict. For this, authors introduce an Interference- Communication Heterogeneous (ICH) graph as shown in Fig. 2. The straight lines in Fig. 2 indicate the communication between two nodes that means when one node sends packets to an another node then the receiver node must be able to receive it. On the other hand, the dotted lines indicate the interference edge that means when one node sends packets to an another node that must be interfered by other transmission. A dotted line with an arrow head indicates a single directional commu- nication whereas a solid line without arrow head indicates a bi- directional communication in an ICH-graph.
Theorem 3.1. CPDA provides conflict-free data aggregation at all time slots.

Proof. Let the data units d1 and dk execute at same time slots. According to CPDA, these data units are assigned as conflict- free data aggregation if they maintain at least d time unit that is (s1 — sk) P (k — 1).d(x) P d(x). Where, s1 and sk are the steps and d(x) denotes the release time of consecutive data units and k P 2. So, in all slots, CPDA maintains conflict- free data aggregation.  h
Theorem 3.2. CPDA maintains maximum data rate of   1	
where, S(n) is the slot size in seconds.

Proof. According to CPDA, the data unit can be released at
d(x) slot for avoiding conflict. So, the maximum data rate is
  1	
S(n)·d(x)


Minimum inter data packets release time (d)

To calculate the minimum inter data packets release time, we consider an approach as described in [20]. We assume two con- secutive data packets as Dd;i and Dd;j. Now, when Dd;i is execut- ing and at that time Dd;j waits for d time. Now, if a running data

→
Two transmissions ba
→
and le are said to be conflict-free
packet cannot be preempted by another data packet then two
steps S(1) and S(d + 1) can run concurrently at the same time

(ba  le) if the given two conditions are satisfied. (1) b; a; l, and
e are distinct and (2) be and la do not belong to an interference or communication edge. In the ICH-graph as shown in Fig. 2, the scheduling starts from node b as b is having highest priority among c; d, and e. Now as b suffers from less battery power and hence does not able to communicate with a. So, the child node f initiates to communicate with a at time slot 1. Now, to avoid conflict c; d, and e communicate with a at time slots 2, 3, and 4 respectively. Then, the next child of b that are w and g communicates with a at time slots 5 and 6 as there are no com-
munications in that time slots. w and g are not assigned to time slots 2, 3, and 4 because wa; ga,ca; wa; ga,da, and wa; ga,ea. Now, the children of c are, i; v and h and are assigned to time
slots 3, 5, and 6 respectively. Here, i suffers from less battery power and hence i does not able to communicate with c but a case may arise when v cannot be able to assign to that step
→
due to the interference edge dc and so it is assigned to time
slot 5.
slot. So, the data packets Dd;j can start after d steps of data packet Dd;i i.e, any slot execution Sd;i(1)Sd;j(D + z + 1) where, z ∈ (L(D)— (D + 1)) and D is the smallest number of execution
and L(D) is the total length of data packets. So the minimum
inter data packets release time is computed by using Eq. (1).
d = min[Sd;i(l)Sd;j(l + D + z + 1)]; 6z
∈ (L(D)— (l + z + D + 1)) and l 6 L(D)	(1)
where Sd;i(l) denotes any number of steps which do not conflict with another step Sd;j(l + D + z + 1)].

Problem formulation for data aggregation

Let C = {c1; c2; c3 ... ; cn} be a set containing n number of chil- dren of any parent node Pi in WSNs. Now, all children collect data from the environment and send to their respective parent nodes. To avoid conflict, Pi should receive data from all chil-

dren at different time slots. But, for reducing the end-to-end delay there must be support for concurrent execution. In case of CPDA, it maintains at least d time for receiving two consec- utive data units. The total number of data packets collected by Pi is denoted by Dc;s and is computed by using Eq. (2).


Dc;s =
b


i=1

di +
c


j=1

dj +· · · +
m


n=1

dn	(2)

where b; c; .. . ; m are the number of data packets of children
c1; c2; ... ; cn respectively. Now, total number of data collected

	!


Due to end-to-end delay, Pq may not able to receive exact amount of data within predefined deadline denoted as Rhq ;Pq and is computed by using Eq. (4).
Now, Pq must send data unit to the sink node within deadline. For this, Pq must satisfy the condition as given in Eq. (9).



tb	d + tc	d + tm	xa

Σb	+ Σc
d + ··· + Σm d +	 Σb	Σc
Σm	 Σb	Σc	Σm



+ agt  Σb
d + Σc  d +· · · + Σm  d 
 Σb  h
Σc  h
Σm  h 








Rhq ;Pq =

b


i=1

di +

c


j=1

dj + ··· +

m


n=1
dn!
where tb; tc; ... ; tm denote the time taken to receive the data packets from the child nodes. xa and xs represent the time
taken for aggregation of data by the parent nodes and time


b
—
i=1

hi +

c


j=1

hj + ··· +

m


n=1
hn!

(4)
taken for sending the aggregated data to the sink nodes.

m

Now, reducing the end-to-end delay using optimal schedul- ing policy of CPDA, the amount of data can be computed using Eq. (5).
or; TRcv + TA;Pi + TS;sm =	(Ri + hi)	(10)
i=1












b
max
i=1

di +

c


j=1

dj + ··· +

m


n=1
dn!—

b


i=1

hi +

c


j=1

hj + ··· +

m


n=1
hn !)

(5)

Results and analysis

The proposed approach CPDA was simulated using NS-2. The parameters used for the simulation is given in Table 2. The

The aim of CPDA was to reduce the delay for receiving
data from the source node. So, the objective of CPDA was to maximize the receiving data unit and is possible if
802.11b settings were used where data transmission is
2.2 Mbps. There are various applications such as structural health monitoring used these settings [18]. During simulation,

b


i=1
hi +
c


j=1
hj + ··· +
m


n=1
hn !
→ 0	(6)
authors used the network range of 750 × 750 which is sepa- rated by 85 × 85 grids and there are 100 nodes in the network. For comparison of CPDA with the existing approaches,

CPDA supports concurrent execution by maintaining d time between two consecutive data units. So, the time taken for receiving one unit of data by Pq is denoted by T1;Pq and is computed by using Eq. (7).
authors used PAQS [22], DRAND [19], and RTDM [3]. This is because PAQS is a periodic data aggregation technique but is not suitable in case of heterogeneous networks whereas DRAND is a distributed randomized TDMA Scheduling and RTDM is designed for data management system based on the

1;Pq	tb
d + tc
d + tm
cluster head concept but is suitable for homogeneous net-

Σb	+ Σc d +· · · + Σm d
(7)

After receiving data unit from the source nodes, Pq aggre- gates the data and sends to the sink node. We used an aggre- gation function denoted as agt() for this purpose and is defined in Eq. (8).
DCQS, the main difference between them is that DCQS does not work not heterogeneous environment whereas CPDA con- siders the next eligible node by considering the same time slot and provides a periodic data aggregation technique.
A sink node discovers 15 data aggregation query sets. For


agtPq = agt

b


i=1

di +

c


j=1

dj + ··· +

m


n=1
dn!
each query, period, node-ID and the start time of the reply
were maintained from the source node. The sink node records each received data from the source node. From simulation

b
—
i=1
hi +
c


j=1
hj + ··· +
m


n=1
hn!!
(8)
results it was found that sink nodes successfully collect data from all source nodes for each period. Authors assumed that a sink node cannot successfully receive data packets from a


 
(a)	(b)
Fig. 2	(a) Example of an ICH-graph where LB indicates Low Battery of Sensor Nodes, (b) Schedule plan of example as given in (a).






source node if it does not receive a query having more than 2 periods. In Fig. 3(a), X-axis represents the average delay and Y-axis represents the number of deployed nodes denoted as Nd. CPDA is compared with a baseline approach PAQS [22] in terms of average delay and success ratio with respect to the number of deployed nodes as shown in Fig. 3(a) and (b) respectively.
From Fig. 3(a), it can be observed that the average delay is high in case of PAQS as compared to CPDA. In case of PAQS, when Nd = 150 then average delay is 575 s whereas this is 360 in case of CPDA. This is because, PAQS does not work in heterogeneous environment when some of the nodes in the net-
work suffer from less amount of energy and also does not sup- port conflict-free query scheduling at each slot. The average delay of DRAND and RTDM is higher with respect to CPDA. This is because RTDM processes data with respect to the assembly line scheduling technique where the time for data processing of each node is fixed. If one nodes suffer less amount of energy that will effect the next node and so on. On the other hand, DRAND is a TDMA based scheduling but neither DRAND nor RTDM works in heterogeneous envi- ronment. Fig. 3(b), shows that the successful ratio is high when Nd increases in case of CPDA with respect to PAQS. CPDA was also compared with two existing baseline approaches that are RTDM [3], and DRAND [19] in terms of energy consump- tion with respect to data rate.
Fig. 4 shows the energy consumption with respect to the data rate in CPDA, RTDM, and DRAND. From Fig. 4 it can be observed that the energy consumption is less in case of CPDA as compared to DRAND and RTDM. RTDM also supports conflict-free scheduling at each slot but the problem in RTDM is that it does not support periodic aggregation. However, CPDA along with conflict free scheduling works with low energy nodes at every slot. The disadvantage of the CPDA technique is that it is not suitable when there is require-




1000
900
800
700

600
500
400
300
200

50
1.0


0.8


0.6


0.4


0.2


0.0

100	150	200	250	100	150	200	250	300

Nd	Nd
Fig. 3	(a) Average delay with respect to the number of deployed nodes Nd. (b) Success ratio with respect to the number of deployed nodes Nd.













Ec














1	2	3	4	5	6	7
Data Rate

Fig. 4	Energy consumption with respect to data rate.

ment of priority based information which is essential in case of emergency condition.

Conclusion

In this work, authors propose a conflict-free data aggregation technique in WSNs named as CPDA. The simulation results indicate that CPDA performs better in terms of different parameters as compared to existing approaches. CPDA sup- ports conflict free data aggregation as well as it works with low battery power sensor nodes in WSNs. In this work, authors also present the mathematical analysis of data aggre- gation technique. In future, authors would like to develop a priority based periodic data aggregation technique in WSNs.

References

Kanan G, Raja T. Energy efficient distributed cluster head scheduling scheme for two tiered wireless sensor network. Egypt Inform J 2015;16(2):167–74.
Mahajan S, Malhotra J, Sharma S. An energy balanced QoS based cluster head selection strategy for WSN. Egypt Inform J 2014;15(3):189–99.
Sarkar J, Panigrahi C, Pati B, Das H. A novel approach for real- time data management in wireless sensor networks. In: Proc of 3rd international conference on advanced computing, networking and informatics. p. 599–607.
Windmiller J, Wang J. Wearable electrochemical sensors and biosensors: a review. Electroanalysis 2013;25(1):29–46.
Rodgers M, Pai V, Conroy R. Recent advances in wearable sensors for health monitoring. IEEE Sens J 2015;15(6) [p. 3119– 3116].
Bertoldo N, Hunter S, Fertig R, Laguna G, MacQueen D. Development of a real-time radiological area monitoring network
for emergency response at Lawrence Livermore National Labo- ratory. IEEE Sens J 2005;5(4):565–73.
Pati B, Sarkar J, Panigrahi C, Tiwary M. ARTQS: an advanced real-time query scheduling approach in wireless sensor networks. In: Proc of international conference on green computing and internet of things (ICGCIoT). p. 219–24.
Chen L, Heinzelman W. QoS-aware routing based on bandwidth estimation for mobile ad hoc networks. IEEE JSAC, Special Issue Wireless Ad Hoc Netw 2005;23(3):561–72.
Lee S, Sriram K, Kim H, Song J. Contention-based limited deflection routing protocol in optical burst-switched networks. IEEE J Sel Areas Commun 2005;23(8):1596–611.
Karenos K, Kalogeraki V, Krishnamurthy S. A rate control framework for supporting multiple classes of traffic in sensor networks. In: Proc of 26th IEEE intl real-time systems sympo- sium. p. 286–97.
Ahn G-S, Campbell A, Veres A, Sun L-H. Supporting service differentiation for real-time and best-effort traffic in stateless wireless ad hoc networks (swan). IEEE Trans Mob Comput 2002;1(3):192–207.
Barry M, Campbell A, Veres A. Distributed control algorithms for service differentiation in wireless packet networks. INFO- COM, vol. 1. p. 582–90.
He T, Stankovic J, Lu C, Abdelzaher T. SPEED: a stateless protocol for real-time communication in sensor networks. In: Proc of int conf on distributed computing systems (ICDCS). p. 46–55.
Felemban E, Lee C, Ekici E. Mmspeed: multipath multi-speed protocol for QoS guarantee of reliability and timeliness in wireless sensor networks. IEEE Trans Mob Comput 2006;5(6):738–54.
Facchinetti T, Almeida L, Buttazzo G, Marchini C. Real-time resource reservation protocol for wireless mobile ad hoc networks. In: Proc of IEEE int real-time systems symp (RTSS). p. 382–91.
Li H, Shenoy P, Ramamritham K. Scheduling communication in real-time sensor application. In: Real-time and embedded tech- nology and applications symposium (RTAS). p. 10–8.
Caccamo M, Zhang L, Sha L, Buttazzo G. An implicit prioritized access protocol for wireless sensor network. In: Proc of IEEE real- time systems symposium. p. 39–48.
Chipara O, Lu C, Roman G. Real-time query scheduling for wireless sensor networks. IEEE Trans Comput 2013;62 ():1850–65.
Rhee I, Warrior A, Min J, Xu L. DRAND: distributed random- ized TDMA scheduling for wireless ad hoc networks. In: MobiHoc. p. 190–201.
Chipara O, Lu C, Stankovic J, Roman G. Dynamic conflict-free transmission scheduling for sensor network queries. IEEE Trans Mob Comput 2011;10(5):734–48.
Saifullah A, Xu Y, Lu C, Chen Y. End-to-end delay analysis for fixed priority scheduling in WirelessHART networks. In: Proc of IEEE real-time and embedded technology and applications symp.
p. 13–22.
Xu X, Li X, Wan P, Tang S. Efficient scheduling for periodic aggregation queries in multi-hop sensor networks. IEEE/ACM Trans Network 2012;20(3):690–8.
