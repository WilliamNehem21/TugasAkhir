Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 313 (2015) 23–46
www.elsevier.com/locate/entcs

Rigid Geometric Constraints for Kappa Models

Vincent Danosa,1 Ricardo Honorato-Zimmerb,2 Sebastian Jaramillo-Riveric,3 Sandro Stuckid,4
a School of Informatics University of Edinburgh Edinburgh, United Kingdom
b Informatics Life-Sciences Institute University of Edinburgh
Edinburgh, United Kingdom
c SynthSys University of Edinburgh
Edinburgh, United Kingdom
d PPS Laboratory Universit´e Paris Diderot – Paris 7
Paris, France



Abstract
Rule-based modeling languages such as Kappa [11,7] and BNGL [3,2] allow for a concise description of combinatorially complex biochemical processes as well as efficient simulations of the resulting models [8,7]. A key aspect of the rule-based modeling approach is to partially expose the structure of the chemical species involved. However, the above-mentioned languages do not provide means to directly express the three-
dimensional geometry of chemical species. As a consequence models typically capture only the network- topological structure of the species involved. For certain biochemical processes, such as the assembly of molecular complexes, in which steric constraints play a key role, it would seem natural to also model the geometric structure of species. We propose an extension to the Kappa modeling language allowing the annotation of the structure of chemical species with three-dimensional geometric information. This naturally introduces rigidity constraints on the species and reduces the state space of the resulting model by excluding species that are not geometrically sound. We show that models extended in this way can still be simulated efficiently, albeit at the cost of a greater number of null-events occurring during the simulation. The geometric constraints introduced by the extension are inherently non-local in that they may entangle the position and orientation of sub-structures at arbitrary distances in large species such as polymers. We give a formal definition of the notion of locality based on the intuition that local modifications should only affect sub-structures within a finite radius around the point where the modification occurred. We show that there are indeed geometrically enhanced Kappa models that are non-local, and conversely, that every local model can be simulated accurately using a finite classical Kappa model at the expense of a possible combinatorial explosion of its rule set. We also give some sufficient conditions for the locality of a model but show that locality is undecidable in general.
Keywords: rule-based modeling, Kappa, geometric constraints, molecular structure, three-dimensional, rigid body


http://dx.doi.org/10.1016/j.entcs.2015.04.017
1571-0661/© 2015 The Authors. Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

Introduction
Rule-based modeling languages such as Kappa [11,7], or BNGL [3,2], allow for a con- cise description and the efficient simulation of combinatorially complex biochemical processes, such as cellular signaling pathways. In contrast to reaction-based ap- proaches, rule-based modeling frameworks do not rely on the enumeration of all chemical species involved in a process. The combinatorial complexity of a process can easily make this enumeration intractable or even impossible, for example in the case of polymerization reactions, where the number of possible species involved is infinite in principle.
Due to their stability, molecules such as nucleic acids and proteins can be repre- sented as elementary molecular entities, or agents with an interface of sites through which they interact. In this context, sites may represent functional groups within molecules that are responsible for the interactions they participate in. Classic ex- amples are binding sites, phosphorilation sites, methylation sites, etc. In particu- lar, agents may form weak inter-molecular bonds between sites. These bonds are also called links and together with agents they define site graphs representing the network-topological structure of molecular complexes.
In rule-based modeling, reactions are replaced by rules. Unlike reactions, rules operate on patterns in the sub-structure of chemical species rather than on the species as a whole. A single rule can thereby capture a set of multiple chemical reactions, potentially even infinitely many. However, the above-mentioned rule- based languages do not offer direct support for describing the geometric structure of agents and their link structure in three-dimensional space. Hence, steric effects that constrain molecular interactions are not easily translated into rule-based languages, and it is not clear if it is always possible to do so.
In this paper we present geometrically enhanced Kappa, a minimalistic extension to the Kappa language. As in Kappa, chemical species are represented by site graphs and modified through site graph rewriting rules. In addition, our extension allows for the annotation of individual agents, sites and links, with radii, positions and orientations, respectively, which introduces implicit rigidity constraints on the corresponding site graphs. Rewrite rules may include updates to the geometric annotations of a site graph in order to capture conformational changes of a molecular complex.
Our extension is only concerned with geometric realizability or soundness of molecular complexes and not with modeling the evolution of their physical em- bedding in three-dimensional euclidean space. In particular, we do not track the absolute positions and orientations of agents and therefore can not handle diffusion or collision processes explicitly. Instead we retain the assumption of a well-stirred mixture from classical, geometry-less Kappa. In fact, our framework for geometri-

1 Email: vdanos@inf.ed.ac.uk
2 Email: s1066652@sms.ed.ac.uk
3 Email: sjaramil@staffmail.ed.ac.uk
4 Email: sandro.stucki@epfl.ch

cally enhanced site graph rewriting contains geometry-less Kappa as a particular subset, and we show that for our restricted set of geometric annotations, simulations remain tractable, and indeed can be implemented using a slightly modified version of the known efficient Kappa simulation algorithm [8].
Geometric constraints can, in principle, relate and propagate the positions and orientations of agents over arbitrary distances, for example in macro-molecular com- plexes such as polymer chains. Our extension thereby violates a core principle of classical Kappa, namely that rules can only make local changes to the state of a system. To make this idea more precise, we give a formal definition of locality for Kappa models, which captures the intuition that the effects of a locally acting rule on the geometric constraints of a site graph should not extend beyond a fixed, finite radius δ around the substructure modified by the rule. We show that there are indeed geometrically enhanced Kappa models that are non-local, meaning that no such δ exists for these models. We also show that, for purely local models, it is always possible to translate a geometrically enhanced model into a geometry-less model, albeit at the cost of increasing the number of rules of the model exponen- tially. This further exemplifies the importance of non-locality for our extension. Finally, we show that, in general, it is not decidable whether a model is local, and hence whether the said reduction from a geometrically enhanced model into a geometry-less model is possible.
The principal motivation for developing this extension was to find a basic framework to describe processes such as the self-assembly of protein complexes [12,16,18,15], where agents may be thought of as having a fixed-size volume, sites with fixed sets of possible positions with respect to the center of mass of the agent, and links with fixed orientations relative to the interacting agents. This is the case, for instance, in the assembly of the proteasome, whose structure consists of four stacked heptameric rings (see Figure 1). In this protein complex, interactions between the monomers have a particular geometry that we will revisit later.
Finally, we also expect this work to serve as a formal starting point for the de- velopment and implementation of more advanced extensions for modeling spatial aspects such as more generalized steric constraints, diffusion and compartmentaliza- tion, or coarse-grained molecular dynamics in rule-based languages, to be explored in future work.
Related work
In [14] Gruenert et al. introduce an approach to simulating combinatorially complex chemical systems by combining a coarse-grained, particle-based spatial simulation with a rule-based language for triggering association and dissociation events be- tween particles. Unlike in our approach, the simulation not only handles steric constraints, but tracks and updates the positions of individual particles according to a combination of force field and diffusion terms that simulate the interactions between particles and their Brownian motion, respectively.
Another particle-based simulator for biological systems is BioShape [4]. BioShape is a scale-independent simulation environment based on a process algebra


	
(a)	(b)
Figure 1. (a) Structure of the yeast proteasome 20S core particle (PDB ID 1RYP). Image created using PyMol. (b) Schematic diagram of the proteasome structure. The catalytic β subunits that comprise the inner two rings are shown in blue and the α subunits making up the two outer rings are shown in green. Image taken from Wikipedia.

for systems biology, the Shape Calculus [1], in which every process is assigned a position, velocity and mass. Processes move according to physical laws and can col- lide with and bind to other processes depending on their communication on certain channels.
A different approach to describing spatial phenomena using a processes algebra is Cardelli and Gardner’s 3π [5]. 3π is a geometric process algebra that combines the interaction primitives of the π-calculus with geometric transformations. Pro- cesses in 3π are localized and move explicitly through frame shift operations. 3π is a powerful process algebra but does not offer any direct support for biological modeling: geometric constraints between processes or laws of motion have to be implemented explicitly. There is also no notion of time-flow, although one could easily be adapted, for example from the stochastic π-calculus.
The rest of this paper is structured as follows: in section 2 we define geometrically enhanced Kappa and its stochastic semantics and outline a basic simulation algo- rithm. In section 3 we introduce the notion of locality, give examples of local and non-local Kappa models, show that locality is undecidable in general, and finally show how to reduce local models to geometry-less models. Section 4 contains some concluding remarks and outlines future work.

Geometrically enhanced Kappa
We will now introduce our extension to Kappa as a simple categorical language. The definitions given below are, for the most part, direct extensions of those given in [17] and [10]. The reader that is somewhat familiar with the Kappa language will recognize many of the concepts introduced here, such as contact graphs, site graphs and embeddings, as variations of those used in classic, geometry-less Kappa.

Notation
Given a family of sets (Ai, i ∈ I), we write	i∈I Ai for their disjoint union, that is, i∈I {(x, i): x ∈ Ai}. We write A − B for the set difference of two sets A and B or the relative complement of B in A, P (A) for the power set of A, that is, the set of
subsets of A, and A٨ for the disjoint union A + { } that adds a “stub”  to A.
If f : A → B is a map from A to B, we write f (A) ⊆ B for its image (or range). If f is partial, we write dom(f ) ⊆ A for its domain of definition. If Aj ⊆ A is a subset of the domain of f , we write f|A′ for the restriction of f to Aj, that is f|A′ : Aj → B, x '→ f (x). We write 1A for the identity map from A to itself.
If R ⊆ A×B is a binary relation between two sets A and B, we sometimes treat it as a partial map R : A →P (B) and write dom(R) ⊆ A for its domain of definition, that is, dom(R)= {a ∈ A : R(a) /= ∅}, and R(A) for its image. Similarly, we often treat partial maps f : A → P (B) and g : A → B as relations f ⊆ A × B and functional relations g ⊆ A × B, respectively.
Definition 2.1 A partial pairing on a set A is an irreflexive, symmetric and one- to-one binary relation on A, that is, every element of A is in relation with at most one other element in A and no element in A is in relation with itself.
Contact graphs and site graphs
Definition 2.2 A contact graph is a tuple C = (A, S, I, Σ, Λ,I, P, S, Ω), where
A, S and I are finite sets of agent types, site names and internal state names, respectively,
Σ: A→P (S) assigns sets of site names to agent types,
Λ ⊆ (Σ٨)2 − {( , )} is a symmetric binary relation that represents possible links
between sites,
I :Σ →P (I) assigns sets of internal state names to sites,
P : A→P (R) assigns finite sets of radii to agent types,
S :Σ →P R3 assigns finite sets of positions to sites, and
Ω : Λ ∩ Σ2 → P (SO(3)) assigns finite sets of orientations to links (A, a, B, b), such that
O ∈ Ω(A, a, B, b) ⇔ O—1 ∈ Ω(B, b, A, a).
We refer to Σ(A) as the signature of an agent type A ∈ A, and toΣ andΛ as the collective signature and link structure of the contact graph C, respectively. We often treat the collective signature Σ and the link structure Λ of a contact graph as sets of pairs and quadruples, respectively (that is, as the graphs of the corresponding relations) as in the definitions of Λ, I, S and Ω above. We call P , S and Ω the agent, site and link geometry, respectively, of C and the combined map (P, S, Ω) the geometry of C.
Definition 2.3 A site graph is a tuple s = (V, C, Γ, λ, ι, ρ, s, ω), where
V is a finite set of agents,

ρ(v)




u



Figure 2. Geometry of a site graph. The circles represent agents u ∈ V and v ∈ V , the gray arrows represent their frame of reference (or orientation). The sites a ∈ σ(u) and b ∈ σ(v) (and their positions s(u, a), s(v, b)) are represented by colored arrows. The presence of a link (u, a, v, b) forces the absolute position of the sites (u, a) and (v, b) to coincide.
C is a contact graph,
Γ: V →A is map assigning types to agents,
σ = Σ ◦ Γ assigns sets of site names to agents,
λ ⊆ (σ٨)2 − {( , )} is a partial pairing that represents links between sites,
ι : σ →I is a partial map that assigns internal states names to sites,
ρ : V → R is a partial map that assigns radii to agents,
s : σ → R3 is a partial map that assigns positions to sites,
ω : λ ∩ σ2 → SO(3) is a partial map that assigns orientations ω(u, a, v, b) to links (u, a, v, b), such that
(u, a, v, b) ∈ dom(ω) ⇒ ω(v, b, u, a)= ω(u, a, v, b)—1.
We call Γ the contact map of s. A site graph s with contact map Γ is said to be
well-deﬁned or well-typed if
Γ preserves links: (u, a) λ (v, b) ⇒ (Γ(u), a)Λ (Γ(v), b),
Γ preserves stubs: (u, a) λ ⇒ (Γ(u), a)Λ  ,
Γ preserves internal states: (u, a) ∈ dom(ι) ⇒ ι(u, a) ∈ I(Γ(u), a),
Γ preserves agent geometry: ρ ⊆ P ◦ Γ,
Γ preserves site geometry: (u, a) ∈ dom(s) ⇒ s(u, a) ∈ S(Γ(u), a), and
Γ preserves link geometry:
(u, a, v, b) ∈ dom(ω) ⇒ ω(u, a, v, b) ∈ Ω(Γ(u), a, Γ(v), b).
We will only consider well-defined site graphs hereafter.
We refer to σ and λ as the collective interface and link structure of s, respectively, and we call σ(u) the interface of an agent u. For an agent u and a site a ∈ σ(u), we say (u, a) is bound if ∃(v, b): (u, a) λ (v, b). Conversely, we say that (u, a) is free or (u, a) has a stub if (u, a) λ . We call ρ, s and ω the agent, site and link geometry, respectively, of s and the combined map (ρ, s, ω) the geometry of s. The position s(u, a) ofa site (u, a) is specified relative to the position and orientation of the agent
u. If the orientation ω(u, a, v, b) of a link (u, a, v, b) ∈ λ is defined, the sites (u, a)

and (v, b) are considered aligned, and ω(u, a, v, b) corresponds to the orientation of v relative to u. Figure 2 illustrates the various components of the geometry of a site graph.
Two agents u and v of a site graph s are said to be connected if there is a path

(u, a) λ (w1, c1), (w1, cj ) λ (w2, c2),..., (wN , cj
) λ (v, b) in s connecting u and v. A

1	N
site graph s is connected if every pair of agents (u, v) ∈ V 2 in s is connected.
Definition 2.4 A site graph (V, C, Γ, λ, ι, ρ, s, ω) is said to be complete if its collec- tive interface, link structure, state map and geometry are all maximal with respect to its contact graph, that is,
(Γ(u), a) ∈ dom(Λ) ⇒ (u, a) ∈ dom(λ),
(Γ(u), a) ∈ dom(I) ⇒ (u, a) ∈ dom(ι),
dom(ρ)= dom(P ◦ Γ),
(Γ(u), a) ∈ dom(S) ⇒ (u, a) ∈ dom(s),
(Γ(u), a, Γ(v), b) ∈ dom(Ω) ⇒ (u, a, v, b) ∈ dom(ω). A site graph that is not complete is said to be partial.
Note that the link state λ(u, a) or internal state ι(u, a) ofa site (u, a) may be left undefined in a complete site graph as long as the set of possible link states Λ(Γ(u), a) or internal states I(Γ(u), a) of the corresponding site (Γ(u), a) in the contact graph are empty. Similarly, a complete geometrically enhanced site graph needs not have all its geometry defined as long as the corresponding piece of geometry is undefined in the contact graph. This allows us to treat ordinary, geometry-less site graphs such as those defined in [8] as just a special case of geometrically enhanced site graphs. It also allows us to model semi-rigid structures, that is, structures where only certain substructures are subject to rigid geometric constraints.
Let us now have a look at some examples of contact and site graphs. Our first example introduces a set of simple, small graphs that we will build upon through- out this section to illustrate the various concepts form the theory of geometrically enhanced site graphs.
Example 2.5 Consider the following definitions of a contact graph C and two site graphs t and s:


A = {A}, S = {l, r}, I = ∅, Σ= {A '→ l, A '→ r},
Λ= {(A, l, A, r), (A, r, A, l)}∪ Σ × {٨}∪ {٨}× Σ, I = ∅,
C =
P = {A '→ 1}, S = {(A, l) '→ (—2, 0, 0), (A, r) '→ (2, 0, 0)},
Ω = ,(A, l, A, r) '→ ,1, Rz π , , (A, r, A, l) '→ ,1, Rz — π ,,
⎞⎟⎟⎠ ,

⎛⎜ Vt = {u}, C, Γt = {u '→ A}, σt =Σ ◦ Γt,	⎞⎟
⎝ t	t	t  t	t	⎠
st = {(u, l) '→ (—2, 0, 0), (u, r) '→ (2, 0, 0)}, ωt = ∅
Vs = {u, v}, C, Γs = {u '→ A, v '→ A}, σs =Σ ◦ Γs, λs = {(u, l, ٨), (v, r, ٨), (٨, u, l), (٨, v, r)},
s =
⎝ ιt = ∅, ρs = {u '→ 1,v '→ 1},	⎟⎠
ss = {(u, l) '→ (—2, 0, 0), (v, r) '→ (2, 0, 0)} , ωs = ∅


t :

s :

x :


y :


(a)
(b)
(c)

Figure 3. Examples of contact graphs and site graphs.

x =	Vs, C, Γs, σs, λx = {(u, l, v, r), (v, r, u, l)}, ιs, ρs, ss,  ,
ωx = {(u, l, v, r) '→ 1, (v, l, u, r) '→ 1}
, Vs, C, Γs, σs, λy = {(u, l, v, r), (v, r, u, l)}, ιs, ρs, ss, 

y =	ω = ,(u, l, v, r) '→ R
 π , (v, r, u, l) '→ Rz
 — π ,	,


with 1 the identity and Rz (θ) the rotation of angle θ around the z axis.
Figure 3a illustrates the four site graphs s, t, x and y. Intuitively, the contact graph C enables the construction of linear chains with 90 ◦ turns. The site graph t represents a single, unconnected agent, while s represents a pair of agents that could be linked to form a chain of length two. Note that the link state of sites r ∈ σ(u) and l ∈ σ(v) of the agents u and v in s are undefined. The two site graphs x and y are examples of a linear extension and a turn, respectively. t, x and y are all connected, while s is not. t is complete, while s, x and y are not.
Now, let us have a look at a somewhat more involved system, namely the two inner rings of the proteasome. A possible site graph representation of this structure is shown in figure 3b.
Example 2.6 In a model of the assembly of the two inner heptameric rings formed by the β subunits of the proteasome, a geometry-less contact graph like the one shown in figure 3c would be an obvious choice. We extend this contact graph by adding the corresponding geometries as follows:

A = {β}, S = {lt, rt, lb, rb}, I = ∅, Σ= {β '→ lt,β '→ rt,β '→ lb,β '→ rb} ,
Λ= {(β, l ,β,r ), (β, r ,β,l ), (β, l ,β,l ), (β, r ,β,r )}∪ Σ × {٨}∪ {٨}× Σ,
⎜	⎟
I = ∅, P = {β '→ 1},
C =	, (β, lt) '→ — cos π , sin π , 0 ,	(β, rt) '→ cos π , sin π , 0 ,	⎟
⎜ S =	(β, l ) '→ — 1 , 1 tan π , —1 ,  (β, r ) '→  1 , 1 tan π , —1  ,	⎟
⎜⎝	, (β, lt,β, rt) '→ Rz — 2π  ,	(β, rt,β, lt) '→ Rz  2π  ,	,	⎟⎠

Ω =
(β, l ,β,l ) '→ R

 — π R
(π) ,  (β, r ,β,r ) '→ R
 π R
(π)

The contact graph C allows us to build site graphs like the one shown in figure 3b. Indeed, the site graph of figure 3b is the maximum sound site graph that has C as its contact graph. We will define what it means for a site graph to be sound in section 2.6.

Embeddings
Definition 2.7 An embedding from a site graph x to another site graph y is a map
f : Vx → Vy such that
f is injective.
f preserves types: Γx = Γy ◦ f ,
f preserves sites: σx ⊆ σy ◦ f ,
f preserves links: (u, a) λx (v, b) ⇒ (f (u), a) λy (f (v), b),
f preserves stubs: (u, a) λx  ⇒ (f (u), a) λy ,
f preserves states: (u, a) ∈ dom(ιx) ⇒ ιx(u, a)= ιy(f (u), a),
f preserves agent geometry: ρx ⊆ ρy ◦ f ,
f preserves site geometry: (u, a) ∈ dom(sx) ⇒ sx(u, a)= sy(f (u), a),
f preserves link geometry:
(u, a, v, b) ∈ dom(ωx) ⇒ ωx(u, a, v, b)= ωy(f (u), a,f (v), b).
We write [x; y] for the set of embeddings from x to y. When f ∈ [x; y], we write
f
x −→ y and say that y embeds x or that x is embedded in y via f . We write f (x)
for y, the target site graph of f ∈ [x; y], not to be confused with the image of f , f (Vx) ⊆ Vy.
Together, site graphs and their embeddings form the category GS of geometri- cally enhanced site graphs, with site graphs as objects and embeddings as arrows. In the rest of this document, we will use the terms object and site graph interchange- ably, as well as the terms embedding, morphism and arrow.
The notion of an embeddings gives us a straight-forward way to define subgraphs
in the category GS:
Definition 2.8 A site graph t is a site subgraph of a site graph s, denoted t ⊆ s,
1Vtif   V ⊆ V and t   s. A site subgraph is said to be minimal for some property P if, for every other site subgraph tj ⊆ s for which P holds, tj ⊆ t implies tj = t, and maximal for P if, t ⊆ tj implies t = tj. A site subgraph s[W ] ⊆ s is said to be induced if it is maximal given its agent set Vs[W ] = W . A site graph t ⊆ s is a connected component of s if it is a maximal connected site subgraph of s.
At this point it seems appropriate to note that, although many graph-theoretical concepts, such as subgraphs, connected components, paths, etc. extend in an in- tuitive manner to site graphs, the category of site graphs also has a few somewhat surprising properties due to the restriction of one link per site and the injectivity of morphisms. One such property is rigidity :
Lemma 2.9 (rigidity) Let x and y be site graphs and suppose x is connected, then any non-empty partial injection f from Vx to Vy extends to at most one embedding in [x; y].

This is a known result from the theory of geometry-less site graphs, which ex- tends unchanged to geometrically enhanced site graphs. We refer the interested reader to [17,10] for the proof. One consequence of lemma 2.9, is that there is a polynomial-time algorithm for computing the number of embeddings |[s; x]| of a connected site graphs s in a site graph x, that is, to count the number of site sub- graphs in x that are isomorphic to s. This is at the heart of the efficient simulation algorithm for Kappa models presented in [8].
We denote by GSC the subcategory of site graphs with contact graph C. Most of the definitions in the rest of our presentation of geometrically enhanced Kappa will be formulated with respect to a given GSC rather than GS. This restriction reflects the intuition that, in the context of some biochemical process, the active sites of a given type of elementary molecule (represented by the interface Σ(A) of some agent type A ∈ AC), its set of potential configurations (I(A), P (A), S(A)), as well as its potential interactions with other types of molecules (Λ(A), Ω(A)) are all fixed, irrespective of where and how the particular instances of A are embedded in some molecular complex.

Actions and rules
In order to define rewriting rules on site graphs, we need to be able to relate the site graphs before and after the application of a given rule. One option would be to extend one of the classic semantic approaches from graph rewriting, such as double or single pushout rewriting, which have been defined for geometry-less Kappa [6,10]. Instead, we will adopt the more syntactic concept of an action script as a sequence of atomic rewrite instruction, which has been used more extensively in the Kappa literature [8,17].
Definition 2.10 An atomic action α on a site graph s in GSC is one of the fol- lowing:
a subgraph addition +t of a complete site graph t in GSC,
a subgraph deletion −t of a complete site graph t in GSC,
a link addition +(u, a, v, b, Q) with orientation Q ∈ Ω(u, a, v, b)٨,
a link deletion −(u, a, v, b),
a state change ι(u, a) → p to p ∈ I(u, a),
a change of radius ρ(u) → r to r ∈ P (u),
a change of site position s(u, a) → p to p ∈ S(u, a), or
a change of link orientation ω(u, a, v, b) → O to O ∈ Ω(u, a, v, b), with u ∈ Vs, v ∈ Vs, a ∈ σs(u) and b ∈ σs(v).
An action α = (α1, α2,..., αN ) is a sequence of atomic actions αi on (αi—1 ·
αi—2 ··· α1 · s).
Link additions and deletions are symmetric. We denote by α · s the result of an atomic action α on s in GSC. An action α on s is well-defined if its result α · s is

α
s    α · s
f 	f (α)	 α · f
x  f (α) · x = (α · f )(α · s)


Figure 4. Diagram relating the various objects, arrows and actions defined on s, α, x and f.
a well-defined site graph. The parameter Q of a well-defined link addition may be Q = iff Ω(u, a, v, b) = ∅, in which case ωα·s(u, a, v, b) remains undefined. Link deletion are only well-defined for complete links. We only consider well-defined actions hereafter. A formal definition of the result of an action can be found in appendix A.1.
Given an embedding f ∈ [s; x] between two site graphs s and x in GSC, we define the transport f (α) of an atomic action α along f as the sequence of atomic actions f (αi), such that every f (αi) performs the analogue of the action αi on the corresponding site subgraph of the image of s in x (see appendix A.2 for a formal definition).
If s and x are both site graphs in GSC, α is a well-defined action on s, and
f ∈ [s; x], then the above definitions ensure that
the transport f (α) of α along f is well-defined,
there is an inverse action α—1 such that α—1 · α · s = s,
if x is complete, then so is f (α) · x,
there is a unique map (α · f ) ∈ [α · s; f (α) · x] called the result of the action α
on f , such that (α · f )(α · s)= f (α) · x (see A.3 for details).
Figure 4 illustrates the various objects, arrows and actions defined on s, α, x and f . Using the above definitions, we can now define the rules of our site graph rewriting system.
Example 2.11 Let t, s, x and y be as defined in example 2.5, then we can define two actions α1 and α2 as follows:
α1 = +(u, l, v, r, 1),	α2 = + u, l, v, r, Rz − π	, +t .
Then α1 is an atomic action defined on s that adds a straight link to s, that is, α1 · s = x. α2 is a non-atomic action defined on s that first adds a link (a 90◦ turn) to s and then adds the subgraph t, that is, α1 · s = +t · y.
Definition 2.12 A rule is a triple r = (s, α, k), where s is a site graph, α is an action defined on s and k ∈ R+ is a rate.
Example 2.13 Let t and s be defined as in example 2.5, and α1, α2 as defined in example 2.11, then we can define two rules r1 and r2 as follows:
r1 = (s, (α1, +t), k1),	r2 = (s, α2, k2).




r1 :

r2 :
k1 k2

Figure 5. Diagram representing the rule set of example 2.13.


Finally, we are ready to define our notion of a geometrically enhanced Kappa model.
Definition 2.14 A Kappa model is a pair K = (x0, R) with x0 a complete site graph in GSCK called the initial state of K, and R = {r1, r2,..., rN } a finite set of rules ri = (si, αi, ki) called the rule set of K, with left-hand sides si in GSCK .
For simplicity, we will write GSK instead of GSCK hereafter.
Example 2.15 Let C, t, s, r1 and r2 be defined as in example 2.13. Then we can define the Kappa model K = (x0, R) with initial state x0 = +t · t and rule set R = {r1, r2}.

Events and probabilities
Every Kappa model K has an associated Weighted Labeled Transition System (WLTS) [13] on complete site graphs:
Definition 2.16 Let r = (s, α, k) bea rule, R be a set of rules and x be a complete site graph. We define
the set of events in x associated with r as E (x, r)= [s; x],
the set of events in x associated with R as ER(x)=	r∈R E (x, r),
the activity of r in x as a(x, r)= k |[s; x]|, and
the activity of R in x as aR(x)=	r∈R a(x, r).
This defines a WLTS WK = (KK, ER, w, π0) for every Kappa model K = (x0, R), with
state space KK ⊆ GSK, the class of complete site graphs in GSK,
labels ER =	x∈KK ER(x), the set of events in KK associated with R,
weight function w : ER × KK → R+ defined as
j	 k	if e = ((s, α, k),f ) ∈ ER(x) and xj = f (α) · x,


initial probability distribution π0 = 1{x=x0}.

A transitions x −e→ xj, in WK
has probability P{x −e→ xj} = w(x,e,x′) if a
R
> 0,

and the subsequent time advance is an exponential random variable δt(x) such that
P{δt(x) > t} = e—aR(x)t.
We write x1 →∗ xN if there is a sequence of transitions

e1	e2
e3	eN−1

x1 −→ x2 −→ x3 −→ · · · −−−→ xN
in WK with w(xi, ei, xi+1) > 0, and denote by reach(K) ⊆ KK the set of reachable states of K: reach(K)= {x : x0 →∗ x}.
Realizations and constraints
Definition 2.17 A realization π : V → R3 × SO(3) of a geometrically enhanced site graph s is an embedding of s in three-dimensional euclidean space, that is, a map u '→ (r(u), R(u)) that assigns positions r(u) and orientations R(u) to agents u ∈ V .
Given a realization π = (r, R) of a site graph s, we call r and R the position map and orientation map of s, respectively. We can now define geometric soundness constraints for site graphs and Kappa models:
Definition 2.18 A site graph s with associated geometry (ρ, s, ω) is said to be
sound if and only if there is a realization π = (r, R) of s, such that
for every link (u, a, v, b) ∈ λ in the link structure of s, the geometry of (u, a), (v, b) and (u, a, v, b) is consistent, that is,
∀(u, a, v, b) ∈ dom(ω) ∩ dom(s)2 :
R(v)= ω(u, a, v, b)R(u)
r(v)+ R(v)s(v, b)= r(u)+ R(u)s(u, a)
and
there are no collisions in s, that is,
∀(u, v) ∈ dom(ρ)2 : u /= v ⇒ r(u) − r(v)  ≥ ρ(u)+ ρ(v).
We denote by G the set of site graphs that are geometrically sound and write s ∈ G if the site graph s is sound. We say that a Kappa model K = (x0, R) is geometrically sound, if its initial state x0 is geometrically sound.
We say that a pair of agents (u, v) in a site graph s are geometrically connected if u and v are connected by a path composed of links (w, a, wj, b) with completely specified geometries: (w, a, wj, b) ∈ dom(ω) ∩ dom(s)2 . We say s is geometrically connected if every pair (u, v) ∈ V 2 in s is geometrically connected. Let s be a site graph with geometrically connected components {c1, c2,..., cN }, then we have
s ∈ G ⇔ ∀i ≤ N : ci ∈ G,

because any agents that are not geometrically connected may be located arbitrarily far apart without violating any of the soundness constraints. It is easy to see that the system of equations in definition 2.18 becomes over-constrained if one fixes the position r(ui) and orientation R(ui) of an arbitrary agent ui in every geometrically connected component ci of s. This suggestsa simple O(n2) algorithm (with n = |λi|) for computing the soundness s ∈ G of a site graph s: for every ci ⊆ s
set r(ui)= 0 and R(ui)= 1 for an arbitrary agent ui ∈ Vi,
solve and check the soundness equations for the rest of (r, R)|Vi by traversing
ci starting from ui (in O(|λi|) time),
check for potential collisions in ci (in O(|Vi|2) time). See algorithm B.1 in appendix B for details.
Definition 2.19 Let WK = (KK, ER, w, π0) be the WLTS associated with the geo- metrically sound Kappa model K = (x0, R), then the geometrically sound transition

system
wj : Ej
WK is defined as the WLTS WK = (KK, ER, wj, π0) with weight function
× KK → R+ defined as

j	 k	if e = ((s, α, k),f ) ∈ ER(x) and xj = f (α) · x and xj ∈ G,


(r,f )
In other words, WK is the WLTS with transitions x −−−→ f (αr) · x restricted to
those transitions in WK for which f (αr) · x is sound.
Provided we start out from a geometrically sound initial state x0, a geometrically sound transition system WK will only evolve along trajectories whose states x0 →∗ x are also geometrically sound.
Using algorithm B.1 we can modify the well known simulation algorithm for Kappa systems [8] to efficiently simulate the WK of any geometrically sound model K by generating a null-event (that is, time advance without a transition) whenever algorithm B.1 returns f (αr) · x ∈/ G for some event (r, f ) in state x.
Locality
In this section we will introduce the notion of locality of a Kappa model. The core idea behind locality is the following: a Kappa model K = (x0, R) is said to be local if it is possible to decide whether or not any event ((s, α, k),f ) ∈ ER(x) will produce a sound site graph f (α) · x by inspecting only a finite amount of context around the image of the right-hand side α · s in f (α) · x. Note that the distinction of local vs. non-local models only makes sense for geometrically enhanced Kappa, as all geometry-less site graphs are geometrically sound by definition, and hence events in geometry-less Kappa models can never produce geometrically unsound graphs. Indeed, the existence of non-local Kappa models is one of the fundamental differences between geometrically enhanced and geometry-less Kappa.






2M	⎧⎪⎨⎪⎩
2N






(a)





M	⎧⎪⎨⎪⎩

N






(b)





Figure 6. Possible states of the model K from example 2.15: (a) an open chain with 2(N + M) — 1 links and one turn; (b) an almost closed chain with 2(N + M) — 1 links but three turns.
In order to make the concept of locality more precise, we first need to define what exactly we mean by context. For this purpose, we will use the concept of a closed ball around a subset of agents in a site graph.
Definition 3.1 Given a pair of connected agents (u, v) ∈ V 2 of a site graph s, the distance d(u, v) between u and v is defined as the length, that is, the minimum number of links, of the shortest path between u and v.
Definition 3.2 The closed ball Bδ(u, x) of radius δ around an agent u ∈ Vx of a site graph x is defined as the set of agents Bδ(u, x)= {v ∈ Vx : d(u, v) ≤ δ} that lie within distance δ of u in x.
The closed ball Bδ(f ) of radius δ around an embedding f ∈ [s; x] is the induced site subgraph

Bδ(f )= x
u∈Vs
Bδ(f (u), x) .

Definition 3.3 A Kappa model K = (x0, R) with initial state x0 and rule set R is said to be δ-local for a finite radius δ ∈ N, if for every state x ∈ reach(K) reachable in K, rule (s, α, k) ∈ R and embedding f ∈ [s; x], the following holds
Bδ(α · f ) ∈ G ⇒ f (α) · x ∈ G.
K is called local if there exists a finite radius δ ∈ N such that K is δ-local.
We denote by Lδ the set of δ-local Kappa models and by L = i Li the set of local Kappa models.
Example 3.4 To see that there are indeed non-local Kappa models K ∈/ L, consider the Kappa model K = (x0, R), as defined in example 2.15:
After n events, a state xn ∈ reach(K) of this model consists of two or more connected components that are either free agents t of type A, open chains cm, m ≤ n of m + 1 agents wi of type A with adjacent agents wi and wi+1 linked through m links (wi, l, wi+1, r), or loops, that is chains that have been closed. A given state xn can contain many loops, but at most two free agents t, or a single free agent t and a single open chain cm. Most events will connect the single free

agent t to the existing chain cm producing a new chain cm+1. Events involving rule r1 create a straight extension at one of the ends of the existing chain cm, while rule r2 creates a left or right turn at the l-end or r-end, respectively, of cm. Both r1 and r2 also create a new free agent t for the further extension of cm+1. Occasionally, the model will produce chains c2N+2M—1, such as shown in figure 6b, that can be closed into a rectangular loop rN,M of dimensions N × M by the event (r2,f = {u '→ w2N+2M—1,v '→ w0}).
Given any δ ∈ N, let x2δ+1 = +t · c2δ+1 be a site graph where c2δ+1 is a chain as shown in figure 6a with N = δ and M = 1, and let f2δ+1 = {u '→ w2δ+1,v '→ w0} with w2δ+1 and w0 the agents at the l-end and r-end of c2δ+1, respectively. Clearly, x2δ+1 ∈ reach(K) and f2δ+1 ∈ E (x2δ+1, r2). Assume we apply f2δ+1(α2) to x2δ+1, that is, we attempt to close the chain c2δ+1. Then the resulting site graph f2δ+1(α2) · x2δ+1 must be unsound, as the chain c2δ+1 has too few turns to be closed (only chains with three or more turns, such as the chain in figure 6b, can be closed,
). However, the closed ball Bδ(α2 · f2δ+1) is sound, as it is not closed (the agent wδ
is missing from Bδ(α2 · f2δ+1)). We conclude that
∀δ ∈ N : Bδ(α2 · f2δ+1) ∈ G ∧ f (α2) · x2δ+1 ∈/ G,
and therefore K ∈/ L.
Sufficient conditions for locality
The following are sufficient conditions for the locality of a model K:
A model K is local if its contact graph CK is acyclic. As we have seen in section 2.6, a site graph x is sound if all its connected components c ⊆ x are sound. If CK is acyclic, then no connected component c can have more agents than there are agent types in CK, that is, |Vc| ≤ |AK|. Hence no rule of (s, α, k) ∈ RK can affect any agent at a distance greater than δ = |AK| around its left-hand side s, and it follows that K is |AK|-local.
K is local if
∃δ ∈ N ∀x ∈ KK ∀(s, α, k) ∈ R ∀f ∈ [s; x]: 
Bδ(α · f ) ∈ G ⇒ f (α) · x ∈ G.
Since reach(K) ⊆ KK, the above statement is simply a stronger version of locality. We say that K is local with respect to its contact graph if it fulfills the above condition. An example of a model that is local with respect to its contact graph is a modified version Kj of the model K from example 3.4, with the rule r1 and the straight extension in ΩK removed. The possible connected components of any complete site graphs x ∈ KK′ are free agents t, chains c1, c2, c3 with one to three turns, respectively, and rectangles r1,1. Hence Kj ∈ L4. An example of a model that is not local with respect to its contact graph but still in L would be another modified version Kjj of the model from example 3.4, where we replace the initial state x0 by x1 = +t·c1, with c1 a chain of two agents










Δ(q, 1) = (q′, 0, R): 
T
(1)
H
T

(q)


Figure 7. Simulating Turing machines using Kappa models. The configurations of the Turing machine are represented by complete site graphs (the states of the model), while the transition function Δ is represented by the rule set of the model.
connected by a straight link and t a single free agent, and we refine the left-hand side of the rules r1 and r2, such that the new left-hand sides s1 and s2 match exactly the two agents at the free end of a chain that are connected by a turn and a straight extension, respectively. The possible connected components of any state x ∈ reach(Kjj) are free agents, chains c1 to c7, with straight extensions and turns interleaved, and rectangles r2,2. Thus Kjj ∈ L8. However, the class KK′′ = KK is identical to that of the model K from example 3.4, and hence Kjj can not be local with respect to its contact graph.
Undecidability of locality
Proposition 3.5 (undecidability) The set of local Kappa models L is un- decidable.
We will not give a full proof of proposition 3.5 here, but rather a proof sketch.
Proof sketch The proof is by many-one reduction from the halting problem. We will assume that we can fix a suitable G¨odel numbering for Kappa models such that they can be manipulated by Turing machines. 5 Conversely, when given a Turing machine M , it is easy to construct a geometry-less Kappa model (x0(M, n), R(M )) that simulates M for input n, with the rule set R(M ) implementing the state transition function of M , and x0(M, n) representing the initial state of M for input n, that is, a site graph representing M with the contents of its tape set to n and the head of M pointing to the first cell of its tape. Figure 7 illustrates this idea.
Without loss of generality, assume that every Turing machine M has ex- actly one dedicated final state q↓.  The rule set R(M ) of any Kappa model KM = (x0(M, n), R(M )) simulating a Turing machine M , can easily be extended with the rule set R∗ of some canonical non-local model K∗ = (x∗, R∗), such as the one given in example 3.4, and one additional rule r↓ = (s↓, +x∗, k↓) with k↓ > 0

5 When we want to reason about the decidability of sets of Kappa models, we are forced to limit ourselves to the class of Kappa models that can be encoded as natural numbers or finite bit strings, that is, models with rate constants and geometries consisting of computable numbers.

some non-zero rate constant, x∗ the initial state of K∗, and s↓ a site graph that embeds into exactly those states of KM that represent M being in its final state q↓. Since KM is geometry-less and completely deterministic, the extended model
j	= (x0(M, n), R(M )+ R∗ + {r↓}) can reach a “non-local state” if and only if
there is a state x ∈ reach(Kj ), in which r↓ becomes active, that is, E (x, r↓) /= ∅.
But this implies that x represents M being in a final state, and therefore Kj	is
a non-local model if and only if M halts. We conclude that the halting problem many-one-reduces to the decidability of L.	2
Reducing local models to geometry-less models
The definition of locality tells us that, for any rule (s, α, k) ∈ R of a δ-local model K = (x0, R), inspecting a finite amount of context (represented by the closed ball of radius δ) around the image of the right-hand side α · s of the rule in the result f (α) · x of an event ((s, α, k),f ) is sufficient to determine whether f (α) · x is sound or not. It therefore seems natural to think that, by extending the left-hand side s of the rule with a corresponding (finite) amount of additional context, one might be able to decide whether the result fj(α) · x of the extended event ((sj, α, k),fj), fj ∈ [sj; x] is sound, simply by checking whether the right-hand side α · sj of the extended rule itself is sound. If so, one could statically compute the “soundness” of all such extended rules (sj, α, k) ∈ Rj and then flatten the model Kj to obtain a geometry-less counterpart K that “behaves” the same as K. This intuition turns out to be correct.
Proposition 3.6 (reducibility) For every local Kappa model K ∈ L, there is a geometry-less Kappa model K that is strongly bisimilar to K.
For lack of space, we will not give a formal proof of proposition 3.6 here, but instead sketch the reduction from a δ-local model K to its geometry-less counterpart
K. The reduction consists of three steps:
reﬁne the rule set R of K up to radius δ to obtain Kj = (x0, Rj);
prune the resulting rule set Rj, by removing unsound rules, that is rules (s, α, k) for which α · s ∈/ G, to obtain Kjj = (x0, Rjj);
flatten the resulting model Kjj, that is, replace geometry with internal state in all site graphs and actions of Kj, to obtain K = (x0, R).

Each of the Kappa models Kj, Kjj and K resulting, respectively, from one of the above three steps can be shown to be bisimilar to its predecessor. The first step is based on the theory of rule reﬁnement [17]. Every rule r ∈ R is replaced by a finite set Bδ,K(r) of mutually exclusive, refined rules. Given a site graph s in GSK, one may build a set Bδ,K(s) inductively, starting from the set B0,K(s)= {s}, and extending sites (u, a) ∈ σt of site graphs t ∈ Bi,K(s) that are neither bound nor stubs according to Λ(Γ(u), a) in order to obtain Bi+1,K(s). This process is guaranteed to terminate for all i since Λ(A, a) is finite for any site (A, a) ∈ Σ. The theory of refinement guarantees, that every event in (r, f ) ∈ ER(x) maps to exactly one event (rj,fj) ∈ ER′ (x) of the refined rule set Rj =  r∈R Bδ,K(r), and thereby ensures the







(refinement)



(pruning)



ρ, s, ω A s, ω

s, ω
A

(flattening)
A ρ, s, ω
ρ, s, ω


Figure 8. The three-step process of reducing a site graph x in a 1-local Kappa model K to its geometry-less counterpart x in the geometry-less model K.
correctness of this step. However, for large and highly connected contact graphs CK, the set Bδ,K(r) may suffer a combinatorial explosion in the number of rules and the size of the corresponding site graphs even for moderate values of δ, making the computation of Bδ,K(r) intractable in practice.
The correctness of the second step follows from the definition of a geometrically sound WLTS: no transition in WK′ results from an unsound rule.
The last step can be achieved by first adding a set of dedicated sites (A, sρ), (A, (ss, a)) and (A, (sω, a, B, b)), for every agent type A, site (A, a) and link
(A, a, B, b) of the contact graph Cj  of Kj, and then replacing every site graph
x and atomic action α in Kj by a geometry-less counterpart x and α, respectively, in which the geometries of every agent u, site (u, a) and link (u, a, v, b) have been replaced by appropriate internal states of (u, sρ), (u, (ss, a)) and (u, (sω, a, Γ(v), b)), respectively. The correctness of this step is by construction of the flattening func- tion ¯· and locality itself: the transports of any action in Kjj can no longer result in unsound site graphs (all left-hand sides contain the necessary context and have passed pruning), and hence their geometry has become redundant.
Figure 8 illustrates the reduction of a concrete site graph x in a 1-local model
K to its geometry-less counterpart x in the geometry-less model K.
Conclusion and future work
We presented geometrically enhanced Kappa, a framework for geometrically en- hanced site graph rewriting and sketched an algorithm for tractable simulation.

We also showed that the geometric constraints introduced by the framework allows for the definition of non-local models and that all local models can be reduced to geometry-less Kappa models without changing the dynamics of the associated tran- sition system, if one is willing to accept a combinatorial increase in the number of rules of the model. Finally, we showed that locality is undecidable in general.
A principal limitation of our framework is that it is restricted to rigid geometric constraints, while the chemical species of some systems, such as polymer chains, enjoy a certain amount of flexibility in their structure. A possible solution to this limitation would be to allow geometric annotations to occupy continuous intervals in the corresponding vector spaces, rather than a finite set of fixed points. A further generalization would be to allow distributions over such intervals. However, this might increase the complexity of checking the soundness of the resulting site graphs, possibly making it intractable.
Another current limitation is that, while the possible realizations of site graphs may be computed in order to check their soundness, they remain inaccessible to the modeler. Indeed, they are not even kept track of in the current framework. Ex- tending the dynamics of the system to take the realization of its state into account might provide a way of modeling processes such as diffusion and compartmental- ization, which play a key role in certain biochemical processes. Combinations of the above are of course possible, and in general there is a spectrum of possible spa- tial extensions to Kappa, with geometry-less Kappa at one end, and coarse-grained molecular dynamics approaches, such as [14], at the other.
Another direction for future work is to explore approaches to answer the question of whether a given Kappa model is local or not approximately. Techniques such as [9] for computing overapproximations of the set reach(K) of reachable states of a model K based on abstract interpretation could help to find subsets of L if it turns out that locality is decidable with respect to the corresponding supersets of reach(K).
References
Bartocci, E., F. Corradini, M. R. D. Berardini, E. Merelli and L. Tesei, A shape calculus for biological processes, in: A. Cherubini, M. Coppo and G. Persiano, editors, ICTCS, 2009, pp. 30–33.
Blinov, M., J. Yang, J. Faeder and W. Hlavacek, Graph theory for rule-based modeling of biochemical networks, in: C. Priami, A. Ingo´lfsd´ottir, B. Mishra and H. Riis Nielson, editors, Transactions on Computational Systems Biology VII, Lecture Notes in Computer Science 4230, Springer Berlin / Heidelberg, 2006 pp. 89–106.
URL http://dx.doi.org/10.1007/11905455_5

Blinov, M. L., J. R. Faeder, B. Goldstein and W. S. Hlavacek, Bionetgen: software for rule-based modeling of signal transduction based on the interactions of molecular domains, Bioinformatics 20 (2004), pp. 3289–3291.
URL http://bioinformatics.oxfordjournals.org/content/20/17/3289.abstract
Buti, F., D. Cacciagrano, F. Corradini, E. Merelli and L. Tesei, Bioshape: a spatial shape-based scale- independent simulation environment for biological systems, Procedia CS 1 (2010), pp. 827–835.
Cardelli, L. and P. Gardner, Processes in space, in: F. Ferreira, B. L¨owe, E. Mayordomo and L. M. Gomes, editors, CiE, Lecture Notes in Computer Science 6158 (2010), pp. 78–87.
Danos, V., J. Feret, W. Fontana, R. Harmer, J. Hayman, J. Krivine, C. Thompson-Walsh and G. Winskel, Rewriting and Pathway Reconstruction for Rule-Based Models, in: D. D’Souza,
J. Radhakrishnan and K. Telikepalli, editors, 32nd IARCS Annual Conference on Foundations of Software Technology and Theoretical Computer Science (FSTTCS 2012) (2012), to appear, preprint
(2012) available at http://www.pps.univ-paris-diderot.fr/~danos/pdf/fsttcs.pdf.


Danos, V., J. Feret, W. Fontana, R. Harmer and J. Krivine, Rule-based modelling of cellular signalling, in: L. Caires and V. Vasconcelos, editors, Proceedings of the Eighteenth International Conference on Concurrency Theory (CONCUR’07), Lecture Notes in Computer Science 4703 (2007), pp. 17–41, available at http://www.pps.univ-paris-diderot.fr/~danos/pdf/ka-fix.pdf.

Danos, V., J. Feret, W. Fontana and J. Krivine, Scalable simulation of cellular signaling networks, invited paper, in: Z. Shao, editor, Proceedings of the Fifth Asian Symposium on Programming Systems, APLAS’2007, Singapore, Lecture Notes in Computer Science 4807 (2007), pp. 139–157, available at http://www.pps.univ-paris-diderot.fr/~danos/pdf/scalability.pdf.

Danos, V., J. Feret, W. Fontana and J. Krivine, Abstract interpretation of cellular signalling networks, in: F. Logozzo, D. Peled and L. D. Zuck, editors, VMCAI, Lecture Notes in Computer Science 4905 (2008), pp. 83–97.

Danos, V., R. Harmer and G. Winskel, Constraining rule-based dynamics with types, preprint (2011), available at www.pps.jussieu.fr/~russ/dcm.pdf.
Danos, V. and C. Laneve, Formal molecular biology, Theor. Comput. Sci. 325 (2004), pp. 69–110.
Deeds, E. J., J. A. Bachman and W. Fontana, Optimizing ring assembly reveals the strength of weak interactions, Proceedings of the National Academy of Sciences (2012).
URL http://www.pnas.org/content/early/2012/01/27/1113095109.abstract

Feret, J., T. Henzinger, H. Koeppl and T. Petrov, Lumpability abstractions of rule-based systems, Theoretical Computer Science 431 (2012), pp. 137–164, modelling and Analysis of Biological Systems Based on papers presented at the Workshop on Membrane Computing and Bio-logically Inspired Process Calculi (MeCBIC) held in 2008 (Iasi), 2009 (Bologna) and 2010 (Jena).
URL http://www.sciencedirect.com/science/article/pii/S0304397511010255

Gruenert, G., B. Ibrahim, T. Lenser, M. Lohel, T. Hinze and P. Dittrich, Rule-based spatial modeling with diffusing, geometrically constrained molecules, BMC bioinformatics 11 (2010), p. 307.

Lanman, J., J. Sexton, M. Sakalian and P. E. Prevelige, Jr., Kinetic analysis of the role of intersubunit interactions in human immunodeficiency virus type 1 capsid protein assembly in vitro, Journal of Virology 76 (2002), pp. 6900–6908.
URL http://jvi.asm.org/content/76/14/6900.abstract

Marques, A. J., R. Palanimurugan, A. C. Matias, P. C. Ramos and R. J. Dohmen, Catalytic mechanism and assembly of the proteasome, Chemical Reviews 109 (2009), pp. 1509–1536, pMID: 19265443.
URL http://pubs.acs.org/doi/abs/10.1021/cr8004857

Murphy, E., V. Danos, J. Feret, J. Krivine and R. Harmer, Rule based modelling and model refinement, in: H. Lodhi and S. Muggleton, editors, Elements of Computational Systems Biology, John Wiley and Sons, Inc., 2010 pp. 83–114.
Sitharam, M. and M. Agbandje-McKenna, Modeling virus self-assembly pathways: Avoiding dynamics using geometric constraint decomposition, Journal of Computational Biology 13 (2006), pp. 1232–1265.

Additional definitions
To simplify some of the definition below, we will first give a formal definition for two basic operations for composing or dividing site graphs, namely the disjoint union and the difference of two site graphs.
Definition A.1 The disjoint union x1 + x2 of two site graphs x1 and x2 in GSC is defined as the site graph in GSC with agent set V1+2 = V1 + V2, and with Γ1+2, λ1+2, ι1+2, ρ1+2, s1+2 and ω1+2 the disjoint unions, with respect to V1+2, of the corresponding components of x1 and x2.
Given two site graphs x1 and x = (x1 + x2), we call x − x1 = x2 the relative complement of x1 in x or simply the difference of x and x1. Given a site graph x
we say that {x1, x2,..., xN } is a partition of x if x = ΣN  xi.

Result of an action on a site graph
The result α · s of an atomic action α on a site graph s in GSC is defined as
• +t · s = s + t,
−t · s = s − t,
λ+(u,a,v,b)·s = λs − λ—(u,a,v,b) ∪ λ+(u,a,v,b),

ω+(u,a,v,b)·s = ωs ∪ ω+(u,a,v,b),
λ—(u,a,v,b)·s = λs − λ+(u,a,v,b) ∪ λ—(u,a,v,b),

ω—(u,a,v,b)·s = ωs − ω—(u,a,v,b),
ι(ι(u,a)→p)·s = ιs[(u, a) '→ ιs(u, a)/(u, a) '→ p],
ρ(ρ(u)→r)·s = ρs[u '→ ρs(u)/u '→ r],
s(s(u,a)→p)·s = ss[(u, a) '→ ss(u, a)/(u, a) '→ p], and
ω(ω(u,a,v,b)→O)·s = ωs[(u, a, v, b) '→ ωs(u, a)/(u, a, v, b) '→ p], with
A[a/b]= A − {a}∪ {b},
λ+(u,a,v,b) = {(u, a, v, b)}∪ {(v, b, u, a)},
λ—(u,a,v,b) = {(u, a), (v, b)}× { }∪ { }× {(u, a), (v, b)},


ω+(u,a,v,b) =



ω—(u,a,v,b) =
(v, b, u, a) '→ Q
∅	otherwise,
(u, a, v, b) '→ ωs(u, a, v, b)	if Ω(u, a, v, b) /= ∅,
(v, b, u, a) '→ ωs(v, b, u, a)
⎪⎩∅	otherwise,

where we only mention the components of α · s that differ from those in s. The result of a non-atomic action α = (α1, α2,..., αN ) is defined as
α · s = αN · αN—1 ··· α1 · s.

Transport of an action along an embedding
Definition A.2 Given an embedding f ∈ [s; x] between two site graphs s and x in
GSC, the transport f (α) of an atomic action α along f is defined as
f (+t)= +t,
f (−t)= −x [f|Vt (Vt)],
f (+(u, a, v, b, Q)) = +(f (u), a,f (v), b, Q),
f (−(u, a, v, b)) = −(f (u), a,f (v), b),
f (ι(u, a) → p)= (ι(f (u), a) → p),

f (ρ(u) → r)= (ρ(f (u)) → r),
f (s(u, a) → p)= (s(f (u), a) → p), and
f (ω(u, a, v, b) → O)= (ω(f (u), a,f (v), b) → O).
The transport f (α) of a non-atomic action α = (α1, α2,..., αN ) along f is defined as f (α)= (f (α1),f (α2),...,f (αN )).
Result of an action on an embedding
Definition A.3 Given two site graphs s and x in GSC, a well-defined action α on s and f ∈ [s; x], there is a unique map (α · f ) ∈ [α · s; f (α) · x] called the result of the action α on f with
• +t · f = f + 1Vt ,
−t · f = f|Vs—Vt ,
α · f = f for any other atomic action α, and
(α1, α2,..., αN ) · f = αN · αN—1 ··· , α1 · f for non-atomic actions.
Algorithms
Checking soundness of a site graph

Input: A site graph s = (V, C, λ, ι, ρ, s, ω, Γ).
Output: true if s ∈ G, false otherwise.
1: checked → ∅;
2: while V − checked /= ∅ do
3:	Pick an arbitrary agent i ∈ (V − checked);
4:	r(i) → 0; R(i) → 1;
5:	next → {i}; checkedj → ∅;
6:	while next /= ∅ do	d Check consistency.
7:	Pick an arbitrary agent u ∈ next;
8:	for all (v, b, u, a) ∈ dom(ω) ∩ dom(s)2 do
9:	if v ∈/ (checked ∪ checkedj) then
10:	Rj → ω(v, b, u, a)R(u);

20:	end if
21:	end for
22:	next → next − {u};
23:	checkedj → checkedj ∪ {u};
24:	end while
25:	for all (u, v) ∈ checkedj × checkedj : v /= u do	d Check for collisions.
26:	if r(u) − r(v)  ≤ ρ(u)+ ρ(v) then
27:	return false;	d s ∈/ G
28:	end if
29:	end for
30:	checked → checked ∪ checkedj;
31: end while
32: return true;	d s ∈ G
