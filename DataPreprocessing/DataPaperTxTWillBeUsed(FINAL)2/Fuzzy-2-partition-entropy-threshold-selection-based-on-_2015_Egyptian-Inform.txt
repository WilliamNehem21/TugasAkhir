
ORIGINAL ARTICLE
Fuzzy 2-partition entropy threshold selection based  on Big Bang–Big Crunch Optimization algorithm
Baljit Singh Khehra a,*, Amar Partap Singh Pharwaha b,1, Manisha Kaushal c,2

a Computer Science & Engineering Department, Baba Banda Singh Bahadur Engineering College, Fatehgarh Sahib 140407,
Punjab, India
b Electronics & Communication Department, Sant Longowal Institute of Engineering & Technology, Deemed University (Established by Govt. of India), Longowal-148106, Sangrur, Punjab, India
c Computer Science & Engineering, UIET, Punjab University, Chandigarh 160014, India

Received 5 September 2014; revised 3 February 2015; accepted 16 February 2015
Available online 10 March 2015

Abstract The fuzzy 2-partition entropy approach has been widely used to select threshold value for image segmenting. This approach used two parameterized fuzzy membership functions to form a fuzzy 2-partition of the image. The optimal threshold is selected by searching an optimal combination of parameters of the membership functions such that the entropy of fuzzy 2-partition is maximized. In this paper, a new fuzzy 2-partition entropy thresholding approach based on the technology of the Big Bang–Big Crunch Optimization (BBBCO) is proposed. The new proposed thresholding approach is called the BBBCO-based fuzzy 2-partition entropy thresholding algorithm. BBBCO is used to search an optimal combination of parameters of the membership functions for maximizing the entropy of fuzzy 2-partition. BBBCO is inspired by the theory of the evolution of the universe; namely the Big Bang and Big Crunch Theory. The proposed algorithm is tested on a number of standard test images. For comparison, three different algorithms included Genetic Algorithm (GA)-based, Biogeography- based Optimization (BBO)-based and recursive approaches are also implemented. From experimental results, it is observed that the performance of the proposed algorithm is more effective than GA-based, BBO-based and recursion-based approaches.
© 2015 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.
org/licenses/by-nc-nd/4.0/).




* Corresponding author. Tel.: +91 9463446505/+91 8283809605.
E-mail addresses: baljitkhehra74@gmail.com, baljitkhehra@rediffmail. com, baljit.singh@bbsbec.ac.in (B.S. Khehra), amarpartapsingh@ yahoo.com (A.P.S. Pharwaha), er.manishakaushal@gmail.com (M. Kaushal).
1 Tel.: +91 9463122255.
2 Tel.: +91 9592200491.
Peer review under responsibility of Faculty of Computers and Information, Cairo University.


http://dx.doi.org/10.1016/j.eij.2015.02.004
Introduction

Image segmentation is a fundamental pre-processing technique in the field of machine vision. The purpose of image segmenta- tion is to subdivide an image into non-overlapping constituent regions that have the same features and to extract those of interest. Depending on the particular application, different techniques for image segmentation have been used, such as image thresholding, edge detection, region growing, stochastic models, ANN and clustering techniques [1]. Image thresholding is one of the well-known techniques for image segmentation

1110-8665 © 2015 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

134	B.S. Khehra et al.


because of its simplicity and stable performance among other image segmentation techniques. One of the most frequently used image thresholding approaches is global thresholding [2]. The principal assumption behind global thresholding is that the foreground and background regions can be distinguished by selecting a suitable value from gray level values of image known as threshold value. In the past years, many global thresholding techniques have been proposed by researchers to select suitable threshold value for segmenting images and rec- ognize patterns. Pun [3] proposed a method for image thresh- olding. This method is based on Shannon entropy. Kapur [4] found a method for gray-level picture thresholding using the entropy of the histogram. In this method, Kapur’s measure is used to find the entropy of image histogram. Sahoo et al. [5] used Renyi’s entropy to find the threshold value of the image. De Albuquerque et al. [6] proposed a thresholding method based on Tsallis entropy. Li and Lee [7] solved the threshold selection problem by minimizing the crossentropy between the original image and its segmented version. Nie et al. [8] used co-occurrence matrix to find threshold value in 2D minimum local crossentropy thresholding approach. Tang et al. [9] employed genetic algorithm to select the thresholds in multi- level minimum crossentropy threshold selection approach. Horng [10] used the honeybee mating optimization to find the thresholds of the multilevel thresholding. Horng and Liou
[11] applied the firefly algorithm to search for the thresholds of histogram of image based on the minimum crossentropy criterion.
Cheng et al. [12] proposed fuzzy c-partition entropy approach to select threshold value. In this method, two parameterized fuzzy membership functions are used to form a fuzzy 2-partition of the image. One partition is related to the foreground region and other is related to the background region. The optimal threshold is selected by searching an opti- mal combination of parameters of the membership functions such that the entropy of fuzzy 2-partition is maximized. Benabdelkader and Boulemden [13] used a recursive algorithm to find a suitable combination of parameters of the member- ship functions. In this approach, two parameters of trapezium fuzzy membership function are optimized to find suitable threshold value. In Tang et al. [14] recursive approach, three parameters of two fuzzy membership functions (s-function and z-function) are optimized to select optimal threshold value of image. Despite a large number of researchers have done work in the field of image thresholding by using fuzzy c-parti- tion entropy, they all face the problem that the computation time needed for searching an optimal combination of para- meters of the membership functions to maximize the entropy of fuzzy c-partition increases exponentially when the number of parameters of the membership functions increases. Thus, selection of an optimal combination of parameters of the mem- bership functions to maximize the entropy of fuzzy c-partition is an optimization problem. In last decades, metaheuristic algorithms have been flourishing for optimization problems. These algorithms are inspired by the behaviors of natural phe- nomena. Many different metaheuristic algorithms such as genetic algorithm [15], ant colony optimization algorithm [16], biogeography based optimization approach [17], bacterial foraging algorithm [18] have been successfully applied to max- imize entropy of fuzzy c-partition for image segmenting. Big Bang–Big Crunch Optimization (BBBCO) algorithm is a recent member in the optimal algorithm family [19]. It is
inspired by the theory of the evolution of the universe, namely the Big Bang and Big Crunch Theory. The search mechanism of BBBCO generates random points in the Big Bang phase and shrinks those points to a single representative point via a cen- ter of mass or maximum cost approach in the Big Crunch phase. BBBCO algorithm has several advantages over other metaheuristic algorithms: the inherent numerical simplicity of the algorithm with relatively few control parameters, low com- putation cost, high convergence, and easy implementation [20]. For its simplicity, easy implementation, low time complexity, quick convergence, quality of solution, and robustness, recent- ly BBBCO algorithm has been successfully applied to a variety of optimization problems, such as parameter estimation in structural systems [20], design of steel frames [21], optimized echo state networks [22], and fuzzy controllers design [23,24]. Encouraged by these successful applications, the feasibility of BBBCO algorithm for searching an optimal combination of parameters of the fuzzy membership functions to find optimal threshold value in the image is investigated.
The aim of this paper was focused on the selection of opti- mal image threshold value by using fuzzy 2-partition entropy criterion. In this paper, BBBCO algorithm is used to select an optimal combination of parameters of the membership functions for maximizing the entropy of fuzzy 2-partition. The selected optimal parameters are used to find optimal image threshold value. The proposed thresholding approach is called the BBBCO-based fuzzy 2-partition entropy thresh- olding algorithm. The performance of proposed algorithm is tested on a number of standard test images. For comparison, three different algorithms included Genetic Algorithm (GA)- based, Biogeography-based Optimization (BBO)-based and recursion-based approaches are also implemented.
The rest of the paper is organized as follows. Section 2 intro- duces the Big Bang–Big Crunch Optimization algorithm. Section 3 presents the mathematical model used to describe the concepts of fuzzy 2-partition entropy for image. In Section 4, the proposed BBBCO-based fuzzy 2-partition entropy thresholding algorithm is described in detail. Experiments on 11 standard test images are carried out in Section 5, where compar- isons with GA-based, BBO-based, recursion-based approaches and the proposed approach are made. Finally, Section 6 con- cludes the paper and suggests future research directions.

Big Bang–Big Crunch Optimization algorithm

The Big Bang–Big Crunch theory is a broadly accepted theory for the origin and evolution of the universe. In the Big Bang phase, energy dissipation produces disorder state of particles randomly, whereas, in the Big Crunch phase, randomly dis- tributed particles are drawn into an order. The Big Bang–Big Crunch Optimization (BBBCO) algorithm is inspired by this theory [19]. Randomness is the key feature of the Big Bang phase. Randomness resembles the energy dissipation in nature while convergence to a local or global optimum point can be seen as gravitational attraction [20]. Since energy dissipation creates disorder from ordered particles, randomness is used as a transformation from a converged solution (order) to the birth of totally new candidate solutions (disorder).
BBBCO algorithm consists of two phases: Big Bang phase and Big Crunch phase. Initially, a population of some candi- date solutions is created from the entire search space. In Big

Fuzzy 2-partition entropy threshold selection	135

Bang phase, candidate solutions are randomly distributed over the entire search space. The Big Bang phase is followed by the
and Z-fuzzy membership function is defined as
8> 1	j 6 a

Big Crunch phase. The Big Crunch is a convergence operator
that has many inputs but only one output, which can be named as the center of mass. The center of mass is computed from the
lB( j)= Z( j; a; b; c)= 
( j—a)2 (c—a)(b—a)
( j—c)2
a < j 6 b
(5)

current positions of each candidate solution in the population and its associated fitness value. It is defined as
(c—a)(c—b)	b < j 6 c
: 0	j > c

XNp  xi
where 0 6 a 6 b 6 c 6 Lmax, parameters a, b and c determine

C = 	i=1 Fi
p  1
i=1 Fi
(1)
the shape of S and Z fuzzy membership functions as shown
in Fig. 1.
Two probability distribution functions can be found from

where C is the position of the center of mass; xi is the position
of candidate i in an n-dimensional search space; Fi is a fitness value of candidate i; and Np is the population size in Big Bang phase. Here, n is the number of parameters to be optimized.
The new candidates around the center of mass are calculat- ed as follows:
the above mentioned fuzzy distribution of gray level values
of the image: one for the foreground region and second for the background region. The probability distribution functions of the foreground and the background regions [26] are described as follows:
Probability distribution function of the foreground region:

xnew = C + r(x

max
— xmin
)/(k + 1)	(2)
PF =
LXmax
lF ( j)p(j)	(6)

where r is a random number in the interval [—1, 1]; xmax and
xmin are the upper and lower limits on the values of the candi-
dates; and k is the current iteration step.
Based upon the above discussion, BBBCO algorithm can be



j=0
Probability distribution function of the background region:
LXmax



Step 1: [Initialization] Generate a random set of Np candi- date solutions (population) in the search space.
Step 2: [Fitness Evaluation] Evaluate the fitness function
values of all the candidate solutions of the population.
From the definition of Shannon entropy [27], the entropy of foreground region pixels and the background region pixels can be defined as follows:
Shannon fuzzy entropy for the foreground region pixels:

Step 3: [Big Crunch Phase] Calculate the center of mass for the current population of candidate solutions using Eq. (1). Step 4: [Big Bang Phase] Calculate new candidate solutions
Lmax
HF(a; b; c)=— 
j=0
lF ( j)pj log

Lmax
j=0
lF ( j)pj!
(8)

around the center of mass using Eq. (2).
Step 5: Return to Step 2 until the stopping criteria
Shannon fuzzy entropy for the background region pixels:

(maximum number of iterations/desired solution) is not met. Step 6: Stop.
Lmax
HB(a; b; c)=— 
j=0
lB( j)pj log

Lmax
j=0
lB( j)pj !
(9)

Fuzzy 2-partition entropy of image

Let f(x, y) be the gray level value of the image at the pixel (x, y) and p0 ; p1; p2; ... ; pj ; ... ; pLmax be the probability distribution of the gray level values of the image. pj is defined as
pj = nj/(M × N)	(3)
where nj is the number of pixels in the image with gray level j,
j = 0, 1, 2, .. ., Lmax.
For partitioning an image into foreground (white) and back- ground (black) regions, two fuzzy membership functions (S- function and Z-function) [25] are used. S-fuzzy membership function is a membership function of the foreground region and Z-fuzzy membership function is a membership function of the background region. Such partitioning is called fuzzy 2-parti- tion of image. S-fuzzy membership function is defined as
8> 0	j 6 a



	
The sum of the two entropies is written as
H(a; b; c)= HF(a; b; c)+ HB(a; b; c)	(10)

1 — (c—a)(c—b) b < j 6 c
: 1	j > c
Figure 1	Graphical representation of Z and S fuzzy membership functions.

136	B.S. Khehra et al.


The objective is to search an optimal combination of para- meters a, b and c such that H (a, b, c) is maximized. The opti- mal values of a, b and c that maximize H (a, b, c) are used to find optimal threshold for separating the foreground region from the image background [14] i.e.
(a*, b*, c*)= arg max{H(a, b, c)}	(11)
(a,b,c)∈f
where f is the gray level value of the image whose value varies
from 0 to Lmax.
Threshold value is the intersection point of lF and lB curves as shown in Fig. 1. The intersection point depends upon the parameters a, b and c. It is calculated from Eqs. (4) and (5). Thus, the optimal threshold from the optimal values of a, b and c that maximize H (a, b, c) is calculated as follows [14,16]:
The following procedure is adopted for this evaluation:

Step 3.1: Read input image I
Step 3.2: Find the size of input image M · N
Step 3.3: Find the number of pixels in the image whose gray level j, j = 0, 1, 2, .. ., Lmax
h(j), j = 0, 1, 2, ... , Lmax
Step 3.4: Find the probability distribution of the gray level
values of the image
p(j)= h(j)/(M × N)	(14)
Step 3.5: Fuzzification of input image I through parameters
ai, bi and ci using Eqs. (4) and (5)
For each gray level value j, j = 0, 1, 2, .. ., Lmax

a* +	(c* — a* )(b* — a* )/2
c* — p(ﬃﬃcﬃﬃ*ﬃﬃﬃ—ﬃﬃﬃﬃﬃaﬃﬃﬃ*ﬃ)ﬃﬃ(ﬃﬃcﬃﬃ*ﬃﬃﬃ—ﬃﬃﬃﬃﬃbﬃﬃ*ﬃﬃ)ﬃﬃ/ﬃﬃ2ﬃﬃ
(a* + c*)/2 6 b* 6 c*
a* 6 b* 6 (a* + c*)/2
0	j 6 ai
>	2


	

BBBCO-based fuzzy 2-partition entropy thresholding
>>:
i
(ci —ai )(ci —bi )
bi < j 6 ci

algorithm

The parameter estimation problem is an optimization problem
1	j > ci
8> 1	j 6 ai

>< 1 —	( j—ai )2
a < j 6 b

mization problem is defined as follows:
Find an optimal combination of a, b, c such that H (a, b, c) is maximum. Here, objective function is
(c —a )(c —b )	bi < j 6 ci
0	j > ci
Step 3.6: Find fuzzy entropy for the foreground region and

Lmax
H(a, b, c)=— 
lF ( j)pj log
 LXmax
lF ( j)p !#
the background region using Eqs. (8) and (9)

j=0
"LXmax
l ( j)p log
j=0
  LXmax
j
l ( j)p !#
(13)
Lmax
HF(ai, bi, ci)=— 
j=0
lF ( j)p( j) log

Lmax
j=0
lF ( j)p( j)!
(17)

B	j
j=0
B	j
j=0
Lmax
HB(ai, bi, ci)=— 
lB( j)p( j) log
 LXmax
lB( j)p( j)!
(18)

In case of gray level images that have 256 gray levels, the
search space of parameters is as follows:
j=0
j=0

(a, b, c)∈ [0, 255]
In this paper, a BBBCO-based fuzzy 2-partition entropy
thresholding algorithm is proposed. The detail of the proposed algorithm is introduced as follows:
Step 1: Initialize the optimization parameters
Population size (Np)
Number of iterations (In)
Number of variables (var = 3: a, b, c)
Step 3.7: Evaluate the fitness value of a feasible solution
candidate of population in an arbitrary iteration using Eq. (10)
Fi = H(Si)= H(ai, bi, c)= HF(ai, bi, ci)+ HB(ai, bi, ci)	(19)
Step 4: Arrange feasible solution candidates of the popula-
tion in descending order according to their respective fitness value
Si and the corresponding fitness function value Fi

Limits of parameters (0 6 a, b, c 6 Lmax)
2 X11  X12  X13 3
6  21	22	23 7
2 S1 3
6  2 7

Step 2: Initialize the population
Generate random population according to the popula-


X =	.	.	.
64  .	.	. 75  64 . 75
     	

and the corresponding fitness value

Population is a random set of some feasible solution candidates. Each feasible solution candidate is denoted as
2 F1 3
6  2 7

Si ← X [i, var]
Sk =[ ai  bi  ci ], i = 1, 2, 3, ... , Np
Step 3: Evaluate the value of the objective function for each
F =	.
64 FNp
775

feasible solution candidate as its fitness
F i, i = 1, 2, 3, ... , Np
{Xi1}∈ a, {Xi2}∈ b, {Xi3}∈ c

Fuzzy 2-partition entropy threshold selection	137


























































Figure 2 Segmentation of cameraman image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO-based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.

Step 5: For guiding the new search space, the center of mass for the current population of the feasible solution candi- dates at the kth iteration is determined as
Xk is the value of the jth variable (j = 1, 2, 3) of the ith feasible solution candidate (i = 1, 2, 3, .. ., Np) at the kth iteration (k = 1, 2, 3, .. ., In).

XNp  Xk
Step 6: Generate Np — 1 feasible solution candidates for the

Ck =
	i=1 Fk
Np  1 
i=1 Fk
(20)
next population around the center of mass by adding or
subtracting a normal random number whose value decreas- es as the iteration elapses. This can be formulated as

138	B.S. Khehra et al.


























































Figure 3 Segmentation of circuit image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO- based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.

Xmax is the upper limit of the variable j and Xmin is the lower

Xk+1 = Ck + rj Xmax — Xmin /(k + 1)	(21)
ij
limit of variable j.
ij

k+1

where Ck stand for the center of mass for the variable j at kth
Np — 1 feasible solution candidates of the old population (Xk) with Np — 1 feasible solution candidates generated in

iteration, rj is a random number from [—1, 1] for the variable j,	Step 6. The best one feasible solution candidate of the old

Fuzzy 2-partition entropy threshold selection	139



























































Figure 4 Segmentation of bag image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO-based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.

population (Xk) is copied to new population (Xk+1). This is done to prevent loosing the best-found solution.
Step 8: Return to Step 3 until the stopping criteria (maximum iteration/desired solution) is not met.
Step 9: Stop.

Experimental results and comparative performance

In this section, the experimental results are discussed. This dis- cussion includes the selection of optimal threshold value, and some experiments are performed on standard test images to

140	B.S. Khehra et al.



























































Figure 5  Segmentation of glass image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO-based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.



illustrate the performance of the proposed approach for thresholding. For comparison, BBO-based fuzzy 2-partition entropy thresholding algorithm, GA-based fuzzy 2-partition entropy thresholding algorithm and recursion-based fuzzy 2-
partition entropy thresholding algorithm are considered. MATLAB 7.7.0 (R2008b) is used to implement these algo- rithms. All the experiments are performed on Intel(R) Core(TM) 2 Duo CPU T7500, 1.99 GB of RAM with

Fuzzy 2-partition entropy threshold selection	141



























































Figure 6 Segmentation of spine image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO- based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.


2.2 GHz machine. The proposed algorithm, BBO-based fuzzy 2-partition entropy thresholding algorithm and GA-based fuzzy 2-partition entropy thresholding algorithm are meta- heuristic algorithms while recursion-based fuzzy 2-partition entropy thresholding algorithm is a recursive algorithm. The key parameters of meta-heuristic algorithms are listed below:
BBBCO-based algorithm: population size = 10, elitism parameter = 1, maximum number of iteration = 100.
BBO-based algorithm: population size = 10, mutation rate = 0.15, maximum immigration rate = 1, maximum emigration rate = 1, elitism parameter = 1, maximum number of iteration = 1000.

142	B.S. Khehra et al.



























































Figure 7  Segmentation of pout image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO-based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.


GA-based algorithm: population size = 10, crossover probability = 0.75, mutation probability = 0.15, elitism parameter = 1, maximum number of iteration = 100.
Experimental results
Eleven standard test images, named ‘‘Cameraman’’, ‘‘Circuit’’, ‘‘Bag’’, ‘‘Glass’’, ‘‘Spine’’, ‘‘Pout’’, ‘‘Moon_surface’’, ‘‘Lion’’,

Fuzzy 2-partition entropy threshold selection	143


























































Figure 8 Segmentation of moon_surface image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO-based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.


‘‘Butterfly’’, ‘‘US_air_force_plane’’ and ‘‘Lady’’ with size 256 · 256,  280 · 272,  250 · 189,  181 · 282,  367 · 490,
291 · 240, 256 · 256, 512 · 512, 512 · 512, 512 · 512 and
512 · 512, respectively, and with 256 gray levels and different histogram distribution. The standard test images are shown in Figs. 2–12(a) and their histograms are shown in
Figs. 2–12(b). The optimal values of parameters a, b and c are computed by four methods for these eleven images. Table 1 shows the optimal values of parameters a, b and c that are found for eleven standard test images by different methods. The optimal threshold values are calculated from the optimal values of parameters a, b and c obtained by different methods

144	B.S. Khehra et al.


























































Figure 9 Segmentation of lion image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO-based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.



for these standard test images. Such optimal values are shown in Table 2.
In order to demonstrate the efficiency of the proposed algo- rithm, all thresholded results of the proposed algorithm for ele- ven standard test images are displayed in Figs. 2–12(c). For
comparison, all thresholded results of BBO-based fuzzy 2-par- tition entropy thresholding algorithm, GA-based fuzzy 2-par- tition entropy thresholding algorithm and recursion-based fuzzy 2-partition entropy thresholding algorithm for different standard test images are displayed in Figs. 2–12(d,e,f),

Fuzzy 2-partition entropy threshold selection	145

























































Figure 10 Segmentation of butterfly image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO- based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.

respectively. From visualization point of view, it is observed that all thresholded results of the proposed algorithm are regarded as acceptable accounting visual effects.
Performance measures
in this research work, in order to obtain the objective perfor- mance of the proposed algorithm and the consistent compar- isons, two most popular objective performance measures, peak signal to noise ratio (PSNR) and uniformity, are used. PSNR [10], measured in decibel (dB), is defined as

In practice, however, subjective evaluation of segmented images is usually too inconvenient, time consuming and expensive. So,
PSNR = 20log10
 255 	(22)
RMSE

146	B.S. Khehra et al.


























































Figure 11 Segmentation of US_airforce_plane image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO-based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.


where RMSE is the root mean-squared error that is defined as
sPﬃﬃﬃﬃﬃﬃMﬃﬃﬃﬃﬃPﬃﬃﬃﬃﬃNﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ2ﬃ
PSNR is used to determine the quality of the thresholded images. For the better thresholded image quality, the value




Here I and S are input and segmented images of size M · N, respectively.
geneity in image. It is defined as

Fuzzy 2-partition entropy threshold selection	147


























































Figure 12 Segmentation of lady image (a) original image, (b) histogram, (c–f) segmentation results of the proposed approach, BBO- based approach, GA-based approach and recursive approach, and (g–i) performance characteristics of BBBCO, BBO and GA to find optimal parameters (a, b, c) that are used for calculating optimal threshold.

U = 1 —
1
k=0

P(i,j)∈Rk
{f(i, j)— l }2i
(24)
minimum gray levels in the input image, respectively and lk
is the mean gray level of pixels in kth region that is defined as

MN(I
max
— Imin)
f(i, j)
k	
k	nk
(25)

where Rk is the kth segmented region; f (i, j) is the gray level value of pixel (i, j); Imax and Imin are the maximum and
Here nk is the total number of pixels in the segmented
region Rk.

148	B.S. Khehra et al.


The value of the uniformity measure lies between 0 and 1. Higher value of uniformity means that the quality of the thresholded image is better [14]. For evaluating the perfor- mance of the threshold values obtained according to each algo- rithm mentioned earlier, PSNR and uniformity measures are used. Table 3 shows the values of PSNR and uniformity mea- sures obtained from four different methods for eleven standard test images. This table provides the values of PSNR and uni- formity measures for the comparative study. The bold values of different parameters in table for an algorithm indicate
higher performance as compared to other algorithms. From these table values, it is observed that the proposed algorithm is superior to the other three methods.

Computational complexity analysis

To show the computational complexity analysis of the pro- posed algorithm, BBO-based fuzzy 2-partition entropy thresh- olding  algorithm,  GA-based  fuzzy  2-partition  entropy







Fuzzy 2-partition entropy threshold selection	149





















thresholding algorithm and recursion-based fuzzy 2-partition entropy thresholding algorithm, the processing time of the proposed algorithm is compared with those of BBO-based fuzzy 2-partition entropy thresholding algorithm, GA-based fuzzy 2-partition entropy thresholding algorithm and recursion-based fuzzy 2-partition entropy thresholding algorithm. The proposed algorithm, BBO-based fuzzy 2-partition entropy thresholding algorithm and GA-based fuzzy 2-partition entropy thresholding algorithm are iterative algorithms. Thus, the proposed algorithm is also compared with BBO-based fuzzy 2-partition entropy thresholding algorithm and GA-based fuzzy 2-partition entropy thresholding algorithm based on the number of iterations required to find the optimal values of parameters a, b and c. The performance characteris- tics of iterative methods: BBBCO-based, BBO-based and GA-based are displayed in Figs. 2–12(g,h,i). Table 4 shows the number of iterations performed by iterative algorithms and the computation time of the four different methods. From the table values, it is found that the proposed algorithm is faster than the other three algorithms.


Conclusion and future work

This paper presents a new fuzzy 2-partition entropy threshold- ing approach based on the Big Bang–Big Crunch Optimization algorithm. The proposed algorithm is compared with three dif- ferent algorithms included BBO-based fuzzy 2-partition entropy thresholding algorithm, GA-based fuzzy 2-partition entropy thresholding algorithm and recursion-based fuzzy 2- partition entropy thresholding algorithm. For evaluating the performance of the proposed algorithm, experiments are con- ducted on a number of standard test images. To check the effectiveness of the proposed method, three performance met- rics are used. These performance metrics are PSNR, uniformi- ty and computation time. PSNR and uniformity are used to measure the quality of the thresholded images while computa- tion time is used to get an idea of complexity. From the experimental results based on PSNR and uniformity, it is observed that the performance of the proposed algorithm is better than other three algorithms. From computational point of view, the proposed algorithm is faster than other three algo- rithms. Thus, the experimental results of the proposed



















approach are quite promising. These results encourage further research for applying BBBCO-based fuzzy 2-partition entropy thresholding algorithm on medical images to develop comput- er-aided disease diagnosis systems.

References

Quintanilla-Dominguez J, Ojeda-Magana B, Cortina-Januchs MG, Ruelas R, Vega-Corona A, Andina D. Image segmentation by fuzzy and possibilistic clustering algorithms for the identifica- tion of microcalcifications. Sci Iranica 2011;18(3):580–9.
Shitong Wang, Chung FL. Note on the equivalence relationship between Renyi-entropy and Tsallis-entropy based thresholding. Pattern Recogn Lett 2005;26(14):2309–12.
Pun T. Entropies thresholding, a new approach. Comput Vision, Graphics Image Process 1981;16(2):210–39.
Kapur JN. A new method for gray-level picture thresholding using the entropy of the histogram. Comput Vision, Graphics Image Process 1985;29(3):273–85.
Sahoo Prasanna, Wilkins Carrye, Yeager Jerry. Threshold selec- tion using Renyi’s entropy. Pattern Recogn 1997;30(1):71–84.
de Albuquerque M Portes, Esquef IA, Gesualdi Mello AR. Image thresholding using Tsallis-entropy. Pattern Recogn Lett 2004;25(9):1059–65.
Li CH, Lee CK. Minimum cross entropy thresholding. Pattern Recogn 1993;26(4):617–25.
Nie Fangyan, Gao Chao, Guo Yongcai, Gan Min. Two- dimensional minimum local cross-entropy thresholding based on co-occurrence matrix. Comput Electr Eng 2011;37(5): 757–67.
Tang Kezong, Yuan Xiaojing, Sun Tingkai, Yang Jingyu, Gao Shang. An improved scheme for minimum cross entropy thresh- old selection based on genetic algorithm. Knowl-Based Syst 2011;24(8):1131–8.
Horng Ming-Huwi. Multilevel minimum cross entropy threshold selection based on the honey bee mating optimization. Expert Syst Appl 2010;37(6):4580–92.
Horng Ming-Huwi, Liou Ren-Jean. Multilevel minimum cross entropy threshold selection based on the firefly algorithm. Expert Syst Appl 2011;38(12):14805–11.
Cheng HD, Cheng Jim-Rong Chen, Li Jiguang. Threshold selection based on fuzzy c-partition entropy approach. Pattern Recogn 1998;31(7):857–70.
Benabdelkader Souad, Boulemden M. Recursive algorithm based on fuzzy 2-partition entropy for 2-level image thresholding. Pattern Recogn 2005;38(8):1289–94.

150	B.S. Khehra et al.


Tang Yinggan, Weiwei Mu, Zhang Ying, Zhang Xuguang. A fast recursive algorithm based on fuzzy 2-partition entropy approach for threshold selection. Neurocomputing 2011;74(8):3072–8.
Tao Wen-Bing, Tian Jin-Wen, Liu Jian. Image segmentation by three-level thresholding based on maximum fuzzy entropy and genetic algorithm. Pattern Recogn Lett 2003;24(16):3069–78.
Tao Wenbing, Jin Hai, Liu Liman. Object segmentation using ant colony algorithm and fuzzy entropy. Pattern Recogn Lett 2007;28(7):788–96.
Chatterjee Amitava, Siarry Patrick, Nakib Amir, Blanc Raphael. An improved biogeography based optimization approach for segmentation of human head CT-scan images employing fuzzy entropy. Eng Appl Artif Intell 2012;25(8):1698–709.
Sanyal Nandita, Chatterjee Amitava, Munshi Sugata. An adap- tive bacterial foraging algorithm for fuzzy entropy based image segmentation. Expert Syst Appl 2011;38(12):15489–98.
Erol Osman K, Eksin Ibrahim. A new optimization method: big bang–big crunch. Adv Eng Softw 2006;37(2):106–11.
Tang Hesheng, Zhou Jin, Xue Songtao, Xie Liyu. Big bang–big crunch optimization for parameter estimation in structural systems. Mech Syst Signal Process 2010;24(8):2888–97.
Hasancebi O, Kazemzadeh Azad S. An exponential big bang–big crunch algorithm for discrete design optimization of steel frames. Comput Struct 2012;110–111:167–79.
Deihimi Ali, Solat Alireza. Optimized echo state networks using a big bang–big crunch algorithm for distance protection of series- compensated transmission lines. Electr Power Energy Syst 2014;54:408–24.
Kumbasar Tufan, Hagras Hani. Big bang–big crunch optimiza- tion based interval type-2 fuzzy PID cascade controller design strategy. Inf Sci 2014;282:277–95.
Yesil Engin. Interval type-2 fuzzy PID load frequency controller using big bang–big crunch optimization. Appl Soft Comput 2014;15:100–12.
Cheng HD, Xu Huijuan. Fuzzy approach to contrast enhance- ment. In: Proceedings of IEEE 14th international conference on pattern recognition; 1998. p. 1549–51.
Khehra Baljit Singh, Pharwaha Amar Partap Singh. Automatic detection of microcalcifications in digitized mammograms using fuzzy 2-partition entropy and mathematical morphology. In: Proceedings of the IASTED international conference on signal and image processing; 2012. p. 220–227.
Shannon CE. A mathematical theory of communication. Int J Bell
Syst Tech 1948;27:379–423.
Yin Shibai, Zhao Xiangmo, Wang Weixing, Gong Minglun. Efficient multilevel image segmentation through fuzzy entropy maximization and graph cut optimization. Pattern Recogn 2014;47:2894–907.
