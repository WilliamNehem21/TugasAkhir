IWCIA 2001 Preliminary Version




A New 3D 12-Subiteration Thinning Algorithm Based on P -Simple Points

Christophe Lohou 1 and Gilles Bertrand 2
Laboratoire A2SI,
E´cole Sup´erieure d’Ing´enieurs en E´lectrotechnique et E´lectronique (ESIEE), 2, bd Blaise Pascal, Cit´e Descartes, BP 99,
F-93162 Noisy-le-Grand Cedex, France



Abstract
In this paper, we propose a new methodology based on P -simple points, in order to build a thinning algorithm. From an existent thinning algorithm A, we construct another thinning algorithm A', such that A' deletes at least all the points removed by A, while preserving the same end points. In fact, we propose an algorithm which deletes at least the points removed by a recent 12-subiteration thinning algorithm proposed by Pala´gyi and Kuba [26].


Introduction
Some graphical applications require to transform objects while preserving their topology [20][24]. That leads to the well-known notion of simple point: a point in a binary image is said to be simple if its deletion from the image “preserves the topology” [23] [16] [15] [28] [11] [1] [18] [13] [14] [9]. A process deleting simple points is called a thinning algorithm. During the thinning process, certain simple points are kept in order to preserve some geometrical properties of the object. Such points are called end points. We can define two different kinds of end points: curve end-points and surface end-points [26]. A thinning process which preserves curve end-points (resp. surface end-points) is called a curve thinning algorithm (resp. a surface thinning algorithm). The result obtained by a curve thinning algorithm (resp. a surface thinning algorithm) is called a curve skeleton (resp. a surface skeleton) [26][6].
A process deleting simple points in parallel may not preserve the topology. For example, a two-width ribbon may vanish because all its points are simple.

1 Email: lohouc@esiee.fr
2 Email: bertrang@esiee.fr
This is a preliminary version. The final version will be published in Electronic Notes in Theoretical Computer Science
URL: www.elsevier.nl/locate/entcs




Fig. 1. (a) The 6-, 18-, and 26- neighbors of x, (b) the six major directions, (c) the used notations, (d) the 12 directions of deletion.
Therefore, a parallel thinning algorithm must use a “certain deletion strategy” in order to preserve the topology. For example, we may consider a deletion strategy based on subiterations, which consists in dividing a deletion iteration into several subiterations. These subiterations may be based on directions [30][10][24][26]or on subgrids [5][25]. Another example of deletion strategy consists in using an extended neighborhood; such a strategy may lead to fully parallel thinning algorithms [19][20][22].
One of the authors has proposed the notion of P -simple point [2]. A subset composed solely of P -simple points may be deleted in one time while preserving the topology. Furthermore, a P -simple point may be locally cha- racterized. In this paper, we introduce the notion of Px-simplicity. This permits us to propose a new thinning scheme based on the deletion of Px- simple points. This scheme needs neither a preliminary step of labelling nor the examination of an extended neighborhood, in the opposite of the already proposed thinning algorithms based on P -simple points.
Our purpose is to design a new 3D 12-subiteration thinning algorithm based on the deletion of Px-simple points. From the 12-subiteration thinning algorithm proposed by Pala´gyi and Kuba [26], we conceive a first thinning algorithm deleting Px-simple points. Then, we improve it twice, in such a way that it can delete at least all the points removed by the Pala´gyi and Kuba’s thinning algorithm, while preserving the same end points.
In fact, the approach adopted in this paper may be seen as a general methodology to build a thinning algorithm A' deleting Px-simple points, from an existent thinning algorithm A, while preserving the same end points. This methodology consists in proposing successive “refinements” of P , until to ob- tain a certain P such that at least all points deleted by A are Px-simple. This also implies that A preserves the topology.

Basic notions
A point x ∈ Z3 is defined by (x1, x2, x3) with xi ∈ Z. We consider the three neighborhoods: N26(x)= {x' ∈ Z3; M ax[|x1 − x' |, |x2 − x' |, |x3 − x' |] ≤ 1},
1	2	3




Fig. 2. Points belonging to X and X are respectively represented by black discs and white circles. Only the point x in (d) is 26-simple.

N6(x)= {x' ∈ Z3; |x1 −x' |+|x2 −x' |+|x3 −x' |≤ 1}, and N18(x)= {x' ∈ Z3;
1	2	3
|x1−x' |+|x2−x' |+|x3−x' |≤ 2}∩N26(x). We define N∗(x)= Nn(x)\{x}. We
1	2	3	n
call respectively 6, 18, 26-neighbors of x the points of N∗(x), N∗ (x) \ N∗(x),
6	18	6
N∗ (x)\N∗ (x); these points are respectively represented in Fig. 1 (a) by black
26	18
triangles, black squares, and white triangles. The 6-neighbors of x determine
six major directions (Fig. 1 (b)): Up, Down, North, South, West, East; res- pectively denoted by U , D, N , S, W and E. Each point of N∗ (x) may characterize one direction amongst the 26 that we can obtain from the 6 major ones, e.g. SW , USW ... Let Dir denote one of these 26 directions. The point in N∗ (x) along the direction Dir is called the Dir-neighbor of x and is denoted by Dir(x). In the following, points in N26(x) are often denoted by pi; i = 0,..., 26 (Fig. 1 (c)); for example, p0 is the USW -neighbor of p13,
i.e. p0 = USW (p13). Let X ⊆ Z3. The points belonging to X (resp. X, the complement of X in Z3) are called black points (resp. white points).
Two points x and y are said to be n-adjacent if y ∈ N∗(x) (n = 6, 18, 26). An n-path is a sequence of points x0,..., xk, with xi n-adjacent to xi−1 for i = 1,..., k. If x0 = xk, the path is closed. Let X ⊆ Z3. Two points x ∈ X and y ∈ X are n-connected if they are linked by an n-path included in X. The equivalence classes relative to this relation are the n-connected components of
X. If X is finite, the infinite connected component of X is the background, the other connected components of X are the cavities. In order to have a correspondence between the topology of X and the one of X, we have to consider two differents kinds of adjacency for X and for X [15]: if we use an n-adjacency for X, we have to use another n-adjacency for X. In this paper, we only consider (n, n) = (26, 6). The presence of an n-hole in X is detected whenever there is a closed n-path in X that cannot be deformed, in X, into a single point (see [16], for further details). For example, a hollow ball has one cavity and no hole, a solid torus has one hole and no cavity, and a hollow torus has one cavity and two holes.
Let X ⊆ Z3. A point x ∈ X is said to be n-simple if its removal does not “change the topology” of the image, in the sense that there is a one to one correspondence between the components, the holes of X and X and the components, the holes of X\{x} and X∪{x} (see [16], for a precise definition).




Fig. 3. Points belonging to R, P and X are respectively represented by black discs, black stars and white circles. Only the points x in (a) and (b) are P -simple.
The set composed of all n-connected components of X is denoted by Cn(X). The set of all n-connected components of X and n-adjacent to a point x is denoted by Cx(X). The cardinal number of X is denoted by #X. The topological numbers relative to X and x are the two numbers [1]: T6(x, X)= 
#Cx[N∗ (x) ∩ X] and T26(x, X)= #Cx [N∗ (x) ∩ X]. These numbers lead to
6	18	26	26
a very concise characterization of 3D simple points [21]: x ∈ X is 26-simple
for X if and only if T26(x, X) = 1 and T6(x, X)= 1.
Some examples are given in Fig. 2. The topological numbers relative to x for X and its complement are: (T26(x, X), T6(x, X)) = (1, 2), (2, 1), (1, 2), (1, 1) for the configurations (a), (b), (c) and (d), respectively. Only the configuration in Fig. 2 (d) corresponds to a 26-simple point.
P -simple points
Let us introduce the notions of P -simple point and P -simple set [2]. In the following, we consider a subset X of Z3, a subset P of X, and a point x of P .

Definition 3.1 The point x is P-simple if for each subset S of P \ {x}, x is 26-simple for X \ S. Let S(P ) denote the set of all P -simple points. A subset D of X is P-simple if D ⊆ S(P ).
We have the property that any algorithm removing only P -simple subsets (i.e. subsets composed solely of P -simple points) is guaranteed to keep the topology unchanged [2].
We give a local characterization of a P -simple point [4](see also [3]):
Proposition 3.2 Let R denote the set X \ P. The point x is P-simple iff:

 T6(x, X)= 1,
∀y ∈ N∗ (x) ∩ P, ∃z ∈ R such that z is 26-adjacent to x and to y,
 ∀y ∈ N∗(x) ∩ P, ∃z ∈ X and ∃t ∈ X such that {x, y, z, t} is a unit square.
Some examples are given in Fig. 3: only the points x in (a) and (b) are

P -simple. Let us consider the subset X depicted in Fig. 3 (c). The subset S = {p, q, r} is a subset of P ; and x is non-simple for X \ S. Therefore by the Definition 3.1, the point x cannot be a P -simple point; or directly with the Proposition 3.2, the first P -simplicity condition is not verified because T26(x, R)= 2.

Px-simple points
In the following, we consider a subset X of Z3, and a subset P of X. For each x of Z3, we consider a finite family of pairs of subsets of Z3 (Bk(x),Wk(x)) with k ∈ [1, l], such that Bk(x) ∩ Wk(x)= ∅ and x belongs to Bk(x).
We say that P is “characterized” by such a family (Bk,Wk) if P = {x ∈ Z3; ∃k ∈ [1, l]such that Bk(x) ⊆ X and Wk(x) ⊆ X}. In fact, P corresponds to a Hit or Miss transform of X by (Bk,Wk) [29][12]. All subsets P considered in this paper are characterized by such a family.
A thinning algorithm using the notion of P -simple points must decide whether a point x is P -simple or not: in order to check the four conditions of the Proposition 3.2, it must check if the point x belongs to P , and furthermore it must check if the points y of N∗ (x) belong to P (see the third and fourth P - simplicity conditions). Such an algorithm may operate according to different ways to characterize the points belonging to P and the points being P -simple:
The first strategy consists in the repetition of two steps [2]. During the first step, the points belonging to P are labelled, through the access of Bk(x), and of Wk(x), for all points x of Z3; at most l pairs (Bk(x),Wk(x)) have to be checked. During the second step, the four conditions of P -simplicity of the Proposition 3.2 are checked for all points of P : the checking of these four conditions may be possible by the previous labelling step.
The second strategy consists in a single step of detection of P -simple points. During the P -simplicity check of each point x of X, it is allowed to access to Bk(z), and to Wk(z) for all z ∈ N26(x). Thus, this strategy usually requires the examination of a neighborhood larger than N26(x).
In this paper, we propose another strategy which uses neither a preliminary step of labelling, nor an extended neighborhood. This strategy uses the notions of membership to Px and of Px-simplicity that we introduce now.

Px-simple points
For each point x of X, we define a new subset Px of Z3, determined by Px =
{y ∈ N26(x); ∃k ∈ [1, l]such that Bk(y) ∩ N26(x) ⊆ X and Wk(y) ∩ N26(x) ⊆ X}. We have Px ⊇ P ∩ N26(x). We also define Rx = [N26(x) ∩ X] \ Px, thus Rx ⊆ R∩N26(x) and Px ∪Rx = (P ∪R) ∩N26(x). In fact, Px is constituted by the points y of N26(x) ∩ X which “may belong” to P , by the only inspection of membership to X or to X of points belonging to [Bk(y) ∪ Wk(y)] ∩ N26(x).



Fig. 4. Initial configuration (a). The point x is P -simple (b), is not Px-simple (c).
Remark For any y in N26(x) such that Bk(y) ∪ Wk(y) ⊆ N26(x) for each k in [1, l], then y ∈ P iff y ∈ Px. In the following, we assume that P is such that Bk(x) ∪ Wk(x) ⊆ N26(x), for any point x of X and for each k in [1, l]; therefore x ∈ P iff x ∈ Px.
This leads to the notion of a Px-simple point: a point x of Px is said to be Px-simple if x verifies the four conditions of P -simplicity of the Proposition 3.2, by replacing P by Px, and R by Rx.
We can prove that a Px-simple point is P -simple, with the help of topo- logical numbers, and under our assumption made in the previous remark. Therefore, an algorithm deleting Px-simple points is guaranteed to preserve the topology. In the following, we will propose a thinning algorithm deleting Px-simple points.
Example
In this section, we give an example that illustrates there exists points x which are P -simple but not Px-simple, for the same initial set P .
The 12-subiteration thinning algorithm proposed by Pala´gyi and Kuba deletes certain simple points whose neighbor according to a considered direc- tion, belongs to X (see section 5.2). So, we propose to consider the subset P such that P = {x ∈ X; the US-neighbor of x belongs to X} (see also section 6.1). For all x of Z3, we have B1(x)= {x}, W 1(x)= {US(x)}, and l = 1; we write B(x)= B1(x) and W (x)= W 1(x).
Let us consider the figure 1 (c). Let x denote p13. Let U be the set of points in N26(x) ∩ X for which the US-neighbor belongs to N26(x), i.e. U = {p12,
.. ., p17, p21, .. ., p26} ∩ X. Let V = [N26(p13) ∩ X] \ U , i.e. V = {p0, .. ., p11,
p18, p19, p20}∩ X. We have:
For y ∈ U , y ∈ Px iff B(y) ∩N26(x)(= {y}) is included in X (always verified for any y ∈ U ), and if W (y)∩N26(x)(= {US(y)}) is included in X; therefore for y ∈ U , we have y ∈ Px iff US(y) belongs to X.
For y ∈ V , y ∈ Px iff B(y) ∩N26(x)(= {y}) is included in X (always verified for any y ∈ V ), and if W (y) ∩ N26(x)(= ∅) is included in X (always verified for any y); therefore y ∈ Px for any y ∈ V .
In summary, for each point x of Z3, Px = {y ∈ U ; US(y) ∈ X}∪ V .









Fig. 5. Notations used in the following of the paper.
Let us consider the configuration depicted in Fig. 4 (a). The points of P (resp. Px) are represented by a star in Fig. 4 (b) (resp. Fig. 4 (c)). In Fig. 4 (b), the point x belongs to P since x belongs to X and the US-neighbor of x belongs to X. The point y belongs to R since z(= US(y)) belongs to X and W (y) /⊆ X. In this case, x is a P -simple point. In Fig. 4 (c), the point x belongs to Px since x belongs to U and the US-neighbor of x belongs to
X. The point y belongs to Px as y belongs to V . In this case, x is not a Px-simple point because the first and third Px-simplicity conditions are not verified: T26(x, Rx) = 0 and there is no point of Rx 26-adjacent to x and to y.
Description of the used thinning algorithms
In this section, we recall the general scheme for 12-subiteration thinning al- gorithms and then we specify it more precisely for the algorithm proposed by Pala´gyi and Kuba [26] (denoted by pk), and partially for our algorithm deleting Px-simple points (denoted by lb).
General scheme
A thinning scheme consists in the repetition until stability of deletion ite- rations. In the case of 12-subiteration thinning algorithms, an iteration is divided into 12 subiterations, each of them successively corresponding to one of the 12 following directions: US, NE, DW, SE, UW, DN, SW, UN, DE, N W, UE, DS (see Fig. 1 (d)). Let Dir denotes such a direction. The stability is obtained when there is no more deletion during 12 successive subiterations. Such a thinning scheme can be described by Xi = Xi−1 \ DEL(Xi−1, Dir) for the ith deletion subiteration (i > 0), with X0 = X, and DEL(Y, Dir) being the set of points to be deleted from Y , according to the direction Dir corres- ponding to the ith subiteration. The stability is obtained when Xk = Xk+12.
The Pal´agyi and Kuba’s thinning algorithm
Pal´agyi and Kuba have proposed a 12-subiteration thinning algorithm, which can produce either curve skeletons or surface skeletons [26]. When it is im- portant to distinguish them, we write pk c (resp. pk s) to indicate the curve

thinning algorithm (resp. the surface thinning algorithm).
A set of 3 × 3 × 3 matching templates is given for each direction. For a given direction, a point is deletable by pk if at least one template in the set of templates matches it. The set of templates used by pk c (resp. pk s) along

the direction Dir, is denoted by TDir (resp. T '
) and is represented in Fig.

(resp. Fig. 7) for the direction Dir = US; the notations are depicted in
Fig. 5. The templates for the other directions can be obtained by appropriate rotations and/or reflections of these templates. Sometimes, we will write that

“TDir (resp. T '
) deletes a point” to mean pk c (resp. pk s) deletes this

point during a subiteration along the direction Dir.
We recall some definitions, used by Pal´agyi and Kuba [26], that we will use too. A black point x is a curve end-point if the set N∗ (x) contains exactly one black point. A black point x is a surface end-point if the set N6(x) contains at least one opposite pair of white points. We note that end points are prevented to be deleted by the templates. The authors have precised that the configurations which can be deleted by pk s are precisely the ones which can be deleted by pk c, without these ones corresponding to a surface end-point.
According to the previous general thinning scheme (described in section 5.1), for the deletion subiteration corresponding to the direction Dir in pk c (resp. pk s), DEL(Y, Dir) is the set of points of Y such that at least one of

the templates of TDir (resp. T '
) matches them.

Algorithm deleting Px-simple points
A 6-subiteration thinning algorithm removing P -simple points, has already been proposed [2]. Now, we give a general scheme for 12-subiteration thinning algorithms deleting Px-simple points. It can be described by the scheme of section 5.1, with DEL(Y, Dir) = S(Px); S(Px) being the set of Px-simple points for Y which are not end points according to the wanted skeleton and according to the direction Dir. From this scheme, we will propose our algo- rithm by defining an appropriate P (sections 6 and 7), in the sense that we investigate P such that our algorithm deletes at least the points removed by pk. In the following, we write lb c (resp. lb s) to indicate our final algo- rithm which produces curve skeletons (resp. surface skeletons) by deletion of Px-simple points.

Implementation
A preliminary step to the use of pk or lb on real 3D binary images consists in producing all possible 67 108 864(= 226) configurations of the 3 × 3 × 3 neighborhood of a point x (i.e. N∗ (x)) and to retain only either these ones verifying at least one of the thinning templates in the case of pk, or these ones which correspond to a Px-simple and non end point in the case of lb (once a satisfying set P has been found); that must be done for each deletion



Fig. 6. The set of curve-thinning templates for the direction US (TUS).


direction and according to the wanted kind of skeleton. Then, we use a Binary Decision Diagram (or BDD) [8][7]to encode these deletable configurations. A BDD can be seen as a compressed graph which permits to know here whether a configuration, only described through the points of X and of X, is deletable or not [27]; this decision being done by a simple inspection of the neighborhood without any other computation.
In the case of pk, the use of the associated BDD avoids to check the matching of a configuration with the thinning templates. In the case of lb, for a considered configuration whose central point is x, the use of the associated BDD avoids to check whether the points in N26(x) belong to Px or not, to check the four Px-simplicity conditions on x to know whether x is Px-simple or not, and to check whether x is an end point or not. In summary, once BDDs are obtained, then the implementation is the same for the algorithms pk or lb, only the size of “storage” of the called BDDs is different.



Fig. 7. The set of surface-thinning templates for the direction US (T ' ).
Our curve thinning algorithm (LBC)
In this section, we give the entire reasoning which leads us to propose three successive conditions of membership to a set P . The used methodology con- sists in proposing successive “refinements” of P , until to obtain a set P such that at least all points deleted by pk c are Px-simple. This is achieved with our third proposal of a set P . We note that the first proposal, detailed in section 6.1, is directly deduced from pk c. Our goal is not to obtain the “best” set P , but only to propose a new methodology to conceive thinning algorithms, deleting more points than another ones.
We highlight that in this study, we propose an algorithm deleting only Px-simple points, and by the very definition of such points, the topology is preserved - no additionnal proof is required, in contrary to the most of already proposed thinning algorithms.
We first deal with the direction US until a general comparison of our results. In the following, when we write “a point belongs to Px” then x is the point p13 for the considered configuration (see Fig. 1 (c)). We write “a configuration is Px-simple” to mean that the central point x(= p13) of this configuration is Px-simple. Let y be a point of a configuration, y belongs to
{p0,..., p26}, see Fig. 1 (c); we write “a point y verifies a template T ” to mean that the template T matches the configuration whose central point is y.
First membership condition
We observe that TUS deletes certain points of X whose US-neighbor belongs to X (see section 5.2 and templates in Fig. 6). We propose to consider P1 =
{x ∈ X; the US-neighbor of x belongs to X}, already studied in section 4.2. Among all 226 possible configurations, we obtain 923 551 ones corresponding to Px-simple and non curve end-points, for the direction US.



Fig. 8. This configuration (a) is not Px-simple (b), and is Px-simple (c).
1	2
Let us consider the configuration in Fig. 8 (a). The three points p3, p13 and p16 belong to Px (Fig. 8 (b)) because they belong to X, the US-neighbor of p13 and this one of p16 belong to X, and the US-neighbor of p3 may belong to X; in fact, p13 and p16 belong to U , and p3 belongs to V ; with the notations used in the section 4.2. The first and the third Px-simplicity conditions are not verified for the central point p13: with Rx = [N26(x)∩X]\Px, T26(p13, Rx)= 0,
1	1	1
and for example, for p16 of N∗ (p13) ∩ Px there is no point of Rx 26-adjacent
26	1	1
to p16 and to p13. Thus, the point p13 is not Px-simple. Nevertheless it is
matched by the template T1 of TUS. Therefore it should be deleted by our wanted algorithm.
Let us examine the behavior of the other points of this configuration with the templates TUS (see Fig. 8 (a)). The point p16 cannot be deleted, because the points p3 (= USW (p16)) belongs to X for T2; and p13 (= U (p16)) belongs to X for the other templates. The point p3 cannot be deleted because p6, p15 and p12 belong to X, i.e. the D-, DN -, N -neighbors of p3, and all the templates impose that at least such a point must belong to X in order to delete a central point. With these remarks, we propose a new set P2.
Second membership condition
Let p13 belong to X. Now, we observe the membership of the points p1(= US(p13)), p4(= S(p13)), and p10(= U (p13)), imposed by the templates of TUS when they may delete p13, see Fig. 9. Only the points of X whose US-neighbor belongs to X, may be deleted by TUS, then p1(= US(p13)) must belong to X. If p4 belongs to X and p10 belongs to X (see M1) then p13 may only verify T1 and p16(= D(p13)) must belong to X. If p4 belongs to X and p10 belongs to X (see M2) then p13 may only verify T2 and p22(= N (p13)) must belong to
X. If p4 and p10 belong to X (see M3) then a necessary condition imposed by the templates TUS to delete such a configuration is that at least the D-, or the DN -, or the N -neighbor of p13 (i.e. p16, p25 or p22) must belong to X; in fact, this is imposed by all the templates, not only when p4 and p10 belong to
X. If p4 and p10 belong to X, then the corresponding configurations are not deleted by the templates TUS; we do not require that our algorithm deletes such configurations too.
Finally, we propose P2 = {x ∈ Z3; x verifies at least one of the templates



Fig. 9. A point belongs to P2 iff it verifies at least one of these templates.




Fig. 10. This configuration (a) is not Px-simple (b), and is Px-simple (c).
2	3


in Fig. 9 }. We note that the non Px-simple configuration depicted in Fig.

8 (b) is Px-simple (Fig. 8 (c)). Indeed, p13 belongs to Px
as it verifies M3;

2	2
p3 belongs to Rx(= [N26(x) ∩ X] \ Px) because it cannot verify neither M1
2	2
nor M2 nor M3 as the D-, the DN -, and the N -neighbors of p3 belong to X
(i.e. resp. p6, p15 and p12); p16 belongs to Rx because it cannot verify neither M2 as p25(= N (p16)) belongs to X, nor M1 nor M3 as p13(= U (p16)) belongs to X. We obtain 4 672 557 configurations which correspond to Px-simple and
non curve end-points, for the direction US.
Let us consider the configuration in Fig. 10 (a). The points p13, p6 and p15 belong to Px (see Fig. 10 (b)) because p6 may verify M1 or M3, p15 may verify M1, p13 verifies M3; and the point p25 belongs to Rx as p13(= US(p25)) belongs to X. The third condition of Px-simplicity is not verified: for p6 of N∗ (p13) ∩ Px, there is no point of Rx 26-adjacent to p6 and to p13. So, the
26	2	2
point p13 is not Px-simple. Nevertheless, it may be deleted by the template
T12 of TUS. Such a configuration should be deleted by our wanted algorithm. According to the templates TUS, the point p25 cannot be deleted as p13(=
US(p25)) belongs to X, the point p6 may be deleted at least by the template T2, but the point p15 cannot be deleted because p13 (= UE(p15)) belongs to X for T1, and p6 (= S(p15)) belongs to X for the other templates. We are going to propose a set P3, in such a way that the point p15 of the configuration in Fig. 10 (b) cannot belong to Px.



Fig. 11. A point belongs to P3 iff it verifies at least one of these templates.


Fig. 12. This configuration (a) is not deleted by TUS and (b) is Px-simple, (c) shows
an isometry of (a), it is deleted by TUS and is Px-simple (d).
Third membership condition
In fact, in the non Px-simple configuration in Fig. 10 (b), the point p15 may verify M1, and M1 has been obtained from the template T1. But p15 does not verify T1 because the point p13(= UE(p15)) belongs to X in the configuration, but the UE-neighbor of the central point in T1 does not. So we add the points of T1 belonging to the background to the template M1, and obtain N1 (see Fig. 11). We do the same thing for M2 with T2 and obtain N2. We keep M3 and rename it N3.
So, we propose P3 = {x ∈ Z3; x verifies at least one of the templates in Fig. 11 }. We note that the non Px-simple configuration in Fig. 10 (b) is now Px-simple (see Fig. 10 (c)). Indeed, p6 belongs to Px as it may verify N3; p13
3	3
belongs to Px as it verifies N3; the point p25 belongs to Rx(= [N26(x)∩X]\Px)
3	3	3

as p13(= US(p25)) belongs to X; and the point p15 belongs to Rx
as p6(=

S(p15)) belongs to X for N2 and N3, and p13(= UE(p15)) belongs to X for N1. We obtain 2 803 838 configurations corresponding to Px-simple and non curve end-points, for the direction US. The 1 379 581 configurations deleted by TUS,
are also Px-simple. The fact that the configurations deletable by pk are Px-
3	3
simple (for each direction and therefore for the whole algorithm), guarantees
that the topology is preserved by pk (as pk deletes subsets of some Px-simple
points, see sections 3 and 4).
Let us consider the configuration in Fig. 12 (a). This configuration is

Px-simple (see Fig. 12 (b)). Indeed, p13 belongs to Px
as it verifies N3; p0

3	3



Fig. 13. (a) This configuration cannot be deleted by pk c whatever the deletion direction, and is not Px-simple, (b) shows an isometry of (a), it is Px-simple (c),
3	3
in (d) (obtained from (a)) no point is deleted by pk c nevertheless x is deleted by
lb c.
belongs to Px as it may verify N1 or N3; p3 belongs to Rx as p0(= U (p3))
3	3  
belongs to X for N1 and N3, and p12(= N (p3)) belongs to X for N2; the

point p16 belongs to Rx
as p13(= U (p16)) belongs to X for N1 and N3 and

p3(= USW (p16)) belongs to X for N2. This configuration is not deleted by TUS (see Fig. 12 (a)) as p0(= USW (p13)) belongs to X for T1 ... T4, T11 ... T14; and p22(= N (p13)) belongs to X for T5 ... T10. Figure 12 (c) shows an isometry of the configuration of Fig. 12 (a), obtained when the line D (through the points p3 and p13(= NE(p3))) along the direction NE in (a) is considered according to the direction US in (c) obtaining thus D' (through p25 and p13(= US(p25))). This configuration is deleted by T3 of TUS; or more directly, there exists a deletion direction Dir such that the configuration of Fig. 12 (a) is deleted by T3 of TDir. We note that this configuration is Px-simple (see Fig. 12 (d))
because p13 belongs to Px as it verifies N3; p26 belongs to Px as it may verify
3	3
N3; p25 belongs to Rx as p13(= US(p25)) belongs to X; and p12 belongs to Rx
3	3
as the D-, the DN -, and the N -neighbors of p12 (i.e. resp. p15, p24 and p21)
belong to X.
For a better comparison between pk c and lb c, we generate the configu- rations deleted by these algorithms for each direction: pk c deletes 11 268 606 configurations, i.e. there exists at least one direction such that a given config- uration among these ones is deleted for this direction by pk c; lb c deletes 19 327 098 configurations (70.6% better). The configuration depicted in Fig. 13 (a) cannot be deleted by pk c, whatever the deletion direction. The point p13 belongs to Rx as the D-, the DN -, and the N -neighbors of p13 (i.e. resp. p16, p25 and p22) belong to X, so it is not Px-simple. However, when the line D in (a) (through the points p7 and p13) is considered along the direction US in (b) obtaining thus D' (through the points p25 and p13), then the obtained configuration is Px-simple (Fig. 13 (c)). Indeed, the points p18 and p20 belong
to Px as they may verify N3; p13 belongs to Px as it verifies N3; p25 belongs
3	3
to Rx as p13(= US(p25)) belongs to X; p21 belongs to Rx as p18(= U (p21))
belongs to X for N1 and N3, and p13(= SE(p21)) belongs to X for N2; p23 be-



Fig. 14. Our surface thinning algorithm (lb s) deletes the points verifing at least one of these templates (for the direction US).
longs to Rx as p20(= U (p23)) belongs to X for N1 and N3, and p13(= SW (p23)) belongs to X for N2. Fig. 13 (d) shows an image built from the configuration in Fig. 13 (a) such that each point is either a non-simple point (except x) ora curve end-point, and no point may be deleted by pk c, nevertheless the point x may be deleted by lb c, according to the direction giving the isometry in Fig. 13 (b).
With this third set, we are going to obtain the configurations which cor- respond to Px-simple and non surface end-points, see section 7.
Remark We also could propose other conditions of membership in order to better respect symmetries, for example: modify (DN (p13) or D(p13) or N (p13)) ∈ X in M3 from P2 by (DN (p13) or (D(p13) and N (p13))) ∈ X to
propose P '; then add points in X, as in P3, to propose P '.
2	3
Our surface thinning algorithm (LB S)
We only retain the configurations corresponding to Px-simple and non surface end-points from the ones deleted by lb c, with the surface end-point defi- nition proposed by Pala´gyi and Kuba, see section 5.2. We obtain 1 228 800 configurations which include the 1 155 072 configurations deleted by pk s, for the direction US.
Furthermore, on the opposite of lb c, we have succeeded to obtain few templates to describe these configurations (with the help of Binary Decision Diagram). The set of these templates is represented for the direction US in Fig. 14. A point which verifies at least one of them, will be deleted by lb s, for the direction US. Thus, the reader who wants to encode lb s needs neither the conditions of P -simplicity, nor the condition of membership to P , nor the condition of surface end-point. We can also see that the templates of T '
(Fig. 7) are strictly “included” in ours: for example, T ' = L' , T ' ⊆ [L' ∪ L' ∪
1	2	2	1	3



Fig. 15. (a) This configuration cannot be deleted by pk s whatever the deletion direction, and is Px-simple (b), (c) shows an isometry of (a), it is Px-simple (c),
3	3
in (d) (obtained from (c)) no point is deleted by pk s nevertheless x is deleted by
lb s.

L' ∪ L' ∪ L' ∪ L' ], T7 ⊆ [L' ∪ L' ], T8 ⊆ [L' ∪ L' ], T9 ⊆ L' , T10 ⊆ L' ; Ti ⊆ L'
4	5	6	7	4	6	5	7	4	5	j
(resp. Ti = L' ) means that configurations deleted by Ti are amongst (resp.
are the same than) these ones deleted by L' , or by a union of some L' . That
j	j
confirms that we can delete at least the configurations deleted by pk s. We
can also verify that our templates prevent from deleting surface end-points. Let us consider the configuration in Fig. 15 (a). It is not deleted by T '

because p0(= USW (p13)) belongs to X for T ', T '
and T7; p2(= USE(p13))

1	2
belongs to X for T8; p3(= SW (p13)) and p9(= UW (p13)) belong to X for T9;
p5(= SE(p13)) and p11(= UE(p13)) belong to X for T10. However, it corre- sponds to a Px-simple and non surface end-point (see Fig. 15 (b)). Indeed, the points p0 and p2 belong to Px because they may verify N3; the point p13
belongs to Px as it verifies N3; p16 belongs to Rx as p13(= U (p16)) belongs
3	3  
to X for N1 and N3, and p25(= N (p16))belongs to X for N2; p12 belongs to
x as p0(= US(p12)) belongs to X for N1, N2 and N3; p14 belongs to Rx
as p2(= US(p14)) belongs to X for N1, N2 and N3; p22 belongs to Rx as
3  
p13(= S(p22)) belongs to X for N2 and N3, and p25(= D(p22)) belongs to X for N1. In fact, this configuration may be deleted by L' , one of our proposed templates in Fig. 14. However, this configuration is not deleted by pk s, whatever the deletion direction.
We have again generated all the configurations deleted by lb s, for each direction. pk s deletes 9 101 312 configurations; lb s deletes 9 986 048 con- figurations (9.7% better). Figure 15 (c) shows an isometry of the configura- tion of Fig. 15 (a), obtained when the line D (through the points p13 and p19(= UN (p13))) along the direction UN in (a) is considered according to the direction US in (c), obtaining thus D' (through p13 and p1(= US(p13))). This configuration is not deleted by pk s, as it is said above. Fig. 15 (d) shows an image built from the configuration in Fig. 15 (c) such that each point is either a non simple point (except x) or a surface end-point; and no point may be deleted by pk s; nevertheless the point x may be deleted by lb s. In

fact, Pal´agyi et Kuba have excluded the configuration in Fig. 15 (a) (see [26], p.207, Fig. 6). They adverted that if the set of templates TUS can delete it, then unwanted curve/surface segments may be created. Perhaps, this is not the case with our algorithm because it deletes more other points than pk.

Other results
Amongst all subsets P , proposed in sections 6 and 7, the subset P2 permits to delete more points than the other proposals. Although it does not delete all configurations removed by pk, it can delete 23 814 994 P2-simple and non curve end-points, and 15 257 520 P2-simple and non surface end-points, for the 12 deletion directions. We recall that there are 25 985 118 simple and non curve end-points, and 16 252 928 simple and non surface end-points amongst the 67 108 864(= 226) possible 3 × 3 × 3 configurations. The skeletons of some images, obtained respectively by pk c, lb c, pk s and lb s, are shown in Fig. 16. We observe that:
The geometrical appearance is almost the same between pk c and lb c, or between pk s and lb s.
The number of deletion subiterations required by lb c is inferior to or equal to the one of pk c. The number of points deleted by lb c is inferior to or equal to the one of pk c. The resulting centering is not the same. We recall that it is possible that lb needs more subiterations to obtain a skeleton than pk needs (see Fig. 13 (d) and 15 (d)).
On these examples, the number of deletion subiterations, the number of deleted points and the skeletons are the same for pk s and lb s.

Conclusion
In the first part of this study, we have introduced the notion of Px-simplicity. Then, we have proposed a new thinning scheme based on the parallel deletion of Px-simple points which needs neither a preliminary of labelling nor the examination of an extended neighborhood. Thus, it permits us to compare with some other existent thinning algorithms conceived in such a way.
In the second part, we have proposed a new 12-subiteration thinning algo- rithm, based on the deletion of Px-simple points, producing curve or surface skeletons. As it deletes solely Px-simple points, this algorithm is guaranteed to preserve the topology. Furthermore, we have proposed some various sets P such that our final algorithm deletes at least all the points deleted by pk, while preserving the same end points; this also implies that pk is guaranteed to preserve the topology. Moreover, our surface thinning algorithm is “ex- pressed” in a set of templates. In fact, the used approach may be seen as a general methodology to conceive algorithms which enhance themselves: the basic idea is to adapt a condition of membership to a set P , from an existent

algorithm A. The condition is such that the final proposed algorithm deletes at least the points removed by A, while preserving the same end points. This also implies that A preserves the topology. We precise that if we define P as the subset constituted of points that A may delete from any object X and if this subset is a P -simple set then A is guaranteed to preserve the topology. This work has already been made in [4](see also [3]).
In another study [17], we succeeded in proposing a new 6-subiteration thinning algorithm for 3D binary images, which produces curve skeletons, and such that it deletes at least the points removed by two other 6-subiteration thinning algorithms. A future work will propose new fully parallel thinning algorithms for 2D and 3D binary images.

References
Bertrand, G., Simple points, topological numbers and geodesic numbers in cubic grids, Pattern Recognition Letters 15 (1994), pp. 1003–1011.
Bertrand, G., On P-simple points, Compte Rendu Acad´emie des Sciences de Paris t. 321 (1995), pp. 1077–1084.
Bertrand, G., P-simple points: A solution for parallel thinning, in: 5th DGCI, 1995, pp. 233–242.
Bertrand, G., Sufficient conditions for 3D parallel thinning algorithms, in:
Vision Geometry VIII, SPIE 2573, 1995, pp. 52–60.
Bertrand, G. and Z. Aktouf, A three-dimensional thinning algorithm using subﬁelds, in: Vision Geometry III, SPIE 2356, 1994, pp. 113–124.
Borgefors, G., I. Nystr¨om and G. S. di Baja, Skeletonizing volume objects. Part II: From surface to curve skeleton, in: SSPR’98, LNCS 1451, 1998, pp. 220–229.
Brace, K., R. Rudell and R. Bryant, Efficient implementation of a bdd package, in: 27th IEEE Design Automation Conference, 1990, pp. 40–45.
Bryant, R., Graph-based algorithms for boolean function manipulation, IEEE Transactions on Computer Vol. C-35 (1986), pp. 677–691.
Fourey, S. and R. Malgouyres, A concise characterization of 3D simple points, in: 9th DGCI, LNCS 1953, 2000, pp. 27–36.
Gong, W. and G. Bertrand, A simple parallel 3D thinning algorithm, in:
International Conference on Pattern Recognition, 1990, pp. 188–190.
Hall, R., Connectivity preserving parallel operators in 2D and 3D images, in:
Vision Geometry, SPIE 1832, 1992, pp. 172–183.
Jonker, P., Morphological operations on 3D and 4D images: From shape primitive detection to skeletonization, in: 9th DGCI, LNCS 1953, 2000, pp. 371–391.


Kong, T., On topology preservation in 2-D and 3-D thinning, Int. Journal of Pattern Recognition and Artificial Intelligence 9 (1995), pp. 813–844.
Kong, T., Topology-preserving deletion of 1’s from 2-, 3- and 4-dimensional binary images, in: 7th DGCI, LNCS 1347, 1997, pp. 3–18.
Kong, T. and A. Rosenfeld, Digital topology: introduction and survey, Computer Vision, Graphics and Image Processing 48 (1989), pp. 357–393.
Kong, T. Y., A digital fundamental group, Computer and Graphics 13 (1989),
pp. 159–166.
Lohou, C. and G. Bertrand, New 6-subiteration thinning algorithm for 3D images, based on the deletion of P-simple points, in preparation.
Ma, C., On topology preservation in 3D thinning, Comp. Vision, Graphics, and Image Processing: Image Understanding 59 (1994), pp. 328–339.
Ma, C., A 3D fully parallel thinning algorithm for generating medial faces, Pattern Recognition Letters 16 (1995), pp. 83–87.
Ma, C. M. and M. Sonka, A fully parallel 3D thinning algorithm and its applications, Comp. Vision and Image Understanding 64 (1996), pp. 420–433.
Malandain, G. and G. Bertrand, Fast characterization of 3D simple points, in:
IEEE International Conference on Pattern Recognition, 1992, pp. 232–235.
Manzanera, A., T. M. Bernard, F. Prˆeteux and B. Longuet, A uniﬁed mathematical framework for a compact and fully parallel n-D skeletonization procedure, in: Vision Geometry VIII, SPIE 3811, 1999, pp. 57–68.
Morgenthaler, D., Three-dimensional simple points: Serial erosion, parallel thinning, and skeletonization, Technical Report TR-1009, Computer Vision Laboratory, University of Maryland (1981).
Pala´gyi, K. and A. Kuba, A 3D 6-subiteration thinning algorithm for extracting medial lines, Pattern Recognition Letters 19 (1998), pp. 613–627.
Pala´gyi, K. and A. Kuba, A hybrid thinning algorithm for 3D medical images, Journal of Computing and Information Technology, CIT 6 (1998), pp. 149–164.
Pala´gyi, K. and A. Kuba, A parallel 3D 12-subiteration thinning algorithm, Graphical Models and Image Processing 61 (1999), pp. 199–221.
Robert, L. and G. Malandain, Fast binary image processing using binary decision diagrams, Technical Report n 3001, pp 1-24, INRIA (1996).
Saha, P., B. Chanda and D. Majumder, Principles and algorithms for 2D and 3D shrinking, Technical Report TR/KBCS/2/91, N.C.K.B.C.S. Library, Indian Statistical Institute, Calcutta, India (1991).
Serra, J., “Image Analysis and mathematical morphology,” Acad. Press, 1982.
Tsao, Y. and K. Fu, A parallel thinning algorithm for 3D pictures, Computer Graphics Image Processing 17 (1981), pp. 315–331.


				
Initial	21 − 8 120	19 − 8 106	11 − 7 850	11 − 7 850
Initial	60 − 1 494	25 − 1 492	27 − 1 362	27 − 1 362
				
Initial	49 − 2 282	16 − 2 274	9 − 2 100	9 − 2 100
Initial	51 − 2 008	21 − 2 003	20 − 1 863	20 − 1 863
				
Initial	12 − 2 023	12 − 2 023	12 − 1 725	12 − 1 725
Fig. 16. By row, respectively: an initial object, the curve skeletons for pk c and lb c, then the surface skeletons for pk s and lb s. Under each figure, are given the number of the last subiteration of deletion, and the number of deleted points.
