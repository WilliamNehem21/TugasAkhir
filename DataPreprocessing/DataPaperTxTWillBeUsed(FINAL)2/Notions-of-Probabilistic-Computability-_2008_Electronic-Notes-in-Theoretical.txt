	Electronic Notes in Theoretical Computer Science 202 (2008) 137–170	
www.elsevier.com/locate/entcs

Notions of Probabilistic Computability on Represented Spaces
Volker Bosserhoff 1 ,2
Institut fu¨r Theoretische Informatik und Mathematik Universita¨t der Bundeswehr
Munich, Germany

Abstract
We define and compare several probabilistically weakened notions of computability for mappings from represented spaces (that are equipped with a measure or outer measure) into effective metric spaces. We thereby generalize definitions by Ko [9] and Parker [11,12], and furthermore introduce the new notion of computability in the mean. Some results employ a notion of computable measure that originates in definitions by Weihrauch [19] and Schr¨oder [14]. In the spirit of the well-known Representation Theorem, we establish
dependencies between the weakened computability notions and classical properties of mappings. We finally present some positive results on the computability of vector-valued integration on metric spaces, and discuss certain measurability issues arising in connection with our definitions.
Keywords: computable analysis, computable measure theory


Introduction
Motivation
The considerations in this article are inspired by real-world situations like the fol- lowing: An agent (i.e. a person, a machine or a combination of such) has the task to perform a measurement ξ of a (physical) magnitude. Then a 2−k-approximation to the value f (ξ) shall be computed, where k ∈ N is a given precision parameter and f : X → Y is a given function that maps the state space X of the magnitude into a metric space (Y, d). When it comes to computations, a realistic model of the abilities of the agent is a Turing machine; so the results of the measurement must be available in machine readable form, i.e. encoded as a string over some finite alphabet Σ. The space X will typically not be countable, so the value ξ must be encoded as an infinite string. We assume that there is a surjective partial mapping

1 The work was supported by DFG grant HE 2489/4-1.
2 Email: volker.bosserhoff@unibw.de

1571-0661 © 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2008.03.013

δ :⊆ Σω → X, a so-called representation of X, and that the measuring device puts out a δ-name p ∈ dom(δ) of ξ, i.e. δ(p) = ξ. 3 We do not model the details of this process, so we can make no assumptions about what particular δ-name of ξ will ﬁnally be extracted from the measurement. The δ-name is progressively written onto the input tape of a Turing machine. 4 The codomain Y of f is typically not countable either, but we assume that Y has a countable dense subset A, and that there is a partial mapping α :⊆ Σ∗ → A, a so called notation of A. The question is: Is there a TM that takes a δ-name p of some measured ξ as well as a precision parameter k as inputs and halts (after a finite number of steps) with a word w on its output tape such that d(f (ξ), α(w)) ≤ 2−k?
There are functions f for which there exists no Turing machine that could per- form the above task. This is the case, for example, if there is a name p ∈ dom(δ) and a precision parameter k ∈ N such that no prefix of p already determines f (δ(p)) up to precision 2−k. But even for functions, for which such a discontinuity does not occur, there is possibly no Turing machine for the above task, simply because there are “too many functions” and “too few Turing machines”; by now, however, no one has given an example of a function of the latter kind, that comes up naturally in an application.
Now, additionally assume that there is a σ-algebra S and a probability measure P such that (X, S,P ) is a probability space, and that the observed magnitude is distributed according to P . The presence of a probability distribution allows us to weaken the demands on the Turing machine above in several meaningful ways; in particular, we might only ask for a TM that
behaves correctly on P -almost every value of ξ, or
behaves correctly, except on a set whose probability is at most 2−k, or
produces an approximation whose expected error is at most 2−k.
In the following, it will be our aim to develop the foundations of a representation- based computability theory for these three settings. Although probability measures are most interesting for applications, we will also consider more general measures and outer measures whenever meaningful.
The general theory of Turing machine computability via representations is de- veloped in the textbook of Weihrauch [20]; the present work is formulated to fit into this framework. We will recall some basic notions from computable analysis below, but refer to [20] for some more technical definitions.
We assume that the reader has a basic background on measure theory and descriptive set theory. All facts we use can be found in any introductory textbook; we occasionally refer to [7,8].

3 In respect of the requirement of producing a δ-name from the outcome of the measurement, we imagine that the measurment is performed in two stages: First, an analogue “snapshot” of the magnitude is taken, which (ideally) completely resembles ξ. Then, a δ-name is progressively extracted from the analogue snap- shot. This two-stage model is necessary, because the magnitude might change over time, and so we cannot extract the δ-name directly.
4 Each character of the name is extracted from the snapshot before or just when the TM queries the corresponding tape cell for the first time.

Overview of the present work
In Section 2, we recall some definitions and results about continuity and computabil- ity via representations. We recall the definition of an effective topological space, and we also define what it means for it to be computably regular and computably compact. We introduce several (multi-)representations of Borel measures. We then give a useful result on computable measures on computable metric spaces. We finally recall some less common notions from measure theory.
Section 3 contains precise definitions of the three weakened concepts of com- putability corresponding to items (I), (II) and (III) above; by considering mixed settings, we arrive at a total of five concepts. Each of these computability con- cepts is accompanied by a weakened continuity concept; the focus is on working out relations between these weakened forms of continuity and classical properties of the representations, spaces, measures and mappings. We then study the pair- wise relations between the five concepts: We either give a strong counter-example showing that one concept does not imply the other, show that one concept always implies the other, or show that one concept implies the other under mild additional assumptions.
Section 4 contains some positive results on the computability of (Pettis) inte- gration of mappings from metric spaces into normed spaces.
The definitions in Section 3 depend on a certain “local error function” (Definition 3.2). In the final section, we investigate the measurability this function.

Related work
The book of Ko [9] deals with computability and complexity of real functions in a way that is consistent with [20]. For functions f : [0, 1] → R and the Lebesgue measure λ, a weakened notion of computability, that corresponds to item (II) above, is defined and studied in Chapter 5 of that book. Building on Ko’s definitions, probabilistic computability notions for characteristic functions of subsets of Rn have been studied by Parker [11,12]; Parker’s definitions correspond to concepts (I) and
(II). The works of Ko and Parker can be said to have taken a “top-down” approach by restricting themselves to Euclidean spaces; we are attempting to go “bottom-up” and consider very general definitions.
One of the (multi-)representations of Borel-measures to be introduced below is a modification of a definition of Schro¨der [14], which itself generalizes a definition of Weihrauch [19]. The reader might also find the related articles [10] and [15] of interest. We would also like to mention the work of Ga´cs [4], whose definition of a computable probability measure seems to be equivalent to Schro¨der’s for the special case of metric spaces.
[23] introduces computable measure spaces; this notion is further studied in e.g. [21,22]. The focus of those works, however, is on representations (and the induced computability) of measurable sets and measurable functions, while we are interested in computability on points in a represented space that is also equipped with a measure.

Furthermore, measure and integration have been treated from the viewpoints of constructive mathematics [1], domain theory [2,3], and digital topology [18]. It is beyond the scope of this article to work out the relations between these approaches. One motivation for the present work was to establish weakened computabil-
ity notions that correspond to weakened notions of solvability (more precisely the “probabilistic setting” and the “average-case setting”) studied in information-based complexity [16]. IBC is mainly concerned with numerical problems on function space and uses an algebraic (aka “real number”-) model of computation. We hope that our definitions and results will be useful for studying numerical problems in the Turing machine model.

Preliminaries
Computable analysis via representations
Let X be a nonempty set and W ∈ {Σ∗, Σω}. A naming system for X is a surjective partial mapping δ :⊆ W → X. If W = Σ∗, a naming system is called a notation; if W = Σω, a naming system is called a representation. If X1 and X2 are sets with naming systems δ1 :⊆ W1 → X1, δ2 ⊆: W2 → X2, and f is a mapping X1 → X2
(or a multi-valued mapping X1 ⇒ X2), then a mapping h :⊆ W1 → W2 is called a (δ1, δ2)-realization for f , if for every p ∈ dom(δ), one has h(p) ∈ dom(δ') and
(δ' ◦ h)(p)= (f ◦ δ)(p) (or (δ' ◦ h)(p) ∈ (f ◦ δ)(p), respectively, in the multi-valued case). f is called (δ1, δ2)-continuous (-computable), if there exists a continuous (computable) (δ1, δ2)-realization for f .
A naming system δ of some set X is said to be continuously (computably) reducible to another naming system δ' of X, if the identity on X is (δ, δ')-continuous (-computable); we write δ ≤t δ' (δ ≤ δ').
Below, we will frequently use the notations νN and νQ, the representations ρ, ρC, ρ<, ρ>, and ρ<, and the wrapping function ι just as defined in [20]. We will also use standard devices to construct new naming systems from given ones; these are described in [20, Section 3.3]. We additionally use the convention: If X is a set with a naming system δ, then put
[δ]<ω := [δ]0 ∨ [δ]1 ∨ [δ]2 ∨ ··· .
If X is a set with a representation δ, we shall write
W (δ, w) := δ(wΣω ∩ dom(δ))
for every w ∈ Σ∗. We denote by σ(δ−1) the smallest σ-algebra on X which contains all sets W (δ, w), w ∈ Σ∗.
Suppose X1, X2 are topological and have naming systems δ1, δ2. An impor- tant question is concerned with the relation between (δ1, δ2)-continuity and classi- cal continuity of a mapping f : X1 → X2. A key result is the Kreitz-Weihrauch Representation Theorem [20, Theorem 3.2.11] which has later been generalized by

Schr¨oder [13]: A representation of a topological space is called admissible, if it is continuous and every continuous representation of the same space is continuously re- ducible to it. If both δ1 and δ2 are admissible, then the (δ1, δ2)-continuous mappings are exactly the sequentially continuous mappings. Note that in most applications X1 is countably based, and then sequential continuity is equivalent to topological continuity.
We finally note that any topological space that allows a continuous represen- tation is hereditarily Lindel¨of, i.e. every open covering of any subspace contains a countable covering.

Computable topological spaces
Below, we will frequently work with the notion of an effective/computable topological space and its standard representation. Effective topological spaces shall be defined as in [20, Definition 3.2.1]. For computable topological spaces, we use a sightly weaker definition than found there 5 :
Definition 2.1 An effective topological space (X, β, ϑ) is a computable topological space if dom(ϑ) is r.e.
Definition 2.2 Let (X, β, ϑ) be an effective topological space. In a canonical way, one can define
a notation ϑ∩ of the set β∩ of all finite intersections of elements of β plus the empty set.
a notation ϑalg of the algebra A(β) generated by β.
A representation ϑ< of the hyperspace of open subsets O(X) of X shall then be defined by
ϑ<(p)=	Ui :⇐⇒ [ϑ∩]ω(p)= (Ui)i.
i
Lemma 2.3 Let (X, β, ϑ) be an effective topological space. Then the following map- pings are computable w.r.t. the canonical representations given in Deﬁnition 2.2: Finite intersection on β∩; complementation, ﬁnite union and ﬁnite intersection on A(β); ﬁnite and countable union and ﬁnite intersection on O(X); the embeddings β ‹→ β∩, β∩ ‹→ A(β), β∩ ‹→ O(X).	 
Lemma 2.4 Let (X, β, ϑ) be a computable topological space with standard repre- sentation δ. Put D := {w ∈ Σ∗ : ι(v) aw ⇒ v ∈ dom(ϑ)}. Then D is r.e., and for every w ∈ D one has W (δ, w)=  ι(v)aw ϑ(v). The mapping D → β∩, w '→ W (δ, w), is (idΣ∗ |D, ϑ∩)-computable.	 
Computably regular T0-spaces have been defined in [5]. We modify the definition to comprise exactly what we will need below:

5 The advantage of this becomes clear when one compares Lemma 2.7(ii) to [20, Theorem 8.1.4.2].

Definition 2.5 An effective topological space (X, β, ϑ) is computably regular if the multi-valued mapping defined by the graph
 (V, (Vn, Un)n) ∈ β × (β∩ × O(X))ω  : V =   Vn
and (∀ n) [X \ V ⊆ Un and Vn ∩ Un = ∅]}
is (ϑ, [ϑ∩, ϑ<]ω)-computable.
Definition 2.6 Let (X, β, ϑ) be an effective topological space. Put
C := {(Un)n ∈ (β∩)ω :	Un = X}.
n
(X, β, ϑ) is computably compact if the multi-valued mapping defined by the graph


{((Un)n, m) ∈ C × N :
n≤m
Un = X}

is ([ϑ∩]ω|C, νN)-computable.
Computable metric spaces
Some motivation for the notion of an effective/computable metric space has already been given in the introduction. A formal definition is given in [20, Definition 8.1.2], where also the Cauchy representation is defined. (Notwithstanding [20], we write effective metric spaces as three-tuples (X, d, α), i.e. we omit the dense subset, which is understood to be range(α).)
For any metric space (X, d) define
(∀ x0 ∈ X, ϵ > 0) B(x0, ϵ) := {x ∈ X : d(x0, x) < ϵ}


and


(∀ x0 ∈ X, ϵ ≥ 0) B(x0, ϵ) := {x ∈ X : d(x0, x) ≤ ϵ}

The following is well-known:
Lemma 2.7 Let (X, d, α) be an effective metric space. An effective topological space
(X, β, ϑ) can be deﬁned by putting
β := {B(a, r) : a ∈ range(α), r ∈ Q ∩ (0, ∞)} and
ϑ⟨u, v⟩ := B(α(u), νQ(v)).
If δ is the corresponding standard representation, then δX ≡t δ.
If (X, d, α) is computable, then (X, β, ϑ) is computable and computably regular. Furthermore δX ≡ δ.

If the codomain of a multi-valued mapping is a metric space, we will refer to the multi-valued mapping as an operation.

Computable measures
In this subsection, we assume that (X, β, ϑ) is an effective topological space.
Schr¨oder [14] (generalizing a definition of Weihrauch [19]) defines a repre- sentation of the Borel probability measures on an admissibly represented topo- logical space. His definition can be extended to non-probability measures in a straight-forward manner, but then is no longer a representation but merely a multi- representation. 6 On the other hand, we are only interested in measures on effective topological spaces. In this case, the mentioned multi-representation is easily seen to be equivalent to the following:
Definition 2.8 A multi-representation ϑM< of the Borel measures on X is given by
ν ∈ ϑM<(p) :⇐⇒ [ϑ< → ρ<](p)= ν|O(X).
Remark 2.9 One can deduce from Caratheodory’s Extension Theorem (see [7, Theorem 2.5]) and the Lindelo¨f property of X that the restriction of ϑM< to locally finite measures is single-valued.	 
For finite measures, we consider the following two representations:
Definition 2.10 Representations of the finite Borel measures on X are given by (i)
0	⟨p, q⟩ = ν :⇐⇒ ϑM<(p)= ν and ρ>(q)= ν(X).
(ii)
ϑM=(p)= ν :⇐⇒ [ϑalg → ρ](p)= ν|A(β).

It is easy to see that ϑM= ≤ ϑ0
. Although there are ϑ0
-computable mea-

sures that are not ϑM=-computable 7 , one has the following useful result for metric spaces:
Theorem 2.11 Let (X, d, α) be a computable metric space, and let (X, β, ϑ) be the computable topological space derived from it as in Lemma 2.7. Suppose that ν is a
0	-computable ﬁnite Borel measure on X. Then there is a computable topological
space (X, β', ϑ') such that

ν is ϑ'
-computable.

δ ≡ δ', where δ and δ' are the standard representations of (X, β, ϑ) and (X, β', ϑ'), respectively.
(X, β', ϑ') is computably regular.
(X, β', ϑ') is computably compact if (X, β, ϑ) is computably compact.

6 This is because Schr¨oder’s representation only contains information on the values of the measure on open sets. Unbounded measures, however, are not necessarily defined uniquely by these values.
7 For example: Let (xn)n be a computable sequence of non-negative rationals such that c := P xn < 1 is
not computable from the right. Now consider the measure ν defined by ν(A) := (1−c)χ (0)+P n

1)−1).
A	n xnχA((n+

Proof. Put
Q := {(a, r, s) ∈ range(α) × Q × Q : 0 < r < s}.

For any (a, r, s) ∈ Q put R(a, r, s) := B(a, s) \ B(a, r). It is easy to verify that (a, r, s) '→ X \ R(a, r, s) is ([α, νQ, νQ]|Q, ϑ<)-computable. From this fact, in combi- nation with the ρ>-computability of ν(X), it follows that
Q → R,	(a, r, s) '→ ν(R(a, r, s)) ( = ν(X) − ν(X \ R(a, r, s)) ), is ([α, νQ, νQ]|Q, ρ>)-computable. It is clear that for all (a, r, s) ∈ Q, we have

inf
r',s'∈Q,
r≤r'<s'≤s
ν(R(a, r', s')) = 0,

and hence there is an ([[α, νQ, νQ]|Q, νN], [νQ, νQ])-computable mapping h : Q × N →
Q × Q such that
h((a, r, s), k)= (r', s') =⇒ [r < r' < s' ≤ s and ν(R(a, r', s')) ≤ 2−k].
Now let an input (a, r, s) ∈ Q be given. By repeated use of h, we can compute
a sequence (r' , s' )k in Q × Q such that r ≤ r' < s' ≤ s and for all k ∈ N
k	k	1	1
rk ≤ r'	< s'	≤ sk,
k+1	k+1
sk − rk ≤ 2−k, ν(R(a, rk, sk)) ≤ 2−k.
We can hence ρ-compute g(a, r, s) := limk→∞ rk  = limk→∞ sk; one has r ≤
g(a, r, s) ≤ s and

ν(B(a, g(a, r, s)) \ B(a, g(a, r, s))) = ν   R(a, rk, sk)  = 0.



Now choose

β' := {B(a, g(a, r, s)) : (a, r, s) ∈ Q},

ϑ'(w)= B(a, g(a, r, s)) :⇐⇒ [α, νQ, νQ]|Q(w)= (a, r, s).
It is clear that (X, β', ϑ') is a computable topological space. (ii) can be derived easily from the fact that the metric d is both (δ, δ, ρ)- and (δ', δ', ρ)-computable. The simple proof for the computable regularity of (X, β, ϑ) (as omitted from Lemma 2.7) goes through almost identically for (X, β', ϑ'), so we have (iii). (iv) follows easily from the fact that from every [(ϑ')∩]ω-input (Un)n, one can [[ϑ∩]ω]ω-compute a double sequence (Un,m)n,m such that Un =  m Un,m.
 
We consider the condition
U1 ⊆ V, U2 ⊆ X \ V, ν(U1)+ ν(U2)= ν(X)	(1)

for Borel sets V, U1, U2 ⊆ X. The multi-valued mapping h' : β' ⇒ (O(X) × O(X)) defined by the graph

G = {(V, (U1, U2)) : V, U1, U2 fulfill (1)}

is (ϑ', [ϑ<, ϑ<])-computable, because by construction one has
(∀ (a, r, s) ∈ Q) (B(a, g(a, r, s)), (B(a, g(a, r, s)),X \ B(a, g(a, r, s))) ∈ G.

(Note that ϑ< is the representation of O(X) derived from the original computable topology). We inductively extend G to a graph G' ⊆ A(β') × (O(X) × O(X)):

(V, (U1, U2)) ∈ G ⇒ (V, (U1, U2)) ∈ G',
(V, (U1, U2)) ∈ G' ⇒ (X \ V, (U2, U1)) ∈ G',
(V, (U1, U2)), (V ', (U ' ,U ' )) ∈ G' ⇒ (V ∪ V ', (U1 ∪ U ' , U2 ∩ U ' ) ∈ G',
1	2	1	2
(V, (U1, U2)), (V ', (U ' ,U ' )) ∈ G' ⇒ (V ∩ V ', (U1 ∩ U ' , U2 ∪ U ' ) ∈ G'.
1	2	1	2
It is elementary to verify by induction that
(V, (U1, U2)) ∈ G' =⇒ V, U1, U2 fulfill (1).
Lemma 2.3 yields that the mapping h'' : A(β') ⇒ (O(X) × O(X)) defined by G' is

'
alg
, [ϑ<, ϑ<])-computable.

Let an ϑ'  -input V ∈A be given. Using h'', we can ϑ<-compute sets U1, U2 ∈
O(X) such that (1) holds. We can ρ<-compute ν(U1) and ν(U2) by assumption. Because ν(U1) = ν(X) − ν(U2), we can also ρ>-compute ν(U1). It is clear that ν(V )= ν(U1).	 

From measure theory
Completion of a measure space
Let (X, S, ν) be a measure space. A set N ⊆ X is called ν-null if there is a set B ∈ S with ν(B) = 0 and N ⊆ B. A property P ⊆ X is said to hold ν-almost everywhere (ν-a.e.) if X \ P is ν-null. The σ-algebra Sν generated by S and all ν-null sets is called the completion of S w.r.t. ν. Sν contains exactly the sets of the form A ∪ N with A ∈S and N ν-null. We call the elements of Sν the ν-measurable sets. The measure ν extends to a measure ν on Sν by putting ν(A ∪ N )= ν(A). A measure space that is identical to its completion is called complete.
Lemma 2.12 Let (X, S, ν) be a complete measure space and (Y, S') a measurable space. Let f : X → Y be a mapping such that f |X\N is (S∩ (X \ N ), S')-measurable for some ν-null set N. Then f is (S, S')-measurable.	 

Outer measures
An outer measure on a set X is a set function μ∗ : 2X → [0, ∞] such that
μ∗(∅)= 0,	A ⊆ B ⇒ μ∗(A) ≤ μ∗(B),	μ∗(  An) ≤ Σ μ∗(An).
n	n
A set A ⊆ X is called μ∗-measurable if
(∀ E ⊆ X) μ∗(E)= μ∗(E ∩ A)+ μ∗(E \ A).
The μ∗-measurable sets form a σ-algebra MEASμ∗ . Restricting μ∗ to MEASμ∗ yields a complete measure space.
Let (X, S, ν) be a measure space. The measure ν induces an outer measure ν∗
via
ν∗(A) := inf{ν(B) : B ∈ S, A ⊆ B}.
If ν is σ-finite, it turns out that MEASν∗ = Sν, and that ν and ν∗ coincide on
this σ-algebra. It is known that not every outer measure is induced by a measure.
The following two results are actually well-known but usually not stated for outer measures. We will use the second one in the proof of Proposition 3.8.
Lemma 2.13 (Cantelli-Theorem) Let X be a set with an outer measure μ∗.
Then for every sequence (An)n∈N of subsets of X with	n μ∗(An) < ∞ we have
μ∗(lim sup An)= 0,
n
where lim supn An :=	n	k≥n Ak.
Proof. Follows from the fact that for every m ∈ N one has



n k≥n
k≥m
k≥m



For a topological space Y , let B(Y ) denote the Borel σ-algebra on Y , i.e. the
σ-algebra generated by the topology.
Lemma 2.14 Let X be a set with an outer measure μ∗. If (fn)n∈N is a sequence of (MEASμ∗ , B(Y ))-measurable mappings from X into a metric space (Y, d), and f : X → Y is an arbitrary mapping with
(∀ n ∈ N) μ∗([d(fn,f ) > 2−n]) ≤ 2−n,	(2)
then f is (MEASμ∗ , B(Y ))-measurable.
Proof. Define G := {x ∈ X : fn(x) → f (x)}. By Cantelli’s Theorem and (2), we have
μ∗(X \ G) ≤ μ∗([(∀ n)(∃k ≥ n) d(fk,f ) > 2−k]) = 0.

From the completeness of (X, MEASμ∗ , μ∗), we especially have that G is μ∗- measurable. It follows from [7, Lemma 1.10(ii)] that f |G = lim fn|G is (MEASμ∗ ∩ G, B(Y ))-measurable. The claim now follows from Lemma 2.12.	 

Outer regularity
Let X be a topological space and let S be a σ-algebra on X that includes B(X). A measure μ on S is called outer-regular if 8
(∀ A ∈ S) inf{μ(G \ A) : G ⊇ A, G open} = 0.

An outer measure μ∗ on 2X is called outer-regular if B(X) ⊆ MEASμ∗ and the restriction of μ∗ to MEASμ∗ is an outer-regular measure.
On metric spaces, all finite Borel measures are outer-regular (see [7, Lemma 1.34]).
The following lemma will be needed in the proof of Theorem 3.19 below:
Lemma 2.15 Let X be a topological space, and let S be a σ-algebra on X that includes B(X). Let μ be an outer-regular measure on S and let f : X → [0, ∞] be a μ-integrable function. Then the measure ν on S deﬁned by

ν(A) :=	f dμ.
A
is outer-regular.
Proof. Let A ∈S be arbitrary and consider a descending sequence (Gn)n∈N of open sets suc∫h that Gn ⊇ A and μ(Gn \ A) → 0. The set C :=∫ n Gn \ A has measure 0

Three probabilistically weakened concepts of com- putability
Assumption 3.1 Throughout the remaining of this article, we denote by
X a nonempty set,
δ a naming system of X,
(Y, d, α) an effective metric space with Cauchy representation δY ,
μ∗ an outer measure on 2X ,
S a σ-algebra on X,
ν a measure on (X, S),
ν∗ the outer measure induced by ν.

8 In many textbooks, a measure μ is called outer-regular if it fulfills the weaker condition that μ(A) = inf{μ(G) : G ⊇ A, G open} for all A ∈ S. It will be crucial for some of the results below that regularity is understood in the strong sense!

The local error
Definition 3.2 For any total operation f : X ⇒ Y and any φ : dom(δ) → dom(α) define
e(f, δ, φ, ·): X → [0, ∞],

e(f, δ, φ, x) :=	sup
p∈δ−1 {x}
d((α ◦ φ)(p),f (x)).

Note that here the second argument of d is a set; the usual convention (∀ y ∈ Y )(∀ A ∈ 2Y \ {∅}) d(y, A) := inf{d(y, a) : a ∈ A}
applies.
For any mapping φ :⊆ N× A → B (for sets A, B) and any n ∈ N, we shall denote by φn ⊆ A → B the mapping defined by dom(φn) = {a ∈ A : (n, a) ∈ dom(φ)} and φn(a)= φ(n, a).
The following observation will be useful below:
Lemma 3.3 Consider the assumptions of Deﬁnition 3.2, and additionally, let g :⊆
W → dom(δ) (W ∈ {Σ∗, Σω}) be a mapping such that δ ◦ g is a naming system of
X. Then
(∀ x ∈ X) e(f, δ ◦ g, φ ◦ g, x) ≤ e(f, δ, φ, x)


Concept (I): Computability almost everywhere
The concept to be defined now is a rather straight-forward generalization of “de- cidability up to measure zero” as defined by Parker [11,12].

Definition 3.4 A total operation f : X ⇒ Y is (δ, δY )ν
-continuous (-computable)

if there is ν-null set N ⊆ X such that f |X\N is (δ|X\N , δY )-continuous (- computable).
Proposition 3.5 Assume that X is endowed with a topology w.r.t. which δ is

admissible. Then a mapping f : X → Y is (δ, δY )ν
set N such that f |X\N is sequentially continuous.
-continuous iff there is a ν-null

Proof. Let N be an arbitrary subset of X. By [13, Subsection 4.1], δ|X\N is an admissible representation of X \N . By [20, Theorem 8.1.4], δY admissibly represents
Y . The claim hence follows from the Representation Theorem.	 

Concept (II): Computable approximation
The definitions in this subsection generalize a definition of Ko (cf. [9, Definition 5.10]).
Definition 3.6 Let f : X ⇒ Y be a total operation.

f is (δ, α)μ∗
-continuous (-computable) if there is a continuous (computable)

mapping

such 9 that
φ : N × dom(δ) → dom(α)

(∀ n ∈ N) μ∗([e(f, δ, φn, ·) > 2−n]) ≤ 2−n.

f is (δ, α)ν
-continuous (-computable) if f is (δ, α)ν∗
-continuous (-comput-

able).
Concerning this definition, we assent to the following statement of Parker [11,
p. 8]:
Why require a machine that always halts? Assuming we have a machine that sometimes gives incorrect output, the epistemological situation would seem no worse if in principle that machine could also fail to halt, but with probability zero.
This leads to a combination of concepts (I) and (II):
Definition 3.7 Let f : X ⇒ Y be a total operation.

f is (δ, α)μ∗
-continuous (-computable) if there is a μ∗-null set N ⊆ X such

that f |X\N
is (δ|X\N , α)μ∗
-continuous (-computable).

f is (δ, α)ν
-continuous (-computable) if f is (δ, α)ν∗
-continuous (-com-

putable).
In the spirit of the Representation Theorem, we now seek for connections be- tween classical properties of mappings and their APP-continuity.
Proposition 3.8 Assume that σ(δ−1) ⊆ MEASμ∗ . If a single-valued f : X → Y is
μ∗(δ, α)	-continuous, then f is (MEAS , B(Y ))-measurable.
Proof. It follows from Lemma 2.12 that it is sufficient to prove the claim for
(δ, α)μ∗  -continuous f . Let φ be a corresponding realizer as in Definition 3.6(i). Let
(am)m∈N be an enumeration of dom(α). For every n, m ∈ N put An,m := φ−1{am}. Clearly, every An,m is open in dom(δ), and dom(δ) ⊆ m An,m. The assumption σ(δ−1) ⊆ MEASμ∗ implies that all sets Dn,m := δ(An,m) are μ∗-measurable. Define
c(n, x) := min{m ∈ N : x ∈ Dn,m},
fn(x) := α(ac(n,x)).

The fn are clearly (MEASμ∗ , B(Y ))-measurable. It follows from the definition of the local error that d(fn(x),f (x)) ≤ e(f, δ, φn, x) for all x ∈ X, so μ∗([d(f, fn) > 2−n]) ≤ 2−n for every n ∈ N. The claim now follows with Lemma 2.14.	 

9 Of course, input from N also has to be encoded and tupled with the other input, so the domain of φ is actually dom([νN, δ]). For convenience, we will ignore this formal difference here and below.

Proposition 3.9 Suppose X is endowed with a topology w.r.t. which δ is contin- uous and μ∗ is outer-regular. Then every (MEASμ∗ , B(Y ))-measurable operation
f : X ⇒ Y is (δ, α)μ∗  -continuous.
Proof. Let (am)m∈N be an enumeration of dom(α). For all m, n ∈ N, put
Am,n := f −1(B(α(am), 2−n)).

Note that X = m Am,n. By the outer regularity of μ∗, there are open sets Gm,n, m, n ∈ N, with Am,n ⊆ Gm,n and μ∗(Gm,n \ Am,n) ≤ 2−(n+m+1). Now for every n ∈ N, there is a continuous “selector” cn : dom(δ) → N such that δ(p) ∈ Gcn(p),n for every p ∈ dom(δ). Put φ(n, p) := acn(p). It is easy to see that
[e(f, δ, φn, ·) > 2−n] ⊆	(Gm,n \ Am,n)
m∈N

and that the set on the right hand side has μ∗-content at most 2−n.	 
Combining the last two propositions yields:
Corollary 3.10 Suppose that X is topological, δ is continuous, μ∗ is outer-regular, and σ(δ−1) ⊆ MEASμ∗ . Then for every mapping f : X → Y , the following state- ments are equivalent:
f is (δ, α)μ∗  -continuous.
f is (δ, α)μ∗	-continuous.
APP/AE
f is (MEASμ∗ , B(Y ))-measurable.

It is a natural question, under what conditions APP-computability is preserved by composition. We are able to give at least a partial answer to this question (for further remarks see Subsection 3.5):
Theorem 3.11 Suppose that (Z, d', α') is a computable metric space, f : X → Y
is a mapping, and g : Y ⇒ Z is an operation. If f is (δ, α)μ∗  -computable and g is

(δ , α')μ∗◦f −1
-computable, then g ◦ f is (δ, α')μ∗
APP
-computable.

Proof. Let φ be a (δ, α)μ∗
-realizer for f . First, we demonstrate how to compute

a mapping a : N × dom(δ) → Σω such that μ∗(Rn) ≤ 2−n for all n ∈ N, where
Rn := {x ∈ X : (∃ p ∈ f −1{x}) a(n, p) ∈/ δ−1{f (x)}}).

Put a(n, p) := ι(φ(n + 1, p))ι(φ(n + 2, p))ι(φ(n + 3, p)) ··· . By the definition of the Cauchy representation δY :
Rn ⊆  [e(f, δ, φn+k+1, ·) > 2−(k+1)] ⊆  [e(f, δ, φn+k+1, ·) > 2−(n+k+1)].


(Here the single-valuedness of f goes in.) By assumption, the set on the right hand side has μ∗-content at most Σk 2−(n+k+1) = 2−n.
“On input (n, p) ∈ N × dom(δ), run a dovetailed process that simulates the compu-
tation of a machine for φ' on all inputs (n + 1, a(n + m + 2, p)), m ≥ 0. Each time one of these threads of simulation halts, try to verify that its output is in the do- main of α', and once this succeeds, halt and put it out.” Put N := n  m Rn+m+2 and note that μ∗(N )= 0. For given (n, p), the procedure just described will surely halt, if a(n + m + 2, p) ∈ dom(δ ) for at least one m. Hence, if the procedure does not halt, then δ(p) ∈  m Rn+m+2. So the procedure defines a computable mapping
φ˜ : N×dom(δ|	) → dom(α ). It is sufficient to show that φ˜ is a (δ|	,α )APP	-
realizer of g ◦ f |X\N .
If for some n ∈ N, x ∈ X, we have that both the conditions
(∀ p ∈ δ−1{x})(∀ m ∈ N) a(n + m + 2, p) ∈ δ−1(f (x))


and
(∀ q ∈ δ−1{f (x)}) d((α' ◦ φ')(n + 1, q), (g ◦ f )(x)) ≤ 2−(n+1)

are fufilled, then it follows from the construction of our procedure for φ that (∀ p ∈ δ−1{x}) d((α' ◦ φ)(n, p), (g ◦ f )(x)) ≤ 2−(n+1) ≤ 2−n.
This implies
[e(g ◦ f |X\N , δ|X\N , φ˜n, ·) > 2−n] ⊆  Rn+m+2 ∪ f −1[e(g, δY , φ'	, ·) > 2−(n+1)].
m

Finally note that μ∗ ( m Rn+m+2)	≤	2−(n+1) by construction, and (μ∗ ◦

Concept (III): Computability in the mean
We now come to a notion that has been proposed in a talk by Hertling [6], but has apparently not been treated in the literature so far.
Definition 3.12 Let h :⊆ X → [0, ∞] be an arbitrary function that is defined
ν-almost everywhere. We define the outer integral of h as
∫ ∗ h dν := inf  ∫ g dν : g is (S, B(R))-measurable, h ≤ g|dom(h)  .

One easily verifies:
Lemma 3.13(i) The outer integral is monotone, i.e.	h1 ≤ h2 ⇒ ∫ ∗ h1 dν ≤
(ii) The outer integral is sublinear, i.e. ∫ ∗(h1 + h2) dν ≤ ∫ ∗ h1 dν + ∫ ∗ h2 dν and

For every A ⊆ X, one has ν∗(A)= ∫ ∗ χA dν.

Definition 3.14 A total operation f  : X ⇒ Y is (δ, α)ν

 
-continuous (-

computable) if there is a continuous (computable) mapping
Φ: N × dom(δ) → dom(α)


such that

(∀ n ∈ N)

∗
e(f, δ, Φn, x) ν(dx) ≤ 2−n.



We will also consider the mixed setting here:
Definition 3.15 A total operation f : X ⇒ Y is (δ, α)ν
computable) if there is a ν-null set N such that f |X\N is (δ|X\N , α)ν

-continuous (-
-continuous

(-computable).
MEAN

Recall the setting described in the introduction and suppose now that our agent is supplied with a sequence of independent identically distributed measurements of the physical magnitude and has the task to compute an approximation to f on each of them. Using a MEAN-algorithm ensures a good average error on the long run: 10

Proposition 3.16 Suppose that ν is a probability measure. Let f : X → Y be a

(δ, α)ν
-continuous mapping, and let Φ be a corresponding realizer as in Deﬁni-

tion 3.14. Let (Ω, A,P ) be a probability space and let (wi)i be a sequence of mappings wi :Ω → dom(δ) such that the mappings δ◦wi are independent ν-distributed random variables. Then for every n ∈ N one has

1
lim sup	e
	

≤ 2−n	P-almost surely

where ei := d((α ◦ Φn)(wi), (f ◦ δ)(wi)).
Proof. For all i, we have ei ≤ e(f, δ, Φn, δ(wi)). It follows from Definitions 3.12 and 3.14 that there is a sequence (gk)k of measurable functions gk : X → [0, ∞] such that e(f, δ, Φn, ·) ≤ gk and  gk dν ≤ 2−n + 2−k for every k. The Strong Law of Large Numbers (see [7, Theorem 4.23]) now yields that for every k


1
lim sup	e
	
≤ 2−n + 2−k	P -almost surely.

Intersecting over k yields the claim.	 
See Corollary 3.29 below for a result on the measurability of MEAN/AE- continuous mappings.

10 If only an APP-algorithm is used, the average error may tend to infinity.

We now look for an analogon of Proposition 3.9, i.e. for a natural condition on f to assure its MEAN(/AE)-continuity. We first ask, whether conditions such as those of Proposition 3.9 (δ continuous, ν outer-regular, f measurable) are actually already sufficient. We will see below (Proposition 3.32(ii)) that this is not the case. The next natural step is to consider integrability. This makes sense only if Y is a normed space.
Assumption 3.17 Throughout the remaining of this subsection, we additionally assume that
Y is a normed space, and d is the metric induced by the norm.
0 ∈ range(α).
X is endowed with a topology.
Proposition 3.18 Suppose that δ is open and ν∗ is locally ﬁnite. If a mapping

f : X → Y is (δ, α)ν
-continuous, then f  is locally outer-ν-integrable, i.e. for
∗


Proof. Let Φ be a continuous realiser as in Definition 3.14. Let x0 ∈ X be arbitrary, and let p be an arbitrary δ-name of x0. Φn is constantly equal to Φn(p) on an open (in dom(δ)) neighbourhood U ⊆ dom(δ) of p. Put a := (α◦Φ0)(p). By the definition of the local error, we have
(∀ x ∈ δ(U )) e(f, δ, Φ0, x) ≥ a − f (x)  .
δ(U ) is open, and by the local finiteness of ν∗, we can find an open neighbourhood
G ⊆ δ(U ) of x0 such that ν∗(G) < ∞. We finally have

∗
1 ≥	e(f, δ, Φ0, x) ν(dx) ≥
∗
e(f, δ, Φ0, x) ν(dx) ≥
G
∗
a − f (x)  ν(dx)
G

∗
≥	f  dν −
G
∗
a  dν ≥
G
∗
f  dν − ν
G
∗(G) a .


Theorem 3.19 Suppose that δ is continuous, B(X) ⊆ S, ν is outer-regular, f
is (S, B(Y ))-measurable, and	f	is locally ν-integrable. Then f is (δ, α)ν	-
continuous.
Proof. We first assume that f  is integrable over the whole space. Let (am)m∈N be an enumeration of dom(α). For all m, n ∈ N put
  f −1( B(α(am), min{2−n, α(am)  /2}) )	if α(am) /=0 
Note that X =  m Am,n. Put Cm,n := Am,n \  k<m Ak,n and
gn :=	α(am)χCm,n ,
m

and note that (gn) converges to f pointwise and that gn  ≤ 2  f  ; so (gn) converges to f in L1(ν) by Dominated Convergence. By transition to a subsequence, we can assume that   f − gn  dν < 2−(n+1) for all n ∈ N. The measures νn on S defined by
νn(A) :=	gn  dν
A
are outer-regular by Lemma 2.15. So there are open sets Gm,n with Gm,n ⊇ Cm,n and ν(Gm,n \ Cm,n) ≤ (2n+m+3 · max{1, α(am)  })−1 and νn(Gm,n \ Cm,n) ≤ 2−(n+m+3). Now for every n ∈ N there is a continuous mn : dom(δ) → N such that δ(p) ∈ Cmn(p),n for every p ∈ dom(δ). Put Φn(p)= amn(p). We have
∫ ∗

≤ ∫	f − gn dν +
∗
e(gn, δ, Φn, x) ν(dx)

≤ 2−(n+1) + Σ ∫




Gm,n\Cm,n
α(am) − gn(x)  ν(dx)

≤ 2−(n+1) + Σ ν(Gm,n \ Cm,n)  α(am)  + Σ νn(Gm,n \ Cm,n)
m	m
≤ 2−n.


We have hence shown that f is (δ, α)ν
-continuous.

Now assume that  f  is only locally integrable. Remember that X is Lindel¨of (because it allows a continuous representation). There hence is a countable open cover (Gl)l of X, such that f  is integrable on each Gl. By the first part of the

proof, each mapping f |GÆ
is (δ|GÆ , α)ν
-continuous; let Φ(l) be the corresponding

realizer. On input (n, p), continuously choose an l such that δ(p) ∈ Gl. Then put
out Φ(l)(n + l + 1, p). One immediately estimates that the average error of this algorithm is bounded by 2−n.	 
It would be desirable to investigate the question under what conditions MEAN- computability is preserved by composition (cp. Theorem 3.11). We postpone this question to the future.

Alternative deﬁnitions
We are going to give a brief (and unfortunately incomplete) discussion of a possible modification to the definitions from Subsection 3.3. 11  We start by asking the
reader to recall what it means for a multi-valued mapping f : X ⇒ Y to be (δ, δY )- computable: there is a Turing machine that runs infinitely and transduces every
δ-name p into a sequence of rapidly converging range(α)-approximations to some y ∈ f (δ(p)). This is clearly equivalent to having a machine that takes as input a δ-name p and a precision parameter k ∈ N, halts in finite time, and puts out

11 Parts of this subsection have been added in answer to a remark from an anonymous referee.

a range(α)-approximation of quality 2−k to some y ∈ f (δ(p)), where y must be independ of k. Relaxing this last requirement leads to:
Definition 3.20 A total operation f : X ⇒ Y is (δ, α)∼-continuous (-computable)
if there is a continuous (computable) mapping
φ : N × dom(δ) → dom(α)


such that

(∀ n ∈ N)(∀p ∈ dom(δ)) d((α ◦ φ)(n, p), (f ◦ δ)(p)) ≤ 2−n.

We observe the following:
Lemma 3.21 Suppose X is a set with naming system δ, and (Y, d, α) is an effective metric space with Cauchy representation δY .
If f : X ⇒ Y is (δ, δY )-continuous (-computable) then f is (δ, α)∼-continuous (-computable).
For single-valued f, the converse of (i) also holds true.

We shall demonstrate that the converse of Lemma 3.21(i) is not true in general:

Proposition 3.22 There is an operation f : [0, 1] ⇒ R which is (ρ|[0,1], νQ)∼- computable but not (ρ|[0,1], ρ)-continuous. f can be chosen such that range(f ) is
compact and the cardinality of f (x) is at most two for each x ∈ [0, 1].
Proof. For k = 0, 1, 2,... put Ak := (2−(k+1), 2−k]. Consider the functions f1, f−1 : [0, 1] → R given by


1+ 2−k	for x ∈ A ,
f1(x)= 
1	for x = 0,
−1	for x > 0,
−1
1	for x = 0.

Now define f by putting f (x) := {f1(x), f−1(x)} for all x ∈ [0, 1].
We first show that f is (ρ|[0,1], νQ)∼-computable, i.e. we give an algorithm for a mapping φ as in Definition 3.20. Let the input (n, p) ∈ N×dom(ρ|[0,1]) be given. At least one of the sets [0, 2−(n+2)), (2−(n+3), 1] contains ρ(p), and one can effectively pick one such set. If the chosen set is [0, 2−(n+2)), put out 1; this choice is correct, because ρ(p) is either 0 (and f (0) = {1}) or in Ak for some k ≥ n (and then 1+ 2k ∈ f (ρ(p))). If the chosen set is (2−(n+3), 1], put out −1 (which is exactly f−1(ρ(p))).
Now we show that f is not (ρ|[0,1], ρ)-continuous. Assume the contrary and let φ be a corresponding continuous realizer. Let p be a ρ-name of 0. It follows from f (0) = {1} that there is a prefix w of p such that ρ(φ(wp')) > 0 for all wp' ∈ dom(ρ|[0,1]). Then necessarily ρ(φ(wp')) = f1(ρ(wp')) for all wp' ∈ dom(ρ|[0,1]). From this it follows that f1 must be continuous on W (ρ|[0,1], w). But W (ρ|[0,1], w)

contains an open neighbourhood of 0, and f1 is not continuous on any open neigh- bourhood of 0.	 
In a certain sense, our definitions of APP- and MEAN-continuity (- computability) can be derived in a natural way as weakenings of (δ, α)∼-continuity (-computability):
Lemma 3.23 A total operation f : X ⇒ Y is (δ, α)∼-continuous (-computable) iff there is a continuous (computable) mapping φ : N × dom(δ) → dom(α) such that
(∀ n ∈ N)(∀ x ∈ X) e(f, δ, φn, x) ≤ 2−n.	(3)
 
Now the definitions of APP-continuity (-computability) and MEAN-continuity (-computability), respectively, are obtained by replacing the ∀-quantification over x by a probabilistic criterion.
In general, (δ, α)∼-computability is not an adequate alternative to (δ, δY )- computability, because (in contrast to the latter) (δ, α)∼-computability is not preserved under composition of multi-valued mappings. It seems like APP- computability inherits this flaw, as we were only able to prove Theorem 3.11 for the inner mapping being single-valued. Can we “repair” the definition of APP- computability in this respect? A definition that achieves this would have to judge the quality of an approximation φ(n, p) not by its distance to the set f (δ(p)), but by its distance to a fixed element ζ(p) ∈ f (δ(p)) that does not depend on the precision level n:

Definition 3.24 Let f : X ⇒ Y be a total operation. f is (δ, α)μ∗
-continuous

(-computable) if there is a mapping ζ : dom(δ) → Y with
(∀ p ∈ dom(δ)) ζ(p) ∈ (f ◦ δ)(p)
and a continuous (computable) mapping φ : N × dom(δ) → dom(α) such that

(∀ n ∈ N) μ∗	sup
p∈δ−1 {x}
d((α ◦ φ)(p),ζ(p)) > 2−n  ≤ 2−n.

If one requires the inner mapping f in Theorem 3.11 to be (δ, α)μ∗	-
computable, then one can in return allow it to be multivalued (the proof goes through nearly unchanged).	But does Proposition 3.9 hold analogously for
(δ, α)μ∗	-continuity? Unfortunately, we do not yet have an answer to this ques-
tion.
It remains open at this time, whether Definition 3.24 should be favoured over Definition 3.6. In the present article, we will restrict ourselves to working with the latter.
In the future, an analogue of Definition 3.24 for MEAN-continuity (- computability) will probably be useful when the composition of MEAN-computable mappings is investigated.

(Multi-)Representations corresponding to the probabilistic continuity notions
The definitions from the preceding subsections suggest definitions of multi- representations. We will not work out all of them here, but only give one example.
Definition 3.25 Suppose that δ is a representation of X.

The multi-representation (δ, α)ν
of the set of all (δ, α)ν
-continuous total

operations from X into Y is defined by
f ∈ (δ, α)ν	(p) :⇐⇒ η(p)|N×dom(δ) = Φ for some Φ as in Definition 3.14,


where

η :=
η∗∗	if δ is a notation,
ηω∗	if δ is a representation,

and η∗∗, ηω∗ are defined in [20, Definition 2.3.10].

The multi-representation (δ, α)ν
of the set of all (δ, α)ν
-continuous

total operations from X into Y is defined by


ν
MEAN/AE
(p)

:⇐⇒ there is a ν-null set N and a h ∈ (δ|X\N , α)ν	(p) such that f |X\N = h.
Following the pattern of Definition 3.25, one can also turn Definitions 3.20, 3.4, 3.6, 3.7 into definitions of multi-representations.
Remark 3.26 Under  the  assumptions  of  Definition  3.25,	an operation is

(δ, α)ν
-computable iff it has a computable (δ, α)ν
-name. The same holds

analogously for the other multi-representations formed by the pattern of Definition
3.25. So our terminology is consistent with [20, Definition 3.1.3.1].	 
We have the following immediate consequence of Lemma 3.3:
Lemma 3.27 Suppose that δ' is another naming system of X.

If δ' ≤t δ, then every (δ, α)ν
-continuous operation is (δ', α)ν
-con-

tinuous and (δ, α)ν
If δ' ≤ δ, then (δ, α)ν
'	ν
MEAN/AE
≤ (δ', α)ν	.

MEAN/AE	MEAN/AE
Items (i) and (ii) hold analogously for other representations formed by the pattern of Deﬁnition 3.25.	 

General relations between (I), (II) and (III)
We will now clarify the mutual relations between the concepts defined above. The first proposition sums up the cases where there is a computable reduction of one multi-representation to the other. Then we give some strong counter-examples –
i.e. examples envolving functions from [0, 1] to R and the Lebesgue measure – for other cases. The remaining cases are treated in the next subsection.

Proposition 3.28(i) (δ, δY ) ≤ (δ, δY )ν  .

(δ, δY )ν
APP/AE .

(δ, α)ν	≤ (δ, α)ν	.

(δ, α)ν
APP/AE .

Proof. (i) and (ii) are obvious. (iv) is a corollary of (iii). We prove (iii): Lemma
3.13 yields that for every h : X → [0, ∞] and every ϵ > 0, one has
∗	∗
h dν ≥	ϵ · χ[h>є]dν ≥ ϵ · ν ([h > ϵ]).

From this it easily follows: If Φ is a mapping as in Definition 3.14, then a suit- able mapping φ as in Definition 3.6 is given by φ(n, p) := Φ(2n, p); this yields a computable reduction.	 
Combining Propositions 3.28 and 3.8 yields:
Corollary 3.29 Assume that σ(δ−1) ⊆ MEASν∗ . If a single-valued f : X → Y is

ν
MEAN/AE
-continuous, then f is (MEASν∗ , B(Y ))-measurable.	 

Lemma 3.30 Suppose that Y is a normed space, the mapping a '→ a  is (α, ρ)- computable, and ν is ﬁnite. For an arbitrary constant N ∈ N, let B be the set of all operations f : X ⇒ Y with
sup{y  : y ∈ range(f )}≤ N.
Then (δ, α)ν	|B ≤ (δ, α)ν	.
Proof. We can assume N > 0. There is an a0 ∈ dom(α) such that α(a0)  < N . Given a mapping φ as in Definition 3.6, we can compute a φ' : N×dom(δ) → dom(α) such that for all (n, p) ∈ dom(φ), one has
φ'(n, p) ∈ {φ(n, p), a0},
(α ◦ φ)(n, p)  ≥ 4N =⇒ φ'(n, p)= a0,
(α ◦ φ)(n, p)  ≤ 3N =⇒ φ'(n, p)= φ(n, p).
By distinguishing the cases
(α ◦ φ)(n, p)  ≤ 3N,  (ii) 3N <  (α ◦ φ)(n, p)  < 4N,  (iii) 4N ≤ (α ◦ φ)(n, p)  ,
one finds that
(∀ a ∈ B(0,N )) (α ◦ φ')(n, p) − a  ≤ min{(α ◦ φ)(n, p) − a  , 5N };
hence one has e(f, δ, φ' , ·) ≤ min{e(f, δ, φn, ·), 5N } for every f ∈ B. A standard estimate yields that a suitable mapping Φ as in Definition 3.14 is given by Φ(n, p) := φ'(n + [log(5N + ν(X))|, p). This yields a computable reduction.	 

Proposition 3.31 There is a set S ⊆ [0, 1] such that χS is (ρ, νQ)λ
-computable

but not (ρ, ρC )λ
-continuous.

Proof. Parker [11, Theorem IV] defines a set S ⊆ [0, 1] and proves that χS is

(ρ, νQ)λ
-computable but not (ρ, ρC )λ
-continuous (although he does not use these

terms). By the previous lemma, χS is even (ρ, νQ)λ	-computable.	 

Proposition 3.32(i) There is a function f : [0, 1] → R which is (ρ|[0,1], ρC)λ
- and

[0,1]	λ
MEAN/AE
-computable but not (ρ|[0,1], νQ)λ
-continuous.

There is a function f : [0, 1] → R which is (ρ|[0,1], νQ)λ
-computable but not

[0,1]	λ
MEAN/AE
-continuous.

Proof. Recall that ρ|[0,1] is an open representation of [0, 1]. We can hence apply Proposition 3.18.
For (i), simply consider f (x) := x−1 · χ(0,1], which clearly is computable and MEAN-computable on (0, 1], but not locally integrable in 0.
For (ii), we need a more elaborate example: For every a ∈ [0, 1],n ∈ N, define
fa,n(x) := (x − a)−1χ(a,a+2−n ]∩[0,1](x).

Let (an)n∈N be a computable dense sequence of rationals in [0, 1]. Choose f := supn∈N fan,n. Clearly, f is a measurable function into R, that is not integrable on any open subset of [0, 1]. Obviously, f (x)= ∞ implies that x is contained in infinitely


So, the function f :=
f˜ · χ[fe/=∞] is into R and is still measurable and nowhere



not (ρ|[0,1], νQ)λ
-continuous. On the other hand, it is not hard to see that

f is (ρ|[0,1], νQ)λ	-computable.	 

Reductions that require certain effectivity assumptions
Only the following relations have not been covered yet: AE ~ MEAN/AE, AE ~ APP, APP/AE ~ APP, MEAN/AE ~ APP. For them, computable reductions do not exist in general, but under some additional assumptions, which are in particular fulfilled for mappings defined on Rn with its standard representation and Lebesgue measure.
We first turn to AE ~ MEAN/AE:
Definition 3.33 Suppose that X is topological, δ is continuous, and θ is a rep- resentation of the hyperspace O(X) of open subsets of X. δ and θ are said to be compatible, if the relation {(x, U ) ∈ X × O(X) : x ∈ U } is (δ, θ)-r.e.
Proposition 3.34 Suppose that X is topological, δ is continuous, and θ is a com- patible representation of O(X). Further suppose that there is a [θ, νN]ω-computable sequence (Ur, Mr)r in O(X) × N such that X =  r Ur and ν∗(Ur) ≤ Mr for all r ∈ N. Then



Fig. 1. The graphic subsumes the results of this subsection. A solid arrow indicates computable reduction, a dashed arrow indicates a strong counter-example.
(δ, α)∼ ≤ (δ, α)ν	.

(δ, δY )ν
MEAN/AE .

Proof. It is sufficient to show (i): From the input (δ, α)∼-name we can compute a φ as in Lemma 3.23. By type conversion, it is sufficient to demonstrate how to compute a mapping Φ as in Definition 3.14, so suppose we are additionally given as input an n ∈ N and a p ∈ dom(δ). Effectively determine an r such that δ(p) ∈ Ur. Then put out φ(n + [log Mr| + 1, p).
We have to verify that the Φ computed by this algorithm is correct. Let f :
X ⇒ Y be an operation corresponding to the input (δ, α)∼-name. We then have

∗
e(f, δ, Φn, x) ν(dx) ≤
∗
sup χUr (x)e(f, δ, φn+[log Mr|+1, x) ν(dx)
r

≤	Mr 2−(n+[log Mr|+1)
r
≤ 2−n.


We now look for assumptions that imply computable reducibility from APP/AE to APP (and hence from AE to APP and from MEAN/AE to APP). The next lemma is intended as preparation for the proof of Theorem 3.36. 12
Lemma 3.35 Suppose the following:
X is topological, δ is continuous, and θ is a compatible representation of O(X).

12 But Lemma 3.35 might also be interesting in its own right, because the assumptions it makes are somewhat weaker than needed for the proof of Theorem 3.36.

There is a [θ]ω-computable sequence (Ur) such that X =	r Ur, and μ∗ is ﬁnite on the Ur.
From any preﬁx-free sequence (wl)l in Σ∗ with

μ∗  X \  W (δ, wl)  =0 

and any r, k ∈ N, one can [θ]ω-compute a sequence (Vl)l and θ-compute a set V , such that


and μ∗(L) ≤ 2−k where
Ur ⊆  Vl ∪ V˜



L := Ur ∩ V˜ ∪  (Vl \ W (δ, wl)) .

Then (δ, α)μ∗	≤ (δ, α)μ∗  .

Proof. Let φ' be the mapping encoded in the input (δ, α)μ∗
-name (see Defi-

nitions 3.6, 3.7 and 3.25), and let f : X ⇒ Y be an arbitrary operation described by that name. By type conversion, it is sufficient to demonstrate how to compute
a mapping φ as in Definition 3.6, so suppose we are additionally given as input an
n ∈ N and a p ∈ dom(δ). The (δ, α)μ∗	-name of φ' encodes a double-sequence
(wm,l, am,l)m,l in Σ∗ × dom(α) such that l wm,lΣω ⊇ δ−1(X \ N ) (where N is as in Definition 3.7) and φ'(m, p) = am,l whenever wm,l ± p. Each sequence (wm,l)l can assumed to be prefix-free. By definition, μ∗(Hm) ≤ 2−m for every m where
Hm :=	([d(f, α(am,l)) > 2−m] ∩ W (δ, wm,l)).
l
We can now apply assumption (iii) to each sequence (wm,l)l, and compute sequences (Vm,l,r,k)m,l,r,k und (V˜m,r,k )m,r,k such that

l
and μ∗(Lm,r,k) ≤ 2−k, where

Lm,r,k := Ur ∩ V˜m,r,k ∪  (Vm,l,r,k \ W (δ, wm,l)) .

Now first find an r0 such that δ(p) ∈ Ur0 , then put m0 := n + 1, k0 := n + r0 +2 and effectively determine a set

with δ(p) ∈ A. In case that A is Vm0 ,r0,k0 , put out an arbitrary a ∈ dom(α); in case that A is Vm0 ,l,r0,k0 for some l, put out am0 ,l.
We have to verify that the φ computed by this algorithm is correct.  From
the construction it follows that if d((α ◦ φ)(p, n), (f ◦ δ)(p)) > 2−n for some p ∈
dom(δ),n ∈ N, then this must be because of one of the following:
δ(p) ∈ N ,

δ(p) ∈ Hn+1 \ N (i.e. δ(p) is in the set where φ'
does not work well),

there is an r ∈ N such that δ(p) ∈ Ln+1,r,n+r+2 \ (N ∪ Hn+1) (i.e. φ'
would

work well on p, but φn+1 possibly differs from it here).
We can hence estimate:
μ∗([e(f, δ, φn, ·)] > 2−n) ≤ μ∗(Hn+1)+ Σ μ∗(Ln+1,r,n+r+2)

≤ 2−(n+1) +	2−(n+r+2) = 2−n.
r


Theorem 3.36 Let (X, β, ϑ) be a computably regular computable topological space, and let δ be its standard representation. Let ν be a ϑM<-computable Borel measure on X with the additional property:
ν|β takes only ﬁnite values and is (ϑ, ρ>)-computable.	(4)
Then (δ, α)ν	≤ (δ, α)ν	.
We start with an auxiliary lemma:
Lemma 3.37 Under the assumptions of Theorem 3.36, the multi-valued mapping deﬁned by the graph
{((V, k),U ) ∈ (β × N) × O(X) : X \ V ⊆ U, ν(V ∩ U ) ≤ 2−k}
is (ϑ, νN, ϑ<)-computable.
Proof. From the ϑ-input V one can [ϑ∩, ϑ<]ω-compute a sequence (Vn, Un)n as in Definition 2.5. As the number ν(V ) can be ρ>-computed and the numbers ν(V0 ∪
... ∪ Vm) can be ρ<-computed for every m, we can effectively find some m such that
ν(V ∩ U0 ∩ ··· ∩ Um) ≤ ν(V \ (V0 ∪ ... ∪ Vm)) = ν(V ) − ν(V0 ∪ ... ∪ Vm) ≤ 2−k. So put out U0 ∩ ··· ∩ Um.	 
Proof. [Proof of Theorem 3.36] It is sufficient to check that assumptions (i) to
from Lemma 3.35 are fulfilled for μ∗ = ν∗ and θ = ϑ<. It is easy to check that (i) is fulfilled. For assumption (ii), let (ur)r be a computable enumeration of dom(ϑ) and choose Ur := ϑ(ur); then the assumption is fulfilled by (4). Let us

turn to (iii): Suppose we are given (wl)l and r, k. If D is defined as in Lemma 2.4, we can compute a sequence (w' )l such that {w' }l = {wl}l ∩ D. For w ∈/ D, one
l	l
has W (δ, w) = ∅, so (w' )l still has the property ν (X \  l W (δ, w' )) = 0. Let us
w.l.o.g. assume that {wl}l ⊆ D. By the second assertion of Lemma 2.4, we can
[ϑ∩]ω-compute the sequence (W (δ, wl))l. We have ν (Ur \	l W (δ, w' )) = 0, and hence, in view of the computability of ν and (4), we can effectively find a number
s ∈ N such that
ν ,Ur \	W (δ, wl)⎞ ≤ 2−(k+1).
l≤s
Choose
V :=	W (δ, wl)	for l ≤ s
∅	for l > s.
Resolving the definition of ϑ∩, we have a [[ϑ]<ω]s-computable tuple
((V1,1,... , V1,t(1)),... , (Vs,1,... , Vs,t(s)))
such that W (δ, wl)= Vl,1 ∩ ··· ∩ Vl,t(l) for all l ≤ s. For all l ≤ s and i ≤ t(l), apply the auxiliary lemma to the pair (Vl,i, [log s + log t(l)| + k + 1) and let
((V1,1,... , V1,t(1)),... , (Vs,1,... , Vs,t(s)))
be the tuple [[ϑ<]<ω]s-computed that way. Choose

V˜ := 

V˜l,i

l≤s i≤t(l)

and note that we can ϑ<-compute V . One easily verifies that X ⊆	l Vl ∪ V , and hence the first part of assumption (iii) is fulfilled. The second part is fulfilled
because



and
Ur ∩ V˜ ∪  (Vl \ W (δ, wl)) = Ur ∩ V˜


ν(Ur ∩ V˜) ≤ ν   W (δ, wl) ∩ V˜  + 2−k+1



= ν 

Vl,i ∩ 

V˜l,i  + 2−k+1

≤ Σ ν 

Vl,i ∩ 

V˜l,i  + 2−k+1

≤ Σ Σ ν(Vl,i ∩ V˜l,i)+ 2−k+1
l≤s i≤t(l)
≤ 2−k.

Theorem 3.36 is in fact a generalization of [11, Theorem II], where it was proved that the characteristic function of a subset of Euclidean space is APP-computable if it is AE-computable with respect to Lebesgue measure.
We have the following corollary for finite measures on metric spaces:
Theorem 3.38 Let (X, d', α') be a computable metric space. Let (X, β, ϑ) be the computable topological space derived from it as in Lemma 2.7, and let δ be its

standard representation.	Suppose that ν is a ϑ0
-computable measure.	Then

ν
APP/AE
≤ (δ, α)ν	.

Proof. Apply Theorem 2.11 to (X, β, ϑ), and note that the resulting computable topological space (X, β', ϑ') (with standard representation δ') fulfills the assump-

tions of Theorem 3.36, hence (δ', α)ν
≤ (δ', α)ν
. δ and δ' are equivalent,

hence Lemma 3.27 yields the claim.	 

Computability of integration
Assumption 4.1 Throughout this section we assume that
ν is ﬁnite,
Y is a normed space over R, δY is its Cauchy representation,
the norm on Y is (δY , ρ)-computable,
vector addition is (δY , δY , δY )-computable,
scalar multiplication is (ρ, δY , δY )-computable.
The following definitions and basic results are taken from [17, Section II.3.1]: Let Y ∗ denote the topological dual of Y , and let C(Y ) be the cylindrical σ-algebra on Y , i.e. the coarsest σ-algebra w.r.t. which all elements of Y ∗ are measurable. Suppose that f : X → Y is an (S, C(Y ))-measurable mapping. We say that f is of weak order p (for 0 < p < ∞) if |g ◦ f |p dμ < ∞ for every g ∈ Y ∗. If f is of weak order one, then we call an element yf of Y (Pettis) integral of f w.r.t. ν if
(∀ g ∈ Y ∗) ∫ g ◦ f dν = g(yf ).

If there is an integral of f , then it is unique and we denote it by E(f ; ν). The mappings for which the integral exists form a vector space on which E(·; ν) is linear. For real-valued mappings, the Pettis integral is equal to the usual integral. Now suppose that f : X → Y is (S, B(Y ))-measurable. We say that f is of strong order p (for 0 < p < ∞) if f  p dν < ∞. Every mapping of strong order p is of weak order p. If f is of strong order one and E(f ; ν) exists, then E(f ; ν)  ≤ E(  f  ; ν). For the existence of E(f ; ν), it is sufficient that f is of strong order one and Y is complete.
Under what circumstances and from what input is E(f ; ν) δY -computable? Con- sider for example ν = γ with γ being the standard Gaussian distribution on R. It

is an easy exercise to make up a γ-integrable (ρ, νQ)γ
-computable function

f : R → R such that E(f ; γ) is not ρ>-computable and hence no computable real.
This example makes clear that integrals cannot be computed from MEAN-names in general, not even for computable probability measures on the real line. The next theorem, however, shows that integration becomes computable under the additional assumption of the computable compactness of X, or if certain stronger information on the input is provided.
Theorem 4.2 Let (X, β, ϑ) be a computable topological space , and let δ be its standard representation. Suppose that ν is a ϑM=-computable ﬁnite Borel measure on X. Put

L := {f : X → Y  : f is (S, B(Y ))-measurable,

(δ, α)ν
-continuous, and E(f ; ν) exists}.


If X is computably compact, then f '→ E(f ; ν) is ((δ, α)ν	|L, δУ )-computable.
Deﬁne the set
B := {(f, b) ∈ L × N :	f  ≤ b}.
Then (f, b) '→ E(f ; ν) is ([(δ, α)ν	, νN]|B, δУ )-computable.
Deﬁne the set
I := {(f, c) ∈ L × R : E( f ; ν)= c}.
Then (f, c) '→ E(f ; ν) is ([(δ, α)ν	, ρ>]|I, δУ )-computable.
Proof. The proofs for (i), (ii) and (iii) start the same: Let p be the (δ, α)ν	-
name given as input and let f : X → Y be an arbitrary mapping described by it. It is sufficient to demonstrate how to δУ -compute a 2−k-approximation to E(f ; ν) for k = 0, 1, 2,.  So fix an arbitrary k. From p, we can draw a sequence (wl, al)l
in Σ∗ × dom(α) such that  l wlΣω ⊇ dom(δ) and
∫ sup χW (δ,w )(x) · f (x) − α(al)  ν(dx) ≤ 2−(k+2).
l

By Lemma 2.4, we can assume 13 that we can [ϑ∩]ω-compute the sequence (W (δ, wl))l. Put A0 = W (δ, w0) and Al = W (δ, wl) \ j<l Aj for l ≥ 1. Note that (Al)l can be [ϑalg]ω-computed. Put

s(x) :=	χAÆ (x) · α(al).
l


13 This argument is carried out in more detail in the proof of Theorem 3.36.

One has

E(  f − s  ; ν)= ∫ ¨f (x) − Σ χAÆ (x) · α(al)¨ ν(dx)

∫ ¨		 ¨

≤	sup χW (δ,wÆ)(x) · f (x) − α(al)  ν(dx)
l
≤ 2−(k+2) .

For every m ∈ N put Bm := l≤m Al = l≤m W (δ, wl) and
ym := Σ ν(Al)α(al),	sm(x) := χBm (x) · s(x)= Σ χAÆ (x) · α(al).
One immediately verifys that E(sm; ν)= ym, and that the sequence (ym)m is [δУ ]ω- computable. Combining this with (5) yields:
E(f ; ν) − ym  ≤ E(  f − sm  ; ν)= E(χX\Bm · f  ; ν)+ E(χBm · f − s  ; ν)
≤ E(χX\B · f  ; ν)+ 2−(k+2).
So it is sufficient to compute an m such that E(χX\B ·  f  ; ν) ≤ 2−(k+1) + 2−(k+2). For (i): By the computable compactness of X, we can compute an m such that
Bm = X.
For (ii): We can effectively find an m such that ν(X \ Bm) ≤ b−1(2−(k+1) + 2−(k+2)).
For (iii): From (5), it follows that

2−(k+2) ≥ E(  f  ; ν) − E(  s  ; ν)= E(  f  ; ν) − lim
m→∞
E(χBm
· s ; ν).

The sequence (E(χBm · s  ; ν))m can be [ρ]ω-computed, because
E(χBm · s  ; ν)= E(  sm  ; ν)=	ν(Al)  α(al)  .
l≤m

As we are given a ρ>-name of E(  f  ; ν), we can effectively find an m such that 2−(k+1) ≥ E(  f  ; ν) − E(  sm  ; ν). We then have
E(χX\Bm · f  ; ν)
≤ (E(  f  ; ν) − E(χBm · s  ; ν)) + (E(χBm · s  ; ν) − E(χBm · f  ; ν)
≤ 2−(k+1) + 2−(k+2).


Corollary 4.3 If the space (X, β, ϑ) in the previous theorem is derived from a com- putable metric space as in Lemma 3.27, then the theorem still holds true if ν is

merely ϑ0
-computable.

Proof. Same idea as in the proof of Theorem 3.38.	 

Measurability of the local error
In Definitions 3.6(ii) and 3.14, we used the outer measure ν∗ induced by a measure
ν and the outer integral ∫ ∗ dν, respectively. The reason for using those instead of ν

always (S, B(R))-measurable. So far, this has not turned out to have any negative consequences for our theory; we especially have that the outer integral grants us sufficient access to the Strong Law of Large Numbers to prove Theorem 3.16, whose statement is essentially what we expect from a notion of “computability in the mean”. Anyway, we consider it an interesting question, under what conditions the measurability of f implies the measurability of the local error e(f, δ, Φ, ·).
Proposition 5.1 Suppose that σ(δ−1) ⊆ S. Let Φ : dom(δ) → dom(ρ) be contiu-
ous, and let f : X ⇒ Y be (S, B(Y ))-measurable. Then e(f, δ, Φ, ·) is (S, B(R))- measurable.
Proof. There is a prefix-free set {wl}l ⊆ Σ∗ such that dom(δ) ⊆	l wlΣω and Φ is constantly equal to some al ∈ dom(α) on each set wlΣω ∩ dom(δ). One then has
e(f, δ, Φ, x)= sup χW (δ,wÆ)(x)d((α ◦ Φ)(p),f (x)).
l
e(f, δ, Φ, ·) is a countable supremum of measurable functions and hence itself mea- surable.	 
Lemma 5.2 Suppose that Y contains at least two distinct points and that σ(δ−1) /⊆
S. Then there is a constant mapping f : X → Y and a computable Φ: dom(δ) →
dom(α) such that e(f, δ, Φ, .) is not (S, B(R))-measurable.
Proof. There must be at least two distinct points α(a0), α(a1) in range(α). Choose
f ≡ α(a0). There must bea w ∈ Σ∗ such that W (δ, w) ∈/ S. Define Φ by
Φ(p) :=	a1	if w ± p
a0	else.
We then have e(f, δ, Φ, ·)−1((0, ∞)) = W (δ, w).	 
We combine the last two results:
Corollary 5.3 Suppose that Y contains at least two distinct points. Then the fol- lowing two statements are equivalent:
For every (S, B(R))-measurable f : X ⇒ Y and every continuous Φ: dom(δ) →
dom(α), we have that e(f, δ, Φ, ·) is (S, B(R))-measurable.
σ(δ−1) ⊆ S.
 

We have found that σ(δ−1) ⊆ S is the crucial condition. This condition has already appeared before in a different context (see Proposition 3.8 and Corollary 3.29). It is time to ask for conditions under which it is fulfilled. In fact, we believe that σ(δ−1) ⊆S will be fulfilled in all common applications. For example, we have already seen (Lemma 2.4) that we have σ(δ−1) ⊆ B(X) if X is an effective topolog- ical space and δ is its standard representation. For the Cauchy representation of an effective metric space, there are no complications, either:
Proposition 5.4 Let (X, d', α') be an effective metric space with Cauchy represen- tation δX . Then σ(δ−1) ⊆ B(X).
Proof. Let w ∈ Σ∗ be arbitrary. Let us first suppose that w has the form
ι(w0)ι(w1) ... ι(wk).	(6)
Either W (δX , w) = ∅ (and is hence measurable), or w can be extended to an el- ement of dom(δX ). In the latter case, we know that w0,... , wk ∈ dom(α') and d'(α'(wi), α(wj )) ≤ 2−i for 0 ≤ i < j ≤ k. It is easy to see that



W (δ, w)= 
0≤i≤k
{a ∈ range(α'): d'(α'(wi), a) ≤ 2−i}

and hence is a closed set. If w is not necessarily of the form (6), we still have
W (δ, w)=	{W (δX , wv) : wv is of the form (6)}
So W (δ, w) is an at most countable union of closed sets and hence Borel.	 
A different different type of sufficient condition for σ(δ−1) ⊆ S is presented in following:
Proposition 5.5 Suppose (X, A) is a standard Borel space 14 , μ is a σ-ﬁnite mea- sure on (X, A), D is a Borel subset of Σω ,and δ : D → X is a Borel measurable representation of X. Put S = Aμ. Then σ(δ−1) ⊆ S.
Proof. By [8, Corollary 13.4], all Borel subsets of a standard Borel space are again standard Borel, hence all wΣω ∩ D are. From [8, Exercise 14.6] we have that Borel images of standard Borel spaces are analytic (see [8, Definition 14.1]); so all sets of the form δ(wΣω ∩ D) are analytic. Finally, [8, Theorem 21.10] asserts that every analytic subset of a standard Borel space is universally measurable, which means μ-measurable with respect to any σ-finite Borel measure μ.	 
We finally ask whether δ1 ≡ δ2 ∧ σ(δ−1) ⊆S implies σ(δ−1) ⊆ S. Surprisingly,
1	2
the answer is “No”, as can be seen by combining Proposition 5.4 with the next
proposition:
Proposition 5.6 Suppose that (X, d', α') is a perfect 15 and Polish effective metric

14 A measurable space is called a (standard) Borel space if it is isomorphic to (У, B(У )) for some Polish space У . A Polish space is a separable completely metrizable topological space.
15 A topological space is called perfect if it has no isolated points.

space. Let δX denote its Cauchy representation. There is a representation δ of X
such that dom(δ) ∈ B(Σω), δ ≡ δX , and σ(δ−1) /⊆ B(X).
Proof. Let N be the Baire space and let δN be its representation as defined in [20, Definition 3.1.2.8]); one easily verifies that
δN is a homeomorphism between dom(δN ) and N ,
δ−1 : N → Σω is (δN , idΣω )-computable,
dom(δN ) ∈ B(Σω).
It is also clear that the projection π1,2 : N 3 → N 2 onto the first two coordinates as well as the standard homeomorphic tuplings
⟨·, ·,.. . , ·, ·⟩ : N n → N , n ≥ 1,
n

are ([δN ]3, [δN ]2)- and ([δN ]n, δN )-computable, respectively.
From [8, Proof of Theorem 14.2], we have that there is a closed set F ⊆ N 3 such that π1,2(F) is not Borel. Clearly,
F := (δ−1 ◦ ⟨·, ·, ·⟩)(F) is closed in dom(δN ) and is hence Borel.
By a straightforward effectivization of [8, Theorem 6.2], there is an (idΣω , δX )- computable injective mapping ι : Σω → X. We have that the composition

3 π1,2	2 ⟨·,·⟩	(δN )−1	ω ι
N	→ N	→ N	→	Σ → X,
which we shall call H, is injective and ([δN ]3, δX )-computable. We especially have that A := H(F) is non-Borel in X (because A is the continuous injective image of a non-Borel set). We also have that
δ := H ◦ ⟨·, ·, ·⟩−1 ◦ δN : F → A
is a representation of A with Borel-domain and δ ≤ δX .
It is easy to verify that dom(δX ) =: D itself is Borel. So we can define δ by dom(δ) = 0D ∪ 1F , δ(0p) = δX (p) and δ(1p) = δ(p). So of course δ has Borel domain, δX ≡ δ, and W (δ, 1)= A is not Borel.	 

Conclusion
We considered several notions of probabilistic computability via representations and were able to answer a number of natural questions about them. Some open questions (e.g. concerning the composition of MEAN-computable mappings and the “right” definition of multi-valued APP- and MEAN-computability) remain and can hopefully be treated in the near future.

Our next aim is to apply the concepts developed in this paper to study the probabilistic computability and complexity of concrete operators from numerical analysis.

References
Bishop, E. and D. Bridges, “Constructive Analysis,” Springer, Berlin, 1985.
Edalat, A., Dynamical systems, measures and fractals via domain theory, in: G. L. Burn, S. J. Gay and M. Ryan, editors, Theory and Formal Methods, Workshops in Computing (1993), pp. 82 – 99.
Edalat, A., Domain theory and integration, Theoretical Computer Science 151 (1995), pp. 163 – 193.
Ga´cs, P., Uniform test of algorithmic randomness over a general space, Theoretical Computer Science
341 (2005), pp. 91 – 137.
Grubba, T. and K. Weihrauch, On computable metrization, Electronic Notes in Theoretical Computer Science 167 (2007), pp. 345 – 364.
Hertling, P., On the solvability of ill-posed problems in two models of computation (2005), talk presented at the Foundations of Computational Mathematics conference, Santander, Spain.
Kallenberg, O., “Foundations of Modern Probability,” Springer, New York, 2002, second edition.
Kechris, A. S., “Classical Descriptive Set Theory,” Springer, New York, 1995.
Ko, K.-I., “Complexity Theory of Real Functions,” Birkh¨auser, Boston, 1991.
Mu¨ller, N. T., Computability on random variables, Theoretical Computer Science 219 (1999), pp. 287 – 299.
Parker, M. W., Undecidability in Rn: Riddled basins, the KAM tori, and the stability of the solar system, Philosophy of Science 70 (2003), pp. 359–382.
Parker, M. W., Three concepts of decidability for general subsets of uncountable spaces, Theoretical Computer Science 351 (2006), pp. 2 – 13.
Schr¨oder, M., Extended admissibility, Theoretical Computer Science 284 (2002), pp. 519 – 538.
Schr¨oder, M., Admissible representations of probability measures, Electronic Notes in Theoretical Computer Science 167 (2007), pp. 61 – 78.
Schr¨oder, M. and A. Simpson, Representing probability measures using probabilistic processes, Journal of Complexity 22 (2006), pp. 768 – 782.
Traub, J. F., G. W. Wasilkowski and H. Wo´zniakowski, “Information-based complexity,” Academic Press, New York, 1988.
Vakhania, N. N., V. I. Tarieladze and S. A. Chobanian, “Probability Distributions on Banach Spaces,” Kluwer Academic, Dordrecht/Norwell, MA, 1987.
Webster, J., Finite approximation of measure and integration, Annals of Pure and Applied Logic 137
(2006), pp. 439 – 449.
Weihrauch, K., Computability on the probability measures on the Borel sets of the unit interval., Theoretical Computer Science 219 (1999), pp. 421–437.
Weihrauch, K., “Computable Analysis: An Introduction,” Springer, Berlin, 2000.
Wu, Y. and D. Ding, Computability of measurable sets via effective metrics, Mathematical Logic Quarterly 51 (2005), pp. 543 – 559.
Wu, Y. and D. Ding, Computability of measurable sets via effective topologies, Archive for Mathematical Logic 45 (2006), pp. 365 – 379.
Wu, Y. and K. Weihrauch, A computable version of the Daniell-Stone theorem on integration and linear functionals, Theoretical Computer Science 359 (2006), pp. 28 – 42.
