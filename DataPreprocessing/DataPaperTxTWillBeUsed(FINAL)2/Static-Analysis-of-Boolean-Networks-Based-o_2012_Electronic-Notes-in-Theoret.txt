Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 284 (2012) 93–104
www.elsevier.com/locate/entcs

Static Analysis of Boolean Networks Based on Interaction Graphs:
A Survey
Lo¨ıc Paulev´e
LUNAM Universit´e, E´cole Centrale de Nantes, IRCCyN UMR CNRS 6597 (Institut de Recherche en Communications et Cybern´etique de Nantes)
1 rue de la No¨e - B.P. 92101 - 44321 Nantes Cedex 3, France
loic.pauleve@irccyn.ec-nantes.fr

Adrien Richard
I3S, UMR 6070 CNRS & Universit´e de Nice-Sophia Antipolis, 2000 route des Lucioles, 06903 Sophia Antipolis, France. richard@i3s.unice.fr


Abstract
Boolean networks are discrete dynamical systems extensively used to model biological regulatory networks. The dynamical analysis of these networks suffers from the combinatorial explosion of the state space, which grows exponentially with the number n of components. To face this problem, a classical approach consists in deducing from the interaction graph of the network, which only contains n vertices, some information on the dynamics of the network. In this paper, we present results in this topic, mainly by focusing on the influence of positive and negative feedbacks.
Keywords: Boolean network, interaction graph, discrete dynamical system, regulatory network

Introduction

Biological regulatory networks model the influence of biological components between each other. While such relations can be deduced through experiments by biologists, such systems can raise complex global dynamical behaviours and motivate the use of formal verification techniques to validate a model, and predict and understand particular behaviours, such as proteins productions dynamics [9,8].
Boolean Networks (BNs) are a typical formalism used to model biological reg- ulatory networks dynamics (see the seminal work of Stuart Kauffman [19,20] and Ren´e Thomas [46,48]). A BN associates to each component a Boolean value and a local logical function describing its evolution in front of the value of other compon-
1571-0661 © 2012 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2012.05.017

ents of the network. The global dynamics is then a Boolean map applying the local functions on component values, with different settings of iteration schemes.
Because the size of the state space is exponential with the number of components, classical analysis, such as model-checking techniques, may be intractable with large systems. To cope with this combinatorial explosion, an amount of work establish relationships between the interaction graph of a BN and some properties on the dynamics. An interaction graph references the positive and negative influences between components into a signed directed graph having one vertex per component; and hence is a compact and static abstraction of BN dynamics.
This paper aims at giving an insight of the different results on the relationships between the interaction graph and the dynamical properties of BNs. These kinds of results are of particular interest in the modelling of regulatory networks: those inter- action graphs are generally the most reliable information on the biological system, while few knowledge on their precise behaviours are available.
This paper is structured as follows. Sect. 2 presents the main definitions used in this paper. Sect. 3 details the major results extracting dynamical properties of a BN from the topology of its interaction graph. Finally, we discuss these state-of-the-art approaches, and mention other static analysis techniques for BNs in Sect. 4.
Definitions

Notations. Let n be a positive integer, [n] = {1, . . . , n}, and B = {0, 1}. The ith component of a point x ∈ Bn is denoted xi. If I ⊆ [n], then xI denotes the point y ∈ Bn such that yi = 1 − xi if i ∈ I, and yi = xi otherwise. x is an abbreviation for x[n], and if i ∈ [n], we write xi instead of x{i}. For all x, y ∈ Bn, we denote by
∆(x, y) the set of i ∈ [n] such that xi /= yi. Let f : Bn → Bn. The ith component of f (x) is denoted fi(x). Hence, fi may be seen as a function from Bn to B. For all x ∈ Bn, we set ∆f (x) = ∆(x, f (x)). Observe that f (x) = x∆f(x).
Boolean networks

A Boolean network is a discrete dynamical system that consists in a collection of n Boolean components evolving along a discrete time by mutual interactions. Dynamics of such a system are usually described by a directed graph on Bn that is constructed from a Boolean function f : Bn → Bn. Several iteration graphs can be considered. In the scope of this paper, we focus on the synchronous, asynchronous and generalized iteration graphs.
Definition 2.1 [Iteration graphs]
The synchronous iteration graph of f , denoted by sig(f ), is the directed graph on Bn that contains an arc x → y if and only if y = f (x) /= x.
The asynchronous iteration graph of f , denoted by aig(f ), is the directed graph on Bn that contains an arc x → y if and only if there exists i ∈ ∆f (x) such that y = xi.

The generalized iteration graph of f , denoted by gig(f ), is the directed graph on Bn that contains an arc x → y if and only if there exists a non empty set I ⊆ ∆f (x) such that y = xI .
On the one hand, Kauffman [19,20] proposed to model gene (regulatory) net- works with synchronous iteration graphs. One the other hand, Thomas [46,48,49] argued that it is unlikely that several components change simultaneously their value, and he proposed to model gene networks with asynchronous iteration graphs. In constrast with the synchronous description, the asynchronous description is inde- terministic: a state x may have several successors (the number of successors of x is precisely |∆f (x)|). An other interesting feature of the asynchronous description is that it can been seen has a relevant approximation of continuous descriptions based on piece-wise linear differential systems [12,11,40,48,42]. Note that the generalized iteration graph contains, as subgraphs, both the synchronous and asynchronous iteration graphs.
In these three cases, the interpretation of f : Bn → Bn as a gene network is the same: [n] corresponds to a set of genes, and at state x ∈ Bn: the protein encoded by the ith gene is present if xi = 1 and absent otherwise, and the ith gene is expressed (“on”) if fi(x) = 1 and unexpressed (“off”) otherwise. Hence, the gene expressions depend on the “proteins concentration”, and the evolution of these concentrations depends on the gene expressions.
Example 2.2 [Running example] n = 3 and f is defined by:
f1(x) = x3 ∧ (x1 ∨ x2),	f2(x) = x3,	f3(x) = x1 ∨ x2 ∨ x3.
The synchronous, asynchronous and generalized iteration graphs of f are:

Fixed points and attractors

A point x ∈ Bn is a fixed point of f if x = f (x). Fixed points are of particular interest, since they correspond to stable states (in each iteration graph, x is a fixed point of f if and only if it has no successor). In the context of gene networks, fixed points correspond to stable patterns of gene expressions and are often associated to particular biological functions. In the next definition, the notion of fixed point is extended to the one of attractor.

Definition 2.3 [Attractors] Let Γ be the synchronous, asynchronous or generalized iteration graph of f . The attractors of Γ are the smallest non empty subsets A ⊆ Bn without leaving arc, i.e. such that for every arc x → y in Γ, if x ∈ A then y ∈ A. An attractor of cardinality at least two is said cyclic.
It derives that a cyclic attractor does not contain any fixed point. As a con- sequence, once a system is inside a cyclic attractor, it cannot reach a fixed point, and it necessarily describes sustained oscillations. Other easy observations on attractors follow.
of Γ. The non-cyclic attractors of Γ can thus be identified to the fixed points of f. Proposition 2.4 A point x is a fixed point of f if and only if {x} is an attractor an attractor.  Consequently, Γ has always at least one attractor. Also, for every x in Bn, there exists at least one path starting from x that reaches
Example 2.5 [Running example continued] The attractors of aig(f ) and gig(f ) are the fixed point 000 and the cyclic attractor {001, 011, 101, 111}. The attractors of sig(f ) are the fixed point 000 and the cyclic attractor {011, 101, 111}.
Interaction graphs

Inherent to the notion of Boolean network is the one of interaction graph. Such a graph depicts, in a very coarse way, the qualitative interactions between components, and is usually represented as a directed graph with [n] as vertex set. An arc from j to i then means that the evolution of the ith component depends on the evolution of the jth one. Here, we consider two kinds of interactions: the positive and negative ones. This hence leads us to consider signed directed graphs.
Definition 2.6 [Signed directed graph] A signed directed graph on [n] is a graph
G whose the set of vertices is [n], and whose the set of arcs is a subset of [n] ×
{+, −} × [n]. If (j, s, i) is an arc of G, we say that G has an arc from j to i of sign
s. G is simple if, for every i, j ∈ [n], there exists at most one arc from j to i. A positive (resp. negative) cycle of G is an elementary directed cycle that contains an even (resp. odd) number of negative arcs. The length of a cycle is the number of arcs it involves.
We are now in position to define, in a natural way, the interaction graph of a network whose the dynamics are described from f : Bn → Bn.
Definition 2.7 [Interaction graph of f ] The interaction graph of f , denoted by G(f ), is the signed directed graph on [n] defined by: for all i, j ∈ [n], there exists a positive (resp. negative) arc from j to i if and only if there exists x ∈ Bn with xj = 0 such that fi(x) < fi(xj) (resp. fi(x) > fi(xj)).
In other words, there exists a positive (resp. negative) arc from j to i if, in at least one state x, an increase of xj induces an increase (resp. decrease) of fi(x), i.e. the appearance of the jth protein turns on (resp. off) the ith gene.

Example 2.8 [Running example continued] The interaction graph of f follows. It has a negative cycle of length one, and a positive cycle of length one, two and three.
Note also that it is simple.
—



+

+

Static analysis based on the interaction graph
Absence of cycle and convergence toward a unique fixed point

The following fundamental fixed point theorem of Robert [34,35] shows that the presence of a cycle in the interaction graph is necessary to prevent a simple syn- chronous convergence toward a unique fixed point.
Theorem 3.1 If G(f ) has no cycle, then f has a unique fixed point x, and every path of sig(f ) reaches this fixed point (in at most n steps).
This convergence result was latter proved for asynchronous iteration graphs by Robert [36], and for generalized iteration graphs by Bahi and Michel [5] (actually, these authors proved the convergence for a much more general class of iteration schemes that include delays of communication between components).
Theorem 3.2 If G(f ) has no cycle, then f has a unique fixed point, and every path of gig(f ) reaches this fixed point.
Absence of positive cycle and upper bound on the number of fixed points

In 1980, Thomas stated the following general rule: a necessary condition for a its interaction graph [47]. In the context of gene networks, one can interpret this rule dynamical system to admit several stable states is the presence of a positive cycle in as follow: positive cycles are necessary for differentiation processes [48]. This rule was first formally stated and proved in continuous frameworks [27,41,17,6,43,44]. A Boolean version of Thomas’ rule have then been stated and proved by Remy, Ruet and Thieffry [28].
Theorem 3.3 If G(f ) has no positive cycle, then f has at most one fixed point.
The following theorem, established in [33], shows that positive cycles are more generally necessary for the presence of several asynchronous attractors.
Theorem 3.4 If G(f ) has no positive cycle, then aig(f ) has at most one attractor.
This theorem is not valid in the synchronous case. Also, since aig(f ) has always at least one attractor (cf. Proposition 2.4), the theorem remains valid if “at most one” is replaced by “a unique”. Finally, using it as a base case, one can obtain an

upper bound on the number of asynchronous attractors that only depends on the structure of connections between positive cycles [3,2,30].
Theorem 3.5 Let I be a subset of [n]. If every positive cycle of G(f ) has a vertex in I, then aig(f ) has at most 2|I| attractors.
If G(f ) has no positive cycle, then I = ∅ satisfies the conditions of the statement, and the resulting upper bound is one (hence, Theorem 3.5 generalizes Theorem 3.4). The bound shows that it is not the number of positive cycles which is important to obtain several fixed points (or asynchronous attractors), but much more the structure of the connections between positive cycles. For instance, if G(f ) has a thousand of positive cycles, and if all these cycles share a same vertex i, then I = {i} satisfies the conditions of the statement, and the resulting upper bound is only two. In other words, in order for f to have a lot of fixed points, G(f ) has to contains a lot of “rather disconnected” positive cycles.
We have seen that if G(f ) has no positive cycle, then f has at most one fixed point. The following theorem of Aracena [3,2] shows that, under a very weak addi- tional condition, f has actually no fixed point.
Theorem 3.6 If G(f ) has a minimal in-degree at least one and has no positive cycle, then f has no fixed point.
Aracena proved this theorem under the additional assumption that G(f ) is simple, but this condition can be easily removed. Now, observe that this theorem implies quite directly Theorem 3.3. Indeed, suppose that G(f ) has no positive cycle. If G(f ) has a minimal in-degree at least one and has no positive cycle, then by The- orem 3.6, f has no fixed point. Otherwise, there exists a vertex, say n without loss generality, of in-degree zero in G(f ). So fn = cst = c. Let h : Bn−1 → Bn−1 defined by hi(x) = fi(x, c) for all x ∈ Bn−1 and i ∈ [n − 1]. It is easy to see that G(h) is a subgraph of G(f ). So G(h) has no positive cycle, and proceeding by induction on the number of components, one obtains that h has at most one fixed point. Since it is clear that h and f have the same number of fixed points, we deduce that f has at most one fixed point.
Absence of negative cycle and lower bound on the number of fixed points

Thomas also stated a general rule on negative cycles: a necessary condition for a in its interaction graph [47]. In the context of gene networks, one can interpret this dynamical system to produce sustained oscillations is the presence of a negative cycle rule as follow: negative cycles are necessary for homoeostasis phenomena [48]. The next theorem, proved in [31], may be seen as a Boolean version of second Thomas’ rule (and it is not valid in the synchronous case).
Theorem 3.7 If G(f ) has no negative cycle, then aig(f ) has no cyclic attractor. Hence, if G(f ) has no negative cycle, then f has at least one fixed point.
The second assertion is a consequence of the first one, since if G(f ) has no negative cycle, then aig(f ) has no cyclic attractor, and since aig(f ) has always

at least one attractor, we deduce that aig(f ) has an attractor of size one, which is a fixed point of f (cf. Proposition 2.4). In [16], Goles and Salinas provide an algorithm with running time O(n2) to compute, under the absence of negative cycle in G(f ), a fixed point of f (in the general case, the problem of finding a fixed point is NP-complete).
Note that Theorems 3.3 and 3.7 provides a nice “proof by dichotomy” of (the first assertion in) the theorem of Robert (Theorem 3.1): if G(f ) has no cycle, then following Theorem 3.3 (resp. 3.7), f has at most (resp. at least) one fixed point, so f has indeed a unique fixed point.
While Theorem 3.6 provides a sufficient condition for the absence of fixed point in term of absence of positive cycle, the following theorem, also established by Aracena [3,2], provides a sufficient condition for the presence of multiple fixed points in term of absence of negative cycle.
Theorem 3.8 Let G(f )∗ be the signed directed graph on [n] that contains an arc from j to i of sign s if G(f ) has an arc of sign s from j to i or from i to j. If G(f ) is simple, has a minimal in-degree at least one, and if G(f )∗ has no negative cycle, then there exists x ∈ Bn such that x and x are fixed points of f.

It is easy to see that if G(f ) is strongly connected and has no negative cycle, then G(f ) is simple, has a minimal in-degree at least one, and G(f )∗ has no negative cycle. Hence, the next theorem is a consequence of the previous one.
Theorem 3.9 If G(f ) is strongly connected and has no negative cycle, then f has at least two fixed points.

The following theorem, established in [26], generalizes Theorem 3.8 by charac- terizing the number of topological fixed points of f , i.e. the number of fixed points of f that only depend on G(f ).
Theorem 3.10 Let G(f )# be the signed directed graph on [n] that contains an arc from j to i of sign s if and only if G(f ) has an arc from j to i of sign s and no arc from j to i of sign −s. Let G(f )∗ be as in Theorem 3.8. Let us say that x is a topological fixed point of f if it is a fixed point of every function h : Bn → Bn such that G(h) = G(f ). We have the following two properties:
Let p be the number of connected components in G(f )#. If the following three conditions are satisfied then f has exactly 2p topological fixed points, and other- wise, f has 0 topological fixed point: (i) the minimal in-degree of G(f )# is at least one; (ii) G(f )∗ has no negative cycle; (iii) for every i ∈ [n], there exists at most one j ∈ [n] such that G(f ) has both a positive and a negative arc from j to i.
If x is a topological fixed point of f, then x is a topological fixed point of f.

Note that if G(f ) is simple, then G(f )# = G(f ) and the third condition is trivially satisfied. We then recover Theorem 3.8.

Comparison of iteration graphs

As said above, there are two principal iteration graphs used to model BNs dynam- ics, the synchronous and asynchronous ones. It is then of great interest to try to compare them. There are very few results in this topics. However, Noual [23] re- cently established the following fundamental theorem, which shows that under some conditions on the cycles of G(f ), every path of the generalized iteration graph, and in particular every path of the synchronous iteration graph, can be “imitated” by at least one path of the asynchronous iteration graph. Other results concerning comparison of iteration schemes are provided in [45,36,15,4]
Theorem 3.11 Assume that G(f ) is simple, has no positive cycle of even length, and has no negative cycle of odd length. If gig(f ) has an arc x → y, then aig(f ) has a path from x to y of length |∆(x, y)|. Hence, the number of attractors in gig(f ) and sig(f ) is at least the number of attractors in aig(f ).
Network reduction

Since the number of possible states of a BN increases exponentially with the number n of components, it is interesting to try to reduce the system, typically by removing components, without losing too many dynamical properties. The following theorem, stated with other notations in [21], shows that if the nth component does not inter- act with itself, it can be suppressed in a natural way, without affecting the number of fixed points, the reachability by asynchronous paths, and the main features of the interaction graph. (For sake of simplicity, this theorem only deals with the sup- pression of the nth component, but it can be very easily adapted to the suppression of any component.)
Theorem 3.12 Let f˜ : Bn−1 → Bn−1 be defined from f : Bn → Bn by:

∀x ∈ Bn−1, ∀i ∈ [n − 1],
f˜i(x) = fi(x˜),
x˜ = (x, fn(x, 0)) ∈ Bn.

If G(f ) has no arc from n to itself, then the following three properties hold:

A point x is a fixed point of
f˜ if and only if x˜
is a fixed point of f. As a

consequence, f˜ and f have the same number of fixed points.
aig(f˜) has a path from x to y if and only if aig(f ) has a path from
x˜ to y˜.

As a consequence, the number of attractors in aig(f˜) is at least the number of attractors in aig(f ).
If G(f˜) has a path from j to i with an even (resp. odd) number of negative arcs, then G(f ) has a path from j to i with an even (resp. odd) number of negative arcs. As a consequence, if G(f ) has no positive (resp. negative) cycle, then G(f˜) has no positive (resp. negative) cycle.
Note that this theorem gives another way to prove the (first assertion in the) theorem of Robert (Theorem 3.1). Indeed, suppose that G(f ) has no cycle. Then it has no arc from n to itself, so f˜ and f have the same number of fixed points,

and G(f˜) has no cycle (according to the third point). Using an induction on the number of components, we deduce that f˜ has a unique fixed point, so that f has a unique fixed point.
Discussion

We have presented several results related to the static analysis of BNs through the topological analysis of their interaction graphs. First, we have seen that cycles are necessary to obtain “complex behaviours” (Theorems 3.1 and 3.2). Then, by focusing on positive and negative cycles, we have seen that necessary or sufficient conditions for the presence of several attractors or the presence of cyclic attractors can be obtained (Theorems 3.3-3.10). We have also seen that conditions on cycles permit to obtain results about the comparison of iteration schemes or the model reduction (Theorems 3.11 and 3.12).
For the sake of simplicity, we restricted ourself to the Boolean case and results concerning the global interaction graph. However, Theorems 3.1-3.5, 3.7 and 3.12 have extensions to the non-Boolean discrete case and/or generalizations in terms of local interaction graphs [34,36,5,38,37,28,33,29,30,31,32].
All the topics regarding the static analysis based on interaction graphs have not been covered in this short survey. In particular, a lot of works have been dedicated to the length of synchronous attractors [14,45,13,7,10,18,15].
With the aim at making tractable the computation of more precise dynam- ical properties from BNs, recent work investigate the use of other static analysis techniques. For instance, Naldi et al. [22] propose to represent each function gi defined by gi(x) = 1 iff fi(x) = xi with a binary decision diagram; leading to an efficient enumeration of all fixed points of f through algebraic operations on the n resulting decision diagrams. Paulev´e et al. developed the Process Hitting framework into which over-approximations of asynchronous dynamics of BNs can be encoded. By using abstract interpretation techniques, very efficient over- and under-approximations of particular reachability properties within Process Hitting models have been built [24,25], having hence applications to reachability (static) analysis within BNs.
Overall, a large variety of properties can be statically derived from BNs. The extension of the presented topological analysis of the interaction graph to other modelling frameworks for biological regulatory networks is yet challenging. While, as mention above, several important results have already been extended to discrete networks, the new degree of freedom brought by discrete modelling prevents the straightforward extension of many results on BNs without imposing constraints on possible logical expressions (such as Theorems 3.6 and 3.8). Finally, the efficient quantification of dynamical properties within hybrid models extending discrete net- works with time or stochastic features [39,1,50] calls for innovative static analysis techniques.

Acknowledgement

This work has been partially supported by the French National Agency for Research (ANR-10-BLANC-0218 BioTempo project).
References
Ahmad, J., G. Bernot, J. P. Comet, D. Lime and O. Roux, Hybrid modelling and dynamical analysis of gene regulatory networks with delays, Complexus 3 (2006), pp. 231–251.
Aracena, J., Maximum number of fixed points in regulatory boolean networks, Bulletin of Mathematical Biology 70 (2008), pp. 1398–1409.
Aracena, J., J. Demongeot and E. Goles, Positive and negative circuits in discrete neural networks, IEEE Transactions of Neural Networks 15 (2004), pp. 77–83.
Aracena, J., E. Goles, A. Moreira and L. Salinas, On the robustness of update schedules in boolean networks, Biosystems 97 (2009), pp. 1 – 8.
Bahi, J. M. and C. Michel, Convergence of discrete asynchronous iterations, International Journal of Computer Mathematics 74 (2000), pp. 113–125.
Cinquin, O. and J. Demongeot, Positive and negative feedback: strinking a balance between necessary antagonists, Journal of Theoretical Biology 216 (2002), pp. 229–241.
Col´on-Reyes, R., O. Laubenbacher and B. Pareigis, Boolean Monomial Dynamical Systems, Annals of Combinatorics 8 (2000), pp. 425–439.
de Jong, H., Modeling and simulation of genetic regulatory systems: A literature review, Journal of Computational Biology 9 (2002), pp. 67–103.
Endy, D. and R. Brent, Modelling cellular behaviour., Nature 409 (2001), pp. 391–395.
German, A. E. and W. Just, Large attractors in cooperative bi-quadratic Boolean networks. Part I., Preprint arXiv 0711.2799 (2008).
Glass, L., Combinatorial and topological methods in nonlinear chemical kinetics, Journal of Chemical Physics 63 (1975), pp. 1325–1335.
Glass, L. and S. Kauffman, Logical analysis of continuous, non-linear biochemical control networks, Journal of Theoretical Biology 39 (1973), pp. 103–129.
Goles, E. and G. Her´andez, Dynamical behaviors of Kauffman networks with and-or gates, Journal of Biological Systems 8 (2000), pp. 151–175.
Goles, E. and J. Olivos, Comportement it´eratif des fonctions A˜˘a multiseuil, Information and Control
45 (1980), pp. 300–313.
Goles, E. and L. Salinas, Comparison between parallel and serial dynamics of boolean networks, Theoretical Computer Science 396 (2008), pp. 247–253.
Goles, E. and L. Salinas, Sequential operator for filtering cycles in boolean networks, Advances in Applied Mathematics 45 (2010), pp. 346–358.
Gouz´e, J., Positive and negative circuits in dynamical systems, Journal of Biological Systems 6 (1998),
pp. 11–15.
Just, W. and A. E. German, Large attractors in cooperative bi-quadratic Boolean networks. Part II., Preprint arXiv 0801.4546 (2008).
Kauffman, S. A., Metabolic stability and epigenesis in randomly connected nets, Journal of Theoretical Biology 22 (1969), pp. 437–467.
Kauffman, S. A., “Origins of Order Self-Organization and Selection in Evolution,” Oxford University Press, 1993.


Naldi, A., E. Remy, D. Thieffry and C. Chaouiya, A reduction of logical regulatory graphs preserving essential dynamical properties, in: Computational Methods in Systems Biology, Lecture Notes in Computer Science 5688, Springer Berlin / Heidelberg, 2009 pp. 266–280.

Naldi, A., D. Thieffry and C. Chaouiya, Decision diagrams for the representation and analysis of logical models of genetic networks, in: Proceedings of the 2007 international conference on Computational methods in systems biology, CMSB’07 (2007), pp. 233–247.
Noual, M., General iteration graphs and boolean automata circuits, preprint arXiv 1104.4044 (2011).

Paulev´e, L., M. Magnin and O. Roux, Abstract Interpretation of Dynamics of Biological Regulatory Networks, Electronic Notes in Theoretical Computer Science 272 (2011), pp. 43–56, proceedings of The First International Workshop on Static Analysis and Systems Biology.
Paulev´e, L., M. Magnin and O. Roux, Static Analysis by Abstract Interpretation of Biological Regulatory Networks Dynamics, Research Report hal-00574353, IRCCyN (2011).
URL http://hal.archives-ouvertes.fr/hal-00574353
Paulev´e, L. and A. Richard, Topological Fixed Points in Boolean Networks, Comptes Rendus de l’Acad´emie des Sciences - Series I - Mathematics 348 (2010), pp. 825 – 828.
Plathe, E., T. Mestl and S. Omholt, Feedback loops, stability and multistationarity in dynamical systems, Journal of Biological Systems 3 (1995), pp. 569–577.

Remy, E´., P. Ruet and D. Thieffry, Graphic requirements for multistability and attractive cycles in a boolean dynamical framework, Advances in Applied Mathematics 41 (2008), pp. 335 – 350.
Richard, A., An extension of a combinatorial fixed point theorem of shih and dong, Advances in Applied Mathematics 41 (2008), pp. 620–627.
Richard, A., Positive circuits and maximal number of fixed points in discrete dynamical systems, Discrete Applied Mathematics 157 (2009), pp. 3281 – 3288.
Richard, A., Negative circuits and sustained oscillations in asynchronous automata networks, Advances in Applied Mathematics 44 (2010), pp. 378 – 392.
Richard, A., Local negative circuits and fixed points in non-expansive boolean networks, Discrete Applied Mathematics 159 (2011), pp. 1085–1093.
Richard, A. and J.-P. Comet, Necessary conditions for multistationarity in discrete dynamical systems, Discrete Applied Mathematics 155 (2007), pp. 2403 – 2413.
Robert, F., Iterations sur des ensembles finis et automates cellulaires contractants, Linear Algebra and its Applications 29 (1980), pp. 393–412.

Robert, F., “Discrete iterations: a metric study,” Series in Computational Mathematics 6, Springer, 1986.
Robert, F., “Les syst`emes dynamiques discrets,” Math´ematiques et Applications 19, Springer, 1995.
Shih, M.-H. and J.-L. Dong, A combinatorial analogue of the jacobian problem in automata networks, Advances in Applied Mathematics 34 (2005), pp. 30–46.
Shih, M.-H. and J.-L. Ho, Solution of the Boolean Markus-Yamabe problem, Advances in Applied Mathematics 22 (1999), pp. 60–102.
Siebert, H. and A. Bockmayr, Incorporating time delays into the logical analysis of gene regulatory networks, in: C. Priami, editor, Computational Methods in Systems Biology, Lecture Notes in Computer Science 4210, Springer Berlin / Heidelberg, 2006 pp. 169–183.
Snoussi, E., Qualitative dynamics of a piecewise-linear differential equations : a discrete mapping approach, Dynamics and stability of Systems 4 (1989), pp. 189–207.
Snoussi, E., Necessary conditions for multistationarity and stable periodicity, Journal of Biological Systems 6 (1998), pp. 3–9.
Snoussi, E. and R. Thomas, Logical identification of all steady states : the concept of feedback loop caracteristic states, Bull. Math. Biol. 55 (1993), pp. 973–991.
Soul´e, C., Graphical requirements for multistationarity, ComPlexUs 1 (2003), pp. 123–133.


Soul´e, C., Mathematical approaches to differentiation and gene regulation, C.R. Paris Biologies 329
(2006), pp. 13–20.
Tchente, M., Cycles generated by sequential iterations, Discrete Applied Mathematics 20 (1988),
pp. 165–172.
Thomas, R., Boolean formalization of genetic control circuits, Journal of Theoretical Biology 42 (1973),
pp. 563 – 585.
Thomas, R., On the relation between the logical structure of systems and their ability to generate multiple steady states or sustained oscillations, Springer Series in Synergies 9 (1980), pp. 180–193.
Thomas, R. and R. d’Ari, “Biological Feedback,” CRC Press, 1990.

Thomas, R. and M. Kaufman, Multistationarity, the basis of cell differentiation and memory. ii. logical analysis of regulatory networks in terms of feedback circuits, Chaos: An Interdisciplinary Journal of Nonlinear Science 11 (2001), pp. 180–195.

Twardziok, S., H. Siebert and A. Heyl, Stochasticity in reactions: a probabilistic boolean modeling approach, in: CMSB, 2010, pp. 76–85.
