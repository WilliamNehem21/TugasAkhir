	Electronic Notes in Theoretical Computer Science 171 (2007) 197–208	
www.elsevier.com/locate/entcs

Modelling of Biochemical Reactions by Stochastic Automata Networks
Verena Wolf1
University of Mannheim, A5 B 119, D-68131 Mannheim, Germany

Abstract
This paper presents a stochastic modelling framework based on stochastic automata networks (SANs) for the analysis of complex biochemical reaction networks. Our approach takes into account the discrete character of quantities of components (i.e. the individual populations of the involved chemical species) and the inherent probabilistic nature of microscopic molecular collisions. Moreover, as for process calculi that have recently been applied to systems in biology, the SAN approach has the advantage of a modular design process being adequate for abstraction purposes. The associated composition operator leads to an elegant and compact representation of the underlying continuous-time Markov chain in form of a Kronecker product. SANs have been extensively used in performance analysis of computer systems and a large variety of numerical and simulative analysis algorithms exist. We illustrate that describing a biochemical reaction network by means of a SAN offers promising opportunities to get insight into the quantitative behaviour of systems in biology while taking advantage of the benefits of a compositional modelling approach.
Keywords: Biochemical Reactions, Stochastic Automata Networks, Markov Chain


Introduction
In recent years, computational modelling of large networks of biochemical reac- tions has become increasingly important and is a main challenge in systems biology. Stochastic approaches have emerged as a significant alternative to the classical de- terministic approaches for quantitative analysis of intracellular dynamics. In this area Gillespie’s simulation algorithm [13] is very popular and it is based on a frame- work that accounts for populations of molecules and reflects stochastic phenomena caused by the randomness of molecule collisions. The underlying model is that of a continuous-time Markov chain (CTMC) [4,15] originally used to study the perfor- mance behaviour of parallel and distributed computer systems.
As opposed to the stochastic methodology the extremely successful deterministic approach for modelling and analysis of complex biochemical reactions is based on the law of mass action, an empirical law leading to chemical kinetics rate equation

1 Email: wolf@informatik.uni-mannheim.de

1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2007.05.017

models. This macroscopic approach provides a complete picture of concentrations of involved species over time but ignores the discrete character of quantities of com- ponents and the inherent probabilistic nature of microscopic molecular collisions. Especially for the regulation of gene expression where transcription factors interact with DNA binding sites, random fluctuations are inevitable and the macroscopic view using rate equations turns out to be less adequate than the stochastic ap- proach. On the contrary, in large scale systems, i.e. systems with large populations of interacting species, the random behaviour averages out. For a more detailed discussion see [26,25,3] and the references therein.
Recently, formal system description techniques, such as process algebras and petri nets, originating in computer science, have been applied to the modelling of complex biological systems [22,23,7,17,2,11,18,16]. These approaches offer facilities to reason about molecular networks in a compositional way such that models re- main open and allow an incremental description. Hence, it is possible to add data to an existing model without the need of building a completely new one. Various techniques are provided in this area to consider the model on different abstrac- tion levels reducing its size (possibly on cost of loosing information). According to the given semantics the corresponding low-level descriptions are generated au- tomatically (e.g. [6]) mostly in form of transition systems or stochastic simulation techniques are applied directly to the high-level language representations (e.g. [20]). In addition, high-level languages offer the possibility to exploit the regular structure of biological systems during analysis.
All stochastic frameworks have in common that the underlying model is a CTMC and the attraction for numerical analysis of CTMCs lies in that exact results are provided compared to simulative techniques that come along with the difficulty of statistical errors. Unfortunately, numerical analysis requires the generation of a transition matrix being liable to encounter state space explosion problems.
In process calculi the usual way of decomposing a network of biochemical reac- tions into components is such that each molecule corresponds to a process that is basically a finite state machine describing the possible behaviours and conforma- tions of the molecule. For example, an enzyme molecule can be free, i.e. able to bind to a certain substrate molecule, or bound to a complex capable of dissociation. The molecule can also degenerate meaning that its state machine moves to a deadlock state. Interactions between molecules are modelled via parallel synchronisation of processes (with respect to certain behaviours) or channels are used for communica- tion between processes. Information about the current population of a species are encoded only indirectly leading to difficulties in the quantitative analysis especially if reaction rates, determining the speed of the reactions and depending on substrate populations, come into play.
In this work, we propose a stochastic modelling approach for biochemical re- action networks based on stochastic automata networks (SANs) [21,12] which are used to efficiently model very large CTMCs whose state space is on the order of millions. The basis of the SAN formalism is a generalised tensor algebra with a Kronecker product operation that correctly reflects the calculation of reaction rates

in biochemical reaction networks. SANs have been extensively used in performance analysis of computer systems and a large variety of numerical or simulative anal- ysis algorithms exist and are implemented in tools like PEPS [1], APNN [5] and SMART [9]. The advantages of the SAN approach are the modular design process being adequate for abstraction purposes, the elegant and compact representation of the Markov chain using a well-known formalism and the direct encoding of the discrete quantities of interest (i.e. the respective populations of chemical species). The underlying matrix representation keeps track of the network structure facilitat- ing numerical analysis algorithms that overcome the state space explosion problem with efficient storage mechanisms.
The number of factors used in the Kronecker representation of a biochemical reaction network grows only linearly in the number of involved species and reac- tions and is independent of the population size whereas the sizes of the individual matrices are depending on the maximum numbers of molecules of the participating chemical species. For example, the enzyme-catalysed substrate conversion, used as running example throughout the paper, can be described by four automata and three different interactions.
To the best of our knowledge, the SAN formalism has not been used to con- struct stochastic models for systems in biology. An exception is [19] where T SAN descriptors are constructed to represent homogeneous clusters of intracellular Ca2+ channels.
The paper is organised as follows. In Section 2 we give some preliminary defini- tions related to the tensor product and Section 3 formally describes the underlying model. The SAN representation is derived in Section 4. Finally, Section 5 concludes the paper and gives directions of further research.

Preliminaries
We recall some useful definitions related to the tensor product. The Kronecker (tensor) product of two matrices A ∈ Rn1×m1 and B ∈ Rn2×m2 is defined as C = A ⊗ B, C ∈ Rn1n2 ×m1 m2 where

C(k1 · n2 + k2, l1 · m2 + l2)= A(k1, l1)B(k2, l2)

(1 ≤ kh ≤ nh, 1 ≤ lh ≤ mh,h ∈ {1, 2}). We consider a simple example with


⎛ a	a	⎞
⎛ b11	b12	b13	b14 ⎞

11
A =
12
and B = ⎜ b21
b22
b23
b24 ⎟ .

a21	a22
⎝ b31

b32

b33
b34 ⎠

The tensor product C = A ⊗ B is given by
⎛ a11B	a12B ⎞
C = ⎝	⎠
a21B	a22B
⎛ a11b11	a11b12	a11b13	a11b14	a12b11	a12b12	a12b13	a12b14 ⎞
⎜ a11b21	a11b22	a11b23	a11b24	a12b21	a12b22	a12b23	a12b24 ⎟
= ⎜ a11b31	a11b32	a11b33	a11b34	a12b31	a12b32	a12b33	a12b34 ⎟ .
⎜ a21b11	a21b12	a21b13	a21b14	a22b11	a22b12	a22b13	a22b14 ⎟
⎜ a21b21	a21b22	a21b23	a21b24	a22b21	a22b22	a22b23	a22b24 ⎟ a21b31	a21b32	a21b33	a21b34	a22b31	a22b32	a22b33	a22b34
Some important properties of tensor products and additions are
Associativity: A ⊗ (B ⊗ C)= (A ⊗ B) ⊗ C
Distributivity over (ordinary matrix) addition:
(A + B) ⊗ (C + D)= (A ⊗ C)+ (B ⊗ C)+ (A ⊗ D)+ (B ⊗ D)
Compatibility with (ordinary matrix) multiplication:
(A × B) ⊗ (C × D)= (A ⊗ C) × (B ⊗ D)
Compatibility with (ordinary matrix) inversion:
(A ⊗ B)−1 = A−1 ⊗ B−1

Biochemical Reactions and Markov Chains
In the following, we describe how networks of biochemical reactions such as sig- nalling or metabolic pathways can be mapped onto a stochastic discrete-event model, more precisely a continuous-time Markov chain (CTMC for short). Each reaction between different molecular species in the network corresponds to an event and the state space of the model is characterised by the corresponding populations. Formally, if J is the number of participating substrates (i.e. the different molec- ular species S1, S2,... , SJ ), we define X(t)= X1(t), X2(t),... , XJ (t) as a vector such that Xj(t),j ∈ {1, 2,... ,J} is a discrete random variable describing the number of molecules of type Sj at time instant t ≥ 0. If X(t)= x¯ := (x1, x2,... , xJ ) ∈ NJ , the system is in state x¯ at time t meaning that for each Sj the current number of molecules is xj. The number of molecules of each species is bounded since either the starting substance is exhausted or an equilibrium is reached. We define nj ∈ N as the maximum number of molecules of Sj, which implies that the finite state space
of the model is given by
X := {(x1, x2,... , xJ ) ∈ NJ | 0 ≤ xj ≤ nj,j ∈ {1, 2,... ,J }}.
The state space size |X | = (n1 + 1) · (n2 + 1) ··· (nJ + 1) grows exponentially in the

number of species (also known as the problem of state space explosion). Moreover, the maximum number of molecules of a species can be very large.
The system evolves from one state to another by a set of transitions that are related to the events, i.e. to the chemical reactions. We are interested in the tem- poral interaction amongst large numbers of molecules to understand the functional activity of the network. According to the common chemical kinetics, we associate a rate with units of reciprocal time with each transition leading to a representation in terms of a CTMC, that is a stochastic process with discrete state space where the future evolution of the process depends only on the current state (and not on the process history or the current time instant).
The starting point for the model construction is a set {Ri | 1 ≤ i ≤ I} of biochemical reactions. Each reaction Ri is given by


si1
Si1
+ si2
Si2
+ ... + sim
c
Sim −−→

sim+1

Sim+1
+ sim+2

Sim+2
+ ... + sil

Sil
,	(1)


where 0 ≤ m ≤ l ≤ 2J and si1 ,... , sil ∈ N are stoichiometric coefficients. We call the left-hand substrates reactants and the substrates on the right-hand are called products if they do not appear on the left and catalysts otherwise. Equation (1) describes how the reaction affects the population vector, i.e. for each h ∈ {1,... , m} the number of molecules of chemical species Sih that are used up is sih and for h ∈ {m+1,... , l} the number of molecules of chemical species Sih that are produced by the reaction is sih . The (stochastic reaction) rate constant ci ∈ R>0 determines the speed of the reaction in a way explained below.
In most cases, the number of reactants and the number of products and catalysts is small, i.e. m ≤ 2 and l − m ≤ 2 and also the stoichiometric coefficients are mostly equal to one. All other reaction types are extremely rare because the probability that three or more independent molecules collide at the same time or within a small time interval is very small.
We consider two running examples in this paper:
Example 3.1 The enzyme-catalysed substrate conversion 2

c1	c3
S1 + S2 −7−−~− S3 −−→ S1 + S4
c2
of a substrate S2 into a product S4 via an enzyme-substrate complex S3, catalysed (accelerated) by an enzyme S1. Here, the number of participating species is J =4 and the number of reactions is I = 3. All stoichiometric coefficients are equal to one.
Example 3.2 We consider a two-gene positive feedback loop with I = 10 reactions

2 Reaction sets are often written as chains where bidirectional arrows are used for reactions that can happen in both directions.

involving J = 4 chemical species 3 :


stcr l
ftcr
cstcr
−−l−→  mRNAl	(slow transcription of mRNAl),
cftcr

R	: Proteinj −−l−→  mRNAl + Proteinj (fast transcription of mRNAl),
ctsl

tsl j
: mRNAj
−−→	mRNAj
cmdeg
+ Proteinj
(translation of Proteinj),

Rmdeg: mRNAj
−−−−→ ∅	(degradation of mRNAj),
cpdeg

Rpdeg : Proteinj
−−−→ ∅	(degradation of Proteinj),

(j, l ∈ {1, 2},j /= l). This set of reactions describes a regulatory network controlling the transcription of two genes into mRNA and the translation of the two corre- sponding types of mRNA into proteins. The transcription of gene 1 is accelerated by the existence of Protein2 molecules (reaction Rftcr), which are translation prod- ucts of mRNA2 (Rtsl), and vice versa, Protein1, resulting from the translation of
mRNA1 (Rtsl), acts as regulatory protein for the transcription of gene 2 (Rftcr).
1	2
The transcription is slow if no activating protein molecules are available (Rstcr) and
molecules degrade according to the reactions Rmdeg and Rpdeg.
l	l
We now consider the general case, i.e. we assume reaction Ri is described by (1). Let REA(i) (PRO(i)) be the set of reactants (products, resp.), i.e. REA(i) := {Si1 ,... , Sim } and PRO(i) := {Sim+1 ,... , Sil }. Furthermore, let CAT(i) := REA(i) ∩ PRO(i) be the subset of reactants that act as catalysts, i.e. each species Sh ∈ CAT(i) occurs also on both hands of the reaction 4 .
A transition describes a rule how the system evolves from the current state x¯ to another state depending on x¯ and the reaction type. Direct successor states are given by the function nexti : X → X that returns the next state of x¯ if reaction Ri happens. We define nexti(x¯) = nexti(x1, x2,... , xJ ) := x¯ if there exists some Sh ∈ REA(i) with xh < sih or Sh ∈ PRO(i)\ CAT(i) with xh > nh − sih , i.e. reaction Ri does not take place if not enough reactant molecules are left or if one of the produced substrates exceeds its maximum number of molecules via Ri. Otherwise,
i.e. if Ri can take place, we put nexti(x1, x2,... , xJ )= (x' , x' ,... , x' ) where
1	2	J


x' = ⎪⎨ xj

— sij

if Sj

∈ REA(i) \ CAT(i),

⎪⎪⎩ xj + sij if Sj ∈ PRO(i) \ CAT(i).
The population of Sj remains unchanged if either Sj does not take part in Ri or acts as a catalyst, as opposed to the second case in the definition where Sj is a reactant that is consumed in Ri. In the last case, the population of Sj increases by

3 The ∅ symbol on the left-hand (right-hand) indicates that no reactant (no product) is needed (is produced, resp.).
4 We assume w.l.o.g. that the two stoichiometric coefficients of a catalyst have the same value.

sij . In a similar way, we define the uniquely determined predecessor predi(x¯) that corresponds to reaction Ri such that nexti(predi(x¯)) = x¯.
The propensity function ratei : X → R≥0 that returns the transition rate of reaction Ri and state x¯ = (x1, x2,... , xJ ) is defined by


ratei(x¯)= 
⎧ ci ·
Sh∈REA(i)

xh	if next (x¯) /= x¯,
sih


(2)

⎪⎩ 0	otherwise,
i.e. the transition rates of the underlying CTMC are proportional to the distinct combinations of reactant molecules. For details and a rigorous formal justification see [13,15].
The probability of leaving x¯ within a small time interval of length Δt via a reaction of type Ri is given by ratei(x¯)Δt. Correspondingly, the probability of
staying in x¯ within this interval is given by 1 − rate(x¯)Δt where the exit rate
rate(x¯) := rate1(x¯)+ rate2(x¯)+ ... + rateI (x¯) equals the sum of all outgoing rates of x¯. The value 1/rate(x¯) is the mean sojourn time in x¯. Let pt(x¯) be the probability that X(t)= x¯. Then 5

pt+Δt(x¯)= (1 − rate(x¯)Δt) · pt(x¯)+ ΣI
ratei(predi(x¯))Δt · pt(predi(x¯)).

This leads to the derivation of pt given by differential equations


d p˙t = dt
pt = lim
Δt→0
pt+Δt − pt = Qp
Δt	t
(3)



where pt ∈ Rn
is the vector with entries pt(x¯) and Q ∈ R|X |×|X | is defined by 6
⎧⎪ −rate(x¯),	if x¯ = x¯',

Q(x¯, x¯') := ⎪⎪⎨	Σ	ratei(x¯), if x¯' /= x¯,
(4)

i:nexti(x¯)=x¯'
⎪⎩ 0,	otherwise.
The CTMC X(t) is uniquely described by the (inﬁnitesimal) generator matrix Q and an initial distribution (cf. [4,10]). In general, the stochastic interpretation of chemical equations in the style of (1) always yields a CTMC as indicated in [13,14].
Example 3.3 In the enzyme-catalysed substrate conversion of Example 3.1 we assume that initially the system is in state X(0) = (200, 3000, 0, 0) =: x¯(0) which means that we start with 200 enzyme molecules and 3000 molecules of the substrate S2. Then state x¯(0) can only be left via reaction

R1 : S1
c
+ S2 −−→ S3



5 The function pt(·) is depending on the initial state X(0) = x(0) of the system.
6 We assume that the states space is mapped to N.

with rate1(x¯(0)) = 200 · 3000 · c1 by entering state next1(x¯(0)) = (199, 2999, 1, 0) which means that one enzyme-substrate complex has been formed. Now, state (199, 2999, 1, 0) has three outgoing transitions, one via R1 with rate 199 · 2999 · c1
to state (198, 2998, 2, 0), one via

R2 : S
c
3 −−→
S1 + S2

with rate2(199, 2999, 1, 0) = 1 · c2 back to the state next2(199, 2999, 1, 0) =
x¯(0) and one transition to state next3(199, 2999, 1, 0) = (200, 2999, 0, 1) with rate3(199, 2999, 1, 0) = 1·c3 which means that a dissociation of the complex molecule into one enzyme molecule and one product molecule via reaction

R3 : S
c
3 −−→
S1 + S4

happened.  The exit rate of state (198, 2998, 2, 0), for instance, is given by
rate(198, 2998, 2, 0) = 198 · 2998 · c2 +2 · (c1 + c3).
The generator matrix Q for a network of biochemical reactions is always sparse since each state has at most only I transitions. All row sums are zero and the negative exit rates appear on the main diagonal. However, this representation yields to a mathematical treatment in terms of matrix operations which is advantageous for the realization of analysis algorithms and the definition of composition operations that match operators of a specific matrix algebra (cf. Section 4).
Stochastic systems in general, and in particular Markov chains, are analysed with respect to their temporal evolution where one distinguishes transient and steady- state analysis. The latter refers to systems in equilibrium whereas the former refers to the phase where an equilibrium has not yet been reached. A large amount of work exists on the numerical solution of Markov chains [24], where numerical so- lution means to compute probability distributions, either time-dependent transient distributions or steady-state distributions. Different quantitative measures can be derived from the transient and the stationary distribution of models of biochemical reaction network. For example, one might be interested in the expected number of molecules of a certain substrate Sj at time instant t, in the number of molecules of each substrate in the limit or in the expected time until the population of a substrate reaches a certain threshold.

Kronecker Representations for Markov Models
A SAN consists of a number of individual stochastic automata that operate more or less independently of each other. Our idea is to construct an automaton for each chemical species which counts the number of corresponding molecules. The rates at which each automaton increments its counter are local in the sense that they constitute the multiplicative factor the corresponding species contributes to the overall reaction rate.
Several types of matrices are needed to give Kronecker representations for bio- chemical reaction networks. They all have in common that they are sparse, more precisely, all entries are zero except the entries of one of the diagonals. Hence, each

matrix is fully described by its size, a vector and a variable d ∈ Z that determines at which diagonal the vector appears. For a reactant Sj we define the vector
depj :=  0 ,  1 ,... , nj  ∈ N(nj +1)
that appears at the d-th upper diagonal of the matrix for Sj where d equals the stoichiometric coefficient sij . The vector depj contains the factors Sj contributes to the calculation of the transition rate of reaction Ri (compare Equation (2)). If Sj is not a reactant the associated vector is indj = (1, 1,... , 1) ∈ N(nj +1). This ensures that the transition rate of the reaction is independent of the current population of Sj,
i.e. the contributed factor is one. If the reaction increases (decreases) the population of Sj by sij , the corresponding vector appears at the |d|-th upper (lower) diagonal,
i.e. d = sij (d = −sij , respectively). If the population of Sj remains unchanged by the reaction we set d = 0 and the main diagonal of the matrix contains the non-zero
entries.

The matrices Dep(d)
and Ind(d)
of size (nj + 1) × (nj + 1) are defined by

Dep(d)(k, l)= dep (k) and Ind(d)(k, l)= 1 if (k + d)= l (1 ≤ k, l ≤ (nj + 1), −nj ≤
j	j	j
d ≤ nj) and all remaining entries are zero. We have, for instance,

⎛ 0	1	...	0 ⎞
⎜ 0	0	1	...	0 ⎟
⎛ 0	0	...	0 ⎞
⎜ 1	0	0	...	0 ⎟


j
⎜⎜ .

.	. . .	. . .
.	j
1 ⎟⎟

⎜⎜ .

.	. . .	. . .
.
0 ⎟⎟


	
Then the effect of reaction Ri on substrate Sj is given by the matrix E(i) where

⎧⎪ Ind(0)
if j /∈ REA(i) ∪ PRO(i),

j
⎪

E(i) =
(0)
j
(−sij )
⎪ Dep
if j ∈ CAT(i),
if j ∈ REA(i) \ CAT(i),

j
⎪
We put D(i) = diag(E(i)eT ) where e is a unit row vector of appropriate size and
j	j
the operator diag(v) constructs a diagonal matrix from the vector v, i.e. v appears
on the main diagonal. Now, let R = {R1,... , RI } be a set of reactions such that Ri has the form (1) and {S1,... , SJ } are the different chemical species that are involved in R. The generator matrix Q of the underlying CTMC of R is given by


Σ	⎛ J


(i)	 
(i)⎞

Q =
i=1
ci ⎝

j=1
Ej  −
Dj
j=1
⎠ .	(5)


Table 1
The matrices used for the construction of the SAN representing the two-gene positive feedback loop.

Note that subtracting the D(i) ensures that Q contains the negative exit rates on the main diagonal and that the row sums are zero. The matrix Q agrees with the generator defined by Equation (4) up to the ordering of states.
Example 4.1 For the enzyme-catalysed substrate conversion of Example 3.1 the Kronecker product representation of the underlying CTMC is defined as follows. The automaton that describes how the population of enzyme molecules (species
S1) is affected by the different reactions is given by the matrices E(1) = Dep(−1)
1	1
(the population decreases by one via R1) and E(2) = E(3) = Ind(1) (the population
1	1	1
increases by one via R2 or R3) where the reaction rates that correspond to R2
and R3 are independent of the S1 population. The reactant S2 is described by
E(1) = Dep(−1), E(2) = Ind(1) and E(3) = Ind(0) (reaction R3 is independent of S2
2	2	2	2	2	2
and has no impact on its population). For the enzyme-substrate complex (species
S3) we have E(1) = Ind(1) and E(2) = E(3) = Dep(−1). Finally, for the product S4
3	3	3	3	3
the corresponding matrices are given by E(1) = E(2) = Ind(0) and E(3) = Ind(1), i.e.
4	4	4	4	4
the population of product molecules is only affected by reaction R3, the dissociation
of the complex. The generator matrix is then given by Equation (5).
Example 4.2 In case of the two-gene positive feedback loop, Table 1 defines the matrices that are needed to construct the generator of the underlying CTMC ac- cording to Equation (5).

Conclusion
We have presented the construction of stochastic automata network (SAN) de- scriptors for biochemical reaction networks. Each chemical species is modelled as

a stochastic automaton that counts the number of corresponding molecules. The rates at which each automaton increments its counter are local in the sense that they constitute the multiplicative factor the corresponding species contributes to the overall reaction rate. This ensures a modular design process similar as provided by processes calculi. The discrete quantities of interest (i.e. the respective populations of chemical species) can be directly retrieved from the local states of the automata. The transition matrix of the underlying stochastic model, that is a continuous-time Markov chain, is not generated but implicitly represented as a Kronecker product of (smaller) component matrices. The attraction of our framework lies in that the representation remains compact, even as the number of states of the underlying model begins to explode, and the structure of the network of biochemical reactions is reflected in the SAN description.
A large variety of numerical or simulative analysis algorithms for the solution of SANs exists. Of particular interest are techniques using decision diagrams (e.g. [8]) exploiting the fact that for systems, as considered in this paper, the component matrices are all sparse. As future research we plan case studies with tools supporting Kronecker based representations to analyse gene expression and cell signalling.

Acknowledgement
The author wishes to express her gratitude to Prof. Dr. Udo R. Krieger, University of Bamberg, Germany, who provided the initial stimulus for this paper.

References
A. Benoit, P. Fernandes, B. Plateau, and W. Stewart. The PEPS Software Tool. In 13th International Conference on Modelling Techniques and Tools for Computer Performance Evaluation TOOLS 2003, pages 98–115, Urbana, Illinois, USA, 2003.
R. Blossey, L. Cardelli, and A. Phillips. A compositional approach to the stochastic dynamics of gene networks. In Transactions on Computational Systems Biology, volume 3939 of LNCS, pages 99–122. Springer, 2006.
J. M. Bower and H. Bolouri. Computational Modeling of Genetic and Biochemical Networks. The MIT Press, 2001.
P. Bremaud. Markov Chains. Springer, 1998.
P. Buchholz and P. Kemper. A toolbox for the analysis of discrete event dynamic systems. In Proceedings of the 11th International Conference on Computer Aided Verification, pages 483–486, London, UK, 1999. Springer-Verlag.
M. Calder, S. Gilmore, and J. Hillston. Automatically deriving odes from process algebra models of signalling pathways. In Proceedings of Third International Workshop on Computational Methods in Systems Biology, pages 204–215. University of Edinburgh, 2005.
M. Calder, S. Gilmore, and J. Hillston. Modelling the influence of rkip on the erk signalling pathway using the stochastic process algebra pepa. Transactions on Computational Systems Biology, 2006. to appear.
G. Ciardo and A. Miner. A data structure for the efficient kronecker solution of gspns. In Proceedings of the The 8th International Workshop on Petri Nets and Performance Models, page 22, Washington, DC, USA, 1999. IEEE Computer Society.
G. Ciardo and A. Miner. SMART: The stochastic model checking analyzer for reliability and timing. In Proceedings of the 1st International Conference on Quantitative Evaluation of Systems, pages 338–339, 2004.

D. Cox and H. Miller. The Theory of Stochastic Processes. Chapman and Hall, 1965.
V. Danos and C. Laneve. Formal molecular biology. Theoretical Computer Science, 325(1):69–110, 2004.
P. Fernandes, B. Plateau, and W. J. Stewart. Numerical evaluation of stochastic automata networks. In Proceedings of the Third International Workshop on Modeling, Analysis, and Simulation On Computer and Telecommunication Systems, pages 179–183, 1995.
D. T. Gillespie. A general method for numerically simulating the time evolution of coupled chemical reactions. Journal of Computational Physics, 22:403–434, 1976.
D. T. Gillespie. Exact stochastic simulation of coupled chemical reactions. Journal of Physical Chemistry, 81(25):2340–2361, 1977.
D. T. Gillespie. Markov Processes. Academic Press., 1992.
P. Goss and J. Peccoud. Quantitative modeling of stochastic systems in molecular biology by using stochastic petri nets. In Proceedings of the National Academy of Science USA, pages 6750–6755, 1998.
M. Heiner and I. Koch. Petri net based model validation in systems biology. In Proceedings of the 25th International Conference on Applications and Theory of Petri Nets, pages 216–237, 2004.
R. Hofesta¨dt and S. Thelen. Quantitative modeling of biochemical networks. In Silico Biology, 1:6, 1998.
V. Nguyen, R. Mathias, and G. Smith. A stochastic automata network descriptor for markov chain
models of instantaneously coupled intracellular Ca2+ channels. Bulletin of Mathematical Biology, 67(3):393–432, 2005.
A. Phillips and L. Cardelli. A correct abstract machine for the stochastic pi-calculus. In Bioconcur. ENTCS, August 2004.
B. Plateau. On the stochastic structure of parallelism and synchronization models for distributed algorithms. In In Proceedings of the Sigmetrics Conference on Measurement and Modeling of Computer Systems, pages 147–154, 1985.
C. Priami, A. Regev, E. Shapiro, and W. Silverman. Application of a stochastic name-passing calculus to representation and simulation of molecular processes. Inf. Process. Lett., 80(1):25–31, 2001.
A. Regev, W. Silverman, and E. Shapiro. Representation and simulation of biochemical processes using the pi-calculus process algebra. In Pacific Symposium on Biocomputing, pages 459–470, 2001.
W. Stewart. Introduction to the Numerical Solution of Markov Chains. Princeton University Press, 1995.
T. Turner, S. Schnell, and K. Burrage.  Stochastic approaches for modelling in vivo reactions.
Computational biology and chemistry, 28(3):165–178, 2004.
O. Wolkenhauer, M. Ullah, W. Kolch, and K. Cho. Modeling and simulation of intracellular dynamics: Choosing an appropriate framework. IEEE Transactions on NanoBioscience, 3(3):200–207, 2004.
