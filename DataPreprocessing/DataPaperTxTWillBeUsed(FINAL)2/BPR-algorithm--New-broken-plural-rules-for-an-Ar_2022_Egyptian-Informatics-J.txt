Egyptian Informatics Journal 23 (2022) 363–371











BPR algorithm: New broken plural rules for an Arabic stemmer
Hamood Alshalabi a,b, Sabrina Tiun a,⇑, Nazlia Omar a, Elham abdulwahab Anaam a, Yazid Saif c
a Faculty of Information Science & Technology, Universiti Kebangsaan Malaysia, 43600 UKM, Bangi, Malaysia
b Sana’a University, Sana’a, Yemen
c Faculty of Mechanical and Manufacturing Engineering, Universiti Tun Hussein Onn Malaysia, 86400, Johor, Malaysia



a r t i c l e  i n f o 


Article history:
Received 2 January 2022
Revised 2 February 2022
Accepted 11 February 2022
Available online 22 February 2022


Keywords:
Arabic broken plural Arabic root-based Artificial intelligence Arabic Root Extraction
Arabic morphological analyzer Arabic corpus
Arabic text processing
a b s t r a c t 

One of the most important phases in text processing is stemming, whose aim is to aggregate all variations in a word into one group to aid natural language processing. The morphological structure of the Arabic language is more challenging than that of the English language; thus, it requires superior stemming algo- rithms for Arabic stemmers to be effective. One of the challenges is the irregular broken plural, which has been a problematic issue in Arabic natural language processing that affects the performance of Arabic information retrieval and other Arabic language engineering applications. Several studies have attempted to develop solutions to irregular plural problems, but the challenge remains, especially in extracting cor- rect Arabic root words. In this paper, the broken plural rule (BPR) algorithm introduces new solutions to solve the problem in which an existing root-based method cannot extract correct roots by using their proposed rules. The BPR algorithm introduces several rules (main rules and subrules) to extract the cor- rect roots of the Arabic irregular broken plural words. To evaluate the effectiveness of the BPR algorithm, we extracted roots from an Arabic standard dataset and applied the BPR algorithm as an enhancement to a root-based Arabic stemmer, ISRI. The obtained results from both evaluations showed encouraging results: (i) Only a few numbers of incorrect roots were stemmed on the large-sized Arabic word dataset.
(ii) The enhanced root-based Arabic stemmer, ISRI + BPR, exhibited the best performance compared with the original ISRI stemmer and a well-known Arabic stemmer, ARLS 2. Thus, the proposed BPR algorithm has solved some of the irregular broken plural problems that eventually increase the performance of a root-based Arabic stemmer.
© 2022 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial Intel-
ligence, Cairo University. This is an open access article under the CC BY license (http://creativecommons.
org/licenses/by/4.0/).





Introduction

In any natural language processing system, stemming is a common procedure. The importance of developing a competent stemmer is derived from the fact that stemming can pose a direct impact on the performance of any application in which it is used. Owing to its highly inflected and derivational structure, stemming Arabic terms is an extremely challenging task [10,21,22,28,29,30,32].

* Corresponding author.
E-mail address: sabrinatiun@ukm.edu.my (S. Tiun).
Peer review under responsibility of Faculty of Computers and Information, Cairo University.
Aside from the problems in light and root-based Arabic stem- ming, broken plural (irregularities of plural) poses a challenge in Arabic stemming. This challenge is due to the irregular pattern of the standard Arabic plural words, which causes difficulties in extracting root words. In the Arabic language (singular, dual, and plural), plurals are divided into two categories: regular and irregu- lar plurals. Plurals are formed by appropriate suffixation as in Eng- lish: teacher: teachers (’ﻣﻌﻠﻢ’, ’ﻣﻌﻠﻤﻮﻥ’). The suffix masculine plural is formed through adding the suffix (’oun’, ’ﻭﻥ’) to the nominative suffix)’een’, ‘ﻳﻦ’) in the accusative and genitive status.
The feminine plural is formed by attaching the suffix (at’, ‘ﺍﺕ) to the singular. Irregular or broken plurals are applied frequently to triliteral roots and formed by altering the singular as in English: tooth: teeth (’ﺳﻨﻮﻥ’ , ’ﺍﺳﻨﺎﻥ’). Numerous nouns and adjectives have broken plurals (Haywood et al., 1965). In all states, singulars are affected by applying several different patterns that alter long vow- els, (ﻱ) ,(ﻭ) ,(ﺃ), and (ﻯ), within or outside of the framework of the consonants [24].




https://doi.org/10.1016/j.eij.2022.02.006
1110-8665/© 2022 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial Intelligence, Cairo University. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).



This paper describes the root-based development via the new broken plural rule (BPR) algorithm by introducing new rules and the subset rule algorithm. The preprocessing contains a new sec- tion, which is Arabized removal. The main objective of this study is to combine an Arabic stemmer with a new broken plural rules (BPR) algorithm supported by appropriate terms and conditions. The rest of this article is arranged as follows: Section 2 covers the relevant works, Section 3 contains the ISRI works, and Section 4 indicates the methods used in this study. Section 5 presents the experiments conducted to illustrate the validity of the suggested algorithm, and Section 6 shows the analysis and comparison of our proposed stemmer with two other Arabic stemmers. The con- clusion is provided in Section 7.


Related works

The term selection for the Arabic language comprises four types of stemming techniques, namely, root-based stemming (heavy stemmer), statistical and hybrid stemmers, light-based stemmers, and artificial intelligence stemming. Each of these methods corre- sponds to a point on a scale of analysis. Root-based stemmers extract the root of an Arabic word via morphological analysis. Among the most prominent root-based stemmers is that of Khoja and Garside [28] that removes suffixes, infixes, and prefixes. It extracts the roots of words via pattern matching; nonetheless, sev- eral flaws and downsides exist, particularly with some words that represent ’broken plurals’. Taghva et al. [34] refined the algorithm developed by Khoja and Garside [28] through eliminating the necessity for a dictionary to extract the root. The ISRI stemmer
[34] is considered one of the best algorithms for Arabic stemmers, which is included in the NLTK package. Syarief et al. [33] addressed the ISRI stemmer’s weakness in comprehending words with two letters. The stemmer was upgraded by Al-Kabi et al. [6] through introducing additional rules and patterns. Pattern-based stemmer root extraction approaches, which do not require the use of a lex- icon, have recently been created [6,31].
The stopword list is a list of words in a text that have no meaning. These words serve merely as syntactic operations and have no bearing on the topic content. They have two unique effects on NLP [12]. Multiple applications include information retrieval IR [18], text categorization [9], ontology construction [4], and many more NLP applications [14,13,3]. A new Arabic light stemmer was developed by Al-Lahham et al. [7] to amplify the precision of previous algorithms. In addition, Alshalabi et al.
[11] recommended including a table of suffixes and prefixes to differentiate Arabic stems on the basis of word size instead of relying on morphological word patterns. This enhanced algorithm known as the Dlight Arabic stemmer uses word length to remove suffixes on the basis of the precise stage of stemming (double, quadriliteral, or triliteral roots).
The Arabic language has a large vocabulary and morphological diversity. For given text length and kind, any word will occur less frequently than in English. In accordance with this hypothesis, Ara- bic datasets will have a larger degree of intrinsic sparseness than equivalent English datasets [23]). Broken plurals comprise ~ 10% of texts in large Arabic corpora [23] and ~ 14% of plurals [20]. For light-stemming algorithms, detecting broken plurals is essential. In modern standard Arabic, irregular (i.e., broken) plural identification is a concern for Arabic stemmers and language engi- neering applications. Their impact on IR performance has yet to be investigated. Broken plurals are formed by altering the singular as in English (e.g., foot – ﻗﺪﻡ, feet – ﺍﻗﺪﺍﻡ) through the application of
interdigitating patterns to stems; singular words cannot be recov- ered using standard affix stripping stemming techniques [24].
In this section, we refer to the most prominent study on root- based stemming [19]. To generate a stem, light stemming is con- fined to deleting a small number of Arabic prefixes and suffixes. In addition to extracting the right root, heavy steaming, also known as root-based stemming, entails automatically deleting Arabic prefixes and suffixes. The majority of original Arabic words are obtained from triliteral roots. The problem of handling irregu- lar plural words in Arabic (sands,’ ﺭﻣﺎﻝ ‘plural of ‘ ﺭﻣﻞ ‘ and souls, ‘ ﺍﺭﻭﺍﺡ ‘ plural of ‘ ﺭﻭﺡ ‘) is difficult for many of the proposed stemmers as they do not obey particular linguistic rules. For instance, Kchaou and Kanoun [27] developed an Arabic stemmer with two dictionaries that matches the input word with one dic- tionary for roots and the other for stems and consequently elimi- nates them. Aljlayl and Frieder [10] developed another stemmer that uses heuristic rules to remove unnecessary letters, such as, and then checks for the remaining word length to look for the extra prefixes and suffixes. To address this issue in a specific domain, some Arabic stemmers have been proposed. For instance, Abuata and Al-Omari [2] proposed a special Arabic stemmer for the Gulf dialect. To extract the triliteral stem from the input words, they used heuristic-based rules. Another study by El-Beltagy and Rafea
[22] proposed a domain-specific light Arabic stemmer. The writers first delete the affixes from a word and then look up the remaining letters in the domain corpus text, which requires the user’s assistance.
Moreover, a few works on Arabic morphology are worth to be highlighted, such as the work of Yousfi [35] and Fuad (2020). Yousfi [35] introduced a new system for morphological analysis using the surface patterns of the word to be analyzed. This approach requires classification of all Arabic verb roots by using the morphological rules of such patterns in the initial phase. The second phase is the construction of a data base of conjugated sur- face patterns. This system can analyze all Arabic verbs by decom- posing the word to the prefixes, suffixes, and roots. This approach has been tested on a corpus of 4000 verbs, and the results were encouraging. Iazzi et al. [25] also introduced a system for the morphological analysis of the Arabic language. The system is based on the surface patterns of Arabic words. This work aimed to deal with Arabic derived nouns. It was based mainly on the building of a database for the surface patterns of such nouns. To deal with Arabic derived nouns, the article also referred to a previous study by Yousfi [35] for the analysis of Arabic verbs. This approach was tested against a corpus of 2400 Arabic words (400 verbs and 2000 derived nouns), and the obtained results were remarkable.
Fuad et al. (2020) evaluated four state-of-the-art Arabic mor- phological analyzers and found that identification of broken plural words, specifically the plural of paucity, is lacking. Therefore, Fuad et al. (2020) presented Qillah (paucity), a morphological extension that is built on top of other morphological analyzers and uses a hybrid rule- and lexicon-based approach to enhance the identifica- tion of plural of paucity. Two versions of Qillah were developed: one is based on the FARASA morphological analyzer (https://far- asa.qcri.org/POS/), and the other is based on the CALIMA Star ana- lyzer (https://github.com/CAMeL-Lab/camel_tools).
Broken or irregular plurals of adjectives and nouns, for example, would not be confused with their single forms [26]. Past tense verbs are distinguished from their present tense counterparts by internal distinctions and affixes [16,5,17,15]. However, none show any list for roots [1]. A light stemmer misses the correct stem of a word and a wrong word that does not exist in the Arabic language. A root-based stemmer also fails to stem the broken plural word form, resulting in extracted root words that deviate from the orig- inal word’s meaning. We plan to refine a root-based stemmer to extract expected stems by using a new rule-based stemmer for broken plural words to solve this problem.





























Fig. 1. Pseudo code of the ISRI algorithm.



ISRI stemmer

The ISRI stemmer introduces another simulation for linguistic process, which is similar to the Khoja stemmer [28,34]. It starts by normalizing input word, as well as discarding unrelated Arabic characters and diacritics. The normalization step involves unifying the various forms of Hamza to A (Alif ﺍ), which is different from the Khoja stemmer [28]. This step is followed by several decisions to omit prefixes with three or more characters from the normalized word. Afterward, the word is mapped by ISRI to a group of patterns on the basis of its length, but potential suffixes are discarded in the absence of match. The stemming process ends when the word
length is reduced by three or less characters. The main difference between Khoja and ISRI stemmers is that the latter never validates roots against any dictionary. ISRI only identifies a minimal word from an input word to be applied in (IR) tasks. Some drawbacks due to absence of dictionary are incorrect extracted root word and a root word consisting of unintelligible characters that disables further processing for linguistic purposes. Fig. 1 lists these steps. In step 7, longer words are trimmed to affixes with single character. Successful attempt leads to a comparison between the resultant shorter term and a range of patterns at varying levels to determine the matching pattern and extract the relevant term or the resulting word that is actually extremely short to serve as a viable stem.
Instances of outcomes, as reported by Taghva et al. [34] are as follows: sets of affixes are reflected in (P3, P2, P1, S3, S2, and S1), while (PR4, PR53, PR54, PR63, and PR64) refer to sets of Arabic suf- fixes and prefixes. Then, Syarief et al. [33] improved the weakness of the ISRI stemmer in processing words consisting of two letters. From the results of the experiment, the improvements increased the stemmer yield by 7.3%.

BPR algorithm: new rules for broken plural

The data used in this study is the standard dataset Text Retrie- val Conference (TREC 2002). The pretreatment stage includes text normalization, stopword removal, Arabized detection and extrac- tion, and definition article removal, which we have already men- tioned in detail in our previous work on Dlight [11].
Most of the preceding studies [1,28,34,6,8,36] did not focus on root words that contain two letters. For example, the word love ﺍﺣﺒﺎﺏ in the weight of pattern ﺍﻓﻌﺎﻝ accords to past methods, the extracted root will be ﺣﺒﺐ, and this is the wrong root. The right




Fig. 2. BPR algorithm for Arabic irregular broken plurals.



Table 1
List of prefixes(P1) and suffixes(S1) to be removed.

Set	Description	List
stemmer, we define the sets of prefixes (P1) and suffixes (S1) in Table 1.
A detailed discussion of the algorithm offers a broad review of

P 1	length one prefixes
S1	length one suffixes
ﻝ ,ﺏ, ﻑ ,ﺱ, ﻭ, ﻱ ,ﺕ, ﻥ ,ﺍ
ﺓ , ﻩ , ﻱ , ﻙ ,ﺕ, ﺍ, ﻥ
the stemmer. Stemming is performed in the following order (with more details shown in Tables 3–5).
As a summary of this algorithm, the normalization step in the beginning starts with the letters’ normalization by splitting the text

root is ﺣﺐ, the word ﻭﺩﺍﺩ in accordance with the pattern ﻓﻌﺎﻝ root will be ﻭﺩﺩ, and the right root is ﻭﺩ. Therefore, we build subrules and develop a subrule algorithm to solve these problems to find correct root words.
Furthermore, we introduce new solutions to solve the problem in which an existing root-based (Khoja’s) method cannot extract correct roots by using the main rule and subrules. For example, in Table 5, Procedure len5 in Rule (6) states that the main rule is ‘‘If the word ends with (ﺀﺍ), then three subrules will apply the first subrule (if first char ’ﺍ’ and fourth char ’ﻱ’). For example, for the words (‘ﺍﺳﻮﻳﺎﺀ’,’ﺍﺑﺮﻳﺎﺀ’(, the correct roots are (‘ﺳﻮﻱ‘ ,’ﺑﺮﻱ’). In the second subrule ‘‘if first char ’ﺍ’ and fourth char (Not ’ﻱ’),” such as ‘‘ ﺃﻋﺰﺍﺀ ﺃﻃﺒﺎﺀ ﺃﺧﻼﺀ ‘‘, then the root of this word will be two letters, and the new rule result will be ‘‘ ﺧﻞ‘ ’ﻋﺰ ’ﻃﺐ’; else, root = first char + second char + third char as the third subrule. For example, the words (ﺳﻌﺪﺍﺀ ﺑﺨﻼﺀ) will have the correct roots as (”ﺑﺨﻞ, ﺳﻌﺪ ‘‘).
In this part, more patterns are developed to extract correct roots by using Khoja’s method. New patterns are also added to the Khoja list; thus, we have access to a comprehensive array of Arabic word patterns. This research proposes an algorithm broken plural rule, as shown in Fig. 2. A sample list of proposed new patterns expected from this study is shown in Table 2. To begin our description of our
from the documents to words; removing nonletters, punctuations, and diacritics; replacing ﺇ ,ﺁ, and ﺃ with ﺍ; replacing final ﻯ with ﻱ; and replacing final ﺓ with ﻩ. We use the normalization step suggested by Larkey et al. [29]. The next step entails the stopword and Arabized removal as in [11] because these words function merely as syntactic operations and have no bearing on the topic mat- ter. These stopwords have dissimilar impacts on NLP. In the third step, the elimination of definition articles as a distinct stage is con- ducted as a new concept as in [11]. The concept is that we separate the definition articles from the prefixes because, in most circum- stances, when the definition article is removed from the word, the stemmer will most likely yield the proper root directly, thus avoid- ing further word processing that leads to the wrong root. For exam- ple, in the word ﺍﻟﻌﺐ (I am play), elimination of definition articles ﺍﻝ in accordance with root-based approaches will lead to a wrong root, and the word will be (ﻋﺐ). By contrast, in our algorithm on definition article removal, for the word (ﺍﻟﻌﺐ), the rule is as follows: if length (word) >= 4 and a word starts with (ﻝ or ﺍ), then remove (ﺍ). In this case, the word (ﺍﻟﻌﺐ) will be (ﻟﻌﺐ) game , which is the correct root. Further processing for suffix and prefix removal is not needed. Lastly, depending on the length of the input word, we insert several rules as main rules and subrules in the final stage.






Table 2
Patterns for different lengths.





Table 3
Procedures for broken plural words len6.



Table 4
Procedures for broken plural words len5.



Evaluation of the BPR algorithm

Effectiveness of the BPR algorithm

We should evaluate the effectiveness of the BPR algorithm before it is applied to our proposed or any Arabic stemmer. Thus, two types of investigations are conducted. One is to evaluate the effectiveness of the BPR algorithm stemming words through find- ing the number of incorrect and correct stemmed words. The other is to apply BPR to a well-known Arabic stemmer, the ISRI stemmer, and evaluate how effective the BPR algorithm is through compar- ing the original ISRI stemmer and the enhanced ISRI (ISRI + BPR). The following is the detailed explanation on how we apply the ISRI stemmer by using our proposed BPR algorithm and expect an improvement in ISRI’s performance.

ISRI + BPR: Improved ISRI stemmer using BPR algorithm

The ISRI stemmer [34] presents another simulation for the lin- guistic process that is comparable to the Khoja stemmer [28]. It begins by eliminating diacritics and nonrelated Arabic characters
from the input word [28]. The normalized word is then mapped to a group of patterns on the basis of its length after a sequence of judg- ments to eliminate probable prefixes with three or less characters. If no match is found, ISRI looks for possible matches within a group’s patterns. When the input word’s remaining length is three or fewer characters, the stemming process should end. ISRI does not validate roots against any form of dictionaries, which is another significant distinction from the Khoja stemmer. ISRI is more concerned with locating the smallest possible representation of an input word to retrieve information. The absence of a lexicon has various negative consequences, such as the fact that the extracted roots are not always valid; the root could be a meaningless string of letters. Roots would be untrustworthy for subsequent processing, particularly in language tasks. Stemming proceeds as shown in Fig. 3, and we call the new stemmer as the (ISRI + BPR) stemmer.
The main variance between the Khoja and ISRI stemmers is that the latter never validates roots against any dictionary. The ISRI stemmer only identifies minimal words from an input word to be applied in (IR) tasks. Some drawbacks due to the absence of dic- tionary are incorrect extracted root words and root words consist- ing of unintelligible characters that disable further processing for






Fig. 3. Diagram for developing the ISRI + BPR stemmer.
BPR stemmer is determined. From Table 6, the BPR stemmer stems the words on the TREC2002 dataset correctly for almost ¾ of the entire dataset, and only 1/3 are incorrect. This result indicates the ability of BPR to stem words correctly, although the size of the given dataset is large. To be specific (Table 6), BPR produces 7,788,877 stems from the TREC2002 dataset that has 42,127,701 words in total. A total of 5,661,488 stem words are correctly stemmed (Correct R), which are 73% of the total stem words (all stems); only 2,127,389 (or 27%) are incorrect stem words (Incor- rect R). In accordance with the result (Table 6), BPR shows the abil- ity to stem words with high performance.
Furthermore, evaluation of the BPR algorithm is performed through applying the BPR algorithm to an existing, well-known Arabic stemmer, i.e., the ISRI stemmer [34]. If the BPR algorithm can enhance the performance of the original ISRI stemmer, it will

Table 6
Output result of the BPR stemmer.




Table 7
Correct R, Incorrect R, all stems, and unique stems for ISRI + BPR with two algorithms.





linguistic purposes. This method has a shortcoming in extracting the roots of irregular plural words. To solve this problem, the BPR algorithm is the solution. That is, the improvement of the ISRI stemmer by using the BPR algorithm can be used as a benchmark on whether the BPR algorithm really works. Fig. 3 shows the dia- gram of the enhanced ISRI (ISRI + BPR) stemmer.
This section presents our rule-based development by using new BPRs (ISRI + BPR). The algorithm entails many steps. The preprocess- ing step involves normalization, stopword removal, and Arabized removal. The next step involves the removal of definition articles and the application of the new BPR, followed by the ISRI stemmer.

Evaluation of the BPR algorithm on the Arabic TREC dataset

In this study, a few specific evaluations are performed to assess the proposed BPR algorithm. In this evaluation, the stem refers to the word that has been processed by the algorithm. The stem may be a correct root (Correct R) or an incorrect root (Incorrect R). ‘Un’ refers to the unique stem of all stems, and the nonstem refers to the word that has not been processed by the algorithm. Moreover, all stem denotes all the words that the algorithm has been able to process or stem. Thus, to evaluate the effectiveness of the BPR algo- rithm beforehand, two types of investigations are conducted. The first is to evaluate the effectiveness of the BPR algorithm stemming words through finding the number of incorrect and correct stemmed words. The second is to apply BPR to the ISRI stemmer and evaluate how effective the BPR algorithm is through comparing the original ISRI stemmer with the enhanced ISRI (ISRI + BPR).
On the basis of the experimental results, the effectiveness of the BPR stemmer have been proved. In the first experiment, the number of incorrect and correct stem words stemmed by the





















Fig. 4. Comparison of ISRI + BPR’s performance with the performance of two well- known Arabic stemmers.




Table 8
Precision, recall, and ICF comparison of two well-known Arabic stemmers and ISRI + BPR.



Table 5
Procedures for broken plural words len4.




Table 9
Example of stemmed words by ISRI + BPR, ISRI, and ARLS 2.









Fig. 5. Comparison of ISRI + BPR’s performance with the performance of two well- known Arabic stemmers.


further confirm the ability to stem words with high performance. The results in Table 7 show an evident improvement in extracting correct roots. The BPR algorithm also achieves better results in reducing wrong roots, given that it can analyze the largest number of words that are subject to ISRI + BPR improvement, which enables the algorithm to extract a smaller number of unique queries.
Moreover, ISRI + BPR increases the number of correct roots by approximately 17,951,076 more than ARLS 2 does and 2,724,214 more than the original ISRI stemmer does, as shown in Fig. 4. The F-measure result also indicates a marked improvement.
The results in Table 8 and Fig. 5 show that the ISRI + BPR stem- mer increases the stem precision by 36% more than ARLS 2 does and 08% more than the original algorithm, ISRI, does. ISRI + BPR increases the stem F-measure by approximately 30% higher than ARLS 2 does and approximately 06% higher than the ISRI stemmer does.


Discussion

In general, the goal of stemming is to discover a word’s repre- sentative indexing form. For effective information retrieval in Arabic, which is a heavily inflected language, we need good stemming. Currently, no standard strategy for stemming Arabic words exists. However, two broad ways are used to stem Arabic words: extracting the word’s root, such as the Khoja stemmer, or simply truncating affixes, such as the Larkey stemmer. The former method has numerous flaws. First, the root dictionary must be maintained to ensure that newly found words are appropriately stemmed. Second, it fails to remove the affixes of words in some circumstances and therefore fails to extract the root. For example, the root-based technique stemmer will fail to remove affixes in words, as shown in Table 9; hence, it will not stem them when they come from the roots. The third and most serious issue is that, from the perspective of an information retrieval system, root extraction stemmers are useless in the Arabic language. In many cases, their adoption results in a new word that is very general, leading to poor search efficiency. A comparison of how different Arabic words are stemmed using different stemmers is shown in Table 9. The table shows an example of the correct root extracted by the


ISRI + BPR stemmer against the incorrect stemmed words by the two well-known Arabic stemmers, i.e., ARLS 2 and ISRI. BPR enhances the ISRI approach due to the strength and flexibility of the proposed rules; the rules contain many sub-options (subrules) to stem the root correctly. In addition, the BPR algorithm is able to extract the correct root of the words that the previous algorithms are unable to extract. For instance, the word ‘boxes’ (ﺻﻨﺎﺩﻳﻖ) is incorrectly processed by ISRI and ARLS 2 but correctly stemmed by BPR into the word ‘encase’ (ﺻﻨﺪﻕ). BPR can also extract roots that contain two letters (as shown in Table 4, in the main rule 6 subrule 2, the words ﺍﻋﺰﺍﺀ ,ﺍﻃﺒﺎﺀ ,ﺍﺧﻼﺀ will have two-letter root words, which are ﺧﻞ ﻃﺐ، ﻋﺰ،). To sum up, BPR has wider capability in extracting roots because it can extract quintain, qua- train, tercet, and couplet roots like no other algorithm had done before.

Conclusion

To solve the problem of stemming broken plural words, which is considered a major weakness of root-based methods for extract- ing roots from Arabic words, we designed and developed new rules for stemming BPR in accordance with accurate Arabic grammar. The first section describes the proposed algorithm for developing new BPRs, with the new rules as the latest contribution to enhanc- ing Arabic root-based approaches by overcoming their weaknesses and shortcomings. The ISRI method was improved by applying the BPR algorithm to the original ISRI stemmer, and we named it ISRI + BPR stemmer. The experimental results from the first inves- tigation showed that the BPR development had achieved remark- able success, with an encouraging number of correct extracted roots by using the BPR algorithm on a well-known Arabic dataset. In the second investigation, the results obtained by ISRI + BPR were the best compared with the benchmark Arabic stemmers: the orig- inal ISRI stemmer and ARLS 2. Both results indicated an evident increase in the percentage of correct roots and a reduction in incor- rect roots in terms of precision, recall, F-measure, and ICF mea- sures. Thus, we can conclude that the proposed BPR algorithm has solved some of the irregular broken plural problems, which eventually helped in improving the performance of a root-based Arabic stemmer. In the future work, we will extend this approach to all Arabic derived names..



Conflicts of interest statement

All authors declare that they have no conflicts of interest.


Acknowledgements

This research was partially funded by the Ministry of Higher Education Malaysia under research code: FRGS/1/2020/ICT02/ UKM/02/1.

References

Ababneh M, Al-Shalabi R, Kanaan G, Al-Nobani A. Building an effective rule- based light stemmer for Arabic language to improve search effectiveness. Int Arab J Inf Technol (IAJIT) 2012:9.
Abuata B, Al-Omari A. A rule-based stemmer for Arabic Gulf dialect. J King Saud Univ-Comput Inf Sci 2015;27(2):104–12.
AL-Aswadi FN, Chan HY, Gan KH. Extracting Semantic Concepts and Relations from Scientific Publications by Using Deep Learning. arXiv preprint arXiv:2009.00331. (2020).
AL-Aswadi FN, Chan HY, Gan KH. Extracting Semantic Concepts and Relations from Scientific Publications by Using Deep Learning. Cham: Springer International Publishing; 2021. p. 374–83.
Al-Fuqaha A, Kountanis D, Cooke S, Elbes M, Zhang J. A genetic approach for trajectory planning in non-autonomous mobile ad-hoc networks with qos requirements. In: 2010 IEEE Globecom Workshops. IEEE; 2010. p. 1097–102.
Al-Kabi MN, Kazakzeh SA, Abu Ata BM, Al-Rababah SA, Alsmadi IM. A novel root based Arabic stemmer. J King Saud Univ-Comput Inf Sci 2015;27 (2):94–103.
Al-Lahham YA, Matarneh K, Hasan M. Conditional Arabic light stemmer: condlight. Int Arab J Inf Technol 2018;15:559–64.
Al-Omari A, Abuata B, Al-Kabi M. Building and benchmarking new heavy/light Arabic stemmer. The 4th International conference on Information and Communication systems (ICICS 2013), 2013.
Alhutaish R, Omar N. Arabic text classification using k-nearest neighbour algorithm. Int Arab J Inf Technol (IAJIT) 2015;12:190–5.
Aljlayl M, Frieder O. On Arabic search: improving the retrieval effectiveness via a light stemming approach. In: Proceedings of the eleventh international conference on Information and knowledge management. p. 340–7.
Alshalabi H, Tiun S, Omar N, Al-Aswadi FN, Ali AK. Arabic light-based stemmer using new rules. J King Saud Univ - Comput Inf Sci 2021. doi: https://doi.org/ 10.1016/j.jksuci.2021.08.017.
Alshalabi H, Tiun S, Omar N, Albared M. Experiments on the use of feature selection and machine learning methods in automatic Malay text categorization. Procedia Technol 2013;11:748–54.
Alshalabi HA, Tiun S, Omar N. A comparative study of the ensemble and base classifiers performance in Malay text categorization. Asia-Pasific J Inf Technol Multimedia 2017;06(02):53–64.
Altawaier MM, Tiun S. Comparison of machine learning approaches on Arabic twitter sentiment analysis. Int J Adv Sci, Eng Inf Technol 2016;6:1067–73.
AlZu’bi S, Hawashin B, EIBes M, Al-Ayyoub M. A novel recommender system based on apriori algorithm for requirements engineering. In: 2018 fifth international conference on social networks analysis, management and security (snams). IEEE; 2018. p. 323–7.
AlZu’bi S, Jararweh Y, Al-Zoubi H, Elbes M, Kanan T, Gupta B. Multi-orientation geometric medical volumes segmentation using 3d multiresolution analysis. Multimedia Tools Appl 2019;78(17):24223–48.
AlZubi S, Islam N, Abbod M. Enhanced hidden markov models for accelerating medical volumes segmentation. In: 2011 IEEE GCC Conference and Exhibition (GCC). IEEE; 2011. p. 287–90.
Atwan J, Mohd M, Kanaan G. Enhanced Arabic information retrieval: Light stemming and stop words. In: International Multi-Conference on Artificial Intelligence Technology. Springer; 2013. p. 219–28.
Bi Y, Bhatia R, Kapoor S. Intelligent Systems and Applications: Proceedings of the 2019 Intelligent Systems Conference (IntelliSys). Springer Nature; 2019.
Boudelaa S, Gaskell MG. A re-examination of the default system for Arabic plurals. Language Cognit Processes 2002;17(3):321–43.
Chen A, Gey F. Building an Arabic stemmer for information retrieval. TREC. 2002:631–9.
El-Beltagy SR, Rafea A. An accuracy-enhanced light stemmer for arabic text. ACM Trans Speech Language Process (TSLP) 2010;7:1–22.
Goweder A, De Roeck A. Assessment of a significant Arabic corpus, Arabic NLP Workshop at ACL/EACL. (2001).
Goweder A, Poesio M, De Roeck A, Reynolds J. Identifying Broken Plurals in Unvowelised Arabic Tex. In: Proceedings of the 2004 Conference on Empirical Methods in Natural Language Processing. p. 246–53.
Iazzi S, Yousfi A, Bellafkih M, Aboutajdine D. Morphological analyzer of Arabic words using the surface pattern. Int J Comput Sci Issues (IJCSI) 2013;10:254.
Kanan T, Sadaqa O, Almhirat A, Kanan E. Arabic light stemming: A comparative study between p-stemmer, Khoja stemmer, and light10 stemmer. In: 2019 Sixth International Conference on Social Networks Analysis, Management and Security (SNAMS). IEEE; 2019. p. 511–5.
Kchaou Z, Kanoun S. Arabic stemming with two dictionaries. In: 2008 International Conference on Innovations in Information Technology. p. 688–91.
Khoja S, Garside R. Stemming Arabic text. Lancaster, UK: Computing Department, Lancaster University; 1999.
Larkey LS, Ballesteros L, Connell ME. Improving stemming for Arabic information retrieval: light stemming and co-occurrence analysis. In: Proceedings of the 25th annual international ACM SIGIR conference on Research and development in information retrieval. p. 275–82.
Larkey LS, Ballesteros L, Connell ME. Light stemming for Arabic information retrieval, Arabic computational morphology. Springer; 2007. p. 221–43.
Nehar A, Ziadi D, Cherroun H. Rational kernels for Arabic root extraction and text classification. J King Saud Univ-Comput Inf Sci 2016;28(2):157–69.
Nwesri AF, Tahaghoghi SM, Scholer F. Stemming Arabic conjunctions and prepositions. In: International Symposium on String Processing and Information Retrieval. Springer; 2005. p. 206–17.
Syarief MG, Kurahman OT, Huda AF, Darmalaksana W. Improving Arabic Stemmer: ISRI Stemmer. In: 2019 IEEE 5th International Conference on Wireless and Telematics (ICWT). IEEE; 2019. p. 1–4.
Taghva K, Elkhoury R, Coombs J. Arabic stemming without a root dictionary, Information Technology: Coding and Computing. In: ITCC 2005. International Conference on, IEEE. p. 152–7.
Yousfi A. The morphological analysis of Arabic verbs by using the surface patterns. IJCSI Int J Comput Sci Issues 2010;7:11.
Zeroual I, Boudchiche M, Mazroui A, Lakhouaja A. Developing and performance evaluation of a new Arabic heavy/light stemmer. In: Proceedings of the 2nd international Conference on Big Data, Cloud and Applications. p. 17.



Dr Alshalabi Hamood is currently a lecturer at Sana’a University, Yemen. He holds his PhD from the Universiti Kebangsaan Malaysia, Malaysia (UKM). His research focuses in Natural Language Processing on Text Pro- cessing, and Image Processing.












Dr Sabrina Tiun is a senior lecturer at the Faculty of Information Science and Technology (FTSM) in Univer- siti Kebangsaan Malaysia (UKM). Her range of research interests are from Natural Language Processing, Com- putational Linguistic, Speech Processing to Social Sci- ence Computing. Currently, she is the CAIT Teaching & Learning Coordinator at the FTSM, UKM.










Assoc. Professor Dr Nazlia Omar is an Associate Pro- fessor at the Centre for AI Technology (CAIT), Faculty of Information Science and Technology (FTSM), Universiti Kebangsaan Malaysia (UKM). She holds her PhD from the University of Ulster, UK. Her main research interest is in the area of Natural Language Processing and Computational Linguistics. She is currently the head of Asian Language Processing Lab (ASLAN) under the Centre of Artificial Intelligence Technology (CAIT).



Dr Elham anaam. She holds her PhD from Faculty of Information Science and Technology (FTSM), Universiti Kebangsaan Malaysia (UKM). Her research focuses on E- CRM adoption and Multi criteria decision making.
Yazid Saif is currently a research assistant at Tun Hus- sien Onn (UTHM). Faculty of mechanical engineering. He is a PhD a student at the Universiti Tun Hussien Onn Malaysia, (UTHM). His research focuses in measuring models and detecting features based on Image Pro- cessing, and his concern with Artificial Intelligent focusing on the convolutional neural network.
