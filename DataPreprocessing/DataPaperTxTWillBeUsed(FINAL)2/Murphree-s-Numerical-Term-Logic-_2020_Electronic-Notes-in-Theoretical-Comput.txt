Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 354 (2020) 17–28
www.elsevier.com/locate/entcs
Murphree’s Numerical Term Logic Tableaux
J. Mart´ın Castro-Manzano1,2
Faculty of Philosophy UPAEP University



Abstract
Murphree’s Numerical Term Logic is a logic capable of representing and performing inference with numerical quantifiers by modifying Sommers’ Term Functor Logic: in this contribution we offer a tableaux method for it.
Keywords: Semantic trees, term logic, numerical term logic.


Introduction
In other places we have developed tableaux for Sommers and Englebretsen’s Term Functor Logic [19,8,21], Intermediate Term Functor Logic `a la Thompson [23], and Englebretsen’s Modal Term Logic [7]. In this contribution we continue our ex- ploration into the realm of term logics and we present tableaux for Murphree’s Numerical Term Logic [13]. Hence, for a more detailed exposition of Term Functor Logic and its tableaux we refer the reader to our previous work [4]. Meanwhile, in order to achieve our present goal, we first provide a summary of some preliminary concepts (syllogistic, term functor logic, and term functor logic tableaux), then we explain the basics of Murphree’s logic (namely, its syntax and rules) and, finally, we develop tableaux for it (including some metalogical results).


1 We would like to thank the anonymous reviewers for their precise corrections and useful comments. Financial support given by an UPAEP Research Grant.
2 Email: josemartin.castro@upaep.mx

https://doi.org/10.1016/j.entcs.2020.10.003
1571-0661/© 2020 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

Preliminaries
Syllogistic
Syllogistic is a term logic that has its origins in Aristotle’s Prior Analytics [1] and deals with inference between categorical propositions. A categorical proposition is a proposition composed by two terms, a quantity, and a quality. The subject and the predicate of a proposition are called terms: the term-schema S denotes the subject term of the proposition and the term-schema P denotes the predicate. The quantity may be either universal (All ) or particular (Some) and the quality may be either affirmative (is) or negative (is not ). These categorical propositions have a type denoted by a label (either a (universal affirmative, SaP), e (universal negative, SeP), i (particular affirmative, SiP), or o (particular negative, SoP)) that allows us to determine a mood, that is, a sequence of three categorical propositions ordered in such a way that two propositions are premises and the last one is a conclusion. A categorical syllogism, then, is a mood with three terms one of which appears in both premises but not in the conclusion. This particular term, usually denoted with the term-schema M, works as a link between the remaining terms and is known as the middle term. According to the position of this middle term, four ﬁgures can be set up in order to encode the valid syllogistic moods (Table 1). 3

Table 1
Valid syllogistic moods


Term Functor Logic
Term Functor Logic (TFL) [18,19,21,6,8,9] is basically a plus-minus algebra that employs terms rather than first order language elements such as individual variables or quantifiers (cf. [17,14,10,19,20,11]). According to this algebra, the four categorical propositions can be represented by the following syntax [8]:
SaP := −S + P
SeP := −S − P
SiP := +S + P

3 For sake of brevity, but without loss of generality, here we omit the syllogisms that require existential import.

SoP := +S − P
Given this representation, this plus-minus algebra provides a simple rule for syllogistic inference: a conclusion follows validly from a set of premises if and only if i) the sum of the premises is algebraically equal to the conclusion and ii) the number of conclusions with particular quantity (viz., zero or one) is the same as the number of premises with particular quantity [8, p.167]. Thus, for instance, if we consider a valid syllogism, say the mood aaa from the first figure (i.e. aaa-1), we can see how the application of this method produces the right conclusion (Table 2).

Table 2
A valid syllogism: aaa-1

In the previous example we can clearly see how the method works:
i)  if  we  add  up  the  premises  we  obtain  the  algebraic  expression (−D + A)+ (−G + D)= −D + A − G + D = −G + A, so that the sum of the premises is algebraically equal to the conclusion and the conclusion is −G + A, rather than +A − G, because ii) the number of conclusions with particular quantity (zero in this case) is the same as the number of premises with particular quantity (zero in this case).
TFL tableaux
As in [4], we say a tableau is an acyclic connected graph determined by nodes and vertices [5,16]. The node at the top is called root. The nodes at the bottom are called tips. Any path from the root down a series of vertices is a branch. To test an inference for validity we construct a tableau which begins with a single branch at whose nodes occur the premises and the rejection of the conclusion: this is the initial list. We then apply the rules that allow us to extend the initial list (Diagram 1).
−A ± B	+A ± B
	

−Ai	±Bi
+Ai



±Bi

Diagram 1: TFL tableaux rules
In Diagram 1, from left to right, the first rule is the rule for a (e) propositions,

and the second rule is the rule for i (o) propositions. Notice that, after applying a rule, we introduce some index i ∈ {1, 2, 3,.. .}. For propositions a and e, the index may be any number; for propositions i and o, the index has to be a new number if they do not already have an index. Also, following TFL tenets, we assume the followings rules of rejection: −(±A)= ∓A, −(±A ± B)= ∓A ∓ B, and
−(−− A − −A)= +(−A)+ (−A).
As usual, a tableau is complete if and only if every rule that can be applied has been applied. A branch is closed if and only if there are terms of the form ±Ai and ∓Ai on two of its nodes; otherwise it is open. A closed branch is indicated by writing a ⊥ at the end of it; an open branch is indicated by writing ∞. A tableau is closed if and only if every branch is closed; otherwise it is open. So, again as usual, A is a logical consequence of the set of terms Γ (i.e. Γ ▶ A) if and only if there is a complete closed tableau whose initial list includes the terms of Γ and the rejection of A (i.e. Γ ∪ {−A}▶ ⊥). Accordingly, up next we provide some examples for basic syllogistic (Diagram 2).


−M + P
−S + M
▶ −S + P
−(−S + P)
+S − P
−M + P
+S + M
▶ +S + P
−(+S + P)
−S − P


	
+S1	+S1
−P1	+M1
	

−S1
⊥


−M1
⊥
−M − P
−S + M
▶ −S − P
+M1


+P1
⊥
−M1
⊥


−S1
⊥
−M − P
+S + M
▶ +S − P
+P1


−P1
⊥

−(−S − P)
+S + P


+S1

+P1
−(+S − P)
−S + P


+S1

+M1

	

−S1
⊥


−M1
⊥
+M1


−P1
⊥
−M1
⊥


−S1
⊥
−P1


+P1
⊥


Diagram 2: Moods aaa-1, eae-1, aii-1, and eio-1

Murphree’s Numerical Term Logic
In Szabolcsi’s view [22, p.3], quantification within first order logic systems is “ex- tremist” in the sense that it is limited to represent two extremes: either everything or something. 4 Indeed, it is usual to find logical treatments that assume that in- termediate or subjective quantifiers [22, p.26ff] such as “many”, “most”, or “few” (cf. [15,23]) have to be treated as simple cases of existential quantifiers, and numer- ical or objetive quantifiers usually suffer the same fate. However, such a treatment is far from being justified. There are several reasons to support this claim, but in the interest of time, consider that reasoning in natural language includes more quantifiers than the usual “all” or “some”. For instance, regard that both “most” and “some” are particular (i.e. non-universal) quantifiers, but they do not express the same meaning: the former implies the latter, but the converse is false; and the same occurs when reasoning with numerical quantifiers. Given this situation, Mur- phree [13], and Szabolcsi [22] developed numerical extensions of Sommers’ Term Functor Logic: in this work, however, we focus only on Murphree’s [13].
Murphree’s Numerical Term Logic (NTL) is a term logic capable of representing and performing inference with numerical quantifiers by modifying TFL’s syntax and rule of inference. Thus, NTL offers the following syntax for numerically quantified propositions:
All but n S are P := −nS + P
At most n S are P := −nS − P
At least n S are P := +nS + P
At least n S are not P := +nS − P
To better explain this representation, consider the next examples:
At least 15 Americans are republicans := +15A + R
All but 120 students understand logic := −120S + U
At most 150,000 Europeans are male := −150,000E − A
There are at least 33 mathematicians := +33M + M
At least 66 logicians are not democrats := +66L − D
Now, at this point it is important to notice that when n = 0 (n = 1), the traditional universal (particular) categorical propositions are included within NTL:
All S is P = All but 0 S are P := −0S + P
No S is P = At most 0 S are P := −0S − P
Some S are P = At least 1 S is P := +1S + P
Some S are not P = At least 1 S is not P := +1S − P

4 This is not completely true because, for example, we have the proposals developed by [12,24] (however, since these are not part of first order logic prima facie and they are developed by and for first order languages, we omit their treatment in this contribution) and, in all fairness, we can charge TFL with the same offense.

Also, by adapting some ideas by Szabolcsi, in NTL we can represent exact (10), fractionary (12), and subjective (13) quantifiers. This last example shows in what sense the intermediate propositions of Intermediate Term Functor Logic (TFL+) are included within NTL:
Exactly n S are P := +(+n−1S + P)+ (−nS − P)
At most r/q of S are P := −r/qS − P
Many S are P := +mS + P
Given these syntactical tweaks, NTL modifies TFL’s rule of inference as follows: a conclusion follows validly from a set of premises if and only if i) the sum of the premises is algebraically equal to the conclusion, ii) the number of conclusions with particular quantity (viz., zero or one) is the same as the number of premises with particular quantity, and iii) either (a) the value of a universal conclusion is equal to the sum of the values of the universal premises, or (b) the value of a particular conclusion is equal to the difference of the universal premise minus the particular. 5 Hence, both TFL and TFL+ are sublogics of NTL. Now, to exemplify NTL let us consider some valid inferences (Tables 3-6).

Table 3
A valid numerical syllogism (adapted from [13])

However, before we move on, and in order to reach our goal, we need to make a little syntax modification that will come in handy in due time: we add the predicate term of a proposition an arbitrary natural number e > n for any other natural n. This results in the following syntax for NTL:
e’. All but n S are P := −nS +e P f’. At most n S are P := −nS −e P g’. At least n S are P := +nS +e P
h’. At least n S are not P := +nS −e P
With these elements, we now introduce the tableaux rules for NTL in Diagram 3: from left to right, the first rule is for universal propositions, the second rule is for particular propositions. Notice that after applying a rule we introduce some index i ∈ {1, 2, 3,.. .} just as in TFL tableaux; but also, notice that after applying a rule we create a vector v by keeping track of the numerical value n of the proposition.

5 This last condition is different from Szabolcsi’s, who considers that the value of the premises need be equal or greater than the value of the conclusion (cf. [22, p.45].


Table 5
A valid numerical syllogism (adapted from [22, p.53])

Table 6
A valid numerical syllogism (adapted from [13])

The third diagram, on the other hand, is a rule for ordering atomic terms with a “+” attached. Now, given these rules, we say A is a logical consequence of the set of terms Γ if and only if there is a complete closed tableau whose initial list includes the terms of Γ and the rejection of A, and v = 0. Accordingly, up next we show some examples of valid inferences (Diagrams 4 and 5) and then we argue that a valid inference in NTL produces a closed complete tree with v = 0 and vice versa.
Proposition 3.1 A valid inference in NTL produces a closed complete tree with
v = 0.
Proof. Consider that a valid inference in NTL may be of two basic general forms (Table 7).
Besides these two general forms, we must consider two cases. For the base case let us consider each basic form. For form 1, take n = m = 0, and for form 2 take n = 0 and m = 1. Hence, NTL collapses with TFL, in which case we just obtain



−nA ±e B


−nAi	±eBi
v = n
+nA ±e B

+nAi


±eBi

v = n

+nA
+k≤nA
Diagram 3: NTL tableux rules


−6C +e L
−20S +e C
▶ −26S +e L
−(−26S +e L)
+26S −e L


+26S1

−eL1

+20S1
−11A +e L
+30M +e A
▶ +19M +e L
−(+19M +e L)
−19M −e L


+30M1

+eA1

+19M1




−20S1
⊥
+eC1

+6C1
−19M1
⊥
−eL1

+11A1



−6C1
⊥
+eL1
⊥
−11A1
⊥
+eL1
⊥

v = +26 − 20 − 6=0 
v = +30 − 19 − 11 = 0


Diagram 4: From left to right, tableaux for Tables 3 and 4

Table 7
Basic general forms of a valid inference in NTL

closed complete trees in TFL. For the inductive case, take n = k and m = j. Such a replacement yields a valid inference in NTL, since all the conditions of a valid inference in NTL are preserved. Now, suppose that each form is also valid in NTL for n = k + 1 and m = j + 1 for k, j > 0, then the trees would look as follows:
2
Proposition 3.2 A closed complete tree with v =0 is a valid inference in NTL.


−3T + (+(+eG +4 B) −5 S)
−2T +e U
−0B +e E
−7S +e I
+50S +e S
+10T +e T
▶ +5U + (+(+eG +4 E) +38 I
−(+5U + (+(+eG +4 E) +38 I)
−5U − (+(+eG +4 E) +38 I
+50S1

+eS1

+10T2

+eT2

+2T2


−2T2
⊥


+eU2

+7S1



−7S1
⊥
+eI1

+38I1

+3T2



−3T2
⊥
+(+eG +4 B) −5 S2

+eG2

+4B2

−5S2

+0B2



−0B2
⊥
+eE2

+4E2

+5U2



−5U2
⊥
−(+(+eG +4 E) +38 I2
−(+eG +4 E) −38 I2


−38I1
⊥

−(+eG +4 E)1
−eG −4 E1



−eG2
⊥
−4E2
⊥

v = +50 + 10 − 2 − 7 − 3+4 − 5 − 0 − 5 − 38 − 4=0 
Diagram 5: Tableau for Table 6

Proof. Suppose there is a closed complete tree with v = 0 that is not a valid inference in NTL. Then there is a closed complete tree whose initial list includes a set of terms Γ, the rejection of the conclusion and v = 0, but from Γ we cannot develop a proof of the conclusion by following the rules of NTL. Without loss of generality, consider the trees corresponding to the valid basic forms of Table 7. Then we have two alternatives whose conclusions are, respectively, −n+mX ±e Y, and +mX ±e Y. Now, since each tree is complete, the rules for generating the trees have been applied; and since each tree is closed, each tree has to have the following forms:
Suppose, then, that we have an instance of the first tree but that the resulting proof is not valid, that is to say, where Γ+ =Γ ∪ {+n+mX ∓e Y}, Γ+ ▶ ⊥, but the application of the rule of inference to Γ does not allow us to produce −n+mX ±e Y. Now, since the tree of the diagram is complete, all the tips are closed, hence the previous nodes have to include something of the form −m+nX ±e Y or −mZ ±e Y and



−k+1X ±e Y
−j+1Z +e X
▶ −k+j+2Z ±e Y
−(−k+j+2Z ±e Y)
+k+j+2Z ∓e Y

+k+j+2Z1

∓eY1

+k+j+2>j+1,∀k,j>0Z1
−k+1X ±e Y
+k+j+2Z +e X
▶ +j+1Z ±e Y
−(+j+1Z ±e Y)
−j+1Z ∓e Y


+k+j+2Z1

+eX1

+k+j+2>j+1,∀k,j>0Z1



−j+1Z1
⊥
+eX1

+e>k+1,∀kX1
−j+1Z1
⊥
∓eY1

+e>k+1,∀kX1

	

−k+1X1
⊥
±eY1
⊥
−k+1X1
⊥
±eY1
⊥

v = +k + j + 2 − (j + 1) − (k + 1)=0	v = +k + j + 2 − (j + 1) − (k + 1)=0 



Γ
▶ −n+mX ±e Y
−(−n+mX ±e Y)
+n+mX ∓e Y

+n+mXi


∓eYi

.
.
.
Γ
▶ +mX ±e Y
−(+mX ±e Y)
−mX ∓e Y

+n+mXi ∈ Γ


±eYi ∈ Γ

+mXi


.
.
.



−n+mXi ∈ Γ
⊥
±eYi ∈ Γ
⊥

−mXi
⊥

∓eYi
⊥

−nX +e Z, that is to say,Γ = {−m+nX ±e Y} or Γ = {..., −mZ ±e Y, −nX +e Z,.. .}. But then, in any case, if we apply condition i) to Γ we obtain something of the form −X ±e Y, and not the other way around due to condition ii); and last, by condition iii)(a), the conclusion has to be of the form −m+nX ±e Y. But that contradicts the assumption that we cannot develop a proof of such conclusion by using the rule of NTL. The same occurs, mutatis mutandis, for the second tree. Thus, Γ = {+mX ±e Y} or Γ = {..., −nZ ±e Y, +m+nX +e Z,.. .}. In any case, if we apply condition i) to Γ we obtain something of the form +mX ±e Y, and not the other way around due to condition ii); and last, by the condition iii)(b), the conclusion has to be something of the form +mX ±e Y. But that contradicts the assumption that we cannot develop a proof of such conclusion.	2

Concluding remarks
In this contribution we have attempted to offer a tableaux method for a family of term logics comprising Term Functor Logic, Intermediate Term Functor Logic, and Numerical Term Logic by using and adapting Murphree’s system. This is possible because TFL and TFL+ are sublogics of NTL and so, in some sense, the method we have developed for NTL represents this family of Sommersian logics. Finally, we have to mention that for the purposes of this paper we have focused only on the terministic features of NTL, but further comparison is required with the algebraic proof systems introduced by [3,2] and alternative term logics like Szabolcsi’s [22], for they may have more or less the same motivation but not the same rules.

References
Aristotle. Prior Analytics. Hackett Classics Series. Hackett, 1989.
Walter A. Carnielli. Polynomial ring calculus for many-valued logics. In 35th International Symposium on Multiple-Valued Logic (ISMVL’05), pages 20–25, May 2005.
Walter A. Carnielli. A polynomial proof system for lukasiewicz logics. In Second Principia International Symposium, August 6-10, 2001.
J.-Mart´ın Castro-Manzano and Paniel-O. Reyes-C´ardenas. Term functor logic tableaux. South American Journal of Logic, 4(1):1–22, 2018.
Marcello D’Agostino, Dov M. Gabbay, Reiner Ha¨hnle, and Joachim Posegga. Handbook of Tableau Methods. Springer, 1999.
George Englebretsen. The New Syllogistic. 05. P. Lang, 1987.
George Englebretsen. Preliminary notes on a new modal syllogistic. Notre Dame J. Formal Logic, 29(3):381–395, 06 1988.
George Englebretsen. Something to Reckon with: The Logic of Terms. Canadian electronic library: Books collection. University of Ottawa Press, 1996.
George Englebretsen and Charles Sayward. Philosophical Logic: An Introduction to Advanced Topics. Bloomsbury Academic, 2011.
Steven T. Kuhn. An axiomatization of predicate functor logic. Notre Dame J. Formal Logic, 24(2):233– 241, 04 1983.
Lawrence Moss. Natural logic. In S. Lappin and C. Fox, editors, The Handbook of Contemporary Semantic Theory. John Wiley & Sons, 2015.
Andrzej Mostowski. On a generalization of quantifiers. Fundamenta Mathematicae, 44(2):12–36, 1957.
Wallace A. Murphree. Numerical term logic. Notre Dame J. Formal Logic, 39(3):346–362, 07 1998.
Aris Noah. Predicate-functors and the limits of decidability in logic. Notre Dame J. Formal Logic, 21(4):701–707, 10 1980.
Philip L. Peterson. On the logic of “few”, “many”, and “most”. Notre Dame J. Formal Logic, 20(1):155– 179, 01 1979.
Graham Priest. An Introduction to Non-Classical Logic: From If to Is. Cambridge Introductions to Philosophy. Cambridge University Press, 2008.
Willard Van Orman Quine. Predicate functor logic. In J E Fenstad, editor, Proceedings of the Second Scandinavian Logic Symposium. North-Holland, 1971.
Fred Sommers. On a fregean dogma. In Imre Lakatos, editor, Problems in the Philosophy of Mathematics, volume 47 of Studies in Logic and the Foundations of Mathematics, pages 47 – 81. Elsevier, 1967.


Fred Sommers. The Logic of Natural Language. Clarendon Library of Logic and Philosophy. Clarendon Press; Oxford: New York: Oxford University Press, 1982.
Fred Sommers. Intelectual autobiography. In David S. Oderberg, editor, The Old New Logic: Essays on the Philosophy of Fred Sommers, pages 1 – 24. Bradford book, 2005.
Fred Sommers and George Englebretsen. An Invitation to Formal Reasoning: The Logic of Terms. Ashgate, 2000.
Lorne Szabolcsi and George Englebretsen. Numerical Term Logic. Edwin Mellen Press, 2008.
Bruce Thompson. Syllogisms using “few”, “many”, and “most”. Notre Dame J. Formal Logic, 23(1):75– 84, 01 1982.
Dag Westerst˚ahl. Aristotelian syllogisms and generalized quantifiers. Studia Logica, 48(4):577–585, Dec 1989.
