Electronic Notes in Theoretical Computer Science 171 (2007) 33–41	
www.elsevier.com/locate/entcs

On Dynamic Distribution
of Private Keys over MANETs
Vanesa Daza1 ,3
Departament d’Enginyeria Informa`tica i Matema`tiques Universitat Rovira i Virgili
Tarragona, Spain
Paz Morillo2 ,4 and Carla Ra`fols2 ,5
Departament Matema`tica Aplicada IV Universitat Polit`ecnica de Catalunya Barcelona, Spain

Abstract
Identity-Based cryptography has been proposed in mobile ad-hoc networks (MANETs) to provide security. However, the figure of the Private Key Generator (PKG) is not adequate in the MANET setting, since it may not be reachable by all nodes, can fail during the life-time of the protocol or can even be attacked, compromising the whole system. Previous works distribute the task of the PKG among a set of nodes by means of a secret sharing scheme.
In this paper we propose an efficient solution to emulate in a dynamic and distributed way the role of the PKG in so that even new nodes joining the network are able to issue shares of the master key of an Identity- Based scheme. In this way, the distributed PKG spreads dynamically among the nodes as the network increases. Furthermore, the techniques we propose may be suitable for other protocols over MANETs.
Keywords: mobile ad-hoc networks, ID-based schemes, secret sharing schemes


Introduction
A mobile ad-hoc network (also known as MANET) is a self-organized wireless net- work of mobile nodes without any fixed infrastructure. Therefore, the network topology may change rapidly and unpredictably.

1 This author is partly supported by the Catalan Government under grant 2005 SGR 00446, and by the Spanish Ministry of Science and Education through project SEG2004-04352-C04-01 “PROPRIETAS”.
2 These authors are supported by Spanish Ministry of Science and Education through project TIC 2003- 00866.
3 Email: vanesa.daza@urv.cat
4 Email: paz@ma4.upc.edu
5 Email: crafols@ma4.upc.edu

1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2006.11.008

Security in MANETs is raising a lot of interest, since some of its characteristics, such as lack of infrastructure, absence of a trusted third party or constraints in the communication channel and the mobile devices themselves, (for instance, energy constraints) make it difficult to secure.
Traditional public key infrastructure is hardly implementable in MANETs, since even if the tasks of a Certificate Authority are emulated or distributed by some nodes in the network, the access to the certificates is extremely costly and difficult to guarantee and should include frequent broadcasts of lists of revoked users.
Recent works proposed the use of Identity Based schemes, in which the public key of a user is a well known aspect of its identity and thus the authenticity of public keys is immediately guaranteed. Moreover, revocation can be implemented adding an expiry date to the identity.
However, one of the main drawbacks of using ID-based cryptography in a mobile ad-hoc network is the need of a Private Key Generator (in short, PKG).
We provide an efficient solution to distribute in a dynamic way the role of the PKG by conveniently using a bivariate polynomial to share the master key. There- fore, this construction provides a solution to jointly perform the role of the PKG in a mobile ad-hoc network.
Somehow, our techniques can be seen as a secret sharing scheme without a fixed set of nodes holding shares of a secret. We stress that, in our construction, the secret does not change throughout the life-time of the MANET, independently if new nodes are jointed or not. This point makes our construction especially suitable for dynamically distribute the master key of the Identity-Based Scheme.
Note that in our scheme threshold property is not the goal, but a tool to initialize a MANET with security, decentralized and allowing dynamism.
On top of all the natural features of Identity Based schemes, our proposal also provides a non-interactive pairwise key agreement.
Summing up, with our proposal, we provide an efficient solution of performing a Private Key Generator in a MANET. The whole combination of efficiency, ID-based feature and mobile ad-hoc network scenario have not been proposed before, up to our knowledge.

Previous Work
Several works [9,10,5] stress suitability of ID-based schemes for securing ad-hoc networks. Authors in [5,10] suggest emulating the public key generator by using a (t, n)-threshold secret sharing scheme in a similar way as in wired networks (see, for example [8]). However this solution lacks of the required dynamism for a mobile ad-hoc network. For example, at least t of the initial nodes that jointly play the role of the public key generator must be reachable throughout the life of the MANET for any new node joining the network.
On the other hand, Saxena et al., in [12], provide a solution that allows new nodes to play the role of share distributors, but at the cost of a very interactive procedure. This is hard to implement in MANETs as for example high energy

consumption is needed for communications.
Actually, since the first proposal relating threshold cryptography and mobile ad-hoc networks [15], threshold secret sharing has been also used in other works for securing ad-hoc networks [6,7] in a dynamic way. Furthermore, they show how to construct threshold signatures in the dynamic scenario of a mobile ad-hoc network, pointing out the possibility of extending their results to other cryptographic actions. Recently, Saxena et al. [13] provide an efficient admission protocol for ad-hoc networks. They make use of similar secret sharing techniques as in our paper, but
their goal is to establish a pairwise key in a non-interactive way.
Outline of the paper: The rest of the paper is distributed as follows. Section 2 reviews some basic concepts on ID-based schemes and secret sharing schemes. Our proposal for adapting the role of a PKG to a MANET is detailed in Section
3. Some applications that derive from our construction are described in Section 4. Finally, we conclude in Section 5.

Preliminaries
In this section we briefly review some concepts that will be useful in the rest of the paper. We begin by defining ID-based schemes and fixing some notation. After- wards, we review some basics on secret sharing schemes.

ID-Based Schemes
In an identity-based encryption scheme, a pair master public key/ private key is generated by the PKG. Once this master key is established, arbitrary identities may be used as public keys for the scheme. When a sender wants to encrypt a message for a recipient with identity ID, he only needs the master public key and the identity ID. In order to decrypt a message, the user ID must obtain the corresponding private key from the PKG.
More formally, an identity-based encryption scheme is specified by four proba- bilistic polynomial time (PPT) algorithms (see for instance [2]):
ID.Gen takes a security parameter k and returns the system parameters ID.pms and master private key ID.msk. The system parameters include the master public key and the description of sets M, C, which denote the set of messages and ciphertexts respectively. ID.pms is publicly available, while ID.msk is kept secret by the trusted authority.
ID.Ext takes as inputs ID.pms, ID.msk and an arbitrary string ID ∈ {0, 1}∗ and returns a private key dID to the user with identity ID. This must be done over a secure channel, since dID enables to decrypt ciphertexts under the identity ID.
ID.Enc takes as inputs ID.pms, ID ∈ {0, 1}∗ and M ∈ M. It returns a ciphertext
C ∈ C.
ID.Dec takes as inputs ID.pms, C ∈ C and a private key dID, and it returns
M ∈ M or rejects.

In this paper we will consider the Identity Based scheme proposed by Boneh and Franklin in 2001 [2]. The system parameters are params = (q, G, G1, e, P, Ppub) where G, G1 are groups of the same prime order q, Ppub = sP is the master public key, s is the master secret key and e is an admissible pairing. Admissible pairings are maps e : G × G → G1 with the following properties:
Bilinear: e(aP, bQ)= e(P, Q)ab
Non-degenerate: e(P, P ) /= 1G1 for all P ∈ G
Computable: there exists an efficient algorithm to compute e(P, Q) for any
P, Q ∈ G.
Secret Sharing Schemes
The idea of secret sharing schemes was independently introduced by Shamir [14] and Brickell [3]. Roughly speaking, the problem is to deal pieces, or shares, of a secret among a set of parties so that some coalition of them can jointly reconstruct it.
More formally, a secret sharing scheme is a method by means of which an special figure, called usually dealer, shares a secret s among a set У = {P1,... , Pn} of n parties. Each party Pi is to receive privately from the dealer a piece of information si so that s is reconstructible from any set of t +1 of the si, but no set of less than t of the si supplies any information about s. The family of subsets of players that are allowed to recover the secret is called access structure. We refer to this particular case, where sets with more than t + 1 players are authorized to recover the secret, as (t, n)- threshold access structures.
Shamir’s secret sharing scheme [14] realizes (t, n)-threshold access structures by means of polynomial interpolation. We briefly review it next:
Let Zq be a finite field with q > n and let s ∈ Zq be the secret. The dealer picks a polynomial P (x) of degree at most t, where the free term of P (x) is s and all other coefficients are selected from Zq, uniformly and independently, at random. That is, P (x) has the form:
P (x)= Σ ajxj
j=0
Every party Pi is publicly associated to a field element αi. Distinct parties are mapped to distinct field elements. The dealer privately sends to party Pi the value
si = P (αi)= Σt	ajαj, for i = 1,... , n.
Lets see that the scheme realizes a (t, n)-threshold access structure. Let us assume the set of parties willing to recover the secret s is {P1,... , Pt+1}.  The

secret s can be obtained from s1,... , st+1 as Σt
λisi, where λi = 
  αj 
j/=i αj —αi

the Lagrange coefficients.
It is not difficult to prove that any set of less than t + 1 parties obtains no information about s, that is, any secret is equally probable given the shares of this set.
A generalization of Shamir secret sharing scheme has also been widely used to distribute points on elliptic curves [2,1]. For our construction we will need to

distribute the private keys in an ID-based scheme, that is private keys of the form sQm, where Qm is a point on the elliptic curve. This is simply realized by sharing s as in the previous paragraph and setting the products siQm to be the shares of the secret sQm. Trivially, this realizes a (t, n) threshold secret sharing scheme, since: ΣλisiQm = (Σλisi)Qm = sQm.

Dynamic Distribution of Keys for ID-Based in MANETs
In this section we provide a solution for the distribution of keys for ID-Based in a mobile ad-hoc network. First of all, we describe the scenario we consider in this paper and afterwards, we propose a solution fitting our proposed scenario to provide the corresponding private keys to new nodes joining the MANET.

Setting up the Scenario
Let N = {N1,... , Nm} be the set of possible nodes of a mobile ad-hoc network, where m is an upper bound on the possible number of nodes.
Every node has an own unique identity ID, that must be bound to the node for its entire lifetime, non transferable and verifiable. We will note the identity of the node Ni as IDi. Identities of network nodes could be chosen in different ways. For example, [9] gives some different options to choose the identities of the nodes, distinguishing three cases of nodes an identity is bound to:
a user operating a network node, i.e. the ID string corresponds to the user, e.g. the user’s email address;
a device, i.e. the ID is bound to the hardware, e.g. the MAC address;
a network interface, in that case the ID might be derived from the IP address. We assume that, initially, the MANET is composed by a set of nodes NF =
{N1,... , Nl}. These nodes are the founders of the MANET. Considering the high
probability that they meet each other at the time of MANET foundation, we assume these nodes to be pairwise securely connected. If this is not the case, this fact can be simulated by using some secure routing protocol technique [11].
We consider two different types of nodes. On the one hand, a node that is able to provide shares of the master key. We refer to this kind of node as a sharing master node or simply as a node. We also consider nodes in the MANET that, although connected to the set of nodes, are not able to provide shares of the master key. We refer to these nodes as potential nodes.
Roughly speaking, in our proposal, founder nodes jointly generate shares of the master key s. The way nodes generate this information will be described in detail in Section 3.2. In this way, founder nodes become nodes of the MANET.
The use of the shares is two-fold: on the one hand, they will allow to provide to a new node requiring its secret key, shares of it. On the other hand, if a new node has received enough information from a subset of nodes in NF , this potential node

becomes a node. With this technique, the set of nodes performing the task of the PKG in a distributed manner spreads over the network dynamically.
We stress that our proposal specially suits the mobility condition of MANETs. Indeed, a potential node may obtain a set of shares of its secret key from a set of nodes. Even if it moves away, connecting in this way to a different set of nodes in the MANET, it can recover its private key after obtaining enough shares from nodes in the MANET.
Due to space constraints, we focus on a honest-but-curious scenario. That is, we assume that some set of corrupted nodes (either nodes or potential nodes) get information from honest nodes but perform the protocol correctly. From now on, we assume any set of corrupted nodes has cardinality at most t.

Dynamic ID-Based Keys in MANETs
Next we describe in detail our protocol. First of all we describe the part where the founder nodes jointly create shares of the master key. Afterwards, we detail the phase where a potential node connected to a node of the MANET requires a share of its secret key to a set of nodes in the MANET. Finally, we show the phase where a potential node turns into a master node after obtaining enough information from a set of master nodes. We refer to these three phases as Initialization Phase, Request and Computational Phase and Node Aggregation Phase respectively.
Initialization Phase This phase is performed only once in the protocol. Founders of the MANET perform it at the beginning of the protocol. We assume the set of founder nodes is NF = {N1,... , Nl}. This part of the protocol basically consists of the joint generation of a random secret value in Zq. To do so, the idea is that founders jointly set up a (t, l)-threshold secret sharing scheme using bivariate polynomials. Then, shares are univariate polynomials instead of field elements as in [14]. Although this fact increases the complexity of the protocol depending on the chosen parameter t, it is necessary to provide dynamism to the protocols, which is crucial in MANETs because of their inherent mobility and unpredictability.
Note that we are considering the case where t < l. If this is not the case, some simple solutions can solve this problem. For example, founders can try to increase the set of founder nodes or instead of this decrease the threshold t.
Every node Ni, for i = 1,... , l, chooses a random symmetric bivariate polyno- mial Pi(x, y) in variables x and y with degree at most t in each of them. We write the polynomial as


t
i	i
k,j

xkyj,


where ai

∈ Zq and ai


i j,k
k,j=0

for any k, j = 0,... , t.

Every node Ni, for any i = 1,... , l, sends to the rest of founder nodes Nj,
the univariate polynomial resulting of evaluating Pi(x, y) in y = hj, where

hj = h(IDj ) for a hash function h : {0, 1}∗ → Zq. That is, Pi(x, hj ). We refer to
this univariate polynomial as Pi(x). Further, we note P (x, y)= Σl	Pi(x, y).

j
Finally, every node Ni computes
i=1

l	l
Si(x)= Σ Pj(x)= Σ Pj(x, hi)= P (x, hi).
j=1	j=1
The jointly generated random secret will be s = Σl	Pi(0, 0) = P (0, 0) and the
share of the secret of a node Ni will be the value si = Si(0) = P (0, hi).
It is not difficult to check that the previous protocol realizes a (t, l)-threshold access structure.
Request and Computational Phase Let Nm be either a master key node or a potential node with identity IDm willing to obtain the secret key that matches with its public key Qm = H(IDm). The secret key will be dm = sQm, where s is the secret that has been jointly generated by nodes in NF as described before. In order to obtain its secret key, Nm must request a set of master nodes for his secret key. After certain authentication, contacted nodes will provide it with some pieces of information that will allow it to compute its secret key. More specifically:
Nm selects a group Nm of at least t + 1 nodes from the set of neighbour nodes
Nm is connected with. Without loss of generality, we assume this set of nodes is N˜m = {N1,... , Nt+1}.
Nm requests its share of dm to every node in N˜m.
Node Ni, for i = 1,... ,t+ 1 sends to Nm the piece of information Qi	= siQm.

Ni is able to compute its secret key dm as dm = Σl
i priv
, where the λi’s

are the appropriate Lagrange coefficients.
Remark 1. Note that in case Nm is a founder node, then Nm only needs to interact with a subset of t nodes in order to obtain enough shares to compute its secret key dm.
Remark 2. If node Nm is connected to a number of nodes less than t + 1, it can request its secret key dm to this set of nodes, and after obtaining the corresponding sharing, use its mobility to connect to other different nodes and request for its secret key. In such a way, when Nm has t + 1 different shares he will be able to get the secret key in the same way as described before. We stress that in this case, the mobile potential node does not have to request to a set of a least t + 1 nodes, but Nm can re-use previously obtained shares from other nodes.
Node Aggregation Phase Let Nm be either a master node or a potential node with identity IDm as before. Potential nodes may turn into a master node if they are connected to a set of at least t + 1 nodes and they request and receive corresponding information from this set.
More specifically the protocol must be realized as follows:
Nm selects a group Nm of at least t + 1 nodes from the set of nodes Nm is connected with. Without loss of generality, we assume this set of nodes is

Nm = {N1,... , Nt+1}.
Ni requests to be accepted as a node.
Node Ni, for i = 1,... ,t + 1 sends to Nm the piece of information P (hi, hm)= 
Si(hm)= Sm(hi).
Then, Nm is able to obtain his polynomial share Sm(x) by using Lagrange interpolation:


S (x)= Σ  x − hj  S (h
)= Σ   x − hj  P (h ,h 
)= P (x, h ),

m
i=1 j/=i
hi − hj i	m
i=1 j/=i
hi − hj	i	m	m

and compute its share of the secret s as sm = Sm(0).
Applications
In this section we point out some applications that derive from our construction.
Identity-Based Cryptography As a direct application of our construction, nodes in a MANET can take advantage of the benefits that Identity Based Public Key Cryptography (ID-PKC) entails. For example, the ID-based signature scheme of Cha and Cheon [4]. The problem of revoking users can be addressed by including an expiry date in the identity corresponding to every node.
Threshold cryptography Most of threshold cryptography protocols use Shamir secret sharing as building block. For example, threshold signature schemes combine both secret sharing and digital signature schemes.
We suggest, as alternative, using algebraic properties of bivariate polynomials as a building block for other threshold cryptography protocols over MANETs, rather than the classic Shamir scheme.
Key Agreement The public keys of the nodes allow them to agree on a sym- metric key. However, as was noted for example in [9], two nodes share the following private information
K1mn = e(dm, Qn)= e(dn, Qm)= K1nm
in a non-interactive way.  K1nm can be used as a symmetric key.  Recall that
Qi = H(IDi) and di = sQi.
Saxena et al. in [13] suggest using K2nm = Sm(hn) = Sn(hm) as common secret key. If the identities of the nodes include some expiry date, since K1nm depends on the identities IDm, IDn, K1nm changes for every period, while K2nm remains constant. Thus, a node can be compromised for a period without jeopardizing its communications for future periods.
Verifiability and Traceability Verifiability is easy to implement, since the founder nodes must sign a group key including Ppub = sP , and after reconstructing its private key dm, node Nm can easily check whether e(Ppub, Qm)= e(P, dm).
Traceability can also be implemented with the usual verifiable secret sharing (see for example [13]).

Conclusion
In this paper we propose a method to distribute among a set of nodes the role of the private key generator in a mobile ad-hoc network. In such a way that, not only initial sharing holder nodes can provide shares of the master key, but also new nodes joining the network, if certain connection constraints are satisfied.
On top of all the natural features of Identity Based schemes, our proposal also provides a non-interactive pairwise key agreement. Techniques on bivariate polyno- mials may also apply to other distributed dynamic protocols.

Acknowledgements
We thank Giovanni Di Crescenzo and Javier Herranz for useful suggestions and comments.

References
Baek, J., and Y. Zheng. Identity-based threshold decryption. In PKC, volume 2947 of Lecture Notes in Computer Science, pages 262–276. Springer-Verlag, 2004.
Boneh, D., and M. Franklin. Identity-based encryption from the weil pairing. In Advances in Cryptology - CRYPTO ’2001, volume 2139 of Lecture Notes in Computer Science, pages 213–229. Springer-Verlag, 2001.
Brickell, E.F. Some ideal secret sharing schemes. J. Combin. Math. and Combin. Comput., 9:105–113, 1979.
Cha, J.C., and J.H. Cheon. An identity-based signature from gap Diffie-Hellman groups. In Public Key Cryptography, volume 2567 of Lecture Notes in Computer Science, pages 18–30, 2003.
Deng, H., A. Mukherjee, and D.P. Agrawal. Threshold and identity-based key management and authentication for wireless ad hoc networks. In International Conference on Information Technology: Coding and Computing (ITCC’04), volume 1, pages 107–115, 2004.
Di Crescenzo,G. , G.R. Arce, and R. Ge. Threshold cryptography for mobile ad hoc networks. In volume 3352 of Lecture Notes in Computer Science , pages 91–104, 2004.
Di Crescenzo,G., R. Ge, and G.R. Arce. Improved topology assumptions for threshold cryptography in mobile ad hoc networks. In Proceedings of the 3rd ACM workshop on Security of ad hoc and sensor networks, pages 53–62, 2005.
Herranz, J. and G. S´aez . ”Distributed key generation for id-based schemes”. In Proceedings of VIII Spanish Meeting on Cryptology and Information Security, RECSI’04, pages 215–223, 2004.
Hoeper, K., and G. Gong. Bootstrapping security in mobile ad hoc networks using identity-based schemes with key revocation. Technical report, University of Waterloo, Canada, 2006.
Khalili, A., J. Katz, and W.A. Arbaugh. ”Toward secure key distribution in truly ad-hoc networks”. In Proc. of IEEE Security and Assurance in Ad-Hoc Networks at Int’l Symp. on Applications and the Internet (SAINT’03), volume 22, pages 342–346. IEEE, 2003.
Li, J., Y. Pan, and Y. Xiao. Performance study of multiple route dynamic source routing protocols for mobile ad hoc networks. J. Parallel Distrib. Comput., 65(2):169–177, 2005.
Saxena, N., G. Tsudik , and J.H. Yi. Identity-based access control for ad hoc groups. In Proceedings of Information Security and Cryptology, pages 362–379, 2004.
Saxena, N., G. Tsudik , and J.H. Yi. ”Efficient node admission for short-lived mobile ad hoc networks”. In Proceedings of 13th IEEE International Conference on Network Protocols, pages 269–278, 2005.
Shamir, A. How to share a secret. Commun. ACM, 22(11):612–613, 1979.
Zhou, L. and Z.J. Haas. Securing ad hoc networks., 13(6):24–30,1999. IEEE Network.
