Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 341 (2018) 297–320
www.elsevier.com/locate/entcs
Modality via Iterated Enrichment
Yuichi Nishiwaki1 Yoshihiko Kakutani2 Yuito Murase3
Department of Computer Science, University of Tokyo

Abstract
This paper investigates modal type theories by using a new categorical semantics called change-of-base semantics. Change-of-base semantics is novel in that it is based on (possibly infinitely) iterated enrichment and interpretation of modality as hom objects. In our semantics, the relationship between meta and object levels in multi-staged computation exactly corresponds to the relationship between enriching and enriched categories. As a result, we obtain a categorical explanation of situations where meta and object logics may be completely different. Our categorical models include conventional models of modal type theory (e.g.,
cartesian closed categories with a monoidal endofunctor) as special cases and hence can be seen as a natural refinement of former results.
On the type theoretical side, it is shown that Fitch-style modal type theory can be directly interpreted in iterated enrichment of categories. Interestingly, this interpretation suggests the fact that Fitch-style modal type theory is the right adjoint of dual-context calculus. In addition, we present how linear temporal, S4, and linear exponential modalities are described in terms of change-of-base semantics. Finally, we show that the change-of-base semantics can be naturally extended to multi-staged effectful computation and generalized contextual modality a la Nanevski et al. We emphasize that this paper answers the question raised in the survey paper by de Paiva and Ritter in 2011, what a categorical model for Fitch-style type theory is like.
Keywords: Lambda Calculus, Curry-Howard Isomorphism, Modal Logic, Enriched Category Theory


Introduction
Since the Curry-Howard isomorphism was proposed, intuitionistic logic has at- tracted many logicians and computer scientists. As a result, the basic results not only on propositional implicational logic but also on dependent or higher-order ex- tensions were established. Nevertheless, how to deal with (necessity) modality in intuitionistic logic still remains to be an intricate problem. Especially the type the- oretic aspects (or equivalently, natural deduction systems) of intuitionistic modal logic are rather undeveloped.
For the logical aspects of intuitionistic modality, the currently accepted form of definition first appeared independently in [20,40]. In their papers, Kripke-style

1 Email: nyuichi@is.s.u-tokyo.ac.jp
2 Email: kakutani@is.s.u-tokyo.ac.jp
3 Email: murase@lyon.is.s.u-tokyo.ac.jp

https://doi.org/10.1016/j.entcs.2018.11.015
1571-0661/© 2018 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

semantics called birelational models is defined, and Hilbert-style axiomatizations for some intuitionistic modal logics including K, S4, and S5 are provided. The history of intuitionistic modal logic and systematic comparisons of various systems ever proposed can be found in [43,33]. For the type theoretic aspects, on the other hand, the approaches are diverse. As of this writing, there are mainly three types of natural deduction systems that have gained popularity, called Gentzen-style [4,28], dual-context [18,30], and Fitch-style [37,13] systems. For the first two systems, their computational and categorical aspects are intensively investigated in a number of papers [17,29], and applied in multi-staged computation [15,39]. However, despite that it was temporally the first system of modal type theory for intuitionistic K, Fitch-style type theory yet remains the least developed regarding its operational and categorical semantics. In a survey paper [17], de Paiva and Ritter asked how one can describe Fitch-style type theory computationally and categorically, not in terms of syntactic translation via Gentzen-style calculus. Clouston, in a recent paper [13], gave a partial answer to this question by proposing a sound but incomplete categorical model for Fitch-style modal calculus. The main aim of this paper is to answer fully this question. Our slogan is “Fitch-style type theory corresponds to iterated enrichment of categories, and boxes are hom objects”.
In this paper, we offer a categorical semantics to Fitch-style modal type theory from the viewpoint of enriched categories. In our semantics, if a type A is inter- preted as an object in an enriched category A, 2A is then interpreted as an object in its enriching category V. Similarly, judgments before and after necessitation are interpreted as morphisms in (the underlying category of) A and V, respectively. Following this style, it would be natural to distinguish judgments with and without boxed types also in syntax. This kind of distinction is quite reasonable especially when we regard the calculus as multi-staged computation, as compile-time and run-time environments are usually different. For that reason, we first generalize Fitch-style modal type theory by introducing levels of judgments. Just by ignoring levels, we obtain a usual Fitch-style calculus. In addition to the syntactic ingre- dient, we also need to formalize inﬁnitely iterated enrichment of categories, since modality may be nested arbitrarily deeply. In this paper, we exploit change-of-base construction of enriched categories to define such a structure.
Our research contributions are summarized as follows.
We discovered that modality in type theory captures the enrichment structure in the categorical semantics. In particular, we pointed out that (contextual) modality can be viewed as external hom objects.
We defined iterated enrichment based upon the change-of-base construction and introduced two constructions of them.
We compared our semantics syntactically e.g. with dual-context calculi and se- mantically e.g. with linear non-linear models.
Organization. In Section 2, we introduce multi-level Fitch-style modal type theory λ2, the type theory in question in this paper. We also compare it with other styles of modal type theories. In Section 3, we show that infinitely iterated

Levels l ∈ N	Contexts Γl ::= x1 : Al , ··· , xn : Al
n

Types Al, Bl  ::= ιl  | Al  → Bl  |
2Al−1 (l ≥ 1)
Context Stacks Δl ::= Γl+n−1; ··· ; Γl



(x : Al) ∈ Γl Δl+1; Γl ▶l x : Al
Var
Δl+1; Γl,x : Al ▶l M : Bl
Δl+1; Γl ▶l λx.M : Al → Bl
Abs



Δl ▶l M : Al → Bl	Δl ▶l N : Al App Δl ▶l MN : Bl
Δl+1; · ▶l M : Al
Δl+1 ▶l+1 ‘M : 2Al
Quo

Δl+1 ▶l+1 M : 2Al Unq
Δl+1; Γl ▶l ,M : Al
Fig. 1. Inference rules for λ2

enrichment of categories gives sound and complete semantics of λ2. In Section 4, we present two constructions of infinitely iterated enriched categories. In Section 5, we explain how one can model various kinds of computation in terms of our semantics. Particularly, program-generating programs, !-modality in linear calculus, and multi- staged effectful computation are discussed. In Section 6, we generalize the type theory and the semantics to contextual modality.

Modal Type Theories
We introduce the multi-level Fitch-style modal type theory λ2. We also compare
λ2 with other variants of modal type theories.

Multi-level Fitch-style System
Figure 1 presents the inference rules for the λ2 calculus which we work on in this paper. Our λ2 is a Fitch-style modal natural deduction system[11]. A (hypotheti- cal) judgment in a Fitch-style modal type theory differs from ones in ordinary type theories in that it has on the left side a stack of contexts instead of a single context. As shown in Figure 1, contexts in a context stacks are delimited with semicolons in the literature. Most of the time, only the rightmost compartment of a context stack is concerned with type derivation. Only when introducing a box or unboxing a term, the context stack is (un)shifted and the second rightmost compartment is then focused. Boxing is only allowed for judgments with the rightmost compart- ment empty. This corresponds to the fact that a boxed proposition is an assertion of the validity of the proposition in modal logic. For the more detailed description of Fitch-style calculi, a survey [17] should be helpful. Notations of boxing and un- boxing vary with systems: they are denoted by box(M ) and unbox(M ) in [10,32],
genM and ungenM in [37], kˆM and kˇM in [11], <M > and ~M in MetaML [44],
shutM and openM in [13], and nextM and prevM in λ⃝ [15]. We borrowed terms
quotation and unquotion and notations ‘M or ,M from Lisp [26].

Our λ2, however, differs from Borghuis’ original formulation in some points. One difference is that we omitted rules and constructs for higher-order and dependent functionalities since we are only interested in the first-order propositional fragment. However, removal of the weakening rule from the calculus makes the deduction the- orem fail. To remedy this issue, we modified unquotation to allow the rightmost context to be weakened 4 , which approach is also taken in [22]. Another difference is that, in λ2, every type and judgment has an intrinsic level which is a natural number. A level may be viewed as the stage of the computation. Whereas abstrac- tion and application are closed under each level, quotation and unquotation change the level, i.e., the stage of computation by one. Since all base types are leveled by default, our λ2 models computation in which there may be different universes of types and primitives for each stage. In the rest of the paper, we always use the turnstyle for leveled systems by ▶l and that for unleveled systems by ▶. However, levels of types and contexts in a judgment are often omitted because they are easily inferable from the level of the judgment. We call the corresponding logic of the λ2 calculus IK.
Lemma 2.1 The weakening, exchange, contraction, and substitution rules are ad- missible in IK.
The exchange, contraction, and substitution rules must be operated for each level. For example, the substitution rule is explained as follows.


Δ; Γ , A, Γ ; Δj ▶l B	Δ; Γ
▶l+#Δ′ A

	1		2	3	 S Δ; Γ1, Γ3, Γ2; Δj ▶l B
Note that #Δ denotes the depth of Δ as a stack. The following theorem renders the name of the logic consistent with the convention. There is an obvious forgetful function |·| from leveled judgments to unleveled judgments that forgets levels.
Theorem 2.2 Δ ▶ A if and only if there exists a level l such that Δ ▶l A and
|Δ ▶l A| =Δ ▶ A.
It is known that unleveled Fitch-style system is equivalent to the smallest intu- itionistic normal modal logic w.r.t. provability. The leveled Fitch-style system hence just refines proofs of intuitionistic K by introducing levels. Note that |·| can be eas- ily extended to a proof-relevant function (e.g., |λx.M : Al → Bl| = λxl.|M : Bl|). With this extension, the only-if direction in the above theorem states that given a proof tree in the unleveled Fitch-style modal calculus, we can reconstruct a proof in the leveled system just by attaching levels assuming appropriate base types. For example, a proof term for the leveled version of the axiom K is λx.λy.‘((,x)(,y)) : 2(Al → Bl) → 2Al → 2Bl. By the following lemma, we can identify two context stacks Δ and ·; Δ, where · is an empty context.
Lemma 2.3 ·;Δ ▶l A if and only if Δ ▶l A.

4 In [17], Borghuis’ calculus is similarly reduced to the propositional fragment, but this issue is left unfixed.

Then the so-called denecessitation theorem [25, Chapter 20] immediately follows.
We will later review this in Section 3.
Corollary 2.4 (Denecessitation) If ▶l+1 2A, then ▶l A.
Computational behaviors of quotation and unquotation are explained in terms of code generation: quotation creates a code template and unquotation makes holes in a template. Formally, the dynamics of λ2 are defined in terms of the following rules for the 2 type in addition to the usual βη rules.

β2	η2
,‘M −→ M	M −→ ‘,M if M : 2A
Although the βη rules for the 2 type look intuitive enough, the β rule for the →
type must be carefully extended to terms with mixed levels.
Definition 2.5 Substitution [N/x]M is given by [N/x]0M , where [N/x]n is induc- tively defined as follows.


[N/x]n
y =	N	(n =0 ∧ x = y) y	(otherwise)
[N/x]n
‘M = ‘[N/x]

n+1M



[N/x]n
,M =	,[N/x]n−1M	(n > 0)
,M	(otherwise)

Other cases are omitted.
Our substitution rule is intended to allow two contexts of different levels to contain variables with the same literal names. Consider a term (λx.‘λx.(x(,x)))y. The first occurrence of x is a constituent of the code template ‘λx.(x(,−)) whereas the second one x is not (notice that they have different levels), so y is substituted only for the second occurrence, resulting in ‘λx.(x(,y)). λ2 enjoys the usual meta- theoretical properties.
Theorem 2.6 Subject reduction, strong normalization, and the Church-Rosser prop- erty hold for the β rules.
Other Systems
Many deductive systems of modal logic other than Fitch-style have been proposed. Especially, streams of Gentzen-style and dual-context systems are important in the field of computer science.
The Gentzen-style system is basically a usual natural deduction system of in- tuitionistic propositional logic but together with the following additional inference rule for boxes. In Gentzen-style, in contrast to Fitch-style, the introduction and elimination rules for 2 are mixed into a single rule; logical harmony a la Dummett is dismissed.
x1 : A1, ··· , xn : An ▶ M : B	Γ ▶ N1 : 2A1	···	Γ ▶ Nn : 2An
Γ ▶ box x1, ··· , xn be N1, ··· , Nn in M : 2B

This calculus is investigated in some papers [4,28,27]. Logical provability of the Gentzen-style modal type theory is equivalent to intuitionistic K. The desired syn- tactic properties such as strong normalization and categorical semantics are pro- vided in the papers. It has been shown that the calculus is sound and complete for cartesian closed categories with lax monoidal endofunctors. As discussed in [27], it is also possible to consider strong monoidal functors with some additional equations. Here, we refer to the strong monoidal version of the soundness and completeness.
Theorem 2.7 A Kripke category is a cartesian closed category endowed with a strong monoidal (i.e., ﬁnite product-preserving) endofunctor. Kripke categories are sound and complete for the Gentzen-style modal type theory.
Dual-context system was first introduced in [1] to study exponentials of linear logic (IMELL), and later refined by several authors [10,30] to accommodate more logics including the intuitionistic K and S4. Judgments in dual-context systems have two contexts separated by |, the left side of which is called modal context. As well as Fitch-style, only the right-hand side context is used when deriving non-modal constructs. The box of the dual-context system is characterized by the following two rules.

· | Γ ▶ A
Γ | Γj ▶ 2A

2-I
Γ | Γj ▶ 2A	Γ,A | Γj ▶ B
Γ | Γj ▶ B

2-E

It is also known that a Kripke category can be a model of the dual-context system [30]. The interpretation of a dual-context judgment in a Kripke category with F is straightforward if we assign terms to proofs appropriately.
JΓ | Γj ▶ M : A) : F JΓ) × JΓj) → JA)
We shall revisit the dual-context system in Section 5.2, and discuss another kind of semantics.
Change-of-base Semantics
This section presents our main results, soundness and completeness results of the change-of-base semantics.
Idea
To illustrate our idea briefly, we give an interpretation of the two-level fragment of λ2 in the change-of-base semantics. In the following, we assume that for any type judgment all contexts whose level is greater than one are trivial. We also assume that the quotation and unquotation rules in level 1 are disabled.
The categorical setting is as follows. Suppose V is a cartesian closed category and A is a cartesian closed V-enriched category, which is a V-category with V-enriched (finite) products and exponentials (defined as the right V-adjoint), with V-natural transformations π : A × B ⇒ A, ϵ : BA × A ⇒ B, and ! : A ⇒ 1. Any judgments of

Γj;Γ ▶0 x : A

Var

Γj −→! 1 −→π  A(Γ, A)


j ⟨M,N⟩
Γj;Γ ▶0 MN : B
A	∼ A(Γ, BA


A(Γ,є)
App

Γ −−−−→ A(Γ,B 
) × A(Γ, A) =
× A) −−−−→ A(Γ, B)

Γj;Γ ▶0 λx.M : A → B
Γ ▶1 ‘M : 2A Quo

j M	∼
Abs
A


Γ −M→ A(1, A)

Γ −→ A(Γ × A, B) = A(Γ,B )

Γj;Γ ▶0 ,M : A
j M	A(!,A)
Unq

Γ −→ A(1, A) −−−−→ A(Γ, A)
Fig. 2. Interpretation of two-level λ2 in a U -enriched category A (with identification of JA) and A)
both level 0 and 1 are interpreted as morphisms in V. But types are interpreted as objects either of A and V depending on their levels: types of level 0 become objects in A and ones of level 1 in V.
We define an interpretation of judgments by induction on typing derivation. For readability, we may identify terms with judgments and write just JM ) for JΔ ▶l M : A). If M is of level 1 and involves no box types, we interpret it in V in the conventional way of interpretation of λ→ in cartesian closed categories [35]. If M is of level 0 and its context of level 1 is trivial, we interpret it in the under- lying category A0 of A, which is in fact a cartesian closed (ordinary) category, in the usual way again. Note that a morphism in A0 is a morphism in V by definition: X → Y in A0  1 → A(X, Y ) in V. Therefore, JΓ ▶0 M : X) : JΓ) → JX) = 1 → A(JΓ), JX)). Otherwise, we interpret it directly in V as in Figure 2. 2 is interpreted as the monoidal covariant hom functor A(1, −). In this way, judgments Γ; · ▶ A and Γ ▶ 2A become exactly the same morphism. We consider this reflects the fact that quotation involves no computational contents and is just a transition of viewpoints on the same morphism, from object level to meta level.

Inﬁnitely Enriched Categories
We establish a mathematically precise formulation of the idea presented in the previous subsection. The major difficulty in formalization is that we need to model infinitely many universes of the logic with infinitely iteratively enriched categories. For calculi with finitely many levels, it suffices to construct a concrete chain of iterated enrichment in which a category of level l is enriched over another category of level l + 1. One approach to generalize finite iteration of enrichment to infinite
is to assume an infinite sequence ⟨Cn⟩n of cartesian closed categories, an infinite sequence ⟨An⟩n of cartesian closed categories An enriched over Cn+1, and extra equations (An)0 = Cn. This definition is intuitive but too naive to be compared with other models e.g. Kripke categories. Instead, we exploit the change-of-base construction of enriched categories to resolve this issue.
Proposition 3.1 (Change of base) For monoidal categories V and W, a monoidal

functor L : V → W, and a V-category A, L induces a W-category L∗A. L∗A has the same collection of objects as A, and hom objects L∗A(X, Y ) given by LA(X, Y ).
For a symmetric monoidal category V, monoidal V-category and related concepts are defined as usual (see also Appendix A). In fact, it is known that symmetric monoidal closed categories enriched over a symmetric monoidal closed category behave quite well. Our approach exploits the following very important result on such enriched categories.
Definition 3.2 Given a monoidal V-functor F : A → B, the comparison morphism
F	B(ι,F−)	5
of F is a V-natural transformation θ : A(I, −) −→ B(FI, F−) −−−−−→ B(I, F−)	.
Definition 3.3 A monoidal V-functor F : A → B is normal 6 if the comparison morphism of F is an isomorphism.
Theorem 3.4 ([36]) Let V be a symmetric monoidal closed category. The follow- ing data are equivalent up to isomorphism.
A symmetric monoidal closed V-category A.
A symmetric monoidal closed (ordinary) category A and a normal symmetric monoidal functor L : A → V.
Proof. We use change of base in the proof of the upward direction. See the sketch in Appendix B.	2
This result naturally allows us to extend the definition of finitely iterated en- richment to infinite. Intuitively, an infinitely enriched category is a (co-)limit of the chain of such iterated enrichment.

 V_,3
 V_ 2
 V_ 1
enrich  V_ 0

···
  
(V3)0
  
(V2)0
  
(V1)0
 un derlying cat.
(V0)0

Definition 3.5 An inﬁnitely enriched category V is a functor from ω to the cat- egory NorSMCCat of all symmetric monoidal closed categories and symmetric monoidal normal functors.

··· ¸2,3
V3 ¸2,2
V2 ¸2,1
V1 ¸2,0  V0

Remark 3.6 Readers may read the definition above coinductively: “an inﬁnitely enriched category is a symmetric monoidal closed category enriched over another infinitely enriched category.”
We informally say that an infinitely enriched category is a ﬁnitely enriched cat- egory if there exists a natural number n ∈ N such that the enrichment structures
5 Our definition of comparison morphism is slightly different from [36], in which the comparison morphism
θ	∼
of F is defined as A(I, −) −→ U(I, F−) = F
6 Normality of monoidal functors has nothing to do with normal forms in the term calculus, nor normal
modal logics. This terminology dates back to the 1960s [19].

above the n-th enrichment are all trivial (i.e., self-enrichment by the identity func- tor). Specifically, say if n = 2, we may call them doubly enriched categories. In our terminology, a finitely enriched category is always an infinitely enriched category.
Example 3.7 Every symmetric monoidal closed (ordinary) category is an infinitely enriched category by self-enrichment.
Remark 3.8 For any infinitely enriched category V : ω → NorSMCCat, if V has the colimit E , E works as the “total” category that enriches all components Vn.

To be used for a model for λ2, the monoidal structures have to be defined by cartesian products. In the following, we focus on the case V is cartesian monoidal.
Definition 3.9 A cartesian V-category is a V-category A equipped with V-adjunctions Δ E × and ! E 1, where Δ is the diagonal 1-cell A → A×A in V-Cat and ! : A → 1
is the unique 1-cell into the terminal V-category.
Lemma 3.10 A cartesian V-category is a symmetric monoidal V-category.
Lemma 3.11 Given a cartesian V-category A, A0 is a cartesian category. More- over, A(A, −)0 : A0 → V is a cartesian functor.
Definition 3.12 An infinitely enriched category V is cartesian if Vn is a cartesian closed category and Vn → Vn+1 is a cartesian functor for each n.
Example 3.13 Every cartesian closed (ordinary) category is a cartesian infinitely enriched category.
Semantics
Assume that λ2 has the product and unit types and related βη rules.
Definition 3.14 [λ2-theory] We define an equational theory Δ ▶l M = N : A for
λ2-terms Δ ▶l M : A and Δ ▶l N : A by the closure of the β and η rules.
Definition 3.15 [Interpretation] Let C be a cartesian infinitely enriched category. Interpretation J−) of types and contexts is straightforward (see Section 3.1). For any types Al and contexts Γl, both JAl) and JΓl) are objects in Cl. Given a context stack Δl, associate an auxiliary finite-product-preserving functor Δl(−) : Cl → Cl+#Δ. (ϵ denotes the empty context stack, and [−, −] denotes exponentiation.) It may be helpful for the definition to recall that Δ is used for a context stack in this paper, whereas Γ is for a single context.
ϵ(X)= X	Γ(X)= 2[JΓ),X]	(Γ; Δ)(X)= 2[JΓ), Δ(X)]
Then terms are interpreted as morphisms of the form JΓ; Δ ▶l M : A) : JΓ) →
Δ(JA)) by induction on the structure of the judgment and the height of its context

stack.
JΓ ▶l x : A) = JΓ) −→π


JA)

j  l	!
~ 21
2JΔ;˜Γ′▶lx:A)	j

JΓ; Δ; Γ ▶
l
x : A) = JΓ) −→ 1 =
J˜M )
−−−−−−−−→ (Δ; Γ )(JA))

JΓ ▶ λx.M : A → B) = JΓ) −−→ [JA), JB)]

j  l	JM )	j
∼= Δ(2[JΓj), [JA), JB)]])

JΓ; Δ; Γ ▶
l
λx.M : A → B) = JΓ) −−→ Δ(2[JΓ , A), JB)])
⟨JM ),JN )⟩

JΓ; Δ ▶
MN : B) = JΓ) −−−−−−→ Δ([JA), JB)]) × Δ(JA))
~

Δ(ev)


l	JM )
= Δ([JA), JB)] × JA)) −−−→ Δ(JB))
∼= Δ(2JA))

j  l	JM )	j
JΓ; Δ; Γ ▶ ,M : A) = JΓ) −−→ Δ(2JA)) → Δ(2[JΓ ), JA)])
The above interpretation slightly differs from that presented in Figure 2 so that the type former 2 coincides with the normal functor 2. As a result, it identifies two judgments Δ; Γ ▶l M : A and Δ ▶l+1 ‘λΓ.M : 2(rg(Γ) → A), where rg(x1 : A1, ··· , xn : An) → A means A1 → · · · → An → A. We will introduce in Section 6 another interpretation which makes M and ‘M precisely the same morphism.
Theorem 3.16 (Soundness and completeness) Δ ▶l M = N : A if and only if JM ) = JN ) holds for any cartesian inﬁnitely enriched category.
Proof. Completeness is proved by the standard term model construction. Con- struct cartesian closed categories Cl for all l by collecting all terms (with one free variable) of the same level Cl(A, B) = {x : A ▶l M : B}. Normal functors 2l : Cl → Cl+1 arise from (x : A ▶l M : B) '→ (y : 2A ▶l+1 ‘[(,y)/x]M : 2B).    2
Immediately from the proof of the completeness, we can see that λ2 theories form internal languages (a la Lambek and Scott) of cartesian infinitely enriched categories. Given a cartesian infinitely enriched category C, there exists a λ2 theory such that its term model is (naturally) isomorphic to C. We call such a λ2 theory an internal language of C.
Remark 3.17 Normality of monoidal functors corresponds to the necessitation and denecessitation in logic.

		1 → X in enriched cat. Cl	 = 1 → Cl(1,X) in enriching cat. Cl+1
▶l X in object
▶l+1 2X in meta

Of course, (not necessarily cartesian) infinitely enriched categories provide se- mantics for multi-staged linear lambda calculus. A doubly enriched model of a linear calculus is discussed later.

Finite Approximate Constructions
This section gives two constructions of infinitely enriched categories. Both con- structions are finite approximate constructions: they can generate finitely enriched categories of any length from one structure, but cannot produce one with infinitely many non-trivial enrichment. We remark that finite approximation is sufficient for model construction of the type theory since any context stack cannot be infinitely high. We leave finding generic construction methods of truly infinitely enriched categories as an important future work towards the theory of iterated enrichment.

Iterative Change-of-base Construction
A Kripke category canonically induces a finite approximation of a cartesian infinitely enriched category by iterating the change-of-base construction. The following is a fundamental property of symmetric monoidal closed categories.
Lemma 4.1 Given symmetric monoidal closed categories V and W anda symmet- ric monoidal functor F : V → W, the comparison morphism θ of F is a symmetric monoidal natural transformation.
Proof. Monoidality of θ is checked by straightforward element-wise calculation. 2
Lemma 4.2 Given a symmetric monoidal natural transformation φ : G → F : V → W, the component φ∗A : F∗A → G∗A of φ∗ is (strict) symmetric monoidal, if A is a symmetric monoidal V-category.
Corollary 4.3 Given a symmetric monoidal functor F : V → W between sym- metric monoidal categories and a symmetric monoidal V-category A, F induces a symmetric monoidal functor F : A0 → (F∗A)0. Moreover, F is an isomorphism if F is normal.
Proof. Applying θ in Lemma 4.1 to (−)∗, we obtain the 2-cell θ∗ : (−)0 → (F∗(−))0  : V-Cat → W-Cat. By Lemma 4.2, there is a symmetric monoidal functor F = θ∗A.	2
Remark 4.4 F sends a morphism f : X → Y = I → A(X, Y ) to Ff = X → Y =
ι	Ff 
I −→ FI −−→ FA(X, Y ).
Let V be a Kripke category with a monoidal endofunctor 2 : V → V. Using the above lemma and corollaries, we can iteratively perform the change-of-base construction starting from V.

2 _∗,V
2
r\	 
2∗(2∗V)
  
2∗(2∗(2∗V))
  



···

V	2  (2¸∗V)0
 (2¸∗(2∗V))0 	 (2¸∗(2∗(2∗V)))0
2

Note that 2∗(2∗V)= (2 ◦ 2)∗V, etc. The hom sets of the constructed category say

at level 2 are explicitly written down as follows.
(2∗(2∗V))0(X, Y )= (2∗V)0(I, 2◦2[X, Y ]) = (2∗V)0(I, 2[X, Y ]) = V(I, 2[I, 2[X, Y ]])
This corresponds to the equivalence of derivability between judgments X ▶ Y and
▶ 2(1 → 2(X → Y )). Logically, 2(n) performs necessitation for given judgments and sends them to higher stages.
The model construction in this subsection explains why a Fitch-style modal logic can be interpreted in a Gentzen-style modal logic. It is not so difficult to define the syntactic translation of λ2 into the Gentzen-style calculus based on this construction.

Iterative Co-Kleisli Construction
Another construction arises from comonads. The key observation is that a comonad over a cartesian closed category produces another cartesian closed category by the co-Kleisli construction.
Lemma 4.5 Given a comonad ⟨T, δ, ϵ⟩ over a cartesian closed category V, the co- Kleisli category VT is again cartesian closed, if T preserves binary products 7 .
Not surprisingly, this construction does not yield an infinitely enriched category at once. First, we develop the theory of Kleisli constructions, in order to obtain infinitely many cartesian closed categories from one. A similar construction is ex- plored in [12]. Let V be a category and ⟨T, μT , ηT ⟩ and ⟨S, μS, ηS⟩ monads over V.
Definition 4.6 A distributive law of T over S is a natural transformation l : ST →
TS subject to the following conditions.
μT S ◦ Tl ◦ lT = l ◦ SμT  l ◦ SηT = ηT S  TμS ◦ lS ◦ Sl = l ◦ μST  l ◦ ηST = TηS
Let l : ST → TS be a distributive law of T over S.
Lemma 4.7 ⟨TS, μTS, ηTS⟩ is a monad over V, where μTS and ηTS are given by

μTS 
T lS
μT μS
TS	ηT ηS

Definition 4.8 l induces an endofunctor ST : VT → VT over the Kleisli category,
f	Sf	l
mapping ST (A)= SA and ST (A −→ TB)= SA −−→ STB −→ TSB. This endofunc-
tor ST is called the Kleisli lifting of S along T .
Lemma 4.9 There exist natural transformations ηS :1 → ST and μS : ST 2 → ST
T	T
such that ⟨ST , μS , ηS⟩ forms a monad over the Kleisli category VT .
T	T

7 More generally, any oplax monoidal comonad over a symmetric monoidal closed category produces another symmetric monoidal closed category via co-Kleisli construction.

Lemma 4.10 The Kleisli categories VTS and (VT )ST are identical. Moreover, their adjunctions commute.


C ,¸
v˛
CT ¸¸
z 
(CT )ST  = C ,¸
z˛
CTS 


In what follows we only consider the case where ⟨T, μT , ηT ⟩ and ⟨S, μS, ηS⟩ are the same. We then want to lift a distributive law l : T 2 → T 2 along T to the Kleisli
category in the same way as μS and ηS. To do this, we introduce another axiom
for distributive laws.
Definition 4.11 A distributive law l : T 2 → T 2 is self-distributive if it is subject to the Yang-Baxter equation:
Tl ◦ lT ◦ Tl = lT ◦ Tl ◦ lT.
We say l is a self-distributive law if it is self-distributive.
Self-distributivity not only allows Kleisli lifting of distributive laws but also makes the lifted distributive laws again self-distributive.
Lemma 4.12 Let l : T 2 → T 2 be a self-distributive law of T. l induces another self-distributive law lT of TT , by lT = η ◦ l : T 2 → T 3.
We summarize the results above in terms of comonads.
Corollary 4.13 Assume given a comonad ⟨T, δ, ϵ⟩ over V, and a self-distributive law l : T 2 → T 2. By the duals of the preceding lemmas, there are a comonad
⟨TT , δT , ϵT ⟩ over VT and a self-distributive law lT : TT 2 → TT 2 given by the following data in V:

f	2	l
Tf 
2 є	δ	2

TT (TA −→ B)= T A −→ T
A −−→ TB	δT = T
−→ T −→ T



ϵT = T 2 −T→є 
T −→є
1	lT = T 3 −→є
T 2 −→l  T 2

We also check that co-Kleisli lifting preserves monoidality.
Lemma 4.14 Let ⟨T, δ, ϵ⟩ and l as the preceding corollary. If T preserves binary products, so is TT . Moreover, if T is ﬁnite-product-preserving, so is TT .
Next, we make VT n+1 enriched over VT n . One may think assuming T is internal is enough, but then TT may not be internal. We instead take another approach, assuming all T -algebras.
Definition 4.15 Let ⟨T, μ, η⟩ be a monad over V.  A T-algebra is a morphism
αX : TX → X in V subject to αX ◦ TαX = αX ◦ μX and αX ◦ ηX = 1.
Definition 4.16 ⟨V,T, μ, η, α⟩ is a category with all T-algebras if ⟨T, μ, η⟩ is a monad over V and α : T → 1 is a natural transformation such that for each X in V, αX is a T -algebra.

Under a certain reasonable assumption, T -algebras can be lifted along T with a self-distributive law.
Definition 4.17 T -algebra α is self-distributive if l ◦ Tα = αT .
Proposition 4.18 If α is self-distributive, morphisms αT : TT → 1 in VT given by
η ◦ α : T → T form a natural transformation of self-distributive TT -algebras.
Now, we are ready to construct (cartesian) infinitely enriched categories. We have seen that a finite-product-preserving self-distributive comonad T over a carte- sian closed category with all self-distributive T -coalgebras induces another such by Kleisli lifting. This operation can be repeated arbitrarily for finitely many times. By the next lemma we can regard VT as a V-category, so iterating the operation produces a (cartesian) infinitely enriched category.
Lemma 4.19 Assume given a cartesian closed category with all T-coalgebras ⟨V,T, δ, ϵ, α⟩, and T preserves ﬁnite products. Then a normal cartesian functor F : VT →
αX	f
V is given by F (X)= X and F (f : X → Y )= X −−→ TX −→ Y .
Proof. Normality follows from T 1 ∼= 1 and naturality of α.  Use the fact that
δ1 = αT 1 =!: T 1 → T 21.	2
Proposition 4.20 VT n forms a cartesian inﬁnitely enriched category, with VT n−k
as the k-th enriching category.
The theory of such comonads has a non-trivial model.
Example 4.21 Letting A be a monoid object, (−)A forms a comonad that pre- serves finite products. Then the morphism ! : A → 1 gives rise to coalgebras X → XA, and a self-distributive law is given by the swapping σ = ⟨π2, π1⟩. The ad- ditive monoid over N in Set is a typical example, which is a model for the comonadic framework of stream programming.

Modal Axioms and Effects
In this section, we show and discuss various instances of the change-of-base seman- tics.

LTL Next Modality
Full and faithful cartesian closed functors are known to give a complete semantics for λ⃝, which corresponds to the “next” fragment of intuitionistic linear temporal logic (LTL) in the sense of Curry-Howard [15,5]. However, the requirement for full faithfulness seems weird to us because the next operator is known to be characterized by the following additional axiom scheme [34]:
(⃝A → ⃝B) → ⃝(A → B),

which seems to assert closedness of the functor ⃝, not requiring the full faithfulness. The following theorem reveals that full faithfulness, in fact, requires normality of the cartesian closed functor.
Theorem 5.1 Assume given a cartesian monoidal functor ⃝ : V → W between cartesian closed categories. ⃝ is full and faithful if and only if ⃝ is normal and strong closed, i.e., ⃝˜ev : ⃝[X, Y ] → [⃝X, ⃝Y ] is an isomorphism.
Lemma 5.2 The Yoneda embedding y : V → V is a normal cartesian closed func- tor.
Therefore, every cartesian closed category may be regarded as a category en- riched over the category of presheaves.
Corollary 5.3 Given a cartesian closed category V, y gives rise to a cartesian doubly enriched category V ¸,V .
Remark 5.4 Cartesian doubly enriched categories arising from the Yoneda embed- ding are also used by Hofmann [24] to offer categorical semantics of higher-order abstract syntax (HOAS), and by Bekki and Masuko [2,3] to study semantics of nat- ural languages. The enriched category-theoretic viewpoint could lead us to further analysis of the underlying connections between modal logics and domain-specific languages.

S4 Modality and Linear Non-linear Models
S4 is a normal modal logic characterized by the following axiom schemata: 2A → A and 2A → 22A. Almost clear from the axioms, S4 modality is categorically characterized by (monoidal) comonads[9]. As well as Kripke categories, we can perform iterative change-of-base construction along the underlying monoidal functor of a monoidal comonad.
Lemma 5.5 Given a monoidal comonad 2 over a cartesian closed category V, there
are V-functors ϵn : 2n+1V → 2nV and δn : 2n+1V → 2n+2V for each n, subject to
∗	∗	∗	∗
δn+1 ◦δn = 2∗δn ◦δn and ϵn+1 ◦δn =1= 2∗ϵn ◦δn. The following picture illustrates
how ϵn arises.
V   (−)∗  V-¸SMCCat $	2nV

є z 
∗_ s	1

2	1
s
2∗	z 

V z (− )∗ V-¸SMCCat $	2n+1V 	 2¸nV
∗	єn:=є∗2nV  ∗
There is, however, a more convenient way to characterize a monoidal comonad in terms of enriched categories. Like ordinary adjunctions, any monoidal comonad arises from a monoidal adjunction.
Lemma 5.6 Given a monoidal adjunction F E G : V → W, F is strong monoidal and G is normal.

Proof. The natural isomorphism V(X, GY ) ∼= W(FX, Y ) sends the unit ιG of G
ι−1
to the inverse of the unit ιF of F . Normality of G follows from I → X  FI −−F→
ι
I −→ GI → GX.
Therefore, given a (symmetric) monoidal comonad 2 : V → V whose co-Kleisli category is symmetric monoidal closed, we can regard it as a doubly enriched cate- gory V ¸,V2 .
In fact, this phenomenon was perceived at least in the 1990s in the studies of linear logic[6]. Symmetric monoidal closed categories with a monoidal adjunction to a cartesian closed category are called linear non-linear models (LNL models) [8,42], and known to form a categorical model of the IMELL. Benton proposed in their pioneering paper a logic and its corresponding term calculus that separate linear and classical inference into two distinct types of judgments. The syntax and semantics can be generalized to other adjunctions, and the system is sometimes called adjoint logic [7]. In Benton’s calculus, linear and classical judgments interact with each other via the following four rules. The symbols F and G are the syntactic counterpart of the adjoint pair F and G above.

	Γ ▶C s : X	
Γ; · ▶L F(s): FX
 Γ; Θ ▶L e : FX	Γ, x : X; Ξ ▶L f : A
Γ; Θ, Ξ ▶L let F(x)= e in f : A
  Γ; · ▶L e : A 
Γ ▶C G(e): GA

	Γ ▶C s : GA	
Γ; · ▶L derelict(s): A
Although L is a SMCC in original Benton’s calculus, it is straightforward to modify it so that L be a CCC. Regarding ▶L as ▶0 and ▶C as ▶1, readers notice that the latter two rules are exactly quotation and unquotation. Therefore, this calculus can be considered an extension of two-level λ2.
On the other hand, the first two rules are very much like the dual-context calculus presented in Section 2.2. Indeed, it is possible to introduce levels to the dual-context system with the same convention as the latter two (i.e., ▶C as the meta level of ▶L).


· | Γ ▶l+1 A
Γ | Γj ▶l 2A
2-I
Γ | Γj ▶l 2A	Γ,A | Γj ▶l B
Γ | Γj ▶l B
2-E

While boxing of Fitch-style increases the level of a proof, that of dual-context de- creases it. It can be seen easily that assignment of levels does not affect the prov- ability. If we state it formally, the dual-context version of Theorem 2.2 holds.
By this labeling, we can conclude that Benton’s calculus is nothing but a fusion of Fitch-style and dual-context systems restricted to two-levels, where F is the dual- context box and G is the Fitch-style box. As a consequence, one can see that the box modality of the dual-context system is the left adjoint of the box modality of the Fitch-style system. 8

8 Such an investigation makes sense as far as neither disjunctions nor bottom is dealt with. Since disjunc- tions are usually interpreted as colimits, a left adjoint F has to preserve disjunctions. In this paper, we focus on only box modalities and conjunctions.

It is not difficult to extend Benton’s calculus to multi-levels. As we have done in λ2, we can just replace outer contexts Γ with context stacks Δ.


Δ ▶l+1 A
Δ; Γj ▶l 2A
2-I
Δ; Γj ▶l 2A	Δ, A; Γj ▶l B
Δ; Γj ▶l B
2-E


These rules are a multi-context version of the dual-context system, which we shall call multi-context system. Although this multi-context system is equivalent to the dual-context system with respect to the provability, types and boxes are strictly categorized into levels. The multi-level Benton-style calculus can be defined as the union of the multi-context and Fitch-style systems. A model of the multi-level Benton-style calculus is given as an infinite sequence of monoidal adjunctions, which forms an infinitely enriched category.


··· ¸¸ zV_
z_
2 ¸_
z_	z_
1 ¸_	0


In this sense, the Fitch-style box and the dual-context box are an adjoint pair in the multi-level system.
In Benton’s semantics, a 0-level judgment JΓ; Γj ▶0 M : A) is interpreted as a morphism F JΓ) × JΓj) → JA) in V0. If we regard V0 as an enriched category through G, however, it can be considered a morphism from JΓ) → G[JΓj), JA)] in V1. The latter interpretation is just the semantics proposed in the previous section. So, the existence of the left adjoint enables us to interpret the Fitch-style system in a lower level category without enrichment. This idea has already been proposed by Clouston in [13], although the monoidal condition of F is relaxed. In the paper, Clouston gave a sound categorical interpretation for Fitch-style type theory via a diamond modality, which is a left adjoint of the box. In this sense, we can say that Clouston’s interpretation uses a dual-context flavor for the Fitch- style calculus. Of course, since the diamond is not monoidal, connection between the diamond and the multi-context box is less trivial when more than two contexts are involved. For example, given a three-level context Γ; Γj; Γjj, it is interpreted as F (F JΓ) × JΓj)) × JΓjj) in Clouston’s model. If F is strong monoidal, it is isomorphic to F 2JΓ) × F JΓj) × JΓjj) and coincides with the interpretation of the multi-context system.
Although readers may worry about the fact that original Clouston’s model is not a sequence of adjunctions but one adjunction on one category, it is not essential for the discussions. If we consider the case all categories in an infinitely enriched category coincide, the box is interpreted as an endofunctor on that category. Hence, a (normal) Kripke category is a special case of infinitely enriched categories, and our studies can be applied to a Kripke category under the assumption that G is normal. In addition, conversely, it is possible to generalize Clouston’s models and interpretation with multiple levels straightforwardly. In that case, appropriate levels should be assigned to the occurrences of F in the above paragraph.

Multi-staged Effectful Computation
We can also extend the semantics to effectful computation. Formal semantics of modal type theories with effects is not well studied because a Kleisli category is not a monoidal category in general. While one of the authors has provided Gentzen-style semantics for the effectful modal type system in [28], this paper proposes Fitch-style semantics allowing each stage to have a different effect.
Definition 5.7 A V-monad is a lax functor from the terminal 2-category 1 to V-Cat. Similarly, monoidal V-monad and symmetric monoidal V-monad are de- fined as monads in V-MonCat and V-SMCat.
Remark 5.8 Given a V-monad T over a V-category A, T0 is a monad over A0.
Lemma 5.9 If V is symmetric monoidal closed, V-monad is exactly the same as strong monad.
It immediately follows that every monad on Set is strong. Assume that V is symmetric and closed.
Lemma 5.10 Given a V-monad T on V, or equivalently given a strong monad, the Kleisli category VT is canonically enriched over V. Moreover, the Kleisli adjunction between V and VT is also V-enriched.
Proposition 5.11 Given symmetric monoidal closed categories V and W, a nor- mal monoidal functor F : V → W, and a V-monad T on V, VT is canonically enriched over W.
The above construction gives semantics for a call-by-value multi-staged lambda calculus such that each stage has its own effect.


T3

··· 
T2

 V¸2
T1

 V¸1
T0

 V¸0

z	z	z	z 
V3T3	V2T2	V1T1	V0T0

We can also make Kleisli categories monoidal to enrich some other categories. In this case, the enrichment of a Kleisli category can be explained as change-of-base construction.
Lemma 5.12 Given a monoidal (resp. symmetric monoidal) V-monad T on a (resp. symmetric monoidal) V-category A, the enriched Kleisli category AT is monoidal (resp. symmetric monoidal).
Contextual Modality
In this section, we apply the change-of-base semantics to generalized contextual modality. Contextual modality allows more direct interpretation of quoted terms.

Contextual Modal Type Theories
Contextual modal type theories are type theories internalizing hypothetical judg- ments. Nanevski et al. introduced contextual modality [39] in search of the logi- cal foundation of meta-variables and explicit substitution. Contextual modality is described as a generalization of modality: whereas ordinary modality asserts the proposition is true under no hypotheses, contextual modality permits assertions of propositional truth under any number of hypotheses. We denote a contextual modal type with hypotheses Γ and conclusion A by [Γ]A. Contextual modal types [·]A with no hypotheses may be written as 2A.
While the original formulation in [39] was dual-context and based on the intu- itionistic S4, there is another formulation of contextual modality on top of Fitch- style system and the intuitionistic K [38]. In [38], the (Quo) and (Unq) rules of λ2 are replaced with the following new rules.
Δ; Γ ▶l M : B

Δ ▶l+1 ‘⟨dom(Γ)⟩M : [rg(Γ)]B
Quo

Δ ▶l+1 M : [A1, ··· , An]B	Δ; Γ ▶l N1 : A1 ··· Δ; Γ ▶l Nn : An

Δ; Γ ▶l ,

⟨N1,··· ,Nn⟩
M : B
Unq

The calculus is called λ[−]. Logically, contextual modalities of level l + 1 allow us to refer meta-theoretical properties of the l-level theory. Interestingly, the structural rules are reasoned in the logic itself.
Theorem 6.1 The formalized structural rules are provable in λ[−]: ▶l+1 [Γ]A → [Γ, B]A, ▶l+1 [Γ, B, B]A → [Γ, B]A, ▶l+1 [Γ, B, Bj, Γj]A → [Γ, Bj, B, Γj]A, and ▶l+1 [Γ]B → [Γ, B]A → [Γ]A.
We replace the rewriting rules (and hence the equations) for boxes as well.


,⟨N1,··· ,Nn⟩
‘⟨x1,··· ,xn⟩
β[·]
M −−→ [N1/x1, ··· , Nn/xn]M
and

η[·]
M −−→ ‘
⟨x1,··· ,xn⟩
,⟨x1,··· ,xn⟩M	if M : [A1, ··· , An]B

Here, we implicitly introduced parallel substituion for contextual modalities, which we do not define here since it is beyond the scope of the paper. Meanwhile, we claim that the desired fundamental properties of calculus all hold in λ[−].
Theorem 6.2 Subject reduction, strong normalization, and the Church-Rosser prop- erty hold for the β rules.
Semantics
We can interpret terms of λ[−] in λ2 via syntactic translation, where quotation with variables is replaced with abstraction followed by quotation.
‘⟨x1,··· ,xn⟩M '→ ‘λx1, ··· , xn.M

Therefore cartesian infinitely enriched categories also become a model of λ[—] for free. However, it should be noted that one can find a more direct and concise inter- pretation of λ[—] in the same model. As remarked in Section 3, the interpretation of λ2 is forced to be awkward in order to make syntactic 2 and normal functors coincide. In the language of enriched categories, it sends λ2 judgments Γ; Γj ▶l A to morphisms of the form Γ → A(1, [Γj, A]), instead of Γ → A(Γj, A). This was mainly due to the fact that there is no syntactic construct exposing the contravari- ant part of (enriched) hom funtors. The presence of contextual modalities enables us to avoid such workarounds and to implement precisely the naive idea presented in Section 3. We can define the interpretation by identifying contextual modalities [−]− and hom functors A(−, −), which are also identified with 2[−, −] via change of base. Consequently, terms before and after quotation become exactly the same morphism in the semantics.
JΓ; x1 : A1, ··· , xn : An ▶l M : B) = JΓ ▶l+1 ‘⟨x1,··· ,xn⟩M : [A1, ··· , An]B)
= JΓ) −M→ 2[  JAi), JB)]
Proposition 6.3 Cartesian inﬁnitely enriched categories are sound and complete
w.r.t. λ[—] with this J·).
Although λ[—] is semantically identified with λ2, λ[—] is superior to λ2 in some practical cases. Because λ[—] distinguishes judgmental validity [Γ]A and their in- ternal representations Γ → A, we can exploit this to avoid unnecessary object-level applications to reduce runtime overhead. For example, a quantum circuit descrip- tion language Proto-Quipper-M has circuit types Circ(T, U ) to represent a unit of computation with input T and output U in a non-higher-order way [41]. The circuit types are in fact exactly the contextual modality in λ[—], and indeed their se- mantics is given in terms of the Set-enrichment structure of any symmetric monoidal category. Similarly, we can easily generalize λ2 to model non-higher-order compu- tation by removing the implicational structure in the object-level logic. Reversible computation is a notable example; its model, the category PInj of all sets and partial injections, has the canonical dagger symmetric traced monoidal structure but no closed structure [23]. It even makes sense to assume no structures (i.e., no products, abstractions, the unit element, nor multiple variables) in the object level at all. With this modification, the two-level Fitch-style system for contextual modality is expected to serve with internal languages to any enriched category.

Acknowledgement
The authors thank their colleague Hiroki Kobayashi for helpful discussions and comments to an early draft of this paper. They also want to acknowledge criticism and encouragement from members of SLACS 2017 and CSCAT 2018. This work is partially supported by JSPS KAKENHI Grant Number 18J21885.

References
Andrew Barber and Gordon D. Plotkin. Dual intuitionistic linear logic. Technical report, LFCS, University of Edinburgh, 1996.
Daisuke Bekki. Monads and meta-lambda calculus. In Proceedings of New Frontiers in Artificial Intelligence, pages 193–208, 2008.
Daisuke Bekki and Moe Masuko. Meta-lambda calculus and linguistic monads. In Formal Approaches to Semantics and Pragmatics: Japanese and Beyond, pages 31–64. Springer, 2014.
Gianluigi Bellin, Valeria de Paiva, and Eike Ritter. Extended Curry-Howard correspondence for a basic constructive modal logic. In Proceedings of Methods for Modalities (M4M), 2001.
Zine El-Abidine Benaissa, Eugenio Moggi, Walid Taha, and Tim Sheard. A categorical analysis of multi- level languages (extended abstract). Technical report, The OGI School of Science and Engineering, 1998.
P. N. Benton. A mixed linear and non-linear logic: Proofs, terms and models (extended abstract). In
Proceedings of Computer Science Logic (CSL), pages 121–135, 1994.
P. N. Benton and Philip Wadler. Linear logic, monads and the lambda calculus. In Proceedings of Logic in Computer Science (LICS), pages 420–431, 1996.
Gavin M. Bierman. What is a categorical model of intuitionistic linear logic? In Proceedings of Typed Lambda Calculi and Applications (TLCA), pages 78–93, 1995.
Gavin M. Bierman and Valeria de Paiva. Intuitionistic necessity revisited. Technical report, Proceedings of the Logic at Work Conference, 1996.
Gavin M. Bierman and Valeria de Paiva. On an intuitionistic modal logic. Studia Logica, 65(3):383–416, 2000.
Tijn Borghuis. Modal pure type systems. Journal of Logic, Language and Information, 7(3):265–296, 1998.
Eugenia Cheng. Iterated distributive laws. In Mathematical Proceedings of the Cambridge Philosophical Society, pages 459–487, 2007.
Ranald Clouston. Fitch-style modal lambda calculi. In Proceedings of Foundations of Software Science and Computation Structures (FoSSaCS), 2018.
G. S. H. Cruttwell. Normed Spaces and the Change of Base for Enriched Categories. PhD thesis, Dalhousie University, 2008.
Rowan Davies. A temporal logic approach to binding-time analysis. Journal of the ACM, 64(1):1:1– 1:45, 2017.
Brian Day and Ross Street. Monoidal bicategories and hopf algebroids. Advances in Mathematics, 129:99–157, 1997.
Valeria de Paiva and Eike Ritter. Basic constructive modality. In Logic without Frontiers: Festschrift for Walter Alexandre Carnielli on the occasion of his 60th birthday, volume 17 of Tributes, pages 411–428. College Publications, 2011.
Valeria de Paiva and Eike Ritter. Fibrational modal type theory. Electronic Notes in Theoretical Computer Science, 323:143–161, 2016.
Samuel Eilenberg and G. Max Kelly. Closed categories. In Proceedings of the Conference on Categorical Algebra, pages 421–562. Springer, 1966.
G. Fischer Servi. Axiomatizations for some intuitionistic modal logics. Rendiconti del Seminario Matematico Universita` e Politecnico di Torino, 42, 01 1984.
R. Gordon, A. J. Power, and Ross Street. Coherence for tricategories. Memoirs of the American Mathematical Society, 117(558), 1995.
Raul Hakli and Sara Negri. Does the deduction theorem fail for modal logic? Synthese, 187(3):849–867, 2012.
Chris Heunen. On the functor l2. In Computation, Logic, Games, and Quantum Foundations. The Many Facets of Samson Abramsky - Essays Dedicated to Samson Abramsky on the Occasion of His 60th Birthday, pages 107–121, 2013.

Martin Hofmann. Semantical analysis of higher-order abstract syntax. In Proceedings of Logic in Computer Science (LICS), pages 204–213, 1999.
F. Jackson and M. Smith. The Oxford Handbook of Contemporary Philosophy. Oxford Handbooks. Oxford University Press, 2005.
Guy L. Steele Jr. Common LISP: the language, 2nd Edition. Digital Press, 1990.
Yoshihiko Kakutani. Calculi for intuitionistic normal modal logic. In Proceedings of Programming and Programming Languages (PPL), 2007.
Yoshihiko Kakutani. Call-by-name and call-by-value in normal modal logic. In Proceedings of Programming Languages and Systems (APLAS), pages 399–414, 2007.
G. A. Kavvos. The many worlds of modal lambda-calculi: I. curry-howard for necessity, possibility and time. CoRR, abs/1605.08106, 2016.
G. A. Kavvos. Dual-context calculi for modal logic. In Proceedings of Logic in Computer Science (LICS), pages 1–12, 2017.
G. M. Kelly. Basic concepts of enriched category theory. Reprints in Theory and Applications of Categories, 1(10):1–137, 2005. Reprint of the 1982 original [Cambridge University Press; MR0651714].
Ik-Soon Kim, Kwangkeun Yi, and Cristiano Calcagno. A polymorphic modal type system for lisp- like multi-staged languages. In Proceedings of Principles of Programming Languages (POPL), pages 257–268, 2006.
Kensuke Kojima. Semantical Study of Intuitionistic Modal Logics. PhD thesis, Kyoto University, 2012.
Kensuke Kojima and Atsushi Igarashi. Constructive linear-time temporal logic: Proof systems and Kripke semantics. Information and Computation, 209(12):1491–1503, 2011.
J. Lambek and P. J. Scott. Introduction to Higher Order Categorical Logic. Cambridge University Press, 1986.
Rory B. B. Lucyshyn-Wright. Relative symmetric monoidal closed categories i: Autoenrichment and change of base. Theory and Applications of Categories, 31(6):138–174, 2016.
Simone Martini and Andrea Masini. A computational interpretation of modal proofs. In Proof Theory of Modal Logic, pages 213–241. Springer, 1996.
Yuito Murase. Kripke-style contextual modal type theory. In Work-in-Progress Proceedings of Logical Frameworks and Meta-languages: Theory and Practice (LFMTP), 2017.
Aleksandar Nanevski, Frank Pfenning, and Brigitte Pientka. Contextual modal type theory. ACM Transactions on Computational Logic, 9(3):23:1–23:49, 2008.
Gordon D. Plotkin and Colin Stirling. A framework for intuitionistic modal logics. In Proceedings of Theoretical Aspects of Reasoning about Knowledge, pages 399–406, 1986.
Francisco Rios and Peter Selinger. A categorical model for a quantum circuit description language (extended abstract). In Proceedings of Quantum Physics and Logic (QPL), 2017.
Andrea Schalk. What is a categorical model for linear logic? available online, 2004.
Alex K. Simpson. The Proof Theory and Semantics of Intuitionistic Modal Logic. PhD thesis, University of Edinburgh, 1994.
Walid Taha and Tim Sheard.  Metaml and multi-stage programming with explicit annotations.
Theoretical Computer Science, 248(1-2):211–242, 2000.
A  Monoidal Enriched Categories
Defining higher-dimensional monoidal structures is hard work. In [16], a definition of monoidal objects is given in terms of Gray monoids, which are strictified monoidal bicategories. By the coherence theorem of tricategories [21], it is possible to define monoidal objects in any monoidal 2-category as well. For simplicity, we restrict our attention to monoidal (strict) 2-categories in the following. Let U be a symmetric monoidal category.
Definition A.1 A monoidal 2-category is a 2-category A together with a 2-functor ⊗ : A × A → A and a 0-cell I ∈ A such that there are coherent 2-natural isomorphisms α : (X ⊗ Y ) ⊗ Z ∼= X ⊗ (Y ⊗ Z), λ : I ⊗ X ∼= X, and ρ : X ⊗ I ∼= X. A monoidal 2-category is symmetric if it is endowed with another coherent 2-natural isomorphism σ : X ⊗ Y ∼= Y ⊗ X.


Example A.2 The 2-category U -Cat of all U -categories, U -functors, and U -natural transformations is a symmetric monoidal 2-category. The symmetric monoidal structure of U -Cat is induced by the tensor of
U . That is, for U -categories A, B, A ⊗ B consists of a collection ob A × ob B of objects and hom objects
(A⊗ B)(⟨X, Y ⟩, ⟨X′,Y ′⟩)= A(X, X′) ⊗ B(Y, Y ′).
Definition A.3 Let A be a monoidal 2-category. A monoidal object, or pseudomonoid, in A is a 0-cell A ∈ A together with 1-cells μ : A ⊗ A → A and η : I → A and 2-cells α, λ, ρ subject to the usual coherence conditions.

A3	1μ  A 2¸,
η1  A2¸
1

μ1	α
μ	1η
 ,,ρjμ

 λ 
z 

A2	μ	 A ¸	A2	μ	 A ¸
Here we omitted tensor symbols and coherent natural isomorphisms of A.
A monoidal object in A is symmetric if it has a 2-cell σ : μ → μ ◦ σA satisfying the coherent condition of symmetry.
Definition A.4 A monoidal U-category is a monoidal object in U -Cat. Similarly, we call a symmetric monoidal object in U -Cat symmetric monoidal U-category.
Given a monoidal U -category A, its 1-cells μ and η just specify a U -functor ⊗ : A ⊗ A → A and an object I ∈ A.
Definition A.5 A monoidal U-functor between monoidal U -categories A, B is a U -functor F : A → B together with U -natural transformations τ : μB ◦ (F ⊗ F ) → F ◦ μA and ι : ηB → F ◦ ηA subject to the usual axioms. A monoidal U-natural transformation between monoidal U -functors F, G : A → B is similarly defined to be a U -natural transformation between F and G that respects the U -monoidal structure.
Symmetric monoidal U-functor between symmetric monoidal U -categories is similarly defined. Likewise in ordinary category theory, namely in the case of U = Set, monoidal U -natural transformations are automatically symmetric monoidal U -natural transformations.
Example A.6 Monoidal objects coincide with monoidal categories when the ambient category is Cat (i.e., Set-enriched). Also, monoidal 2-categories are exactly monoidal Cat-categories, that is, monoidal objects in 2Cat. Monoidal 2-functor and monoidal 2-natural transformation are similarly defined in terms of monoidal structures in 2Cat.
Assume U is closed. Then U can be canonically regarded as a U -category (by taking U (X, Y )= [X, Y ]).
Lemma A.7 ([31,36]) U is a symmetric monoidal U-category.
Definition A.8 A symmetric monoidal U -category is closed if it has U -adjunctions X ⊗ (—) E [X, —] for each X.
Lemma A.9 U is a symmetric monoidal closed U-category.
Lemma A.10 For any monoidal U-category A, the covariant representable U-functor A(I, —): A → U is monoidal. Moreover, if A is symmetric, A(I, —) is also symmetric.
Example A.11 The covariant representable functor U (I, —): U → Set is symmetric monoidal.
Definition A.12 U (I, —) : U → Set induces via the change-of-base construction the forgetful 2-functor (—)0 = U (I, —)∗ : U -Cat → Cat.
Lemma A.13 There is a canonical isomorphism U0 ∼= U.
Formal Theory of Change-of-base
We review the results in the formal theory of change-of-base, mainly explored in [36] and [19,14]. For simplicity, we ignore the size issue of categories.
Proposition B.1 Given monoidal categories U and W and a monoidal functor L : U → W, L induces a 2-functor L∗ : U-Cat → W-Cat. More generally, change-of-base construction gives rise to a 2-functor (—)∗ : MonCat → 2Cat.
Theorem B.2 (—)∗ : MonCat → 2Cat lifts to (—)∗ : SMCat → SM2Cat from the 2-category SMCat
of all symmetric monoidal categories to the 2-category SM2Cat of all symmetric monoidal 2-categories.
Proposition B.3 The operation sending a monoidal 2-category U to the 2-category of all monoidal objects in U forms a 2-functor Mon : Mon2Cat → 2Cat. Similarly, there is also a 2-functor SM : SM2Cat → 2Cat.

(−)∗	SM
Corollary B.4 The composite SMCat ———→ SM2Cat ——→ 2Cat gives a 2-functor which sends a sym- metric monoidal category U to the 2-category U-SMCat of symmetric monoidal U-categories. We also write this composite 2-functor (—)∗ by abuse of notation.
Corollary B.5 For any symmetric monoidal closed category U and symmetric monoidal U-category A, A0 is a symmetric monoidal category, and A(I, —)0 : A0 → U0 is a symmetric monoidal functor.
Lemma B.6 (—)∗ : SMCat → 2Cat lifts to (—)∗ : SMCCat → 2Cat, sending a symmetric monoidal closed category U to the full sub-2-category U-SMCCat of U-SMCat with all symmetric monoidal closed U-categories.
Corollary B.7 For any symmetric monoidal closed category U and symmetric monoidal closed U-category A, A0 is a symmetric monoidal closed category.
Proposition B.8 Given a symmetric monoidal closed U-category A, there is a strict symmetric monoidal
U-isomorphism A(I, —)0∗A0 ∼= A. Furthermore, its underlying isomorphism (A(I, —)0∗A0)0 ∼= A0 is the
canonical isomorphism.
Lemma B.9 For any U-category A, A(I, —)0 : A0 → U0 is normal.
Proposition B.10 Let L : U → W be a symmetric monoidal functor between monoidal categories U and
W. If L is normal, there exists an isomorphism (L∗U )0 ∼= U.
Lemma B.11 Let F : (L∗U )0 ∼= U be the isomorphism in the above proposition. There is a natural isomorphism L ◦ F ∼= L∗U (I, —)0.
Proof of Theorem 3.4 (Sketch) For the downward direction, take the underlying covariant hom functor A(I, —)0 : A0 → U. Perform change of base L∗A for the upward direction. Their equivalence follows from the above proposition and lemma.	2
