

Electronic Notes in Theoretical Computer Science 249 (2009) 333–356
www.elsevier.com/locate/entcs
Equational Coalgebraic Logic
Alexander Kurz1,3
Computer Science Departament University of Leicester Leicester, UK
Raul Leal2,4
ILLC
Universiteit van Amsterdam Amsterdam, The Netherlands

Abstract
Coalgebra develops a general theory of transition systems, parametric in a functor T ; the functor T specifies the possible one-step behaviours of the system. A fundamental question in this area is how to obtain, for an arbitrary functor T , a logic for T -coalgebras. We compare two existing proposals, Moss’s coalgebraic logic and the logic of all predicate liftings, by providing one-step translations between them, extending the results in [21] by making systematic use of Stone duality. Our main contribution then is a novel coalgebraic logic, which can be seen as an equational axiomatization of Moss’s logic. The three logics are equivalent for a natural but restricted class of functors. We give examples showing that the logics fall apart in general. Finally, we argue that the quest for a generic logic for T -coalgebras is still open in the general case.
Keywords: coalgebra, coalgebraic logic, Stone duality, predicate liftings, Moss-modality, nabla-modality


Introduction
When Aczel [1] introduced the idea of coalgebras for a functor T as a general- ization of transition systems, he made three crucial observations: (1) coalgebras come with a canonical notion of observational or behavioural equivalence (induced by the functor T ); (2) this notion of behavioural equivalence generalizes the notion of bisimilarity from computer science and modal logic; (3) any ‘domain equation’
X ∼= TX has a canonical solution, namely the ﬁnal coalgebra, which is fully abstract
wrt behavioural equivalence.

1 Thanks to the anonymous referees for valuable comments and suggestions.
2 The research of this author has been made possible by VICI grant 639.073.501 of the Netherlands Orga- nization for Scientific Research (NWO).
3 Email: ak155@mcs.le.ac.uk
4 Email: R.A.LealRodriguez@uva.nl

1571-0661 © 2009 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2009.07.097

This idea of a type of dynamic systems being represented by a functor T and an individual system being a T -coalgebra, led Rutten [26] to the theory of universal coalgebra which, parametrized by T , applies in a uniform way to a large class of different types of systems. In particular, final semantics and the associated proof principle of coinduction (which are dual to initial algebra semantics and induction) find their natural place here.
These ideas have been proved very successful. Coalgebras encompass such di- verse systems as, for example, labelled transition systems [1], deterministic au- tomata [25], π-calculus processes [8], HD-automata [7], stochastic systems [6], neigh-
borhood frames [9].
Very early on in this endeavour the following question arose. If universal coal- gebra can cover a wide range of models of computation uniformly and parametric in the type-functor T , can the same be done for logics for coalgebras? The first positive answer was given by Moss [22]. His fascinating idea was, roughly, to take T itself as a modality. More precisely, if M is the set of formulas of his language and α ∈ TM then ∇α ∈ M.
In the case of the power-set functor P, this modality, denoted as ∇, can be
defined using the standard box and diamond: With α ∈ PM a set of formulas, the formula ∇α can be seen as an abbreviation ∇α =   α ∧   α, where  α denotes the set { a | a ∈ α}.
Independently of Moss’s work, Janin and Walukiewicz [11] already observed that the connectives ∇ and ∨ may replace the connectives , , ∧, ∨. This observation, which is closely linked to fundamental automata-theoretic constructions, lies at the heart of the theory of the modal μ-calculus, and has many applications, see for instance [5,27]. Generalizing the link between fix-point logics and automata theory to the coalgebraic level of generality, Kupke & Venema [15] generalized some of these observations to show that many fundamental results in automata theory are really theorems of universal coalgebra.
A shortcoming of Moss’s logic is that the connective ∇ is un-intuitive for writing out specifications. [16] was the first paper to propose a standard modal logic for coalgebras. Pattinson [23] discovered how to describe such modal logics for coalge- bras in general via predicate liftings. The logic L of all predicate liftings was first investigated by Schro¨der [28] and Klin [12].
The second author’s [21] started a systematic investigation of the relationship of Moss’s logic M and the logic L of all predicate liftings. In particular, [21] introduced a special notion of predicate liftings, the singleton liftings, and observed that 1) they generate all other predicate liftings and 2) they can be translated into Moss’s logic for all Kripke Polynomial functors.
We continue this line of research and summarize our contributions as follows:
Coalgebraic logics can extend different underlying propositional logics. We inves- tigate how this choice influences translations between Moss’s logic and logic with predicate liftings.
If the underlying logic is classical, i.e. based on Boolean algebras, we

improve on the result of [21] by showing that all singleton liftings for any functor
T can be translated into Moss’s logic, establishing a one-step translation L
−→ M,
give a simple description of a one-step translation of M to L,
show that all expressive coalgebraic logics for a finitary functor that preserves finite sets are mutually translatable.
We show that Moss’s logic can be given a more standard equational (or modal) logic style by replacing the modal operator ∇ by a set of conventional modal operators. This is based on the well-known fact that any set-functor T has a presentation by operations and equations [2].
Notation and Preliminaries
We use Q : Set −→ Setop for the contra-variant power set functor 5 . P denotes the covariant power set functor and BN the finite multiset functor: BNX con- sists of all maps (also known as ‘bags’) B : X −→ N with finite support; for f : X −→ Y , the function BN(f ) maps a bag B : X −→ N to BN(f )(B) : Y
−→ N given by y '→ Σx∈f−1({y})B(x). The finite distribution functor D follows the same idea: DX is the set of probability distributions X −→ [0, 1] with finite sup- port; similarly, D≤ denotes the subdistribution functor, which maps X to {μ : X
−→ [0, 1] | μ has finite support and Σx∈Xμ(x) ≤ 1}; on functions, both functors act in the same way as BN.
BA denotes the category of Boolean algebras and Boolean homomorphisms, BAω the category of finite Boolean algebras and all Boolean homomorphisms between them, and Setω the category of finite sets and all functions between them.
Two properties of Boolean algebras will play an important role in our approach: First, (Stone duality) the contra variant power set functor can be seen as a functor into Boolean algebras P : Set −→ BAop and it has a right adjoint S : BAop −→ Set, which maps a Boolean algebra to the set of ultrafilters (an ultrafilter is a maximal consistent propositional theory). On maps, both functors map a function to its inverse image. Moreover, the restriction of P and S to BAω and Setω is a dual equivalence. Second, every Boolean algebra is the directed union of finite Boolean algebras, or, more formally, the finite Boolean algebras are precisely the finitely presentable ones.
Other relevant categories for this paper are: the category of distributive lattices and lattice homomorphisms, denoted DL; the category of frames and frame homo- morphisms, denoted Frm; the category of κ-complete Boolean algebras, denoted BAκ.

Coalgebras
Definition 2.1 The category Coalg(T ) of coalgebras for a functor T on a category
X has as objects arrows ξ : X −→ TX in X and morphisms f : (X, ξ) −→ (X', ξ')

5 Q is intended to remind of 2, because of QX = 2X .

are arrows f : X −→ X' such that Tf ◦ ξ = ξ' ◦ f .
Examples are provided by
Definition 2.2 Let Γ be a collection of set endofunctors. A Γ-Kripke polynomial functor, or Γ-KPF for short, is a functor T : Set −→ Set built according to
T ::= Id | KC | G | T + T | T × T | PT
where Id is the identity functor, KC is the constant functor that maps all sets to the set C, G ∈ Γ, and P is covariant powerset functor. If Γ is empty, we just talk about Kripke polynomial functors 6 or KPFs.
Example 2.3 Coalgebras for the covariant power set functor are Kripke frames, also known as non-deterministic transitions systems [1]. Slight variations allow to add labels to transitions or states. Coalgebras for the finite multiset functor are directed graphs with N-weighted edges, often referred as multigraphs [30]. Coalge- bras for the finite distribution functor are finitely branching discrete time Markov chains [3]. QQ-coalgebras are known as neighborhood frames in modal logic [9].
As shown in the references above, the traditional notion of bisimilarity can be captured coalgebraically as follows.
Definition 2.4 Two states xi in two coalgebras Xi are T -bisimilar, or T -behaviourally equivalent, if there is a coalgebra (Z, ζ) and there are coalgebra morphisms fi : (Xi, ξi) −→ (Z, ζ) such that f1(x1) = f2(x2).

Coalgebraic Logic
The Stone duality approach to coalgebraic logic associates, in a systematic way, to a given category of coalgebras a suitable category of modal algebras. This cate- gory of modal algebras then embodies a suitable modal logic for coalgebras. The basic example is to consider coalgebras over Set and logics which extend Boolean propositional logic, that is, we are in the following situation:

 z˛_.P	 s

L	BA
_Se t   T
S
(1)

A coalgebraic logic is a functor L together with a natural transformation δ : LP
−→ PT. Using δ we can associate to a T -coalgebra ξ : X −→ TX its dual L-algebra

δX	P (ξ)
P^(ξ) = LPX −−→ PTX −−−→ PX.	(2)

The logic is given by the initial L-algebra LI −→ I, the semantics by the unique arrow [·]](X,ξ) : I −→ P (ξ), mapping a formula ϕ ∈ I to the set of states [ϕ]] = {x ∈ X | x H ϕ}.

6 The term Kripke polynomial functor was coined in R¨oßiger [24].

Remark 2.5 It is important to understand that L only describes how to add one layer of modalities: If A consists of Boolean formulas, then LA consists of modal formulas in which each formula a ∈ A is under the scope of precisely one modal operator. The initial L-algebra is obtained by iterating this construction and con- tains modal formulas of arbitrary depth. Moreover, L can take into account not only the syntax, but also the axiomatisation of the logic, as revealed in (3) below. To capture these by a functor, it is essential to consider L on BA and not simply on Set.
One advantage of this functorial approach to modal logic is that (L, δ) gives us a syntax-free description of the logic. Properties of the logic can be expressed by abstract properties of (L, δ), for example, (L, δ) is complete iff δ is injective [13,18]. It is also possible, without any consideration of syntax, to generalize from Kripke frames to all KPFs (and beyond) the Jo´nsson-Tarski theorem [20] and the Goldblatt-Thomason theorem [19].
Concrete descriptions of logics (L, δ) are usually obtained by presenting the functor
L. Presentations of functors are analogous to presentations of algebras and studied in detail in [4,20]. For our purposes, the following example should suffice.
Example 2.6 Consider T = У, i.e., coalgebras are Kripke frames (unlabelled tran- sition systems). So we expect to have standard modal logic, given by one finite-meet preserving modal operator . Accordingly, we define LP : BA —→ BA to map an algebra A to the algebra LP (A) generated by a, a ∈ A, and quotiented by the relation stipulating that  preserves finite meets, that is,
 T = T    (a Λ b) = a Λ b	(3) (δP )X : LP PX —→ PУX is defined by
 a '→ {b ∈ УX | b ⊆ a},	(4)
so that we obtain the usual semantics of  stating that a set b of successors satisfies
 a iff b ⊆ a.
The previous example shows how modal operators correspond to generators, and how modal axioms correspond to quotienting freely generated algebras. It is not difficult to check that with δP and the semantics of (2) we obtain the usual semantics of modal logic. The details of how the example can be inductively extended to obtain a logic (LT , δT ) for each KPF T can be found in [19]. Although these logics are defined by syntax and axioms, all the good properties they enjoy flow from the following syntax-free characterisation.
Proposition 2.7 Let T be a KPF. Then (δT )X : LT PX —→ PTX is an isomor- phism for all ﬁnite sets X.
As a consequence one obtains for example:
Corollary 2.8 For any KPF T the logic (LT , δT ) is sound and complete.

Two Coalgebraic Languages
The Stone duality approach, presented in the previous section, can be generalized to any concrete category A equipped with a functor P : Set —→ Aop such that UP = Q. Intuitively this means that power-sets are algebras in A and the inverse image of a function is a morphism of A-algebras.

  zo p ¸c P	 s

L	A
¸¸¸
U ¸¸¸¸
Set  T
    
  Q
(5)

z ,s
Set
Definition 3.1 A category A is said to be a category with power-set algebras if
(1) it is a concrete category over Set. (2) The forgetful functor UA : A —→ Set has a left adjoint FA : Set —→ A. (3) There exists a functor P : Set —→ Aop such that UAP = Q. (We will often drop the subscripts.)
Examples of categories with power-set algebras are: sets, semi-lattices, distribu- tive lattices, frames, κ-complete Boolean algebras, completely distributive lattices, complete atomic Boolean algebras. This general perspective on coalgebraic lan- guages will help us to illustrate the importance of the underlying logic to define translations.

Moss’s Logic
Moss’s logic can be given for an arbitrary functor T : Set —→ Set preserving weak pullbacks. Examples of such functors are all (BN, D)-KPFs, but not the functor QQ.
In the original version [22], Moss showed that his coalgebraic logic characterizes bisimilarity of T -coalgebras. Because T may permit unbounded branching, this purpose needs infinitary conjunctions in the logic. Here our interests are slightly different: To specify properties of coalgebras we want all Boolean connectives, but only finitary ones. Accordingly, we will work with the finitary version Tω of T .
For convenience, and without loss of generality [2], we assume that T is standard, that is T preserves inclusions and the equalizer 0 —→ 1 ⇒ 2. Under these assump- tions we can define the finitary version of T by TωX =  {TY | Y ⊆ X, Y finite }. A functor is said to be finitary iff T = Tω. For example, УωX is the set of finite subsets of X.
Definition 3.2 Moss’s language MT is the smallest set closed under Boolean op- erations and under the formation rule ‘if α ∈ Tω(MT ) then ∇α ∈ MT ’ (we will often drop the subscript T ).
Following Diagram (1), we now cast this definition in terms of a functor on BA. Moreover, we generalise from BA to a category A with power-set algebras.

Definition 3.3 Let A be a category with power set algebras, and let T : Set —→ Set be a weak pullback preserving functor. Moss’s logic for T in A is given by the functor
F TωU = MT : A —→ A.
Following Diagram (2), to define the semantics MT P —→ PT , it is enough to give a natural transformation TωUPX —→ UPTX, or TQ —→ QT . To this end, we let 7 ∇ : TωQ —→ QT be the natural transformation with the following components: an element Φ ∈ TωQX is mapped to

∇(Φ) = {α ∈ TX | α T (∈X ) Φ},	(6)

where T (∈X ) is the relation TX ← T (∈X ) → TQX obtained from applying T to the membership relation X ←∈X→ QX.
Remark 3.4 The above procedure can be applied to any binary relation R ⊆ X × Y , yielding a new relation T (R) ⊆ TX × TY , which is called the relation lifting of R.
Definition 3.3 and (6) give us syntax and semantics of Moss’s logic over various propositional base logics. We would like to make the following
Remark 3.5 (i) In the case A is the category of Boolean algebras, the carrier of the initial MT algebra is the quotient of MT under Boolean equivalence, so both MT and MT give us essentially the same information.
As indicated in the introduction (see also the example below), in case of T = У and A = BA, we obtain a logic which is equivalent to the standard modal logic of and . It is well-known that this finitary logic does not characterise bisim- ilarity for infinitely branching transition systems. But the following version of Moss’s result still holds: If the functor T is finitary, then MT characterizes T -bisimilarity (behavioural equivalence). This result remains true if we instan- tiate A with DL or meet-semi-lattices.
Example 3.6  (i) In the case of the identity functor Id, the operator ∇ : IdQ
—→ QId is the identity and Moss’s logic is just that of deterministic transition systems (∇ϕ ≡  ϕ ≡  ϕ). Explicitly, a state x in a coalgebra ξ satisfies ∇ϕ iff ξ(x) ∈ [[ϕ]].
In the case of a constant functor KC, the operator ∇ : KCQ —→ QKC maps an element d ∈ C to the set {d}. A state x in a coalgebra ξ satisfies ∇d iff ξ(x) = d.
In the case of the covariant power set functor ∇ is given by

α ∈ ∇(Φ) iff (∀ϕ ∈ Φ . ∃x ∈ α . x ∈ ϕ) and (∀x ∈ α . ∃ϕ ∈ Φ . x ∈ ϕ).

7 ∇ is the semantics of ∇.

It is well-known (and not difficult to check) that in this case Moss’s logic (over BA) is equivalent to classical modal logic, that is, there are translations in both directions: ∇α =   α Λ   α and  ϕ = ∇{ϕ}V ∇∅,  ϕ = ∇{ϕ, T}.
In the case of the finite distribution functor, we can describe the operator ∇ noticing that for b ∈ Ð(X) and B ∈ Ð(QX) the relation b Ð(∈X ) B can be described as follows. First note that b = (xi, pi)1≤i≤n for some xi ∈ X, pi ∈ [0, 1], pi > 0,n ∈ N; similarly B = (ϕj, qj)1≤j≤m for ϕj ∈ QX, qj ∈ [0, 1], qj > 0,m ∈ N. Then b Ð(∈X ) B iff there are (rij)1≤i≤n,1≤j≤m, rij ∈ [0, 1] such that
xi /∈ ϕj ⇒ rij = 0 and Σi rij = qj and Σj rij = pi.
For example, a state x in a coalgebra ξ satisfies ∇{(ϕ, q), (T, 1 — q)} iff the probability of going to a successor satisfying ϕ is larger or equal to q. That is,
∇ (together with Boolean operators) can express the usual modal operators of probability logic [10].
In the case of the finite multiset functor we have the same description, just replacing [0, 1] by N. For example, a state x in a coalgebra ξ satisfies
∇{(T, n)} iff x has exactly n successors;
∇{(ϕ, m), (T, n)} iff x has at least m successors satisfying ϕ and exactly
m + n successors in total;
In fact, each ∇-formula specifies the total number of successors. The usual graded modalities can therefore not be expressed.
As mentioned in the introduction, there are at least two motivations for a ∇-based approach towards modal logic: (1) In applications to automata theory, ∇-based modal logic works better because one may almost eliminate conjunctions from the language. This observation, which is closely linked to fundamental automata- theoretic constructions, lies at the heart of the theory of the modal μ-calculus, and has many applications, see for instance [5,11,27]. (2) Moreover, as we saw, ∇ allows coalgebraic generalizations. This has been used, see [15,29], to show that many fundamental results in automata theory are really theorems of universal coalgebra.

The Logic of All Predicate Liftings
For any endofunctor T on Set, we define an endofunctor LT on the category BA of Boolean algebras. The idea is the following. Going back to Example 2.6, we defined δ and then proved that, on finite X, δ : LP —→ PL is an iso (Proposition 2.7). We now turn this around and essentially use it as a definition.
Definition 3.7 LT : BA —→ BA is defined, on finite A, as LT A = PTSA. Since every Boolean algebra A is the directed union of finite subalgebras Ai we let LT A be the directed union of the LT Ai. δ is given by LT P = PTSP ~= PT on finite X
and extended uniquely to arbitrary X.
Example 3.8 For У the functor L has been described explicitly in Example 2.6 As shown in [20], L can be represented by operations, where we take ULFn as
the set of operations of arity n (identifying the number n with a set of n-elements). Calculating ULFn = UPTSFn = QT (Qn), which, by the Yoneda Lemma, is the

set of natural transformations QnX —→ QTX, or, in more familiar notation, (2n)X
—→ 2TX . Explicitly this is:
Proposition 3.9 There is a natural isomorphism (natural in n and QT)
Y(n,T ) : QTQ(n) —→ Nat(Qn, QT ).
Proof. Recall that QnX = Hom(X, Qn). We define a bijection between QT (Qn) and natural transformations QnX —→ QTX as follows: any p ∈ QT (Qn) gives a predicate lifting that maps v : X —→ Qn to QTv(p). Conversely, for each λX : QnX
—→ QTX we have λQn(id) ∈ QT (Qn).	 
The proposition holds for any contravariant functor F and not just for for the functor QT ; this fact is known as Yoneda Lemma. It shows that our operations of arity n are precisely the predicate liftings of arity n in Schro¨der [28]:
Definition 3.10 Given a functor T : Set —→ Set, an n-ary predicate lifting is a natural transformation QnX —→ QTX.
Proposition 3.9 tells us that predicate liftings of arity n can be identified with subsets of T (2n); this is particularly useful to present examples of predicate liftings.
Example 3.11 (i) Let T be the covariant power set functor and let 2 = {⊥, T}. The existential modality can be presented using an homonymous predicate lifting  : Q —→ QУ, with the followings components  X (A) = {U ⊆ X | A ∩ U /= ∅}. Using Proposition 3.9, we can see that this corresponds to the set
{{T}, {T, ⊥}}. Similarly, the universal modality can be presented as a predicate lifting X (A) = {B ⊆ X | B ⊆ A} (compare this with (4)). By Proposition 3.9, this predicate lifting is associated to the set {∅, {T}}.
Let T be the finite distribution functor. The modality pϕ specifies a proba- bility of at least p for the event of going to a successor satsifying ϕ. It can be described by the predicate lifting QX —→ QTX, a '→ {d ∈ ÐX | μd(a) ≥ p},
where μd(a) = Σx∈a d(x) is the measure associated with d. By Proposition
3.9, this predicate lifting corresponds to a subset of Ð(2). If we describe a probability distribution d : 2 —→ [0, 1] by its value on T (d(⊥) = 1 — d(T)), we find that p corresponds to the set {q ∈ [0, 1] | q ≥ p}. Similarly, the predicate lifting associated to an interval (q, q') ⊆ [0, 1] maps a set a ⊆ X to the set of probability distributions over X that assign a probability between q and q' to the set a.
We can also define a logic for any set of predicate liftings Λ as follows:
Definition 3.12 Let Λ be a set of predicate liftings. The functor L¯Λ : A —→ A maps A to the free A-algebra generated by all λ(a1,..., an) where λ ∈ Λ, n is the arity of λ, and ai ∈ UA. We write L¯T , or just L¯, if Λ is the set of all predicate liftings.
More explicitly, we can describe the functor L¯λ, for a single predicate lifting λ, to be Lλ = FUnλ , where nλ is the arity of λ. In general we have L¯Λ =  λ∈Λ L¯λ.

We can also define the language of all predicate liftings LT based on Boolean logic as follows (in future, we will usually drop the subscript T ).
Definition 3.13 LT is the smallest set closed under Boolean operations and under the rule if n < ω, 1 ≤ i ≤ n, ϕi ∈ LT ,λ ∈ QT Qn  ⇒  λ(ϕ1,... ϕn) ∈ LT .
This perspective of languages with predicate liftings will prove to be useful to generalize the results in [21].
Translators and A-Translators
In this section we will investigate under what circumstances we can find translation from the ∇-logic M into the logic of all predicate liftings L and vice versa. Let us note first that we are not interested in showing only that every formula in L has an equivalent formula in M (and v.v.). Rather we want an inductive definition of the translation, which respects the one-step nature (see Remark 2.5). This stronger property of one-step translations is captured by natural transformations L¯ —→ M and M —→ L.

One-step translations
We start by defining translations between coalgebraic logics. Our notion of coalge- braic logic assumes a category A of power-set algebras as in Definition 3.1, a functor L : A —→A and a natural transformation δ : LP —→ P L, as explained in Section 2.2.
Definition 4.1 Given two coalgebraic logics (L1, δ2) and (L2, δ2), a natural trans- formation ν : L1 —→ L2 is a one-step translation if it commutes with the semantics:
L1P 	νP	) L2P

 
δ1 
 
/
/ δ2
/s

PT 
A one-step translation can be understood as an inductive definition of a trans- lation between the associated logics. Indeed, given any L2-algebra L2A —→ A we
obtain an L -algebra  L A νA  L A —→ A; moreover, since ν is a natural trans-
1	1	—→	2
formation any morphism f : A —→ A' of L2 algebras is also a morphism between the corresponding L1-algebras. Denote by LiIi —→ Ii the initial Li-algebras. Using this observation, we find, by initially of I1, an inductively defined morphism of L1- algebras I1 —→ I2 which translates formulas in I1 to formulas in I2. Notice that it is important that ν is a natural because this allows to map a morphism of L2-algebras I2 —→ A to a morphism of L1-algebras.


Translating Predicate Liftings
We are looking for a natural transformation L¯


—→ M (see Definitions 3.12 and

3.3). To do this, we need to translate predicate liftings λ into ∇. Note that every

predicate lifting λ : Qn —→ QT and the natural transformation ∇ : TωQ —→ QT share the codomain but have different domains (the subscript ω below corresponds to the one in Definition 3.3). This motivates the following definition [21].
Definition 4.2 A translator for a predicate lifting λ is a natural transformation
τ : (Q)n —→ TQ such that
Qn 	τ	) TωQ
	/
λ	/ ∇
	/s
QT
Example 4.3 Consider the predicate lifting associated with the existential modal- ity  of the covariant power set functor (Example 3.11). It has the translator τX : QX —→ УωQX mapping an element a ⊆ X to τX (a) = {a, X}. Compare with the equivalence  ϕ = ∇{ϕ, T} discussed in Example 3.6.
For more see Example 4.6 below. The idea of a translator is to define a one-step translation tr via
tr(λϕ) = ∇τ (tr(ϕ)).	(7)
Unfortunately not all predicate liftings have translators.
Example 4.4 Let KC be a constant functor where C has at least two distinct elements c1, c2. Using Proposition 3.9 (see also Example 3.11), predicate liftings correspond to subsets of C. The predicate lifting λE corresponding to E = {c1, c2} does not have a translator. This is because the components of a natural transforma- tion τ : Q —→ KC are constant functions, hence the cardinality of ∇τ (X) is always 1, but λEX = E. Nevertheless, notice that the formula ∇c1 V ∇c2 translates the predicate lifting λE.
If we look back at Equation (7), we can see that translators produce “simple” translations not involving operators such as V. Accordingly, translations will involve translators as well as propositional operators. First, we need to know a big enough class of predicate liftings that do have translators.
Definition 4.5 ([21]) An n-ary predicate lifting λ is called a singleton predicate lifting, or a singleton lifting for short, if it is associated (via Proposition 3.9) with a single element p ∈ T (2n), i.e,, if the following holds: Given ϕ : n —→ 2X
λX (ϕ) = {t ∈ TX | T (χϕ)(t) = p},	(8) where χϕ : X —→ 2n is the transpose of ϕ. If λ is a singleton lifting, we write it λp
or just p, where p is the associated element of T (2n).
Example 4.6 (i) If T is a constant functor with value C, then the singleton liftings for T are associated with elements c ∈ C. The X-component of a singleton lifting λc is the function λc : QX —→ QKC with constant value {c}.
If T is the identity functor and we assume 2 = {T, ⊥}, then there are two singleton liftings of arity 1 for Id. The X-component of λT is the identity.

Similarly, the X- component of λ⊥ is the function (λ⊥)X : QX —→ QX mapping a set ϕ ⊆ X to λ⊥(ϕ) = чXϕ to its complement.
The covariant power set functor has four singleton liftings of arity 1, explicitly these are associated with У(2) = {∅, {T}, {⊥}, {T, ⊥}}. Given a set ϕ ⊆ X, the action of these predicate liftings is (we drop the subscripts X):
λ{Τ}(ϕ) = {U З УX |∅ /= U ⊆ ϕ};	λ{⊥}(ϕ) = {U З УX |∅ /= U ⊆ чXϕ};
λ∅(ϕ) = {∅};	λ{Τ,⊥}(ϕ) = {U З УX | U ∩ чXϕ /= ∅ /= U ∩ ϕ};
Note that they all have translators, corresponding to ∇{ϕ}, ∇{чXϕ}, ∇∅,
∇{ϕ, чXϕ}, respectively.
If T is the finite multiset functor, a singleton lifting is given by a pair of natural numbers (n, m). Its X component, (n, m) : QX —→ QУNX, maps a set ϕ ⊆ X to the set of bags over X with n + m elements, n of which are in ϕ and m are in the complement of ϕ. Such a predicate lifting has a translator as it corresponds to ∇{(ϕ, n), (чXϕ, m)}, in the notation of Example 3.6.
If T is the finite distribution functor, a singleton lifting is given by a real number q З [0, 1]. The X-component of q maps a set ϕ ⊆ X to the set of probability distributions over X that assign probability q to the set ϕ. Such predicate liftings have translators as they correspond to ∇{(ϕ, q), (чXϕ, 1 — q)}, in the notation of Example 3.6.
The second author’s [21] started the study of singleton liftings because: (1) In the case of KPFs they can be presented inductively over the complexity of the functor, and (2) by Proposition 3.9 they generate all the other predicate liftings:
Proposition 4.7 ([21]) If λ is an n-ary predicate lifting associated with a set P ⊆
T (2n), then for every set X and every n-sequence ϕ : n —→ QX we have: λX (ϕ) = 
 p∈P (λp)X (ϕ). In other words, every n-ary predicate lifting can be obtained as a (possibly inﬁnite) join of singleton predicate liftings.
Example 4.8 Going back to Example 3.11, the predicate lifting for  is λ{∅,{Τ}}. It does not have a translator but is the union λ∅ ∪ λ{Τ} of two singleton liftings, which have a translator by Example 4.6. Similarly, the predicate lifting for is λ{{Τ,⊥},{⊥}} = λ{Τ,⊥} ∪ λ{⊥}. Incidentally,  does have a translator, see Exam- ple 4.3.
The starting point of the present paper was the discovery that singleton liftings always have translators. The proof is based on the following lemma, which also plays a crucial role in [14]. The proof of the lemma is immediate from the fact that
the composition X {−}	X —→$ X of relations is the identity.
—→ Q 
Lemma 4.9 Consider {—}A : A —→ QA, to be the singleton function i.e. a '→ {a}. Then ∇Q ◦ T ({—}Q) = {—}T Q.
Using this we can prove the following result.
Proposition 4.10 Let T be a weak pullback preserving functor. Then each single- ton lifting λp has a translator. Moreover, the translator is associated with T ({—}Q)(p).

Proof. Consider the following diagram


Nat(Qn, QT) ( Y(Q(n),QT)
 ` 
 
∇ ◦ (—) 
QTQ(n) (	{—}TQ(n)
 ` 
 
∇Q(n) 

TQ(n)
/
/
/ T ({—}Q(n))

/
/s/
Nat(Qn, TQ) (	 TQQ(n)
Y(Q(n),TQ)
The parallelogram on the left expresses the naturality of Yoneda Lemma 3.9, hence commutes, the triangle on the right commutes by Lemma 4.9. The upper edge maps an element in p З TQ(n) to the associated singleton lifting λp. The commutativity of the diagram implies that the natural transformation associated with T ({—}Q(n))(p), which is a natural transformation Qn —→ TQ, is a natural translator for λp. 
Notice that translators almost define one-step translators. However, we have to make sure that τ in Equation (7) is definable in the logic. This is not always possible as the following example shows.
Example 4.11 Suppose we replace, in Definition 3.3, A by the category DL of distributive lattices, that is, we work with a positive Moss logic without negation. Consider T to be the identity functor and the predicate lifting λ⊥ : Q —→Q given by complementation. In this example, ∇ is the identity and complementation ч : Q
—→ Q is a translator for λ.  However, all the operators in MId are monotone,
therefore all the definable terms are monotone, which implies that negation is not definable. In other words, we cannot translate λ⊥ into MId .
The example shows that the underlying category plays a role to whether trans- lations are possible: λ⊥ϕ can be translated into a ∇-formula over BA but not over DL. This leads us to refine the notion of translator to that of an A-translator. Intuitively, an A-translator is a translator that is natural wrt to A-morphisms. We will show later that all translators can be extended to BA-translators.
Definition 4.12 Let λ be an n-ary predicate lifting, A a category with power-set algebras, and U : A —→ Set the forgetful functor. An A-translator τ for λ is a natural transformation τ : Un —→ TωU such that τP is a translator for λ (recall that UP = Q).
If the category A is clear from the context, we often call an A-translator a logical translator. We say that the logical translator τ extends the translator τP . If there exists an A-translator for λ, we say that the predicate lifting λ is A-translatable.
Example 4.13  (i) In Example 4.11, τ = ч extends to a BA-translator, but not to a DL-translator.
Consider the predicate lifting associated with the existential modality as in Example 4.3. We define a BA-translator τ : Given a Boolean algebra A, with carrier A, the function τA : A —→ УA maps an element x З A to τA(x) = {x, T}.

Notice that this BA-translator is also an A-for any category A of power-set algebras and induces the following translation tr( ϕ) = ∇{tr(ϕ), T}.
We can ask which predicate liftings have A-translators for all categories A of power-set algebras. These are precisely what we call the Moss liftings, see Remark 6.7.
The main property of logical translators, as suggested by the previous examples, is that they produce translations:
Proposition 4.14 Let Λ be a set of predicate liftings, each of which has a logical translator. Then can we ﬁnd a one-step translation L¯Λ —→ M.
Proof. For each λ З Λ let τλ : Unλ —→ TωU be a logical translator. Combining those we obtain a map λ∈Λ Unλ —→ TωU , the image of this map under the left adjoint of U is the required translation L¯Λ —→ M .	 

Translating with Classical Logic
In this section, we will produce one-step translations (Definition 4.1) between Moss’s logic MT (Definition 3.2) and the logic LT (Definition 3.13) of all predicate liftings. The main technical result is that that translators (Definition 4.2) can always be extended to BA-translators (Definition 4.12).
The translations rely on some conditions on the type functor T and on the propositional logic being Boolean. Accordingly, in this section we always assume our logic is based on BA. If we would like to extend the results to DL, we should modify the notion of predicate lifting by working with endofunctors T over the category of ordered sets and replace the functor Q by the down-set functor. We do not pursue this issue here.

From  L  to  M
Lemma 5.1 Every translator τ : Qn —→ TωQ can be extended to a BA-translator,
i.e. a natural transformation Un —→ TωU, where U : BA —→ Set is the forgetful functor.
Proof. (Sketch.) Recall that (1) every Boolean algebra is the directed colimit of finite Boolean algebras and (2) every Boolean algebra morphism between finite BAs arises from the inverse image of a function between sets. Because of (2) we have that τ : Un —→ TωUω is natural where Uω : BAω —→ Set is the restriction of U to finite Boolean algebras. Because of (1), we can extend τ from Uω to U . This makes the translator τ into a BA-translator.	 
The lemma does not hold for other categories of power-set algebras. But for BA, we obtain
Theorem 5.2 If T preserves ﬁnite sets and weak pullbacks, there is a one-step translation L¯T —→ MT .

Proof. (Sketch.) Let L¯s be the functor given as in Definition 3.12, but using only singleton liftings. Because T preserves finite sets, every predicate lifting can be expressed as a finite join of singleton liftings (Proposition 4.7), hence we have an
isomorphism L¯ ~= L¯s. Now let λ be a singleton lifting and let τ be the corresponding
translator (Proposition 4.10). Extend τ to a logical translator Un —→ TωU as in the previous lemma. This gives a natural transformation Un —→ MT . Doing this
for each singleton lifting and combining all of these logical translators we obtain a translation L¯s —→ MT .	 
Notice that Examples 4.11, and 4.4 show that to translate all predicate liftings, we need at least classical logic. The following example shows that the condition of T preserving finite sets can not be avoided.
Example 5.3 If the functor T does not preserve finite sets, not every predicate lifting can be translated into Moss’s language. Let T be the constant functor with value N, let E ⊆ N be the set of even numbers. If we are working over BA, the pred- icate lifting λE can not be translated into Moss’ language. Consider the coalgebra N = (N, 1N) and the formula λET. On the one hand, this formula defines the set of even numbers, i.e. [λT]] = E. On the other hand, we can check that using Moss’ language we can only define finite and cofinite sets; therefore we conclude that the predicate lifting λE can not be expressed into Moss’ language over BA.
The following translations are illustrations of the previous theorem.
Example 5.4 • Example 4.11 is a BA-translator obtained using the previous the- orem.
Let (n, m) be singleton lifting for the finite multiset functor (Example 4.6). We define a BA-translator for (n, m) as follows: Given a Boolean algebra A, with carrier A, the function τA : A —→ УNA maps an element x ∈ A to the following bag: B(x,n,m) : A —→ N
B(x,n,m)(x) = n, B(x,n,m)(чAx) = m and B(x,n,m)(a) = 0 for any other element. This logical translator induces the following translation t((n, m)a) = ∇B(t(a),n,m).
From ł to L
Our next step is to find a translation MT —→ LT . Note that we do not expect a natural transformation MT —→ L¯T because each ∇-formula corresponds to many different formulas of LT (see also the next section). But L (Definition 3.7) already quotients out by one-step logical equivalence, thus identifying all equivalent formu- las.
Theorem 5.5 For all weak pullback preserving functors T there exists a one-step translation MT —→ LT .
Proof. If we restrict to finite sets and finite Boolean algebras, we have an isomor-

phism ι : Id —→ SP (see Diagram (1)) and then the following natural transformation

TωUP  ∇) U P, T  ι ) UPTSP
which can be freely extended to a natural transformation θω : MT P —→ LT P . Since every BA is a directed colimit of finite Boolean algebras of the form PX for finite X and since MT preserves directed colimits, we can extend θω to a natural transformation θ : MT —→ LT

M A   θA	 L A
,,	,,

M PX (θω )X  L PX 

which is a one-step translation (Definition 4.1).	 
Again, the theorem is specific to BA. On the other hand, it is a particular instance of a more general result. Namely, if we are working over BA, all expressive coalgebraic logics for a finitary functor that preserves finite sets are equivalent, i.e. mutually translatable. This Lindstro¨m like theorem is formulated in the next theorem.
Theorem 5.6 Assume that T that preserves ﬁnite sets and that L is a complete and expressive coalgebraic logic. Then for all coalgebraic logics L' there is a one-step translation τ : L' —→ L. Moreover, if L' is complete and expressive as well, then τ is an isomorphism.
The proof is exactly as the one used in the case of Moss’s logic.  The natural

transformation τ can be obtained as the extension of L'PX	δ'
PTX δ−1
L2PX,

where δ' and δ are the natural transformations inducing the respective semantics. This relies on the fact that L is complete and expressive iff δX is iso on finite X.

Equational Coalgebraic Logic
The aim of this section is to apply our translation. We do this by presenting Moss’s logic using only conventional operators, i.e. predicate liftings and showing how the axiomatization of Moss’s logic from [14], gives rise to a standard modal axiomatization. One advantage of such an equational version of Moss’s logic is that one can reuse known logical methods. For example, in a logic given by predicate liftings, the subformulas of a formula λ(ϕ1,... ϕn) are the ϕi. But what should be the subformulas of ∇α, if all we know about α is that α ∈ Tω(łT )? Or how to state that ∇ is monotone? Or what does congruence mean? All these questions can be answered [14], but this requires some technical work, which can be avoided in the equational presentation.
To present łT we use the fact that every finitary functor Tω is a quotient of a

polynomial functor Σ



ΣX =   Σn
n<ω




× Xn EX



TωX.	(9)


Such quotient is called a presentation ⟨Σ, E⟩ of Tω by operations and equations: Σn is called the set of operations of arity n and the equations defining Tω are the kernel of EX (for some countably infinite set of ‘variables’ X) (for more on set- functors and their presentations see Ada´mek and Trnkov´a [2]).

Example 6.1 У is a quotient of the list-functor List(X) =  n<ω Xn. EX maps lists (x0,... xn) to sets {x0,... xn}. The equations given by E are the usual equa-
tions defining sets from lists (expressing that order and repetitions don’t matter).

Remark 6.2 Every finitary functor Tω has a canonical presentation given by Σn = Tω(n) and EX (p, v) = T (v)(p) for p ∈ T (n) and v : n —→ X.

Using the presentation, we can compute relation liftings (Remark 3.4). The following lemma is the key stone for our development of equational coalgebraic logic

Lemma 6.3 Let R be a relation between X and Y and T a ﬁnitary endofunctor on
Set. For every tx ∈ TX and ty ∈ TY the following conditions are equivalent:

tx T (R) ty.
There exists k < ω, r ∈ T (k), a : k —→ X, and b : k —→ Y such that T (a)(r) = tx,
T (b)(r) = ty, and (∀i ∈ k)(ai R bi).

More informally, we read the lemma as

tx T (R) ty	iff	tx = r(a1,... ak) and ty = r(b1,... bk) and aiRbi
where ‘=’ refers to the equational theory of the presentation of T .

Proof. The proof is straightforward from contemplating the following commuting diagram
ΣX (Σ(πX ) ΣR Σ(πY )) ΣY


EX	ER	EY
v	v	v
(			)


(10)

TX  T (πX )  TR  T (πY )  TY 
and taking into account that ER is surjective (due to T finitary).	 

The logic KT
Given a presentation ⟨Σ, E⟩ of Tω, every p ∈ Σn gives rise to an n-ary predicate lifting

Qn
 
λp 
EQ(p, —)
TωQ
/
/∇

	/
	/s
QT

(11)

If ⟨Σ, E⟩ is the canonical presentation, we call a predicate lifting arising in this way a Moss lifting. The set of all Moss liftings can be identified with  n<ω Tω(n) (notice that if ⟨Σ, E⟩ is any presentation of T there is a canonical function Σn —→ Tω(n)).
Example 6.4 (i) Let T = 1 + Id (deterministic transition systems with termina- tion). For each arity n there is a Moss lifting λ∗ , which indicates termination; this lifting corresponds to the unique element of 1. All other Moss liftings of arity n correspond to the elements of n. For p ∈ n, the Moss lifting λp maps a sequence ϕ : n —→ QX to the set ϕp. Using Moss liftings we can see that if the system is deterministic there is no need go beyond arity 1.
Let T = У (non-deterministic transition systems). Moss liftings of arity n are associated with subsets of n. Let p be one of those subsets. The Moss lifting λp maps a sequence ϕ : n —→ QX to the set
λp(ϕ) = {α ∈ УX | (∀x ∈ α)(∃i ∈ p)(x ∈ ϕi) Λ (∀i ∈ p)(∃x ∈ α)(x ∈ ϕi)}.

Let T be the finite multiset functor. Moss liftings of arity n corresponds to bags p : n —→ N. The predicate lifting associated with such a bag p maps a sequence ϕ : n —→ QX as follows. The pair (p, ϕ) can be considered as multiset over QX (pi being the multiplicity of ϕi). It is then mapped by ∇ according to Example 3.6.

Definition 6.5 Given a presentation ⟨Σ, E⟩ of Tω, the logic K⟨Σ,E⟩
is the logic

(Definition 3.12) given by the set of predicate liftings λp, p ∈ Σn. We simply write KT if the presentation is clear from the context or the canonical presentation. The corresponding functor is denoted by KT : BA —→ BA.
In [21] the natural transformation E was used to translate Moss’s logic into the language of predicate liftings. The translation is based on the fact for each α ∈ TωX there exists a pair (p, v) ∈ Tω(n) × Xn such that EX (p, v) = α. Thus formulas ∇α can be replaced by formulas λp(ϕ1,... ϕn). More formally we have.
Proposition 6.6 ([21]) For every formula in łT there exists an equivalent for- mula KT .
Remark 6.7 By definition, see (11), every Moss’ lifting can be translated into Moss’s language, or more technically, EQX (p, —) is a translator for λp in the sense of Definition 4.2. Moreover, it is also an A-translator (Definition 4.12) for all category

A with power-set algebras (Definition 5). Conversely, instantiating A with Set, we find that Moss liftings are the only predicate liftings for which we can find A- translators for any A. Thus we may say: The Moss liftings are precisely the totally translatable predicate liftings.
Another important property of Moss liftings is that they are monotone:
Proposition 6.8 Let λp : Qn —→ QT be a Moss lifting; let ϕ, ψ : n —→ QX be sequences of sets. If (∀i)(ϕi ⊆ ψi) then λp(ϕ) ⊆ λp(ψ).
Proof. Let E(p, —) be the translator of λp. Using Lemma 6.3 we see that (∀i)(ϕi ⊆ ψi) implies EQ(p, ϕ) T (⊆) EQ(p, ψ). Applying ∇ on both sides of the previous inequality will transform T (⊆) into ⊆; we conclude λp(ϕ) ⊆ λp(ψ).	 
This has the following important corollary.
Corollary 6.9 For every weak pullbacks preserving functor T there exists a set Λ of monotone predicate liftings such that the logic LΛ is expressive. The set Λ is that of Moss liftings.
Remark 6.10 Finding a monotone set of predicate liftings is important in coalge- braic modal logic, as it opens the possibility of adding fix points operators. The previous proposition solves this problem in the case of weak-pullback preserving functors. As far as we know, the general problem for non-weak pullback preserving functors is still open.

A complete equational proof system for K
Now we will present a proof system to describe logical equivalence between formulas built from Moss liftings. [14] presents the following complete and sound system for the ∇-logic.
(∇1) V{∇α | α ∈ A}≤ W {∇T (V)Φ | Φ ∈ SRD(A)}.
(∇2) ∇T (W)Φ ≤ W{∇α | αT (∈)Φ}.	(∇3)  From α ≤ β infer ▶∇ ∇α ≤ ∇β
where α ∈ Tω M, A ∈ Pω Tω M, Φ ∈ Tω Pω M
Space forces us to refer to [14] for details. Intuitively, (∇1) eliminates conjunctions, (∇2) distributes disjunctions over the ∇ and (∇3) is congruence. But note that these intuitions are not expressed in standard logical concepts, e.g. (∇1) involves applying T to the map : Уωł —→ł and the congruence rule uses relation lifting instead of simply substituting terms into operation symbols. This can be avoided by moving from łT to KT , as we show in the following.
To emphasise the equational axiomatisation of T we introduce
Notation 6.11 Given (p, a), (q, b) ∈ Σn × Xn, we write p(a) for (p, a) and q(b) for
(q, b) 8 and
p(a) ≈T q(b)	iff	T (a)(p) = T (b)(q) ( ie iff EX (p, a) = EX (q, b) ).

8 To emphasise that p and q denote operators acting on formulas.

Example 6.12 In the case of the canonical presentation we have.
If T = 1 + id, p(a) ≈T q(b) iff p = q = ∗ or ap = bq.
If T = У, p(a) ≈T q(b) iff {ai | i ∈ p} = {qj | j ∈ q}.
If T = УN, p(a) ≈T q(b) for p : n —→ N, q : m —→ N iff there is a matrix (rij)1≤i≤n,1≤j≤m such that rij = ai = bj and Σi rij = qj and Σj rij = pi, see
Example 3.6.
The key concept behind (∇1) is that of a redistribution.
Definition 6.13 A redistribution of a set A ⊆ ΣX is an element (q, ψ) ∈ Tω(n) × (QX)n such that: for each (p, a) ∈ A there exists k ≤ n, r ∈ T (k), b : k —→ X and ϕ : k —→ QX such that
r(b) ≈T p(a) Λ r(ϕ) ≈T q(ψ) Λ (∀i)(bi ∈ ϕi).	(12) Let |A| = {ai | (p, a) ∈ A}. A redistribution (q, ψ) is slim if n ≤ 2|A| and  i∈n ψi ⊆
|A|. The set of slim redistributions of A is denoted ΣRD(A).
‘Slim’ makes sure that ΣRD(A) is finite if A finite 9 . (∇1) now becomes
(Σ1)	  {λp(a) | (p, a) ∈ A}≤  {λq(  ψ) | (q, ψ) ∈ ΣRD(A)}. where  ψ is short for (  ψ1 ...  ψn).
Remark 6.14 (Σ1) simplifies some, but not all aspects of (∇1). In particular, it does not replace the notion of a redistribution in the sense of [14] by something fundamentally simpler: A ΣRD lives in the upper row of Diagram (10) and has been defined so that it matches the notion from [14] living in the lower row. One way to understand our axiomatisation in general, and (Σ1) and (12) in particular, is as an implementation of the axiomatisation in [14]. Indeed, given A as in (∇1) or (Σ1), to apply the axiom we need a join over a sufficiently large set of redistributions of
A. (12) tells us how to compute this set using the equational theory ≈T . For such computational purposes, one would not work with the canonical representation but rather a smaller one as e.g. given for the powerset in Example 6.1.
To translate (∇2) we make
Definition 6.15 A coredistribution of an element (q, ψ) ∈ ΣQX is an element (p, a) ∈ ΣX satisfying (12) and a injective. The set of coredistributions of (p, ψ) is denoted CRD(p, ψ).
Now (∇2) can be written as follows:

(Σ2)	λp(   ψ) ≤   {λq(a) | (q, a) ∈ CRD(p, ψ)}.

9 Our notion is derived from the corresponding notion of [14]. |A| is the ‘base’ of EX [A] and the cardinality restriction on n derives from the one in [14] plus conditions (1-3) in the proof of the theorem below. If one
wants to work with a non-canonical presentation of Tω , one has to make sure that (1-3) still hold or modify the bound for n. It may also be possible to find better bounds for particular T .

One advantage of our equational axiomatisation is that the rule (∇3) reduces to the standard congruence rule of equational logic. In summary we have:
Theorem 6.16 Let ⟨Σ, E⟩ be the canonical presentation of Tω. The derivation system given by the equational logic for Σ and the axioms Σ1 and Σ2 on top of a complete equational presentation for classical propositional logic is sound and complete for the logic KT .
Proof. (Sketch) Let tr be the translation of Moss liftings into the ∇-logic obtained from the translators E(p, —). Since tr is onto, the axioms Σ1 and Σ2 are translated into instances of the axioms ∇1 and ∇2; and vice-versa.
To see this for (Σ1), we use Lemma 6.3 as well as the following observations on standard functors Tω. (1) For all (p, v) there is (q, w) ≈T (p, v) with w injective.
(2)  Elemx = {(p, v) | E(p, v) = x, v injective } has an initial element (p, v) in the sense that ∀(q, w) ∈ Elemx . ∃f : dom(v) —→ dom(w) . Tf (p) = q.  (3) If (p, v) ∈ Tn × Xn is such an initial element, then n, or more precisely, the image of
v, is the base (see [14]) of E(p, v).	 

Conclusion
In this paper we have depicted a general relation between Moss’s coalgebraic logic and the logic of all predicate liftings. Working over a Boolean base logic, the one- step translations we discussed are summarised below:




¯jר	M




A solid arrow means that the translation works for all T , subject to the proviso that M is only defined if T preserves weak pullbacks. A dotted arrow means that T has to preserve finite sets. K is the logic given by Moss liftings, L¯ is the logic given by all predicate liftings and L is obtained by quotienting L¯ with a complete axiomatisation, M is Moss’s coalgebraic logic. The translations K > L¯, K → M ,
L¯ → L are immediate from the respective definitions, the translations L¯ —→ M
and M —→ L are Theorems 5.2 and 5.5, respectively. Double arrowheads indicate that the translation is onto and can be reversed, albeit not necessarily by a natural transformation as choices of representatives are involved. Arrows with tails indicate that the translation is one-to-one.
The diagram above suggests that L is the canonical logic for T -coalgebras. L can be defined for any T , is always complete [18] and it is expressive if T is finitary [28].





Table 1
Comparison Table: Modalities, base categories, and translations.

If T preserves finite sets, then L and M are equivalent, L has only countably many formulas, and the formulas of L correspond precisely to subsets of the final sequence of T (see [17]). But if T does not preserve finite sets (as e.g. for the distribution or multi-set functor), it is not so clear whether L is the best choice of logic for T in general: On the one hand, L is too expressive as it may have uncountably many formulas, on the other hand it is not maximally expressive in the sense that there may be modal predicates definable by subsets of the final sequence of T that do not correspond to formulas in L.
We also emphasised that these theorems depend on working over BA. This sug- gests that it would be worth studying coalgebraic non-classical logic. In particular,
we do not know of a general relation between Moss’s modality and predicate liftings if the underlying logic is not classical. A summary of the relations between Moss’s modality and the three classes of predicate liftings that we studied with respect to different base logics is presented in Table 1.
The work of Venema on fix points logics suggests that many results on Moss’s logic [15,29] will generalise to this new framework, at least for distributive lattices. There is not much work on non-classical logics of predicate liftings. Notice that

there is already an issue at the basics, namely, what is the appropriate notion of predicate lifting if we don’t work with Boolean algebras? A more technical issue is that the expressivity result in Schro¨der [28] does not seem to work if we leave classical logic. It is not clear to us how the existence of a separating set of predicate liftings implies the Hennessy-Milner property if the underlying logic does not have negations.
At the purely mathematical level, in this paper, we have developed the concepts of translator, logical translator and singleton lifting introduced in [21]. We have
shown that every singleton lifting has a translator (Proposition 4.10). Using these and properties of the category of Boolean algebras, we have shown that if the un- derlying logic is classical then all these translators can be made into BA-translators
(Lemma 5.1) and then all singleton liftings are translatable into Moss’s logic based on Boolean algebras. We have also shown that classical logic is a necessary require- ment to be able to translate, see Examples 4.11 and 5.3. In the other direction, we have provided a compositional translation of Moss’s language (Theorem 5.5). As an additional gain we have used our techniques to prove a Lindstr¨om Theorem for coalgebraic logics (Theorem 5.6). In Example 5.3, we showed that not all predicate liftings are translatable if T does not preserve finite sets, even if the underlying logic is classical logic. However, it would be interesting to give a general characterization of the predicate liftings that can be translated into Moss’s logic and of those that can not be translated. Our conjecture is: A predicate lifting is translatable into Moss’s logic iff it can be presented as a finite disjunction of singleton liftings.
Using our translation techniques, previously mentioned, we have developed a complete and sound equational logic for coalgebras (Section 6). We have shown that for every weak pullback preserving functor there exists a set of monotone predicate liftings, namely the set of Moss liftings (page 11), which is as expressive as Moss’s coalgebraic logic. This opens the possibility to add fix points to logics of predicate liftings. Notice that we developed our equational logic using the canonical representation of a functor T (Remark 6.2). It seems that our work can be carried out using other more economical representations of T . It might be worth to study equational logics obtained from different representations of T .
Another issue that we have not studied is related to the computable properties of translators and logical translators. We don’t know what is the actual computational cost of a translation using logical translators. This might be interesting in the case of an actual implementation of translators.

References
Peter Aczel, Non-well-founded sets, CSLI, Stanford, 1988.
Jiˇr´ı Ad´amek and Vera Trnkov´a, Automata and algebras in categories, Kluwer, 1990.
Falk Bartels, Ana Sokolova, and Erik de Vink, A hierarchy of probabilistic system types, Theoret. Comput. Sci. 327 (2004).
Marcello Bonsangue and Alexander Kurz, Presenting functors by operations and equations, LNCS, vol. 3921, Springer Berlin / Heidelberg, pp. 172–186.

Giovanna D’Agostino and Giacomo Lenzi, On modal μ-calculus with explicit interpolants, Journal of Applied Logic 338 (2006), 256–278.
Ernst-Erich Doberkat, Stochastic relations, Chapman & Hall/CRC, 2007.
Gianluigi Ferrari, Ugo Montanari, and Marco Pistore, Minimizing transition systems for name passing calculi: A co-algebraic formulation, FoSSaCS’02.
Marcelo P. Fiore and Daniele Turi, Semantics of name and value passing, Proc. 16th LICS, IEEE Computer Society Press, 2001, pp. 93–104.
Helle Hansen and Clemens Kupke, A coalgebraic perspective on monotone modal logic, Electronic Notes in Theoret. Comput. Sci., vol. 106, 2004.
Aviad Heifetz and Philippe Mongin, Probabilistic logic for type spaces, Games and Economic Behavior
35 (2001).
David Janin and Igor Walukiewicz, Automata for the modal mu-calculus and related results, MFCS’95 Proceedings, Springer-Verlag, 1995, pp. 552–562.
Bartek Klin, The least fibred lifting and the expressivity of coalgebraic modal logic, LNCS, vol. 3629, Springer Berlin / Heidelberg, 2005, pp. 247–262.
Clemens Kupke, Alexander Kurz, and Dirk Pattinson, Algebraic semantics for coalgebraic logics, ENTCS, vol. 106, 2004, pp. 219–241.
Clemens Kupke, Alexander Kurz, and Yde Venema, Completeness of the finitary Moss logic, Advances in Modal Logic (Carlos Areces and Rob Goldblatt, eds.), King’s College Publications, vol. 7, 2008,
pp. 193–218.
Clemens Kupke and Yde Venema, Coalgebraic automata theory: basic results, Logical Methods in Computer Science 4 (2008), 1–43.
Alexander Kurz, Specifying coalgebras with modal logic, Electronic Notes in Theoret. Comput. Sci., 1998, pp. 57–72.
Alexander Kurz and Dirk Pattinson, Coalgebraic modal logic of finite rank, Math. Structures Comput. Sci. 15 (2005), 453–473.
Alexander Kurz and Daniela Petri¸san, Functorial coalgebraic logic: The case of many-sorted varieties, Electron. Notes Theor. Comput. Sci. 203 (2008), pp. 175–194.
Alexander Kurz and Jiˇr´ı Rosicky´, The Goldblatt-Thomason-theorem for coalgebras, LNCS, vol. 4624, Springer, 2007, pp. 342–355.
	 , Strongly complete logics for coalgebras, (July 2006), Submitted.
Raul Andres Leal, Predicate liftings versus nabla modalities, Electr. Notes Theor. Comput. Sci. 203
(2008), no. 5, 195–220.
Lawrence Moss, Coalgebraic logic, Ann. Pure Appl. Logic 96 (1999), 277–317.
Dirk Pattinson, Coalgebraic modal logic: Soundness, completeness and decidability of local consequence, Theoret. Comput. Sci. 309 (2003), 177–193.
Martin R¨oßiger, Coalgebras and modal logic, Electronic Notes in Theoret. Comput. Sci., vol. 33, 2000,
pp. 299–320.
J.J.M.M. Rutten, Automata and coinduction - an exercise in coalgebra, CONCUR’98 (D. Sangiorigi and R. de Simone, eds.), LNCS, vol. 1466, 1998.
	 , Universal coalgebra: A theory of systems, Theoret. Comput. Sci. 249 (2000), 3–80.
Luigi Santocanale and Yde Venema, Completeness for flat modal fixpoint logics, LPAR (Nachum Dershowitz and Andrei Voronkov, eds.), LNAI Springer, vol. 4790, 2007, pp. 499–513.
Lutz Schr¨oder, Expressivity of Coalgebraic Modal Logic: The Limits and Beyond, vol. 390, 2008,
pp. 230–247.
Yde Venema, Automata and fixed point logic: A coalgebraic perspective, Information and Computation
204 (2006), 637–678.
Albert Visser, Finality regained: A coalgebraic study of scott-sets and multisets, Arch. Math. Logic 41
(2002), 267–298.
