Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 346 (2019) 77–88
www.elsevier.com/locate/entcs

Hull and Geodetic Numbers for Some Classes of Oriented Graphs 1
Julio Araujo and Pedro Arraes2
Department of Mathematics Universidade Federal do Ceara´ Fortaleza - CE, Brazil

Abstract
An oriented graph D is an orientation of a simple graph, i.e. a directed graph whose underlying graph is simple. A directed path from u to v with minimum number of arcs in D is an (u, v)-geodesic, for every u, v ∈ V (D). A set S ⊆ V (D) is (geodesically) convex if, for every u, v ∈ S, all the vertices in each (u, v)- geodesic and in each (v, u)-geodesic are in S. For every S ⊆ V (D) the (convex) hull of S is the smallest convex set containing S and it is denoted by [S]. A hull set of D is a set S ⊆ V (D) whose hull is V (D). The
−→
cardinality of a minimum hull set is the hull number of D and it is denoted by hn(D). A geodetic set of D
is a set S ⊆ V (D) such that each vertex of D lies in an (u, v)-geodesic, for some u, v ∈ S. The cardinality of a minimum geodetic set is the geodetic number of D and it is denoted by −g→n(D).
In this work, we first present an upper bound for the hull number of oriented split graphs. Then, we
turn our attention to the computational complexity of determining such parameters. We first show that
−→	−→
computing hn(D) is NP-hard for partial cubes, a subclass of bipartite graphs, and that computing gn(D)
is also NP-hard for directed acyclic graphs (DAG). Finally, we present a positive result by showing how to compute such parameters in polynomial time when the input graph is an oriented cactus.
Keywords: convexity; oriented graphs; hull number; geodetic number; computational complexity.


Introduction
For basic notions on graph theory and computational complexity, the reader is referred to [4,13]. All graphs in this work are simple and finite, unless explicitly stated otherwise.
A directed graph D = (V, A) whose underlying graph is simple is an oriented graph. Given an oriented graph D, a (directed) (u, v)-path P is a subgraph of D such that V (P )= {u = u0, u1,..., uk = v} and A(P )= {(ui−1, ui) | i ∈ {1,..., k}}.

1 This work was partially supported by a CNPq/Funcap project PNE-0112-00061.01.00/16 SPU N: 4543945/2016, a CNPq Universal project 401519/2016-3 and CNPq grants 310234/2015-8 and 130467/2018- 9.
2 E-mails: julio@mat.ufc.br and pedro.arraes@alu.ufc.br

https://doi.org/10.1016/j.entcs.2019.08.008
1571-0661/© 2019 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

We can also denote it by (u, u1,..., uk−1, v); to represent a path in a non-oriented graph G we remove the parentheses. When w is a vertex of P different than u and v we say that it is an internal vertex of P . The set of internal vertices of P we call the interior of P . An (u, v)-path that uses the least number of arcs possible is called an (u, v)-geodesic. We denote its length by dD(u, v) which represents de distance in D from u to v. In the sequel, whenever D is clear in the context, we only use d(u, v).
Given a vertex v ∈ V (D) we define N−(v) := {u ∈ V (D) | (u, v) ∈ A(D)} and N +(v) := {u ∈ V (D) | (v, u) ∈ A(D)}. Moreover we respectively define the indegree and the outdegree of v by d−(v)= |N−(v)| and d+(v)= |N +(v)|.
For two oriented graphs D1, D2 such that D1 is a subgraph of D2 we denote this fact by D1 ⊆ D2. Given D an oriented graph and C ⊆ D such that its underlying graph is a cycle, we say that C is simply a cycle, the fact that it is oriented is already implied by being a subgraph of D. However, when C is such that V (C)= {v1,..., vn} and A(C)= {(v1, v2),..., (vn−1, vn), (vn, v1)} we say that it is a directed cycle.
The interval function I : P(V (D)) → P(V (D)) satisfies that, for each vertex set S ⊆ V (D) with at least two elements, I[S] is composed by all the vertices in an (u, v)-geodesic, for every u, v ∈ S; when S is unitary we have I[S]= S. For every positive integer n we recursively define I0[S]= S and In[S] := I[In−1[S]], for every
n ≥ 1. A subset S ⊆ V (G) is convex if I[S]= S; if SC = V (D) \ S is convex we say that S is co-convex. The convex hull of S is the smallest convex set which contains
S and is denoted by [S]. There are two interesting properties for this set. One is that it is the intersection of all convex sets containing S. A noteworthy consequence of this fact is that if S does not intersect a given co-convex set, then its convex hull also does not intersect it. The other is that it is obtained when we iterate the interval function on S until we reach a convex set Ik[S](= [S]). Assuming that V (D) is finite, the convex hull for every subset of V (D) is well-defined.
If the convex hull of S is V (D) we say that S is a hull set of D. When S is a
−→
hull set of minimum cardinality, we define the hull number of D as hn(D)= |S| [5].
Similarly, if I[S]= V (D) we say that S is a geodetic set of D. When S is a geodetic set of minimum cardinality, we say that the geodetic number of D is −g→n(D)= |S| [7]. Notice that a geodetic set is also a hull set, so every assertion we make for all hull sets of a given oriented graph D is also valid for the geodetic sets.
Now that we have presented the main parameters of our research, we define a very important type of vertex. It was first introduced in [11] for the undirected case, however we use the definitions given in [5]. A vertex v ∈ V (D) is called extreme if it is of one of the three types below:
Transmitter (source): d−(v)= 0, d+(v) > 0;
Receiver (sink): d−(v) > 0, d+(v)= 0;
Transitive: d−(v) > 0, d+(v) > 0 and (u, w) ∈ A(D), for every u ∈ N−(v) and every w ∈ N +(v).
For undirected graphs we have the simplicial vertices, which are the ones with a

clique for neighborhood. What is so interesting about the extreme vertices is that they must be in every hull set of the oriented graph [5]. There is a similar result for the simplicials [8].
Although the first papers related to convexity in graphs study directed graphs [20,17,10], most of the papers we can find in the literature about graph convexities deal with undirected graphs. For instance, the hull and geodetic num- bers with respect to undirected graphs [11,14] were first studied in the literature around a decade before their corresponding directed versions [5,7].
It is important to emphasize that as D is an orientation of a simple graph, then it cannot have both arcs (u, v) and (v, u), for distinct u, v ∈ V (D).  Thus, the
−→	−→
parameters hn(D) and gn(D) are not equivalent to their undirected versions. For
instance, the hull and geodetic numbers of a path P on 2k edges are both equal to two in the undirected version, while if D is an orientation of P where each vertex
−→	−→
is either a source or a sink, then hn(D)= gn(D)= 2k + 1.
With respect to the directed case, most results in the literature provide bounds
−→	−→
on the maximum and minimum values of hn(D(G)) and gn(D(G)) among all possi-
ble orientations D(G) of a given undirected simple graph G [5,7,12]. It is important to emphasize the results on the parameter hn+(G), the upper orientable hull number of a graph G, since these are the only ones related to the upper bound we present.
−→
Such parameter is defined in [5], as the maximum value of hn(D) among all possible
orientations D of a simple graph G. In the same article, the authors prove that for a non-oriented graph G, hn+(G) = n(G) if and only if there is an orientation D of G such that every vertex is extreme. They also compare this parameter with others, such as the lower orientable hull number (hn-(G)) and the lower and upper orientable geodetic numbers (gn-(G) and gn+(G) respectively), defined analogously. There are also few results about some related parameters: the forcing hull and geodetic numbers [19,6], the pre-hull number [18] and the Steiner number [15] are
a few examples.
In this work, we first present a general tight upper bound for the hull number of an oriented split graph, in Section 2. Note that such bound is also an upper bound to hn+(G), whenever G is a split graph.
Then, we consider as input an oriented graph D and we study the computa-
−→	−→
tional complexity of determining hn(D) and gn(D), when the underlying graph of
D belongs to some particular graph class. Up to our best knowledge, this is the first work to consider such questions.
It is known that determining the hull number of an undirected partial cube is
NP-hard [1]. In Section 3, we prove that such result can be used to prove that
−→
determining whether hn(D) ≤ k, when D is an orientated partial cube, is NP-
complete. Although the proof requires a careful analysis, the idea is quite simple: by replacing each edge of a partial cube G with a directed C4, we obtain an oriented graph D(G) whose underlying graph is a partial cube, and whose hull number
−→
hn(D(G)) is the same as hn(G). It is important to recall that partial cubes are
bipartite graphs. In the same section, we also prove that determining −g→n(D) ≤ k is
also an NP-complete problem, even if D is a directed acyclic graph (DAG) whose

underlying graph is bipartite.
−→	−→

Finally, we prove in Section 4 that hn(D) and gn(D) can be computed in poly-
nomial time if D is a cactus, i.e. a graph whose blocks are either edges or induced cycles.
In Section 5, we present avenues for further research.

Upper bound on the hull number of an oriented split graph
The hull number problem for (non-oriented) split graphs has already been studied in [8]. Given a split graph G = (S ∪ C, E) with S a maximal stable set and C a clique, the authors prove that either the set of simplicial vertices of G is a minimum hull set or hn(G) = |S| + 1. Moreover, the hull number of G can be decided in polynomial time.
Notice that in a split graph the vertices of S are simplicials. Thus, they belong to any hull set in the non-oriented case. However, in an orientation of G, maybe none of the vertices of S is extreme.
The extreme vertices of S must be in every hull set of D (an orientation of G), leaving the non-extreme of S to analyse. Given a non-extreme vertex v ∈ S, by definition there must be u, w ∈ C such that (u, v), (v, w), (w, u) ∈ A(D), which means that v ∈ I[{u, w}]. Using that argument for every non-extreme vertex of S gives us S \ Ext(D) ⊆ I[C], where Ext(D) denotes the set of extreme vertices of an oriented graph D. We then focus on the hull number problem for tournaments.
Let us first observe that extreme vertices in a tournament do not need to be considered when applying the interval function, as no (u, v)-geodesic with non- empty interior ends in an extreme vertex.
Lemma 2.1 Let D be a tournament and u, v ∈ V (D) two distinct vertices such that u ∈ Ext(D). Then I[{u, v}]= {u, v}.
If D is a tournament, this means that for every Sj ⊆ V (D), we have I[Sj] = (Sj ∩ Ext(D)) ∪ I[Sj \ Ext(D)]. By iterating this argument, we obtain the following result:
Corollary 2.2 If D is a tournament, then Sj is a hull set of D if, and only if,
Ext(D) ⊆ Sj and [Sj \ Ext(D)] = V (D) \ Ext(D).
Let us analyse the non-extreme vertices of D. Given a non-extreme vertex v ∈ V (D) there must be u, w ∈ V (D) such that (u, v), (v, w), (w, u) ∈ A(D), which implies that u, w are also non-extreme vertices. This means that each non-extreme vertex of D lies in a directed C3 ⊆ D and that v lies in a (u, w)-geodesic.
Thus, for each non-extreme vertex v that does not belong to a minimum hull set Sj of D, at most two other vertices must belong to Sj to ensure that v ∈ [Sj]. Now we can state the main result for tournaments.

−→	2
Proposition 2.3 If D is a tournament, then hn(D) ≤ | Ext(D)|+ 3 |V (D)\Ext(D)|
and this bound is tight.
Next we show a couple of definitions that enable us to present a tournament which achieves the above bound.
Take D, Dj oriented graphs. The lexicographic product of D by Dj, denoted by D◦Dj, is the oriented graph which satisfies V (D◦Dj)= {(u, v) | u ∈ V (D) and v ∈ V (Dj)} and ((u1, v1), (u2, v2)) ∈ A(D ◦ Dj) if, and only if, either (u1, u2) ∈ A(D) or u1 = u2 and (v1, v2) ∈ A(Dj). In other words, for each vertex v ∈ V (D) we take a copy of Dj, namely Dj , and if (u, v) ∈ A(D), then we add the arcs (uj, vj), for each uj ∈ V (Dj ) and each vj ∈ V (Dj ). A transitive orientation of a graph G is an
u	v
oriented graph D obtained from G such that every vertex is extreme. In this case,
a transitive orientation of a complete graph is a transitive tournament.
Proposition 2.4 If Dj is a directed C3, Dk is a transitive tournament with k ver-
j	−→	2

tices and D = D
Dk, then hn(D)= 3 |V (D)| for every k ≥ 1.

Now we return to oriented split graphs. Since in Proposition 2.3 we use only paths of length at most two, we can still find a subset of vertices Cj in the clique C such that [Cj ∪ Ext(D[C])] ⊇ C and |Cj| ≤ 2 (|C \ Ext(D[C])|). We have seen before that S \ Ext(D) ⊆ I[C], from where we may deduce the following:
Corollary 2.5 Let D = (S∪C, A) be an oriented split graph such that S is maximal
−→	2
and |C|≥ 2. Then, hn(D) ≤ | Ext(D) ∩ S| + | Ext(D[C])| + 3 |C \ Ext(D[C])|.
NP-completeness on oriented bipartite graphs
In this section, we first study the hull number of a subclass of bipartite graphs, then we argue that computing the geodetic number is also NP-hard for bipartite graphs.

Hull number
In the undirected case, it was proven that determining the hull number of a graph is an NP-hard problem, even for bipartite graphs [2]. Recall that if arcs in both senses were allowed, then this result would imply the NP-hardness on the oriented case. Here, we first prove that replacing each edge by an oriented C4 has roughly the same effect in the class of bipartite graphs.
Given a bipartite graph G, we create an oriented bipartite graph G—→ with
the following procedure.  Given that V (G) = {v1,..., vn}, for each pair of ad-
jacent vertices vi and vj we add the vertices vi,j, vj,i to V (G—→) and the arcs (vi, vi,j), (vi,j, vj), (vj, vj,i), (vj,i, vi) to A(G—→). So we have that V (G—→)= V (G) ∪
C4	C4
{vi,j, vj,i | vivj ∈ E(G)} and A(G—→)= {(vi, vi,j), (vi,j, vj), (vj, vj,i), (vj,i, vi) | vivj ∈
E(G)}. Thus, we replaced each edge with a directed C4. Therefore, if there was a path P = (vi =)vi0 , vi1 ,..., vik (= vj) in G, in G—→ we would have the oriented paths (vi = vi0 , vi0,i1 , vi1 ,..., vik−1,ik , vik = vj) and (vj = vik , vik,ik−1 , vik−1 ,..., vi1,i0 , vi0 = vi). Thus, one can observe that any hull set of G can be used to obtain a hull set of

G—→. We were also able to prove that, since G is bipartite, any minimum hull set of G—→ can be used to obtain a hull set of G with the same cardinality.
−→
Theorem 3.1 If G is a bipartite graph, then hn(G)= hn(G—→).
Thus, one can combine the result in [2] with Theorem 3.1 to deduce that, given an oriented bipartite graph D and a positive integer k, deciding whether −g→n(D) ≤ k is an NP-complete problem. However, one can observe that such reduction can also be applied to partial cubes, a subclass of bipartite graphs, which we define in the
sequel.
The hypercube graph of dimension n Qn is the (non-oriented) graph such that
V (Qn) = {(v1,..., vn) | vi ∈ {0, 1} ∀i ∈ {1,..., n}} and E(Qn) = {uv | ∃!i ∈
{1,..., n} : ui /= vi}. In other words, the vertices are n-tuples of 0’s and 1’s and two vertices are adjacent if the differ in only one entry. A graph G is a partial cube if there are a natural number n and an injective mapping ϕ : V (G) → V (Qn) such that dG(u, v)= dQn (ϕ(u), ϕ(v)) for every u, v ∈ V (G).
Computing the hull number of partial cubes is also an NP-hard problem [1]. Thus, we only have to show that our reduction would return an oriented partial cube.
Proposition 3.2 If G is a partial cube, then G—→ is an oriented partial cube.
The idea for the proof is that, when we take G—→ for a partial cube G ⊆ Qn
with n minimum, we have G—→ ⊆ Q2n. For each vertex u = (u1,..., un) ∈ V (G) we
take u∗ = (u1,..., u2n) ∈ G—→ such that u2i—1 = u2i = ui for every i ∈ {1,..., n}.
∗	∗	C4	∗	∗
Moreover, for each edge uv ∈ E(G) we know that u∗ and v∗ differ in exactly two
consecutive entries: u2i—1 = u2i /= v2i—1 = v2i. We thus add two vertices such that
∗	∗	∗	∗
the other 2n − 2 entries for them both are the same as in u∗ and in v∗, and the
other two are respectively u2i—1, v2i and v2i—1, u2i, giving us the desired C4.
Corollary 3.3 Given an oriented partial cube D and a positive integer k, it is
−→
NP-complete to decide whether hn(D) ≤ k.
Geodetic number
Our goal in this section is to prove that the following problem is NP-complete:
Geodetic number
Instance: Oriented graph D and a positive integer k
Question: −g→n(D) ≤ k?
Theorem 3.4 Geodetic number is an NP-complete problem, even if the input
oriented graph D has no directed cycle and its underlying graph is bipartite.
Proof. Given a subset of vertices S ⊆ V (D), one can compute (u, v)-geodesics,

for every u, v ∈ V (D), and decide whether S is a geodetic set in polynomial time similarly to the undirected case [3]. Consequently, the problem is in NP.
We reduce the well-known Set Cover [16] problem to Geodetic number:
Set Cover
Instance: U = {1, 2,..., n}, F ⊆ P(U ) such that S F = U and a positive integer k
Question: Does there exist Fj ⊆F such that S Fj = U and |Fj|≤ k?
Let (U = {1, 2,..., n}, F = {F1,..., Fm}, k) be an input to Set Cover. We shall construct an oriented graph D such that (U, F, k) is an YES-instance if, and only if, −g→n(D) ≤ k + 3.
The vertex set of D consists of two subsets of vertices X and Y and three more vertices u, v and w. In X there is one vertex ui corresponding to Fi ∈ F, for every i ∈ {1,..., m}. In Y there is a vertex vj corresponding to each element in U , for every j ∈ {1,..., n}.
In the arc set of D there is the arc (ui, vj) ∈ A(D) whenever j ∈ Fi, for every i ∈ {1,..., m} and j ∈ {1,..., n}. Moreover, A(D) has the arcs (u, ui), (ui, w) for every i ∈ {1,..., m}, the arcs (vj, v) for every j ∈ {1,..., n}, and finally the arc (u, v).






u	v











Fig. 1. Given the set {1, 2, 3, 4, 5} and the family {{1, 2, 3}, {1, 4}, {2, 3, 5}}, the procedure described above returns the oriented graph of this figure.

By construction, D is clearly a DAG whose underlying graph is bipartite (with partition V (D) = (X ∪ {v}) ∪ (Y ∪ {u, w})). Notice that u is a source and that v and w are sinks, thus they belong to any geodetic set. Besides, (u, w) ∈/ A(D) and for every ui ∈ X we have the path (u, ui, w). Since (u, v) ∈ A(D) we have I[u, v, w]= X ∪ {u, v, w}.

Let Fj = {Fi | i ∈ I} ⊆ F, for some I ⊆ {1,..., m} such that S
Fi = U and

|I| ≤ k. We then take Xj = {ui | i ∈ I}∪ {u, v, w}, which has cardinality at most k + 3. Thus, for every vj ∈ Y there is ui ∈ Xj such that (ui, vj) ∈ A(D), from where we have the geodesic (ui, vj, v). Therefore, one can observe that Xj is a geodetic set of D.
On the other hand, let S be a geodetic set of D with at most k + 3 vertices. Thus, {u, v, w} ⊆ S and at most k vertices of S belong to X ∪ Y . If some vj ∈ S, one can observe that by replacing vj with a vertex ui such that (ui, vj) ∈ A(D), we obtain another geodetic set Sj such that |Sj| ≤ k + 3. Thus, without loss of
generality, we assume that S \ {u, v, w} ⊆ X. Let I = {i ∈ {1,..., m} | u ∈ S}. One can also observe that the family Fj = {Fi ∈ F | i ∈ I} satisfies S Fj = U and
|Fj|≤ k.	2

Polynomial-time algorithm for cacti
The hull and geodetic numbers of an undirected tree T are equal to the number of leaves of T . Notice that the leaves of a tree are simplicial vertices. Moreover, any node belongs to an uv-path for some distinct leaves u, v ∈ V (G), and that path is a geodesic because it is unique. That means that the set of simplicial vertices of a tree is a minimum hull and geodetic set. A similar statement is true for the oriented case.
Proposition 4.1 Let D be an oriented tree. Then, Ext(D) is both a minimum
−→
hull set and a minimum geodetic set of D. Consequently, it is unique and hn(D)= 
−g→n(D)= | Ext(D)|.
Thus, one can also observe that the hull and geodetic numbers of oriented trees, a subclass of oriented bipartite graphs, can be both computed in linear time.
This result led us to work on the cacti graphs. A graph is called a cactus if each block is either an edge or a cycle. Consequently, every cycle is an induced cycle and two cycles intersect in at most one vertex.
For cacti, the extreme vertices may not suffice in order to obtain a hull or a geodetic set. It is necessary to include some non-extreme vertices of some particular cycles. We introduce below a few important notions in order to define such cycles. In the remainder of this section, let D be an oriented cactus graph. When we refer to a cycle subgraph of D it does not mean that it has a specific orientation, only that its underlying graph is a cycle. Let C ⊆ D be a cycle and u ∈ V (C) bea cut-vertex of D. If there is an arc (u, v) ∈ A(D)\A(C), we say that u is a transmitter cut-vertex of C and use the initials TCV. Analogously, if (v, u) ∈ A(D) \ A(C) we say that u is a receiver cut-vertex and use the initials RCV. Notice that we can
have a cut-vertex which is both an RCV and a TCV.
A cycle C ⊆ D is called a leaf cycle if it has only one cut-vertex. We say that a trap cycle is a directed cycle C such that its cut-vertices are either all transmitters or all receivers. If C is a trap cycle with a TCV we say that it is a transmitter trap cycle. Similarly, a trap cycle with an RCV is a receiver trap cycle. At last, we say

that a cycle C is unsatisfactory if one of the following holds: Type 1: C is a trap cycle;
Type 2: C is a directed leaf cycle that is not a trap cycle;
Type 3: there are only two vertices in Ext(C), say u1 and u2, such that the two (u1, u2)-paths in C have different lengths and the longest one does no have internal cut vertices.
When none of these happens, we say that the cycle is satisfactory.
Lemma 4.2 Let D be an oriented cactus graph and C an unsatisfactory cycle of
D. V (C) contains a co-convex set S and if C is of type:
1, S = V (C);
2, S = V (C) \ {w} where w is the cut-vertex of C;
3 with Ext(C) = {u, v}, S is composed by the internal vertices of the longest
(u, v)-path.
Moreover, there is no intersection between any two of these co-convex sets.
Recall that any hull set must intersect any co-convex set. Thus, any hull set must have at least one vertex of each unsatisfactory cycle. Let us now give some intuition on which vertices must belong to a hull set of an oriented cactus.
Given a vertex v, we consider a maximal directed path P containing v, such that P exits each cycle as soon as possible. There are three ways to end P : it finishes at either an extreme vertex or a trap cycle or an unsatisfactory cycle of type 2. In the last two cases, there is not a way out of the cycle, either because all its other cut-vertices are also receivers or there is only one, and we necessarily run through all the vertices of the cycle. In every case we can end the path in a vertex that will be in any hull set. This is roughly how we prove the following result.
Lemma 4.3 Let D be an oriented cactus and u ∈ V (D). For every v ∈ N +(u) (v ∈ N—(u)) there is a maximal path P = (v1,..., vq) with u = v1 and v = v2 (u = vq and v = vq—1) such that vq (v1) either is extreme or belongs to an unsatisfactory cycle C of type either 1 or 2. Moreover, in the latest two cases all the vertices of C are in V (P ).
With that we can obtain a path between two vertices in any hull set having v in its interior, but it does not guarantee the existence of a geodesic. However, for some vertices if there was a geodesic not containing v then that would create a block that is not allowed in a cactus graph. Next we present some restrictions for these paths.
Lemma 4.4 Let D be an oriented cactus graph with C ⊆ D a cycle, u, v ∈ V (D)
and P an (u, v)-path.
If there is a w ∈ V (P ) that does not belong to any cycle of D then every
(u, v)-path contains w.
Let (w1P ,..., wqP )= Pj ⊆ P ∩ C be maximum with qP ≥ 2. Then:
every (u, v)-path goes through C;

if u ∈/ V (C) then w1P is the same vertex for every path P; and
if v ∈/ V (C) then wqP is the same vertex for every path P.
By combining the arguments provided by Lemmas 4.2, 4.3 and 4.4, one may deduce how to obtain a minimum hull set of an oriented cactus.
Theorem 4.5 Let D be an oriented cactus graph. Then there exists a minimum hull set S of D composed by the extreme vertices of D and by exactly one non- extreme vertex of each unsatisfactory cycle. Moreover, I[S] contains all vertices that are not in a satisfactory cycle and I2[S]= V (D).
The proof argues which vertex must be chosen in each unsatisfactory cycle. All
−→
such vertices can be found in linear-time. Thus, hn(D) can be found in linear-time,
for every oriented cactus D.
The above theorem motivated us to also work on the geodetic number for these oriented graphs. Since a geodetic set is also a hull set, every geodetic set must have a non-extreme vertex of each unsatisfactory cycle. Besides, seen as only some satisfactory cycles may have vertices that are not obtained in the first iteration of the interval function, we studied such cycles in order to obtain a minimum geodetic set. As a result, we define the falsely satisfactory cycles, FSC for short. These can be of two types:
Type 1: Ext(C) = {u1, u2}, u1 is a source and u2 is a sink. The (u1, u2)-paths have distinct lengths, P being the longest. P has length at least three and one of its internal vertices is a cut-vertex in D. Besides, all the following statements hold:
If there is an RCV v1 internal to P , the (u1, v1)-path must have length at least two;
If there is a TCV v2 internal to P , the (v2, u2)-path must have length at least two;
If there are both an RCV v1 and a TCV v2 internal to P , (1) and (2) hold and we must have P = (u1,..., v2,..., v1,..., u2). Moreover, the (v2, v1)-path must also have length at least two.
Type 2: The cycle C is directed and there are distinct RCV v1 and TCV v2 in C
such that:
dC(v2, v1) ≥ 1; and
all the other cut-vertices are internal to P = (w0, w1,..., wk—1, wk), where w0 = v1 and wk = v2. Besides, if wi is an RCV and wj is a TCV then i ≤ j for every i, j ∈ {0, 1,..., k}.
Otherwise, we say that the cycle is truly satisfactory and use TSC to simplify.
Lemma 4.6 Let D be an oriented cactus graph and C ⊆ D be a satisfactory cycle. Then:
if C is truly satisfactory and S is a minimum hull set of D then I[S] ⊇ V (C);
if C is falsely satisfactory and S = N +(V (C)) ∪ N—(V (C)) then I[S] + V (C). Moreover the vertices not in I[S] are the following ones:

  if C is of type 1, the internal vertices of the (w1, w2)-path where w1 ∈ {u1, v2}
and w2 ∈ {u2, v1} are as close as possible;
  if C is of type 2, the internal vertices of the (v2, v1)-path. And also none of these vertices is a cut-vertex.
Since, for each FSC, the vertices not in I[S] are not connected to the rest of the graph, we conclude that every geodetic set must have at least one non-extreme vertex of each FSC.
Theorem 4.7 Let D be an oriented cactus graph. There is a geodetic set composed by all the extreme vertices, one non-extreme of each unsatisfactory cycle and one of each FSC. Moreover, this geodetic set is minimum.
Once more, such minimum geodetic set can be found in linear time by just analyzing the cycles and determining which ones are (truly/falsely) satisfactory and unsatisfactory.
Further research
We first proved that the hull number of an oriented split graph D = (S ∪ C, A) is roughly 2 (|C|) plus the number of its extreme vertices and | Ext(G[C])|. A natural question is whether a similar bound holds for the geodetic number of an oriented
split graph or, at least, a tournament.	−→
Here we also proved that, given an oriented graph D, determining hn(D) and
−g→n(D) are NP-hard problems even if the underlying graph of D is bipartite. Equiv-
alent results were known in the literature [1,9] for the undirected case. We believe that the same is true concerning the class of chordal graphs. Determining hn(G) and gn(G) are NP-hard problems even if G is chordal [3,9]. A first open problem would be:
Problem 5.1 Is it true that, given an oriented graph D and a positive integer
−→	−→
k, then determining whether hn(D) ≤ k or whether gn(D) ≤ k are NP-complete
problems, even if the underlying graph of D is chordal?
In fact, even determining such parameters for tournaments seems a hard task.
−→ Another natural problem is to find some graph class G for which determining hn(D) is an NP-hard problem, while determining hn(G) can be solved in polynomial
time, for some simple graph G ∈G and some orientation D of G. The same should also be studied for the geodetic number.
Finally, bounds and complexity results for other graph classes (e.g. planar graphs, graphs with bounded treewidth, graphs with few P4’s, etc.) are also widely open.

References
Albenque, M. and K. Knauer, Convexity in partial cubes: The hull number, Discrete Mathematics 339
(2016), pp. 866 – 876.

Araujo, J., V. Campos, F. Giroire, N. Nisse, L. Sampaio and R. Soares, On the hull number of some graph classes, Theoretical Computer Science 475 (2013), pp. 1 – 12.
Bessy, S., M. Dourado, L. Penso and D. Rautenbach, The geodetic hull number is hard for chordal graphs, SIAM Journal on Discrete Mathematics 32 (2018), pp. 543–547.
Bondy, J. and U. Murty, “Graph Theory,” Springer Publishing Company, Incorporated, 2008, 1st edition.
Chartrand, G., J. F. Fink and P. Zhang, The hull number of an oriented graph, International Journal of Mathematics and Mathematical Sciences 2003 (2003), pp. 2265–2275.
Chartrand, G. and P. Zhang, The forcing geodetic number of a graph, Discussiones Mathematicae Graph Theory 39 (1999), pp. 45–58.
Chartrand, G. and P. Zhang, The geodetic number of an oriented graph, European Journal of Combinatorics 21 (2000), pp. 181 – 189.
Dourado, M. C., J. G. Gimbel, J. Kratochv´ıl, F. Protti and J. L. Szwarcfiter, On the computation of the hull number of a graph, Discrete Mathematics 309 (2009), pp. 5668 – 5674, combinatorics 2006, A Meeting in Celebration of Pavol Hell’s 60th Birthday (May 15, 2006).
Dourado, M. C., F. Protti, D. Rautenbach and J. L. Szwarcfiter, Some remarks on the geodetic number of a graph, Discrete Mathematics 310 (2010), pp. 832 – 837.
Erd¨os, P., E. Fried, A. Hajnal and E. C. Milner, Some remarks on simple tournaments, algebra universalis 2 (1972), pp. 238–245.
Everett, M. G. and S. B. Seidman, The hull number of a graph, Discrete Mathematics 57 (1985),
pp. 217 – 223.
Farrugia, A., Orientable convexity, geodetic and hull numbers in graphs, Discrete Applied Mathematics
148 (2005), pp. 256 – 262.
Garey, M. R. and D. S. Johnson, “Computers and Intractability; A Guide to the Theory of NP- Completeness,” W. H. Freeman & Co., New York, NY, USA, 1990.
Harary, F., E. Loukakis and C. Tsouros, The geodetic number of a graph, Mathematical and Computer Modelling 17 (1993), pp. 89 – 95.
Hernando, C., T. Jiang, M. Mora, I. M. Pelayo and C. Seara, On the steiner, geodetic and hull numbers of graphs, Discrete Mathematics 293 (2005), pp. 139 – 154, 19th British Combinatorial Conference.
Karp, R., Reducibility among combinatorial problems, in: R. Miller and J. Thatcher, editors, Complexity of Computer Computations, Plenum Press, 1972 pp. 85–103.
Moon, J. W., Embedding tournaments in simple tournaments, Discrete Mathematics 2 (1972), pp. 389 – 395.
Polat, N. and G. Sabidussi, On the geodesic pre-hull number of a graph, European Journal of Combinatorics 30 (2009), pp. 1205 – 1220, part Special Issue on Metric Graph Theory.
Tong, L.-D., The forcing hull and forcing geodetic numbers of graphs, Discrete Applied Mathematics
157 (2009), pp. 1159 – 1163.
Varlet, J. C., Convexity in tournaments, Bull. Soci´et´e Royale des Sciences de Li`ege 45 (1976), pp. 570 – 586.
