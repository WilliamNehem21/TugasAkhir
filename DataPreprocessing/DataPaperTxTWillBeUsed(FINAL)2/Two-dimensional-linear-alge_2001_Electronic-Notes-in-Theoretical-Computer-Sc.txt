Electronic Notes in Theoretical Computer Science 44 No. 1 (2001)
URL: http://www.elsevier.nl/locate/entcs/volume44.html 14 pages


Two-dimensional linear algebra

Martin Hyland
Department of Pure Mathematics and Mathematical Statistics University of Cambridge
Cambridge, ENGLAND

John Power 1
LFCS, Division of Informatics University of Edinburgh
King’s Buildings, Edinburgh EH9 3JZ, SCOTLAND


Abstract
We introduce two-dimensional linear algebra, by which we do not mean two-dimensional vector spaces but rather the systematic replacement in linear algebra of sets by cat- egories. This entails the study of categories that are simultaneously categories of algebras for a monad and categories of coalgebras for comonad on a category such as SymMons, the category of small symmetric monoidal categories. We outline rele- vant notions such as that of pseudo-closed 2-category, symmetric monoidal Lawvere theory, and commutativity of a symmetric monoidal Lawvere theory, and we ex- plain the role of coalgebra, explaining its precedence over algebra in this setting.
We outline salient results and perspectives given by the dual approach of algebra and coalgebra, extending to two dimensions the study of linear algebra.


Introduction
Fundamental to the development of linear algebra are extensions of the fact that for any commutative ring R, the forgetful functor U : R-Mod −→ Ab from the category of R-modules to the category of abelian groups has both left and right adjoints. The left adjoint sends an abelian group A to the tensor product R ⊗ A in Ab, with R-action induced by the multiplication of R. The right adjoint sends an abelian group A to the R-module [R, A] given by the set of abelian group morphisms from R to A, with the pointwise abelian group

1 This work is supported by EPSRC grant GR/M56333: The structure of programming languages : syntax and semantics, and a British Council grant and the COE budget of STA Japan.
◯c 2001 Published by Elsevier Science B. V. Open access under CC BY-NC-ND license.


structure and with the action of R on [R, A] induced by precomposition. These adjoints can be expressed as left and right Kan extensions respectively, if one enriches in the symmetric monoidal closed category of abelian groups, because a commutative ring is exactly a commutative monoid in the category Ab. The two adjoints exhibit R-Mod as both the category of algebras for a monad on Ab and also as the category of coalgebras for a comonad on Ab.
The above suggests that linear algebra is a potential area of application of the study of coalgebras. But it does not, a priori, imply that linear algebra is relevant to computer science. However, now suppose we drop the assumption of inverses in the definition of a group. Then, abelian groups above would be replaced by commutative monoids, rings would be replaced by semirings, and R-modules remain the same except that the underlying object need only be a commutative monoid rather than an abelian group.
Having done this, consider a second step, generalising from sets to cat- egories. Some of the equalities of commutative monoids are most naturally replaced by coherent isomorphisms, so let us assume we systematically do that. Abelian groups, which became commutative monoids above, now be- come small symmetric monoidal categories. One can prove that the category of small symmetric monoidal categories does not have a coherent symmet- ric monoidal closed structure on it, systematically generalising that of Ab, but it does have a pseudo-closed structure, which, with care, should suffice for our purposes. The underlying mathematics is not yet complete, as we shall explain. But in principle, a commutative ring now becomes a pseudo- commutative pseudo-monoid M in SymMon and we can consider a comonad of the form [M, −] and coalgebras for it. So we are still in the realm of coal- gebra, and this is now relevant to computer science, as illustrated in [12], as it supports analysis of various kinds of contexts as well as various kinds of wiring, as provided for instance by categories with finite products, or finite coproducts, or symmetric monoidal structure, or variants or combinations of these. See for instance [18] for one sophisticated combination, and see [12] for several other examples.
However, as mentioned above, the underlying mathematics is not yet com- plete. We do have a definition of pseudo-closed 2-category [13] generalising Eilenberg and Kelly’s definition of closed category [8], and SymMon is an ex- ample, but we do not yet have a notion of pseudo-symmetric pseudo-monoidal pseudo-closed 2-category. So, a priori, we cannot yet say what a pseudo- commutative pseudo-monoid in SymMon is. But that seems likely to be achievable in coming years, and we already have clear evidence, based on the work in [13], that the coalgebraic perspective here will be far more primitive than the algebraic perspective. Moreover, despite not yet having completed the underlying mathematics, we are already in a position to explicate much of the relevant coalgebraic structure. In particular, as we have a definition of pseudo-closed 2-category, we can define a monoid to be a comonad of the form [M, −], and continue in that vein. We largely leave that implicit in the

paper, but it is the underlying idea.
This application of coalgebra to computer science has not previously been considered, so here, we present some of the ideas and underlying structures that we have been developing. This may be seen as the beginning of what might be called two-dimensional linear algebra: just as linear algebra is char- acterised by its special additional features on top of those given by univer- sal algebra, notably its coalgebraic structure, two-dimensional linear algebra may equally be characterised by its special features, notably coalgebraic ones, relative to the two-dimensional universal algebra of [2]. As usual in two- dimensional studies, the greatest challenge is in taking careful note of the sub- tle relationship between equality and coherent isomorphism [15,2]. We have not, at this time, developed other aspects of linear algebra two-dimensionally, but we anticipate doing so.
The originality of this paper resides primarily in its identification of two- dimensional linear algebra as a topic of study, its development of relevant notions such as that of symmetric monoidal Lawvere theory, and in explaining how this can be seen as an area of application of coalgebra in computer science. Some of the technical results here, primarily those of Sections 3 and 4, have been presented previously in a different (more complicated) form, in [12], but others have not.
The paper is organised as follows. In Section 2, we outline our concep- tion of two-dimensional linear algebra and how we hope to develop it. We sketch the basic definitions and results, and we explain why coalgebra plays a stronger role here than in the ordinary one-dimensional linear algebra. In Sec- tion 3, we introduce the notion of a symmetric monoidal Lawvere theory. In Section 4, we define what it means for a symmetric monoidal Lawvere theory to be commutative, and we prove that this induces a comonad on SymMons. And in Section 5, we show how, by means of a more complex construction that may ultimately prove to be less natural, one can obtain a comonad to account for those examples of symmetric monoidal Lawvere theories that are not commutative.

An overview of two-dimensional linear algebra
Extending the situation for Ab, or perhaps better, the category CMon of commutative monoids, to two dimensions, we should like to prove that the category SymMons of small symmetric monoidal categories and strict sym- metric monoidal functors is itself a symmetric monoidal category. There is a theorem, ultimately due to Kock [16], but also expressed in [14], which is a primary reference for us, that may help.
Given a 2-monad T on Cat, the monad T automatically acquires a strength
t : X × TY −→ T (X × Y )
using the cartesian closed structure of Cat together with the enrichment of T


to a 2-functor. It also acquires a costrength
t∗ : TX × Y −→ T (X × Y )
by trivial use of the symmetry of finite products in Cat.
A 2-monad T on Cat is commutative if for every pair of categories X and
Y , the diagram
t	T t∗
TX × TY   ✲ T (TX × Y )   ✲ T 2(X × Y )

t∗	µ
❄	❄
T (X × TY )  ✲ T 2(X × Y ) 	✲ T (X × Y )
Tt	µ
commutes, where µ is the multiplication of the 2-monad.
Theorem 2.1 For any finitary 2-monad T on Cat, the category T-Alg is symmetric monoidal closed, making the forgetful functor U : T-Alg −→ Cat into part of a symmetric monoidal closed adjunction if and only if T is com- mutative.
Alas, it follows from this theorem that the 2-category SymMons has no symmetric monoidal closed structure that is coherent with that of Cat in the sense of the theorem: the reason is that T is not commutative, and the reason for that is that the commutativity diagram does not commute, but rather contains a non-trivial isomorphism determined by the symmetry in the definition of symmetric monoidal category. No coherence theorem can force that symmetry to be an equality, even in the most mundane examples. This contrasts with the situation for Ab relative to Set: the category Ab is symmetric monoidal closed, coherently with respect to the finite product structure of Set, and because of that, one can consider a commutative ring R as a commutative monoid in the symmetric monoidal category Ab and proceed to consider R ⊗− and [R, −]. So, at first sight, we appear to be stuck. 
There seem to be two ways to negotiate this difficulty. The first, more elegant, approach is to define a notion of pseudo-symmetric pseudo-monoidal pseudo-closed 2-category and attempt to prove that the 2-category SymMon of small symmetric monoidal categories and strong symmetric monoidal func- tors has that structure. That should be possible within the coming few years, as we are making good progress in that direction in [13] based upon a notion of pseudo-commutative monad.
We do not give detailed definitions here, as our account is not complete yet and the details might distract from the flow of the paper. So we refer the reader to [13] for detail. But the central idea is as follows. One first defines a notion of pseudo-commutative monad. For the 2-category theoretic terminology used here, we refer the reader to [15].

Definition 2.2 A pseudo-commutative monad on Cat is a 2-monad T to- gether with a isomorphism, natural in X and Y , with components
t	T t∗
TX × TY   ✲ T (TX × Y )   ✲ T 2(X × Y )

t∗	⇓ ρX,Y	µ

❄	❄
T (X × TY )  ✲ T 2(X × Y ) 	✲ T (X × Y )
Tt	µ
subject to one coherence axiom with respect to each of the symmetry of Cat, and the multiplication, unit, and strength of T .
Examples of pseudo-commutative monads include our leading example of the 2-monad for small symmetric monoidal categories, the 2-monad for small categories with finite products, and that for small categories with finite co- products. Another example is the 2-monad for which an algebra is a small symmetric monoidal category together with a strong endofunctor, as lies at the heart of [9]. A non-example is the 2-monad for which an algebra is a small category together with a monad on it. This can all be verified by routine calculation.
We then define a notion of pseudo-closed 2-category. The full definition is complex, owing to a lengthy but definitive list of coherence axioms: the axioms are only a little more complex than those in Eilenberg and Kelly’s definition of closed category in [8], which are also lengthy. The central data is that a pseudo-closed 2-category has, for each pair of objects X and Y , an object [X, Y ] that acts as an internal hom, or exponential, of X and Y . The construction becomes an endo-2-functor [X, −] on the pseudo-closed 2- category, so we are in a position in which we can consider coalgebra. A full definition appears in [13]. The main theorem of [13] yields
Theorem 2.3 If T is a pseudo-commutative monad on Cat, then the 2- category T-Algp of strict T -algebras and pseudo-maps of algebras forms a pseudo-closed 2-category.
The leading example here has T being the 2-monad for which the 2- category T -Algp is exactly SymMon. So, in due course, we hope to use this theorem as a basis for two-dimensional linear algebra. Note that the pseudo-closedness is strict in that [X, −] is an endo-2-functor. In contrast, if a corresponding pseudo-monoidal structure exists, which we believe it will un- der mild hypotheses, then the construction −⊗ X will not be a 2-functor but rather a pseudo-functor. So in this precise sense, coalgebra is more primitive here than algebra.
There are difficulties with this line of argument that seem readily resolv- able but which we have not successfully addressed yet, in particular the fact

that the coherence for a pseudo-symmetry appears to be of essentially the same character as that for a definition of tetracategory, which, owing to the complexity of the coherence, does not have a fully established definition yet: see [11] to see some of the relevant issues. But once we resolve that, we can define a notion of pseudo-commutative pseudo-monoid M , then consider the 2-category of coalgebras for what will be a 2-comonad [M, −].
But in the absence of the mathematics required to proceed in this way, we adopt a more subtle approach that includes all the examples of primary interest to us but bypasses this difficulty. The way we proceed is effectively by ignoring pseudo-monoidal structure and defining a monoid in a pseudo-closed category to be a comonad of the form [M, −]. We do not make that explicit in our development, as it will probably become obsolete before long. However, we believe that the constructions we do develop now are of independent interest and will, in due course, become integrated into the above setting. We already have a coalgebraic account here, so we start to explain that in the next section.

Symmetric monoidal Lawvere theories
In this section, we introduce the notion of a symmetric monoidal Lawvere theory. This is a symmetric monoidal version of the usual notion of Lawvere theory, and indeed it extends the usual definition. Both definitions may be seen as instances of the same general phenomenon, which may be described for any monad T on Cat: for ordinary Lawvere theories, consider the monad T for small categories with finite products; for symmetric monoidal Lawvere theories, consider the monad T for small symmetric monoidal categories. To make the comparison precise, we recall the definition of Lawvere theory. Let N denote the category whose objects are natural numbers and whose morphisms are all functions between natural numbers.
Definition 3.1 A Lawvere theory is a small category L with finite products together with an identity on objects strict finite product preserving functor j : Nop −→ L. A model of a Lawvere theory L in a category C with finite products is a finite product preserving functor h : L −→ C.
The significance of Nop here is that it is the free category with strictly asso- ciative finite products on 1. Every category with finite products is equivalent to one with strictly associative finite products, so there are a few different ways to deal with coherence issues here. For simplicitiy of exposition, we shall adopt a slightly different approach to that given by Lawvere as explained in
[1]: we shall make our theories non-strict and our models strict.
Definition 3.2 A symmetric monoidal Lawvere theory is a small symmetric monoidal category L together with an identity on objects strict symmetric monoidal functor j : S(1) −→ L, where S(1) is the free symmetric monoidal category on 1. A strict model of a symmetric monoidal Lawvere theory L


in a symmetric monoidal category C is a strict symmetric monoidal functor
h : L −→ C.
Usually, in referring to a Lawvere theory, we shall simply use the notation L, treating the rest of the data as implicit. Up to equivalence of categories, S(1) may be identified with P , the category of natural numbers and permuta- tions. Strict models of a symmetric monoidal Lawvere theory L in a specified symmetric monoidal category C, together with symmetric monoidal natural transformations, yield a category Mods(L, C).
Examples of symmetric monoidal Lawvere theories are given by any small symmetric monoidal category with objects, up to equivalence, given by natural numbers, inheriting the tensor product of natural numbers. Examples abound and are explained in detail in [12]. For instance, if L is an ordinary Lawvere theory, it is automatically a symmetric monoidal Lawvere theory. But also the opposite of an ordinary Lawvere theory is a symmetric monoidal Lawvere theory. More specifically, there is a Lawvere theory for which the models in a symmetric monoidal category amount to commutative comonoids in the category: this example is central to Milner’s work on action calculi in [17], as explained in [12]. Another symmetric monoidal Lawvere theory is that for which models are given by relational bimonoids, as Plotkin plans to use to model concurrency, again explained in [12].
We feel obliged to spell out at least one example in detail, so we do so here.
Example 3.3 Let CMon be the symmetric monoidal Lawvere theory for a commutative monoid. The underlying category of CMon is that required to express the data and commutativity axioms for a commutative monoid: its objects must all be generated by a single object X, it has all the maps given by permutations of natural numbers, and it has additional maps j : I −→ X and · : X ⊗ X −→ X together with maps generated by them by closing under tensor product and composition, all subject to the four commutativity axioms in the definition of commutative monoid. It follows that CMon is the free symmetric monoidal category on a commutative monoid, which, perhaps surprisingly, is equivalent to Setf . It may also be characterised as the free category with finite coproducts on 1.
One can easily produce variants of this along the lines of considering comonoids rather than monoids, or considering bimonoids, or structures with some of the data and some or perhaps more axioms than those of monoids, comonoids, and combinations of them.
Now, we start to analyse how symmetric monoidal Lawvere theories give rise to comonads on SymMon.
Proposition 3.4 For any symmetric monoidal Lawvere theory L and any small symmetric monoidal category C, the category Mods(L, C) has a sym-

metric monoidal structure given as follows: for strict models h and h',
put (h ⊗ h')(1) = h1 ⊗ h'1
extend the definition of h ⊗ h' to an arbitrary object of L, which is the result of inductively applying the tensor operation to the unit and to 1, by induction on the complexity of the tensorial description of the object.
define h ⊗ h' on arrows by conjugation using the canonical isomorphisms induced by induction between (h ⊗ h')(x) and h(x) ⊗ h'(x).
Observe that the tensor product here is not given pointwise: if we tried to define a pointwise tensor product, we would not be able to make h ⊗ h' strict symmetric monoidal, so it would not be an object of Mods(L, C). If we further tried to deal with that by extending from Mods(L, C) to the category Mod(L, C), we would be unable to obtain an endofunctor because of coherence difficulties: we believe we will be able to resolve this in [13], but this is one of the reasons why we have retreated to single-sorted theories here, as they allow us to keep tight control over the behaviour of a putative tensor product h ⊗ h' on objects.
With a little effort, the proposition can be extended to show
Theorem 3.5 Given a symmetric monoidal Lawvere theory L, the construc- tion Mods(L, −) yields an endofunctor on SymMons with a copoint
Mods(L, −) ⇒ IdSymMons
given by evaluation at 1.
If SymMons were symmetric monoidal closed, coherently with respect to Cat, then the unit of the symmetric monoidal closed structure on it would be S(1), because the left adjoint of a symmetric monoidal adjunction always preserves the symmetric monoidal structure. So, as part of the definition of a symmetric monoidal Lawvere theory j : S(1) −→ L, we immediately have the unit data for a monoid structure on L. It remains for us to find a construct that can act as a multiplication. As we have such tight control on the objects of L, the construct proves to be uniquely determined, so it just amounts to a condition on the data we already have. We explore the situation in the next section.
But for the moment, observe that categories of the form Mods(L, −)-Coalg for the copointed endofunctor (Mods(L, −), ev1) include categories of very substantial interest. For instance, if L is the symmetric monoidal Lawvere theory for a commutative monoid, the category of coalgebras is the category of small categories with finite coproducts, as can be checked by direct calculation. Dually, if L is the symmetric monoidal Lawvere theory for a commutative comonoid, the category of coalgebras here is the category of small categories with finite products. One can continue along these lines for other examples of symmetric monoidal Lawvere theories to account for the category of small categories with finite biproducts, or finite relational biproducts, or the like.

Commutative symmetric monoidal Lawvere theories
In this section, we place a commutativity condition on the notion of symmetric monoidal Lawvere theory L in order to extend the copointed endofunctor (Mods(L, −), ev1) on SymMons to a comonad on SymMons.
Recall that a symmetric monoidal Lawvere theory L has the same objects as S(1), which in turn is equivalent to the category P of natural numbers and permutations. For simplicity of exposition here, we suppress coherent isomorphisms and identify the objects of S(1) with the objects of P . Thus we identify the objects of L with natural numbers. Now, for natural numbers m and p, denote by m × p the tensor product of m copies of p. It follows that m ×− is functorial in L. Note that this does not mean that −× m is functorial in L!
Definition 4.1 A symmetric monoidal Lawvere theory L is commutative if for all maps f : m −→ n and g : p −→ q in L, the two maps from m × p to q × n, one given by


m × p m ×✲g
m × q 	✲ q × m q × ✲f
q × n,

with the other dual, where the unlabelled maps are given by canonical iso- morphisms in P , agree.
This definition provides the information we need to obtain a comonad.
Proposition 4.2 If L is a commutative symmetric monoidal Lawvere theory, there is a natural transformation with C-component
δC : Mods(L, C) −→ Mods(Mods(L, C))
such that Mods(L, −) together with ev1 and δ form a comonad on the category
SymMons.
Proof. Given a strict symmetric monoidal functor h : L −→ C, we must obtain a strict symmetric monoidal functor δC(h) from L to the symmetric monoidal category Mods(L, C), whose objects are strict symmetric monoidal functors from L to C. Since δC(h) must be strict symmetric monoidal, and since every object of L is given by a tensor product generated from 1, the behviour of δC(h) on objects is completely determined by its behaviour on 1. And since we must have ev1(δC(h)) = h in order to satisfy one of the comonad laws, we must have
δC(h)(1) = h : L −→ C
The commutativity condition is exactly what is required to force the behaviour of δC on maps to be strict symmetric monoidal.	✷
The proposition gives us the comonad we seek. But we can say a little more that we have found valuable in our analysis. Specifically, we can identify the category of coalgebras for the comonad with the category of coalgebras for

its underlying copointed endofunctor. That is an unususal situation, redolent of that for the Eckmann Hilton argument [7] as explained in [12].
Our argument goes as follows.
Proposition 4.3 For a commutative symmetric monoidal Lawvere theory L, the strict symmetric monoidal functors
Mods(L, ev1): Mods(L, Mods(L, C)) −→ Mods(L, C)

and

(ev1)Mods(L,C) : Mods(L, Mods(L, C)) −→ Mods(L, C)

are jointly monomorphic.
Proof. The proof takes a little care, as it amounts to decomposing an ar- bitrary strict symmetric monoidal functor from L to Mods(L, C), which can be seen as a construction on two variables m and n, into consideration of its behaviour on pairs of variables of the form (1, n) and (m, 1) by use of the fact that each object of L is given by a tensor product generated by 1.	✷
The two propositions yield
Theorem 4.4 For any commutative symmetric monoidal Lawvere theory L, the category of coalgebras for the copointed endofunctor (Mods(L, −), ev1) is equal to the category of coalgebras for the comonad (Mods(L, −), ev1, δ).
The above all fits into our conception of two-dimensional linear algebra. Moreover, the definitions we have developed here, such as that of symmetric monoidal Lawvere theory, obviously can be extended far beyond symmetric monoidal categories. In particular, the use of a comonad along the lines of Mods(L, −) on SymMons extends in two directions that seem likely to be important, one of them definitely fitting within the scope of two-dimensional linear algebra, the second not quite as clearly.
The first of these directions involves the generalisation from consideration of the 2-category SymMon to that of the 2-category T -Algp for a pseudo- commutative 2-monad T on Cat. We do not explore that here, but see [13]. The other direction involves removing the commutativity condition that we have just introduced, yet still obtaining a comonad, necessarily a somewhat different one from that we have described: we would hardly have introduced the notion of commutativity if we did not need it to obtain the comonad structure we have defined. We give details of that in the next section. 
Deleting the commutativity condition
In this section, we try to obtain a comonad much as we did in the previous sec- tion, but without resort to the commutativity condition we introduced there. The reason is that some symmetric monoidal Lawvere theories of interest to us, specifically one for Frobenius objects, are not commutative; so we would like to extend our analysis.

More specifically, all of the specific examples of symmetric monoidal Law- vere theories we have described so far have been commutative. And so are all of the examples implicit in [12]. But for an example of a symmetric monoidal Lawvere theory that is not commutative, consider the following.
Example 5.1 Let RF rob be the symmetric monoidal Lawvere theory for re- lational Frobenius objects. This is generated by an object X together with a commutative monoid structure on X and a commutative comonoid structure on X such that the diagram


X ⊗ X X ⊗✲δ
X ⊗ X ⊗ X


m	m ⊗ X
❄	❄
X 	✲ X ⊗ X
δ
commutes (see [4]) and m.δ = idX. This category can be described explicitly as the category whose objects are finite sets and with a map from m to n given by an equivalence relation on m + n. This category is implicitly used by Danos and Regnier [6] in connection with Geometry of Interaction and is considered by Gardner in [10] for different reasons.
For another example, one can drop the condition m.δ = idX in the above, giving the symmetric monoidal Lawvere theory for Frobenius objects, for which an explicit description is the main result of [3].
So there is some value in considering symmetric monoidal Lawvere theories that are not commutative, so we would like to incorporate such examples into coalgebra too. The technical heart of our construction of a comonad allowing us to do that is given by modifying our definition of Mods(L, C) for a symmetric monoidal Lawvere theory L and a symmetric monoidal category C.
A priori, this leads us a little away from two-dimensional linear algebra as we initially envisioned it, as Mod(L, C) is the pseudo-closed structure of SymMon. However, the objects of the construction we now make are the same as the objects of Mods(L, C), and in a symmetric monoidal closed category such as Ab, there are no arrows between elements of an abelian group, so in a precise sense, if one restricted to a category like Ab, the constructs Mod(L, C) and Mod∗(L, C) would agree. So a more subtle view of two-dimensional linear algebra may well incorporate this construction.
Definition 5.2 Given a symmetric monoidal Lawvere theory L, and a sym- metric monoidal category C, let Mod∗(L, C) denote the (unique) factorisation
Mods(L, C)  ✲ Mod∗(L, C) 	✲ C


of ev1 : Mods(L, C) −→ C into a functor Mods(L, C) −→ Mod∗(L, C) that is the identity on objects followed by a fully faithful functor Mod∗(L, C) −→ C.
The construction Mod∗(L, C) extends to an endofunctor on SymMons and
ev1 trivially restricts to give a copoint ev∗ for the endofunctor.
Emulating the results of the previous section in this somewhat more com- plex setting, we have
Proposition 5.3 If L is a symmetric monoidal Lawvere theory, there is a natural transformation with C-component
δ∗ : Mod∗(L, C) −→ Mod∗(Mod∗(L, C))
C	s	s
such that Mod∗(L, −) together with ev∗ and δ∗ form a comonad on the category
s	1
SymMons.
Proof. The proof is essentially the same as for the commutative case. In the commutative case, the commutativity was required to force δC to behave well
on maps, but here, we have changed the maps so that the behaviour of δ∗ on
maps is trivial.	✷
Proposition 5.4 If L is a symmetric monoidal Lawvere theory, the pair of
∗	∗	∗
strict symmetric monoidal functors Mods (ev1 ) and (ev1 )Mod∗(S.C) from the
symmetric monoidal category Mod∗(Mod∗(L, C) to Mod∗(L, C) are jointly
s	s	s
monomorphic in the category SymMons.
Proof. The proof here is the same as that for the commutative case.   ✷
Theorem 5.5 If L is a symmetric monoidal Lawvere theory, the category of coalgebras for the copointed endofunctor (Mod∗(L, −), ev1) is equal to the category of coalgebras for the comonad (Mod∗(L, −), ev∗, δ∗).
s	1
Conclusions and Further Work
In this paper, we have introduced the concept of two-dimensional linear alge- bra and we have commenced a development of it. There are difficult coherence questions that arise, some of which we have resolved, others of which we have not yet resolved. So we have had to skirt our way around a few difficulties at some point. But that in itself has been valuable as it has led us to identify the notion of symmetric monoidal Lawvere theory, generalising Lawvere’s original definition in what seems to us to be an interesting direction. We have further developed a condition, that of commutativity, on symmetric monoidal Law- vere theories. What may be of greatest interest to the coalgebra community is the extent to which, in the second dimension, the coalgebraic structure is simpler and more primitive than the algebraic structure of linear algebra.
One intriguing observation, which we have not developed here, is that the comonads we discover here, in all our leading examples, are idempotent comonads, i.e., the comultiplication is an isomorphism, equivalently, the cate- gory of coalgebras is a full coreflective subcategory of SymMons. We believe

[12] that a full understanding of that observation might provide a conceptual foundation for the Eckmann Hilton argument [8].
So there is plenty of work with which we can proceed: resolving the out- standing coherence issues such as the notion of pseudo-symmetry and the relationship between pseudo-monoidal and pseudo-closed structures on a 2- category, providing a conceptual foundation for the Eckmann Hilton argu- ment, or trying to develop specific classes of examples, for instance to support the use of structures on SymMon for concurrency [5] or contexts [9].

References
Barr, M., and C. Wells, “Toposes, Triples, and Theories,” Grundlehren der math. Wissenschaften 278 (1985).
Blackwell, R., G.M. Kelly, and A.J. Power, Two-dimensional monad theory, J. Pure Appl. Algebra 59 (1989) 1–41.
Carmody, S.M., “Cobordism Categories,” Ph.D. dissertation, Cambridge, 1996.
Carboni, A., and R.F.C. Walters, Cartesian bicategories I, J. Pure Appl. Algebra 49 (1987) 11–32.
Cattani, G., M.P. Fiore, and G. Winskel, A theory of recursive domains with application to concurrency, Proc. LICS 98 (1998) 214–225.
Danos, V., and L. Regnier, The Structure of Multiplicatives, Arch. Math. Logic
28 (1989) 181–207.
Eckmann, B., and P. Hilton, Group-like structures in general categories I: multiplications and comultiplications, Math. Annalen 145 (1962) 227–255.
Eilenberg, S., and G.M. Kelly, Closed categories, “Proc. Conference on Categorical Algebra (La Jolla 1965)”, Springer-Verlag, 1966.
Fiore, M., G.D. Plotkin, and A.J. Power, Cuboidal sets in axiomatic domain theory, Proc. LICS 97 (1997) 268–279.
Gardner, P., “Graphical presentations of interactive systems,” MathFit Summer
School, 1998.
Gordon, R., A.J. Power, and R. Street, “Coherence for tricategories,” Mem. Amer. Math. Soc. 558, 1995.
Hyland, J.M.E., and A.J. Power, Symmetric Monoidal Sketches, Proc. PPDP
00 (2000) 280–288.
Hyland, J.M.E., and A.J. Power, Pseudo-commutative monads and pseudo- closed 2-categories, J. Pure Appl. Algebra (to appear).
Kelly, G.M., Coherence theorems for lax algebras and for distributive laws, Lecture Notes in Mathematics 420 (1974) 281–375.


Kelly, G.M., and R. Street, Review of the elements of 2-categories, Lecture Notes in Mathematics 420 (1974) 75–103
Kock, A., Closed categories generated by commutative monads, J. Austral. Math. Soc. 12 (1971) 405–424.
Milner, R., Calculi for interaction, Acta Informatica 33 (1996) 707–737.
O’Hearn, P.W., and D.J. Pym, The logic of Bunched Implications, Bull. Symbolic Logic (to appear).
