Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 350 (2020) 3–32
www.elsevier.com/locate/entcs

Tropical Abstraction of Biochemical Reaction Networks with Guarantees
Andreea Beica1
D´epartement d’informatique
E´cole normale sup´erieure, CNRS, PSL Research University 75005 Paris, France
J´erˆome Feret2
D´epartement d’informatique
E´cole normale sup´erieure, CNRS, PSL Research University 75005 Paris, France
INRIA
Tatjana Petrov 3
Department of Computer and Information Science University of Konstanz, Germany

Abstract
Biochemical molecules interact through modification and binding reactions, giving raise to a combinatorial number of possible biochemical species. The time-dependent evolution of concentrations of the species is commonly described by a system of coupled ordinary differential equations (ODEs). However, the analy- sis of such high-dimensional, non-linear system of equations is often computationally expensive and even prohibitive in practice. The major challenge towards reducing such models is providing the guarantees as to how the solution of the reduced model relates to that of the original model, while avoiding to solve the original model.
In this paper, we have designed and tested an approximation method for ODE models of biochemical reaction systems, in which the guarantees are our major requirement. Borrowing from tropical analysis techniques, we look at the dominance relations among terms of each species’ ODE. These dominance relations can be exploited to simplify the original model, by neglecting the dominated terms. As the dominant subsystems can change during the system’s dynamics, depending on which species dominate the others, several possible modes exist. Thus, simpler models consisting of only the dominant subsystems can be assembled into hybrid, piecewise smooth models, which approximate the behavior of the initial system. By combining the detection of dominated terms with symbolic bounds propagation, we show how to approximate the original model by an assembly of simpler models, consisting in ordinary differential equations that provide time-dependent lower and upper bounds for the concentrations of the initial model’s species.
The utility of our method is twofold. On the one hand, it provides a reduction heuristics that performs without any prior knowledge of the initial system’s behavior (i.e., no simulation of the initial system is needed in order to reduce it). On the other hand, our method provides sound interval bounds for each species, and hence can serve to evaluate the faithfulness of tropicalization reduction heuristics for ODE models of biochemical reduction systems. The method is tested on several case studies.
Keywords: ODE models, model reduction, tropicalization, numerical approximation



https://doi.org/10.1016/j.entcs.2020.06.002
1571-0661/© 2020 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

Introduction
As biology becomes a data intensive science, due to advancements in high through- put molecular biology, the importance of in silico dynamical models of complex biological systems that are able to reproduce intricate behaviors observed in experi- mental settings increases. As such, modeling becomes a part of biological reasoning, but turns out to be a particularly challenging task. In particular, in models of bio- chemical networks, the number of possible chemical species is often subject to com- binatorial explosion, due to the large number of species that may arise as a result of protein bindings and post-translational modifications [17]. As a consequence, mech- anistic models of signaling pathways easily become very combinatorial. A common modeling approach describes the time-dependent evolution of concentrations of each of the modeled species through a system of coupled ordinary differential equations (ODEs). The combinatorial explosion of species and rich interaction scheme renders solving such a system of ODEs often prohibitory in practice, let alone the fact that is it already an approximation of its stochastic counter-part [20], as well as that the equations themselves do not transparently reflect the underlying mechanisms. Addressing the latter, formalisms allowing to write the mechanistic hypothesis in form of discrete transition steps have been proposed: Boolean networks[30], logical networks[32], Petri Nets[8], cellular automata[16], rule-based languages[10], to name the most common. Languages such as Kappa[10,11] and BNGL[3] provide compact ways of describing models prone to combinatorial explosion, of simulating them [9], and even transforming them into ODEs [3]. However, the curse of dimensionality once again rises when trying to compute the system behavior.
A strategy to cope with such complexity is model reduction, in which certain properties of biochemical models are exploited in order to obtain simpler versions of the original complex model; these simpler models should preserve the impor- tant behavioral aspects of the initial system. An example of such a property is the multiscaleness of biochemical networks, with respect to both time-scales and species’ abundance. In the case of the former, it is known that biochemical pro- cesses governing network dynamics span over many well separated timescales: while protein complex formation occurs on the seconds scale, post-translational protein modification takes minutes, and changing gene expression can take hours, or even days. As for the latter, multiscaleness also applies to the abundance of various species in biochemical networks: the DNA molecule has one to a few copies, while mRNA copy numbers can vary from a few to tens of thousands. On the one hand, these widely different time- and concentration scales represent challenges for the estimation of rate constants, for the measurement of low-concentration species, and even for the numerical integration. On the other hand, they represent a feature that can be exploited for model reduction purposes, allowing to approximate the complete mechanistic description with simpler rate expressions, retaining the essen-

1 Email: beica@di.ens.fr
2 Email: feret@di.ens.fr
3 Email: tatjana.petrov@uni-konstanz.de, Tatjana Petrov’s research is supported by the Ministry of Science, Research and the Arts of the state of Baden-Wu¨rttemberg

tial features of the full problem on the time scale or in the concentration range of interest. The dynamics of multiscale, large biochemical systems can be reduced to those of simpler models, called dominant subsystems [26], which contain less pa- rameters and are easier to analyze. Dominant subsystems are chosen by comparing the time-scales of the large system. For example, the classical quasi steady-state (QSS) [5] and quasi-equilibrium (QE) approximations [23,18] are conditions that lead to dominance, and represent popular methods for the computation of “first ap- proximations” to the slow invariant manifold. Classical QSS is based on the small concentrations of highly reactive intermediate species (i.e., atoms, ions, enzymes and substrate-enzyme complexes)[4], while in the QE approximation the reduction of the full mechanism is done based on the existence of fast and slow reactions.
The multiscaleness property of biochemical network is by definition closely linked to the mathematical notion of dominance, captured in the framework of tropical analysis[1,21]. Recently, a class of semi-formal methods for reducing and hybridizing models of biochemical networks has been developed, based on ideas from tropical analysis [26,27,28,29]. These methods exploit the multiscaleness of biochemical networks, in order to deduce dominance relations among parameters and/or reaction rates, which can then be used to obtain a system of truncated ODEs (by eliminating the dominated terms). One of the advantages of using dominance relations in multi- scale networks is that it helps cope with parameter uncertainty: parameter values are replaced with their orders of magnitude, which are easier to determine. However, providing guarantees as to how the solution of the reduced model relates to the original one remains a challenge. Such is also the case in [2], where we proposed a reduction framework for rule-based models, based on time-scale separation. While this time-scale separation technique is justified by asymptotic convergence results, for any concrete parameter values, there is no information on the accuracy of the trajectories obtained by executing the reduced model.
In this paper, we design an approximation method for ODE models of biochem- ical networks, in which the guarantees are our major requirement. Our method combines abstraction and numerical approximation, and aims at providing better understanding/evaluation of tropical reduction methods. We abstract the solution of the original system of ODEs by a box, that over-approximates the state of the original system and provides lower and upper bounds for the value of each variable of the system in its current state. The simpler equations (which we call tropical- ized ) defining the hyperfaces of the box are obtained by combining the dominance concept borrowed from tropical analysis with symbolic bounds propagation. Mass invariants of the initial system of ODEs are used to refine the computed bounds, thus improving the accuracy of the method. The resulting (simplified) system pro- vides a posteriori time-dependent lower and upper bounds for the concentrations of the initial model’s species, and thus bounds on numerical errors stemming from tropicalization. This means that no information on the original system’s trajectory is needed - the most important advantage of our approach. By contrast, the main difficulty of applying the classical QSS and QE reductions to biochemical models is that QE reactions and QSS species need to be specified a priori, which implies

that some knowledge about the initial system’s behavior is necessary. This, in turn, means that significantly high-dimensional, non-linear systems cannot benefit from these reductions, as their analysis can be prohibitive in practice. An approach sim- ilar with respect to providing a posteriori time-dependent lower and upper bounds has been proposed in [7], where the differential semantics of rule-based models with non-contracting dynamics and unbounded sets of variables are treated. Rather than using dominance relations between ODE terms, a finite set of patterns is used in order to bound the number of occurrences of each pattern. Further related works, similar in the sense that they provide automatizible reduction methods with strong reduction guarantees are described in [13,14]. However, both of these works are de- signed specifically for rule-based models, where they exploit the site-graph encoding of species’ structure, rather than the dominance regions.
Depending on the chosen granularity of mass-invariant-derived bounds, the method presented in this paper can either be used to reduce models of biochemical networks, or to quantify the approximation error of tropicalization reduction meth- ods that do not involve guarantees. The guarantees of our method are obtained by formalizing the soundness relation between the original system of equations and the abstract system of ordinary differential equations operating on the coordinates of the hyper-faces of the box. The solution of a sound abstraction of an original system of differential equations, starting from a box that contains the initial state of the original system, defines a sound abstraction of the solution(s) of the original system. We apply our method to several case studies.
Outline The rest of this article is organized as follows. In Sect.2 we define the setting and concepts used in our approach, as well as introduce motivating examples. We then formally present and justify the method for deriving the system of reduced ODEs over the lower and upper bounds of species’ concentrations in Sect. 3. Also in Sect. 3, we present the two possible uses of our approach. We then discuss and conclude in Sect. 4.

Definitions and Motivating Example(s)
General Setting and Deﬁnitions
We define a dynamic reaction network over a set of species S = {x1,..., xs} as a reaction system of the form:

Σ	k+,k− Σ

where 1 ≤ j ≤ r is the reaction number, and for each reaction rj, k+/− are the non- negative reaction rate constants of the forward, respectively backward reaction.
In this paper, we focus on the ordinary differential equations (ODE) semantics of models of biochemical networks. The underlying assumptions are that the various species of the chemical network are highly abundant, that stochastic fluctuations are negligible, and that the reaction system is well-mixed. In these conditions, the

state of the dynamic system (1) can be represented as a multiset of the species’ concentrations x ∈ Rn, and its dynamics is described by a system of ODEs:


dx = Σ(β

— α )(R+(x) − R−(x)).	(2)

For each reaction rj, R+/−(x) denotes the reaction (forward and backward) rate, and is a non-linear function of the concentrations. For example, the mass-action law reads:

R+(x)= k+  xαji
R−(x)= k−  xβji ,	(3)

which in turn means that dx is a multivariate polynomial of the species’ concentra- tions. In other words, the ODE of the i-th species, xi, under mass action kinetics reads as a sum of monomials, which can be split into production and consumption terms, according to the sign that precedes their occurence in the equation:
dxi = P +(x) − P−(x),	(4)
dt	i	i
where P +/−(x) are Laurent polynomials with positive coefficients:


+
i
βji−αji>0
+
j
βji−αji<0
(αji − βji)R−(x)

—	(αji
βji−αji<0
— βji
+	(βji
βji−αji>0
— αji
(5)
)R−(x)

For convenience purposes, we will denote P +/−(x) = Σ M +/−(x), where
M +/−(x) represent the production, respectively the consumption, monomials.
The reduction heuristics that use ideas from tropical analysis exploit the concept of dominance, which we borrow for our method. Let M1(x)= c1xα1 and M2(x)= c2xα2 be two (positive) monomials. We define ϵ-dominance as the following partial order relation on the set of multivariate monomials defined on subsets of Rn :
Definition 2.1 (ϵ-dominance) For an ϵ ∈ [0, 1], we say that M1 dominates M2
at a time point t, denoted by M1 >є M2, if ϵ · M1(x(t)) ≥ M2(x(t)).
In multiscale biochemical systems, the various monomials that compose the

polynomials P +/−
have different magnitude orders, such that at any given time

there is only one or a few dominating monomials.

Definition 2.2 (Dominant monomial of a polynomial) For a given ϵ ∈
Σn

Dom(Pi)= {Mi,j | ∀1 ≤ k ≤ n, j /= k, Mi,j >є Mi,k}.
By using the max-plus algebra idea that the sum of positive, well separated terms, can be replaced by the maximum term, each of the two polynomials of (4) can be replaced by their dominant monomials. The result is a reduced model, consisting of a piecewise smooth function. As the dominant monomials of the P +/− can change from one concentration domain to another, the reduced model is a piecewise-smooth hybrid model.
Definition 2.3 (Two-term tropicalization of the smooth ODE system) We call two-term tropicalization of the smooth ODE system (4) the following piecewise- smooth system:
dxi = Dom(P +(x)) − Dom(P−(x))	(6)
dt	i	i
We note that a one-term tropicalization of the smooth ODE system, Dom( dxi ), is also possible, but choosing only one dominant momomial instead of the production-consumption pair of dominant monomials leads to a less precise model reduction (as more information is discarded in the one-term tropicalization). Thus, in this paper, we choose to deal with the two-term method.

Motivating example: Michaelis-Menten
In Sect.1, we mentioned that the classical QSS[5] and QE[18,23] approximations represent popular methods for the simplification of biochemical networks.
As such, our motivating example is the Michaelis-Menten mechanism. This enzymatic model illustrates how these two simple methods that use the idea of dominance can be useful for model reduction of nonlinear models with multiple timescales. The Michaelis-Menten mechanism consists of an enzyme that reversibly binds a substrate to form a complex, which in turn releases a product, while pre- serving the enzyme:
k1	k2



as:
E+S −7−~− E:S −→ E+P	(7)
k−1
The ODE system describing the evolution of the species’ concentration writes
d[S] = k−1[E : S] − k1[E][S]
⎪⎨ d[E] = k−1[E : S]+ k2[E : S] − k1[E][S]

dt
d[E:S] = k1[E][S] − k−1[E : S] − k2[E : S]
⎪
(8)

substrate concentration:

d[P ]
v =	= k


[E]F [S]


,	(9)

dt	2 KM + [S]
where [E]F = [E]+ [E : S] is the total enzyme concentration, and KM = k2+k−1 is the Michaelis-Menten constant. Eq.(9)can be interpreted as the reaction rate of a reduced reactive system, equivalent to system (7), in which the intermediary complex [E : S] has been eliminated:

[E]T

K  +[S]
S −−−−−−→ P	(10)
The approximation of (8) by (9) is generally considered to be sufficiently good if the QSS assumption holds, that is if the total initial enzyme concentration is much lower than the total initial concentration of substrate: [S]0 >є [E]0+[E : S]0. In this case, the complex [E : S] is a low concentration fast species, whose concentration is dominated by that of the substrate; the value of [E : S] almost instantly relaxes to a value determined by [S]. Thus, one can set d[E:S] = 0, and exploit this relation to pool the two reactions of the initial system (7) into an unique irreversible reaction
(10). The QSS condition can also be stated as k2   k−1 [26].
The original MM analysis used the complementary QE approximation, which considers the complex formation reaction to be fast and reversible: k−1  k2. Thus, the term k−1[E : S] dominates the term k2[E : S] in Eq.(8), meaning the latter can be discarded from the ODE system, allowing for pooling of species, and resulting once again in a single step approximation that reads:

 [E]T 
K +[S]
S −−−−−−→ P,	(11)
with Kd = k−1 , if indeed [S]  [E]+[E : S]. We note that if the QE assumption is indeed valid, KM ≈ Kd.
One of the main difficulties of applying QSS and QE reductions to biochemical models is that the QE reactions and QSS species need to be specified a priori. Thus, simulation of the original model is sometimes 4 needed in order to detect dominated species, which are either QSS species, or participate in QE reactions [26]. For high- dimensional non-linear systems, this requirement can represent an obstacle towards model reduction.
The issue regarding simulation of the initial system also arises when trying to quantify the efficiency of model reduction methods: ideally, the approximation er- rors resulting from the reduction should be computed without executing the original system.
Thus, in this paper we propose an approximation method for biochemical net- works, in which no prior knowledge about the original system’s behavior is required.

4 In [27], the authors propose a formal method for the identification of QSS species and QE conditions, which follows from the calculation of the tropicalized system, and which does not require simulation of trajectories.

Our method combines the dominance concept with mass invariants of the original ODE system in order to compute inequality constraints on the species’ concentra- tions. These constraints are then combined with the original system of equations, in order to obtain a reduced system of ODEs that provides time-dependent lower and upper bounds on the species’ concentrations. Depending on the coarseness of detail we choose to incorporate in the mass invariant-generated inequalities, our approach can serve either as a reduction method, or to quantify the approximation errors of tropicalization reduction heuristics.
To achieve this, we abstract the original system by a box, the hyper-faces of which provide lower and upper bounds for the concentrations of the species. The two equations of the hyper-faces of a species represent simplified versions of the original differential equation of the species, in which only the dominant positive and negative monomials are considered. We refer to these equations as being tropi- calized. Then, instead of interpreting the differential equations over the state of the original system, we will lift this interpretation conservatively over each hyper-face of the box. To do this, we will bound, for every hyper-face, the derivative of the corresponding coordinate in the solution of the original differential equation over the whole hyper-face. Our method should allow for formal evaluation of tropicaliza- tion approaches, and as such the bounds are derived using the dominance relations between monomials of the original ODE. Mass invariants of the original system will then be used to refine the bounds, and thus increase the accuracy of our method. By construction, the maximal solutions of the original, respectively tropicalized (i.e., abstracted) equations are related by the following soundness criterion: when both defined at time t, the state of the original system is within the hyper-box of the abstract system.
Example 2.4 Let us consider the equations (2) of the Michaelis-Menten mecha- nism, under the QSS assumption: k2  k−1, i.e. ϵ · k−2 ≥ k−1 ≥ 0, for an ϵ ∈ [0, 1]. From (2.1), it follows that one can write (by extension): k2 >є k−1. Then, we can deduce the following lower and upper bounds (that we call tropicalized ) on the concentration of x2:


⎧⎪k−1[E : S] − k1[E][S]	≤	d[S]

≤ k−1[E : S] − k1[E][S]

dt



k1[E][S] − (1 + ϵ)k2[E : S]	≤
⎪
dt	≤ k1[E][S] − k2[E : S]


For convenience purposes, we will use the notation x1, x2, x3, x4 for the species’ concentrations, [S], [E], [E : S], [P ]. We propose to approximate the state of the system by a box of R4. A box of R4 is a set of the form {(x1, x2, x3, x4) | xi ≤ xi ≤ xi, ∀1 ≤ i ≤ 4}, where (xi, xi) are pairs of numbers satisfying xi ≤ xi, ∀1 ≤ i ≤ 4. Intuitively, the real number xi provides a lower bound to the value of the variable xi, and denotes the face {(x1, x2, x3, x4) ∈ R4 | xi = xi, xj ≤ xj ≤ xj, ∀1 ≤ j ≤ 4,i /= j}. We will denote this face as Fxi (x1, x1, x2, x2, x3, x3, x4, x4). The other faces are

defined in the same way, and the same reasoning applies to xi, which provides an upper bound to the same variable. For ease of notation, we shall use x to denote the vector (x1, x1, x2, x2, x3, x3, x4, x4) . 
Next, let us consider the following functions:

⎧⎪F #(x)=	k



x − k x x
	


x1
F #(x)=	k x − k x x

#
x2
F #(x)=	k x x − (1 + ϵ)k x
	
⎪F #(x)=	k1x1x2 − k2x3
(13)

x3

#
x4
The abstraction of the concrete system of equations is then defined as
dxi = F #(x)
dt	xi
∀1 ≤ i ≤ 4.
If we fix the same initial conditions for both the concrete and the abstracted system, xi(0) = xi(0) = xi(0), ∀1 ≤ i ≤ 4, we can relate the solution of the ab- stract system to that of the original one. For every 1 ≤ i ≤ 4, the real number F #(x , x ,x , x ,x , x ,x , x ) provides a lower bound to the value of the function
xi  1	1  2	2  3	3  4	4
dxi over the face Fx , whereas the real number F #(x1, x1, x2, x2, x3, x3, x4, x4) pro-
dt	i	xi
vides an upper bound to the value of the function dxi over the face Fx . That is to
i

say, we have dxi ≤ dxi , for every pair (x ,x ,x ,x ) ∈F 
, and dxi ≤ dxi , for every

dt	dt
1	2	3	4	xi
dt	dt

pair (x1, x2, x3, x4) ∈ Fxi . Then, using the results of [19], we can conclude that, for
every time point t, and ∀1 ≤ i ≤ 4, the bounds:

xi(t) ≤ xi(t) ≤ xi(t)	(14)
are satisfied. Thus, the solution of the abstract system of equations provides lower and upper bounds for the value of the variables of the original system of equations.

Remark 2.5 In the above example, in order to obtain safe lower/upper bounds on xi’s concentration, we make the variables range over the hyper-faces. One notices that the variable xi is treated specifically in the derivatives of the variables xi, xi - any of its occurences is replaced by the variable corresponding to the hyper-face we want to bound. By contrast, the other variables, xj, are replaced according to the sign of their occurence:

in dxi , x
is replaced with  xj, if xj occurs negatively,








Fig. 1. Bounds on the species’ concentration with respect to simulation time, with є = 5·10−3, rate constants k1 = 0.017, k−1 = 0.0017, k2 = 0.3, and initial concentrations [S]= 80, [E]= 0.2, [E : S]= 0, [P ]= 0. For each of the 4 species, [·] and [·] denote the lower, respectively upper bounds on its concentration. The depicted results were obtained without using the mass invariants of the original system to constraint the bounds, and as such are suboptimal.



in dxi , x
is replaced with  xj, if xj occurs positively,




This comes from the fact that the derivative on xi is evaluated on the corre- sponding hyper-face, which allows for greatly reducing the loss of precision. For a formal proof of the soundness of this approach, the reader is referred to [19]. Intu- itively, it is justified by the intermediate value theorem: given a family of functions
{fi} over the real field, if one function fi does not take the highest value at time t, whereas it is the case at time tjj > t, then necessarily, there exists a time tj such that t < tj ≤ tjj in which fi takes the highest value while crossing another function of the family.
In Example 2.4, the inequality constraints on the concentrations of species were determined based on reaction rates constants that verify the QSS condition. In Fig.1, we show the time-evolution of the bounds on the concentration of the 4 species in the Michaelis-Menten system, for an arbitrarily chosen set of reaction rate constants and initial concentrations that satisfy the QSS condition (i.e., k2 >є k—1, and [S] >є [E]+ [E : S] at time t = 0). Nonetheless, our model reduction is sound no matter the value of initial concentrations and reaction rate constants. The equations have been integrated using the solver ode15s of Matlab[22]. Strictly speaking, numerical errors stemming from numerical integration may accumulate throughout the simulation, but herein we choose to ignore them.
In Fig.1, we notice that the bounds diverge at a fast rate from the original trajectory, despite the restriction of the derivative’s evaluation on the hyper-face of the box (as explained in Note 1). A way to improve accuracy is to take into account the original system’s mass invariants, when computing the bounds. In general, a biochemical system can have several conservation laws/mass invariants, which are linear functions b1(x),..., bm(x) of the concentrations, that are constant in time. These equality constraints can be used to refine the bounds on the initial system’s species’ concentrations. We can safely further restrict the evaluation of the derivative of each coordinate to the intersection of the corresponding hyperface

with the subspace delimited by the conservation laws containing the variable itself. Because a variable can appear in more than one mass invariant, we choose to keep the most optimistic bound that can be computed by intersecting the hyper-face with the mass invariant subspace: the greatest lower bound, respectively the smallest upper bound.
Example 2.6 In the Michaelis-Menten system, the total number of enzymes is con- stant, and so is the overall number of substrates and product. The two conservation

laws can be written as:  x2(t)+ x3(t)= e0
, with e
= x (0) + x (0), and

x1(t)+ x3(t)+ x4(t)= s0
s0 = x1(0) + x3(0) + x4(0).
0	2	3

Assuming once more that k2  k—1, by substituting x3 by e0 −x2 or s0 −x1 −x4 into 12, three equivalent tropicalized upper bounds on the concentration of x2 are obtained:

⎧⎪⎨ dx2 ≤ (1 + ϵ)k2x3 − k1x2x1

dx2 ≤ (1 + ϵ)k2(e0 − x2) − k1x2x1
⎪⎩ dx2 ≤ (1 + ϵ)k2(s0 − x1 − x4) − k1x2x1 ≤ (1 + ϵ)k2(s0 − x1) − k1x2x1
(15)

Lifting the interpretation of the differential equations over the hyper-face corre- sponding to x2 results in three different expressions for the upper bound on dx2 , of

possibly different accuracies:

dx2,1
 dt 
dx2,2 = (1 + ϵ)k2(e0 − x2) − k1x2x1
⎪⎩ dx2,3 = (1 + ϵ)k2(s0 − x1) − k1x2x1
	


(16)

The most accurate sound upper bound on dx2 then writes as:


min( dx2,1 , dx2,2 , dx2,3 )= (1 + ϵ) · k
· min(x ,e − x ,s − x ) − k x x 
(17)

dt	dt	dt
2	3	0	2	0	1
1 2 1

Note 1 The choice to introduce min and max operations in the expressions of the computed bounds is accounted for by our initial motivation: because existing trop- icalization reduction heuristics are not justiﬁed by rigourous estimates, we aim to provide a method for quantifying errors stemming from such tropicalization reduc- tion approaches, at the same time creating a tropicalization approach with guaran- tees 5 . As such, we aim at computing error bounds that are as precise as possible, hence the choice of using min and max operations for bound reﬁnement, albeit with the disadvantage of using functions that are not C1, thus introducing non-smooth vector ﬁelds. The trade-off between smoothness and precision can be tuned according to the desired goal: less precise bounds can be obtained by choosing to use smooth

5 We nonetheless stress that our goal is not to correct the faults of existing tropicalization-inspired reduction methods, but rather quantify them by proposing a more rigorous tropicalization approach, in which the dominated monomials are bounded, rather than discarded from the ODEs





Fig. 2.  Left :  bounds on the concentration of P, obtained by simulating the ODE system in Example2.8, for different values of є.  Rate constants and initial concentration as in Fig.1: k1 = 0.017, k−1 = 0.0017, k2 = 0.3, [S] = 80, [E] = 0.2, [E : S] = 0, [P ] = 0. Right : For different val-
ues of є, the accuracy of the resulting bounds is computed as the difference between the upper and the lower bound.
functions. Moreover, smoothness of vector ﬁelds is generally not guaranteed during the numerical simulation of biochemical models: as the model variables represent biochemical species’ concentrations, a good practice is to call the numerical solvers used to approximate the system’s behavior using with the ’Non-Negative’ option, which amounts to introducing a max operation into the equations ( i.e., max(0, xi)), in order to prevent negative values of variables.
The same reasoning can be applied to all variables appearing in the expression of
dx2 , in order to obtain the most accurate upper bound:


dx2 = (1 + ϵ) · k
· min(x ,e − x ,s − x ) − k · max(x , 0) · max(x ,e − x ) (18)

dt	2
3	0	2	0	1	1	1
2	0	3

Note 2 In (15), when computing the third bound, instead of substituting x3 by its conservation law expression, s0 − x1 − x4, we choose to bound its value by an ex- pression not containing x4. We do so in order to avoid introducing supplementary variables w.r.t. those present in the tropicalized original bound ( i.e., x1, x2 and x3). This method, in which mass invariant partial reﬁnement is introduced after the trop- icalized bounds have been computed, can be considered as a per se model reduction method, as no supplementary information/complexity is introduced by incorporat- ing the conservation laws. By contrast, the approach in which all the information contained by the conservation laws is exploited in order to derive the most accu- rate bounds can constitute a method of error-estimation for tropicalization based reduction heuristics. We present the two different methods formally in Section 3.
The issue of specifying QSS species and QE reactions a priori, when performing model reductions, is circumvented by our method. Instead, the notion of region is used in order to eliminate monomials from the species’ ODEs. Our method uses static inspection of each ODE, in order to partition the state space into different regions according to which production, respectively consumption terms dominate

the others. Using this partitioning, simplified expressions bounding the species concentrations are derived for each region of the state space, allowing symbolic simplification and limiting numerical approximations.
Example 2.7 In the case of the Michaelis-Menten mechanism, there are three pos-

sible dominance regions for dx2
leading to three possible pairs of lower and upper

bounds:
Region 1, if k—1 dominates k2:
ϵk—1 ≥ k2 ⇒ k—1x3 − k1x2x1 ≤ dx2 ≤ (1 + ϵ)k—1x3 − k1x2x1
Region 2, if k2 dominates k—1:
ϵk2 ≥ k—1 ⇒ k2x3 − k1x2x1 ≤ dx2 ≤ (1 + ϵ)k2x3 − k1x2x1
Region 3, if there is no dominant rate (i.e., k—1 and k2 are of comparable magnitude):

  ϵk—1 ≤ k2

⇒ (k
+ k )x
k x x
≤ dx2 ≤ (k
+ k )x
k x x

The complete system of equations obtained using mass invariants refinement of bounds, for all the possible dominance regions, can be found in Example 2.8. The improvement of bound accuracy via mass invariants can be observed in Fig. 2. As expected, one can also observe in Fig.2 that results become more precise as the value of ϵ increases, i.e. as k—1 and k2 become more separated.
Example 2.8 For convenience purposes, denote the species concentrations, [S], [E], [E : S], [P ], using x1, x2, x3, x4. Then, the derivatives of the lower and upper bounds of the original system’s species’ concentrations write as:
dx1 = k—1 max(x3, e0 − x2) − k1 min(x1, s0 − x3) min(x2, e0 − x3)

dx1 = k—1 min(x3, e0 − x2, s0 − x1) − k1 min(x1, s0 − x3) max(x2, e0 − x3)

dx2 dt
= c+ max(x3, e0 − x2) − k1 min(x1, s0 − x3) min(x2, e0 − x3), with c+ =

k—1,	if ϵk—1 ≥ k2
k2,	if ϵk2 ≥ k—1
⎪⎩(k—1 + k2),	otherwise

(1 + ϵ)k—1,	if ϵk—1 ≥ k2
(1 + ϵ)k2,	if ϵk2 ≥ k—1
⎪⎩(k—1 + k2),	otherwise

dx3 dt
= k1 max(x1, 0) max(x2, e0 − x3) − c— min(x3, e0 − x2, s0 − x1), with c— =

(1 + ϵ)k—1,	if ϵk—1 ≥ k2
(1 + ϵ)k2,	if ϵk2 ≥ k—1
⎪⎩(k—1 + k2),	otherwise


k—1,	if ϵk—1 ≥ k2
k2,	if ϵk2 ≥ k—1
(k—1 + k2),	otherwise
dx4 = k2 max(x3, 0)

dx4 = k2 min(x3, s0 − x4)
The Michaelis-Menten system represents a particular, simple case study: the choice of reaction rate constants fixes the dominance region in which the system evolves. In general, the state of a biochemical network can traverse multiple such regions, as the dominant monomials can change from one concentration domain to another. Thus, we next introduce a case study in which the dominant monomials are concentration-dependent, which in turn means that the dominance region is no longer fixed. Our method is designed with this more general situation in mind: having computed the most accurate bounds for each region of the state space parti- tioning, and having no information regarding the region in which the original system evolves at a given time t, our approach chooses the least accurate local bound, in order to ensure global soundness.

Motivating example: A DNA model
We construct a simple extension of the Michaelis-Menten system, in which the product formation reaction is catalazyed by a dimer of an enzyme M . The reaction system and its ODE system 6 read:
⎧	⎧⎪ dx1 = −2k1x2 + 2k—1x2


k1
⎪M + M	M
dt
dx2 = −k
1
x − k x x + k
x + k x2

	2
⎪⎨	k−1
⎨ dt
—1 2
2 2 3
—2 4	1 1

k2
M2 + DNA   M2.DNA
⎪
dx3 = k—2x4 + k3x4 − k2x2x3
⎪ dx4

⎪⎩	2
k−2
k3
dt  = −k—2x4 − k3x4 + k2x2x3
⎩ dx5 = k x

M .DNA −→ DNA + P
The mass invariants write:
dt	3 4
(19)



x1 + 2x2 + 2x4 + 2x5 = M0 x3 + x4 = DNA0
(20)

Dominance regions become concentration dependent: for example, the dominant

positive monomial in dx2
is determined by the dominance relations between both

the concentrations of x1 and x4, and between reaction rate constants k1 and k—2.
This DNA example will serve as a case study for the remainder of our paper.

6 once again, we denote the species M, M2, DNA, M2.DNA, P by x1, x2, x3, x4, x5

Combining ODEs and mass invariants
Model reduction using conservative numerical approximations
The guarantees of our method are a consequence of a carefully designed symbolic propagation of inequality constraints on the species’ concentrations. Thus, symbolic transformations have to be applied on numerical expressions, of which we introduce a syntax and semantics. We also introduce an alternative definition of a biochemical model to that presented in Sect. 2, which is then used to define and justify our approximation method.
Definition 3.1 (Syntax of expressions) Let S be a set of variables. We define an S-expression inductively, as follows 7 :
each positive real number k ∈ R+ is an S-expression;
each variable x ∈S is an S-expression;
if e is an S-expression, then (−˙ e) is an S-expression;
if e1 and e2 are S-expressions, then (e1+˙ e2), (e1˙·e2), m˙in(e1, e2), m˙ax(e1, e2) are all S-expressions;
The set of S-expressions is denoted as ExprS . Given an S-expression e, we define its support, denoted supp(e), as the set of variables it contains.
Definition 3.2 (Semantics of expressions) Let S be a set of variables and e be an S-expression. The semantics of the expression e is the function Je)S : RS → R, defined inductively as follows:
∀c ∈ R, Jc)S(ρ) = c
∀x ∈ S, Jx)S(ρ) = ρ(x)
∀e ∈ ExprS , J−˙ e)S(ρ) = −Je)S(ρ)
∀e1, e2 ∈ ExprS , Je1+˙ e2)S(ρ) = Je1)S(ρ) + Je2)S(ρ)
∀e1, e2 ∈ ExprS , Je1˙·e2)S(ρ) = Je1)S(ρ)Je2)S(ρ)
∀e1, e2 ∈ ExprS , Jm˙in(e1, e2))S(ρ) = min(Je1)S(ρ)Je2)S(ρ))
∀e1, e2 ∈ ExprS , Jm˙ax(e1, e2))S(ρ) = max(Je1)S(ρ)Je2)S(ρ)) for every environment ρ ∈ RS .
We use Defs. 3.1 and 3.2 to define the notion of system of symbolic differential equations and symbolic equality constraints derived from conservation laws.
Definition 3.3 (Symbolic ODE system)
A system of symbolic ordinary differential equations and equality constraints modeling a biochemical network is a tuple (S, I, F, (Eb)), where:
S = {x1,..., xs} is a set of variables, denoting species’ concentrations,

7 the syntactic operators are written using a superscript dot, in order to distinguish them from their associated mathematical functions

I : S → R+ is a non-negative function, mapping each species to its initial concen- tration,
F : S → ExprS is a function describing the evolution of species’ concentrations, as described in Eq.(4):
∀xi ∈ S, F(xi)= P +(x) − P—(x),
i	i
with P +/— ∈ ExprS , Laurent polynomials with positive coefficients,
{Eb} 8 is a family of functions from the set S into the set ExprS , denoting equality constraints derived from conservation laws, such that ∀f : S → RR+ satisfying
f (xi)(0) = I(0),	∀xi ∈S 
df (xi) (t)= JF(xi))S[x '→f (x )(t)],	∀xi ∈S and t ∈ R+
dt	i	i

the constraint
f (xi)(t)= JEb(xi))S[xi'→f (xi)(t)]
is satisfied for every function Eb of the family {Eb}, ∀xi ∈ S, and for every time
t ∈ R+.
Example 3.4 (A DNA example) In our running example, S = {x1, x2, x3, x4}, F is defined by the equations of (19), and the equality constraints derived from the conservation laws of (20) write:
E1(x1)= M0 − 2x2 − 2x4 − 2x5;	E2(x1)= M0 − 2DNA0 − 2x2 + 2x4 − 2x5
E1(x3)= DNA0 − x4;	E2(x3)= DNA0 − M0—x1 + x2 + x5;
E1(x4)= DNA0 − x3;	E2(x4)= M0—x1 − x2 − x5
E1(x5)= M0—x1 − x2 − x4;	E2(x5)= M0—x1 − DNA0 + x3 − x2
We partition the state space of each ODE into regions, each one defined by the corresponding pair of dominant monomials, (Dom(P +(x)), Dom(P—(x))). At any
i	i
given time t, several monomials can be dominant, which can lead to an exponential
number of possible regions. To circumvent this issue and obtain a linear number of regions, we choose to replace each region that has more than one dominant term with the unique region in which no term is dominant: if |Dom(P±(x))| > 1, we choose to keep P±(x) in the reduced ODE, instead of replacing it with Dom(P±(x)).
i	i
The following definition formalizes these concepts.
Definition 3.5 (State partitioning of a symbolic ODE) Let (S, I, F, {Eb)} be a symbolic ODE system, and ϵ ∈ [0, 1] a scale separation constant. Then, for

every variable xi ∈ S, if P + =

Σ M + and P— =

n
M  , its state space can be


8 the number b indexes the different ways of expressing a species xi, by using the mass invariants in which it appears

partitioned into (p + 1) × (n + 1) regions, each one determined by the corresponding pair of dominant monomials


⎪⎨

(Mk , Pi ),	if k ≤ p, l = n + 1, Dom(Pi )= Mk
⎪⎩(P +,P—),	if k = p + 1,l = n +1 
Example 3.6 (A DNA example) In Eq.(19), the state space of x2 can be parti- tioned in 9 regions, as its ODE contains 2 positive terms and 2 negative terms:
r1,1 = (k1x2, k—1x2);	r2,1 = (k—2x4, k—1x2);	r3,1 = (k1x2 + k—2x4, k—1x2)
2	1	2	2	1
r1,2 = (k1x2, k2x2x3);	r2,2 = (k—2x4, k2x2x3);	r3,2 = (k1x2 + k—2x4, k2x2x3)
2	1	2	2	1
r1,3 = (k1x2, k—1x2 + k2x2x3);	r2,3 = (k—2x4, k—1x2 + k2x2x3);	r3,3 = (k1x2 + k—2x4, k—1x2 + k2x2x3)
2	1	2	2	1
We next use the dominance relations that define each region, in order to obtain region-specific lower and upper bounds on the ODE being considered. The next definition formalizes this procedure:
Definition 3.7 (Region-specific tropicalized bounds) Given a symbolic ODE system (S, I, F, (Eb)), and the set of regions rk,l for each species xi, the dominance definition 2.1 can be used to define the following functions, for every region rk,l:

⎪⎨
	
Mk −˙ Pi ,	if k ≤ p, l = n + 1, Dom(Pi )= Mk
⎪⎩P +−˙ Pi−,	if k = p + 1,l = n +1 


⎪⎨
	
(1+˙ (p−˙ 1)˙·ϵ)˙·Mk −˙ Pi ,	if k ≤ p, l = n + 1, Dom(Pi )= Mk
⎪⎩P +−˙ Pi−,	if k = p + 1,l = n +1 

Functions Fk,l and Fk,l provide symbolic tropicalized lower, resp. upper bounds
↓	↑
for F(xi) on region rk,l.
Example 3.8 (A DNA example) In our running example, in region r2,1 =
(k—2x4, k—1x2), the dominant positive (production) monomial is k—2x4, and the dominant negative (consumption) monomial is k—1x2. Formally, this writes as ϵ · k—2x4 ≥ k1x2 ≥ 0, and ϵ · k—1x2 ≥ k2x2x3 ≥ 0.

Thus, the r2,1 specific tropicalized bounds write as:
2,1
↓	,
F2,1(x2)= (1 + ϵ)k—2x4 − k—1x2
which by construction satisfy F2,1(x2) ≤ dx2 ≤ F2,1(x2).
↓	dt	↑
The bounds of Def. 3.7 can further be refined by using the mass invariants given by the family of functions {Eb}, as follows:
Definition 3.9 (Region-specific refined tropicalized bounds) Given a sym- bolic ODE system (S, I, F, (Eb)), the set of regions rk,l and the symbolic tropicalized
bounds Fk,l(xi), Fk,l(xi) for each species xi, we define the following bounds:
↓	↑

⎧⎪Lk,l(xj ) :=  Eb(xj),	if V = Vb




⎪⎩  i,b	j
JE (x ))
,	otherwise


with V = supp(Fk,l(xi)) = supp(Fk,l(xi)), Vb = supp(Eb(xj)), for each function Eb
↓	↑
of the family (Eb) that applies to the variable xj, and bk,l(xj) ∈ ExprV is either 0, or a bound generated by the dominating monomial inequality constraints.
Example 3.10 (A DNA example)
When dealing with the tropicalized bounds of Ex.(3.8), one needs to refine the bounds of the variables in their support: V = {x2, x4}. We do so by using their respective equality constraints from (21): E1(x2), E2(x2), E1(x4), and E2(x4).

What’s more, the second dominance inequality of region r2,1
in Ex.(3.8)can

be rewritten as x3 ≤ ϵk−1 . This allows for a new upper bound on variable x3:
b2,1(x3)= ϵk−1  ∈ ExprV .
2	k2
Using Def.3.9, the r2,1-specific bounds on x2 and x4 write as:
L2,1(x2)= 0;	L2,1(x2)= 0;	L2,1(x4)= DNA0 − ϵk−1 ;	L2,1(x4)=0 

2,1
2,2
2,1
k2	2,2

U2,1(x2)= M0 − x4;	U2,1(x2)= M0 − DNA0 + ϵk−1 ;	U2,1(x4)= DNA0;	U2,1(x4)= M0 − x2

2,1	2
2,2	2
k2	2,1
2,2	2

Using mass invariants to compute the most optimistic bound is done inductively over the S expressions of the candidate bounds, by applying usual formulae of inter- val arithmeticsto propagate the m˙in and m˙ax operators. The resulting evaluation functions, which we call fm˙in and fm˙ax respectively, are detailed in Appendix A.
With all this in place, we can proceed to the definition of the reduced system.
Definition 3.11 (Reduced system) Let A = (S, I, F, (Eb)) be a system of ordi- nary equations with equality constraints. The reduction of the system A is defined as the triple (S#, I#, F#), with:

(i) £# = {xi | xi ∈ £} ∪ {xi | xi ∈ £}
I# : £# → R+ is defined by I#(xi)= I#(xi)= I(xi), 6xi ∈£ h
F# : £# → ExprS# , defined as:
⎧⎨F#(xi)= f ˙ ([[F1,1(xi)] ↓ ] ↓ ,..., [[Fp+1,n+1(xi)] ↓ ] ↓ )
⎩F (xi)= fm˙ax([[F↑ (xi)]ρ↑ ]ρ↑ ,..., [[F↑	(xi)]ρ↑ ]ρ↑ )
for every variable xi ∈ £j, where:






ρ↓ =
⎩xj '→ min(xj, min(Ui,b (xj))),	if xj ∈ t↓,—

xj '→ xj,	if xi /= xj, for positive polarity/sign occurences of xj
⎪⎩⎧xj  '→ xj,	if xi /= xj,  for negative polarity/sign occurences of xj

↑	⎨xj '→ min(xj, min(Ui,b (xj))),	if xj ∈ t↑,+




ρ↑ =
⎩xj '→ m˙ax(xj, m˙ax(Li,b (xj))),	if xj ∈ t↑,—

xj '→ xj,	if xi /= xj, for positive polarity/sign occurences of xj
⎪⎩xj  '→ xj,	if xi /= xj,  for negative polarity/sign occurences of xj



Intuitively, for each region (k, l) of species xi, the reduction method first replaces
F(xi) by the pair of tropicalized lower and upper bounds, Fk,l(xi) and Fk,l(xi), that
↓	↑
result directly from the dominance inequalities that characterize the region. Then,
Fk,l(xi) and Fk,l(xi) are refined, using the bounds on variables that can be deduced
↓	↑
from the conservation laws of the original system.  For example, replacing any
occurence of a variable xj in Fk,l(xi) with one of its expressions Eb(xj) (or with its appropriate bound derived from Eb(xj) 9 ) results in another safe upper bound for F(xi). By choosing the minimum such candidate bound, one obtains the most accurate, locally safe upper bound. The same reasoning applies to the computation of lower bounds, but the min operation is replaced with max.
In order to obtain safe (i.e., correct) global bounds, the least precise local bounds are chosen: the miminal lower, resp. the maximal upper bounds.
Finally, the interpretation of the variables is lifted over the hyper-faces. Any occurence of xi is replaced with its analogue corresponding to the hyperface we want to bound, while the others are replaced to their analogue given by the polarity of their occurence, as explained in Note 2.5.
Theorem 3.12 Let A = (£, I, F, (Eb)) be a system of ordinary equations with equal- ity constraints. Let (£#, I#, F#) be a reduction of the system A.

9 Lk,l(xj ) for the positive occurences of xj , and Uk,l(xj ) for its negative occurences
i,b	i,b





Fig. 3.  Bounds on the concentration of P, in the DNA example, obtained by simulating the ODE of tropicalized bounds for different values of the scale separation constant є, rate constants k1 = k2 = k3 = 0.1, k−1 = 0.01, k−2 = 0.00001 and initial concentrations [M ]0 = 1, [DNA]0 = 0.05.


Let f be a function from the set £ into the set RR+ s.t. for every variable x ∈ £, we have:
f (xi)(0) = I(xi)
df (xi) (t)= F[xi '→ f (xi)(t)]
and f # be a function from the set £# into the set RR+ s.t. for very abstract variable xi# ∈ £#, we have:

  f (x#)(0) = I#(x#)

dt	i	i
Under these assumptions, we have that for every variable xi ∈£ and every time
t ∈ R+:
f #(xi)(t)) ≤ f (xi)(t) ≤ f #(xi)(t),
i.e., the reduced system provides sound lower and upper bounds for the concentration of the original system’s species.

Example 3.13 We apply our method on the DNA example constructed in Sect.2.3, for different values of the scale separating constant ϵ, and for arbitrarily chosen reaction rate constants k1 = k2 = k3 = 0.1, k—1 = 0.01, k—2 = 0.00001 and initial concentrations [M ]0 = 1, [DNA]0 = 0.05. We show in Fig.3 the time evolutions on the bounds on the concentration of the product [P ], i.e. the variable x5. We notice once again that the results become more precise as ϵ decreases, i.e. as the monomials become more separated. As an example, the ODE of the lower bound of species x2 can be found in Appendix B.

Error estimates of tropicalized systems using conser- vative numerical approximations
Our approach also serves as a heuristics for quantifying errors of tropicalization ap- proaches for biochemical model reduction, provided a slight modification is applied to Def.3.9. Instead of computing bounds using only variables from the support of the tropicalized bounds, one can use the equality constraints {Eb}, to refine the accuracy of bounds. The resulting model presents a trade-off: it introduces new variables w.r.t. the support of the tropicalized bounds, albeit exclusively in the form of conservation laws which are always linear functions, but gains in bound accuracy. As such, the approximation error/accuracy of a given reduction method can be assessed by checking if the reduced trajectory lies between the lower and upper bounds computed by our method.

Example 4.1 It is well known that the Michaelis-Menten reduction is valid only under the QSS and QE assumptions. In Fig.4, we simulate the reduced Michaelis- Menten system (10), as well as our modified reduced system, as presented above, for a set of initial conditions that no longer satisfy the QSS assumption, i.e. the total enzyme concentration is comparable to the total substrate concentration. As expected, the reduced Michaelis-Menten system no longer represents a good ap- proximation of the initial enzymatic system (7); this is reflected by the fact that the trajectory of the reduced model does not lie between the lower and upper bounds computed by our approach.



Fig. 4. Estimating the accuracy of the Michaelis-Menten approximation: bounds on the concentration of [P], with respect to simulation time, for є = 5 · 10−4, rate constants k1 = 0.017, k−1 = 0.0017, k2 = 0.3, and initial concentrations that do not satisfy the QSS condition: [S]= 80, [E]= 40, [E : S]= 0, [P ] = 0. (left) Whereas the original system’s trajectory lies between the lower and upper bound given by our method, this is not the case for the classical Michaelis-Menten approximation. Thus, as expected, one can conclude that if the QSS condition is not met, the Michaelis-Menten approximation is inaccurate. (right) Zoomed in version, showing the enclosed original trajectory (in blue)

Tyson’s Cell Cycle Model
The tropicalization heuristics can be difficult to justify by rigourous estimates, al- though this is possible in some cases[26]. For example, the existence of tropical varieties - the set of points x ∈ Rn where at least two monomials of P—/+ are equal- can lead to sliding modes, which in turn represent challenges in providing accuracy justifications for hybrid models obtained using tropical ideas. Sliding modes are well known phenomena in ODEs with discontinuous vector fields, in which the dy- namics can follow discontinuity hyper-surfaces where the vector field is not defined; what’s more, the conditions for the existence of sliding modes are usually intricate. As noted in [27], sliding modes can have a nefarious effect on the behavior of the tropicalized system: tropical varieties (i.e. tropical curves) decompose the state space into sectors corresponding to the smooth modes of the hybrid tropicalized system, which passes from one type of smooth dynamics to another intrinsically, when the trajectory attains the tropical curve. However, if certain conditions w.r.t. the sliding modes are fulfilled, the trajectory can continue along some tropical curve instead of changing sector, which further deviates the reduced system’s trajectory from the original one (see Figure 1 in [27], for an example).
In [27], such phenomena become apparent when tropicalization is applied to the minimal cell cycle model proposed by Tyson[31], in order to obtain a reduced hybrid model. The Tyson model describes the interplay between cyclin and cyclin dependent kinase cdc2 during the progression of the cell cycle, and demonstrates the existence of three possible regimes, that can be associated to different phases in the cell life: the biochemical system can either function as an oscillator, converge to a steady state, or behave as an excitable switch. The three possible behaviours can be associated to early embryos rapid division, arrest of unfertilised eggs and growth controlled division of somatic cells, respectively.
The dynamics of this non-linear model with rational reaction rates contains 6 species and 9 reactions, and is described by the following system of polynomial differential equations:
⎧⎪ dy1 = k6 · y4 − k8 · y1 + k9 · y2

⎪⎨ dy3 = k3 · y2 · y5 − kj · y3 − k4 · y2 · y3
dt = k4 · y3 + k4 · y4 · y3 − k6 · y4

dy6 = k6 · y4 − k7 · y6
and has the conservation law y1(t)+y2(t)+y3(t)+y4(t) = 1, where the value1 de- noting the total initial concentration of kinase cdc2 (i.e. y1(0)+y2(0)+y3(0)+y4(0)) was chosen by convenience. The values of the reaction rates constants are fixed as to have the model display the oscillatory behavior: k1 = 0.015, k3 = 200, k4 = 180, kj = 0.018, k6 = 1, k8 = 103, k9 = 106.
In [26,27], a hybrid model of the Tyson cell cycle is obtained by detecting and eliminating QSS species of the original model, pruning dominated monomials, and

then ultimately tropicalizing the reduced-size model. Besides having the inconve- nient of analyzing trajectories of the original model in order to detect QSS species, the reduced model suffers from the the sliding mode-related issues mentioned above: although both the smooth (original) and the reduced system exhibit oscillating be- havior and have stable periodic trajectory (i.e. limit cycle), the period of the tropicalized limit cycle is different with respect to that of the smooth cycle, due to the tropicalized trajectory sliding along the tropical manifolds instead of changing sectors. Having different oscillation periods means in turn that assessing the ac- curacy of the tropicalized reduced model is not a trivial question, as the distance between original and tropicalized trajectories is variable from cycle to cycle (as can be seen in Figure5). What’s more, it can also provide an indication of the poor performance of tropicalization based reduction methods when dealing with more complex systems, such oscillating systems.
Indeed, by applying our method to the original Tyson model, we are able to effectively provide guarantees on the reduced model, albeit not very strong ones: this could be interpreted as an indication of the poor accuracy of the tropicalized Tyson model. In Figure 5, we plot the bounds for the concentration of species y4 obtained using our method, in order to compare the trajectory of the original model to the one of the hybrid one that can be found in [26]. The lack of oscillating behavior in the computed bounds could intuitively be explained by the difference in period of the original and reduced systems, that causes a shift at every cycle in the tropicalized trajectory w.r.t. the original behavior. Nonetheless, the obtained bounds accurately capture the amplitude of the tropicalized model. One also notes that the time points where the upper bound, respectively the tropicalized system, begin to diverge w.r.t. the original trajectory coincide.

Fig. 5. Estimating the accuracy of the tropicalized Tyson model: bounds on the concentration of [y4], with respect to simulation time, for є = 10−3.

From a more practical point of view, we note that while simulation of the trop- icalized Tyson model proposed in [27] was performed in 354.876706 seconds, on a
2.2 GHz Intel Core i7 processor and 16 GB 1600 MHz DDR3 memory, simulation of the model obtained via our method was performed in only 9.775511 seconds using the same numerical integration method (i.e. Matlab’s ode15s), thus providing a significant improvement in computation time.

We note that an alternative reduced model is obtained in [26], using tropical equilibration, that circumvents the need to simulate the original system. We plan to include tropical equilibration techniques in future work.
Comparison with existing methods
We mentioned previously that numerical errors stemming from numerical integra- tion are ignored herein. Indeed, numerical integration methods, while heavily used, only provide approximations of the solution of the initial value problem (IVP) of ODE systems. Even when using variable-step size methods, there are no guaran- tees that the approximate solution computed by the chosen method is close to the actual solution. In order to solve the drawbacks associated to traditional ODE solvers/numerical solutions of IVP, interval numerical methods for IVP are used for computing validated enclosures of the solution of an IVP for an ODE. For example, the VNODE-LP[24] C++ solver proves that a unique solution to a problem exists, and then computes rigorous bounds that are guaranteed to contain it. Such bounds can then be used to help prove theoretical results, check if a solution satisfied a con- dition in a safety-critical calculation, or simply to verify the results produced by a traditional ODE solver. Another example of such software is the CAPD library [6]. Both represent well-established software for computing enclosures of generic ODE systems, and are integrated in various SMT solvers (e.g., iSAT[12], dReal[15]). For a more comprehensive state of the art on such methods, the reader is refered to [25].
Interval methods for IVPs for ordinary differential equations are typically based on Taylor series expansions, which require the computation of Taylor coefficients up to some order k. Given a final time point, the aim is to compute interval vectors that are guaranteed to contain the solution to a given IVP, at all intermediary points. In order to compute such interval vectors, interval propagation methods are used to enclose roundoff and truncation errors in the computed bounds, and thus obtain rigorous bounds on the true solution of the ODE.
In our approach, instead of interpreting the differential equations over the state of the system, the interpretation is lifted conservatively over each hyper-face of the hyper-box abstracting the system state (i.e., we over-approximate the derivatives only on the hyper-faces). When compared to our method, interval propagation methods over-approximate the partial derivatives of the function over the whole enclosing hyper-box, instead of doing so only on the hyper-faces. This in turn means that our approach computes tighter bounds than those computed by interval methods for IVPs.
We demonstrate our claim with the following example:
Example 5.1 Let us consider the following initial value problem :
dx = y · (2 − cos(y)) − x · (2 − sin(y))
dy = x · (2cos(y))y · (2sin(y))
x(0) = y(0) = 1
As presented in Section 3, our framework can be decomposed in two indepen-

dents parts: the first part consists in synthesizing bounds on the derivatives of the original system, and the second part deals with the propagation of said bounds, in order to obtain the enclosing system.
As our goal is to better understand and evaluate tropicalization approaches for biochemical model reduction, so far we chose to focus on bounds obtained by using dominance relations between monomials. The second part of our method simply represents an improved alternative to existing ODE enclosure methods, as explained above, and as such can be used in such methods in order to get better enclosure results.
For example, in order to compare the performance of our method to that of VNODE-LP and CAPD, instead of using dominance relations to derive inequality constraints on species’ concentrations, we now use the Taylor Series expansion with k terms (k will serve as a parameter) for the functions sin and cos, in order to derive bounds on dx and dy :

dt	dt
,,	x3

x5	x7	x9
kΣ—1

n x2n+1

sin(x) ≈ x −
3! +
5! −
7! +
9! − ... =
(−1)
n=0
(2n+1)!

,,	x2
x4	x6	x8
		
kΣ—1
n x2n



Then, for a fixed order k and an ϵ, instead of using dominance-related inequali- ties with our method, one can use the following inequalities:




k—1
2n+1
k—1
2n+1


n=0


k—1
(2n + 1)!
2n

n=0 k(—1
(2n + 1)!
2n

Σ(−1)n  x	 − ϵ ≤ cos(x) ≤ Σ −1)n  x	 + ϵ



where ϵ = (−1)2k+1 x2k+1 cos(c
,
) for cx

∈ [0, x] is the residual for the Taylor

expansion, and can be bound by ϵ ≤ |x|2k+1 , which in turn is ≤ (2k + 1)!—1 for
x ∈ [−1, 1] [].
Our method then proceeds as usual to the computation of ODEs for bounds on the concentrations of x and y.
In Fig.6, we compare the accuracy of our method to that of VNODE-LP and CAPD, for different values of the order k. The accuracy is given by the tightness of bounds, which can be evaluated by computing the difference between the upper and lower bounds, during a simulation. The results indicate that, when compared to ex- isting enclosure interval methods, our approach represents a consistent improvement of several orders of magnitude, across different values of k.




k=6
k=8



10-2



10-4



10-6



10-8


10-10


10-2



10-4



10-6



10-8


10-10

10-2



10-4


10-6



10-8

10-10



10-12

10-2



10-4


10-6



10-8

10-10



10-12



10-12


10-12


10-14


10-14




10-14



10-14



10-16



10-16




10-16
0	2	4	6	8  10
Time



10-16
0	2	4	6	8  10
Time



10-18



0	2	4	6	8  10
Time



10-18



0	2	4	6	8  10
Time


k=10	k=15



10-2


10-2


10-2


10-2



10-4


10-4


10-4


10-4



10-6


10-6


10-6


10-6



10-8


10-8


10-8


10-8



 10-10

 10-12


10-10


10-12


 10-10


10-12


10-10


10-12



10-14


10-14


10-14


10-14


10-16

10-16


10-16


10-16


10-18

10-18


10-18


10-18


10-20


0	2	4	6	8  10
Time

10-20


0	2	4	6	8  10
Time


10-20
0	2	4	6	8  10
Time


10-20
0	2	4	6	8  10
Time


k=20


10-2	10-2


10-4	10-4


10-6	10-6


10-8	10-8


 10-10	10-10


 10-12	10-12


10-14	10-14


10-16	10-16


10-18	10-18



10-20


0	2	4	6	8	10
Time


10-20


0	2	4	6	8	10
Time


Fig. 6. Comparison of our method - which we denote by ”T.A.G.”- with existing ODE enclosure methods CAPD and VNODE-LP. For different values of the Taylor expansion order k, used to derive bounds on the system in Example 5.1, our method ultimately out-performs both CAPD and VNODE-LP, in terms of accuracy; for k = 6, our method is initially outperformed by VNODE-LP on the studied example, but ultimately proves to be more efficient, for the time frame t > 4. The exponent on the y-axis is an indicator of
the decimal precision of the methods (i.e. a value of 10−15 means that the first 15 decimals of the computed lower and upper bounds are identical). We also note that both CAPD and VNODE-LP only allow values of k > 4.
Conclusion and outlook
In this paper, we present an approximation method for biochemical networks, which can also serve as a technique for evaluating the faithfulness of existing tropicaliza- tion reduction methods that do not involve guarantees. Our approach relies on the multiscaleness property of biochemical systems. Tropical geometry offers a natural

framework for studying such networks. Tropical approaches [28,29] can guide model reduction of ODE systems, by using time- and concentration scales separation to identify and neglect equation terms whose values are significantly smaller than those of other terms of the same equation. This leads to partitioning the state space into different regions, according to which term dominates the others. A similar ap- proach is employed in our method, but instead of neglecting the dominated terms, we propose to conservatively bound their value using an amortizing scale separation constant and the value of the dominant terms. These bounds can be further refined by incorporating the conservation laws of the initial system. The resulting approxi- mated model is composed of two-term ODEs (which we call tropicalized), which by construction provide time-dependent lower and upper bounds for the concentration of the initial system’s species. As such, our approach can also serve to test the accuracy of other given reduction methods, while circumventing the execution of the original system: the suitability of a reduction will be confirmed if the reduced model’s trajectory lies between the bounds provided by our abstraction.
We have tested our approach on the classical Michaelis-Menten system, a simple extension of it, and Tyson’s cell cycle model. Our method can be easily automatized, either using static analysis, or existing symbolic math tools 10 ; as such, Definitions 3.1-3.11 are written in an operational-semantics style, as to describe the different procedures composing the algorithm that implements our method. A tool that automatizes our approach is currently being developed. Further work also includes expanding the case studies to larger networks, possibly with no conservation laws.

References
F. Baccelli, G. Cohen, G. J. Olsder, J.-P. Quadrat. Synchronisation and linearity. Wiley, 1992
A. Beica, C. C. Guet, T. Petrov. Efficient reduction of kappa models by static inspection of the rule-set. In: A. Abate, D. Safranek (Eds.), Hybrid Systems Biology - Fourth International Workshop, HSB 2015, Madrid, Spain, September 4-5, 2015. Revised Selected Papers, Vol. 9271 of Lecture Notes in Computer Science, Springer, 2015, pp. 173–191
M.L. Blinov, J.R. Faeder, B. Goldstein, and W.S. Hlavacek. Bionetgen: software for rule-based modeling of signal transduction based on the interactions of molecular domains. Bioinformatics, 20(17), 2004.
C. Boseung, GA Rempala, JK Kim. Beyond the Michaelis-Menten equation: Accurate and efficient estimation of enzyme kinetic parameters. Scientific Reports, 7(1), 2017.
G.E. Briggs, J.B.S. Haldane.A note on the kinematics of enzyme action. Biochem J. 19 (2): 338–339, 1925.
Computer Assisted Proofs in Dynamics (CAPD) Library. http://capd.ii.uj.edu.pl
K. Chanseau Saint-Germain, J. Feret, Conservative numerical approximations of the differential semantics in biological rule-based models, 2016
C. Chaouiya. Petri net modelling of biological networks. Briefings in Bioinformatics, Volume 8, Issue 4, 1 July 2007, Pages 210–219.
V. Danos, J. Feret, W. Fontana, and J. Krivine. Scalable simulation of cellular signaling networks, invited paper. In Proc. APLAS–07, volume 4807 of LNCS. Springer, 2007.
V.Danos, J. Feret, W. Fontana, R. Harmer, and J. Krivine. Rule based modeling of biological signaling. In Proc. CONCUR’07, volume 4703 of LNCS, 2007.

10 for example, Matlab’s Symbolic Math Toolbox

V. Danos and C. Laneve. Formal molecular biology. TCS, 325(1), 2004

M. Franzle, C. Herde, T. Teige, S. Ratschan, and T. Schubert. Efficient solving of large non-linear arithmetic constraint systems with complex boolean structure. In Journal on Satisfiability, Boolean Modeling, and Computation, 1(3-4):209–236, 2007.

J. Feret, V. Danos, J. Krivine, Jean, R. Harmer, W. Fontana. Internal coarse-graining of molecular systems. PNAS, 2009
J. Feret, T. Henzinger, H. Koeppl, Heinz, T. Petrov. Lumpability abstractions of rule-based systems.
Elsevier, 2012
S. Gao, S. Kong, E.M. Clarke.dReal: An SMT Solver for Nonlinear Theories over the Reals. In: Bonacina M.P. (eds) Automated Deduction – CADE-24. CADE 2013. Lecture Notes in Computer Science, vol 7898. Springer, Berlin, Heidelberg
D.G. Green. Cellular automata models in biology. Mathematical and Computer Modelling,Volume 13,
Issue 6, 1990, pp. 69–74
W.S.Hlavacek, J.R. Faeder, M.L.Blinov, A.S. Perelson, B.Goldstein, The complexity of complexes in signal transduction. Wiley, 2003
J. Keener, J. Sneyd.Mathematical Physiology: I: Cellular Physiology (2 ed.). Springer, 1994.
M. Kirkilionis, S. Walcher. On comparison systems for ordinary differential equations. Journal of Mathematical Analysis and Applications, 299 (1), 2004, pp.157 –173.
T.G.Kurtz. Solutions of ordinary differential equations as limits of pure jump Markov processes.
Cambridge University Press, 1970
G.L. Litvinov. Tropical Mathematics, Idempotent Analysis, Classical Mechanics and Geometry. E-print arXiv:1005.1247, 2010.

MATLAB and Statistics Toolbox Release 2015b, The MathWorks, Inc., Natick, Massachusetts, United States, URL: https://fr.mathworks.com/help/matlab/ref/ode15s.html

L. Michaelis, M.L. Menten. Die Kinetik der Invertinwirkung. Biochem Z. 49: 333–369, 1913.

N.S. Nedialkov.VNODE-LP: A Validated Solver for Initial Value Problems in Ordinary Differential Equations. Technical Report CAS-06-06-NN, 2006.
N. S. Nedialkov. Interval Tools for ODEs and DAEs. In: 12th GAMM - IMACS International Symposium on Scientific Computing, Computer Arithmetic and Validated Numerics (SCAN 2006), Duisburg, 2006.
V. No¨el. Mod`eles r´eduits et hybrides de r´eseaux de r´eactions biochimiques : applications `a la mod´elisation du cycle cellulaire. Bio-Informatique, Biologie Syst`emique. Universit´e Rennes 1, 2012. (PhD Thesis)

V. No¨el, D. Grigoriev, S. Vakulenko, O. Radulescu. Tropical geometries and dynamics of biochemical networks application to hybrid cell cycle models. Electronic Notes in Theoretical Computer Science, 2012.
O. Radulescu, A. N. Gorban, A. Zinovyev, V. Noel. Reduction of dynamical biochemical reactions networks in computational biology, Frontiers in Genetics 3 (131) (2012) 17.

O. Radulescu, S. Vakulenko, D. Grigoriev. Model reduction of biochemical reactions networks by tropical analysis methods. Mathematical Modelling of Natural Phenomena 10 (3), 2015.

Rui-Sheng Wang et al. Boolean modeling in systems biology: an overview of methodology and applications. 2012 Phys. Biol. 9 055001
J.J. Tyson. Modeling the cell division cycle: cdc2 and cyclin interactions. Proceedings of the National Academy of Sciences of the United States of America, 88(16):7328, 1991.

ML Wynn, N Consul, SD Merajver, S Schnell. Logic-based models in systems biology: a predictive and parameter-free network analysis method. Integrative biology: quantitative biosciences from nano to macro. 2012; 4(11):10.1039/c2ib20193c.

Appendix A	Symbolic propagation of min and max
The propagation of the min and max operations over S-expression is done using the evaluation functions
fm˙in and fm˙ax, which are defined by mutual induction over the syntax of S-expressions denoting monomials:
∀e1, e2,..., ek ∈ ExprS ,
fm˙in(e1, e2,..., ek)  m˙in(e1, e2,..., ek)
fm˙ax(e1, e2,..., ek)  m˙ax(e1, e2,..., ek)
∀e1, e2 ∈ ExprS ,
fm˙in(—˙ e1, —˙ e2)  —˙ (fm˙ax(e1, e2))
fm˙ax(—˙ e1, —˙ e2)  —˙ (fm˙in(e1, e2))
∀e1, e2 ∈ ExprS , ∀c ∈ R,


fm˙in
(c˙·e , c˙·e )  c˙·fm˙in(e1, e2), if c ≥ 0
c˙·fm˙ax(e1, e2), if c < 0

f	(c˙·e , c˙·e )  c˙·fm˙ax(e1, e2), if c ≥ 0
c˙·fm˙in(e1, e2), if c < 0
∀e, e1, e2 ∈ ExprS ,
fm˙in(e1±˙ e, e2±˙ e)  fm˙in(e1, e2)±˙ e
fm˙ax(e1±˙ e, e2±˙ e)  fm˙ax(e1, e2)±˙ e
∀e, e1, e2 ∈ ExprS ,
fm˙in(e—˙ e1, e—˙ e2)= e—˙ fm˙ax(e1, e2)
fm˙ax(e—˙ e1, e—˙ e2)= e—˙ fm˙in(e1, e2)
Appendix B  A DNA model: bound equations
Below, we give the equation of the lower bound on species x2 from our running DNA model example. According to Def.3.11, the derivative of lower bound on the concentration of x2 is computed by selecting the minimum region-dependent (i.e., local) lower bound, out of the 9 possible cases:
dx2 = min(t1,1, t1,2, t1,3, t2,1, t2,2, t2,3, t3,1, t3,2, t3,3)


with
dt	↓
↓	↓	↓	↓	↓	↓	↓	↓


t1,1 = max(k x 2,k  ( DNA0 — k−1 ))—
↓	1 1	−2	є	k

(1 + є)k−1 · min(x2,
M0 — x1 M0
,
2	2
x1
— DNA0 —
2
— є k−1 );
k2



t1,2 = max(k x 2,k 
DNA0 — x3u )—

↓	1 1
−2
є
M0 — x1
M0 — 2DNA0 — x1 + 2x3

(1 + є)k2 · min(x2,	,	)·
2	2
· min(x3, DNA0)


t1,3 = max(k x 2, ( k−2 (DNA
— k−1 ), k−2 (DNA — x ))—

↓	1 1	є
0	0	3
єk2	є

min(x2,
M0 — x1


2
+ min(x3 — DNA0,
k2


єk−1
DNA0)))·

(k2 · min(x3, DNA0)+ k−1);

єk−1
t2,1 =k−2 · max(x , DNA  —	)—
↓	4	0	k2
k−1
(1 + є)k−1 · min(x , M0 — max(x , DNA — є	))
2	4	0
2	k2



t2,2 =k−2 · max(x4, DNA0 — x3)—

(1 + є)k
· min(x , M0 — x , M0 — DNA + x )·

2	2	4	0	3
2	2
min(x3, DNA0 — x4)


t2,3 =k−2 · max(x4, DNA0 — x3, DNA
— k−1 ))—
єk2

min(x , M0 — max(x , DNA — x , DNA
2
— k−1 ))
єk2

(k−1 + k2 · min(x3, DNA0 — x4));


t3,1 = max(єk
x ,k x 2)+ max(єk x 2,k 
· (DNA

єk
x2
))—

↓	−2 4  1 1
1 1	−2
0	−1
k2

(1 + є)k
M0 — x1
· min(x ,	— єk
· x 2k  );

−1	 2
2
1  1  −2




3,2	2
 	x12

t↓  = max(k1x1 , єk−2x4, єk−2(DNA0 — x3)) + k−2 · max(x4, DNA0 — x3, єk1	)
−2

—(1 + є)k2 · min(x2,
M0 — x1


2
	max(x4, єk1 x12
x12


k−2
, DNA0 — x3)))·

min(x3, DNA0 — max(x4, єk1


k−2
));



t3,3 =k1x12 + k−2 · max(x4, DNA0 — x3)—

k2 · min(x2,
M0 — x1


2
max(x4, DNA0 — x3)) · min(x3, DNA0 — x4)—

k−1 · min(x2,
M0 — x1 — 2 · x4
);
2
