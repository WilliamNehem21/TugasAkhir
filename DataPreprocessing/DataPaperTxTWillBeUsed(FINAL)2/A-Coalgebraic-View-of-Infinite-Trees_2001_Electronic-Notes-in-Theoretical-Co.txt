Electronic Notes in Theoretical Computer Science 44 No. 1 (2001)
URL: http://www.elsevier.nl/locate/entcs/volume44.html 26 pages


A Coalgebraic View of Infinite Trees and Iteration

Peter Aczel 1
Department of Mathematics and Computer Science, Manchester University,
Manchester, United Kingdom

Jiˇr´ı Ad´amek 2,4
Institute of Theoretical Computer Science, Technical University,
Braunschweig, Germany

Jiˇr´ı Velebil 3,4
Faculty of Electrical Engineering, Technical University, Praha, Czech Republic



Abstract
The algebra of infinite trees is, as proved by C. Elgot, completely iterative, i.e., all ideal recursive equations are uniquely solvable. This is proved here to be a general coalgebraic phenomenon: let H be an endofunctor such that for every object X a fi- nal coalgebra, TX, of H( )+X exists. Then TX is an object-part of a monad which is completely iterative. Moreover, a similar contruction of a “completely iterative monoid” is possible in every monoidal category satisfying mild side conditions.
Key words: monad, coalgebra, monoidal category




1 Email:petera@cs.man.ac.uk
2 Email:adamek@iti.cs.tu-bs.de
3 Email:velebil@math.feld.cvut.cz
4 The support of the Grant Agency of the Czech Republic under the Grant No. 201/99/0310
is gratefully acknowledged.
◯c 2001 Published by Elsevier Science B. V. Open access under CC BY-NC-ND license.

Introduction
There are various algebraic approaches to the formalization of computations of data through a given program, taking into account that such computations are potentially infinite. In 1970’s the ADJ group have proposed continuous algebras, i.e., algebras built upon CPO’s so that all operations are continu- ous. Here, an infinite computation is a join of the directed set of all finite approximations, see e.g. [7]. Later, algebras on complete metric spaces were considered, where an infinite computation is a limit of a Cauchy sequence of finite approximations, see e.g. [6].
In the present paper we show that a coalgebraic approach makes it possible to study infinite computations without any additional (always a bit arbitrary) structure — that is, we can simply work in Set, the category of sets. We use the simple and well-known fact that for polynomial endofunctors H of Set the algebra of all (finite and infinite) properly labelled trees is a final H-coalgebra. Well, this is not enough: what we need is working with “trees with variables”, i.e., given a set X of variables, we work with trees whose internal nodes are labelled by operations, and leaves are labelled by variables and constants. This is a final coalgebra again: not for the original functor, but for the functor
H + CX : Set −→ Set
where CX is the constant functor with value X. We are going to show that for every polynomial functor H : Set −→ Set
final coalgebras TX of the functors H + CX form a monad, called the
completely iterative monad generated by H,
there is also a canonical structure of an H-algebra on each TX, and all these canonical H-algebras form the Kleisli category of the completely iterative monad,
and
the H-algebra TX has unique solutions of all ideal systems of recursive equations.
A surprising feature of the result we prove is its generality: this has nothing to do with polynomiality of H, nor with the base category Set. In fact, given an endofunctor H of a category ffi with binary coproducts, and assuming that each H +CX has a final coalgebra, then (a)–(c) hold. Moreover, the completely iterative monad T : ffi −→ ffi, as an object of the endofunctor category [ffi, ffi],
is a final coalgebra of the following endofunctor H^ of [ffi, ffi]:
H(B)= H · B + 1A	for all B : ffi −→ ffi.
Now [ffi, ffi] is a monoidal category whose tensor product ⊗ is composition and unit I is 1A. And the completely iterative monad generated by H is a monoid in [ffi, ffi]. We thus turn to the more general problem: given a monoidal category $, we call an object H iteratable provided that the endofunctor H^ : $ −→ $ given by H^ (B)= H ⊗ B + I has a final coalgebra T . Assuming

that binary coproducts of $ distribute on the left with the tensor product, we deduce that T has a structure of a monoid, called the completely iterative monoid generated by the object H.
Coming back to polynomial endofunctors of Set: the solutions of equa- tions mentioned in (c) above refer to a topic extensively studied in 1970’s by
C. C. Elgot [11], J. Tiuryn [18], the ADJ group [7] and others: suppose that
and Y are disjoint sets of variables and consider equations of the form
x0 = t0(x0, x1, x2,..., y0, y1, y2,.. .)
x1 = t1(x0, x1, x2,..., y0, y1, y2,.. .)
.
where xi are variables in X and yj are variables in Y , while ti are trees using those variables. Following Elgot, we call the system ideal provided that each tree ti is different from any variable, more precisely,
ti ∈ T (X + Y ) \ η[X + Y ] for each i = 0, 1, 2,... 
It then turns out that the system has a unique solution in TY . That is, there exists a unique sequence si(y0, y1, y2,.. .) of trees in TY for which the following equalities
s0(yi)= t0(s0(yi), s1(yi),..., yi,.. .)
s1(yi)= t1(s0(yi), s1(yi),..., yi,.. .)
.
hold. Expressed categorically, an ideal system of equations is a morphism
e : X −→ T (X + Y )
which factors through the H-algebra structure
τX+Y : HT (X + Y ) −→ T (X + Y )
mentioned in (b) above:
X 	e	 T (X + Y )
,,,,,, ¸
,τ,
z	,,,, X+Y
HT (X + Y )
A solution of e is given by a morphism
e† : X −→ TY 
for which the following diagram
X	e†	 T Y 


e
J 
T (X + Y )


T [e†,ηY ]
µY

 T TY 

commutes. (Here, µY : TTY −→ TY is the multiplication of the completely iterative monad. In case of polynomial functors this takes a properly labelled

tree whose leaves are again properly labelled trees, and it delivers the prop- erly labelled tree obtained by ignoring the internal structure.) In fact, the morphism T [e†, ηY ] takes a tree with variables from X + Y on its leaves and substitutes the solution-tree e†(x) for each occurence of the variable x ∈ X. Thus the equality (3), i.e.,
e†(x)= µY · T [e†, ηY ](e(x))  for all x ∈ X
precisely corresponds to the condition (1) above.
Now in this categorical formulation we can, again, forget about polynomi- ality and about Set: if H has final coalgebras for all functors H + CX, then we prove that every ideal equation-morphism e : X −→ T (X + Y ) has a unique solution, i.e., a unique morphism e† : X −→ TY for which (3) commutes.
Related work. After finishing the present version of our paper we have found out that a similar topic is discussed by L. Moss in his preprints [15] and [16].

A Completely Iterative Monad of an Endofunctor

Assumption 2.1 Throughout this section, H denotes an endofunctor of a category ffi with finite coproducts. Whenever possible we denote by
inl : X −→ X + Y	and	inr : Y −→ X + Y
the first and the second coproduct injections.
Remark 2.2 For the functor
H( )+ CX : ffi −→ ffi
i.e., for the coproduct of H with CX (the constant functor of value X) it is well-known that
initial (H + CX)-algebra ≡ free H-algebra on X. (See [4].)
More precisely, suppose that FX together with
αX : HFX + X −→ FX 
is an initial (H + CX)-algebra. The components of αX form an H-algebra ϕX : HFX −→ FX 
and
a universal arrow η0 : X −→ FX.
That is, for every H-algebra
HA −→ A
and for every morphism f : X −→ A there exists a unique homomorphism
f : FX −→ A of H-algebras with
f = f · η0 .


Example 2.3 Polynomial endofunctors of Set. These are the endofunctors of the form
HZ = A0 + A1 × Z + A2 × Z × Z + ... =    An × Zn
n<ω
where
Σ= (A0, A1, A2,.. .)
is a sequence of pairwise disjoint sets called the signature. An initial H-algebra can be described as the algebra of all finite Σ-labelled trees. Here a Σ-labelled tree t is represented by a partial function
t : ω∗ −→   An
n<ω
whose definition domain Dt is a nonempty and prefix-closed subset of ω∗ (the set of all finite sequences of natural numbers), such that for any i1i2 ... ir ∈ Dt with t(i1 ... ir) ∈ An we have
i1i2 ... iri ∈ Dt	iff	i < n	(for all i < ω).
Now the functor
H + CX
is also polynomial of signature


Therefore,
ΣX = (X + A0, A1, A2,.. .).

FX 

can be described as the algebra of all finite ΣX-labelled trees.
Remark 2.4
Dualizing the concept of a free H-algebra, we can study cofree H-coalgebras. A cofree H-coalgebra on an object X of ffi is just a free Hop-algebra on X in ffiop, where Hop : ffiop −→ ffiop is the obvious endofunctor. If ffi has finite products then, by dualizing 2.2, we see that
initial (H × CX)-algebra ≡ cofree H-coalgebra on X. Example: let H be a polynomial functor on Set. Then
H × CX
is also a polynomial functor, since
(H × CX)Z =   X × An × Zn.
n<ω
This is the polynomial functor of signature
ΣX = (X × A0,X × A1,X × A2,.. .).
A cofree H-coalgebra can be described as the coalgebra T X of all (finite and infinite) ΣX-labelled trees. Thus every node is labelled by (i) an operation from An and (ii) a variable from X.

Besides a free H-algebra on X and a cofree H-coalgebra on X we have a third structure associated with X: a final coalgebra of H + CX. We will show that it has an important universal property.
Definition 2.5 An endofunctor H of ffi is called iteratable provided that for every object X of ffi the endofunctor
H + CX
has a final coalgebra.
Notation 2.6 Let
TX 
denote a final coalgebra of H + CX. The coalgebra map
αX : TX −→ H(TX)+ X
is, by Lambek’s lemma [13], an isomorphism. Thus, we have
TX = H(TX)+ X
with coproduct injections
τX : H(TX) −→ TX	and	ηX : X −→ TX 
where [τX, ηX]= α−1 : H(TX)+ X −→ TX. In particular, TX is an H-algebra via τX.
We can also define T on morphisms f : X −→ Y of ffi in the expected manner: we turn TX into the following coalgebra of type H + CY :
TX  αX  H (TX)+ X id+f H (TX)+ Y
and denote by
Tf : TX −→ TY 

the unique homomorphism of coalgebras:
	αX	 


	id +f	 

TX ¸,
[τX ,ηX ]
Tf 
H(TX)+ X
H(TX)+ Y
HTf +id

J	αY		J 

TY ¸,
[τY ,ηY ]
H(TY )+ Y

That is, Tf is the unique morphism such that the following squares
HTX  τX  T X	X  ηX  T X 

HTf	Tf 
J 	 J 
f	Tf 
J	 J 


commute. Shortly,
HTY	τY	TY 
ηY	TY 

Tf is the unique homomorphism of H-algebras extending f .
It is easy to verify that (due to the uniqueness) we obtain a well-defined functor
T : ffi −→ ffi

and a natural transformation
η : 1A −→ T
Example 2.7 Continuous functors are iteratable.
Here we assume that ffi has
a terminal object 1
limits of ωop-sequences and
binary coproducts commuting with ωop-limits.
Suppose that H is ωop-continuous, i.e., preserves ωop-limits. Due to 3., all functors H + CX are ωop-continuous, thus, have a final coalgebra (see [2])
TX = lim(H + CX)n1.
n<ω
Observe that the functor T is also continuous: in fact, as we will see in Section 4, T is a final coalgebra of the functor
H^ : [ffi, ffi] −→ [ffi, ffi]
defined on objects by
H^ (B)= H · B + 1A	for all B : ffi −→ ffi.
Now [ffi, ffi] satisfies 1.–3. above, and H^ is continuous, thus,
T = lim Hn(C1). n<ω
This, being a limit of continuous functors, is continuous.
Example 2.8 Polynomial endofunctors of Set.
They are continuous, thus iteratable. A final coalgebra
TX 
of the (polynomial!) functor H + CX of signature ΣX is the algebra of all ΣX-labelled trees. That is, unlike the coalgebra
T X 
of all ΣX-labelled trees, see 2.4, where every node carries a label from X and one from An (for the case of n children), the trees in TX have nodes labelled in An except for leaves: they are labelled in X + A0.
As a concrete example, consider the unary signature:
HZ = A × Z.
We have defined three algebras for a set X of variables: the free algebra
FX = A∗ × X
of all finite Σ-labelled trees for Σ = (∅, A, ∅, ∅,.. .), the cofree coalgebra
T˜X = (A × X)∞


(where ( )∞ denotes the set of all finite and infinite words in the given alpha- bet), and the algebra
TX = A∗ × X + Aω
(where ( )ω denotes the set of all infinite words in the given alphabet).
Example 2.9 Generalized polynomial functors.
We want to include functors such as HZ = ZB, where B is a (not neces- sarily finite) set: since these functors are continuous, the description of TX is quite analogous to the preceding case. Here we introduce a generalized signature as a collection
Σ= (Ai)i∈Card
of pairwise disjoint sets indexed by all cardinals such that for some cardinal
λ we have
i ≥ λ  implies  Ai = ∅.
(We say that Σ is a λ-ary generalized signature; the case λ = ω being the above one.) The generalized polynomial functor of generalized signature Σ is defined on objects by



and analogously on morphisms.
HZ =   Aj × Zj
j<λ

A final coalgebra is, again, described as the coalgebra of all Σ-labelled trees, i.e., partial maps
t : λ∗ −→  Aj
j<λ
defined on a nonempty, prefixed-closed subset Dt of λ∗ (the set of all finite sequences of ordinals smaller than λ) such that for all i1i2 ... ir ∈ Dt with t(i1i2 ... ir) ∈ Aj we have
i1i2 ... iri ∈ Dt	iff	i < j	(for all i < λ).
Since H +CX is a generalized polynomial functor of signature ΣX, obtained from Σ by changing A0 to X + A0, we conclude that
TX 
is the coalgebra of all (finite and infinite) ΣX-labelled trees.
Remark 2.10 Denote by U : H-Alg −→ ffi the forgetful functor of the cate- gory of all H-algebras and H-homomorphisms. The universal property of free H-algebras ϕX : HFX −→ FX (provided they exist on all objects X of ffi) makes U a right adjoint. The left adjoint is the functor
X '→ (FX, ϕX).
We now show a related universal property of the H-algebras τX : HTX −→ TX: given a morphism s : X −→ TY we prove that there is a unique ho- momorphism s^ : TX −→ TY of H-algebras extending s. This is interesting

even for the basic case of the polynomial endofunctors of Set: here a mor- phism s : X −→ TY can be viewed as a substitution rule, substituting a variable x ∈ X by a ΣY -labelled tree s(x). We obviously have a homomor-
phism s^ : TX −→ TY extending s: take a tree t ∈ TX, substitute every
variable x ∈ X on any leave of t by the tree s(x) and obtain a tree
t' = T s(t) ∈ TTY 
over TY . Now forget that t' is a tree of trees and obtain a tree s(t) in TY . However, it is not obvious that such a homomorphism is unique. This is what we prove now:
Substitution Theorem 2.11 For every iteratable endofunctor H of ffi and any morphism
s : X −→ TY	in ffi
there exists a unique extension into a homomorphism
s : TX −→ TY 
of H-algebras. That is, a unique homomorphism s : (TX, τX) −→ (TY, τY ) with s = s^ · ηX.
Proof. We turn TX + TY into a coalgebra of type H + CY as follows: the coalgebra map is
TX + TYαX +αY H TX + X + HTY + Y	β  H (TX + TY )+ Y
where the components of β (denoted by β1, β2, β3 and β4 from left to right) are as follows:
X
s

HTX
Hinl
J 
H(TX + TY )
J 
TY 
αY
J 
HTY + Y
HTY
Hinr
J 
H(TX + TY )



    Y

¸¸¸¸¸¸¸
,,,,,,

¸¸¸¸
Hinr+id
,in,l,

inl
¸¸¸¸
,,,,, 
inr

z˛ J  ,  ¸ c
H(TX + TY )+ Y
There exists a unique homomorphism
  αX +αY	 




β 

TX + TY ¸,
H(TX)+ X + HTY + Y
H(TX + TY )+ Y

[τX ,ηX ]+[τY ,ηY ]
f
J	αY	 
Hf +id
J 

TY ¸,
[τY ,ηY ]
HTY + Y

of (H + CY )-coalgebras. Equivalently, a unique morphism
f = [f1, f2]: TX + TY −→ TY 



in ffi for which the following two squares
HTX + X  [τX,ηX ]  T X [β1,β2]
J 


HTY + Y [τY ,ηY ] T Y 

H(TX + TY )+ Y
Hf +id
f1	and
Hf2+id
J 
HTY
f2
	 J 

J 
HTY
	 J 
+ Y [τY ,ηY ]TY 

+ Y	[τY ,ηY ]	TY 
commute. The right-hand square shows that f2 is an endomorphism of the final (H + CY )-coalgebra — thus,
f2 = id.
The left-hand square is equivalent to the commutativity of the following two squares (recall the definition of β1 and β2):



HTX  τX  T X 
X 	ηX	 T X 
s
J 
TY 

Hf1
f1
J 	 J 
and
αY	f1
J 
HTY

HTY	τY	TY 
+ Y
Hf2+id
J 
HTY


	 J 

+ Y [τY ,ηY ]TY 
The square on the left tells us that f1 is a homomorphism of H-algebras. And

since f2 = id (thus Hf2 + id = id ) and α−1
= [τY , ηY ], the square on the

right states f1 · ηX = s, i.e., f1 extends s. This proves that there is a unique extension of s to a homomorphism: put s = f1.	✷
Corollary 2.12 Let N denote the full subcategory of H-Alg formed by all the
H-algebras (TX, τX), for X in ffi. The functor
Ψ: ffi −→ N,	X '→ (TX, τX)
is left adjoint to the forgetful functor
U/N : N −→ ffi,	(TX, τX) '→ TX.
This adjunction defines a monad


on ffi.
T = (T, η, µ)

In fact, the natural transformation µ : TT −→ T is, in the notation of the Substitution Theorem, precisely
µY = i^d TY : T (TY ) −→ TY.
Definition 2.13 The above monad T, associated with any iteratable endo- functor H, is called the completely iterative monad generated by H.

Examples 2.14
The completely iterative monad generated by the endofunctor
HZ = A × Z

of Set is the monad

TX = A∗ × X + Aω.

This can be described as the free-algebra monad of the variety of algebras with
unary operations oa for a ∈ A,
nullary operations indexed by Aω (i.e., constants of the names a0a1a2 ... ∈ Aω),
and
satisfying the equations
oa(a0a1a2 .. .)= aa0a1a2 ...	for all a, a0, a1,... ∈ A
In this case, T is a finitary monad on Set.
The completely iterative monad generated by the endofunctor
HZ = Z × Z
of Set is the monad TX of all binary trees with leaves indexed in X. This is not finitary: consider the following element of T :
 ,,,,,
x1	 ,,,,,
x2	 ,,,,,
x3
x4
in which all xi are pairwise distinct.
Let
CPO
denote the category of CPO’s (say, posets with a smallest element ⊥ and joins of ω-chains) and strict continuous functions (i.e., those preserving
⊥ and joins of ω-chains). For all locally continuous functors H : CPO −→ CPO, i.e., such that the derived functions
CPO(A, B) −→ CPO(HA, HB),	f '→ Hf
are all continuous, it is well-known that initial H-algebra ≡ final H-coalgebra,
see [17]. Since each H + CX is also locally continuous, we deduce that
locally continuous functors are iteratable, and in this case
FX ≡ TX 
that is, the completely iterative monad T is just the free algebra monad
F of H.

Analogously for the category
CMS
of all complete metric spaces and contractions: every locally contractive
endofunctor H : CMS −→ CMS, i.e., such that the derived functions
CMS(A, B) −→ CMS(HA, HB),	f '→ Hf
are all contractive with a common constant < 1, has a single fixed point, i.e.,
initial H-algebra ≡ final H-coalgebra,
see [6]. Since each H + CX is also locally contractive, we again get
T = F.
Remark 2.15
The Kleisli category
ffiT −→ ffi
of the completely iterative monad is the above category N of all H- algebras τX : HTX −→ TX (with its forgetful functor N −→ ffi). This follows from the Substitution Theorem.
The Eilenberg-Moore category
ffiT −→ ffi
of all T-algebras and T-homomorphisms seems to be a new construct. As seen in 2.14, it is usually infinitary. For example, if
H : Set −→ Set,	HZ = Z × Z
T
we can describe Set as the category of all algebras on one binary opera-
tion (say, ⬦) and on ω-ary operations t(x0, x1, x2,.. .) for all infinite trees
t(x0, x1, x2,.. .) in T {xn | n < ω} satisfying the following equations:
(a) x ⬦ ˜t = x˜⬦ t,
and
(c) ˜t(t˜0, t˜1, t˜2,.. .) = s˜ if s is the tree obtained by substituting ti for xi,
Solution Theorem
In the introduction above we have motivated the following
Definition 3.1 Let H be an iteratable endofunctor of ffi.
By an equation-morphism we understand a morphism in ffi of the follow- ing form
e : X −→ T (X + Y ),	X, Y are objects of ffi.
An equation-morphism is called ideal if it factorizes through
τX+Y : HT (X + Y ) −→ T (X + Y ).


A solution of an equation-morphism e is a morphism
e† : X −→ TY 
such that the following diagram
X	e†	 T Y 




commutes.
e
J 
T (X + Y )


T [e†,ηY ]
µY

 T TY 

Examples 3.2
Consider the following endofunctor
HZ = A × Z

of Set with

TX = (A∗ × X)+ Aω.

The only interesting equations are of the form
x = a1a2 ... anx
for a word a1a2 ... an ∈ A∗.	This equation is ideal iff the word is nonempty. Then it has a unique solution:
e†(x)= a1a2 ... ana1a2 ... ana1a2 ... an ... ∈ Aω.
For the functor
HZ = Z × Z
on Set we have as TX the algebra of all binary trees with leaves labelled in X. Consider the following system e of equations
 ,,,
x1 = x2	y1
 ,,,
x2 = x1	y2
It is ideal. The unique solution is
 ,,,
 ,,	y1

e†(x1)= 
  ,
  ,	y2

 ,, 
y2
y1
 ,,,

 ,,	y2

e†(x2)= 
  ,
  ,	y1

 ,, 		y2 y1
Solution Theorem 3.3 Let H be an iteratable endofunctor. Then every ideal equation-morphism has a unique solution.

Proof. Let e : X −→ T (X + Y ) be an ideal equation-morphism and denote by e0 : X −→ HT (X + Y ) a morphism such that the triangle

X ¸¸¸¸¸
¸¸¸¸
e0	¸¸z 
e	 T (X + Y )
,,,,,, ¸
,,,,,τ,X+Y

HT (X + Y )
commutes.
We are going to use the definition of a final (H +CY )-coalgebra for defining a morphism h : T (X + Y )+ TY −→ TY . To do this, we must first define an (H + CY )-coalgebra
γ : T (X + Y )+ TY −→ H T (X + Y )+ TY  + Y
on T (X + Y )+ TY . The morphism γ is defined as a composite
T (X + Y )+ TY αX+Y +αY H T (X + Y )+ X + Y + HTY + Y



H
where the components of δ are as follows:
δ
J 
T (X + Y )+ TY	+ Y


X

e0
J 
HT (X + Y )
Hinl
J 

HT (X + Y )
Hinl
J 
H T (X + Y )+ TY 
 Y
    
    
inr 

H T (X + Y )+ TY 
¸¸¸¸¸¸
inl
HT Y + Y
,,,,,,

¸¸¸¸¸¸¸¸	,,,,,,
inl	¸¸	 ,, Hinr+id Y
	z_	J ,s, 
Denote by h the unique homomorphism of (H + CY )-coalgebras:
T (X + Y )+ TY 	γ	 H T (X + Y )+ TY  + Y
h	Hf +id Y
J	 H TYJ 


Put:
TY	αY	+ Y

h1 = h · inl : T (X + Y ) −→ TY	and	h2 = h · inr : TY −→ TY The commutativity of the above square is (since αX+Y + αY is inverse to [τX+Y , ηX+Y ]+ [τY , ηY ]) equivalent to the commutativity of the following four



diagrams:

HT (X + Y ) τX+Y T (X + Y )

(4)
Hh1	h1
J 	 J 

HTY	τY	TY 
X 	inl	 X + Y ηX+Y  T (X + Y )
e0


(5)
J 
HT (X + Y )
Hh1	h1
J 
HTY
inl

J 
HTY
	 J 

+ Y	[τY ,ηY ]	TY 
Y 	inr	 X + Y ηX+Y  T (X + Y )

(6)
inr
J 
HTY
h1
	 J 

+ Y	[τY ,ηY ]	TY 
HTY + Y [τY ,ηY ] T Y 

(7)
Hh2+id Y
J 
HTY
h2
	 J 

+ Y [τY ,ηY ]TY 
The square (7) asserts that h2 is an endomorphism of the final (H + CY )- coalgebra, i.e.,
h2 = id TY .
The diagram (4) tells us that h1 is a homomorphism of H-algebras, thus, by Substitution Theorem, h1 is uniquely determined by
h1 · ηX+Y : X + Y −→ TY.
The last morphism is determined uniquely by its first component, s : X −→ TY , because, using the diagram (6), we conclude that the second component of h1 · ηX+Y is ηY (=[τY , ηY ] · inr). That is h1 · ηX+Y = [s, ηY ] or, equivalently
h	^
1 = [s, ηY ].
Finally, the diagram (5) asserts that
s = h1 · ηX+Y · inl
= [τY , ηY ] · inl · Hh1 · e0
= τY · Hh1 · e0
= h1 · τX+Y · e0
= h1 · e
where we use naturality of τ and the above triangle for e0.

We have proved that there exists s : X −→ TY with

s = h1 · e
^
= [s, ηY ] · e.

Moreover, this s is uniquely determined by h = [h1, id Y ], hence s is uniquely determined by e.	✷

A Completely Iterative Monoid of an Object
We can view the procedure of Section 2 globally by working, instead of in the given category ffi, in the endofunctor category [ffi, ffi]. Here H is an object. If H is iteratable, then it defines another object, T , together with a morphism (natural transformation)
α : T −→ HT + 1A.
This is a coalgebra of the functor
H^ : [ffi, ffi] −→ [ffi, ffi]
defined on objects by
H(S)= H · S + 1A	(for all S : ffi −→ ffi)
and analogously on morphisms. We prove below that T is a final H-coalgebra.
Within the realm of locally small categories with coproducts this global approach is equivalent to that of Section 2 as we now prove.
Proposition 4.1 Let ffi be a locally small category with coproducts. Then, for every endofunctor H, the following are equivalent:
H is an iteratable object of [ffi, ffi], i.e., a final H-coalgebra exists.
H is an iteratable endofunctor, i.e., all final (H + CX)-coalgebras exist.
Remark. The proof that (ii) implies (i) holds for all categories ffi with binary coproducts.
For the proof that (i) implies (ii), only copowers indexed by hom-sets of the category ffi are used. Thus the proposition holds also for any poset ffi and for the category ffi = Setfin of finite sets.
Proof. (i) implies (ii): For every pair X, Y of objects in ffi denote by KX,Y
the following endofunctor
KX,Y A =	  Y
A(X,A)
for objects A, analogously for morphisms. This is just a left Kan extension of Y , considered as a functor 1 −→ ffi along X : 1 −→ ffi. In fact, for every functor P : ffi −→ ffi we have a bijection
KX,Y −→ P Y −→ PX 


natural in P , which to every natural transformation ϕ : KX,Y −→ P assigns the composite


Y   u  
A(X,X)
Y  ϕX  P X 

where u is the id X-injection. Conversely, given a morphism f : Y −→ PX,
the corresponding natural transformation f @ : KX,Y −→ P has components
f @ :	Y  −→ PA 
h:X−→A
determined by Y	f	 P X  Ph  P A .
Let α : T −→ HT + 1A be a final H-coalgebra. We are to show that
αX : TX −→ HTX + X
is a final (H + CX)-coalgebra for every X.
In fact, for every (H + CX)-coalgebra
b : Y −→ HY + X

when composing b with
Hu + id : HY + X −→ H 
A(X,X)

Y  + X =  H^ KX,Y + 1A X

we obtain a morphism

¯b : Y −→  H^ KX,Y X

which by the above adjointness yields an H^ -coalgebra
¯b@ : KX,Y −→ H^ KX,Y .
Let ϕ be the unique homomorphism of H^ -coalgebras

KX,Y
 ¯b@  H^ K

^
Hϕ
J	J 
T	α	 H T
Then ϕ = f @ for a unique f : Y −→ TX, and the commutativity of the above square yields the commutativity of
Y 	b	 H Y + X
f	Hf +id X
J	   J 
TX αX  HTX + X
implies (i): It has been noted above (see 2.6) that if αX : TX −→ HTX + X denotes a final coalgebra for H + CX, then the assignment X '→ TX can be extended to a functor T : ffi −→ ffi.
Analogously one can show that the collection of all αX’s constitutes a natural transformation α : T −→ H ·T +1A. Thus, α makes T an H^ -coalgebra.

To verify that α is indeed a final H^ -coalgebra, consider any coalgebra
β : S −→ H · S + 1A. For each X in ffi there exists a unique morphism
fX : SX −→ TX such that the square
SX  βX  H SX + X
fX	HfX +id
J	   J 
TX αX  HTX + X
commutes. It is easy to show that the collection of fX’s is natural in X and that it defines a unique natural transformation f : S −→ T for which the square
β	 H S +1 
f	Hf +id
J	 H T J 
α	+ 1A
commutes.	✷
Now [ffi, ffi] is a monoidal category with composition as tensor product and 1A as a unit. Moreover composition distributes with coproducts on the left: (H +K)·L = (H ·L)+(K ·L). This leads us to consider an arbitrary monoidal category
($, ⊗, I)
with coherence isomorphisms (for all H, K, L in $):
lH : I ⊗ H −→ H	rH : H ⊗ I −→ H
and
aH,K,L : H ⊗ (K ⊗ L) −→ (H ⊗ K) ⊗ L
satisfying the usual laws, and distributive in the following sense:
Definition 4.2
A monoidal category is called left distributive if it has binary coproducts and the canonical morphisms
dH,K,L : (H ⊗ L)+ (K ⊗ L) −→ (H + K) ⊗ L
are all isomorphisms.
An object H of a monoidal category $ is said to be iteratable provided that the endofunctor H^ : $ −→ $ defined by
H^ (B)= H ⊗ B + I
has a final coalgebra.
A left distributive monoidal category with each object iteratable is called an iteratable category.
Examples 4.3

The category
Cont [Set, Set]
of continuous endofunctors (i.e., those preserving ωop-limits) of Set is iteratable: we know that continuous functors are closed under
composition (here: a tensor product)
identity functor (here: unit I) and
finite coproducts,
thus Cont [Set, Set] is a distributive monoidal subcategory of [Set, Set]. Now, as observed in 2.7, every continuous functor is iteratable, and the completely iterative monad is also continuous; therefore Cont [Set, Set] is an iteratable category.
More in general, Cont [ffi, ffi] is an iteratable category for every category
ffi satisfying conditions 1.–3. of Example 2.7.
The category
Fin[Set, Set]
of all finitary endofunctors of Set (i.e., those preserving filtered colimits) is an iteratable category. In fact, finitary functors are closed under com- position, identity functor, and finite coproducts, thus, Fin[Set, Set] is a distributive monoidal subcategory of [Set, Set].
A completely iterative monad T of a finitary functor H exists, since finitary functors always have final coalgebras, see [8], Theorem 1.2, and each H + CX is clearly finitary. However, this monad is seldom finitary, see 2.14.(ii) above.
We can form a finitary part Tfin of every monad T on Set (see [14]): it is obtained by restricting the underlying functor T to the full subcategory Setfin of finite sets, and then forming a left Kan extension of T /Setfin along the embedding of Setfin in Set.
It is quite easy to verify that Tfin is a final coalgebra of the endofunctor
H · ( )+ 1Set of Fin[Set, Set]. In fact, given any coalgebra
S −→ H · S + 1Set
(with S finitary, of course) the unique H-homomorphism f : S −→ T is easily seen to have a factorization through the canonical morphism m : Tfin −→ T . That is, we have a unique f' : S −→ Tfin with f = m·f'. And f' is the unique homomorphism of coalgebras of the functor H · ( )+ 1Set, considered as an endofunctor of Fin[Set, Set].
Example: the functor
H : Set −→ Set	with HZ = Z × Z
has the completely iterative monad T where TX are all binary trees with leaves indexed in X. And Tfin is the finitary monad where Tfin X are all binary trees with leaves indexed in a finite subset of X.
More generally, if ffi is a locally finitely presentable category (see [5]) then

Fin[ffi, ffi], the category of finitary endofunctors of ffi, is iteratable. The argument is the same: we form a completely iterative monad T in [ffi, ffi], which exists by Theorem 1.2 in [8] (although formulated for Set, it holds in all locally presentable categories) and then take a finitary part Tfin just as in (iii) above.
In the formal language theory we study the monoidal category $ of all subsets of Γ∗ (for the basic alphabet Γ) which is a complete lattice exp(Γ∗) considered as a category. Here
L1 ⊗ L2 = concatenation of languages L1 and L2
and
L1 + L2 = union of languages L1 and L2.
Every language L is iteratable with
T = L∗ (Kleene star).
Kleene algebras, cf. [12], are distributive symmetric monoidal categories ($, ⊗, I) where $ is a join semilattice such that each of the endofunctors H = H ⊗ ( )+ I has a least fixed point H∗. This is closely related to our concept, except that we are concerned with the largest fixed points. Since the basic motivation for Kleene algebras is the previous example of formal languages and since this example has the property that H = H ⊗ ( )+ I always has a unique fixed point, the choice of least or largest seems to be rather arbitrary.
Let $ have a terminal object 1 and limits of ωop-chains which commute with both the tensor product and the binary coproduct. Then every object H is iteratable and T is a limit of the following countable chain:

1 ¸,!	 H ⊗ 1+ I ¸,H⊗!+id
H ⊗ (H ⊗ 1+ I)+ I ¸H,⊗(H⊗!+id )+id
... 

For example: the category of sets with a binary product as ⊗ and a terminal object I as a unit is an iteratable category: the (polynomial) functor

has a final coalgebra for every set H.
H^ (Z)= H × Z + I T = H∞

And the cartesian closed category Cat of all small categories is an iteratable category. Every small category H is iteratable with
T =1 + H + (H × H)+ ... + Hω
Let H be an iteratable Abelian group (where we consider the category Ab of all Abelian groups with the usual tensor product). Then a final coalgebra of H is, as we show below in 4.6, a monoid in the given monoidal category — thus, in the present case
T is a ring.

Notation 4.4 For every iteratable object H we denote by T and α : T −→ H ⊗ T + I a final coalgebra of H. By Lambek’s Lemma, T is a coproduct of H ⊗ T and I with injections
τ : H ⊗ T −→ T	and	η : I −→ T
where α−1 = [τ, η].
This makes T into an algebra for the functor H ⊗ . More generally, every object S of $ yields an algebra
τ ≡ H ⊗ (T ⊗ S) aH,T,S (H  ⊗ T ) ⊗ S τ⊗id S T ⊗ S
(where aH,T,S is the associativity isomorphism). Put
η  ≡ S   rS  I ⊗ S η⊗id S T ⊗ S
Substitution Theorem 4.5 Let H be an iteratable object in a monoidal category $. For every morphism
s : S −→ T
in $ there is a unique homomorphism


of algebras of type H ⊗	with
s^ : T ⊗ S −→ T

s = s^ · ηS.

Proof. This is quite analogous to the proof of Theorem 2.11. We turn the object T ⊗ S + T into an H^ -coalgebra as follows:
T ⊗ S + T   α⊗id S +α  (H  ⊗ T + I)+ (H ⊗ T + I) ∼=
∼= H ⊗ (T ⊗ S)+ S + H ⊗ T + I   β  H ⊗ (T ⊗ S + T )+ I
where the isomorphism in the middle is the combination of the canonical
isomorphism (H ⊗T +I)⊗S ∼= (H ⊗T )⊗S+I ⊗S with a−1	: (H ⊗T )⊗S −→
H ⊗ (T ⊗ S) and r−1 : I ⊗ S −→ S, and β has the following components (from

left to right):
S	H ⊗ T
s	H⊗inr

H ⊗ (T ⊗ S)
H⊗inl
J	H ⊗ (T
...
α	...
J 
⊗ S + T )

H ⊗ (T
J 
⊗ S + T )
J 
H ⊗ T + I
inl ...
..
,,,, I

¸¸¸¸¸¸¸¸
....
,,,,,,,,

¸¸¸¸¸H⊗inr+id
... ,,,,,

inr	¸¸¸z_
J .,.c,_,,.,
inr

H ⊗ (T ⊗ S + T )+ I
The unique homomorphism
f = [f1, f2]: T ⊗ S + T −→ T


of H-coalgebras is the unique morphism of $ which has the second component,
f2, an endomorphism of the final H-coalgebra α : T −→ H ⊗ T + I, thus,
f2 = id,
and for the first component we get two commutative diagrams: one tells us that f1 is a homomorphism of (H ⊗ )-algebras, and the other one is as follows:
S 	ηS	 T ⊗ S
s
J 
T
α	f1
J 
H ⊗ T + I
H⊗f2+id
H ⊗ J  I 	 J 
T +	[τ,η]	T
Since f2 = id , this diagram tells us that f1 · ηS = s, which proves the Substi- tution Theorem.	✷
Corollary 4.6 For every iteratable object H, a final H-coalgebra T is a monoid with respect to


and
η : I −→ T

µ = iˆd T : T ⊗ T −→ T.

Proof. In fact, the equality µ · ηT = id follows from the definition of µ and the other two equalities defining monoids in ($, ⊗, I) easily follow from the uniqueness of s^.	✷
Definition 4.7 The monoid from the above Corollary is called a completely iterative monoid generated by an iteratable object H.
We now show a remarkable property of completely iterative monoids: if a left distributive monoidal category is an iteratable category, then the assign- ment of a completely iterative monoid is a functor which underlies a completely iterative monoid again. Example: Set is an iteratable category, see item (vii) in 4.3, and the assignment H '→ H∞ is, as an object of [Set, Set], itself a completely iterative monoid generated by Id .
For every monoidal category $ we consider [$, $] as a monoidal category (with the “pointwise” tensor product P ⊗ Q : H '→ P (H) ⊗ Q(H) and the “pointwise” unit CI : H '→ I).
Theorem 4.8 Suppose that ($, ⊗, I) is an iteratable category. Then the fol- lowing hold:
The functor category [$, $] is an iteratable category.

The assignment of a completely iterative monoid to every object is an endofunctor of $ and which, as an object of [$, $], is itself a completely iterative monoid generated by Id B.
Proof. (i). First observe that [$, $] is indeed a distributive monoidal cate- gory, since the required structure is transported pointwise from $.
Consider now any functor H : $ −→ $. To show that the derived functor
H = H ⊗ ( )+ CI : [$, $] −→ [$, $]
has a final coalgebra, form, for each B in $, a final coalgebra of the functor
H(B) ⊗ ( )+ I:
aB : T (B) −→ H(B) ⊗ T (B)+ I.
It is clear that there is a unique canonical way of making the assignment B '→ T (B) functorial: consider any morphism f : B −→ C in $ and define T (f ): T (B) −→ T (C) to be the unique morphism such that the diagram
T (B)  aB  H (B) ⊗ T (B)+ H(f )⊗T (B)+id  (C) ⊗ T (B)+ I

T (f )
J 
T (
H(C)⊗T (f )+id
J 

C)	aC
H(C) ⊗ T (C)+ I

commutes. It is easy to show that this indeed defines a functor T : $ −→ $.
The collection of morphisms aB : T (B) −→ H(B) ⊗ T (B)+ I is natural in B and thus defines a coalgebra for H ⊗ ( )+ CI:
a : T −→ H ⊗ T + CI.
To show that a is a final coalgebra, consider any coalgebra
b : S −→ H ⊗ S + CI.
For every B in $ there exists a unique morphism λB : S(B) −→ T (B) such that the square
S(B)  bB  H (B) ⊗ S(B)+ I
λB	H(B)⊗λB+id
J	J 
T (
B) aB  H(B) ⊗ T (B)+ I
commutes. To show that the collection (λB) constitutes a natural transfor- mation, observe that, for every f : B −→ C, both
λC · S(f ): S(B) −→ T (C)	and	T (f ) · λB : S(B) −→ T (C)
are homomorphisms of (H(C) ⊗ ( )+ I)-coalgebras from
(H(f ) ⊗ S(B)+ id ) · bB : S(B) −→ H(C) ⊗ S(B)+ I
to
aC : T (C) −→ H(C) ⊗ T (C)+ I
and therefore they are equal.
We have formed a final coalgebra
a : T −→ H ⊗ T + CI.


(ii) Put Φ(B)= TB for every object B and extend the assignment B '→ Φ(B) to a functor Φ : $ −→ $ as in the first part of the proof.
Let us now consider the functor
Id ⊗ ( )+ CI : [$, $] −→ [$, $].
The collection of morphisms aB : Φ(B) −→ B ⊗ Φ(B)+ I defines a coalgebra for Id ⊗ ( )+ CI:
a : T −→ Id ⊗ T + CI
and it follows from the first part of the proof that this coalgebra is final.
To conclude the proof use now the monoidal version of the existence of a completely iterative monad from 4.6.	✷

Conclusions and Connections
We have seen that with every endofunctor H satisfying rather weak hypothesis we can associate a monad T by assigning to every object X a final coalgebra, TX, of the endofunctor H( )+X. This monad is specified by the Substitution Theorem for final coalgebras. It has the remarkable property that every ideal system of recursive equations in it has a unique solution (Solution Theorem). Even in the basic case, where a signature in (or a polynomial endofunctor of) the category of sets is given, this monad T of finite and infinite trees over given variables seems to be new. We can introduce T more globally, as an object of the endofunctor category [ffi, ffi]: here, T is simply a final coalgebra of the
endofunctor H ·  + Id , and this generalizes to monoidal categories satisfying mild additional assumptions.
One of the sources for the ideas in this paper has been the so-called hyperset theory which is an approach to axiomatic set theory that allows for non- well-founded sets. In hyperset theory the Foundation Axiom of the standard axiomatic set theory ZFC is replaced by the Anti-Foundation Axiom, AFA.
This axiom expresses that every flat system of set equations
xi = {xj | j ∈ Ji}	(i ∈ I)
has a unique solution in the hyperuniverse of possibly non-well-founded sets. Here the xi are variables, indexed by a set I, and each Ji is a subset of I. By considering the variables as atoms (urelemente) taken from a class X, the right hand sides become sets of atoms taken from a hyperuniverse V [X] of possibly non-well-founded sets that are built out atoms taken from X. The hyperuniverses V [Y ], for classes Y , satisfy relativized forms of AFA which generalize to non-flat systems of equations. In general we get the Solution Theorem for the V [Y ].
It was only the recent collaboration between the authors that led us to realise that the Substitution Theorem just expresses that the natural endo- functor T determined by the operation X '→ V [X] forms a monad T on the category of classes and that the Solution Theorem just expresses that T is the

completely iterative monad generated by the endofunctor Pow on the category of classes that associates to each class X the class Pow (X) of its subsets.
The approach to working with hypersets using the Substitution and Solu- tion Theorems has been presented in the books [9], [1] and [10].

References
Aczel, P., “Non-Well-Founded Sets”, CSLI Lecture Notes Number 14, CSLI Publications, Stanford, 1988.
Ada´mek, J., Free Algebras and Automata Realizations in the Language of Categories, Comment. Math. Univ. Carolinae 15 (1974), 589–602.
Ada´mek, J., and V. Koubek, On the Greatest Fixed Point of a Set Functor, Theor. Comp. Science 150 (1995), 57–75.
Ada´mek, J., and V. Trnkova´, “Automata and Algebras in Categories”, Kluwer Academic Publishers, Dordrecht, 1990.
Ada´mek, J., and J. Rosicky´, “Locally presentable and accessible categories”, Cambridge University Press, 1994.
America, P., and J. Rutten, Solving Reflexive Domain Equations in a Category of Complete Metric Spaces, J. Comp. System Sci. 39 (1989), 343– 375.
Goguen, J. A., S. W. Thatcher, E. G. Wagner and J. B. Wright, Initial Algebra Semantics and Continuous Algebras, manuscript.
Barr, M., Terminal Coalgebras in Well-founded Set Theory, Theor. Comp. Science 114 (1993), 299–315.
Barwise, J., and J. Etchemendy, “The Liar: An Essay in Truth and Circularity”, Oxford University Press, 1987.
Barwise, J., and L. Moss, “Vicious Circles”, CSLI Lecture Notes Number 60, CSLI Publications, Stanford, 1996.
Elgot, C. C, Monadic Computation and Iterative Algebraic Theories, in: “Logic Colloquium ’73” (eds: H. E. Rose and J. C. Shepherdson), North- Holland Publishers, Amsterdam, 1975.
Kozen, D., A Completeness Theorem for Kleene Algebras and the Algebra of Regular Events, Inform. and Comput. 110 (1994), 366–390.
Lambek, J., A Fixpoint Theorem for Complete Categories, Mathematische Zeitschrift 103 (1968), 151–161.
Linton, F. E. J., Some aspects of equational categories, in: “Proc. Conf. Categorical Algebra, La Jolla 1965”, Springer-Verlag 1966, 84–94.


Moss,	L.,	Parametric	Corecursion,	preprint,	available	at
http://math.indiana.edu/home/moss/parametric.ps.
Moss, L., Recursion and Corecursion Have the Same Equational Logic, preprint, available at http://math.indiana.edu/home/moss/eqcoeq.ps.
Smyth, M. B., and G. D. Plotkin, The Category-theoretic Solution of Recursive Domain Equations, SIAM J. Comput., 11 (1982), 761–783.
Tiurin, J., Unique Fixed Points vs. Least Fixed Points, Theoretical Computer Science 12 (1980), 229–254.
