Egyptian Informatics Journal 23 (2022) 483–497











A weighted Markov-clustering routing protocol for optimizing energy use in wireless sensor networks
Leila Abbad a,⇑, Azzedine Nacer b, Houda Abbad c, Mohammed Taieb Brahim c, Nadjet Zioui d
a LIT Laboratory, Electrical Engineering and Industrial Computing Department, ENST High School, Algiers, Algeria
b LCDEP Laboratory, Instrumentation Department, University of Science and Technology Houari Boumediene, Algiers, Algeria
c EEDIS Laboratory, Computer Science Department, Djillali Liabes University of Sidi Bel Abbes, Sidi Bel Abbes, Algeria
d Laboratoire d’Intelligence Artificielle Appliquée (LI2A), Université du Québec à Trois-Rivières, QC, Canada



a r t i c l e  i n f o 

Article history:
Received 18 February 2022
Revised 30 April 2022
Accepted 14 May 2022
Available online 27 May 2022

Keywords:
WSN
Markov clustering (MCL) Sensor abundance Sensor distribution Routing protocol
Energy consumption Network lifetime
a b s t r a c t 

Interest has increased in wireless sensor networks (WSNs) in fields such as healthcare, industrial control and environmental monitoring. More recently, WSNs have been widely deployed in Internet of Things (IoT) based applications. They are considered as an essential part of IoT networks. The expanded use of WSNs raises daunting technical challenges, not the least of which is sensor battery energy conservation. The design of efficient sensor clustering strategies to reduce energy consumption by data transmission throughout the WSN has become crucial. Several applications of WSNs induce a random deployment of sensors such as the monitoring of conflict zones, the study of natural phenomena in hostile zones or rescue operations. In this context, energy conservation should be ensured according to the non- uniformity of the resulting sensor distribution in different areas of the network. In this study, a novel weighted Markov clustering protocol that considers sensor abundance for cluster-head and queried sen- sor selections is presented. The new protocol aims to decrease intra-cluster energy consumption by reducing the sending of redundant data in sensor-dense regions. In addition, it attempts to prolong sensor-sparse regions lifetime by limiting the number of queried sensors. This protocol combines a Markov clustering of sensors with a sensor weighting based on residual energy and sensor abundance in the network. The proposed protocol is a significant improvement of an existing unweighted Markov clustering protocol. The unweighted Markov clustering protocol is based on sensor residual energy and sensor location without taking into account the sensor abundance in different areas of the network. Simulations affirm that the new protocol handles more appropriately the non-uniformity of sensor dis- tribution and enhance the durability of wireless sensor networks. Indeed, simulation results show that the proposed clustering protocol outperforms its unweighted ancestor and other well-known clustering protocols in terms of energy conservation and network lifetime. The number of expired sensors and the average dissipated energy are reduced, whereas, the average sensor lifetime is prolonged compared to the unweighted ancestor, or HEED, LEACH, PEGASIS, and TEEN.
© 2022 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial Intel-
ligence, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creative-
commons.org/licenses/by-nc-nd/4.0/).





Introduction

A wireless sensor network (WSN) is an information retrieval system consisting of many sensors distributed over an area of interest [1–10]. The role of each sensor is to collect and transmit data to a base station, which then relays the data to some location for processing. Sensors have a limited energy supply and are often distributed randomly throughout the area covered by the network. This non-uniformity of distribution density produces differences in

* Corresponding author.
E-mail addresses: leila.abbad@enst.dz, leila.abbad@enst.dz (L. Abbad).
the amount of data transmitted from each sector. High-density sec- tors collect highly correlated data whereas low-density sectors have coverage problems due to premature expiry of isolated sen- sors. Wireless sensor networks have been studied in very different fields such as military [8], environmental monitoring [9], industrial process control [10], domestic monitoring [11–15] and recently the Internet of Things [16–18]. A concern in all WSNs is sensor battery lifetime, which depends on energy consumption by data transmis- sion within the network [19]. The design of low-energy- consumption routing protocols is therefore a major area of R&D. The greatest gains in network longevity so far have been achieved by developing hierarchical (clustering) routing protocols [20–25],


https://doi.org/10.1016/j.eij.2022.05.001
1110-8665/© 2022 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial Intelligence, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



Nomenclature

Notation
G	Graph
M	Stochastic matrix
Diagonal matrix of the matrix M
TG	Markov matrix
Infr	Inflation operator
e	Expansion power (coefficient)
r	Inflation power (coefficient)
Eelec		Energy consumed to run transmitter or receiver cir- cuitry
Efs		Amplifier energy needed to transmit signals in a free space model
Eamp		Amplifier energy needed to transmit signals in a multi- path model
d0	Threshold distance of the energy model
ETX (k; d) Energy consumed to transmit a k-bits packet over a distance d
ERX	Energy consumed to receive a k-bits packet
EDA	Energy consumed for one-bit data aggregation
dismin		Minimal Euclidean distance between sensors in the network
dismax		Maximal Euclidean distance between sensors in the network
dismean	Average distance of the network disthreshold		Threshold distance of the network n	Number of sensors in the network
Si	Sensor number i
disij	Distance between sensor Si and sensor Sj
(xsi ; ysi )	Location coordinates of the sensor Si
Meuclid(i; j) Euclidean distance between sensor Si and sensor Sj K	Threshold distance parameter
m	Number of clusters in the network
Ci	Cluster number i
|Ci |	Number of sensors in the cluster Ci
CHi	Cluster-head of the cluster Ci
QSi	Queried sensors of the cluster Ci

Nsi		Number of alive neighbors of a sensor Si in a specified range
dsi	Density of a sensor Si dthreshold	Network density threshold
Eexp(i)	Minimal residual energy to announce the expiry of sen-
sors in a cluster Ci
Esi	Residual energy of a sensor Si
wsi	Weight of a sensor Si
x%	Threshold defining tiny clusters
lp%		Percentage of selectable queried sensor candidates in low-density regions
hp%		Percentage of selectable queried sensor candidates in high-density regions

Abbreviations
WSN	Wireless sensor network MCL	Markov Cluster Algorithm
MCL-BCRP MCL-Based Clustering Routing Protocol
WMCL-BCRP Weighted MCL-Based Clustering Routing Protocol LEACH	Low-energy adaptive clustering hierarchy
LEACH-C Centralized LEACH VLEACH Vice cluster-head LEACH MH-LEACH Multi-hop LEACH
TL-LEACH Two-level LEACH
ESO-LEACH Enhanced swarm optimization LEACH lGA-LEACH micro genetic algorithm LEACH LEACH-VD LEACH vector quantization
F-LEACH Fuzzy LEACH
TEEN	Threshold sensitive energy efficient sensor network APTEEN Adaptive threshold-sensitive energy-efficient sensor
network
PEGASIS Power-efficient gathering in sensor information sys- tems
HEED	Hybrid energy-efficient distributed TDMA	Time division multiple access





which allow sensors to communicate directly with nearby cluster- heads rather than forward all data to a more remote base station. Clustering routing protocols must seek a compromise between extending network lifetime and assuring effective coverage of the area of interest [26]. Many studies have focused on improving net- work coverage efficiency, scalability, and data routing with mini- mal energy consumption [2]. The most common clustering routing protocols for wireless sensor networks are LEACH [24] and its descendants TEEN [27], APTEEN [28], PEGASIS [29] and HEED [30]. These routing protocols differ in the means used to form clusters, select cluster-heads, and route sensor data to the base station. Recently, a Markov clustering routing protocol has been proposed (MCL-BCRP) [31], in which the Markov clustering algorithm (MCL) [32] is used to form clusters and select cluster- heads based on sensor location and residual energy. In simulations, this protocol outperforms HEED, LEACH, PEGASIS and TEEN in
terms of network lifetime and network coverage.
This manuscript presents an improved version of the Markov clustering protocol. The proposed version is called the Weighted Markov clustering protocol (WMCL-BCRP) where the cluster-head selection is based on weighting sensors. The weighting is applied according to the abundance and residual energy of the sensors. This extended version handles sensor distribution randomness and non-uniformity more suitably in order to improve the resili-
ence of monitoring networks in settings subject to chaotic sensor distributions, for example, battlefields or conflict zones, volcanic activity or other inhospitable areas, rescue operations among others. In all these cases, a drone or a helicopter can launch sensors randomly, and energy consumption can be managed according to the resulting sensor abundance in the different sectors of the net- work. In addition, the sending of redundant data in sensor-dense regions can be reduced and sensor-sparse regions can be main- tained for longer by reducing the network average energy con- sumption. The number of expired sensors remains manageable, and the network lifetime is prolonged compared to the unweighted protocol (MCL-BCRP), or HEED, LEACH, PEGASIS, and TEEN. The
new protocol proposes a restriction on queried sensor assignment to cluster-heads based on distinguishing high sensor density and low sensor density sectors. It also adapts the unweighted Markov protocol (MCL-BCRP) [31], which simulates stochastic flows in graphs by transforming WSNs into stochastic matrices as inputs to provide fast and configurable clustering.


Related studies

Hierarchical routing has proven its effectiveness in terms of the scalability and efficiency and especially the optimization of energy



consumption by sensor network communications [20–25]. Hierar- chical routing is also known as clustering routing since clustering is the main operation underlying the expected increase in energy efficiency. In clustering routing, sensors join clusters according to certain criteria, and some sensors are elected as cluster-heads. Cluster-heads process and transmit sensor readings directly to the base station when it is nearby, otherwise to other cluster- heads, which transmit the data until it reaches the base station [21,23].
Clustering involves two processes: cluster formation and cluster-head selection. The former groups sensors, whereas the lat- ter designates a sensor as group-head according to precisely mea- surable criteria such as location, density, connectivity, battery energy level, and so on. The head aggregates the data transmitted by sensors in its cluster and transmits the aggregated data to the base station according to a routing scheme also based on measur- able criteria. Clustering can be static or dynamic, undergoing updates to balance sensor energy dissipation and thereby increase network longevity. The algorithm used for head selection can be centralized and run at the base station level, distributed at the sen- sor level, or hybrid. It can also be deterministic, random, or adap- tive. Deterministic schemes fix head selection, whereas adaptive schemes select heads on an evolving rational basis [22,23]. Cluster- ing routing protocols designed for WSNs are the fruit of much research on energy efficiency management [33–38]. We summa- rize below the most studied of these, based on two decades of tech- nical and scientific literature.
Low-energy adaptive clustering hierarchy or LEACH [24] is the most popular clustering protocol devised for WSN applications. It was the first to use hierarchical structuring to organize network sensors into clusters. Head sensors selected randomly are respon- sible for collecting and aggregating data from the other (nearby) sensors in the cluster. Each head transmits data to the base station and its TDMA schedule to its sensors to organize intra-cluster com- munication. LEACH has drawbacks, for example, head selection is random, without consideration of sensor residual energy or other adaptive criteria. It is presumed that all heads can reach the base station. When a head becomes non-operational, the network becomes non-functional until a new head is elected. Variants have been proposed to overcome these deficiencies: LEACH-C, a central- ized version in which the base station selects a group of cluster- heads from candidates with the highest residual energy using the simulated annealing algorithm [39], VLEACH, which elects heads the same way LEACH does but at the same time designates a vice-head to take over when the principal head power supply is exhausted [40], MH-LEACH and TL-LEACH, which allow multi- hop transmissions between cluster-heads and the base station [41,42]. More recent enhancements include ESO-LEACH, which proposes a meta-heuristic particle swarm for cluster formation using the concept of advanced nodes and a more sophisticated set of rules for head selection [43], lGA-LEACH, which uses a micro genetic algorithm to compute an optimal set of cluster-heads [44], LEACH-VD, which explores the shortest paths between all cluster- heads using vector quantization and the DIJKSTRA algorithm [45], and F-LEACH, which introduces a fuzzy-based data aggregation algorithm to prolong network lifetime [46].
PEGASIS provides some improvements over LEACH with the creation of a hierarchical structure. This structure relies on chains instead of clusters [29]. With a nearest neighbor search algorithm, the base station forms chains then notifies each sensor with some information related to its position and direct neighbors in the net-
work. One of the benefits of this protocol is that the chain recon-
Because there is a single leader chain, PEGASIS is subject to the problem of bottlenecks.
Threshold-sensitive energy-efficient network (TEEN) protocol is suitable for critical real-time reactive monitoring applications where sensors detect events continuously but transmit no data for long periods [27]. Hierarchical structures are formed where in the sensors in closest proximity are grouped into clusters. Cluster- ing progresses to other levels until it reaches the base station. Cluster-heads do not send a TDMA scheduler to their members but instead a control message containing an attribute, hard and soft thresholds. The attribute represents the type of data being monitored (e.g., temperature), the hard threshold is the critical value beyond which readings must be reported to the cluster- head, and the soft threshold is the smallest change that must be reported. Once a value exceeding the hard threshold is reported, no additional reading is reported unless the difference exceeds the soft threshold. This reduces redundancies and transmissions.
The hybrid energy-efficient distributed or HEED protocol [30] is another extension of LEACH, based on two new metrics for cluster- head selection: sensor residual energy and the cost (energy) of inter-cluster communications. During the initialization phase, the probability of selecting a sensor as a head is computed from the residual energy and the optimal number of clusters. Simulations show that this protocol increases network longevity compared to LEACH because cluster-heads are not selected randomly.
Markov-clustering-algorithm-based routing (MCL-BCRP) [31] is a new protocol based on two novel features, the first comprising segmenting the network into clusters to ensure adequate coverage
[32] and the second selecting cluster-heads based on sensor resid- ual energy and location relative to the base station and the cluster centroids. This protocol offers significant improvement in network longevity and coverage compared to LEACH, PEGASIS, TEEN and HEED.
In the present article, we present an improvement of Markov- clustering-based routing, called weighted Markov-clustering- based routing (WMCL-BCRP), based on selection of cluster-heads and sensors in a way that extends the lifetime of networks charac- terized by non-uniform distribution of sensors. Its adaptive cluster-head selection is based mainly on two parameters: sensor residual energy and distribution density. This weighting at each round makes all sensors in the network potential candidates for selection as cluster-heads. Based on abundance, the lowest- weighted sensors are selected as queried sensors. By distinguishing low and high abundance (density) regions within the network, sparse regions are kept alive for as long as possible and intra- cluster energy consumption is reduced by bypassing redundant data transmissions in dense regions.
Table 1 presents a conceptual comparison between the studied protocols according to main features of hierarchical routing proto- cols for wireless sensor networks:

Energy consumption model

The basic energy consumption model applied to data transmis- sions in wireless sensor networks has been defined elsewhere [24]. The same model is used in the present study. The sensor radio con- sumes Eelec to run its transmitter or receiver circuitry. The energy required to amplify transmitted signals in the free space model and in the multipath model is denoted respectively Efs and Eamp. Thus, to transmit a k-bit message over a distance d, the communi- cation unit expends:

structs  itself  when  a  node  vanishes.  Collected  data  are
(k; d)= 
ETX —elec (k)+ ETX —fs(k; d);	d < d0
(1)

TX
transmitted and aggregated successively in the chain until the lea-
der chain is reached, which transmits the data to the base station.
ETX —elec
(k) + ET
X —amp
(k; d);	d ≥ d0

( Eelec * k + Efs * k * d2,	d < d0

other words, inflation increases flow within clusters and decreases

=
Eelec
k + Eamp
k * d4, d ≥ d0
it between them. The inflation operator also allows control of the granularity of the clusters generated by the Markov algorithm [32].

where d0 =	Efs/Eamp is a threshold distance.
To receive a k-bit message, the communication unit expends:
Given a stochastic matrix M ∈ Rk×l of dimension k × l, and a pos-
itive real number e, the application of the expansion operator Exp


ERX
(k) = E
RX —elec
(k)
of coefficient (or power) e to the matrix M is a stochastic matrix
Expe(M) ∈ Rk×l defined formally as follows:

= Eelec * k = Eelec * k	(2)
In this model, the energy spent on data processing is negligible
compared to the expenditure on data transmission. However, data aggregation by each cluster-head is an energy-consuming opera- tion, and for a k-bit message, it is computed as follows:
EDA(k) = EDA * k	(3)
Expe (M)= Me	(4)
stochastic matrix M yields a stochastic matrix Inf r (M) ∈ Rk×l by Applying the inflation operator Inf with coefficient r to the rescaling each column of M by the coefficient (or power) r. The
matrix operator Infr is thus defined formally as follows:
(M)r

Inf (M) =	pq
(5)

where E	is the energy consumed per bit for data aggregation in
r	pq	r 

DA
each cluster-head.

The proposed approach

The Markov clustering algorithm
The main concepts used in the Markov graph-based clustering algorithm (MCL) are described below. Graph approaches to cluster-
i=1 (M)iq
The matrix M associated with a graph G is defined as Mij = 1 if there is a link relating i and j, otherwise as Mij = 0. The Markov matrix TG for graph G is therefore deduced from its associated
matrix M and is defined as follows:
TG = MD—1	(6)
Such as D is a diagonal matrix of the matrix M. Formally,

ing involve arranging the nodes of a graph into clusters by drawing
Dii = Pn
(Mki) and Dij = 0, with i – j. The basic pseudo-code of

links between them. Developed by Stijn Van Dongen [32], Markov	the Markov clustering process is presented in the following [31]:
clustering (MCL) has been applied in several fields, especially		

bioinformatics, where it is used to shed light on the biological func- tion of genes and estimate the significance of gene expression. This algorithm does not require that the number of clusters be known
Algorithm 1: MCL(TG, e(i), r(i))


1:  T1 = TG
2:  for kin 1.. .∞ do

in advance with comparison to other graph-based clustering algo-
rithms and unlike k-means clustering [47]. The main idea of Mar-
3:	T2k = Expek
(T2k—1)

kov clustering is that if a walk starts randomly from one node to another, there is a greater chance of walking within the same clus- ter than moving to another cluster, since clusters are, by definition, separated by spaces of node sparseness. Clusters therefore can be discovered by exploring changes in the node density of the flow space. Random walks are determined by transforming the flow through the graph to a Markov chain. From a transition matrix as input to the algorithm, stochastic matrices are generated by alter- nating two complementary mathematical operators, namely expansion and inflation, until a convergence matrix is obtained [32].
The expansion operator expands the flow by computing the powers of the stochastic matrices and enumerating random walks of length greater than 1, which are more frequent within than between clusters. In other words, the probabilities assigned to pairs of vertices belonging to a cluster are relatively large because there are many ways to move among these vertices.
The role of the inflation operator is to increase the walk proba- bilities within clusters and to decrease them between clusters. In
4:	T2k+1 = Inf rk (T2k)
5:	if T2k+1 is doubly idempotent then 6:		break
7:	end if
8:  end for
9:  Interpret T2k+1 as a clustering of the graph G
As mentioned above, the MCL algorithm alternates two matrix operators, namely inflation and expansion, until a steady state is reached whereby a stochastic doubly idempotent matrix is obtained with respect to these two complementary operators. The MCL algo- rithm has not been proven to converge in theory. However, it has been shown that if convergence were to occur, this would be quad- ratic in a neighborhood of doubly idempotent matrices. In practice, the algorithm usually converges within the first 20 iterations. To extract clusters from the convergence matrix, the set of vertices is divided into attractor and simple vertices. Attractors are defined as vertices th-at attract simple vertices to form clusters. They have



Table 1
Conceptual comparison between LEACH, PEGASIS, HEED, TEEN, MCL-BCRP and WMCL-BCRP protocols.




positive flux values in their corresponding rows within the doubly idempotent matrix, and each simple attracted vertex has a positive value in its corresponding attractor row [32].


Weighted Markov-clustering routing working process

The aim of the weighted Markov clustering protocol (WMCL- BCRP)is mainly to improve energy management in wireless sensor networks and thereby extend their lifetime, which represents a significant enhancement of the unweighted protocol (MCL-BCRP) [31]. A hybrid strategy is proposed for the cluster formation and cluster-head selection processes. Centralized cluster formation by the MCL algorithm comprises gathering neighboring sensors into clusters based on a threshold distance. Cluster-head selection is an adaptive and a distributed process based on two criteria: sensor residual energy and abundance. These two parameters define a new notion, namely the sensor weighting factor. At each round, candidates with the highest weights are selected as cluster- heads. This selection requires little overhead and thus reduces energy consumption within clusters. Selection of cluster-heads in dense regions (high-density candidates) saves sensor residual energy since the distances between sensors and their cluster- heads are generally short. Unlike most protocols, the weighted Markov clustering protocol allows only a fraction of the sensor members of each cluster, called queried sensors, to send data to the head, as illustrated in Fig. 1. The queried sensors are chosen based on their weights and sensor abundance. This restriction on data transmission to cluster-heads reduces intra-cluster energy consumption at each round. Furthermore, sensors in dense regions would probably send redundant data to their cluster-heads, due to their proximity. Cluster-heads are thus relieved from unnecessary aggregations on strongly correlated data. On the other hand, sen- sors in low-density regions must send readings frequently to pro- vide adequate coverage since they may detect events that are not
A centralized configuration phase run by the base station and triggered each time an attractor dies, requiring reconfiguration of the network.
A distributed communication phase representing all data trans- missions in the network, from queried sensors to their cluster- heads and from cluster-heads to the base station.

Configuration phase
Configuration is the preliminary phase that is run by the base station to organize the hierarchy within the wireless sensor net- work. This must be completed before communications between sensors and the base station can begin. Configuration consists of three sub-phases: network matrix representation, Markov cluster- ing, and configuration broadcast.

Network matrix representation sub-phase. The network matrix is the main input to the MCL algorithm. Using GPS modules, sensors transmit their locations to the base station, and identifiers are assigned to them. The GPS module is disabled once the sensor location has been transmitted. The Euclidean distances between all network sensors are then computed. Mean distance is then calcu- lated as follows:
dismean = (dismin + dismax)/2	(7)
such that dismin and dismax represent respectively the minimal
and the maximal Euclidean distances between the sensor nodes. The threshold distance is a function of sensor dispersion over the sensing- area, and K is a positive integer than can be chosen empir- ically, such that.
disthreshold = dismean /K	(8)
stituted of n sensors is square, of dimension n × n, defined as Finally, matrix M associated tothe wireless sensor network con- follows:
M   1, disij ≤ disthreshold	9

sensed in dense regions. The weighted algorithm is thus intended to keep sensors in sparse regions alive for as long as possible by
ij =
0, disij
( )
> disthreshold

selecting just a fraction of them for transmitting data to cluster- heads.
As shown in Fig. 2, the weighted protocol is designed to func- tion in two main phases:
where i,j = 1.. .n.
The choice of the threshold distance is crucial to guarantee low energy dissipation during intra-cluster communications. Indeed, this distance determines whether two sensors are in the same




Fig. 1. Weighted markov clustering protocol architecture.




Fig. 2. Flowchart of the weighted Markov clustering functional protocol.


neighborhood or not and can communicate at low energy expendi- ture. The underlying algorithm of the network matrix representa- tion on a wireless sensor network WSN is the following:
Such clusters occur only in symmetrical networks, which rarely exist in practice. In any case, the base station can overcome this problem by attributing overlapping sensors to clusters with the

		nearest attractor. Once the clusters are formed, the base station

Algorithm 2: Network Matrix Representation(WSN)
1:  for i in 1.. .n do
2:	Receive the location coordinates (xsi , ysi ) of the sensor Si
3:  end for
4:  for i in 1.. .n do 5:	for j in 1.. .n do
checks whether they are of a reasonable size relative to the net- work. Since simulations have shown that very small clusters tend to die prematurely, the base station rejects all clusters smaller than a specified percentage of network size and assigns their sensors to neighboring clusters with the nearest attractor. The pseudo-code of the Markov clustering sub-phase is presented in the following:

6:	M
(i, j) = rﬃ ﬃﬃxﬃﬃﬃﬃﬃﬃﬃ—ﬃﬃﬃﬃﬃxﬃﬃﬃﬃﬃ ﬃﬃﬃ2ﬃﬃﬃ+ﬃﬃﬃﬃﬃ ﬃﬃﬃyﬃﬃﬃﬃﬃﬃ—ﬃﬃﬃﬃﬃyﬃﬃﬃﬃﬃﬃ ﬃﬃﬃ2ﬃﬃ


  Algorithm 3: Markov Clustering(M)	

euclid
7:	end for
8:  end for
si	sj
si	sj
1:  for i in 1.. .n do 2:	for j in 1.. .n do

9:  dis	= min(M	(i, j))
D i j
  Pn 1(Mki),	if i–j

10:  dismax = max(Meuclid(i, j))1≤i,j≤n
11:  dismean = (dismin+dismax)
12:  disthreshold = dismean

4:	end for
5:  end for
6:  TG = MD—1
0,	if i = j

13: for i in 1.. .n do 14:	for j in 1.. .n do
1, if disij ≤ disthreshold
0, if disij > disthreshold
16:	end for
17:  end for





Markov clustering sub-phase. The Markov clustering sub- phase consists of applying the MCL algorithm to structure the net- work as clusters, by computing the Markov matrix induced from the matrix M. The MCL algorithm produces different clusters depending on sensor distribution over the sensing area. Simula- tions show that this algorithm rarely gives overlapping clusters.
7: MCL(TG, e(i), r(i))
8: Extract the set (Ci)1≤i≤m of clusters from the convergence matrix
9:  Resolve overlappings in (Ci)1≤i≤m
10: Reject clusters in (Ci)1≤i≤m smaller than x% of the network size
11: Assign sensors of rejected clusters to neighboring clusters with the nearest attractor





Configuration broadcast sub-phase. For each cluster, the base station computes a minimal energy below which a sensor must announce its expiry to rest of the cluster (equation (1)). In the con- figuration broadcast sub-phase, the cluster-head and queried sen-



sor designations are based on sensor abundance. For this purpose, the base station calculates a threshold value that distinguishes sensor-sparse and sensor-dense regions. It then attributes to each sensor an initial density as follows:
dsi = 1 + (Nsi /n)	(10)
where Nsi is the number of alive neighbors of sensor Si within a
threshold calculated during configuration. Sensors in each cluster thus update the residual energies and hence their cluster table by deleting members declared expired.
- Computing weights: Each sensor computes its current weight to submit its candidacy as a cluster-head or a queried sensor for the current round. Its current density is computed using equation (11), and the weight then calculated from the density and residual

specified range, and i = 1.. .n. It is presumed that all network sen- sors are initially live. This definition implies that the density asso-
energy as follows:
ws = Es * ds
(12)

ciated with each sensor decreases as its neighbors die off, down to 1, when no live sensors remain within the specified range. The net- work density threshold is deduced as follows:
i	i	i

where Esi is the residual energy of the sensor Si, and i = 1.. .n. The highest weights correspond to the sensors with the highest residual
energies in high-density regions, and the lowest weights to the sen-

Pn  ds


This threshold is updated each time the network is reconfig- ured. Finally, the base station broadcasts to all sensors a configura- tion message containing the parameters previously determined such as the sensor identifiers and locations, the set of clusters as well as their estimated threshold energies for expiry announce- ments, and the network density threshold. The following algorithm summarizes the successive steps of the configuration broadcast sub-phase:
Algorithm 4: Configuration broadcast((Ci)1≤i≤m ) 1:f or i in 1.. .m do
2:   compute Eexp (i) the minimal energy
to announce the expiry of sensors in Ci
3:  end for
4:  for i in 1.. .n do
5:  ds = 1 + (Ns /n)
Cluster-head selection: The highest weighted sensor in a cluster is selected as the head. This simple selection process does not require any overhead.
Queried sensors selection: The main purpose of queried sensor selection is to reduce power consumption inside clusters. It also reduces sending of strongly correlated data to cluster-heads in high-density regions and thereby extends the coverage of low-density regions. This selection is based on sensor regional
density. In low-density regions (dsi ≤ dthreshold) only sensors
among lp% of the weakest in the cluster can send data, while
only hp% of the weakest in high-density regions (dsi > dthreshold) can send data to cluster-heads. The low-density and high- density queried candidate percentages lp% and hp% are crucial for the coverage and the energy management of the network.
It can be observed easily that a high hp% reduces the average sensor lifetime in high-density regions, while a small lp% limits

i
6:  end for
i

Pn  ds
the coverage of low-density regions.
- TDMA scheduling: Each time a cluster table is updated after sensor expirations, the cluster-head broadcasts a new TDMA

7:  dthreshold =   i=1 i 
8: configuration_message = [dthreshold]
9:  for i in 1.. .n do
[(Si,(xsi        ,        ysi        ))] 10: configuration_message = configuration_message +
11:  end for
12:  for i in 1... m do
[(Ci                         ,Eexp(i))]  13: configuration_message = configuration_message +
14:  end for
15: Broadcast configuration_message to all sensors of the network





Communication phase
In hierarchical structure WSNs, two modes of communication can be distinguished: inter-cluster and intra-cluster. In intra- cluster mode, communication between the different sensors and their cluster-heads is enabled by the TDMA access method. Each sensor is assigned a time slot to transmit readings to the cluster- head. In intra-cluster mode, the CDMA access method is used instead to allow different cluster-heads to transmit aggregated data to the base station. The communication phase is carried out as repetitive cycles of fixed duration called rounds. Each round comprises a setup sub-phase and a steady-state sub-phase.
Setup sub-phase. During setup, five main tasks are accom- plished before proceeding to communication:
schedule to its members before starting the next sub-phase. Each member then communicates with its cluster-head during its allocated time slot.

The previous distributed actions, which are executed by all sen- sors of the network during the setup sub-phase, are formulated in Algorithm 5:
Algorithm 5: Setup((Ci)1≤i≤m ) 1: for i in 1.. .m do
2:   for j in 1.. .|Ci| do
3:	if (Esj ≤ Eexp(i)) then
4:	broadcast expiry_message to all sensors in Ci
5:	else broadcast Esj to all sensors in Ci
6:	end if
7:  end for
8:  end for
9:  for i in 1.. .m do
10:	for j in 1.. .|Ci| do
11:	Delete expired sensors from the local cluster table of the sensor SJ
12:	Update residual energies of alive sensors in the local table of the sensor SJ
13:	end for
14:	for i in 1.. .m do 15: for j in 1.. .|Ci| do
16:	dsj = 1 +  

- Residual energy broadcast: Each sensor announces its residual energy by broadcasting it according to the previous TDMA schedul- ing or announces its expiry when its residual energy reaches the
17:  wsj = Esj * dsj


(continued on next page)



a (continued)
Algorithm 5: Setup((Ci)1≤i≤m ) 18: end for
19:  end for
20:  for i in 1.. .m do 21:	for j in 1.. .|Ci| do
22:		if (wSj = max(wSk )1≤k≤|Ci |) then 23:	CHi = Sj
24:	end if
25:  end for
26:  end for
28:	QSi  = [] 27: for i in 1.. .m do
29:	for j in 1.. .|Ci| do
29:	for j in 1.. .|Ci| do
30:	if (dSj ≤ dthreshold) then
31:	if (Sj belongs to lp% weakest sensors in Ci) then
32:	QSi = QSi + Sj
33:	end if
34:	else
36:		QSi     =    QSi     +   [Sj] 35:	if (Sj belongs to hp% weakest sensors in Ci) then
37:	end if
38:	end if
39:  end for
40:  end for
41:  for i in 1.. .m do
42:	CHi broadcast a TDMA schedule to all sensors belonging to Ci
43:  end for




Steady-state sub-phase. The following considerations are applicable during the steady-state sub-phase:

Only selected sensors can send their readings to their cluster- head. The transmission is performed during the time slots allo- cated to them in the previous sub-phase. The remaining sensors are switched to idle status to conserve their battery power.
The cluster-heads aggregate the selected sensor readings and then transmit them to the base station in CDMA mode. Any sen- sor expiry detected during the round is also reported.
The base station processes the data received from all network cluster-heads to make decisions and transmit information to the end users. The base station thus monitors the network, clus- ter attractor expirations particularly, and updates the threshold energies and network density, computes the new clusters, and then broadcasts the new configuration to the whole network. Algorithm 6 describes the distributed interactions performed by all sensors in the network and the base station:


Algorithm 6: Steady-state((Ci)1≤i≤m ) Sensors:
1:  for i in 1.. .m do
2:	for j in 1.. .|Ci| do
3:	if (Sj belongs to QSi) then
4:		Sj sends data to CHi in TDMA mode 5:	else
6:   if (Sj = CHi) then
a (continued)
Algorithm 6: Steady-state((Ci)1≤i≤m )
7:	Sj transmits aggregated data to the base station in
CDMA mode
8:	Sj reports sensor expiry occurred in Ci
9:	else
10:		Sj switches to idle status 11:	end if
12:	end if
13:  end for
14: end for Base station:
1:  Receives data from (CHi)1≤i≤m
2:  if (attractor expiry is detected) then
3:	Reconfigure the network 4: end if





Results and discussion

The performance of the proposed weighted Markov-clustering- based routing protocol (WMCL-BCRP) is compared below to its unweighted ancestor (MCL-BCRP)[31] as well as to the TEEN [27], PEGASIS [29],LEACH [24] and HEED [30] protocols. The authors chose these protocols for simulations because, in addition to the availability of their codes in Matlab programming language, they are the most used as performance benchmarks in the literature. The simulations were carried out on a battery of tests containing 100 random wireless sensor networks. After presenting the simu- lation parameters and their selected performance comparison cri- teria, we discuss performance in terms of the round during which the first and last sensor expirations occurred, the number of expired sensors per round, average sensor lifetime, and the average energy dissipation by the network per round.

Simulation settings

The code of the proposed weighted Markov-clustering-based routing protocol (WMCL-BCRP) and its unweighted ancestor (MCL-BCRP) as well as the simulation scripts to compare the per- formances with LEACH, PEGASIS, TEEN and HEED protocols were programmed with the Matlab programming language. The simula- tions do not require any particular specification at the physical and data link levels. The simulations were run with wireless networks of 100 sensors each with a GPS module and the same initial battery energy.
The main limitation of the proposed protocol as well as its unweightedancestor [31] is the use of sensors equipped with GPS modules constituting an additional load for sensors batteries. This constraint is unavoidable in order to configure the network using the MCL algorithm. GPS modules are known to be energy con- sumers [26], however, this is not a problem for the energy manage- ment of sensors, as GPS modules are only used once during the network configuration phase for a very short time and disabled once the sensor location has been transmitted.
The sensors were distributed randomly in a 10,000 m2 square area, which produced a network with sparsely and densely covered regions. Fig. 3 presents an example of a network with a random distribution of sensors. The base station was placed at the center of the area. The same reading frequency is considered for all sen- sors. The transmission of readings to the base station is considered continual. Moreover, the sensors in a cluster are supposed to be able to communicate directly with the head. The head can also


	



Fig. 3. An example of a 100 sensors network randomly distributed over a 100 × 100 sensing area.
Fig. 4. First sensor expiry, average sensor lifetime and last sensor expiry in WSNs managed by the proposed weighted Markov-clustering-based (MCL-PCRP), unweighted ancestor (MCL-BCRP), TEEN, PEGASIS, LEACH and HEED routing protocols, based on simulation.




Table 2
WSN simulation settings and parameters.


Parameter	Value
Sensing area	100 × 100 m2
Base station × coordinate	50 m
Base station y coordinate	50 m



Table 3
Comparison of First sensor expiry, average sensor lifetime and last sensor expiry in WSNs managed by WMCL-PCRP, MCL-BCRP, TEEN, PEGASIS, LEACH and HEED routing protocols based on simulation.




Number of sensors	100
Size of data packet	4000 bits
Protocol	First sensor expiry
Average sensor lifetime
Last sensor expiry

Initial energy E0	0.5 J
Threshold distance parameter K	4
Expansion power coefficient e	2
Inflation power coefficient r	2
Density range	5 m
Queried candidate percentage in low-density regions (lp%)  25 % Queried candidate percentage in high-density regions (hp   50 %
%)

WMCL-BCRP	at round 328	2886.4100	at round 8976
MCL-BCRP	at round 628	1622.9400	at round 3238
TEEN	at round 852	1019.7700	at round 1542
PEGASIS	at round 596	601.4100	at round 1014
LEACH	at round 401	612.3100	at round 772
HEED	at round 255	258.0300	at round 265



Threshold defining tiny clusters (x%)	5 %
Electrical energy per bit (Eelec)	50 nJ/m2
Data aggregation energy (EDA)	5nJ
Amplifier energy consumption (Eamp)	0.0013 pJ/bit/ m2
Amplifier energy consumption (Efs)	10 pJ/bit/m4



communicate directly with the base station. The simulation set- tings are summarized in Table 2.


First and last sensor expirations and average sensor lifetime

The comparison of the proposed protocol, with its unweighted ancestor and the other protocols, in a random non-uniform sensor distribution setting is shown in Fig. 4 and detailed in Table 3.
The simulations show clearly that the weighted Markov- clustering-based routing (WMCL-BCRP) gives the longest average sensor lifetime and the latest last sensor expiry but not the latest first sensor expiry. From Table 3,it can be observed that the pro- posed protocolextends the average sensor lifetime by about
156 % and 249 % respectively compared to the unweighted Markov-clustering-based (MCL-BCRP) and TEEN routing protocols and extends this average more than four times compared to PEGA-



Fig. 5. Average Dissipated Energy with WMCL-BCRP, MCL-BCRP, TEEN, PEGASIS, LEACH and HEED protocols.


Table 4
Average energy (J) dissipation by different WSN clustering routing protocols.









Fig. 6. WSN lifetime under the weighted Markov-clustering-based (WMCL- BCRP), unweighted Markov-clustering-based (MCL- BCRP), TEEN, PEGASIS, LEACH and HEED routing protocols.



SIS or LEACH, and ten times compared to HEED. Moreover, the weighted Markov-clustering-based routing (WMCL-BCRP) triples the network lifetime (i.e., last sensor expiration) compared to its unweighted ancestor (MCL-BCRP) sixfold, ninefold, 11-fold, and 33-fold compared respectively to the TEEN, PEGASIS, LEACH and HEED protocols. However, the latest first sensor expiry delay was obtained with TEEN, followed by the unweightedancestor (MCL- BCRP), thenPEGASIS, LEACH, and finally the weighted Markov- clustering-based routing (WMCL-BCRP). Only HEED had a preco- cious first sensor expiry than the weighted Markov-clustering- based routing (WMCL-BCRP).
The best performances recorded during the simulations in terms of average sensor lifetime and last sensor expiry are clearly in favor of the proposed protocol compared to its unweighted ancestor and the other protocols. This is mainly due to the efficient management of energy inside clusters by using a cluster-head selection without additional overheads and by limiting the number of queried sensors in each cluster. However, the poor performance of the proposed protocol in terms of first sensor expiry is due to the selection of queried sensors with the lowest weight factor, that is, with weak batteries in high-density and low-density regions. Despite this disadvantage, the restriction on queried sensors con- tributes significantly to the conservation of residual energy within clusters.

Average dissipated energy

Based on simulations, the weighted Markov-clustering-based protocol (WMCL-BCRP)can be expected to provide more efficient management of energy consumption by WSNs compared to the unweighted Markov-clustering-based (MCL-BCRP), TEEN, PEGASIS, LEACH and HEED protocols. It appears to keep energy dissipation very gradual and the average dissipation minimal (refer to Fig. 5 and Table 4). The colored lines in Table 4 correspond to the con- sumption of 50 % and 100 % of the initial battery energy, for exam- ple, red corresponds to the WMCL-BCRP protocol, and blue is associated to the MCL-BCRP protocol. The same colors are used to distinguish the different curves of simulated protocols in Fig. 5. LEACH and PEGASIS have similar energy consumption curves. From Table 4, the round at which energy consumption reaches 50 % ranges from the round133 for HEED to the round 1574 for weighted Markov-clustering-based protocol (WMCL-
BCRP), with PEGASIS, LEACH, TEEN and MCL-BCRP respectively at rounds 299, 304, 499 and 525, at which points the WMCL-BCRP has consumed only 4.2 %, 9.4 %, 9.6 %, 15.6 % and 16.4 % of the ini- tial energy. Furthermore, when sensor energy is 100 % spent, at round 265 with HEED, 772 with LEACH, 1014 with PEGASIS, 1542 with TEEN, and 3238 with MCL-BCRP, WMCL-BCRP-routed networks are still alive, having consumed respectively 8.4 %,
24.4 %, 32.6 %, 49 % and 85 % of the initial energy, and are not exhausted until round 8976, when all sensor batteries are exhausted.
The previous simulation results show that the performance of the proposed protocol in terms of energy management is signifi- cantly improved than other protocols. The main reasons that allow the gradual exhaustion of the energy and the minimal average dis- sipation with WMCL-BCRP, can be summarized as follows:

The cluster formation process is run by the base station only after expiry of an attractor, which conserves energy during this process.
The restriction of sensors that are allowed to send data to their cluster-heads reduces significantly the average dissipated energy within clusters at each round.
Cluster-head selection reduces overhead by queried only sensor weights at the beginning of each round.

Number of expired sensors

The cumulative number of expired sensors recorded during simulations are graphed in Fig. 6 and summarized in Table 5. From Fig. 6, it can be observed that the weighted Markov-clustering- based protocol clearly performed better than the others at extend- ing network lifetime in simulations longer than its nearest competitor.
Table 5 illustrates the rate of sensor expiration in networks managed by the proposed protocol, its unweighted ancestor, HEED, LEACH, PEGASIS and TEEN protocols. First, Last expirations and the rate of sensor expiration were recorded for each protocol as follows:

First expirations (7 % of sensors) were recorded at round 255 under the HEED protocol. The network died only 10 rounds later, due to sensor expiration accelerated by the resulting energy-consuming cluster formation process.
First sensor expirations (1 %) occurred at round 401 under the LEACH protocol. The network lifetime was 772 rounds, which was predictable in view of the resulting lower energy consump- tion compared to HEED.
PEGASIS kept the network alive longer than LEACH, but sensor expiry was massive (98 %) at round 593 and the network was thereafter non-functional with only two (02) sensors until its expiry at round 1014. The sudden massive expiry is due to the uniform energy dissipation by all sensors in the PEGASIS chain.
The TEEN protocol delayed the first sensor expirations until round 852, which was the longest among the protocols tested. However, the entire network was dead by round 1690.
The unweighted ancestor (MCL-BCRP) kept all sensors alive until round 628, after which expiry was rapid but slowed down, the loss being held at 0 several times for hundreds of rounds and the network staying technically alive until round 3238, due to its low energy dissipation.
The weighted Markov-clustering-based protocol (WMCL-BCRP) allowed its first sensor expiry at round 328, which was the sec- ond earliest. This is due likely to choosing the lowest-weighted sensors in the queried sensor selection process. However, sub-


Table 5
Accumulation of expired sensors in WSNs under the weighted Markov-clustering-based (WMCL-BCRP), unweighted Markov-clustering- based (MCL-BCRP), TEEN, PEGASIS, LEACH and HEED routing protocols.

(continued on next page)


Table 5 (continued)









Fig. 7. The state of a WMCL-BCRP-routed network when the same one is dead under the HEED protocol (at round = 265, with 0 expired sensors).
Fig. 8. The state of a WMCL-BCRP-routed network when the same one is dead under the LEACH protocol (at round = 772, with just 4 expired sensors).










Fig. 9. The state of a WMCL-BCRP-routed network when the same one is dead under the PEGASIS protocol (at round = 1014, with just 8 expired sensors).





Fig. 10. The state of a WMCL-BCRP-routed network when the same one is dead under the TEEN protocol (at round = 1542, with just 16 expired sensors).




sequent sensor expiry was the slowest among the tested proto- cols. The proposed protocol was better than its unweighted ancestor at keeping the remaining sensors alive, holding the loss to 95 for over 1100 rounds (5796–6911). The network stayed technically alive until round 8976, which is two and half times.

The results of the previous simulations are also in favor of the proposed protocol which can maintain a very moderate rate of expiration compared to the other protocols. Indeed, when the
Fig. 11. The state of a WMCL-BCRP-routed network when the same one is dead under the MCL-BCRP protocol (at round = 3238, with just 72 expired sensors).




entire network was dead under the HEED, LEACH, PEGASIS, TEEN protocols, and the unweighted ancestor, it had respectively 0, 4, 8, 16, and 72 expired sensors under the weighted Markov- clustering-based protocol (WMCL-BCRP) protocol and was still functional. Figs. 7 to 11 illustrate respectively the state of a WMCL-BCRP-routed network when the same network is dead under HEED, LEACH, PEGASIS, TEEN protocols and the unweighted ancestor. More precisely, when the HEED-routed network dies,
100 % of the sensors are still alive in the weighted Markov- clustering-routed network, and 96 %, 92 %, 84 % and 28 % of sensors are when all have expired in respectively the LEACH, PEGASIS, TEEN or unweighted Markov-clustering-routed networks.
Based on previous simulations, weighted Markov-clustering- based routing allows a significant reduction in cumulative number of expired sensors. This advantage is a direct consequence of the reduction in energy consumption, and thus prolonging the lifetime of WSNs compared to next best protocol, its unweighted ancestor, and other protocols. However, the results also show that the differ- ence in performance between weighting and not weighting the sensor selection is less apparent when networks with uniform sen- sor distribution are considered. In other words, when sensor den- sity varies widely from one network region to another, the proposed sensor weighting method becomes advantageous in terms of network lifetime, average sensor lifetime, average dissi- pated energy, and the number of expired sensors per round.

Conclusion

Battery energy places major limitations on the deployment of wireless sensor networks (WSNs). Routing protocols have been developed to optimize sensor use and hence energy efficiency dur- ing data transmission and thereby prolong network lifetime. This article proposes an improvement of the Markov-clustering-based routing protocol, in which a clustering algorithm is combined with a strategy based on location, abundance and residual battery energy to select sensors as cluster-heads. Called weighted Markov-clustering-based routing, the proposed protocol selects cluster-heads and queried sensors. Cluster-head selection is based on the best weighting factor within sensor-dense regions to reduce intra-cluster communications with the base station. In contrast, the selection of queried sensors is limited to the candidates with the lowest weights both in dense and sparse regions of the net-



work to conserve energy within the clusters. These selection strategies aim to restrict the sending of redundant data in dense regions, maintain sparse regions for as long as possible, and thereby reduce network energy consumption. Simulations show that the new protocol represents an improvement in terms of net- work lifetime; average sensor lifetime, average dissipated energy per round, and expired sensors per round. The applicability of the protocol to other fields will be investigated in future work.


References

Jondhale SR, Maheswar R, Lloret J. Fundamentals of wireless sensor networks. Springer; 2022.
Singh PK, Bhargava BK, Paprzycki M, Kaushal NC. Handbook of wireless sensor networks: issues and challenges in current scenarios. Springer; 2020.
El Emary IMM, Ramakrishnan S. Wireless sensor networks: from theory to applications. CRC Press; 2019.
Vijayalakshmi SR, Muruganand S. Wireless sensor networks: architecture - applications - advancements. Mercury Learning and Information; 2018.
Selmic RR, Phoha VV, Serwadda A. Wireless sensor networks: security, coverage, and localization. Springer International Publishing; 2016.
Fahmy HMA. Wireless sensor networks: concepts, applications, experimentation and analysis. Springer Singapore; 2016. https://doi.org/ 10.1007/978-981-10-0412-4.
Forster A. Introduction to Wireless Sensor Networks. (1st edition). Wiley-IEEE Press; 2016.
Priyantha, N. B. (2005) The Cricket indoor location system [Thesis, Massachusetts Institute of Technology] https://dspace.mit.edu/handle/1721.1/33924..
Stehlik, M. (2011) Comparison of Simulators for Wireless Sensor Networks [Masarykovauniverzita, Fakultainformatiky] https://is.muni.cz/th/u6wrk/ review_advisor.pdf..
Levis P, Lee N, Welsh M, Culler D. TOSSIM: Accurate and scalable simulation of entire TinyOS applications. In: Proceedings of the 1st international conference on embedded networked sensor systems. p. 126–37. doi: https://doi.org/ 10.1145/958491.958506.
Ilakkiyadeepaa, B. S., Vidhni, S. V. V., &Ranganathan, S. (2015) Wireless sensor networks based smart home control system. 10, 17567–17571.
Cetinkaya, O., & Akan, O. B. (2016) Use of wireless sensor networks in smart homes (pp. 233–257) http://publications.eng.cam.ac.uk/1024026/..
Gnanavel R, Anjana P, Nappinnai KS, Sahari N. Smart home system using a Wireless Sensor Network for elderly care. In: Second international conference on science technology engineering and management (ICONSTEM). doi: https:// doi.org/10.1109/ICONSTEM.2016.7560922.
Dishongh TJ, McGrath M. Wireless sensor networks for healthcare applications. Artech House; 2010.
Julien-Vergonjanne A, Sahuguède S, Chevalier L. Optical wireless body area networks for healthcare applications. In: Uysal M, Capsoni C, Ghassemlooy Z, Boucouvalas A, Udvary E, editors. Optical Wireless Communications: An Emerging Technology. Springer International Publishing; 2016. p. 569–87. doi: https://doi.org/10.1007/978-3-319-30201-0_26.
Gulati, K., Kumar Boddu, R. S., Kapila, D., Bangare, S. L., Chandnani, N., &Saravanan, G. (2021) A review paper on wireless sensor network techniques in Internet of Things (IoT). Materials Today: Proceedingshttps://doi.org/ 10.1016/j.matpr.2021.05.067..
Gopika D, Panjanathan R. Energy efficient routing protocols for WSN based IoT applications: A review. Mater Today: Proc 2020. doi: https://doi.org/10.1016/ j.matpr.2020.10.137.
Sharma, R., Prakash, S., & Roy, P. (2020) Methodology, Applications, and Challenges of WSN-IoT. 2020 International Conference on Electrical and Electronics Engineering (ICE3), 502–507 https://doi.org/10.1109/ ICE348803.2020.9122891..
Touati Y, Ali-Chérif A, Daachi B. Gestion énergétique dans les réseaux de capteurs sans fil. ISTE Group; 2017.
Liu X. A Survey on Clustering Routing Protocols in Wireless Sensor Networks. Sensors 2012;12(8):11113–53. doi: https://doi.org/10.3390/s120811113.
Gupta SK, Jain N, Sinha P. Clustering protocols in wireless sensor networks: A survey. Internat J Appl Inform Syst (IJAIS) 2013;5(2).
Sirsikar S, Wankhede K. Comparison of clustering algorithms to design new clustering approach. Procedia Computer Science 2015;49:147–54. doi: https:// doi.org/10.1016/j.procs.2015.04.238.
Xu L, Collier R, O’Hare GMP. A Survey of clustering techniques in wsns and consideration of the challenges of applying such to 5G IoT scenarios. IEEE Internet Things J 2017;4(5):1229–49. doi: https://doi.org/10.1109/ JIOT.2017.2726014.
Heinzelman, W. R., Chandrakasan, A., &Balakrishnan, H. (2000) Energy- efficient communication protocol for wireless microsensor networks. Proceedings of the 33rd Annual Hawaii International Conference on System Sciences, vol.2..
Fang W, Zhang W, Yang W, Li Z, Gao W, Yang Y. (2021) Trust management- based and energy efficient hierarchical routing protocol in wireless sensor networks. Digital Commun Networks 2021;7(4):470–8.
Akyildiz IF, Vuran MC. Wireless sensor networks. John Wiley & Sons; 2010.
Manjeshwar A, Agrawal DP. TEEN: A routing protocol for enhanced efficiency in wireless sensor networks. In: Proceedings 15th International Parallel and Distributed Processing Symposium. IPDPS 2001. p. 2009–15. doi: https://doi. org/10.1109/IPDPS.2001.925197.
Manjeshwar A, Agrawal DP. APTEEN: A hybrid protocol for efficient routing and comprehensive information retrieval in wireless. In: Proceedings 16th international parallel and distributed processing symposium. doi: https://doi. org/10.1109/IPDPS.2002.1016600.
Lindsey S, Raghavendra CS. PEGASIS: Power-efficient gathering in sensor information systems. Proc IEEE Aerospace Conf 2002;3:1125–30. doi: https:// doi.org/10.1109/AERO.2002.1035242.
Younis O, Fahmy S. HEED: A hybrid, energy-efficient, distributed clustering approach for ad hoc sensor networks. IEEE Trans Mobile Comput 2004;3 (4):366–79. doi: https://doi.org/10.1109/TMC.2004.41.
Taieb Brahim M, Abbad H, Boukil-Hacene S. A low energy MCL-based clustering routing protocol for wireless sensor networks. Internat J Wireless Netwk Broadband Technol (IJWNBT) 2021;10(1):70–95.
Van Dongen, S. M. (2000) Graph clustering by flow simulation [PhD Thesis] http://localhost/handle/1874/848..
Fanian, F., Rafsanjani. M. K. (2019) Cluster-based routing protocols in wireless sensor networks: A survey based on methodology, Journal of Network and Computer Applications Volume 142, 15 September 2019, Pages 111-142, Elsevier..
Nam, D. H (2020) Comparison Studies of Hierarchical Cluster Based Routing Protocols in Wireless Sensor Networks, EPiC Series in Computing Volume 69, 2020, Pages 334–344, Proceedings of 35th International Conference on Computers and Their Applications..
Ramani KPL, Badholia A. Cluster based routing protocols in WSN sensor. IT in Industry 2021;9(1):2021.
Yagoub MFS, Rodrigues JJPC, Khalifa OO, Mohammed AB, Korotaev V. Service redundancy and cluster-based routing protocols for wireless sensor and mobile ad hoc networks: A survey. Internat J Commun Syst Wiley Online Library, 2020. doi: https://doi.org/10.1002/dac.4471.
Ujager, F. S., Mahmood, A., Usman, M., A., Rathore, M. S. (2022) A Hierarchical Energy Conservation Framework (HECF) of Wireless Sensor Network by Temporal Association Rule Mining for Smart Buildings, Egyptian Informatics Journal, Volume 23, Issue 1, March 2022, Pages 137-147..
Saleh SS, Mabrouk TF, Tarabishi RA. (2021) An improved energy-efficient head election protocol for clustering techniques of wireless sensor networks. Egypt Inform J 2021;22(4):439–45.
Heinzelman WB, Chandrakasan AP, Balakrishnan H. An application-specific protocol architecture for wireless microsensor networks. IEEE Trans Wireless Commun 2002;1(4):660–70. doi: https://doi.org/10.1109/TWC.2002.804190.
Yassein MB, Al-zoubi A, Khamayseh Y, Mardini W. Improvement on LEACH protocol of wireless sensor network (VLEACH). Int J Digit Content Technol Appl 2009;3(2):132–6.
Biradar, R. V., Sawant, S. R., Mudholkar, R. R., &Patil, V. C. (2011) Multihop routing in self-organizing wireless sensor networks. International Journal of Computer Science Issues (IJCSI), 8(1) 155https://doi.org/10.1109/ HICSS.2000.926982..
Loscri V, Morabito G, Marano S. A two-levels hierarchy for low-energy adaptive clustering hierarchy (TL-LEACH. IEEE Vehicular Technology Conference 2005;62(3):1809.
Gaurav, K.N., Chetna, D., (2021)ESO-LEACH: PSO based energy efficient clustering in LEACH,Journal of King Saud University - Computer and Information Sciences,Vol. 33(8)947-954,ISSN 1319-1578,https://doi.org/ 10.1016/j.jksuci.2018.08.002..
Radhika M, Sivakumar P. Energy optimized micro genetic algorithm based LEACH protocol for WSN. Wireless Networks 2021;27:27–40. doi: https://doi. org/10.1007/s11276-020-02435-8.
Mukherjee, P., Pattnaik, P. K., & Panda, S. N. (2020) IoT and WSN Applications for Modern Agricultural Advancements: Emerging Research and Opportunities.145 p. IGI Global https://www.igi-global.com/gateway/book/ 218569..
Sajedi SN, Maadani M, NesariMoghadam M. F-LEACH: a fuzzy-based data aggregation scheme for healthcare IoT systems. J Supercomput 2022;78:1030–47. doi: https://doi.org/10.1007/s11227-021-03890-6.
MacQueen J. Proceedings of the Fifth Berkeley Symposium on Mathematical Statistics and Probability: Some methods for classification and analysis of multivariate observations. University of California Press; 1967.
