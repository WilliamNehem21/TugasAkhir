Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 293 (2013) 3–15
www.elsevier.com/locate/entcs
Complex Functional Rates
in the Modeling of Nano Devices (Extended Abstract)
Cristian Versari1
Lille University, Laboratoire d’Informatique Fondamentale de Lille (LIFL, CNRS UMR 8022),
Cit´e Scientifique, Batiment M3, 59655 Villeneuve d’Ascq CEDEX, France
Gianluigi Zavattaro2
Dipartimento di Informatica, Universita` di Bologna, Mura Anteo Zamboni 7, I-40127 Bologna, Italy

Abstract
We give an overview of recent work on the rule-based modeling of nano devices. In particular, our experience in the modeling of a nanoscale elevator suggested us to enhance rule-based modeling with complex functional rates that can be used to express rates that depend on the current state of the entire complexes in which the reacting molecules reside.
Keywords: Rule-based modeling, nano devices, functional rates

1	The CompReNDe project
In this overview we briefly describe CompReNDe (Compositional and executable Representations of Nano Devices), an interdisciplinary project of the Chemistry and Computer Science departments of the University of Bologna aimed at combin- ing the expertises of two groups, one specialized in the design and construction of devices and machines of molecular size [3,2] and the other one qualified in formal models, based on the theory of process calculi, for describing and analyzing molec- ular systems [14]. Such expertises have been joined together in order to deliver a programming model for describing molecular machines that is also amenable to automated simulations and verifications by means of existing algorithms.

1 Email:cristian.versari@lifl.fr
2 Email:gianluigi.zavattaro@unibo.it

1571-0661 © 2013 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2013.02.015




Fig. 1. Schematic representation of a two-station rotaxane and its operation as a controllable molecular shuttle.

The CompReNDe research activity started with the initial goal of formalizing a [2]rotaxane [29] with the Kappa-calculus [14] in order to simulate its behavior. [2]rotaxanes [29] (simply rotaxanes in the following) are systems composed of a molecular axle surrounded by a ring-type (macrocyclic) molecule. Bulky chemical moieties (“stoppers”) are placed at the extremities of the axle to prevent the disas- sembly of the system. In rotaxanes containing two different recognition sites on the axle (“stations”), it is possible to switch the position of the macrocyclic ring be- tween the two stations by an external energy input as illustrated in Figure 1. Several rotaxanes of this kind, known as molecular shuttles, have been developed (see [7] and the references therein) and used for building more complex systems [21,2].
The Kappa-calculus is a formal language idealizing molecular interactions as a particular kind of graph-rewriting. Molecules are nodes with fixed numbers of sites and molecular bonds are arcs connecting sites. Complexes are connected graphs built over such nodes and bonds. Reactions are modeled by rewriting rules that can modify the internal state of nodes, create bonds to represent complexations, and destroy bonds to represent decomplexations.
One of the distinct features of Kappa is the “don’t care, don’t write” approach: in a reaction, the reactants are not mandatorily fully described, but they can be identified by a pattern, i.e. an abstract description that can be matched by several different concrete molecules. In this way, a rule contains the description of only those parts of the complexes that are actually involved in a reaction.
The Kappa-calculus was selected as the best candidate for the modeling of the rotaxane for two main reasons: the graph-based modeling approach allowed for a natural representation of the rotaxane components and their bindings, and the rewriting rules could be used to easily represent both the chemical reaction rep- resenting the stimulus and the subsequent mechanical movement. In particular, reactions could be expressed according to the “don’t care, don’t write” approach thus focusing only on those sub-elements of the rotaxane that are actually involved.
In [9,10] we have reported about our experience in the modeling of the rotaxane by using the Kappa-calculus. One of the most interesting observations was that Kappa was not expressive enough to model complexes in which the modification of the internal state of one molecule influenced the behavior of other molecules in the same complex. To overcome this limitation, we introduced nano-K, an extension of Kappa with instantaneous reactions used to implement instantaneous protocols



Fig. 2. Schematic representation of the nanoscale elevator in [2]. The platform (red structure) is connected to the rings of three 2-stations rotaxanes (vertical legs) which are fused together on their top parts (grey structure). The platform is moved by the stimuli that shift the rotaxane rings from one station to the other one.

used to notify to molecules the occurrence of a reaction involving other molecules in the same complex. In this way, after a reaction taking place, all the molecules of the involved complexes could possibly update their internal state accordingly. In [9,10] we also discussed how to perform simulations of the behavior of systems modeled with nano-Kappa.
After the experience with the modeling and simulation of the rotaxane, we moved to a more sophisticated nano device: the nanoscale elevator presented in [2]. This molecular machine (schematically depicted in Figure 2) is obtained by integration of three rotaxanes: their top stopper are fused together and a “platform” is con- nected to the three rings. In this way, the movement of the rings between the two stations has the effect of moving the platform. The modeling of such system im- mediately revealed challenging because laboratory experiments demonstrated that the current internal state of one rotaxane had an influence on the rates of the reac- tions of the other rotaxanes. The modeling of this phenomenon in nano-K required molecules with a rather rich internal state and a significant amount of instanta- neous reactions for keeping such internal states updated. The resulting model was not satisfactory mainly because the description of the interdependencies among the various components of the same nano elevator was fragmented in the internal states of the molecules and the instantaneous reactions. This revealed a problem because some rates, as well as some potential interdependencies, were neither known nor observable in laboratory. For this reason we had to frequently modify the model in order to validate, by means of simulations, different assumptions about the possible interdependencies among the nano elevator components.
The problem derived from the fact that the “don’t care, don’t write” approach considered in Kappa allowed us to express only “local” properties that characterize the dynamics of the system: indeed, the kinetics of reactions must depend only on the part of reactants matched by the corresponding patterns. In this way, it is not possible to take into account properties that still influence the kinetics of the system but regard molecular complexes in their entirety. One common example is the influence of the mass on reactivity: the higher the mass of a complex, the lower the reactivity of its components, because of the slower velocity at which the

complex drifts by brownian motion.
To take into account this kind of non-local effects, in [31] we proposed Kappa with complex functional rates (κF for short), an extension of the Kappa-calculus in which the rate is a function of the complexes in which the reacting molecules actually reside. The “don’t care, don’t write” approach is still used to abstractly specify the reactants via patterns, but the rate can now depend on any property that emerges from whole complexes and the localization of the actual reacting molecules inside such complexes.
In order to be able to ease the representation of any kind of non-local effect at the level of molecular complexes, κF reactions are enriched with colors: we use a color to identify each of the reacting molecules inside their molecular complexes. Reaction rates are expressed as functions of colored complexes. More precisely, once the reacting molecules are detected in the solution, they are colored and the relevant complexes are obtained by transitive closure following their bindings. The functional rate is then applied to such colored complexes to compute the actual rate of the reaction.
From a syntactic point of view, κF is a slight modification of Kappa: the constant reaction rate is replaced by a functional rate. From a semantic point of view, on the contrary, the modifications are relevant (see [31] for the details). Due to this significant difference, it is not trivial to modify the Kappa simulation and analysis tools to use them on κF . For this reason, and in order to obtain results that could experimentally justify the introduction of the new calculus, we have studied in [31] a translation from κF to standard chemical reaction networks. This can be done by associating to each κF complex a chemical species, and then by considering for each κF reaction rule all its possible instantiations on those species. For all the cases where the so-called “combinatorial explosion” (arising from the many internal states and the many ways in which molecules could bind to each other) is not prohibitive, the translation to chemical reaction networks is a reasonable and easy to use way to simulate and analyze biochemical systems, as it allows the modeler to exploit all the tools already available for traditional chemistry.
In the remainder of this paper we recall the syntax of κF (the reader interested in the semantics and its translation to chemical reaction networks can refer to [31]) and we show how the rotaxane and the nano elevator systems can be easily modeled in κF . We finally conclude with some discussions about the related literature and possible lines for future work.

2	The κF calculus
As in the Kappa-calculus, the basic entities of κF models are molecules, each be- longing to some particular chemical species. We consider a countable set of species names, ranged over by A. Species are sorted according to the number of ﬁelds and sites they possess: fields are used to denote the internal states of the molecules, while sites keep track of the formation of chemical bonds between molecules. To denote fields and sites, we introduce two functions sf (·) and ss(·) from A to natural

numbers; the integers 1, 2, .. ., sf (A) and 1, 2, .. ., ss(A) are respectively the fields and the sites of A (in particular, sf (A) = 0 means there is no field, ss(A) = 0 means there is no site).
The chemical bonds formed by molecules are denoted by a countable set of bond identifiers ranged over by x, y, .. .. Sites may be either bound to other sites or unbound, i.e. not connected to other sites. The state of sites are defined by injective maps, called interfaces and ranged over by σ, ρ,   Given a species A, its interfaces
are partial functions from {1,.  , ss(A)} to the set of bond names or a special empty
value ε. A site a is bound with bond x in σ if σ(a)= x; it is unbound if σ(a)= ε. For instance, if A is a species with three sites, (2 '→x, 3 '→ε) is one of its interfaces. In order to ease the reading, we write this map as 2x + 3 (the empty value is always omitted). This interface σ does not define the state of the site 1, which may be bound or not. In the following, when we write σ + σj we assume that the domains of σ and σj are disjoint. We require interfaces to be injective in order to ensure that two sites belonging to the same molecule cannot be bound: this reflects the impossibility for single molecules to form self-complexes. In other words, we impose that the endpoints of a bond cannot belong to the same molecule.
The values of fields are defined by maps, called evaluations, and ranged over by u, v, .. .. For instance, if A is a species with three fields, [1 '→5, 2 '→0, 3 '→4] is an evaluation of its fields. We write this map as 15 + 20 + 34. We assume there are finitely many internal states, that is every field h is mapped to values in
{0,..., nh}. In the following, we use partial evaluations and, when we write the union of evaluations u + v, we implicitly assume that the domains of u and v are disjoint.
A κF system is composed by sets of molecules interacting and changing internal state: such sets are called solutions. The syntax of κF solutions is defined by the following grammar:


S	::=
Mol
|	S, S

Mol	::=	A[u](σ)
with “,” associative. According to the previously introduced notation, A[u](σ) denotes a molecule of species A, with evaluation u and interface σ.
The dynamic evolution of a κF system over time is governed by a set of chemical rules which define the interaction and state change capabilities of the molecules. Each rule is associated with a rate which roughly denotes its “speed” or, if we follow the stochastic interpretation of κF models, the probability of its application to the current chemical solution. Rates are not necessarily fixed, but can depend on the internal state and chemical bonds of both the interacting molecules and the chemical complexes where these molecules are placed.
The expression of functional rule rates in κF relies on the use of colors, which allow the modeler to specify which, between those in the chemical solution, are the reacting molecules. Colors are formalized as vectors of identifiers associated to solutions: in order to denote them, we introduce a denumerable set of color identifiers C, with ϵ ∈C denoting the empty color. A color is a tuple c˜ = (c1,..., cn)

of color identifiers ci ∈ C, such that an identifier different from ϵ can appear only once, namely, if ci /= ϵ then ci /= cj 6i /= j, with 1 ≤ i, j ≤ n. A colored solution Sc˜ is a pair (S, c˜) where S is a solution S = Mol1,..., Moln and c˜ = (c1,..., cn) is a color.
The chemical reactions that specify the evolution over time of a κF systems

are formalized as triples (Mc˜1 ,f , Mc˜2 ) usually written as ρ = Mc˜1  fρ
c˜2 where

1	ρ	2
1 —→ M2

Mc˜1 and Mc˜2 are patterns specifying the possible reactants and the corresponding
1	2
products, respectively, and fρ is a function from colored solutions to non-negative
numbers (representing actual rates).
Notice that the definition of reaction is essentially the same as in Kappa, with the unique difference that reactants and products are colored and a functional rate is considered. The functional rate fρ is responsible for checking the complexes in which the reacting molecules reside, and according to their structure and the localization of the reactants (identified by the colors), a corresponding rate is computed.
3	Modeling the rotaxane and the nano elevator in κF
The rotaxanes used in [2] to build the molecular elevator have two stations, an ammonium/amine molecule (Nh in the following) green colored in Figure 1 and 2, and a bipyridinium molecule (Bipy in the following) colored in blue. The Nh molecule can be protonated and deprotonated by adding acid or base to the solution: when it is protonated the stable position for the ring is on the Nh station (as depicted in Figure 2), while it is on the Bipy station when it is deprotonated.
The behavior of such rotaxane has been modeled in [10] by using a Kappa-like language extended with instantaneous reactions. The latter were used to immedi- ately communicate to all the molecules belonging to the same rotaxane the occurred (de)protonation of the Nh. This is no longer needed in κF as functional rates allow the modeler to express the influence of the internal state of the Nh molecule on the behavior of the entire rotaxane.
The rotaxane can be modeled by considering three distinct molecules for repre- senting the Nh, the Bipy and the ring, respectively. The two stations are connected by a permanent bond, while the ring has a switchable binding to one of them (such bond indicates the current location of the ring). The chemical solution correspond- ing to such a rotaxane with the ring on the Nh station can be written as follows:
Nh[h1](bipyr1 + ringx1 ), Ring(linkx1 ), Bipy(nhr1 + ring)
where we use mnemonic names to represent sites and fields. The Nh molecules have one field h: the field holds 0 when the Nh is deprotonated, it holds 1 otherwise. The switch of the ring from the Nh to the Bipy station leads instead to the following configuration:
Nh[h1](bipyr1 + ring), Ring(linkx1 ), Bipy(nhr1 + ringx1 )
Such a switch between these two stable configurations can be easily expressed with

the following reversible reaction, formally corresponding to two κF reactions:

Nh(bipyr1 + ringx1 )c1 , Ring(linkx1 )c2 , Bipy(nhr1 + ring)c3 fmov
Nh(bipyr1 + ring)c1 , Ring(linkx1 )c2 , Bipy(nhr1 + ringx1 )c3	(1)


with

fmov(Sc˜) = let Nh[hx](ringy + σ)c1 ∈ Sc˜	in



if y = ε then
if x =0 then λ1

else λ2



else
if x =0 then λ3

else λ4

The rate of the ring movement from one station to the other one depends on the protonated/deprotonated state of the Nh. We model this dependency by using a

functional rate, returning one of four possible rates λi
, depending on the combi-

nation of two distinct factors: whether the Nh is protonated or not, and whether the Ring is moving from the Nh to the Bipy or vice versa. Thanks to κF functional rate, we obtain for the rotaxane a very succint model with respect to other calculi such as Kappa.
The modeling of protonation/deprotonation process in the rotaxane does not need instead functional rates:



Nh[h1], Base[h0]


Nh[h0], Acid[h1]
kb-deprot
—————→
kb-prot
→————
ka-deprot
—————→
ka-prot
→————

Nh[h0], Base[h1]


Nh[h1], Acid[h0]



(2)


for some kinetic constants kb-deprot, kb-prot, ka-deprot, ka-prot, We use Base and Acid molecules with a field h which holds 0 or 1 to denote whether the molecule is ready to receive or donate a proton, respectively.
The model of the nanoscale elevator is obtained by joining together the models of its three rotaxanes by means of an additional complex, composed of three Top molecules. According to the structure depicted in Figure 2 we add to each of the three rotaxanes a Top molecule connected to the Nh station, and we bind together the three Top molecules. Moreover, the three rings are connected together to represent the platform. The complete representation of the elevator is then as

follows:

Top(lt1 + nhs1 + rt2 ), Top(lt2 + nhs2 + rt3 ), Top(lt3 + nhs3 + rt1 ), Nh[h1](tops1 + bipyr1 + ringx1 ), Ring(lp1 + linkx1 + rp2 ), Bipy(nhr1 + ring), Nh[h1](tops2 + bipyr2 + ringx2 ), Ring(lp2 + linkx2 + rp3 ), Bipy(nhr2 + ring), Nh[h1](tops3 + bipyr3 + ringx3 ), Ring(lp3 + linkx3 + rp1 ), Bipy(nhr3 + ring)

In the first line we present the three Top molecules each one connected to a left and a right Top molecule. Moreover, each Top is connected to the Nh molecule of one rotaxane. The three rotaxanes are represented in the subsequent three lines. Notice that we assume that the Ring molecules are connected to the Nh station, and that each Ring is connected to a left and a right Ring molecule. We assume the Nh molecules initially protonated.
We now move to the representation of the dynamics of the system. As for the rotaxane, two kinds of reactions are used: those for protonation/deprotonation be- tween the Nh and an acid-base molecule, and those for switching the bond between the ring and the two stations.
Thanks to the “don’t care, don’t write” approach inherited from Kappa, the modularity of the structure of the nano elevator allows us to reuse the chemical reactions of Eq.(1) without any change for the movement of the platform. Despite also the second group of reactions, i.e. those concerned with the proton exchange between the Nh and the acid-base molecules, could be reused as well, we consid- ered a modified version. The rate of these reactions is indeed influenced by an interesting phenomenon observed on the behavior of the nanoscale elevator. The (de)protonation of the three Nh molecules of an elevator follows three distinct pro- cesses. Upon addition of acid-base to the solution, the (de)protonation effect does not distribute homogeneously among the Nh molecules, but among the elevators. Namely, the “ﬁrst equivalent of base does not lead to a statistical mixture of differ- ently protonated species but rather causes the ﬁrst deprotonation process to occur”. One likely cause of this phenomenon is that the (de)protonation rate of the Nh is influenced by the current (de)protonated state of the other two Nh molecules in the same elevator. According to this interpretation, the dependence of the protona- tion/deprotonation process on the total number of protonated Nh molecules of the elevator requires the following modification to the reactions of Eq.(2) which were used for the single rotaxane:



Nh[h1], Base[h0]
fb-deprot
—————→
fb-prot
→————

Nh[h0], Base[h1]


Nh[h0], Acid[h1]

fa-deprot
—————→
fa-prot
→————

Nh[h1], Acid[h0]



9000
8000
7000
6000
5000
4000
3000
2000
1000
0 0	1×104	2×104	3×104	4×104
Base: initial concentration

Fig. 3. Comparison of possible behaviors of the elevator model at steady state in relation to the assumption of dependence or independence of the protonation/deprotonation process on the total number of already protonated Nh molecules. On the horizontal axis the initial number of Base[h0] molecules in the solution:
each point of the graph represents the result of a run with different initial number of base molecules. On the vertical axis the corresponding number of molecules at steady state for different configurations and
functional rates of the elevator, starting with an initial concentration of 104 elevators each with all the 3 Nh molecules protonated. The four species listed on the left of the legend represent the number of elevators with respectively 0 to 3 “legs up” (i.e. number of rotaxanes whose ring is bound to the Nh molecule) in the case of movement dependent on the number of protonated Nh molecules as described in Eq.(3), with
λb-deprot = sb-deprot = 1, λb-prot = 10−2, sb-prot = −1. The four species on the right represent the same elevator states but in the case of movement independent of the total number of protonated Nh molecules, that is with sb-deprot = sb-prot = 0 and λb-deprot = 102, λb-prot = 10−2. For both the dependent and the

independent cases, we have λ1
4
mov
= 20, λ2
3
mov
= 103.

with

fk(Sc˜) =	let P = ΣNh [hx](σ)∈Sc˜

x	in	(λk) · 10sk·P	(3)

for k ∈ {b-deprot, b-prot, a-deprot, a-prot}. In this case, the functional rate modifies a base rate λk according to the number P of Nh protonated in the same elevator.
Thanks to the translation of κF to standard chemical reaction networks given in
[31] we were able to simulate numerically the above formalization of the molecular elevator. Simulation results are shown in Figure 3 at steady state under the hy- potheses of dependence and independence of the protonation/deprotonation process on the total number of protonated Nh molecules.
4  Related and future work
The “don’t care, don’t write” approach adopted in the Kappa-calculus, as well as in other rule-based languages like BioNetGen [4], opened the way for introducing compositional modeling in rule-based process calculi, and provides very compact and readable descriptions of biochemical systems in the presence of sophisticated molecule bindings. While compositional modeling represents in general a desirable

advantage in the hands of the modeler, it becomes a limit when important properties of the system cannot be described in a compositional calculus because of their intrinsic non-compositionality.
Based on our experience in the modeling of nano devices within the project CompReNDe, we have introduced the notion of complex functional rates and applied it to the Kappa-calculus, thus obtaining an extended calculus that we called κF . It is worth noting that complex functional rates and the corresponding techniques that we have developed for κF are of general applicability, and can be adapted to extend also other process calculi for biochemical modeling in order to take into account non-compositional properties (physical, chemical, etc.) without losing the advantage of a compositional description. Their applicability could be also extended to other process calculi with binding capabilities like, e.g., [18,26,27,28].
The simulator for the Kappa language KaSim [1] already includes the possibility to associate to a reaction a pair of rates, the first one to be used when the reactants are freely floating and the second one for the case in which they are part of the same complex. This latter mechanism is useful to resolve the ambiguity of Kappa rules among two reactants A and B that could be applied in a context where A and B are sometimes already connected and sometimes disconnected. Indeed, this would lead to an inconsistency in the definition of the kinetic rate which should have a volume dependency in the former case and no volume dependency in the latter. Nevertheless, the introduction of physical or chemical properties influencing reaction rates as functions of the whole involved complexes makes unfeasible any attempt of modeling in Kappa.
It is also worth to mention the variant of Kappa presented in [11], where the so-called rule reﬁnement approach is presented. The idea of rule refinement is to replace a rule with a set of rules, each one strengthening the conditions under which the initial rule can be applied. Our approach is different because we do not add rules to a Kappa model, but we simply allow for the definition of the reaction rate as a function of the complexes in which the reactants actually reside. We consider our approach more appropriate for the modeling of systems in which some specific physico-chemical properties of the complexes hosting the reactants have an impact on the system kinetics. On the contrary, the rule refinement approach revealed appropriate to study the distribution of already known rates from a Kappa rule to its refinements. In fact, one of the main contribution of [11] is the definition of a mechanism for inferring the rates of the refined rules in such a way that the kinetics of the initial non refined system is preserved.
The stochastic simulator NFsim [30], based on an extension of the BioNetGen language, allows the expression of rate functions which can depend on properties either global (at the level of the system) or “local” (at the level of the molecular complexes involved in the reaction). While the first kind of properties is not directly included in κF and should be encoded manually by the modeler, the latter kind makes NFsim capabilities closer to κF . However, the adoption of colors in κF semantics allows the modeler to take into account more sophisticated properties which depend not only on the number of molecules of any kind that form each

molecular complex, but also on the way they are arranged to form the complex. In other words, only in κF rate functions can exploit the information pertaining the graph-like structure of each complex involved in the reaction and the position of reacting molecules inside them.
Despite the expressiveness of κF , in [31] we provided its formal translation in traditional chemistry and proved the correctness. Thanks to this translation it is possible to apply to (some classes of) κF models the efficient verification tech- niques (such as simulation by ordinary differential equations, as well as by efficient stochastic algorithms [19,5]) and reuse, at least in principle, the existing software tools developed for traditional chemistry (e.g [8], but in general any tool supporting languages comparable to traditional chemistry, like SBML [20]).
However, the superior expressiveness of process calculi like Kappa with respect to traditional chemistry can lead to translations with an infinite number of chem- ical species and rules. In general, as the Kappa-calculus is Turing complete, the problem of checking whether a Kappa model can generate only finitely many com- plexes is undecidable. Nevertheless, there are fragments of Kappa for which this problem turns out to be decidable [17], and also techniques —based on abstract interpretation— which are capable of computing an over-approximation of the set of reachable complexes [13] that can be used to prove, in some cases, that this set is finite.
Future work directions point at several aims. First, it must be investigated to what extent the introduction of functional rates in bio-oriented process calculi semantics can be pushed, in particular in those calculi equipped with high-level structural rearrangement primitives (for example, calculi with nested compartments [6,28]). Moreover, it is still unclear how this approach can be adapted to cope with more sophisticated calculi like [23,22], where functional rates have been already introduced but with a different technique, based on communication constraints. A special case is the React(C) language [24], that can be regarded as an extension of Kappa as well as of κF , but differently from κF the functional rate takes under consideration the entire system (i.e. the entire solution). We found the κF approach more appropriate when one wants to specify models which are modular at least at the level of complexes, even if not modular at the level of the single molecules. It must be investigated how and to what extent the technique used for the translation of κF to traditional chemistry can be generalized in order to be applied to React(C) as well, thus giving the possibility to introduce also in React(C) a notion of complex. More sophisticated mappings to traditional chemistry (e.g. along the line of [25]) may be helpful in this regard.
Last, more efficient translation techniques may allow us to widen the class of models manageable in practice. For example, abstract interpretation has been al- ready applied to Kappa [12] to reduce, under some circumstances, the number of chemical species and reactions resulting from a translation from Kappa to standard chemistry similar to the one we have presented in this paper. In order to apply such techniques in κF , it is necessary to check their applicability in the presence of the functional rate.

Acknowledgement
We are grateful to all our collaborators in the CompReNDe project: Alberto Credi, Marco Garavelli, Cosimo Laneve, Sylvain Pradalier and Serena Silvi.

References
KaSim: kappa language simulator. http://www.kappalanguage.org.
J. D. Badji´c, V. Balzani, A. Credi, S. Silvi, and J. F. Stoddart. A molecular elevator. Science, 303(5665):1845–1849, 2004.
V. Balzani, A. Credi, and M. Venturi. Molecular devices and machines - Concepts and perspectives for the nano world, 2nd Edition. Wiley-VCH, 2008.
M. Blinov, J. Faeder, B. Goldstein, and W. Hlavacek. Bionetgen: software for rule-based modeling of signal transduction based on the interactions of molecular domains. Bioinformatics, 20(17):3289, 2004.
Y. Cao, H. Li, and L. Petzold. Efficient formulation of the stochastic simulation algorithm for chemically reacting systems. J Chem Phys, 121(9):4059–4067, September 2004.
L. Cardelli. Brane Calculi. In Danos and Scha¨chter [15], pages 257–278.
B. Champin, P. Mobian, and J.-P. Sauvage. Transition metal complexes as molecular machine prototypes. Chemical Society Reviews, 36(2):358–366, 2006.
F. Ciocchetta, A. Duguid, S. Gilmore, M. L. Guerriero, and J. Hillston. The Bio-PEPA Tool Suite. In
QEST, pages 309–310. IEEE Computer Society, 2009.
A. Credi, M. Garavelli, C. Laneve, S. Pradalier, S. Silvi, and G. Zavattaro. Modelizations and simulations of nano devices in nanok calculus. In CMSB 2007, volume 4695 of LNCS, pages 168–
183. Springer, 2007.
A. Credi, M. Garavelli, C. Laneve, S. Pradalier, S. Silvi, and G. Zavattaro. nanok: A calculus for the modeling and simulation of nano devices. Theor. Comput. Sci., 408(1):17–30, 2008.
V. Danos, J. Feret, W. Fontana, R. Harmer, and J. Krivine. Rule-based modelling, symmetries, refinements. In FMSB, volume 5054 of Lecture Notes in Computer Science, pages 103–122. Springer, 2008.
V. Danos, J. Feret, W. Fontana, R. Harmer, and J. Krivine. Abstracting the differential semantics of rule-based models: Exact and automated model reduction. In LICS, pages 362–381. IEEE Computer Society, 2010.
V. Danos, J. Feret, W. Fontana, and J. Krivine. Abstract interpretation of cellular signalling networks. In VMCAI, volume 4905 of Lecture Notes in Computer Science, pages 83–97. Springer, 2008.
V. Danos and C. Laneve. Formal molecular biology. Theor. Comput. Sci., 325(1):69–110, 2004.
V. Danos and V. Sch¨achter, editors. Computational Methods in Systems Biology, International Conference CMSB 2004, Paris, France, May 26-28, 2004, Revised Selected Papers, volume 3082 of Lecture Notes in Computer Science. Springer, 2005.
P. Degano and R. Gorrieri, editors. Computational Methods in Systems Biology, 7th International Conference, CMSB 2009, Bologna, Italy, August 31-September 1, 2009. Proceedings, volume 5688 of Lecture Notes in Computer Science. Springer, 2009.
G. Delzanno, C. D. Giusto, M. Gabbrielli, C. Laneve, and G. Zavattaro. The kappa-lattice: Decidability boundaries for qualitative analysis in biological languages. In Degano and Gorrieri [16], pages 158–172.
F. Fages and S. Soliman. Formal Cell Biology in Biocham. In SFM, volume 5016 of Lecture Notes in Computer Science, pages 54–80. Springer, 2008.
M. Gibson and J. Bruck. Efficient exact stochastic simulation of chemical systems with many species and many channels. Journal of Physical Chemistry A, 104(9):1876–1889, 2000.
M. Hucka, A. Finney, H. Sauro, H. Bolouri, J. Doyle, H. Kitano, A. Arkin, B. Bornstein, D. Bray,
A. Cornish-Bowden, et al. The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models. Bioinformatics, 19(4):524–531, 2003.


M. Jimenez, C. Dietrich-Buchecker, and J.-P. Sauvage. Towards synthetic molecular muscles: Contraction and stretching of a linear rotaxane dimer. Angew. Chem. Int. Ed., 39(18):3284–3287, 2000.
M. John, C. Lhoussaine, and J. Niehren. Dynamic compartments in the imperative pi-calculus. In Degano and Gorrieri [16], pages 235–250.
M. John, C. Lhoussaine, J. Niehren, and A. M. Uhrmacher. The attributed pi calculus. In M. Heiner and A. M. Uhrmacher, editors, CMSB, volume 5307 of Lecture Notes in Computer Science, pages 83–102. Springer, 2008.
M. John, C. Lhoussaine, J. Niehren, and C. Versari. Biochemical reaction rules with constraints. In
G. Barthe, editor, ESOP, volume 6602 of Lecture Notes in Computer Science, pages 338–357. Springer, 2011.
R. Meyer and R. Gorrieri. On the Relationship between π-Calculus and Finite Place/Transition Petri Nets. In M. Bravetti and G. Zavattaro, editors, CONCUR, volume 5710 of Lecture Notes in Computer Science, pages 463–480. Springer, 2009.
A. Phillips and L. Cardelli. Efficient, correct simulation of biological processes in the stochastic pi- calculus. In CMSB, volume 4695 of LNCS, pages 184–199, 2007.
C. Priami and P. Quaglia. Beta binders for biological interactions. In Danos and Scha¨chter [15], pages 20–33.
A. Regev, E. M. Panina, W. Silverman, L. Cardelli, and E. Y. Shapiro. BioAmbients: an abstraction for biological compartments. Theor. Comput. Sci., 325(1):141–167, 2004.
J.-P. Sauvage and C. D.-B. (eds.). Molecular catenanes, rotaxanes and knots. Wiley-VCH, 1999.
M. W. Sneddon, J. R. Faeder, and T. Emonet. Efficient modeling, simulation and coarse-graining of biological complexity with NFsim. Nature Methods, 8:177183, 2011.
C. Versari and G. Zavattaro. Complex Functional Rates in Rule-based Languages for Biochemistry.
Transactions on Computational Systems Biology. To appear.
