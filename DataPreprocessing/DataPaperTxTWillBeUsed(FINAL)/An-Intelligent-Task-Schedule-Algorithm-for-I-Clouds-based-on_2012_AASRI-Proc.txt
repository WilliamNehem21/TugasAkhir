Available online at www.sciencedirect.com



AASRI Procedia 2 (2012) 318 – 322
AASRI
Procedia
www.elsevier.com/locate/procedia





2012 AASRI Conference on Power and Energy Systems
An Intelligent Task Schedule Algorithm for I-Clouds based on Economic Mechanism
Zhao Lan, Wang Dazhen*
Lectuer,@ Computer Science Department, Wuhan, Hubei University of China, 430068, P.R.C Assosiate Professor @Computer Science Department, Wuhan, Hubei University of China, 430068, P.R.C*





Abstract

Clouds are environment that enable the sharing, selection, query and aggregation of geographically distributed resources for solving large-scale problems. Therefore the resource schedule mechanism of resource becomes a complex undertaking problem. We had investigated several famous schedule methods proposed by Nimrod-G, a famous computational economy framework for regulating the supply and demand for resources. In this paper, we propose a new scheduling algorithm based on deadline and cost optimization, which extends traditional cost optimization and time optimize algorithm, keeping the performance at optimize level.


© 2012 Published by Elsevier B.V. Selection and/or peer review under responsibility of American Applied Science Research Institute
Open access under CC BY-NC-ND license.
Keywords: Auction ; Task Schedule; Clouds; Optimization

Introduction

Clouds [1] technologies enable aggregation of distributed resources for solving large-scale and computationally intensive applications. They enable the sharing, query, selection and aggregation of a wide variety of geographically distributed resources including supercomputers, storage systems, databases, data sources, and specialized devices owned by different organizations. However, resource management and



* Corresponding author. Tel.: 0086-18627020343; fax: 008687106626. E-mail address: newtele@gmail.com, wangdazhen@mail.hbut.edu.cn.






2212-6716 © 2012 Published by Elsevier B.V. Selection and/or peer review under responsibility of American Applied Science Research Institute
Open access under CC BY-NC-ND license. doi:10.1016/j.aasri.2012.09.052


application scheduling is a complex undertaking due to large-scale heterogeneity present in resources, management policies, users, and applications requirements in these environments. The resources are heterogeneous in terms of their architecture, power, configuration, and availability. They are owned and managed by different organizations with different access policies and models that vary with time, users, and priorities. Different applications have different computational models that vary with the nature of the problem. Centralized control is not possible, however, because of the diverse ownership of the Clouds resources, for example computer where all resources are governed by the operating system are quite different, Clouds with QoS would be too complex to be under a single authority, or even to simple decentralized control objectives. In the Clouds economic approaches, the key issue of pricing can be resolved from the ground up in the engineering of the Clouds. In economic models, the players in the network are likely to be software brokers, rather than humans. Brokers acquire resources, such as bandwidth and storage space, from the Clouds on behalf of applications (video, voice, data transfer). Under appropriate rules of interaction, the collective actions of all the brokers constitute a distributed intelligence which can achieve outcomes as efficient as those that would be obtained by the best possible central controller.
In the earlier work of Nimrod-G [2][3], Buyya had investigated the use of economics as a metaphor for management of resources in Clouds computing environments. The computational economy framework provides a mechanism for regulating the supply-and-demand for resources and allocating them to applications based on the users' quality of services requirements [4]. It also offers an incentive to resource owners for sharing resources on the Clouds and end-users trade-off between the timeframe for result delivery and computational expenses. The rest of this paper is organized as follows. Section 2 presents the traditional schedule methods in Nimrod-G framework. Contrast with it, we proposed a new scheduling methods, which scheduling infrastructure based on market models. In Section 3, we model broker utilities and obtain optimal responses and investigate the scenario where each broker has an itinerary of sequential tasks and we analyze it when broker want to minimize both the cost and time to complete the itinerary. We investigate the scenario where the itinerary has to be completed as fast as possible with a finite total budget. The final section summarizes the paper along with suggestions for future work.

Utility analysis of traditional algorithms

Nimrod-G had provided and infrastructure of economic models which include three main components: Clouds request broker, Market middleware, Clouds service provider. In compete of market, Clouds trading service can interactive with user by Clouds request broker. Clouds request broker and Clouds resource provider interactive have affect each other by Clouds trading middleware. We can use different economic models in resource management, such as Commodity Market Model, Posted Prices Models, Bargaining Model, Tendering (Contract Net) Model, Auction Model and etc, which had details description in GRACE[4] A range of scenarios and parameters to be explored are applied to the program input values to generate different data sets. The programming and execution model of such applications resemble the SPMD (Single Program Multiple Data) model. The execution model essentially involves processing N independent jobs (each with the same task specification, but a different dataset) on M distributed computers where N is, typically, much larger than M. When the user submits a parameter sweep application containing N tasks along with quality of service requirements, the broker performs the following activities: 1.Resource Discovery: Identifying resources and their properties and then selecting resources. 2. Resource Trading: Negotiating and establishing service access cost using a suitable economic model. 3. Scheduling: Select resources that fit user requirements and map jobs to them.4. Deploy jobs on resources [Dispatcher]. 5. Monitor and Steer computations. 6. Perform load profiling for future usage 7. When the job execution is finished, gather results back to the user home machine [Dispatcher]. 8. Record all resource usage details for payment processing purpose. 9. Perform rescheduling:


Repeat steps 3-8 until all jobs are processed and the experiment is within the deadline and budget limit.10. Perform cleanup and post-processing, if required.
We can describe economic models of Buyya as follows: there are N processors (P1 , P2 , P3 ,.....PN ) connected via network. A link ei , j is a connection between Pi and Pj . Each link has a delay variable which is dij . The

service rate of each processor Pi
is si
(service rate is with respect to P1 where
s1 =1). The resource are

processor time (CPU time, to simplify the question, we just calculate CPU time) and communication bandwidth. Jobs enter the distributed system and request resources based on the prices. Job j has a service time of uj , it purchase uj / sk time unit on Pk . Buyya has present follow preference: strategy˖
Cost Optimal based on limited cost budget: Jobs prefer to be done as cheaply as possible. The cost Ck is composed of the cost of accessing service at processor Pk and cost of to and fro communication bandwidth from job origin to Pk . ( k [1, N ])

min[C ]
k
(1)

Time Optimal based on limited deadline: Jobs prefer the element of budget set which gives the least

response time (or service time). Job j located on Pi
following:
min[STk  u j / sk  reqC j * di ,k  rspCj * d k ,i ]
Deadline and cost optimization algorithm
computes the service time at processor Pk

(2)
from the


Through the analysis, we can derive that strategy of buyya had not integrate time and cost, which request by most jobs in I-Glouds environment. To settle this problem, we provide Deadline and cost optimization strategy which place a relative preference of time over cost at processor, This is given by the equation below
˄ is weight giving relative importance to time˅

min[Ck  a * STk ]
˄3˅

Consikdering two factor of scheduling, this paper provided deadline and cost optimization strategy: when an Clouds resource broker (GRB) request resource, first give the deadline and budget he can endured. The scheduling method arranges new strategy most optimal resource to GRB. In this mechanism, has relation with QoS which user request also has relation with balancing price of different resource. Different resource has different. If service time weight is higher than time, then is smaller than balancing price of job unit.
Contrast to cost optimal and time optimal scheduling, deadline and cost optimization strategy integrate time and cost two different factor based on DBC, which satisfy the complex QoS request of most jobs in grid. The cost of job request should considering many factors, such as CPU, memory, disk, soft, etc [1].
The deadline and cost optimization strategy has three stages; first, create broker request sequence and synthesis cost of resource. Second, filter unmatched records which beyond DBC value. Third, sort resource by increasing synthesis cost, for each resource in order; assign as many jobs as possible to the resource, without exceeding the deadline. Repeat steps until all request are processed.

Algorithm simulations

We construct simulated experiment platform on GridSim. OS is Linux, in experiments, We created 100 jobs, each need 90 seconds, every experiments has 10 processing queue, access cost is 10, 12, 14, 16, 18, 20, 22, 24, 26, 28G$/CPU time. Optimal deadline is every queue has 10 jobs. In our simulation, we select 990 seconds (the optimal deadline plus 10%), 1980 seconds (990*2), 2970 seconds (990*3). We selected three


values for the budget. The highest is 252000 units, which is the amount required to run all jobs on the most expensive queue. Effectively, this allows the scheduler full freedom to schedule over the queues with no consideration for the cost. A budget of 171000 G$ is the budget required to execute 10 jobs on each of the queues. Finally, the lowest budget of 126000 G$ is the budget required to execute 20 jobs on each of the 5 cheapest queues.
From result, we know that contrast to cost optimal and time optimal strategy, Deadline and Cost Optimization Algorithm (STPP) make compromise between time and cost. If selected zero, then STPP is cost optimal strategy. STPP include more QoS factor contrast to cost optimal and time optimal strategy.
We perform both cost and C-T and Deadline and Cost Optimization scheduling experiments with different values of deadline and budget (DBC). The deadline is varied in simulation time from 100 to 3600 in steps of
500. The budget is varied from 5000G$ to 22000 G$ in steps of 1000. From result, we know that contrast to cost optimal and time optimal strategy, Deadline and Cost Optimization Algorithm (DCOA) make compromise between time and cost. If selected zero, then DCOA is cost optimal strategy. DCOA include more QoS factor contrast to cost optimal and time optimal strategy.

Algorithm simulations

We evaluate the three policies discussed earlier to determine their effectiveness in scheduling. Consider the problem of software brokers being used as proxies for the procurement of computational Clouds resources and applications requirement. We investigate a time optimization algorithm cost optimization algorithm, a deadline and cost optimization algorithm that schedules a user application on a divisible auction-based resource allocation systems. It is shown that the structures of the auction allows for a quasilinear characterization of a wide variety of broker tasks and prevent the lying auctioneer.
In the future, we are planning to incorporate resource reservation and different economic models into resource allocation. This allows we contrast the efficiency of different economic models. In addition, we are considering credit evaluation and job preemption and job migration policy that tries to achieve the integrity of market transactions.


References
G. O. Young, “Synthetic structure of industrial plastics (Book style with paper title and editor),” in
Plastics, 2nd ed. vol. 3, J. Peters, Ed. New York: McGraw-Hill, 1964, pp. 15–64.
E. H. Miller, “A note on reflector arrays (Periodical style—Accepted for publication),” IEEE Trans. Antennas Propagat., to be published.
J. Wang, “Fundamentals of erbium-doped fiber amplifiers arrays (Periodical style—Submitted for publication),” IEEE J. Quantum Electron., submitted for publication.
W.-K. Chen, Linear Networks and Systems (Book style). Belmont, CA: Wadsworth, 1993, pp. 123–135.
H. Poor, an Introduction to Signal Detection and Estimation. New York: Springer-Verlag, 1985, ch. 4.
J. Wang, “Fundamentals of erbium-doped fiber amplifiers arrays (Periodical style—Submitted for publication),” IEEE J. Quantum Electron., submitted for publication.
C. J. Kaufman, Rocky Mountain Research Lab., Boulder, CO, private communication, May 1995.
Y. Yorozu, M. Hirano, K. Oka, and Y. Tagawa, “Electron spectroscopy studies on magneto-optical media and plastic substrate interfaces (Translation Journals style),” IEEE Transl. J. Magn.Jpn., vol. 2, Aug. 1987,
pp. 740–741 [Dig. 9th Annul. Conf. Magnetics Japan, 1982, p. 301].
M. Young, The Technical Writers Handbook. Mill Valley, CA: University Science, 1989.
J. U. Duncombe, “Infrared navigation—Part I: An assessment of feasibility (Periodical style),” IEEE


Trans. Electron Devices, vol. ED-11, pp. 34–39, Jan. 1959.
S. Chen, B. Mulgrew, and P. M. Grant, A clustering technique for digital communications channel Equalization using radial basis function networks,” IEEE Trans. Neural Networks, vol. 4, pp. 570–578, July 1993.
