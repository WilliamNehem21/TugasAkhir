Available online at www.sciencedirect.com
ScienceDirect

AASRI Procedia 8 (2014) 30 – 37


2014 AASRI Conference on Sports Engineering and Computer Science (SECS 2014)
Online Multi-player Tracking in Monocular Soccer Videos
Michael Herrmanna,*, Martin Hoerniga, Bernd Radiga
aTechnische Universität München, Image Understanding and Knowledge-Based Systems, Boltzmannstr. 3, D-85748 Garching, Germany




Abstract

The tracking of players in monocular soccer videos is a challenging task because of numerous difficulties that can occur especially in TV broadcasts, such as camera motions, severe occlusion of players, or inhomogeneous lightning conditions. We propose a new robust method for multi-player tracking, which is based on finding local maxima on a confidence map. This map represents an ensemble of visual evidences, such as colors of the team outfits, responses of a HOG human detector, and grass regions in images. This combination of features allows for a robust online tracking procedure that does not require any further information about the camera calibration or other user input. In the evaluation using four representative datasets, our algorithm shows remarkable accuracy and outperforms a state-of-the-art pedestrian tracker.

© 2014 The Authors. Published by Elsevier B. V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/3.0/).
Peer-review under responsibility of Scientific Committee of American Applied Science Research Institute
Keywords: computer vision, soccer analysis, player tracking


Introduction

We aim to develop a system for an automatic analysis of soccer matches that extracts match statistics and performs tactical analysis from monocular recordings, such as TV broadcasts, which usually exhibit numerous difficulties. One important task of such a system is the 2D tracking of players in the video images. For this purpose, we propose a new robust unsupervised online method that provides three main contributions:



* Corresponding author. Tel.: +49-89-289-17779; fax: +49-89-289-17757.
E-mail address: michael.herrmann@tum.de








2212-6716 © 2014 The Authors. Published by Elsevier B. V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/3.0/).
Peer-review under responsibility of Scientific Committee of American Applied Science Research Institute doi:10.1016/j.aasri.2014.08.006


			
Figure 1: From left to right: original image, segmentation results, confidence map, and detection results (with confidence values).

An observation model that is based on a combination of soccer-specific features (grass color), match- specific features (colors of team outfits), and universal features (HOG detector) resulting in a robust confidence map for player positions (see sections 2 and 3 and Figure 1).
An efficient measurement model that finds optimal locations on a confidence map starting at predicted positions of single-target Kalman filters [1] (see section 4).
An efficient player detection, avoiding time-consuming tracking-by-detection (see section 4).
In human tracking, the tracking-by-detection approach is widely used for multi-target tracking (see i.e. [2], [3]). Human detectors often show low accuracy and poor computational performance for small objects, while in soccer videos, especially in low-resolution records and wide-angle scenes, player heights of 40 pixels and less are quite common. In contrast, kernel-based approaches, such as the mean-shift tracking [4], often require an initialization of the templates and risk drifting away, due to object-specific template adaption.
Zhang et al. [5] proposed an online method with a combination of tracking-by-detection and kernel-based tracking and achieved state-of-the-art results using standard pedestrian tracking data sets.
In principle, our approach is similar, but we use soccer-specific knowledge to automatically detect players without an exhaustive sliding-window approach. Our observation model is partially based on the ideas of ASPOGAMO [6], but incorporates more universal features, such as the HOG detector, and does not need any human-guided initialization. It is similar to the method proposed by [7], which is, however, a stand-alone player detection and does not incorporate tracking information over time.

Preliminaries

Player positions. In our approach, the position of a player 𝑝𝑖 is modeled within an image 𝐼𝑡 at time 𝑡 using an axis-aligned bounding box 𝐵𝑖 ≔ {(𝑥, 𝑦) ∈ ℕ2 | (𝑥𝑖 ≤ 𝑥 < 𝑥𝑖 + w𝑖) 𝖠 (𝑦𝑖 ≤ 𝑦 < 𝑦𝑖 + ℎ𝑖)}, where (𝑥𝑖, 𝑦𝑖) is the upper-left corner and w𝑖 and ℎ𝑖 are width and height, respectively. A bounding box describes the extent of a player in the image and in our method the aspect ratio is fixed to w𝑖 ≔ 0.41ℎ𝑖 (see [8]).
Player segmentation. Our confidence map is based on segmented player regions in the image and we use a robust grass segmentation method following [9]. This procedure takes as input a RGB image 𝐼𝑡 at time 𝑡 and returns an image region 𝐻𝑡, describing the enclosing hull of the playing field, and a foreground region 𝐹𝑡, which, under ideal circumstances, covers the image region of all players in the visible part of the playing field


(see Figure 1). Due to noise and movement artifacts usually not all players are segmented properly, whereas parts of other foreground objects, such as field lines, can be included.
Unsupervised generation of color templates. According to the FIFA rules [10], the colors of the jerseys have to be chosen so that the players from different teams, the referees, and the goal keepers are all pairwise distinguishable. We make use of this fact by initially determining color templates for each type of outfit, based on color histograms.
Given the first frame 𝐼0 of a video sequence, our automatic detection procedure (see section 5) returns
player positions represented by a set of 𝑛0 bounding boxes 𝐵0 ≔ {𝐵0,… , 𝐵0 }. We extract the set of RGB
1	𝑛0
color vectors of 𝐼0 for the pixels within (𝐵0 ∪ … ∪ 𝐵0 ) ∩ 𝐹0 and cluster this set by applying the k-means++
1	𝑛0
algorithm [11] using the Euclidean distance. The cluster centers are the 𝑘𝐶 dominant color vectors that represent the 𝑘𝐶 bins of our color histograms. A color vector is assigned to the bin that is represented by the
nearest dominant color. We divide each bounding box 𝐵0 to its equal-sized top, mid, and bottom parts 𝑇𝐵0,
𝑖	𝑖
𝑀𝐵0, and 𝐵𝐵0 and calculate three histograms with respect to 𝑇𝐵0 ∩ 𝐹0, 𝑀𝐵0 ∩ 𝐹0, and 𝐵𝐵0 ∩ 𝐹0. This takes
𝑖	𝑖	𝑖	𝑖	𝑖
into account that a player’s outfit changes from top to bottom, regarding jersey, shorts and socks. Stacking and normalizing result in a feature unit vector with 3𝑘𝐶 entries for each bounding box.
To calculate the distance of two normalized histogram vectors ℎ1 and ℎ2, we use the Hellinger distance as
proposed by [4] and define 𝑑 (ℎ , ℎ ) ≔ √𝑑2 (ℎ , ℎ ) with 𝑑2 (ℎ , ℎ ) ∶= 1 − Σ3k𝐶√ℎ (𝑖)ℎ (𝑖).

𝐻	1	2
𝐻	1	2
𝐻	1	2
𝑖=1	1	2

We try to estimate the number of different outfits among the given bounding boxes by clustering the set of histogram vectors using k-means++ with 𝑘 = 1, … , 5 (there are five different possible outfits: 2 x players, 2 x goalkeepers, 1 x referees) using the distance 𝑑𝐻. We choose 𝑘𝑚𝑖𝑛 as the smallest 𝑘 for which the result of the
clustering fulfills our decision criterion: for a given set of 𝑙 histogram vectors ℎ1,…, ℎ𝑙 and their 𝑘 cluster
centers 𝑜1,…, 𝑜k, each vector ℎ𝑖 is assigned to its cluster center 𝑜(ℎ𝑖) and we define the minimum distance as
𝑑𝑚𝑖𝑛 ∶= mini𝑑𝐻(ℎ𝑖, 𝑜(ℎ𝑖)) and the maximum distance as 𝑑𝑚𝑎𝑥 ∶= maxi𝑑𝐻(ℎ𝑖, 𝑜(ℎ𝑖)). With the threshold parameters 𝑡𝑚𝑖𝑛 and 𝑡𝑚𝑎𝑥 , our decision criterion is (𝑑𝑚𝑖𝑛 ≤ 𝑡𝑚𝑖𝑛 ) 𝖠 (𝑑𝑚𝑎𝑥 ≤ 𝑡𝑚𝑎𝑥 ). During tracking each tracked bounding box is assigned to the outfit class with nearest distance 𝑑𝐵 at the moment of detection.
HOG-based human detection. We trained a human detector based on histograms of oriented gradients (HOG) according to [12] with some slight modifications to their default detector. We use a 64×128 pixels detection window with a human size of 41×100 pixels (see [8]). To allow for an efficient calculation, we do not apply a Gaussian spatial window during the accumulation of the histograms. To avoid soccer-specific overfitting, the classifier is trained using the INRIA pedestrian data set [12].

Confidence map for player positions

We construct a function that describes a degree of quality of the image evidence 𝐼𝑡, given a set 𝐵𝑡 ≔
{𝐵𝑡 ,… , 𝐵𝑡 } of bounding boxes at time 𝑡. We assign each bounding box 𝐵𝑡 ∈ 𝐵𝑡 to the connected component
1	𝑛𝑡	𝑖
of the foreground 𝐹𝑡 with the greatest overlap. If 𝐵𝑡 ∩ 𝐹𝑡 = ∅, we assign 𝐵𝑡 to an empty region. Hence, the
𝑖	𝑖
result is a set of image regions 𝑆𝑡 ≔ {𝑅𝑡 ,… , 𝑅𝑡 }, where each 𝑅𝑡 ∈ 𝑆𝑡 has a set of assigned bounding boxes
1	𝑚𝑡	j
j𝐵˜𝑡 ≔ {j𝐵˜𝑡 ,… , j𝐵˜𝑡 } . In the following, fractions are only calculated if the denominator is not zero.
1	𝑛𝑅
Otherwise, they are omitted. We perform all calculations for each region 𝑅𝑡 and its assigned bounding boxes


independently. For the purpose of clearness we omit the index j and set 𝑛𝑅 ≔ 𝑛(𝑅𝑡) ∈ ℕ ∖ {0}. In most cases
𝑛𝑅 = 1. Cases with 𝑛𝑅 > 1 occur for example if one player is partly occluded by another player in the image.
Region-based evidence. Our region-based features are inspired by the compactness constraint and the size constraint of [6] and are based on the assumption that an image region of one or more players should be fully covered by bounding boxes. The coverage feature 𝑐1 describes the degree of coverage of the connected component 𝑅𝑡 by the union of the bounding boxes and is defined as
𝑐1(𝐵˜𝑡 ,… , 𝐵˜𝑡 , 𝑅𝑡) ≔ area((𝐵˜𝑡 ∪ … ∪ 𝐵˜𝑡 ) ∩ 𝑅𝑡) /area(𝑅𝑡).
1	𝑛𝑅	1	𝑛𝑅
The over-coverage feature 𝑐2 penalizes regions inside the bounding boxes that are not covered by the foreground region. To favor positions where 𝑅𝑡 is evenly spread along the horizontal axis, each bounding box
𝐵˜𝑡 is divided to the upper half 𝑢𝐵˜𝑡 and the lower half 𝑙𝐵˜𝑡 and we define
𝑖	𝑖	𝑖
𝑐2(𝐵˜𝑡 ,… , 𝐵˜𝑡 , 𝑅𝑡) ≔ 1 − max max { } area(𝑜𝐵˜𝑡\𝑅𝑡)/area(𝑜𝐵˜𝑡).

1	𝑛𝑅
i	o∈ u,l	𝑖	𝑖

The overlap feature 𝑐3 takes into account that in general the bounding boxes of two players do not fully overlap (except in the rare case of full occlusion). It is defined as

𝑐3(𝐵˜𝑡 ,… , 𝐵˜𝑡 , 𝑅𝑡) ≔ 1 − max area(𝐵˜𝑡 ∩ 𝐵˜𝑡)/area(𝐵˜𝑡 ∪ 𝐵˜𝑡).

1	𝑛𝑅
i,j
𝑖	j
𝑖	j

Color-based evidence. The color-based confidence 𝑐4 is based on the dominant colors and the outfit classes (see section 2). The normalized color histogram vector ℎ(𝐵˜𝑡) ∈ ℝ3k𝐶 is calculated with respect to
𝐵˜𝑡 ∩ 𝑅𝑡. We set 𝑅𝑡 ∶= 𝑅𝑡, if area(𝑅𝑡) > 0. Otherwise, 𝑅𝑡 is the largest axis-aligned inner ellipse of 𝐵˜𝑡. Each
𝑖	𝑐	𝑐	𝑐	𝑖
bounding box has an assigned outfit class with histogram vector 𝑜(𝐵˜𝑡) ∈ ℝ3k𝐶 and we define



˜𝑡
˜𝑡	𝑡
𝑛𝑅
𝑛𝑅
˜𝑡
˜𝑡

𝑐4(𝐵1,… , 𝐵𝑛𝑅, 𝑅 ) ≔ 1 −  √П𝑖=1𝑑𝐻 (ℎ(𝐵𝑖 ), 𝑜(𝐵𝑖)).

HOG-based evidence. We use a human detector, trained as described in section 2. A resized sub-image with size of 64×128 pixels is generated for each bounding box 𝐵˜𝑡, so that the height of the bounding box corresponds to 100 pixels in the sub-image, the sub-image has the same center point as the bounding box, and the aspect ratio of the pixels remains unchanged. This sub-image is used to perform a classification of the human detector. The result of the classifier is a decision value 𝑑𝐷(𝐵˜𝑡) ∈ ℝ, which is mapped using the
parameters 𝑢𝐷 and 𝑣𝐷 to 𝑑′ (𝐵˜𝑡|𝑢𝐷 , 𝑣𝐷) ≔ (𝑑𝐷(𝐵˜𝑡) − 𝑢𝐷 )/(𝑣𝐷 − 𝑢𝐷 ). The confidence is defined by the

geometric mean
𝐷	𝑖	𝑖




𝑐 (𝐵˜𝑡 ,… , 𝐵˜𝑡 , 𝑅𝑡|𝑢
, 𝑣
) ≔ 𝑛𝑅 П𝑛𝑅 max (1, min(0, 𝑑′ (𝐵˜𝑡|
, 𝑣
)).

5	1	𝑛𝑅
𝐷	𝐷
√ 𝑖=1
𝐷	𝑖	𝐷	𝐷


Gating. During tracking we additionally incorporate a gating term, based on the distance to the predicted location of the tracker (if available). For each bounding box 𝐵˜𝑡, we calculate the Euclidean distance of its center point to the center point of the corresponding predicted bounding box 𝑃˜𝑡, normalized by the length of


the diagonal of 𝑃˜𝑡 and trimmed to a maximum value of 1. The gating confidence 𝑐6 is defined by one minus the mean distance of the bounding boxes 𝐵˜𝑡 ,… , 𝐵˜𝑡  and their corresponding predictions.
1	𝑛𝑅
Ensemble averaging. The single features 𝑐𝑖 , 𝑖 ∈ {1, … 6} are combined by weighted ensemble averaging using the weights w𝑖, 𝑖 ∈ {1, … 6}, resulting in the overall confidence function 𝑐(𝐵˜𝑡 ,…, 𝐵˜𝑡 , 𝑅𝑡), which we

define as follows:
1	𝑛𝑅

𝑐(𝐵˜𝑡 ,… , 𝐵˜𝑡 , 𝑅𝑡) ≔ Zw 𝑐 (𝐵˜𝑡 ,… , 𝐵˜𝑡 , 𝑅𝑡)/Zw .

1	𝑛𝑅
𝑖 𝑖	1
𝑛𝑅	𝑖

Note that 𝑐(𝐵˜𝑡 ,… , 𝐵˜𝑡 , 𝑅𝑡) ∈ [0; 1] because ∀𝑖: 𝑐 (𝐵˜𝑡 ,…, 𝐵˜𝑡 , 𝑅𝑡) ∈ [0; 1]. For 𝑅𝑡 = ∅, we set w ≔ 0 and

1	𝑛𝑅
𝑖	1
𝑛𝑅	1

w2 ≔ 0 and if there is only one object (𝑛𝑅 = 1), we omit the overlap feature and set w3 ≔ 0.
Maximization of the confidence. For every new time step, we search for positions with a local maximum on the confidence map near the Kalman predictions. To keep the number of calculations low, we propose a simple greedy heuristic: we iteratively optimize the confidence with respect to the positions of the bounding boxes, while their sizes and the region 𝑅𝑡 remain fixed, thus for 𝑛𝑡 bounding boxes, we have 2𝑛𝑡 variables. In
each iteration of the maximization procedure, we evaluate the confidence map at 2𝑛𝑡 +1 positions near the
current position and determine the position with the highest confidence value. If this value is higher than the value at the current position, the iteration continues, starting at the best position. Otherwise, the iteration stops with the current position as the result. Usually, our efficient greedy approach stops after 2-3 iterations and shows, however, satisfactory results.
The 2𝑛𝑡 +1 positions in the neighborhood arise as follows: first the gradient of 𝑐 is approximated using a finite forward difference (with step size Δ𝑥 ≔ 8), which results in 2𝑛𝑡 evaluations of the confidence map (instead of 4𝑛𝑡 using central difference). Then one step (likewise with step size Δ𝑥) in the direction of the gradient is taken for the remaining evaluation.
Measurement of object size. Mainly due to perspective projection the size of a player in the image depends on the image position. To enforce consistency, we normalize the sizes of the predicted bounding boxes before the maximization step. For this purpose, we fit a linear model using a least-squares approach, where the height ℎ is the dependent and the coordinate 𝑦 is the independent variable. Afterwards, the height of each bounding box is adapted according to this model and the width is determined by w ≔ 0.41ℎ (see [8]).
After the maximization step, for each bounding box 𝐵˜𝑡 we iterate several steps of scale with respect to the
original size and take the size with the best confidence value 𝑐𝑏𝑒𝑠𝑡 as a resulting measurement, which results in the final measurement quality 𝑞(𝐵˜𝑡) ≔ 𝑐𝑏𝑒𝑠𝑡 .

Player tracking

We perform multi-target tracking by applying a single-target Kalman filter [1] for each tracked bounding box. A new measurement is generated by an optimization step with respect to the confidence map using the Kalman prediction as the starting position. The detection of new and lost targets is performed with the help of deterministic heuristics, which are guided by the confidence map.
State  and  measurement  model.  The  state  of  player  𝑝𝑖  is  represented  by  a  six-tuple
𝑜𝑖 ≔ (𝑥𝑖 𝑦𝑖 𝑥˙𝑖 𝑦˙𝑖 w𝑖 ℎ𝑖)𝑇, where 𝑥𝑖, 𝑦𝑖, w𝑖, and ℎ𝑖 are the parameters of the bounding box, and 𝑥˙𝑖 and 𝑦˙𝑖 are the velocity in 𝑥 and 𝑦, respectively. We apply a constant size and constant velocity model. Thus, the changes


in size and the acceleration of the objects are implicitly modeled by the process noise. Measurements are performed for the position and the size variables.
Loss and detection of players during tracking. During tracking a tracked bounding box 𝐵𝑡 is removed if its measurement quality 𝑞(𝐵𝑡) is below a threshold 𝑡𝑙𝑜𝑠𝑠 in two frames in a row or if it has a significant overlap with another tracked bounding box (with higher measurement quality) in more than four frames in a 
row.
In return, connected components that fulfill some size constraints according to the linear size model are considered as single player candidates and for these positions the confidence map is evaluated and maximized. Single player candidates that have a measurement quality 𝑞(𝐵𝑡) greater than or equal to a threshold 𝑡𝑑𝑒𝑡𝑒𝑐𝑡 in two frames in a row are added to the tracked bounding boxes.
Initial player detection. For the initial player detection, we select connected components of the
foreground region 𝐹0 with an appropriate orientation and aspect ratio as single player candidates. In the neighborhood of each candidate, we perform a sliding-window human detection with a scale space which depends on the size of the candidate region. The positive detections are used to fit our linear size model. The human detection is repeated in the neighborhood of all connected components of 𝐹0 with a restricted scale space depending on the position of the region in the image. Again, the positive detections are used to fit the size model and to estimate the team histograms (see section 2). These detections are the starting point for the first maximization step resulting in the initial player positions.

Implementation details and evaluation results

In our implementation we set the number of dominant colors 𝑘𝐶 ≔ 64 as an estimated upper bound for five outfits with each three four-colored parts (jersey, short, socks). The other parameters are determined
empirically and set as follows: 𝑡𝑚𝑖𝑛 ≔ 0.1 , 𝑡𝑚𝑎𝑥 ≔ 0.25 , 𝑢𝐷 ≔ −4 , 𝑣𝐷 ≔ 0.5, w1 ≔ 0.75 , w2 ≔ 0.4 ,
w3 ≔ 0.05, w4 ≔ 1.0, w5 ≔ 0.5, w6 ≔ 0.05, 𝑡𝑙𝑜𝑠𝑠 ≔ 0.35, and 𝑡𝑑𝑒𝑡𝑒𝑐𝑡 ∶= 0.7. We evaluate our system with the help of MOTA and MOTP [13] and use manually annotated ground truth of the following video sequences:
German – Holland, TV broadcast, SD, 37s, 925 frames (GH)
Bayern Munich – OSC Lille, TV broadcast, HD, 15s, 752 frames (BL)
ISSIA-CNR Camera 3, static camera, Full-HD, 120s, 3000 frames, online available [14] (ISSIA)
VS-PETS Camera 3 Test, static camera, 720×576, 100s, 2500 frames, online available [15] (VS)
Ground-truth and tracked bounding boxes are fixed to an aspect ratio 0.41:1 as proposed in [8]. Some annotated targets that are outside the field (like coaches and linesman), as well as ground-truth bounding boxes that are cropped by the image boundaries, are added to an ignore list, i.e. they don’t need to be matched, but it is not an error if they are matched.
Our baseline is the publicly available tracker of Zhang et al. [5], which achieves state-of-the-art tracking results on pedestrian tracking datasets. We used the standard parameter values which come with the source code, except the HOG_DETECT_FRAME_RATIO, which we set to 2 for BL and ISSIA, and to 3 for GH and VS allowing to detect small players. As the detector of this tracking procedure generates a lot of false positive detections in the audience area, we ignore all its tracked objects outside our field hull 𝐻𝑡 at time 𝑡.



			


Figure 2: MOTA (top row) and MOTP (bottom row) results (in dependence of the overlap threshold) of the proposed tracking procedure in comparison with the procedure of Zhang et al. [5]. Results are given for each data set (GH, BL, ISSIA, VS) from left to right.


Figure 2 shows the comparison of the MOTA / MOTP of our proposed tracking procedure and the procedure of Zhang et al. depending on the overlap threshold for the assignment of the tracked bounding boxes to the ground truth. Our system achieves satisfactory MOTA scores for the standard overlap threshold of 0.5. With increasing overlap threshold, the accuracy becomes remarkable (up to 0.9 and more). In all cases, our results outperform the results of the baseline. Our non-optimized implementation processes about 1-2 frames per second on an Intel Core2 Quad Q9650. Because of its highly parallel structure, we believe that a near real-time performance could be possible. In contrast, the method of Zhang et al. processes 0.1 frames per second.
We provide a publicly available visualization of our tracking results for ISSIA and VS (see [16] and [17]).

Conclusion

We proposed an unsupervised online 2D tracking procedure for players in monocular soccer videos that applies an efficient determination of local maxima in a confidence map. This map is based on a robust combination of soccer-specific (grass color), match-specific (team outfit colors) and general (HOG detector) image features. Avoiding a time-consuming sliding-window approach our system allows for a fast player tracking that in addition does not require any further input, such as user input or camera parameters. Our tracking results achieve high accuracy and outperform a state-of-the-art pedestrian tracker.


Acknowledgements

The funding for this research was provided by German Research Foundation (DFG) grant no. RA359/12-1.

References

R. E. Kalman, “A New Approach to Linear Filtering and Prediction Problems.,” Transactions of the ASME - Journal of Basic Engineering, vol. 82, no. 1, pp. 35–45, Mar. 1960.


M. D. Breitenstein, F. Reichlin, B. Leibe, E. Koller-Meier, and L. Van Gool, “Online Multiperson Tracking-by-Detection from a Single, Uncalibrated Camera,” IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 33, no. 9, pp. 1820–1833, Sep. 2011.
H. Izadinia, I. Saleemi, W. Li, and M. Shah, “(MP)2T: Multiple People Multiple Parts Tracker,” in
Computer Vision – ECCV 2012, vol. 7577, Berlin, Heidelberg: Springer, 2012, pp. 100–114.
D. Comaniciu, V. Ramesh, and P. Meer, “Kernel-based Object Tracking,” IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 25, no. 5, pp. 564–577, May 2003.
J. Zhang, L. L. Presti, and S. Sclaroff, “Online Multi-person Tracking by Tracker Hierarchy,” in IEEE 9th International Conference on Advanced Video and Signal-Based Surveillance, 2012, pp. 379–385.
M. Beetz, S. Gedikli, J. Bandouch, B. Kirchlechner, N. von Hoyningen-Huene, and A. C. P. Perzylo, “Visually Tracking Football Games Based on TV Broadcasts,” in 20th International Joint Conference on Artificial Intelligence, 2007, pp. 2066–2071.
S. Gerke, S. Singh, A. Linnemann, and P. Ndjiki-Nya, “Unsupervised Color Classifier Training for Soccer Player Detection,” in Visual Communications and Image Processing, 2013, pp. 1–5.
P. Dollar, C. Wojek, B. Schiele, and P. Perona, “Pedestrian Detection: An Evaluation of the State of the Art,” IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, no. 4, pp. 743–761, Apr. 2012.
M. Hoernig, M. Herrmann, and B. Radig, “Real Time Soccer Field Analysis from Monocular TV Video Data,” in 11th International Conference on Pattern Recognition and Image Analysis (PRIA-11-2013), Samara, 2013, vol. 2, pp. 567–570.
FIFA, “Laws of the Game,” 2014. [Online]. Available: http://www.fifa.com/aboutfifa/footballdevelopment/technicalsupport/refereeing/laws-of-the-game/. [Accessed: 30-Apr-2014].
D. Arthur and S. Vassilvitskii, “k-means++: the Advantages of Careful Seeding,” in 18th annual ACM- SIAM symposium on Discrete algorithms, Philadelphia, PA, USA, 2007, pp. 1027–1035.
N. Dalal and B. Triggs, “Histograms of Oriented Gradients for Human Detection,” in IEEE Conference on Computer Vision and Pattern Recognition (CVPR 2005), 2005, vol. 1, pp. 886–893.
K. Bernardin and R. Stiefelhagen, “Evaluating Multiple Object Tracking Performance: The CLEAR MOT Metrics,” EURASIP Journal on Image and Video Processing, vol. 2008, pp. 1–10, May 2008.
T. D’Orazio, M. Leo, N. Mosca, P. Spagnolo, and P. L. Mazzeo, “A Semi-automatic System for Ground Truth Generation of Soccer Video Sequences,” in 6th IEEE International Conference on Advanced Video and Signal Based Surveillance, 2009, pp. 559–564.
University of Reading, “VS-PETS Football Dataset,” Third IEEE International Workshop on Visual Surveillance and Performance Evaluation of Tracking and Surveillance, 2002. [Online]. Available: http://www.cvg.reading.ac.uk/VSPETS/vspets-db.html. [Accessed: 30-Apr-2014].
M. Herrmann, M. Hoernig, and B. Radig, “Player Tracking Results ISSIA-CNR,” 2014. [Online]. Available: http://www.youtube.com/watch?v=L9t7ei6gAjk. [Accessed: 30-Apr-2014].
M. Herrmann, M. Hoernig, and B. Radig, “Player Tracking Results VS-PETS,” 2014. [Online]. Available: http://www.youtube.com/watch?v=SL1LjRAbPgI. [Accessed: 30-Apr-2014].
