Artificial Intelligence in the Life Sciences 1 (2021) 100025

		


Methods & Protocols
OmicInt package: Exploring omics data and regulatory networks using integrative analyses and machine learning
Auste Kanapeckaite a,b
a Algorithm379, Laisvƒós g. 7, Vilnius, Lithuania
b University of Reading, School of Pharmacy, Hopkins Building, Reading RG6 6UB United Kingdom


a r t i c l e	i n f o	a b s t r a c t

	

Keywords:
Machine learning Gaussian mixture models Omics analyses Epigenomics
Gene networks
OmicInt is an R software package developed for a user-friendly and in-depth exploration of significantly changed genes, gene expression patterns, and the associated epigenetic features as well as the related miRNA environment. In addition, OmicInt offers single cell RNA-seq and proteomics data integration to elucidate specific expression profiles. To achieve this, OmicInt builds on a novel scoring function capturing expression and pathology associa- tions. The developed scoring function together with the implemented Gaussian mixture modelling pipline helps to explore genes and the linked interactome networks. The machine learning pipeline was designed to make the analyses straightforward for the non-experts so that researchers could take advantage of advanced analytics for their data evaluation. Additional functionalities, such as protein type and cellular location classification, provide useful assessments of the key interactors. The introduced package can aid in studying specific gene networks, understanding cellular perturbation events, and exploring interactions that might not be easily detectable other- wise. Thus, this robust set of bioinformatics tools can be very beneficial in drug discovery and target evaluation. OmicInt is designed to be freely accessible to involve a larger bioinformatics community and continuously improve the developed algorithmic methods.





Introduction

OmicInt is an R software package developed for an in-depth explo- ration of significantly changed genes, gene expression patterns, and the associated epigenetic features as well as the related miRNA environ- ment. The package helps to assess gene clusters based on their known in- teractors (proteome level) using several different resources, e.g., UniProt and STRING DB [1‚Äì3]. Moreover, OmicInt provides an easy Gaussian mixture modelling [4‚Äì6] pipeline for an integrative analysis that can be used by a non-expert to explore gene expression data. Specifically, the package builds on a previously developed method to explore gene networks using significantly changed genes, their log-fold-change val- ues (LFC), and the predicted interactome complexity [5]. This approach can aid in studying specific gene networks, understanding cellular per- turbation events, and exploring interactions that might not be easily detectable otherwise [5]. To this end, the package offers many different utilities to help researchers quickly explore their data in a user-friendly way where machine learning is made easily accessible to non-experts (Figs. 1 and 2). It is also important to highlight that the lack of freely available tools to explore complex expressome data motivated the cre- ation of this set of tools. For example, commercial solutions, such as Clarivate analytics [7], are almost inaccessible to individual users be- cause of the very expensive software. Freely available tools, namely

E-mail address: auste.kan@algorithm379.com
GeneMANIA or Cytoscape platforms [8‚Äì11], while very useful, do not permit machine learning applications or complex regulome integration. Thus, seeing the existing need for omics dedicated tools that could evolve as more bioinformaticians get involved encouraged creating the OmicInt package.
Machine learning which offer effective methods to assess multi- dimensional biological data is also a very important part of the devel- oped package. For the purpose of biological data evaluation, Gaussian mixture models (GMMs) were selected as they employ a probability based classification where each data point assignment has a different probability of belonging to one of the clusters [4‚Äì6]. The probabilistic nature of GMM relies on the assumption that the data can be explained by a finite mixture of Gaussian distributions with unknown parameters [4]. As a result, this is a soft classification method that is more suit- able to assess biological parameters in comparison to hard classification techniques (e.g., k-means) [4‚Äì6]. This is because gene or protein inter- action networks are dynamic systems and probabilistic feature separa- tion allows for more flexibility in defining boundaries between groups [5]. Moreover, the extracted probability values can be incorporated into other analytical pipelines to further refine the data. The developed GMM pipeline automates the assessment of the information criterion to opti- mise the number of clusters for modelling and also predicts the best suited model for the expectation-maximisation (EM) algorithm which


https://doi.org/10.1016/j.ailsci.2021.100025
Received 25 November 2021; Accepted 26 November 2021
Available online 11 December 2021
2667-3185/¬© 2021 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/)




Fig. 1. Examples for the required data formats which include the normalised gene expression values, log fold change (LFC) values, and the meta data file.


Fig. 2. Schematic representation of package functions and specific analyses.


helps to maximise the likelihood of data point assignments [4,12]. As a result, the users do not need to have an extensive knowledge to fine-tune their GMM parameters as the process is streamlined for them.
The key analytical parameter in the machine learning pipeline and exploratory analyses is a specific score, namely LFCscore , which can have a different derivation depending on the selected parameters Eqs. (1)‚Äì
(3). The user has several options to select from since the equations were expanded with additional data based on the earlier derivation of
the multi-omics Eq. (5). The score ùõº values are downloaded automati-
cally from curated database images which were generated via text min-
ing to retrieve, update, and integrate data in an easier-to-use format (i.e., database image) for the analyses. Databases used include Disgenet,



Uniprot, and STRING DB [1,3,13]. For example, ùõºasoc score allows to in-
fer how strongly a gene is linked to a disease or pathological phenotype
Similarly, ùõºspec captures how specific a gene is when describing the ranging from 0 (no link) to 1 (the strongest association) Eq. (1) [13].
pathology Eq. (2) [13]. Association scores are based on different curated resources as described earlier [13]. The user can choose from different types of scores (‚Äúassociation_score‚Äù, ‚Äúspecificity_score‚Äù, or the geomet- ric mean of both) when selecting the type of the equation for LFCscore .
Scores ùõΩcell and ùõæprot are the scaled values for single cell and proteome
data, respectively. That is, ùõΩcell has to be provided by the user if they
have such experimental information integrated where a gene value from
a single cell data cluster is extracted using a pseudo-bulk differential gene expression approach. The LFC scores from pseudo-bulk data need to be scaled according to the Eq. (4). The same approach should be ap-
plied when calculating ùõæprot for protein (corresponding gene) values.
LFCscore = LFC 1 + Œ±asoc + Œ≤cell + Œ≥prot	(1) LFCscore equation where LFC - Log Fold Change, base 2; ùõºasoc - a disease association score; ùõΩcell - scaled single cell LFC; ùõæprot - scaled proteome
LFC.
LFCscore = LFC 1 + Œ±spec + Œ≤cell + Œ≥prot	(2) LFCscore equation where LFC - Log Fold Change, base 2; ùõºspec - a disease specificity score; ùõΩcell - scaled single cell LFC; ùõæprot - scaled proteome
LFC.
Results

Data preprocessing

Before starting the analysis the user must ensure that the supplied data is in the right format. There are several different options to prepare a data frame (CSV format) that contains all the relevant experimental information Fig. 1; Eqs. (1)‚Äì(4). Depending on the selection, the down- stream analyses will provide interactive graphs and maps (Fig. 2). Con- sistent data preparation and integration allow for a stable processing workflow which enables an eÔ¨Écient organisation of data sets.
Data pre-processing relies on the score_genes function that collects data from the STRING database and other disease association data sets to scale and prepare additional score integration [3,13]. Several key pa- rameters should be provided; the data parameter requires a data frame containing gene names as row names and a column with LFC values.
The example is provided in Fig. 1; the parameter alpha (ùõº) has a default
value set as ‚Äúassociation‚Äù which gives a score from 0 to 1 based on how
strongly a gene is associated with a pathological phenotype; other op- tions are ‚Äúspecificity‚Äù - to give values based on how specific a gene is when describing a disease and ‚Äúgeometric‚Äù - to give a geometric mean
score of both association and specificity. The ùõº score is calculated au-
tomatically for the genes in the data set. In addition, it is possible to
add weighted single cell and proteomics data by selecting additional parameters. The parameter beta is set to have a default value as FALSE;

LFC
score
= LFC(1 + ‚àö(ùõºsoc
ùõºspec
) + Œ≤cell
+ Œ≥prot
)	(3)
if TRUE, the user needs to supply data with a column beta that contains information on gene associations from single cell studies. Similarly, pa-

LFC

score
equation where LFC - Log Fold Change, base 2; ùõº
asoc
and ùõº
spec
rameter gamma has a default value FALSE; if TRUE, the user is required
to supply data with a column gamma that contains information on gene

are integrated using a geometric average score; ùõΩcell - scaled single cell
LFC; ùõæprot - scaled proteome LFC.
LFCscaled = LFCgene ‚àïLFCmedian	(4)
ùõΩcell or ùõæprot scaling example where LFCgene - a gene specific value and
LFCmedian - a median value for all available LFC values per specific con- dition and gene set.
OmicInt provides many other valuable tools to map the interac- tome using information on the target cellular location or protein class/function type. In addition, density functions allow for an exhaus- tive assessment of gene distributions which may hint at potential func- tions or dominant processes within a specific condition. Epigenetic fea- ture (CpG islands, GC%) and miRNA exploration tools also provide ad- ditional information on the epigenome and non-coding regulome which might be relevant for some genes and conditions, especially if a higher enrichment of these patterns can be found. Currently, the analyses are only available for human data sets. The software package is freely dis- tributed via Github and CRAN repositories to make the analyses acces- sible to researchers [14,15]. Github environment also provides oppor- tunities to submit requests or suggestions and participate in further al- gorithm development [14].
Methods

OmicInt package architecture (Fig. 2) is divided into gene expression, gene cluster/pattern, and epigenetic feature/regulatory network analy- sis with a detailed vignette to guide the user [14,15]. Machine learning pipeline is based on Gaussian mixture models which is designed to in- clude the optimal cluster number (Bayesian information criterion), auto- matic model fitting during the expectation maximisation phase of clus- tering, model-based hierarchical clustering, as well as density estimation and discriminant analysis [4,12]. The package enables advanced options to perform a user-specified clustering to use the data in other workflows. OmicInt also retrieves data from multiple databases by generating com- bined and curated database images for easier use [1,3,13]. The pack- age was built using functional programming principles and the analyses were benchmarked using the following studies distributed via NCBI GEO database [16]: GSE160145, GSE3585, GSE26887, and GSE116250.
associations from proteome studies. The function returns a data frame for the downstream analyses.


Exploratory analyses

Function density_plot plots a density plot for gene expression data prepared by the score_genes function. The plots can be used for a quick assessment and summarisation of the overall parameters (Fig. 3). Specif- ically, the plots allow the evaluation of how key parameters, such as LFC, LFCscore , and disease association or specificity scores, associate with the highest frequency protein classes and cellular locations. For example, the most frequent protein classes may have specific distribution patterns hinting at predominant cellular processes. Similarly, examining distri- butions for cellular locations might highlight the most involved and/or affected cellular strictures.





Fig. 3. Density plot examples for different parameters.

Function feature_distribution also provides a way to visualise main feature distributions through density plots combined with LFCscore and interactor number scatter plots (Fig. 4). These plots allow to quickly assess if there are any dependencies between LFCscore and the interactor numbers. Such plots also help to see if any obvious gene clusters emerge. In early analyses this can aid in understanding whether the expression is dependent on any cellular site or protein class which could suggest a specific functional enrichment. This function might issue a warning if the data points were missing or too few for density plotting; however, it does not affect the overall visualisation.


Function plot_3D_distribution allows to explore 3D distributions be- tween the number of interactors, LFCscore , and p.adj values. In addition to providing a data parameter, the user can select how to color data points depending on the association or specificity score (e.g., selecting ‚Äúspecificity‚Äù) (Fig. 5). This analysis can help identify specific clusters

for the expression patterns and interactors based on the significance of how the gene expression changed in a given condition. In addition, data point coloring based on gene association or specificity in the context of diseases can help capture additional patterns in the data.

Function class_summary provides analysis on main protein classes where a barplot helps to visualise the class distribution. Similarly, the function location_summary summarises the location distribution data (Fig. 6). Assessing this information can highlight if there are any spe- cific biases in data for target location or function which might indicate underlying cellular perturbations or changes in the function.




Fig. 4. Feature distribution plot examples.
Fig. 5. Interactive 3D feature distribution.





















Function location_map allows the visualisation of how the highest and lowest LFCscore genes cluster based on the protein cellular location data (Fig. 7). The user can specify the number of the top and lowest genes to consider. The function returns a dendogram generated based on LFCscore values. The ‚Äúeuclidean‚Äù method is used for distance calculation and the ‚ÄúWard.D2‚Äù method - for hclust generation. Gene labels are colored to indicate major clusters where the hclust generated cluster number is doubled to select for more subgroups. In addition, to achieve a finer sep- aration of lower dendogram branches the following equation is used to set the height for the color differentiation of different branches Eq. (5).
This equation takes the mean value for hclust function height calcula- tion and multiplies by the dendrogram cluster number scaled twice. The plot also provides cellular location visualisation for each gene (Fig. 7).
Hdendogram = (hclustheight ‚àïhclustn) ‚ãÖ dendogramcluster_number ‚ãÖ 2	(5)
The height calculation for the color differentiation of different den- dogram branches.





Fig. 6. Location and class summary plots; NA ‚Äì no classification available.


Fig. 7. Dendogram with mapped cellular locations where coloured gene symbols represent the identified clusters and coloured branches show smaller subclusters. (For interpretation of the references to color in this figure legend, the reader is referred to the web version of this article.)


Similarly, the function class_map provides a visualisation of how the highest and lowest LFCscore genes cluster based on protein class. In addi- tion to a data frame generated by score_genes, the function also requires a num parameter to specify the number of genes to consider from the top upregulated and downregulated genes, if this option is not selected all genes will be used (Fig. 8).


HK_genes function provides a convenient overview of the house- keeping genes and allows to check if these genes varied through- out conditions. Depending on the number of conditions separate plots will be generated (Fig. 9). Inspecting housekeeping genes can help understand if there was any significant variation between sam- ple groups which might have arisen from biological or technical variation.



Gene cluster and expression pattern analyses

Function cluster_genes helps to select an optimal number of clusters and a model to be fitted during the EM phase of clustering for GMM. The function provides summaries and helps to visualise gene clusters based on generated data using score_genes function. Weighted gene expression
is clustered based on the interactome complexity, i.e., the number of known interactors according to the STRING database [3], with a cut- off of 700 for the score threshold. The threshold is set automatically to control for the reliability of the interactions [2,3]. The function also pro- vides scatter and dimension reduction plots to analyse the clusters and features in the data (Fig. 10). Required parameters include a data frame containing a processed expression file from score_genes with LFCscore and a max_range number for cluster exploration during the model selection (the default value is 20 clusters). The clusters parameter can be provided for the number of clusters to test when the cluster number estimation is not based on the best BIC output (the user then also needs to supply modelNames). This option allows users to perform GMM for a specific number of clusters. The modelNames parameter can only be supplied when the clusters value is also specified. This option will model the data based on the user parameters for the cluster assignment (Fig. 10) which can be helpful if a different number of clusters helps to explain the data better. The function not only provides a summarised modelling output and plots but also returns a data frame with assigned clusters which can be used by more advanced users in other machine learning pipelines or data comparison studies. For example, gene set clustering based on the interactome size provides insights on the emerging patterns for gene expression changes and the size of the involved network. Selecting spe- cific genes can help build signalling networks based on the identified seed points. Feature distribution analysis also helps to assess the emerg- ing trends in the data based on the variability. That is, gene variation patterns in the experiment might indicate functionally related groups which could be used to reconstruct relevant pathways (Fig. 10). The user is advised to set seed before using the function to get reproducible results.








Function cluster_links provides the same Gaussian mixture modeling pipeline as cluster_genes; however, instead of the interactor number clus- tering, the user can select a specific disease score type (the default selec- tion is ‚Äúassociation‚Äù). This parameter can define either the association or specificity for a disease, i.e., if the gene has known links to disease
phenotypes and how specific it is when describing a pathology. The func- tion also provides scatter and dimension reduction plots to analyse the clusters and features in the data. An additional output is a model report summarising the cluster assignments which can be used in other mod- elling analyses. This information can be used to compare association and network size influences for different clusters and gene expression patterns.
Function pattern_search explores the occurrences of specific patterns in gene sets. That is, it searches each condition for emerging patterns (e.g., if multiple conditions are provided) to group genes that changed in a similar manner (Figs. 11 and 12). The search algorithm works by first generating potential patterns to search depending on the number of subclasses. For example, if a condition has several subclasses as in the case example, where Condition 1 has healthy, hypertensive, and chronic kidney disease (CKD) groups, then potential pattern scenarios are gen- erated, e.g., ‚Äúup-up-up‚Äù or ‚Äúdown-up-down‚Äù. Following this, the overall expression for each gene is calculated using geometric mean across all conditions, this gives a basal line against which an individual gene ex- pression value is weighed to deduce if it is in a ‚Äòup‚Äô or ‚Äòdown‚Äô state. Com- paring against a baseline is a more universal approach than performing a pair wise comparisons which may not be effective for multiple sub- classes or complex interactions. In addition, averaging expression using a geometric mean method provides a baseline for comparisons taking into account all the extreme values which might result either from bio- logical or technical effects. It is important to note that taking a geometric mean might not be optimal in all cases, but in a balanced experiment it should provide additional information for the downstream analyses. The function returns a summary of how many genes are identified for each pattern type across conditions.





Fig. 8. Dendogram with mapped protein functions where coloured gene symbols represent the identified clusters and coloured branches show smaller subclusters. (For interpretation of the references to color in this figure legend, the reader is referred to the web version of this article.)




Fig. 9. An example of the housekeeping gene distribution. The red marker indicates the mean for the group and violin plots allow to assess global distribution patterns. CKD ‚Äì chronic kidney disease patient group, healthy ‚Äì healthy population group, and hypertension ‚Äì hypertensive patient group. (For interpretation of the references to color in this figure legend, the reader is referred to the web version of this article.)


Fig. 10. GMM analysis examples showing the Bayesian information criterion (BIC) evaluation and model type prediction, clustering analysis, as well as the dimension reduction analysis based on the intrinsic variability within the data.




Fig. 11. Gene distribution patterns for a specific expression pattern subset where mean values (signified with a red point) are connected to highlight the pattern features with respect to the mean value (the example is from a ‚Äúdown-up-down‚Äù pattern group). CKD ‚Äì chronic kidney disease patient group, healthy ‚Äì healthy population group, and hypertension ‚Äì hypertensive patient group. (For interpretation of the references to color in this figure legend, the reader is referred to the web version of this article.)


Fig. 12. Individual gene distributions when selecting a specific expression pattern and range (the example is from a ‚Äúdown-up-down‚Äù pattern group). CKD ‚Äì chronic kidney disease patient group, healthy ‚Äì healthy population group, and hypertension ‚Äì hypertensive patient group.





The returned gene list contains groups of genes for the different types of patterns. A pattern of interest can be selected to further explore the genes that changed their expression in a specific manner.



This analysis can be followed by pattern_plots which allows to ex- plore distributions for a selected pattern group. The user must pro- vide a subsetted data frame and low/high parameters to select a spe- cific range. The selection is needed because in some instances the expression values might differ significantly and visualising all data points will prevent exploring any meaningful subsets. The outputs al- low to evaluate how genes distribute in a subset for different conditions (Fig. 11) and how individual gene values vary in a selected subgroup (Fig. 12).
Function cluster_heatmap uses the information mined from the STRING database [3] to map experimental, referenced, and inferred in- teractions to see if there are any interactors in the set of significantly changed genes. This heatmap function provides a clustered visualisa- tion of all the genes that have shared interactions (Fig. 13). This infor- mation allows to quickly assess how many genes in a specific condition that changed significantly might be part of the same regulatory cluster. Such data can help select specific targets depending on the therapeutic strategy.













Fig. 13. Cluster heatmap examples where known interactors are connected via the red squares. (For interpretation of the references to color in this figure leg- end, the reader is referred to the web version of this article.)


Epigenomics data integration and analysis

Function CpG_summary provides information on the gene CpG island and GC content. The function checks genes against known CpG islands and provides various plots to assess emerging data features. CpG islands were retrieved from the data available with the Genome Reference Con- sortium (Human Build 38) [17], this information was cross-referenced with the Ensembl database [18] to retrieve overlaps between CpG is- lands and genes. The function provides a number of analytical plots to assess whether the CpG profile (via GC %) has any influence on the gene expression, interactor number, disease specificity, and disease as- sociations (Figs. 15 and 16). All this information is provided in the con- text of the assigned protein classes/functional groups. This analysis of- fers additional insights into the complex interplay between the genome, transcriptome, and epigenome [19]. In addition, the function outputs a data table that contains genomic locations and gene information based on the Ensembl database [18] so that the user can perform additional analyses.


	

Function interactor_map helps to visualise the information mined from the STRING database [3] and map direct and referenced interac- tions to see if there are any interactors in the set of significantly changed genes and how they are linked. This visual network is an alternative for a heatmap with additional information on the functional gene features (Fig. 14).

Function miRNA_summary_validated allows to check how many of the differentially expressed genes have known miRNAs (Figs. 17 and 18). The information on validated/known miRNAs is collected from mining multiple databases, namely miRecords, TarBase, miRTarBase, PhenomiR, miR2Disease, Pharmaco-miR. The function also returns a data table with miRNA information that can be used for designing RNA interference experiments.




Function miRNA_network allows to examine if a gene set has shared regulatory miRNAs (Fig. 19).This function could be especially useful as it could help exploring the non-coding layer of the regulatory network. This information can aid in studying how some genes are controlled by several miRNAs and detect additional links between genes that changed expression. Moreover, using miRNA analyses can be applied in design- ing RNA interference studies to select the most optimal interference se- quences. miRNA content information can be access through the func- tion‚Äôs output.


Discussion








Function miRNA_summary_predicted is similar to the earlier func- tion; however, it allows to check how many of the differentially ex- pressed genes have predicted miRNAs. The information is collected from mining multiple databases that use algorithms to infer likely miRNAs. The databases include miRTarBase, PITA, PicTar, miRecords, miRanda, DIANA-microT, miRDB, TarBase, TargetScan, MicroCosm, and ElMMo. The function also returns a data table with miRNA information that can be used in designing RNA interference experiments.
OmicInt package provides a unique combination of functions and tools for researchers to explore gene expression data sets. A special focus of the package is also making machine learning, specifically Gaussian mixture models [4‚Äì6], more accessible to the researchers that do not have a background in the ML/AI field. In addition, the lack of tools for the exploration of the complex expressome data highlighted the need for such a set of bioinformatics tools. For example, commercial solutions, such as Clarivate analytics [7], are very expensive and cannot be easily used by individual researchers. Freely available tools, namely GeneMA- NIA or Cytoscape platforms [9‚Äì11,20], do not permit machine learning applications or complex regulome integration. As a result, the OmicInt package was developed for advanced and user-friendly omics analyses.




Fig. 14. Interactor map examples.





Fig. 15. CpG summary examples where the GC% content distribution is shown for different protein classes.




Fig. 16. CpG summary examples where GC% profiles are shown for different genes and their corresponding protein classes. Summary density plots and histograms are also shown for different parameters.




Fig. 17. Validated miRNA summary examples where distribution profiles are shown for different genes and their corresponding protein classes. Summary density plots and histograms are also shown for different parameters.


Fig. 18. Validated miRNA summary examples where miRNA content distribution is shown for different protein classes.




Fig. 19. miRNA network plot example where genes and miRNAs are mapped using a heatmap so that shared links are highlighted in red. (For interpretation of the references to color in this figure legend, the reader is referred to the web version of this article.)


The developed scoring functions and GMM pipeline enables exhaus- tive analysis of the expressome and the associated interactome com- plexity. The automated processing takes care of the machine learning model optimisation making this analysis easily adaptable to individual researcher‚Äôs needs. The implementation of probabilistic modelling cre- ates opportunities for new insights based on gene expression changes, disease associations, and the size of the network for a specific gene. Ex- tracting this information can establish relevant seed points to recreate complex signalling pathways or use this data to select genes that should be subjected to downstream in vitro studies ensuring that a diverse se- lection is made.
In addition, advanced functions for epigenomics analysis permit the exploration of the epigenetic regulatory layer. This might be very helpful when identifying genes that may depend on epigentic regulation [19]. Specifically, if a CpG island containing gene changed expression during treatment or disease progression, it might suggest that there is an epige- netic component controlling the expression levels. Similarly, exploring a gene‚Äôs miRNA network could hint at other interacting genes which might not have been picked up by the differential expression analysis or help prepare for RNA interference studies. Moreover, miRNA interac- tome analysis provides the first in-depth look into what genes are con- trolled by the same set of miRNAs.
Additional functionalities of the package create an analytical envi- ronment to summarise gene functional classes or infer what cellular compartments are typically associated with the gene/protein. Such as- sessments in the context of expression changes or disease association can highlight emerging patterns in specific cellular states under the investi- gation. A specially designed function to extract gene pattern profiles can aid in a further refinement of causal gene networks when considering a specific phenotype or a condition.
Thus, OmicInt offers a comprehensive, evolving, and adaptable plat- form for gene expression analysis in the context of the transcriptome, proteome, and epigenome. The analyses are made freely available to all researchers where further contributions and algorithmic development are also made possible.

Declaration of Competing Interest

The author declares no conflict of interest regarding the publication of the manuscript.

Supplementary materials

Supplementary material associated with this article can be found, in the online version, at doi:10.1016/j.ailsci.2021.100025.
References

UniProt [Internet]. Available from: https://www.uniprot.org/ 2021.
Szklarczyk D, Gable AL, Lyon D, Junge A, Wyder S, Huerta-Cepas J, et al. STRING v11: protein-protein association networks with increased coverage, supporting func- tional discovery in genome-wide experimental datasets. Nucleic Acids Res. 2019 Jan 8;47(D1):D607‚Äì13.
STRING: functional protein association networks [Internet]. Available from: https://string-db.org/ 2021.
Reynolds D. Gaussian mixture models. Encycl. Biom. 2009:659‚Äì63.
Kanapeckaitƒó A, Burokienƒó N. Insights into therapeutic targets and biomarkers using integrated multi-‚Äôomics‚Äô approaches for dilated and ischemic cardiomy- opathies. Integr. Biol. (Camb.) [Internet]. 2021 May 1;13(5):121‚Äì37. Available from: https://pubmed.ncbi.nlm.nih.gov/33969404/.
Liu Z, Song Y, Xie C, Tang Z. A new clustering method of gene ex- pression data based on multivariate Gaussian mixture models. Signal Image Video Process 2015 Feb 8;10(2):359‚Äì68. 2015 102 [Internet]Available from: https://link.springer.com/article/10.1007/s11760-015-0749-5.
Clarivate - data, insights and analytics for the innovation lifecycle - Clarivate [Inter- net]. Available from: https://clarivate.com/ 2021.
Warde-Farley D, Donaldson SL, Comes O, Zuberi K, Badrawi R, Chao P, et al. The GeneMANIA prediction server: biological network integration for gene priori- tization and predicting gene function. Nucleic Acids Res. [Internet] 2010 Jul 1;38(suppl_2):W214‚Äì20.
GeneMANIA [Internet]. Available from: https://genemania.org/ 2021.
Cytoscape: an open source platform for complex network analysis and visualization [Internet]. Available from: https://cytoscape.org/ 2021.
Otasek D, Morris JH, Bou√ßas J, Pico AR, Demchak B. Cytoscape automation: em- powering workflow-based network analysis. Genome Biol. 2019 Sep 2;20(1).
Scrucca L, Fop M, Murphy TB, Raftery AE. mclust 5: clustering, classification and density estimation using gaussian finite mixture models. R. J. [Internet] 2016;8(1):289 Available from: /pmc/articles/PMC5096736/.
DisGeNET - a database of gene-disease associations [Internet]. Available from: https://www.disgenet.org/ 2021.
AusteKan/OmicInt: OmicInt Package [Internet]. Available from: https://github. com/AusteKan/OmicInt 2021.
CRAN - Package OmicInt [Internet]. Available from: https://cran.r-project.org/web/ packages/OmicInt/index.html 2021.
Home - GEO - NCBI [Internet]. Available from: https://www.ncbi.nlm.nih.gov/geo/ 2021.
GRCh38 - hg38 - Genome - Assembly - NCBI [Internet]. Available from: https:// www.ncbi.nlm.nih.gov/assembly/GCF_000001405.26/ 2021.
Ensembl genome browser [Internet]. 2021. Available from: https://www.ensembl
.org/index.html.
Cazaly E, Saad J, Wang W, Heckman C, Ollikainen M, Tang J. Making sense of the epigenome using data integration approaches [Internet]. Front. Pharmacol. Front. Media S.A. 2019;10:126.
Ali M. GeneMANIA: a real-time multiple association network integration al- gorithm for predicting gene function. 2008;9:1‚Äì15. Available from: papers2:// publication/uuid/D18A7677-333C-443F-B060-94EFCD7857C6.
