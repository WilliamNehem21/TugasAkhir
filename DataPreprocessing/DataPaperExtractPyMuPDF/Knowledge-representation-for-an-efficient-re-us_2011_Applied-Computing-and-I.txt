ORIGINAL ARTICLE
Knowledge representation for an eﬃcient re-use
of project memory
Smain Bekhti a,*, Nada Matta b,1, Chaker Djaiz c,2
a College of Computer Science and Information Systems, Imam University, Riyadh 11681,
P.O. Box 84880, Saudi Arabia
b Tech-CICO, Universite´ de Technologie de Troyes, 12 rue Marie Curie, BP 2060, 10010 Troyes Cedex, France
c CadesisCorp., 142-176 Avenue de Stalingrad, Parc Technologique des fosse´s Jean, Bat 5, 92700 Colombes, France
Received 21 October 2010; accepted 18 January 2011
Available online 27 May 2011
KEYWORDS
Project memory;
Knowledge re-use;
Knowledge manage-
ment;
Knowledge represen-
tation;
Conceptual graphs;
Corese
Abstract
Knowledge sharing in general and contextual access to knowledge in
particular, still represent a key challenge in knowledge management framework.
Researchers on semantic web and human machine interface study techniques to
enhance this access. For instance, in semantic web, information retrieval is based
on domain ontology. In human machine interface, keeping track of user’s activ-
ity provides some elements of the context that can guide the access to informa-
tion. We suggest an approach based on these two key guidelines, while avoiding
some of their weaknesses. The approach permits a representation of both the
context and the design rationale of a project for an efﬁcient access to knowledge.
In fact, the method consists of an information retrieval environment that, in the
one hand, can infer knowledge, modeled as a semantic network, and on the other
hand, is based on the context and the objectives of a speciﬁc activity (the design).
The environment we deﬁned can also be used to gather similar project elements
2210-8327 ª 2011 King Saud University. Production
and hosting by Elsevier B.V. All rights reserved.
Peer
review
under
responsibility
of
King
Saud
University.
doi:10.1016/j.aci.2011.05.004
Production and hosting by Elsevier
* Corresponding author. Tel.: +966 55 9104761; fax: +966 1 2591616.
E-mail addresses: sbekhti@imamu.edu.sa (S. Bekhti), Nada.Matta@utt.fr (N. Matta), cdjaiz@cadesis.com
(C. Djaiz).
1 Tel.: +33 3 25 71 58 65.
2 Tel.: +33 1 56 83 70 00.
Applied Computing and Informatics (2011) 9, 119–135
King Saud University
Applied Computing and Informatics
www.ksu.edu.sa
www.sciencedirect.com
in order to build classiﬁcations of tasks, problems, arguments, etc. produced in a
company. These classiﬁcations can show the evolution of design strategies in the
company.
ª 2011 King Saud University. Production and hosting by Elsevier B.V.
All rights reserved.
1. Introduction
Knowledge sharing is still a main problem to deal with in organizations.
Although, studies in semantic web and human machine interface provide tech-
niques to enable a better access to information, these techniques are not sufﬁcient
in terms of allowing a contextual access according to user needs. In fact, in the
semantic web framework (Berners-Lee et al., 2001), the information access is
guided by the ontology of the user domain. However this type of ontology is built
as a consensual concept deﬁnition of the domain. Therefore, it can be considered
as a reference of the concepts used in a given domain while any user generally has
her/his own representation of the domain, which is more or less close to domain
ontology. Moreover, the structure of the domain ontology is usually provided
by a knowledge engineer who introduces her/his own representation to build this
ontology.
In the context of knowledge management within companies, there are numerous
challenges in developing effective corporate memories, including problems in asset
capture, representation, retrieval, and reuse (Hilbert et al., 2006). Besides, user
activity evolves over the time and, subsequently, her/his information requirement
changes according to the context of her/his activity. Several works on human
machine interface (Jing et al., 2002) study the way to keep track of user activity
in order to offer a personalized information retrieval. Studies in ergonomics prove
that information about the objectives and the environment of an activity are essen-
tial for a better understanding and an accurate representation of that activity.
In our approach, the above important aspects are taken into account. We focus
on the designer activity, in which, tasks and activities can provide relevant infor-
mation about the objectives of the designer activity. We deﬁned methods and
structures for a construction of a memory of design projects focusing, particularly,
on the two parts that we consider as essential in such category of projects: the pro-
ject context and the design rationale (Bekhti and Matta, 2003). The produced pro-
ject memory can be considered as a referential resource in an organization. This
resource is structured not only as a domain ontology, providing links to relevant
documents, but also as a semantic network accurately linking up concepts consti-
tuting the project context and the design rationale. The information retrieval pro-
cedure is based on semantic relations between these concepts and can, hence, offer
a contextual information access. We used conceptual graphs to represent concepts
in a design project as a semantic network structure. We used ‘‘Corese’’ (Corby and
Faron-Zucker, 2002) as an information retrieval tool as a semantic search engine.
120
S. Bekhti et al.
This tool uses conceptual graphs along with RDF and XML formalisms in order
to offer a deep and semantic information retrieval.
The rest of this paper describes, in its second and third sections, the designed
structures of project memory and a suggested approach that enables the capture
and representation of knowledge used and produced during design project. Section
4 argues the need of contextual information retrieval in design. Section 5 describes
how a project memory has been represented using conceptual graphs and RDF
formalisms. Information retrieval as carried out with Corese (Section 6) is
based on the relation between the constructed conceptual graph and its RDF
representation.
2. Project memory
In Dieng-Kuntz-Kuntz et al. (2001) deﬁnes knowledge management cycle as being
composed of the following stages: clariﬁcation, broadcasting and reuse. Many
investigations have presented the corporate memory as a signiﬁcant support for
knowledge management. A corporate memory is an ‘‘explicit representation of
pertinent knowledge of an organization’’ (Van Heijst et al., 1997). This memory,
elucidating the organizational knowledge (also called collective knowledge), may
be considered as a knowledge asset of the organization. Such knowledge asset
can be speciﬁc to a project and so be called project memory. A project memory
can be deﬁned as ‘‘a representation of the experience acquired during projects real-
ization’’ (Matta et al., 2000). This experience includes knowledge used and pro-
duced during the project realization. Beside this, representing project context
can be crucial in terms of understanding the circumstances of decision making
and problems solving.
Therefore, we consider the structure of project memory as being constituted of
the following parts (Fig. 1):
� The project organization: teams, members, tasks, roles, competencies, etc.
� Resources and constraints: rules, methods, directives, time, budget, etc.
� Project realization: problem solving (problem deﬁnition, suggestions, and deci-
sion), solution evaluation (arguments, criteria), etc.
� Project goals and objectives.
Relations between the above elements must also be represented. These relations
have different sorts of inﬂuence on the decision making process and may be of
great importance for the design rationale understanding.
3. Knowledge acquisition and representation in project memory
We deﬁned an approach that permits the capture and the representation of used
and produced knowledge during project realization. This approach consists, on
Knowledge representation for an efﬁcient re-use of project memory
121
the one hand, of two main steps: direct transcription and content structuring and,
on the other hand, of project context extraction from the tools and the environ-
ment of projects (process, organization, etc.).
3.1. Direct transcription
The ﬁrst stage of our approach consists of a form-based transcription. These
forms help to record and classify basic elements of a design problem discussion.
That is, elements like problems, argumentation and decision. These forms can
be used to record, in a structured and prompt way, all the information elements
that can be collected during a design problem solving discussion. The goal is to
enable a real time structured transcription of the discussion during design meet-
ings. The structure of these forms (Fig. 2) permits to distinguish the key elements
of the discussed problem and to classify participants’ arguments along with their
possible suggestions.
3.2. Content structuring
The principal objective of the content structuring is to enable an intelligent access
to knowledge represented in the project memory. Our idea is to make possible a
ﬂexible access to the project memory according to several viewpoints. This form
of access is described in the information retrieval section of this paper. The second
stage of our approach consists of a structuring based on a cognitive analysis of the
Problem/Decision
Evolve
Argument
Support/Oppose
Suggestion
Generate
Decision
Lead to
Support/ 
Oppose 
Lead to
Discuss
Have as 
solution 
Criterion
Relate to
Relate to
Project Member
Provide
Provide
Task 
Generate
Generate
Role 
Constraint 
Consider 
Consider
Belong to 
Have
Resource
Competency/Skill
Possess
Need 
Possess
Division
Belong to
Figure 1
Project memory structure (Bekhti and Matta, 2003).
122
S. Bekhti et al.
forms ﬁlled out during the direct transcription. We were inspired by the ap-
proaches of design rationale representation (Karsenty, 1996; Buckingham, 1997;
Klein, 1993) to deﬁne a structure of representation, putting ahead elements of
inﬂuence in a negotiation/discussion, such as arguments, criteria of justiﬁcation
and suggestions (Fig. 3).
Notes are initially grouped by participants (members) who, during the meeting,
are identiﬁed either by their names or by their visual aspects. In fact, the direct
transcription that we propose follows, on the one hand, the traditional methods
of notes taking during meetings and permits, on the other hand, a model-based
information structuring. This transcription can easily be realized by a meetings
secretary. No deep analysis is required in this type of transcription. Note also that
a chronological recording of the design rationale is supported by this method of
transcription.
The selection of criteria is guided by a classiﬁcation of common design argu-
ments types (Fig. 4). The method we propose can be compared to meetings report-
ing where the direct transcription is similar to notes taking and the structuring to
summary reporting.
However, in our case, the transcription is guided by model-based forms. The
result is richer and reﬂects a more comprehensive knowledge-oriented memory
of the design rationale and the decision-making process.
One of our key suggested ideas is to integrate the traceability procedure in the
process of projects realization itself. This implicates a slight change in project
structures and organization and permits the capture of knowledge during the pro-
ject realization and not afterwards. This aspect is very important as the knowledge
that emerges during any project realization is volatile and can hardly be reconsti-
tuted after the project is over.
In order to guarantee an accurate representation of knowledge essentially impli-
cated in the design rationale, a validation meeting must be held with some project
key members who have got a global vision of the project (for example, the project
Part of the discussed 
Problem/Decision 
Project member
- Argument(s) 
- Suggestion(s) 
Decision
- Hold 
- Modification 
- Elimination 
- Creation
New version of the 
solution
Lead to a Decision
Advocate
Trigger
Figure 2
Structure of the form used for the direct transcription of design discussion.
Knowledge representation for an efﬁcient re-use of project memory
123
manager). This kind of meeting can be held after a number of project phases and
at the end of the project realization. This makes possible to reformulate the argu-
ments, the suggestions and the criteria and to re-examine their classiﬁcation. The
structure of the memory encourages the project members to explicitly express their
knowledge, enriching by that the contents of the memory.
Suggestion
Argument
Criterion: Required 
Resources 
List competences that the 
company must have in order 
to perform the evaluation 
(Member3)
Contextualization 
of 
the 
principles according to each 
company. (Member6)
Allowing the possibility of 
having 
recourse 
to 
an 
external treatment. 
 (Member1)
Control ERP: 
Companies must remain 
Masters of the decisions 
to take to control the 
risk after the evaluation. 
(Member1)
Nominating 
an 
ERP 
guarantor in the company. 
 (Member1)
 Hold 
 Modification 
of “Autonomy
principle”  
 Elimination 
 Creation of 
“Adaptability 
Principle” 
Decision
Discussed Problem/Decision 
ERP and “Autonomy principle” 
Version 3.0
Figure 3
An example of a form used for the design rationale structuring during a project memory deﬁnition.
Figure 4
Criteria tree representing a typology of design problems (Matta, 2000).
124
S. Bekhti et al.
3.3. Logic of the structuring form
The structure represents the logic of discussion. Participants (project members)
discuss each part of the problem by expressing their opinions supported by argu-
ments. The participants can also provide suggestions concerning the design prob-
lem. The collection of arguments and suggestions allows the team to take a
decision concerning a part of a problem. Thus, the part of the problem is either
totally solved or will be discussed again in the same manner and will go through
the same cycle. This enables to see the evolution of this element during the prob-
lem solving process until its ﬁnal version.
In the structure, the arguments are classiﬁed according to their types or natures.
Each argument or suggestion is related to the member who emitted it. The fact
that the competencies and the role of each member are indicated permits to see
the relation that may exist between the contributions (arguments and suggestions)
of the participants and their competencies and skills. This is essential for a prob-
lem solving context comprehension.
3.3.1. Elements of the structure
3.3.1.1. Problem/decision. The global problem discussed during design meetings is
split into sub-problems or elements of problem. This permits to represent these ele-
ments of discussion through the different phases, connect them and elucidate the
evolution of each of them during the project completion.
3.3.1.2. Arguments. One of the most signiﬁcant elements of any negotiation is the
argumentation. In our approach the argumentation is an essential element of the
representative structure since it is the origin and the cause of the evolution of the
discussion of the problem and consequently of the decision-taking.
3.3.1.3. Suggestions. The arguments advanced by the speakers during meetings
often lead them to present their own suggestions concerning a given part of the
discussed problem; we envisaged in the model a space for suggestions of project
members (participants). The suggestions are linked to the arguments and the par-
ticipants who emitted them.
3.3.1.4. Project members/participants. The representation of the participants in the
structure is important; it permits to bind the arguments and suggestions to their
emitters. Each participant is characterized, primarily, by his competencies/skills
and his role in the project (see context). This permits to clearly understand the lo-
gic and the reasoning of the members and the motives of their opinions.
3.3.1.5. Criteria. Arguments and suggestions are classiﬁed according to some de-
ﬁned criteria. Theses criteria have been gathered from several previous studies
Knowledge representation for an efﬁcient re-use of project memory
125
of classiﬁcation of common types of design arguments (Matta, 2000; Brown and
Berker, 2000).
4. Knowledge re-use and designers needs
Designers need to learn from previous experiences in order to ﬁnd out how to deal
with new problems in their activities. They generally are in a situation of handling
designs of new products and need information about similar design situations.
Their needs are essentially focused on different elements of past design projects
(types of problems, decisions, constraints, arguments, criteria, etc.). The structure
deﬁned in Fig. 1 can help in this special form of information retrieval. The infor-
mation retrieval process can be guided not only by classiﬁcations of problems,
projects, etc. but by similarity between project descriptions. Relations between
project elements must play an important role in this information retrieval process.
For instance, designers may need to know why a given suggestion has not been
considered (rejected), who decided that, under which constraints, having which re-
sources, competencies, which other suggestion has been approved instead, etc.
For that precise reason, we propose to represent project memory as a semantic
network and to use semantic inference engine to conduct the information retrieval
process. The resulting memory is not a simple list of documents or parts of doc-
uments but a network presenting on the one hand, the relations between project
elements and on the other hand, pointing the relevant documents. Designers can
therefore have a contextual information retrieval that can be very useful in their
design activity.
5. Information retrieval based on semantic relations
Indexing documents can either be simple using metadata and keywords (currently
recommended in HTML documents) or complex using semantic networks and
ontology (defended by semantic web) (Martin, 1995). Semantic Networks have
shown a great ability in terms of information structuring and information retrie-
val. (Steyvers and Tenenbaum, 2005) demonstrated that developing search and re-
trieval algorithms that exploit the large-scale structures of semantic networks is
likely to be a project of great promise, for both cognitive science research and
information retrieval applications.
We choose conceptual graphs to represent our semantic network. Conceptual
graphs are a formalism that offers a highest structure of the semantic relations be-
tween concepts (Chein and Mugnier, 1992). In this formalism, there are a number
of inference functions (Sowa, 1984) that helps in information retrieval. We partic-
ularly note projection, joint, generalization and specialization functions. This for-
malism has been used and validated in numerous applications and its effectiveness
is now commonly approved.
126
S. Bekhti et al.
Moreover, the structure of conceptual graphs (especially support and graphs) is
close to RDF (Resource Framework Description) and RDFs (Resource Frame-
work Description Schema). Thus, it can easily be translated to RDF and XML
respecting semantic web recommendations (RDFS, 2004). This connection be-
tween conceptual graphs, RDF and XML can provide a number of speciﬁc func-
tions that give more power for information retrieval. The Corese search engine
developed at INRIA (Corby et al., 2000) is based on this principle.
5.1. Corese: a semantic search engine
The Corese search engine (Corby and Faron-Zucker, 2002) is dedicated to the que-
rying of corporate semantic webs in which documents are described through RDF
annotations. Corese interprets RDF metadata in the conceptual graphs model in
order to exploit the inference capabilities of this formalism. The RDFS (RDFS,
2004) and conceptual graphs models share many common features and a mapping
can easily be established between RDFS and a large subset of the conceptual
graphs model. The information retrieval in Corese is based on this mapping. In
fact, the Corese query language is RDF with addition of some extra conventions
introducing variables and operators. An RDF query statement is interpreted as a
conceptual graph query and is processed by a conceptual projection of the query
on the annotation graphs. Therefore, Corese enables to process information
Figure 5
DyPKM interface.
Knowledge representation for an efﬁcient re-use of project memory
127
retrieval queries on the data (content) as well as on the schema (the structure of the
project memory).
5.2. Representation of project memory
Knowledge captured from design projects is structured in XML ﬁles. In fact, as we
explained in the knowledge acquisition method above, a project secretary, can
keep track of the knowledge from the context and the decision meetings of a de-
sign project. She/he uses a tool (DyPKM) (Bekhti and Matta, 2003) that generates
an XML ﬁle. The tool, the secretary uses, helps to classify concepts like sugges-
tions, arguments, problems, participants, etc. and to establish semantic relations
between these concepts. DyPKM interfaces are designed to clearly display classi-
ﬁcation trees of design problems. That is, identifying from project members ex-
changes: suggestions and arguments concerning a given design problem, related
criteria but also grouping arguments, suggestions, tasks, etc. by design decisions
(Fig. 5).
Structures and content are transformed to an XML document (Fig. 6). An XSL
ﬁle is deﬁned in order to generate a related RDF ﬁle (Fig. 7). These two ﬁles are
then integrated in the knowledge base of Corese in order to assure an efﬁcient
search process.
Figure 6
The generated XML ﬁle.
128
S. Bekhti et al.
6. Knowledge re-use: project information retrieval using Corese
The structure of the project memory (Fig. 1) is implemented using RDF schema
(Fig. 8). Corese inference engine explores this schema in order to retrieve informa-
tion from RDF ﬁles. These RDF ﬁles form a knowledge base of the represented
design project. We illustrate in the following two examples the way information
retrieval within a project memory is performed.
The ﬁrst example shows how Corese engine can perform an exploration search
and return all the requested concepts. The second example shows how the infer-
ence engine can be used to do a deep search and retrieve concepts that are not di-
rectly linked.
6.1. Example of an exploration-like information retrieval
When a designer deals with a problem, he/she needs to know, for instance, if this
problem has been solved in any previous similar projects and how. His request can
Figure 7
The translated RDF ﬁle.
Knowledge representation for an efﬁcient re-use of project memory
129
be formulated as follows: ‘‘Which suggestions supported by which arguments were
provided to solve a given design problem? And what were the criteria that these
arguments and suggestions related to?’’
To start, this query is translated to an RDF request (Fig. 9) according to our
RDFS
representation.
Then,
it
is
projected
on
a
conceptual
graph:
RDF ﬁ CG ﬁ RDF (Fig. 10). This RDF query is then interpreted by the Corese
engine as a conceptual graph query. The result is obtained using conceptual graph
generalizations functions and exploiting RDF ﬁles. Display of the RDF results is
made more user-friendly using an XSLT formatting data sheet (Fig. 11).
Figure 8
The structure of project memory presented as a RDF schema.
130
S. Bekhti et al.
This exploration search can highlight connected concepts according to certain
conceptual relations.
According to the RDF ﬁle, the result is:
PB2: ERP focus
Criteria 123: Terminology
Argument 342: Evaluation perimeter is not clear.
Argument 10: Evaluation perimeter in paragraph 3 is not in correlation with the
text.
Suggestion 11: Use ‘‘intervention ﬁeld’’ instead of ‘‘evaluation perimeter’’.
Criteria 13: Exhaustiveness.
Argument 32: The company chief has to inform employees about the state of
the evaluation.
Figure 9
The RDF query.
Figure 10
The request in the conceptual graph formalism.
Knowledge representation for an efﬁcient re-use of project memory
131
Suggestion 11: Emphasis the role of the company chief in the evaluation
process.
Figure 11
The query result for an exploration search.
Figure 13
The query result of a deep information retrieval.
Problem / Decision
Argument
Project
Member
Suggestion
Criterion
Competency/Skill
Evolve
Support/Oppose
Generate
Provide
Provide
Have as
Solution
Discuss
Relate to
Relate to
Possess
Figure 12
Part of the project memory structure used in the second query example.
132
S. Bekhti et al.
6.2. Example of a deeply Information retrieval
A designer may also need to know what are the skills or competencies that contrib-
uted to solve a design problem in a previous design project and which argumenta-
tion criteria were considered? The particularity of this query is that these concepts
(design problems and competencies), are not directly linked in the project memory
structure (Fig. 1). In fact, there is a direct relation between a design problem and
the related suggestions and arguments. Arguments and suggestions have direct
links to corresponding criteria. There is also a link between arguments, suggestions
and participants who emitted them. Concepts like skills or competencies of each
project member are represented in the structure and linked to the related member
(Fig. 12).
Corese engine performs an approximate projection that is based on a joint rela-
tion in order to build a meta-relation between the given concepts. Accordingly,
Corese engine infers unlinked documents or linked by transitivity documents.
The given results are always an RDF ﬁle (Fig. 13).
The obtained result is:
PB2: ERP focus
Criteria 123: Terminology
Competency 13: Consulting
7. Conclusion
Designers need to learn from past design projects in order to deal with new design
problems. They want to know, for instance, how similar problems were solved in
the past, with which resources, using which solutions and under which conditions.
A structured project memory representing inﬂuence relations between problems,
suggestions, arguments, criteria, project members and their competencies, tasks,
etc. provides a useful traceability of knowledge used and produced during the real-
ization of design project. These structures also show the relations between the con-
text of the project (organizations and environment) and the element of the design
rationale. Information retrieval process can use these relations in order to provide
a contextual search for required information. This paper shows how this type of
conceptual relations can be useful for information retrieval. In fact, we explained
how a semantic network (represented as a conceptual graph) can provide a contex-
tual and efﬁcient information retrieval. Corese, a semantic search engine tool, has
been used to perform the information retrieval process. Corese creates a mapping
between RDF and conceptual graphs to offer a deep information retrieval. The
search process is based not only on a specialization (as commonly used in ontol-
ogy) but also on knowledge representation inference through relations between
concepts. The results help designer to understand design problems and in previous
Knowledge representation for an efﬁcient re-use of project memory
133
projects and how they have been solved. This makes project memory very useful in
terms of learning from previous experiences.
Examples presented in this paper are extracted from a design project of profes-
sional safety evaluation rules (Bekhti and Matta, 2003). DyPKM and Corese have
to be validated on other design projects. We also plan to deﬁne a graphical inter-
face to display results as graphs or trees, clearly illustrating the relations between
the elements of design project.
Finally, the environment we deﬁned can also be used to gather elements of sim-
ilar design projects in order to build a global classiﬁcation of tasks, problems,
arguments, etc. produced in a company. These classiﬁcations can show the evolu-
tion of design strategies in the company.
References
Bekhti, S., Matta, N., 2003. Project memory: an approach of modelling and reusing the context and the de design
rationale. In: Proceedings of IJCAI’03 (International Joint of Conferences of Artiﬁcial Intelligence),
Workshop on Knowledge Management and Organisational Memory, Accapulco.
Berners-Lee, T., Hendler, J., Lassila, O., 2001. The semantic web. Scientiﬁc American.
Brickley Dan, Guha, R.V. (Eds.), 2004. RDF Vocabulary Description Language 1.0: RDF Schema W3C
Recommendation.
Brown, D.C., Berker, I., 2000. Modeling Conﬂicts Between Agents in A Design Context, Computational
Conﬂicts, Conﬂicts Modeling for Distributed Intelligent System. Springer, pp. 144–164.
Buckingham, S., 1997. Representing hard-to-formalise, contextualised, multidisciplinary, organisational knowl-
edge. In: Proceedings of AAI Spring Symposium on Artiﬁcial Intelligence in Knowledge Management, pp. 9–
16.
Chein, M., Mugnier, M.L., 1992. Specialization: Where do the difﬁculties occur? In: Proceeding of the Seventh
Annual Workshop on Conceptual Structures, Las cruces, New Mexico.
Corby, O., Faron-Zucker, C., 2002. Corese: a corporate semantic web engine. In: Workshop on Real World RDF
and Semantic Web Applications 11th International World Wide Web Conference, Hawaii.
Corby, O., Dieng, R., Faron-Zucker, C., 2000. Querying the Semantic Web with Corese Search Engine,
Prestigious Applications of Intelligent Systems PAIS. ECAI, Valencia.
Dieng-Kuntz-Kuntz, R., Corby, O., Gandon, F., Giboin, A., Golebiowska, J., Matta, N., Ribie` re, M., 2001.
Me´ thodes et outils pour la gestion des connaissances, 2eme ed. Dunod e´ diteur.
Hilbert, D., Billsus, D., Denoue, L., 2006. Seamless capture and discovery for corporate memory. In: The 15th
International World Wide Web Conference (WWW2006).
Jing, Y., Taylor, N., Brown, K., 2002. An intelligent inference approach to user interaction modelling in a generic
agent based interface system. In: Proceedings of ECAI2002 (European Conference on Artiﬁcial Intelligence),
July, Lyon.
Karsenty, L., 1996. An empirical evaluation of design rationale documents. In: Proceedings of the Conference on
Human Factors in Computing Systems. Vancouver.
Klein, M., 1993. Capturing design rationale in concurrent engineering teams. IEEE, Computer Support for
Concurrent Engineering.
Martin, M., 1995. Links between electronic documents and a knowledge base of conceptual graphs. In:
Proceedings of the International Conference on Conceptual Structures of ICCS.
Matta, N., 2000. Conﬂict management in concurrent engineering: modelling guides. In: Computational Conﬂicts:
Conﬂict Modeling for Distributed Intelligent Systems, with Contributions by Numerous Experts. Springer.
Matta, N., Ribie` re, M., Corby, O., Lewkowicz, M., Zacklad, M., 2000. Project memory in design. In: Rajkumar
Roy, (Ed.), Industrial Knowledge Management – A Micro Level Approach, Springer-Verlag.
Sowa, L., 1984. Conceptual Structures: Information Processing in Mind and Machine. Addison-Wesley, Reading,
MA.
Steyvers, M., Tenenbaum, J., 2005. The large-scale structure of semantic networks: statistical analyses and a
model of semantic growth. Cognitive Science 29, 41–78.
134
S. Bekhti et al.
Van Heijst, G., Schreiber, A., Wielinga, B., 1997. Using explicit ontologies in KBS development. International
Journal of Human Computer Studies 46.
Knowledge representation for an efﬁcient re-use of project memory
135
