When defining the semantics of MSC graphs, there are two ways of inter- preting the concatenation of basic MSCs m1 and m2. In synchronous con- catenation, all the events in m1 precede any event in m2. The asynchronous concatenation corresponds to concatenating two MSCs instance by instance.

In this paper, all our verification algorithms assume synchronous concate- nation in the semantics of MSC graphs. This makes the algorithms modular in nature, in the sense that the verification task can be decomposed into smaller tasks that can be verified at each vertex. The verification algorithms for asyn- chronous concatenation are more complex, as they involve the construction of a global reachability graph from the input MSC graph.

For simplicity, we again assume that X,Y do not include any negative user-defined events. Given a set of sets X, we use X to denote the union of the sets in X; e.g., {{a, b}, {a, c}} = {a, b, c}. The meaning of this property template is as follows:

The following Algorithm 2 implements Proposition 3.7 to check whether a given vertex u is always followed by another vertex v in a graph G, with respect to special given start and end vertices in G. The algorithm essentially performs a recursive depth-first traversal of the graph G starting at u and backtracking when reaching any vertex in L. The global array visited of Boolean flags marks vertices already visited.

We thank the BMF Tool project team for implementing our ideas and pro- viding valuable feedback. We appreciate the support and encouragement of Prof. Mathai Joseph throughout the duration of this work. The first author would like to thank Dr. Manasee Palshikar.

as those related to timers. The meanings of an instance and a message depend on the system being described. An instance does not necessarily stand for a computer program; it refers to some active agent or entity. A message does not necessarily represent an actual data message; it may refer to some kind of exchange of information. A message has a name and no further structure or details (in the simplest case). An MSC is not concerned with the actual mechanism or channels of the message transmission, except to assume that the messages are always delivered in the order without any loss or corrup- tion. Further, the send is non-blocking i.e., the sender does not wait until the receiver receives the message.

