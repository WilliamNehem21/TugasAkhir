In [2] a functorial semantics for multialgebras is proposed, extending the classical results concerning algebraic theories. A side result was precisely the characterisation of a simple syntactical device for representing derived operators in a multialgebraic specification, namely, by means of term graphs. In fact the notion of sharing, which is implicit in the framework, allows for an immediate representation both of non- determinism and domain-restriction, thus obtaining an effective tool for specification in this setting.

These conventions facilitate the understanding of the two basic operations on term graphs. The composition of two term graphs is obtained by first matching the roots of the first term graph with the variables of the second, and then eliminating these variables. Term graph G3 is e.g. the composition of G1 and G2. The union is essen- tially their disjoint union, where the lists of variables and roots are concatenated. Term graph G4 is the union of G1 and G2.

The next lemma summarises some results concerning the existence of relevant pushouts and pushout complements, needed to perform the dpo construction in DAG using rules in the format described above. We shall consider plain morphisms only as matches (see Definition 3.1) in view of Lemma 7.3.

