The algorithm animation language AnimalScript, while highly expressive and versatile, is not easy to edit with no editor support. We have developed an Eclipse plugin for editing AnimalScript that includes a text editor, outline, and code assist. We expect that this plugin will make the editing process much easier and faster. The paper presents both technical aspects of the development and the resulting plugin.

All generation approaches except for the first are directly or indirectly based on using AnimalScript, which is in the process of taking over the role of the preferred representation of Animal AV content from the built-in ASCII notation. The rea- sons for this development are the human-readable notation of AnimalScript, the ease with which it can be generated from programs and edited manually, and the expressiveness of the language. Since 2008, Animal also includes an integrated dis- play of the BNF-based definition of the AnimalScript notation, as well as (since 2006) a small text editor for directly entering or modifying AnimalScript input and visualizing the results.

AnimalScript files contain one command per line, such as a definition of a new graphical object or a transformation of some objects. The animation is organized in steps, each of which can contain one or more commands. If multiple commands are used in a step, the step is surrounded by curly braces { }. Please see [9,7] for more information about AnimalScript.

The main target audience for Animal and thus for AnimalScript are students and teachers of Computer Science. We decided to use the text editor provided by the Eclipse IDE, as this IDE is used in many Computer Science courses. Thus, our target users may already be familiar with the basic features of the text editor.

The remainder of the paper is structured as follows. In Section 2, we will briefly summarize the features offered by the Eclipse IDE, focusing on plugins and text editors. Section 3 outlines the plugin for editing AnimalScript code using the Eclipse IDE features. Section 4 shows usage examples to illustrate the support for AnimalScript provided by the Animalipse plugin. Finally, Section 5 evaluates the plugin and presents areas for further research.

Eclipse [2] was presented by IBM in 2001 and turned into open source in 2004. Due to a large number of developers, the platform offers a huge selection of plugins and extensions for different needs, including a large selection of supported programming languages, version control system front-ends for CVS and Subversion, workflow and design components. Probably the best known plugin is the Java Development Tools, employed by many students, researchers, developers, and teachers world-wide for writing Java-based programs.

automatically about changes in the code, and thus update its DOM. However, each key press triggers an update event, which would force the system to parse the complete script (again). Therefore, we decided to enforce a waiting interval of at least 2.5 seconds between two parsing iterations to prevent unnecessary continuous parsing of the editor contents. Of course, this interval can be adjusted by the end-user.

The content assist feature of Animalipse uses the content assist components pro- vided by the Eclipse editors. Based on the internal representation of the script and the current position, the plugin creates a list of recommendations for content that could be used to complete the current selection. Compared to many other languages (including Java), this process is difficult for AnimalScript content: the notation used by AnimalScript contains many optional keywords or elements, making the number of possible completions at any given point comparatively high. After the list is populated, it is presented to the user, who is then prompted to choose one of the elements.

with context information, as shown in Listing 2. The context definition provides additional details about the context of a given leaf in the AnimalScript abstract syntax tree. Line 1 shows the unique identifier of the regarded context element (tupleOfTwoNaturalNumbers), used for defining absolute coordinates. The dollar sign indicates that this is the element to be defined. Each definition line starts with

New AnimalScript files can be generated inside Animalipse by using the built- in creation wizard. The user first uses the File menu, toolbar or menu entry to create a new file of type AnimalScript. In the following dialog, the title of the animation, its width and height and the animation author and title can be specified. This information is then used to create the appropriate AnimalScript header and open the resulting file in the AnimalScript editor.

5. Each step can be folded or unfolded to show more details. If multiple operations take place in the same animation step, they are shown on separate lines. Clicking on an entry positions the cursor on the appropriate line in the text editor.

In this paper, we have presented the Animalipse Eclipse plugin for creating, editing and debugging AnimalScript-based AV content. The plugin is very easy to inte- grate into an existing Eclipse installation and behaves similarly to other established plugins, such as the Java Development Tools plugin for Eclipse. Users should there- fore find it easy to use the plugin to become more proficient with AnimalScript.

