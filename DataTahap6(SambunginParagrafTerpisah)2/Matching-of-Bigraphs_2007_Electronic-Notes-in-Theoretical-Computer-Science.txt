We analyze the matching problem for bigraphs. In particular, we present a sound and complete inductive characterization of matching of binding bigraphs. Our results pave the way for a provably correct matching algorithm, as needed for an implementation of bigraphical reactive systems.

As suggested and argued in [9,1,2] it would be very useful to have an implemen- tation of the dynamics of bigraphical reactive systems to allow experimentation and simulation. In the Bigraphical Programming Languages research project at the IT University, we are working towards such an implementation. The core problem of implementing the dynamics of bigraphical reactive systems is the matching problem, that is, to determine for a given bigraph and reaction rule whether and how the reaction rule can be applied to rewrite the bigraph. The topic of the present paper is to analyze the matching problem.

Our inductive characterization is based on normal form theorems for bi- graphs [13,5], which express how general bigraphs may be decomposed into a compo- sition of simpler graphs. The normal form theorems and also the inductive charac- terization we present here is based on so-called discrete decompositions of bigraphs. Discrete bigraphs are bigraphs with a simple form of linkage. To a large extent, this allows us to analyze matching of a general bigraph by considering its link graph and place graph separately.

Of course, the matching problem is closely related to the NP-complete graph embedding problem. Thus we analyze the embedding problem for a restricted class of graphs, and our inductive characterization makes good use of the algebraic pre- sentation of such graphs [13,5]. One hopes that matching implementations will be efficient in practice since redices typically are small. Furthermore, sorting bi- graphs [3] could be a source of early search elimination.

The remainder of this paper is organized as follows. In Section 2 we give an informal description of binding bigraphs. The main contribution of this paper is in Section 3, where we present our inductive characterization of matching. Section 4 discusses how the inductive characterization may ensure a correct and efficient al- gorithm for matching. In the final sections we discuss related work and conclude.

Given an agent and considering an inference tree operationally bottom up, the rules specify how to decompose the agent while constructing the corresponding context (cf., e.g., the ion rule). At the point where the root of the redex is matched, the switch rule is applied, switching the redex into context position, so that further decomposition of the agent checks that the redex matches. Thus, when inferring a match, every rule except switch can be used in two modes: one where the agent and redex are given, resulting in a context and parameter; and one where the agent and context are given, resulting in a parameter.

Although we can (e.g., in Prolog) base a matching algorithm directly upon the matching rules, we do not claim that an efficient matching algorithm has to be so based. We have introduced matching rules for a dual purpose: first, to characterise matching structurally and inductively in order to understand it (in particular to understand the relation to representations based on normal forms and to understand where exactly choices between different matches can be made during matching); second, to provide a point from which to begin the search for truly efficient matching algorithms, and to verify them. This rigorous approach to matching is justified, in our view, because matching will be the workhorse of any implementation of bigraph dynamics.

Bigraphical reactive systems are related to graph transformations systems; see [6] for a recent comprehensive overview of graph transformation systems. In partic- ular, bigraph matching is strongly related to the general graph pattern matching (GPM) problem, so general GPM algorithms might be applicable [17,7,10,20]. Due to the special structure of bigraphs, general GPM algorithms are expected to be inefficient, although some GPM tools [19] use heuristic search strategies that might be able to discover and exploit bigraph structure. A special aspect of bigraphs is that we may match a set of subtrees with a single node (site) in the redex, and match multiple redex roots in different places within the agent. Fu [7] handles such wildcard nodes and multiple patterns, but directly applying his algorithm is not straightforward, as he attacks the problem of tree isomorphism of rooted graphs unfolded to finite unbounded depths. The subtree isomorphism problem [15,18,16] is simpler than GPM, but applying it directly to the place graphs of bigraphs would not exploit the constraints imposed by the link graphs. Rather, efficient imple- mentations of bigraph matching should be derived from the initial implementation by experimenting with different normal inference tree definitions, and combining it with subtree isomorphism algorithms. The inductive characterization provided here will make it easier to prove the actual algorithm correct.

