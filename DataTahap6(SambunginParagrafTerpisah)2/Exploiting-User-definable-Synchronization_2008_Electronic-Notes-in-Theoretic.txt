Parametric Synchronized Hyperedge Replacement (PSHR) is a graph transformation formalism where pro- ductions specifying the behavior of single components can be synchronized to give full transitions. The main feature of PSHR is that the synchronization model is user-definable. To enhance the applicability of the approach we propose a simplified and more suggestive semantics, preserving however the expressive power of the original one. We also show how some common synchronization models can be formalized and exploited inside PSHR. This allows to simplify the modelling step, and the produced model too. We apply this approach to the airport case study of FET-GC project AGILE.

Many approaches to this problem have been presented in the literature, from UML [13] to different Architecture Description Languages [3]. We choose as frame- work Synchronized Hyperedge Replacement (SHR) [6], which is a graph transfor- mation framework. Thus the system is modelled as an (hyper)graph, where (hy- per)edges are components connected through common nodes. This provides both sound mathematical foundations and a suggestive visual representation. In SHR the behavior of components is specified by productions which can be synchronized

PSHR is very expressive, as shown in [11], but its formal semantics is quite heavy and difficult to understand. This problem is common to other SHR variants, and is aggravated in PSHR by the need to manage different synchronization models. The problem is due to the fact that the standard semantics of SHR is based on inference rules that exploit a representation of graphs as terms in an algebra. In this presentation each part of the transition is obtained as a result of many inference steps, thus it is not easy to guess the global effect of a set of productions. We propose a more extensional semantics, where the synchronizations allowed on a node by a specific SAM are directly characterized, and an algorithm specifies how to build a full transition. Also, the semantics is based on a set-theoretic representation of graphs instead of on an algebraic one.

We also show how a synchronization model can be formalized as a SAM, and how PSHR can be used to model the evolution of a system using this SAM. We apply this approach to the airport case study [2], which has been proposed in- side the FET-GC project AGILE [1] on architectures for mobility. We show that parametric synchronization allows a simpler model than the one presented in [4], where a synchronized version of Double Pushout [7] based on a fixed two-parties synchronization is used.

We will not state here a formal theorem relating our semantics with the one presented in [11], since the present semantics formalizes a more refined approach to PSHR w.r.t. the older one available in [11]. In fact, the two approaches allow slightly different classes of SAMs. We will however discuss informally the differences between the two semantics.

We show here how the approach described above can be applied to the airport case study [2] of FET-GC project AGILE [1]. Since we are not aiming at tackling the whole case study, but just at showing how PSHR can be applied, we will do some simplifications. For a more complete approach to this modelling problem see [4].

