In order to determine the pain intensity level accurately, researchers start to automate the pain intensity recognition based on several factors like facial expressions and biopotential signals. Facial expressions are recorded for subjects while experiencing pain through a controlled experiment. Biopotential signals are sim- ply electronic signals produced by the electrochemical activities of a cell type during physiological processes that occur in the body, they are measured by attaching specific type of sensors to the skin called an electrode. Pain recognition automation can be done using either data or both of them. In this work, we are going to use biopo- tential signals dataset containing four levels of pain; the signals are obtained from Electromyography, Skin Conductance Level, and Electrocardiogram, the dataset is described in details in Section 3. Pain Intensity levels can be classified using prediction algo- rithms which feeds on data, as it is known the more data given to the algorithm, the more effective it can be [4]. Medical problems suffer from the lack of data because of its sensitivity, therefore, the

This research is divided into five sections. Section 1 displays the introduction to the research problem and methodology. Section 2 presents some of the previous work done in the field. Section 3, explains the Generative Adversarial Networks (GANs) framework, Section 4, presents the methodology of this work. Section 5 pro- vides an overview of the dataset used in this work and Section 6, presents the experiments and results.

The problem with this kind of measures is its dependence on patient awareness, communication, and experience of pain. Thus, it will not work on cases like traumas and infants. Therefore, more reliable ways of measuring the pain level have to be developed, such as automatic pain intensity recognition.

In 2017, Lopez-Martinez and Picard R. [8] introduce an approach containing two-stage learning for the 10 levels VAS auto- matic estimation. The first stage is using Recurrent Neural Network (RNN) for Prkachin and Solomon Pain Intensity (PSPI) score estima- tion which is another pain intensity measurement from face images, which are fed to the next stage. The second stage takes the PSPI score for each person for VAS estimation using Hidden Conditional Random Fields (HCRFs); the model is personalized using a unique score for each person from his facial expressiveness. The dataset used contains 25 subjects suffering from shoulder pain; their faces were recorded while doing movements in both the affected and unaffected arms. For evaluation purposes, the dataset was split into train and test sets, after training the model on the training model, the Intra Class Correlation (ICC) and the Mean Absolute Error (MAE) were used as evaluation measures. Moreover, the results of the two algorithms were compared with the Support Vector Regression (SVR) as a baseline method.

Zhou J. [9] presented framework used Recurrent Convolutional Neural Network (RCNN) for automatic frame-level pain intensity estimation. First, the faces Images were wrapped to the same fron- tal pose from different poses using Active Appearance Model (AAM). Second, since extracting features from each frame in the video separately have its limitation in describing dynamic informa- tion from previous frames, features were extracted from adjacent frames using a sliding-window strategy to allow using historical frames while keeping a fixed-length input. Finally, the recurrent convolutional neural network architecture was designed for continuous-valued pain intensity, by modifying the loss and acti- vation function in the last layer of the network. At each iteration in the training process, a subset of the training set containing all PSPI levels with the same percentage was taken. As for the evalu- ation phase, following the leave-one-subject-out strategy, the average Mean Squared Error (MSE) and Product-moment Correla- tion Coefficient (PCC) were calculated, the experiments showed promising results compared to other approaches on the same dataset.

Thiam P., and Schwenker F. [10] presented a personalized pain recognition system depends on a hierarchical fusion architecture to take advantage of all the extracted features, where dimensional- ity reduction is applied on each set of features first, then each set of the remaining features are sent to the classification process, which consists of three layers, first, each subset is fed to the random for- est classifier, second, the results are sent to a pseudo-inverse map- ping and a multi-layer perceptron (MLP) mapping, finally, using both of the scores of the second layer, a pseudo-inverse mapping produce the final label. The model was personalized using the Hausdorff distance as a similarity metric, to select samples from participants from the training set that are similar to an unseen par- ticipant. The evaluation of this model follows the leave-one- participant-out strategy, the results outperform the baseline meth- ods using 30 participants.

Lopez-Martinez, 2018, [12], presented an approach to handle the pain intensity recognition as a regression problem, where two types of Recurrent Neural Network (RNN) architectures are used, the first architecture is a traditional fully-connected RNN which is able to capture temporal dependencies since the output is fed back to the input. The second architecture is a Long Short- Term Memory Neural Network (LSTM-NN) which learns the long- term dependencies. The experiments showed that the results are obtained using the skin conductance features outperforms other baseline methods, using three evaluations metrics; Mean Absolute Error (MAE), Root Mean Square Error (RMSE), and coefficient of determination (R2).

Chu Y. [13], in this research, the authors focused on the feature processing, since the dataset used is novel, after extracting features from the raw signals, then the extracted features are reduced using Genetic Algorithm (GA), to remove redundant and irrelevant fea- tures, then applied Principal Component Analysis (PCA), to trans- form the features into linearly uncorrelated space. Three types of classification including linear discriminant analysis (LDA), k- nearest neighbour (KNN) algorithm, and support vector machine (SVM) were applied and evaluated for single-signal datasets, multi-signal datasets, multi-subject datasets and multi-day datasets.

tested using the same classification architecture. Moreover, grid search was used to find the most optimal parameters. The experi- ments results evaluation followed the 10-fold stratified cross- validation for each subject. The best overall performance was obtained by using all the video and biomedical features.

Thiam P. [15], proposed an approach to find which modality from both video and signal features give the best result in the pain intensity recognition problem in person independent setting. Each modality was used to train a regression model based on random forest, and in the end, all of the modalities were used together in an early fusion model. The used evaluation metrics are Mean Abso- lute Error (MAE), and Root Mean Squared Error (RMSE), experi- ments showed that Skin Conductance Level (SCL) give the best results on its own, while the Electrocardiogram (ECG) has the worst performance.

A. S. F. Thiam P. [16], in this work, a trimodal of audio, video, and signals were used for the pain intensity recognition problem, by doing experiments on several fusion architectures, to take the full advantage of the diversity of the extracted features. Both early and late fusion were applied, in the early fusion, all the extracted features is fed to a single Random Forest classifier. As for the late fusion, two architectures were presented, First, Late Fusion (A) in which the extracted features belonging to the same channel (Audio, Video, Signals) are concatenated, then fed to the random forest clas- sifier. Second, Late Fusion (B), where each set of extracted features belonging to one modality is fed to a single Random Forest classi- fier, both architectures were mapped using the mean and Linear Discriminant Analysis (LDA) to decide the output. The evaluation of the fusion architectures showed that user-specific classification outperforms independent settings classification.

Kachele M. [17] proposed personalizing pain intensity recogni- tion systems using different techniques with different information sources, the idea behind penalization is to estimate the pain level by identifying the most similar subjects in training set to the new test subject. The used techniques to find the similarities between sub- jects belongs to three main groups; First, Meta-information, which is general information about subjects like age and gender. Second, distance-based measures, the proposed techniques belonging to this group are K-Nearest Neighbor and Hausdorff distance. Finally, machine learning-based algorithm, this group is divided into mea- sures based on supervised learning, measures based on unsuper- vised machine learning and proxy classification.

Xie Q. [22], in this work, a data augmentation method is applied to unlabeled data in a semi-supervised learning setting; this method called Unsupervised Data Augmentation (UDA). UDA make the model more consistent while training the real unlabeled data, and the augmented unlabeled data, instead of using random noise, UDA use more realistic noise generated by previous data augmen- tation methods, and minimise the KL divergence between the pre- dictions on the real data, and the predictions on the augmented data.

Tran T. [23], in this paper, the authors proposed using a novel Bayesian formulation for data augmentation, by treating the new data as missing data points that are sampled from the distribution of the given annotated data points. Moreover, both the process of the generator distribution and the classification model are trained jointly, and this method showed improvement in the result.

Lim S., 2019. [24] In this paper, an algorithm called Fast AutoAugment is proposed Bayesian Data Augmentation motivates that, Fast AutoAugment treats augmented data as missing data points, and are recovered by the exploitation-and-exploration of a family of inference-time augmentations, this search is optimized by Bayesian algorithm. Experiments using several datasets showed that the search time is speeding up than AutoAugment, and the error rate was improved.

Generative models have existed for a long time; even though the generative models have many benefits, they have not attracted much attention, due to the lack of the needed computational power, and the complication of implementing the structure of such models [29]. The importance of the generative models exceeds the limitation of generating fake samples. They can be useful in a vari- ety of applications such as Handling missing data, like [30], which trained an image completion network to fill the missing parts of images. Another usage is enhancing data quality such as in [31], where blurry images have been enhanced to a clear high- resolution image using the generative model.

Decision-rule based algorithm originally used in game theory, where two players are playing a turn-based game, to maximize the current player gain, while minimizing the opposite player gain at the same time. In turn-based games, each player has no control on the other player moves, which arises the need of using adver- sary methods. Adversarial training is a discipline of machine learn- ing used when another model or an optimization algorithm enters the worst case input for the model. In the minimax algorithm, each player aims to make the worst possible scenario for his opponent. An evaluation function determines the gain in each game, each player makes the best possible move, in which his evaluation score is maximized and the opposite player score is minimized. An opti- mal solution for two optimal players would be finding a point where the current player maximum gains are the same as the

GANs was first introduced by Goodfellow et al. in 2014 [32], the basic idea is to simultaneously train two deep neural networks by allowing them to play a game together [33]. The first network is called the generator (G), responsible for generating fake sample by learning the distribution of the training samples. The second network is the discriminator (D), which is responsible for evaluat- ing the quality of the generated samples by applying traditional supervised learning, to distinguish real from fake samples.

A model that combines energy-based GANs with auto-encoders was proposed by [39], where the discriminator is viewed as an energy function. The energy function is a mapping function of each input point with a scalar value called the energy; the lower energy value is the better. The discriminator energy function can be viewed as the generator cost function, since the good generated sample is given low energy value, in contrast with the bad sample which is given high energy value. In energy-based GANs the dis- criminator aims to give the fake samples high energy values, while the generator aims to generate fake sample in the regions where

Feature selection is the process of selecting the most relevant subset of features from the complete set of features in the dataset without losing important information, by discarding the irrelevant or less helpful features in solving the problem at hand [41]. Rele- vant features hold the most useful information for the predictive model while the irrelevant features are redundant, noisy or com- pletely useless features. The feature selection process is considered very important since it reduces the memory storage, training time, computational cost and increases the performance of the predic- tive model [42].

Feature selection is categorized into three main classes: First, the wrapper methods, that considers feature selection as a search problem, where it tries different combinations of features and eval- uate the quality of each combination using a predictive algorithm. Second, the filter methods, which deals with feature selection as a pre-processing step, where it uses statistical methods to associate each feature with a score, rank them based on this score, and then use the features with the highest scores in the predictive algo- rithm. Finally, the embedded methods, where the feature selection process is integrated with the prediction algorithm as a part of the learning phase, in each iteration the model learn which combina- tion of features improves the prediction algorithm performance.

Third, after doing the experiments using only the real data, we start the data augmentation process using LSGANs. The implemen- tation of the LSGANs was done using the rivalgan library, which is written using TensorFlow library in python. Rivalgan library was implemented to generate numerical data using different types of GANs. The library was customized to suits the pain intensity dataset.

