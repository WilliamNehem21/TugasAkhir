and Section 3 provides the formal foundations, defining and proving correctness of the reflective construction. Section 4 explains the reflective design of a LTLR model checker based on the foundations. Section 5 illustrates the use of the model checker with an example; and Section 6 discusses related work and presents conclusions.

6 See [16] for basic notation on term rewriting. Positions in a term are denoted as strings of nonzero natural numbers and represent tree positions when the term is parsed as a tree. Two useful notions are that of a subterm of a given term t at a given position p, denoted t|p, and of replacement in t of such a subterm by another term u at position p, denoted t[u]p. For example, in the term t = x + ((z + 0)+ y), the subterm at position 2.1 is z + 0, and the replacement t[z]2.1 is the term x + (z + y).

At the syntactic level, we have seen that LTLR contains LTL. Similar contain- ments exist for pure action logics [31]. This generality has a counterpart at the semantic level: both Kripke structures and labeled transition systems can be seen as very simple special cases of rewrite theories [31].

