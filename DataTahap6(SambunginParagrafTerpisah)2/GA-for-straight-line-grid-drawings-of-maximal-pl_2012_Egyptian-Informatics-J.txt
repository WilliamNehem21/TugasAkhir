Abstract A straight-line grid drawing of a planar graph G of n vertices is a drawing of G on an integer grid such that each vertex is drawn as a grid point and each edge is drawn as a straight-line segment without edge crossings. Finding algorithms for straight-line grid drawings of maximal pla- nar graphs (MPGs) in the minimum area is still an elusive goal. In this paper we explore the poten- tial use of genetic algorithms to this problem and various implementation aspects related to it. Here we introduce a genetic algorithm, which nicely draws MPG of moderate size. This new algorithm

Many algorithms for graph visualization have been pro- posed, and an extensive survey was done by Di Battista, Eades and Tamassia. Heuristic approaches were introduced to gra- phic drawing in earlier researches [16,17], and of which, genetic algorithm (GA) show its excellent flexibility to complex con- strains. GA can be a viable alternative to more traditional ap- proaches for graph drawing, but at the same time encounters serious performance issues, which made it hard to be applied to large scale applications [18,19].

The remainder of the paper is organized as follows. In Sec- tion 2, presents the principles of GA, then it is introduce the problem representation and the genetic operators we used. In Section 3, the representations of chromosomes are explained. The selection and the evaluation function are investigated, the genetic operations are explained in Section 4. The param- eters of our algorithm, the results are given in Section 5. Final- ly, conclusions are in Section 6.

GAs are a class of randomized optimization heuristics based loosely on the biological paradigm of natural selection. While the exact mechanisms behind natural evolution are not very well known, some aspects have been studied in considerable depth. The general principle underlying GAs is that of main- taining a population of possible solutions, which are often called chromosomes. It is believed that chromosomes are the information carriers and that the evolution process works at the chromosome level through reproduction. The reproduction can be made by either combining chromosomes from the par- ents to produce offspring, a process called crossover, or by a random change occurring in the chromosome pattern, termed mutation.

Population size is the number of chromosomes used to rep- resent a set of solutions to the problem. In our problem a pop- ulation is a set of graph layouts. The population undergoes an evolutionary process that imitates the natural biological evolu- tion. In each generation better chromosomes have greater pos- sibilities to reproduce, while worse chromosomes have greater possibilities to die and to be replaced by new individuals.

A GA first creates an initial population of solutions. The solutions are then evaluated, using an application-specific cri- teria of fitness, to characterize them from most fit to least fit. A subset of the population is selected, using criteria that tend to favor the most fit solutions. This subset is then used to produce a new generation of offspring solutions. Finally, a number of solutions in this new generation are subjected to random muta- 2. The parents change the genes 5 and 9 (from Parent-1) and genes 5 and 9 (from Parent-2). then genes g5 = (2, 2), and g9 = (1, 1) of Child-2. Similarly, the genes g5 = (4, 1), and g9 = (3, 5), of Child-1. Clear that, the Child-1 is represent a solution of our case problem and good chromosome.

Groves et al. [42] introduced about a dozen different muta- tion operations. We have used two different mutations per- formed best in our tests. First, single mutation, choose a random node and move it to a random empty position. Sec- ond, inversion mutation, the order of the genes is inverted be- tween two random nodes.

