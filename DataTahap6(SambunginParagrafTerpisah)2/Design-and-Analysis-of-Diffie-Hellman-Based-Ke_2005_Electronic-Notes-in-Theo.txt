The entities who want to perform an authenticated key exchange are tradi- tionally named Alice and Bob. The other main principal is the trusted server. Alice and Bob are assumed to share long-term keys with the server. We use the obvious symbols for Alice (A), Bob (B), the trusted server (S), and the shared keys (kAS, kBS, kAB).

In the previous one-time ID system [2], secret key is assumed to have been al- ready shared between Alice and Bob before a key exchange begining. Because of this assumption, if a principal wants to communicate with other user, he needs to prepare shared secrets with all partners beforehand. Therefore, this system cannot achieve good scalability. To provide high scalability for a sys- tem with one-time ID, we propose a new system that uses trusted server. In the proposed system, a secret key is assumed to have been already shared be- tween a user and a server beforehand, and the user can communicate securely with any other users.

P1 and P2 denote each principal shares a long-term secret with the server beforehand. P3 and P4 denote each principal knows own Diffie-Hellman public key. P5 and P6 denote each principal knows own Diffie-Hellman public key is fresh. P7 and P8 denote each principal knows own Diffie-Hellman private key. P9 and P10 denote the server believes that each principal controls their own Diffie-Hellman public key. P11 denotes Alice and the server share one-time ID used in the session beforehand. P12 and P13 denote Alice and the server believe that one-time ID is fresh. These assumptions are derived from the property of one-time ID, that is, one-time ID can be used only once. P14 denotes Bob believes his nonce is fresh.

From above analysis, we can derive following conclusion. Both G1 and G2 for Bob are derived in line 10. Moreover, both G1 and G2 for the server are derived in line 2. For Bob, G3 is derived in line 6, G4 in line 7, G5 in line 9 and 10, and G6 in line 6 and 10.

From above analysis, we can derive following conclusion as well as Alice. Both G1 and G2 for Alice are derived in line 10. Moreover, both G1 and G2 for the server are derived in line 2. For Alice, G3 is derived in line 6, G4 in line 7, G5 in line 9 and 10, and G6 in line 6 and 10.

One-time ID needs two properties. One is that one-time ID can be used only once, and the other is that an adversary, who does not know secret in- formation, cannot guess unused one-time ID. Hence, there are two calculation methods of one-time ID as follows.

In this paper, we presented a scalable authenticated Diffie-Hellman based key agreement protocol using trusted third party, which uses one-time ID to achieve anonymity in application layer. We analysed this protocol using SVO Logic [7,8], and showed that our protocol can achieve considered authentica- tion goals. Furthermore, we considered one-time ID synchronization problem and computation methods of one-time ID, and proposed the solution for this problem.

