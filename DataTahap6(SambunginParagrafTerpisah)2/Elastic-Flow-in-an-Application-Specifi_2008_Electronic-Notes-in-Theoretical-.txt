generating a topology and router placement. We use the communication profile of the SoC design to drive the binary-tree topology creation and the physical placement of routers, and a force-directed approach to determine router locations. The nature of elastic-flow removes the need for large router bu ers, and thus we gain a significant power and space advantage compared to traditional NoCs. Additionally, our network is deadlock-free, and paths have bounded worst-case communication latencies.

As process scaling continues, more complex designs can be fit on a System-on-Chip (SoC). The design difficulty of SoCs is increasing with multiple clock domains and intellectual property (IP) components integrated in one design. A Network-on-Chip (NoC) is a solution for the increasing communication complexity, which has made traditional point-to-point and bus interconnects less feasible [2,5].

Globally asynchronous, locally synchronous (GALS) communication is an answer to the problem of maintaining a low-skew global clock signal across a large SoC. In GALS, communication is asynchronous between isolated synchronous domains. The overarching NoC communication structure is a natural design space in which to include GALS principles, with recent implementations showing promise [3,13].

In this work, we present an asynchronous NoC using an elastic channel protocol, which offers a number of advantages over traditional NoC elements. We then present a workflow for automatic network topology generation and router placement. We use heuristic algorithms, but an optimal mixed integer linear programming method can be used [17], at the sacrifice of scalability. We use the communication charac- terization of a design to drive the topology generation, router placement and link bandwidth matching.

Our paper is organized as follows. Section 2 describes our novel network com- ponents and our elastic-channel protocol. Section 3 specifies the analysis needed to synthesize an efficient network. Sections 4 and 5 explain our algorithms for de- termining routing topology and network component placement. Finally, Section 6 presents our conclusion.

Our network fabric is based on latency insensitive protocols. Latency Insensitive or elastic system design are an adaption of asynchronous handshake protocols to the clocked domain. These protocols allow extra pipeline delays to be inserted into a datapath without changing the results of the computation. Elastic systems are just like clocked systems in that they consist of a collection of modules and channels.

nels. The muxes steer data on incoming channels to one of the other two outgoing channels. The merge elements allow each of the outgoing channels to be shared the other two incoming arms in the T. Fair arbitration protocols are used between the incoming channels for both the clocked and asynchronous designs. See [18] for more

System characterization is the process of discovering the communication properties of paths between blocks of an SoC design. Unlike chip multiprocessors which run arbitrary applications, SoCs typically have a well-known traffic model of commu- nication between blocks. Such SoCs include small designs (MP3 decoder) to large designs (Philips Nexperia [6]). Other research has developed methods to perform this characterization [9,11], and it has been used in related automatic NoC synthe- sis [10,17].

The topology generation algorithm uses a CTG of a design, as specified by the system characterization process, to determine which IP blocks connect to which routers of the binary-tree. The process is iterative, where each iteration connects two unconnected groups with a new router, forming a new group. Each group consists of one or more IP block(s) and their previously connected routers. The end result is a binary tree, with the maximum number of routers in a path on the order of O(log2 n), where n is the number of IP blocks. Others have proposed a similar

The physical placement of network routers is an important step to minimize la- tency on critical communication paths. This is especially true when the network is asynchronous because physical distance between endpoints (routers or cells) directly determines latency. In a synchronous network this is also true, but the number of routers through which a message must travel has a greater effect.

We use a force-directed method [12,7] modified for our router placement problem to determine router locations. The underlying theory has been in literature for decades, but the details of this implementation and its application are novel. The input to this algorithm is a CTG, network topology, and IP block layout. The CTG is generated during system characterization, the network topology is the binary routing tree built in Section 4, and the block layout is generated by the floorplanner.

The key concept is that each path in the CTG may assert a force on a router along the path to attempt to move it such that the physical path length is shortened. A force is only asserted on a router by a particular path if that router is considered critical. A router that is not critical for a given path and axis simply means that moving it along that axis does not yield a shorter path. This is explained in depth in Definition 5.1.

to block 4 through router C. Router C has forces excerted on it due to the path from node 3 to 4 (P34) and path P14. Since the weight on P14 is so much larger than P34, it has much more effect over the placement of router C (and D). Also notice that even though blocks 2 and 4 are connected by a single router, they do not communicate and thus there is no force on router C bringing it closer to the midpoint of its connected blocks, unlike routers A and B and their connected blocks.

You, J., Y. Xu, H. Han and K. S. Stevens, Performance Evaluation of Elastic GALS Interfaces and Network Fabric, in: Third International Workshop on Formal Methods in Globally Asynchronous Locally Synchronous Design (FMGALS 07), Elsevier Electronic Notes in Theoretical Computer Scinece, 2007.

