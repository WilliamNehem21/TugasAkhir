Suffix arrays were proposed in order to solve string processing problems using less space than ST s [23]. However, the information of suffix arrays correspond only to leaves of ST s in lexicographical order. Nevertheless, suffix arrays can be enhanced with longest common prefix information (LCP ), which implicitly encodes the topology of the associated ST . Hence, a suffix array can replace entirely a ST if provided with LCP information and navigational operations over it [2].

In order to evaluate the proposed implementation, experiments were performed with two indices. The first one is based on a uncompressed suffix array provided by [25] and uncompressed LCP information calculated with the method from [18]. The second index is a CST proposed by the Succinct Data Structures group (SuDS) from the university of Helsinki [34] [33], which is based on [31].

The paper is organized as follows. All necessary basic concepts are given in Section 2; compressed suffix arrays and LCP are presented in Section 3 and then, in Section 4, compressed suffix trees are introduzed. Then, in Sections 5 and 6 re- lated work and experimental results are presented, before concluding and presenting future work in Section 7.

Still in the ambit of suffix arrays, Kasai et. al proposed a O(n) method to compute the LCP information [18]. Abouelhoda et.al showed many applications that have arisen from the suffix array data structure and LCP information [1]. The same authors, in another work, showed that every problem solvable with the help of a suffix tree is also solvable by replacing suffix trees by enhanced suffix arrays with the same time complexity [2]. Later, Puglisi et. al introduced a taxonomy for the suffix arrays construction algorithms algorithms [28].

Despite of being an important resource, the building time is not crucial for applications for which the index needs to be built only once. A typical example is the problem of mapping fragments of DNA to a reference genome. In this application, the index for the genome needs to be built only once in order to map several billions of fragments.

