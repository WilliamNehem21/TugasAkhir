Modern society and economy rely on infrastructures for communication, finance, energy distribution, and transportation. These infrastructures depend increasingly on networked information systems. This leads to vulnerabilities, for the exploitation of which there have recently been a number of widely publicised examples. Correct design and implementation of security-critical systems that are part of an open network is a difficult task. In practice, most vulnerabilities arise from bugs in implementations. It would be highly desirable to gain confidence in the protection of implemented security-critical systems against attacks.

To perform a cash-based load transaction, the cardholder inserts his card into the card reader and the money into the cash slot of the load device. To load the cash on the card, he enters the PIN. Note again that the cardholder is not able to communicate with the card directly, but only through the display of the load device. A Load Secure Application Module (LSAM) is used to provide the necessary cryptographic and control processing. The LSAM may reside within the load device or at the load acquirer host. The load acquirer keeps a log of all transactions processed. Through the load host application, the LSAM communicates with the card issuer. Below, we analyze the load protocol between the card, the LSAM, and the card issuer that is executed after the cardholder inserts the cash.

need to be secured. Otherwise an attacker could initiate the protocol without having inserted cash into the machine. For simplicity, we leave out the communication between the LSAM and loading device to determine the amount to be loaded, but assume that the amount is communicated to the LSAM in a secure way. Here, a

For the participants of the protocol, we have the classes Card, LSAM, and Issuer. Also, each of the three classes has an associated class used for logging transaction data named CLog, LLog, and ILog, respectivly. The logging objects simply take the arguments of their operations and update their attributes accordingly.

Properties to be tested: We turn to the formalizations of the above security conditions, which should be tested using the model-based testing approach. We focus on the condition providing security for the load acquirer. According to the CEPS, the value mln, together with the value rln sent in the CreditforLoad message to the card, is taken as a guarantee that the amount m specified in mln has to be paid by the specified load acquirer to the issuer of the specified card, unless it is negated with the value rcnt [5, Tech. Spec. 6.6.1.6]. The security condition is thus formalized as follows:

For classical specification based testing, the main emphasis of testing is on nor- mal system behaviour (e.g., for certain inputs, the correct result is computed). When security aspects come into consideration, this is turned around: the system has to behave in a secure way even in case it is under attack. Thus, in testing we have to assume that system components may act maliciously.

