We consider the problem of secure content distribution in mobile ad hoc networks (MANETs), where a single source disseminates data to a dynamically changing group of authorized receivers. In this context, the source and the receivers are mobile nodes part of a multihop ad hoc wireless network. A simple way of ensuring the secrecy of the data (i.e., that only an authorized subset of users be able to recover it), is for the source to use (at the application layer) a broadcast encryption scheme to encrypt all messages before transmission. This guarantees that even if the encrypted data is received by all users, only the authorized subset will be able to recover the content.

GKMPAN [32,33] provides scalable and efficient mechanisms for group rekey- ing in ad hoc wireless networks, based on probabilistic key pre-deployment [7,34]. During system setup, nodes are pre-loaded with m symmetric keys chosen out of a pool of l keys. These keys are later used by neighboring nodes to establish se- cure channels. When an addition or revocation event occurs, the group manager generates an intermediate key and propagates it through the network. Nodes use this intermediate key to update both the group key and the keys they share with any revoked node. Since, with high probability, any two nodes will store at least one key in common, a partitioned node will likely be able to recover missed up- dates from its neighbors. This work comes closest to ours since nodes that miss update messages (e.g., due to lossy links or network partitions) are able to recover the new group key mostly through local interactions (with low probability a node might need to contact the key manager). This partial statelessness feature makes GKMPAN attractive for use in MANETs, especially since rekeying has a small per node transmission cost.

While GKMPAN has several desirable features, the approach we take in this work achieves new and useful properties. For instance, since our reliability mech- anism is independent of our secure content distribution mechanism (i.e., of the underlying broadcast encryption scheme), we can leverage the resources of nodes that are not authorized group members. Our system also allows partitioned nodes to recover any arbitrary (but fixed) number of missed messages with certainty, while GKMPAN only provides a probabilistic guarantee. In addition, since GKMPAN re- quires all connected nodes to erase the intermediate key after they update the group key and their compromised keys, a partitioned node that rejoins the network after a missed rekey message will never be able to update its compromised keys. As a

This work relies on several network and security assumptions. The receivers in a broadcast encryption scheme are nodes in a mobile ad hoc network. In addition to nodes in the subset of authorized receivers, the network may also contain non- authorized nodes, which may offer their services to improve the quality of the content distribution service. If an authorized receiver is compromised, the attacker will obtain its credentials, and will be able to decrypt the broadcast content until the compromise has been detected.

We assume the existence of a network layer mechanism (e.g., a multicast routing protocol [22,9]) that ensures efficient message delivery from the center to a specified group of nodes in the ad hoc network. We also assume that the communication and computational capabilities of a node are limited, but that it has relatively large storage capabilities (e.g., a PDA can store up to several MBytes).

updates due to network partitions or lossy links. To address this, we deliver the key updates using our reliable message delivery mechanism. This allows us to take ad- vantage of the reduced communication cost offered by stateful broadcast encryption schemes in the context of highly dynamic mobile ad hoc wireless networks.

We used a random way-point mobility model, but incorporated changes to ad- dress concerns raised in [30] about the validity of the standard random way-point model. In particular, nodes select a speed uniformly between 10% and 90% of the given maximum speed to achieve a more steady mobility pattern and ensure that the average speed does not drop drastically over the course of the simulation. In addi- tion, 300 seconds of mobility are generated before the start of the simulation so that nodes are already in motion. This allows the average speed and node distribution to stabilize before the simulation starts.

During our experiments, we noticed that while a node v is disconnected, the number of connected nodes typically remains very high. Thus, as noted in Sec- tion 5, when v rejoins the network, it should be able to recover several symbols from each encounter. We therefore expect the recovery time for multiple messages to be relatively close to the recovery time for a single message.

