series data are very noisy by nature. Later the issues regarding the existence of non linearity in time series data has been solved by the approach of so many machine learning techniques such as an Artificial Neural Network (ANN), Functional Link Artificial Neural Network (FLANN), Support Vector Machine (SVM) etc. In the last decades, numerous researchers have explored the prediction abil- ity of neural networks for financial market prediction.

tains the related work which basically focuses on the promising techniques used by various researchers in financial domain to get best possible results. Section 3 covers the details of data sam- ples and the dataset regeneration part. Section 4 introduces all the predictive models in details and Section 5 covers the particulars of statistical and optimized based feature reduction techniques. Section 6 provides the result analysis, which includes a schematic layout of the proposed prediction model, parameter setup, detailed steps of the proposed algorithm, the analysis of the experimental

ELM works on the principle of Single Layer Feed-forward Neu- ral Network (SLFN), with the basic difference is that unlike SLFN the hidden layer nodes and biases of ELM need not to be tuned at each iteration. In almost all practical learning algorithms of feed forward neural network, it has been marked that the input weights and hidden layer biases (Huang et al., 2006) are needed to be ad- justed at each iteration. Comparing to SLFN, the learning speed of ELM is very faster with smallest training (Deo, Sahin, 2015; Huang, Zhu, & Siew, 2004; Sajjadi et al., 2016) error and smallest norm of the weights. For developing ELM, Moore-Penrose generalized in- verse takes an important task.

work models, cannot be well trained properly. Hence, the feature reduction technique is introduced in this study to get the most rel- evant features of original datasets, for improving the performance of the model. Both statistical based and optimized based feature reduction methods are employed to the dataset. The details of which are described in this section.

FA accepts the observed variables are the linear combination of unobservable factors and among these factors some are common to two or more variables and some expect unique to each vari- able. The factors which are unique do not contribute to the co- variance between the variables or it (Kim & Mueller, 1978) can be said among the observed variables the common factors, which are smaller in number than the observed variable numbers contribute to the covariation. The basic difference of PCA from FA is that, in PCA, the principal components are having certain mathemat- ical functions of the observed variables, while the combinations of observed variables is not able to express the common factors, Whereas, the main objective of FA is to determine the common factors which can produce the correlations among the observed variables satisfactorily.

Basically the light intensity variation and attractiveness formu- lation are the two important issues in Firefly algorithm. Simply we can say the attractiveness is determined by the brightness or the intensity of the light, which is successively associated with the ob- jective function. The computational complexity of the (Lukasik & Zak, 2009) algorithm is considered to be O(m2) but the large popu- lation size may lead to substantial increase in the time complexity.

Apart from the individual algorithm specific parameters, pop- ulation size and number of iterations are two common control- ling parameters, which are kept fixed for all the experimentation of this work. Population size has a great role in determining the optimal solutions as a small population may miss the part of the solution space and the large populations may increase the compu- tational time, hence a 100 number of populations is considered for a standard comparison. In addition to this, number of iterations is another parameter which effect the running time to get a good so- lution, hence number of iterations is also fixed to 100 for all the experimental work.

malization and feature reduction. For normalization, min-max nor- malization is well thought-out in this study, which scales the data between 0 and 1. In case of feature reduction two types of feature reduction occurs, one is statistical based feature reduction and an- other one is optimized based feature reduction. PCA and FA are used for statistical based feature reduction whereas GA, FO and Firefly algorithm with evolutionary framework are designed for op- timized feature reduction. Now the reduced data are ready for in- put to ELM, OSELM and RBPNN prediction models.

BSE Sensex, NSE Sensex, S&P 500 index and FTSE 100 in- dex are four stock market datasets are selected to evaluate the prediction model. BSE Sensex is one of the main stock market indices, which includes 30 blue chip company. Sim- ilarly, NSE popularly known as nifty fifty, which covers 50 specialized company and these companies is focused on in- dex as a core product. Apart from these two Indian stock exchange, this study has considered two non Indian stock exchange such as S&P 500 and FTSE 100, which is belongs to American and UK exchange respectively. S&P 500 based on 500 market capitalizations whereas FTSE 100 based on share index of 100 companies with highest market capital- ization. For a better evaluation of the experimented models these four different stock exchange value is considered for experimental purpose.

time horizon. In both the cases ELM with the reduced fea- tures obtained from PCA and FA is performing better for one day ahead prediction than the rest of the time horizon days ahead to be predicted. Similarly the result of optimized based feature reduction is analyzed. GA, firefly and Firefly al- gorithm with the evolutionary framework optimized feature reduction methods are well thought out for this study. GA is a stochastic algorithm, where there is no possibility of trap into local optima rather it jumps out of locality. Similarly FO is a heuristic population based algorithm, which explore the search space very precisely. Combining the concept of Fire- fly algorithm with GA, Firefly algorithm with evolutionary framework is designed, where GA updates the current best solutions generated by Firefly Optimization to move towards the best solutions. The motivation behind this integration of firefly with GA is to find good solutions and simultaneously avoiding for trapping into local minima.

