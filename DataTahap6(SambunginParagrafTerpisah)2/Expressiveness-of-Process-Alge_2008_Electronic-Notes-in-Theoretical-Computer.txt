The field of process algebras is sometimes looked upon as a jungle of interrelated but separate theories. There are process algebras for expressing nondeterminism, parallelism, distribution, localities, real time, stochastic phenomena, etc, and each of these aspects can be described in different ways. Various researchers study various subcalculi, and our knowledge of the relationship between them is sporadic.

A few years later (1989) I analyzed the expressible operators of the algebra men- tioned at the end of Section 2.1 [12]. Here the parallel composition is asynchronous, giving the usual interleaving semantics, and this means that the constructions of de Simone cannot be used. Nevertheless the result is that a significant subset of the de Simone format can be expressed up to weak bisimulation, namely those de Simone operators that satisfy the so called idling rules event may involve an arbitrary number of components. This feature is needed in the construction of the supervisory term and its interactions with operands. But process algebras usually have only binary communication. So, to conclude this section, it is remarkable that for most algebras, including the original CCS, there is yet no absolute measure on the expressible operators.

When this is used there is naturally the question if the chosen observables are re- ally exhaustive. Of course, for different purposes different observables are relevant. Also, some of these observables are clearly not enough to capture all of the in- tended semantics, and therefore this criterion is often combined with other, notably operational correspondence.

formalism to a low level one. Now, when E translates from B to A the resulting terms will always be combinations of such protocols, or if you like, snippets of compiled code. But A might contain other things which are not translations of terms in B. Although these will never surface in translations they do surface in the contexts of A, thereby affecting the definition of full abstraction. It may be unreasonable to ask that the encodings E (b) and E (b') behave the same in all possible contexts of A, since they will never be exposed to the full range of such contexts. They will only be exposed to those contexts which are encodings of contexts in B.

