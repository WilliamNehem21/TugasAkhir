Service-based systems are widely used today. Performance and dependability of service-oriented systems are determined by different factors such as performance and dependability of the single services as well as of the infrastructure connecting them. Since the components of service-oriented systems are typically spread over different locations they can very often only be observed by their behaviour in a network. Neither the status of the service itself nor the status of the system executing it can be determined by the user. Proprietary applications add to the difficulties in accessing and observing services and their performance as well as dependability. The inability to internally monitor and measure service-oriented systems raises the need

In order to study the restart method, we apply our iterative approach: In the next section we first derive the formal restart model and present some important properties and results from its analysis. We then proceed to refine the model based on practical measurements in our testbed in Section 3. In Section 4 we discuss advantages and disadvantages of measurements in real-world systems and testbeds, before finally, in Section 5, going full-circle on our iterative method by applying insights from measurements to the quantitative modelling approach. Section 6 concludes this paper.

model the hazard rate describes the potential of completion. In case of an increasing hazard rate the potential of task completion increases and one should not restart the task. If the hazard rate decreases so does the likelihood of task completion over time and one should immediately restart. In practise one rarely encounters a strictly

Second, the restart method lends itself to mathematical modelling. Different formalisms may be used to model the restart method. We choose a simple queueing model, but other models such as a Petri net or a PEPA model [4] can be formulated as well.

chosen URLs. We observe that, while the majority of connection setups finish rather fast, there are several strata of samples at multiples of 3 seconds. These can be attributed to the TCP retransmission timeout (RTO) used to detect packet loss during the connection setup stage [7]. In a service-oriented system, such delays result in drastically increased message-transmission times. Restart may help to avoid these delays.

Experimental evaluation of service-oriented systems is especially difficult. These systems are usually distributed over various physical locations and very complex. Therefore measurements are blurred by various undesired and unspecified effects. Typically, neither the internal state of the system components nor the commu- nication paths are known to a degree that would enable complete explanation of observed data.

injection. In this situation response times in the testbed exhibit little variation as the testbed is hosted on several machines in the same lab connected by a dedicated network. This can be seen in the low squared coefficient of variation c2 = 0.51. With 3% IP packet loss (data set l1a10) the expected response time is much longer and the duration of response times varies much more as can be seen in the larger squared coefficient of variation of the second fitted model.

The model is parameterised with the above service-time distributions obtained in the SOA testbed. Using simulation, we evaluate performance of the Fixed Intervals, Jacobson/Karn and QEST restart strategies. Analysis of the model shows that restart helps to decrease completion times and avoid overload.

The model allows us to compute the queue length and the response time as measures of congestion. Simulated for a given mission time, we can furthermore study the number of completed jobs. The model does not allow for a specification of customers with individual queues and timeouts.

completion times in both scenarios. The improvement is particularly striking with the high-variance service-time distribution (l1a10), where the mean response time was reduced from more than 13500 time units to as little as 165.5 time units by the Jacobson/Karn strategy. With the low-variance service-time distribution (nla10), the effect is much less pronounced. We also observe that with both distributions the adaptive Jacobson/Karn and QEST strategies perform much better than the static Fixed Intervals strategy.

We conclude from the simulation study that the restart method improves re- sponse times even in highly loaded systems. On the other hand, the added com- plexities of the competitive scenario result in timeout values and mean response times that are significantly larger than predicted by the simple analytical model. We see that the timeout value adjusts in scenarios with packet loss where longer response times are to be expected. This avoids unnecessary flooding of the net-

P. Reinecke, A. van Moorsel, and K. Wolter. A Measurement Study of the Interplay between Application Level Restart and Transport Protocol. In Proc. International Service Availability Symposium (ISAS), number 3335 in Lecture Notes in Computer Science, Munich, Germany, May 2004. Springer.

P. Reinecke, A. P. A. van Moorsel, and K. Wolter. The Fast and the Fair: A Fault-Injection-Driven Comparison of Restart Oracles for Reliable Web Services. In Proc.3rd International Conference on the Quantitative Evaluation of SysTems (QEST) 2006, Riverside, CA, USA, September 2006. IEEE.

