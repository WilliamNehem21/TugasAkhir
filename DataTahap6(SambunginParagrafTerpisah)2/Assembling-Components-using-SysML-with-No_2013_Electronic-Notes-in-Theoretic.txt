The SysML language is an UML profile, that is a language for documenting and graphically specify all aspects of a system consisting of hardware and/or software blocks. SysML has been proposed by the Object Management Group (OMG) [1] to define a general purpose modeling language for systems engineering. SysML enjoys unprecedented popularity both in industry and academia, It is used to harmonize the different actors contributing to the achievement of a system, and to ensure consistency and quality of design. It is a well suited language to model embedded systems.

In this paper, we focus on assembling components specified at the first step with SysML diagrams. In the second step, we propose a formal specification and verifi- cation approach to verify components composition based on the SysML models of the first step. Our approach exploit and adapt the interface automata formalism to verify components composition. The interface automata based approach was proposed by L.Alfaro and T.Henzinger, [2,3]. They have specified component in- terfaces with automata, which are labelled by input, output, and internal actions. These automata describe component information at signature and protocol levels. An interesting verification approach was also proposed to detect incompatibilities at signature and protocol levels between two component interfaces. The verification is based on the composition of interfaces, which is achieved by synchronizing shared actions.

As an example, we consider a CyCab car component-based system (in [6]). The CyCab car is a new electrical means of transportation conceived essentially for free- standing transport services allowing users to displace through pre-installed set of stations. It is totally controlled by a computer system and it can be driven auto- matically according to many modes. The goal of the CyCab is to allow to a clients to use the vehicle to move from one station to another. To illustrate this concept, we consider the following system constraints:

The CyCab and its environment can be seen as an abstract system composed of two composite components : the vehicle, and the station. The vehicle is also composed by the primitive components : Vehicle Core, Starter, and Emergency Halt (associated to emergency halt button). The station is composed by the primitive components : Sensor, and Computing unit.

In the previous section, we have proposed to specify component based system archi- tecture with BDD and IBD SysML diagrams. BDD diagram show the system global structure, and the relation between Composite blocks (composite component) and their sub-blocks (sub-components). IBD diagram show the composition links be- tween blocks. In this section, we propose to specify formally this architecture as a graph where nodes correspond to the Blocks of the system and edges represent both action, in the specification and the verification of component assembly. So, we present below a definition of interface automata strengthened by the function that specifies energy consumption. So we define a kind of weighted automata where transitions are annotated with costs which correspond to energy consumption of actions.

