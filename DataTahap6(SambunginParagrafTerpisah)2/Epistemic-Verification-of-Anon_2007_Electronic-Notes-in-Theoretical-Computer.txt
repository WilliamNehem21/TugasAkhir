Anonymity is not a trace-based property, therefore traditional model checkers are not directly able to express it and verify it. However, by using epistemic logic (logic of knowledge) to model the protocols, anonymity becomes an easily verifiable epistemic formula. We propose using Dynamic Epistemic Logic to model security protocols and properties, in particular anonymity properties. We have built tool support for DEL verification which reuses state-of-the-art tool support for automata-based verification. We illustrate this approach by analyzing an anonymous broadcast protocol and an electronic voting protocol. By comparison with a process-based analysis of the same protocols, we also discuss the relative (dis)advantages of the process-based and epistemic-based verification methods in general.

Intuitively, epistemic updates are acts of communication that change epistemic models. A breakthrough in epistemic logic occurred when [3] proposed to view epistemic updates as a kind of Kripke models, with the important difference that the worlds do not carry a valuation but a precondition formula. See also [1,3,2]. Formally, we define:

When modeling security protocols, translating the informal description of the pro- tocol steps to action models can be a challenging and subjective task. But this is in fact always the case with modeling. Compared with other logical modeling approaches, action models have the advantage of being separated from the updates that they are expected to determine. They just have to faithfully represent the communication act that is taking place and all uncertainties regarding that act.

The so-called FOO protocol proposed by Fujioka, Okamota and Ohta [14] is a rather complex voting scheme that guarantees anonymity of the voters with respect to any conspiracy of administrator, collector and external parties. In summary, it runs as follows: By interacting with the administrator and making use of a symmetric key, a nonce and a special property of the digital signing scheme, each voter obtains a so-called signed covered vote. The voter then sends anonymously her signed covered vote to the collector, who publishes it. After the voter has verified that her covered vote appears on the published list, she sends, again anonymously, the symmetric key and covered vote to the collector. The collector can now open it and add it to the clear votes list, that will be made public as soon as everybody has voted.

We presented a tool-supported epistemic verification framework, built on recent work from Dynamic Epistemic Logic [2]. The central new elements are the ac- tion models, which give an elegant and compact representation for communication primitives, and the update product operation, which allows mechanical execution of epistemic updates, therefore bringing the epistemic specification closer to a beha- vioral specification. We showed that a traditional verification toolset can be used to verify a nontraditional and challenging property such as anonymity. We demon- strated the technique on two examples of protocols guaranteeing anonymity.

