Over 30 years ago, the Ethernet protocol was designed to pro- vide flexibility, low cost, and user-friendly solution to network user [1]. However, the tremendous development of technologies and the increasing numbers of hosts in networks have exposed the vul- nerabilities of Ethernet. Scalability is considered one of the most prominent problems in Ethernet networks. It occurs due to the open a serious security vulnerability that attackers can exploit. In particular, ARP suffers from a lack of authentication mechanism. Moreover, recent studies have shown the security vulnerabilities of ARP, notably, ARP spoofing and ARP storm [5]. In light of the aforementioned issue, this paper proposes a floodless and secure mechanism that is capable of suppressing the broadcast traffic while at the same time protecting the SDN network from ARP based attacks. The proposed solution incorporates some basic prin- ciples of recent studies and appends a novel multistage security algorithm. The security algorithm consists of three security stages that examine the behaviour of the incoming ARP packets. The first stage inspects the source IP address, while the second stage ana- lyzes the source MAC address. Finally, the destination IP address is examined in the third stage. In general, this paper aimed to enhance the network by suppressing ARP broadcast traffic and offering protection to the SDN controller and all network hosts from ARP-based attacks. Furthermore, it is worth highlighting that while ARP can be applied in various networks, for the sake of dis- cussion and simulation, this paper focuses on the Ethernet networks.

The third approach is the use of SDN architecture to suppress ARP broadcast traffic in Ethernet networks. In general, the network information can be collected through snooping on ARP and DHCP packets by OpenFlow switches or running discovery protocols such as LLDP [11]. Therefore, the controller has knowledge of all devices in its network.

ARP based attack detection and mitigation algorithm is a multi- stage security algorithm that combines three checks to detect and mitigate ARP based attacks. In principle, ARP based attacks (APR Storm or ARP Spoofing) can occur simultaneously or separately. The attacker tries to change ARP packet information to generate one of the ARP based Attacks.

However, some Cisco devices, through the Dynamic ARP Inspec- tion (DAI), classified device interfaces into two groups, namely, trusted interface (TI) and untrusted interface (UI). By default, the incoming ARP packet rate for untrusted interfaces is 15 packets per second (pps). If the incoming ARP packet rate exceeds the 15 pps, the interface will be automatically shut down [23].

Essentially, during an ARP storm attacks, the attacker sends numerous ARP packets. As mentioned earlier, attackers do not care about ARP packet information in comparison with the amount of ARP packets sent. Therefore, two scenarios have been simulated to create ARP storm attacks (will discuss in the next sections). The attacker sends a certain amount of ARP packets depending on the scenario. However, no specific value can define the ARP storm attack [27]. Thus, different ARP rates are set for sending from the attacker.

dump. The Top command-line tool in Linux is used to capture the CPU consumption generated by the proposed solution. Moreover, the Ryu SDN controller selected as a centralized controller for the proposed solution. Finally, Scapy is a python library that supports a large number of protocols, which can send and receive packets. Thus, the Scapy is used to generate ARP based attacks with multi- ple scenarios.

