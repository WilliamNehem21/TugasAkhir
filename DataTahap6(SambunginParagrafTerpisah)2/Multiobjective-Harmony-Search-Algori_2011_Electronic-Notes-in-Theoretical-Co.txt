Harmony Search metaheuristic is successfully used in several applications of science and engineering. How- ever, its effectiveness in solving multiobjective optimization problems using the concepts of Pareto opti- mality, remains unproved. This paper presents two proposals of the Harmony Search metaheuristic for multiobjective optimization, using the ZDT functions as a test bed. Performance metrics for experimental results show that the proposals are competitive even when compared to NSGA-II evolutionary algorithm.

Harmony Search Algorithm (HS) is a recent metaheuristic inspired by the music improvisation process. It was proposed as a mono-objective problem optimization metaheuristic and, since its creation, it has shown to be effective and convenient in several science and engineering applications, as seen in [14]. The natural and efficient application of HS algorithm to multiobjective optimization problems is a proposed extension of the existing research. Furthermore, the use of this algorithm to solve complex multiobjective problems, like NP-hard ones, is considered as a future challenge [22].

The paper is organized as follows: Section 2 presents the definition of mul- tiobjective optimization problem and other related concepts. Section 3 explains the Harmony Search metaheuristic in detail, making first a comparison to musical improvisation process, and then, describing each part of the algorithm structure. Section 4 presents a brief review of works that treat HS algorithm and multiob- jective optimization. Section 5 presents the adaptations of the mono-objective HS algorithm for both proposals of this paper. Next, section 6 presents the set of tests and the experimental results. Finally, section 7 presents conclusions and future work.

Before introducing the HS algorithm and each of its parts, a brief comparison to the processes of musical improvisation (and optimization) will be given in section 3.1. Then, the structure of the algorithm together with each of its parts will be treated in section 3.2.

{500 mm, 600 mm, 700 mm}, these values make a new solution vector, {100 mm, 300 mm, 500 mm}. If the solution vector is better than the worst vector in HM, then the new vector replaces the worst one in HM. This process is repeated until a stopping criterion for termination of the algorithm is reached or the global optimum is found.

Pitch adjustment is similar to the mutation operator in genetic algorithms. A low value for PAR together with a narrow value for FW can make the convergence of the HS algorithm slow, given the limitation in exploration to a single portion of the search space. On the other hand, a very high value for PAR together with a wide value for FW may cause solutions to disperse around a few potential optima as in random search. For these reasons, usually, PAR[0.1; 0.5] and FW, generally, is bounded between 1% and 10% of all the range of variable values [22].

Gao et al. [7] proposed a modified version of the HS algorithm for mono-objective optimization problems with constraints, using the Pareto optimality concept. The function to be optimized results from the aggregation of the objective function and the weighted sum of constraint functions. The application of the Pareto optimality concept allows to rank the non-feasible solutions, that is, those that violate one or

For this new generated solution, a ranking is calculated considering the solutions stored in HM. If this ranking turns out to be better than the worst ranked solution in HM, the new solution is stored in HM replacing the worst one, choosing randomly among the worst ones if there is more than one. This procedure incurs in an asymptotic cost of O(HMS) to recalculate the ranking of the solutions in HM.

Each iteration begins by improvising all solutions that will belong to HM2, using the same selection method as the mono-objective HS algorithm. This is, the values of each calculated solution are generated using the values of decision variables contained in HM1 as considered values. Once the solutions for HM2 are generated, the Fonseca-Fleming ranking of Hu is calculated.

