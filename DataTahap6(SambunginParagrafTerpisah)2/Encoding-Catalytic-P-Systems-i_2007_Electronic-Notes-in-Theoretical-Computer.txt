so that the checking phase does not delete even unused objects. But another issue appears, because the rule above may execute forever without producing its output objects, even if input objects a and c are present: we have introduced divergence. In fact, after checking the presence of c, we should be able to give some kind of precedence to the second term of the choice, in order to ensure that if some object a is present, then the rule completes its job. By means of prioritised choice, it is possible to model this kind of precedence:

Again, the encoding is completely modular. Furthermore, it does not distinguish catalysts from common objects, in fact the distinction is only useful before compile- time to check the correctness of P system rules. The reason for the higher degree of priority will be clear in the next section.

