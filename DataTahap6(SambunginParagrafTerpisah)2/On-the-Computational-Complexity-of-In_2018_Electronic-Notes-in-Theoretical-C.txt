On the other hand, the quizmaster, who models the computation problem to solve, hides the internal representation of polynomials and only provides observers and constructors to work with polynomials. Direct access to the representation is denied and the player do not know whether the polynomials are given by coefficients, arithmetic circuits, or other data structure. Thus, the quizmaster also models the notion of information hiding.

In particular, Theorem 4.1 generalizes our example in Section 3.2 and says that there exist polynomials which are easy to evaluate, but difficult to interpolate. This interpolation result shows that our quiz game model allows us to obtain not only results concerning elimination but also other problems in scientific computing, for example, we have results in neural networks (see e.g. [1] Section 4.2).

may be useful tools to understand important and still informal Software Engineering concepts, e.g. information hiding. This application may be a step towards the goal of the SEMAT kernel which wants to make Software Engineering become a rigorous discipline. However, our results are limited to examples of a very specific field of mathematics, namely algebraic geometry. An open question asks for the generalization of our model to other problems, for example, an application of our quiz game model can be found in the subject of neural networks in machine learning (see [1]).

