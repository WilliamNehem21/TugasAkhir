Modern LL parser generators overcome some of the limitations of LL parsing by permitting the grammar writer to include code to help disambiguate cases. This is possible because the top-down parsing technique is intuitive. The disadvantage is that the grammar starts to accrete implementation details that obscure its clarity. On the contrary, bison, especially with its precedence extensions, enables grammars to be written in a clean and declarative style.

The key technique in order to perform left-corner parsing is to determine the recognition points for each production in the grammar, the points where ambiguity is resolved. Horspool generalizes recognition points into free positions which are points where a semantic action can be inserted. The recognition point is always a free position, but not vice versa since in some unusual cases [4], non-free positions occur after an earlier free position. In this paper, we choose the earliest free position that has no following non-free positions as the recognition point.

