We describe the deductive and proof presentation capabilities of a rule-based system implemented in Mathematica. The system can compute proof objects, which are internal representations of deduction derivations which respect a specification given by the user. It can also visualize such deductions in human readable format, at various levels of detail. The presentation of the computed proof objects is done in a natural-language style which is derived and simplified for our needs from the proof presentation styles of Theorema.

very good support for symbolic and numeric computations. Another reason is that rule-based programming, as envisioned by us, could be used efficiently to implement provers, solvers, and simplifiers which could, then, be integrated in the Theorema framework [3]. Since Theorema is implemented in Mathem- atica, a Mathematica implementation of a powerful rule-based system may become a convenient programming tool for Theorema developers.

When Prohibit is given a list of symbols {f1,... , fn}, the selection process will ignore the subexpressions of the expressions with the outermost symbol being one of f1,... , fn. The default value of Prohibit is {}, i.e., any subex- pression might be selected and rewriting can be performed everywhere.

MaxDepth The purpose of this option is to avoid infinite computations deter- mined by infinitely long branches in the search space for a derivation. Its default value is 10000. When TraceStyle has a different value than "None", the value of MaxDepth determines the maximum depth of the partial D-tree that is encoded in the proof object which will be created.

