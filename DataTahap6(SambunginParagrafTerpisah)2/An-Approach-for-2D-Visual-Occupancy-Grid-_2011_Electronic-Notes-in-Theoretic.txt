This paper presents an approach that uses planar information (homography matrix) to build a visual 2D occupancy grid map from monocular vision. Initially, a segmentation step is necessary to classify parts of the image in floor or non floor. From this classification is possible to determine which parts of the image are free and which parts of the image are obstacles. Practical results are presented to validate the proposal.

Considering the environment discretization on cells, it may be defined a map with a finite cell set mx,y, where each one has an aggregated value that corresponds to the probability of it being occupied. The cells may have values between the interval of 0 to 1. The value 0 signifies that the cell is empty and 1 that the cell is occupied.

In an older work from Oriolo et al. [29], the authors show that it is possible to formulate and solve perception and planning problems dealing with its uncertainties using the Set Theory (fuzzy logic). The map built by this technique is defined as a fuzzy set, where each point is associated to a real number that quantifies the possibility of it being part of an obstacle. The main advantage presented is the possibility of using many types of fuzzy operators to model uncertainties and aggregate information from multiple sources.

Another variation can be verified at the work of Yguel et al. [37]. This last work approaches data storage and representation problems for large maps and, to do that, proposes a representation form on occupancy grids based on wavelets: Wavelet Occupancy Grids.

About the environment representation it is important to think that, beyond researching data for mapping, it is possible to, for example, associate auxiliary information such as soil deformation, humidity and temperature. This concept of joinning auxiliary information is hard to incorporate inside the traditional SLAM. Estrada et al. [17] elaborated a method called DenseSLAM to allow this kind of incorporation. Because a robot moves through the environment, auxiliary data are stored in an appropriate data structure, such as an occupancy grid, and the

Using a force formulation that decreases with time, Andrade and Sanfeliu [2] show a solution for dynamic environments mapping using an occupancy grid. At each reobservation of a mark the force associated to it is reinforced and a Kalman filter is used to filter low force marks. Canas and Matellan [11] make a comparison between various mapping techniques for dynamic environments using grid.

Yguel et al. [37] proposes the use of GPUs to fuse information and build a grid map, vacating the processor so that it may be used on other tasks addressed to the robot. On the image processing strand, the work of Merhy et al. [27] presents occupancy grid refining strategies based on probabilistic segmentation. The authors consider that the probability associated to each cell from the grid map may be codified as texture levels in an image.

Other works propose the building of volumetric maps through occupancy grids [18,25]. On the first, a 3D grid, using multiple cameras, is used to make a tracking of the people in an outdoor environment. The second one builds a grid map, using stereo vision, with the terrain height variance information. This infor- mation is useful because of the need to calculate the crossing probability for cell from the map considering that the mapped environment is defective.

Although they present many advantages, the solutions based on optical sensors present problems such as: lens distortion, restrict vision field and low resolutions. Bigger detailing about these difficulties, as well as solutions for them can be found at Taylor et al. [34].

map. This is done through two steps: first, an edge extractor is used (Canny) to identify frontiers and then, using the segmented image information, the free spaces in the map are filled. Besides this visual information, a sonar is used to give more trust to data extracted from the image.

Another problem of this approach is that an obstacle in the image is mapped to world projectively. Thus, every cell in the image that is considered not free cannot be mapped into the 2D grid, because there is only information about the frontier region between the obstacles and the floor. To remedy this problem an algorithm for reclassifying the not free cells as obstacle or occlusive was implemented.

