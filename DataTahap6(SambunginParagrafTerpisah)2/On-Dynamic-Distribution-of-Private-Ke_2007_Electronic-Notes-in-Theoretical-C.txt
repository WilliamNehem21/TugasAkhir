Actually, since the first proposal relating threshold cryptography and mobile ad-hoc networks [15], threshold secret sharing has been also used in other works for securing ad-hoc networks [6,7] in a dynamic way. Furthermore, they show how to construct threshold signatures in the dynamic scenario of a mobile ad-hoc network, pointing out the possibility of extending their results to other cryptographic actions. Recently, Saxena et al. [13] provide an efficient admission protocol for ad-hoc networks. They make use of similar secret sharing techniques as in our paper, but

In an identity-based encryption scheme, a pair master public key/ private key is generated by the PKG. Once this master key is established, arbitrary identities may be used as public keys for the scheme. When a sender wants to encrypt a message for a recipient with identity ID, he only needs the master public key and the identity ID. In order to decrypt a message, the user ID must obtain the corresponding private key from the PKG.

ID.Gen takes a security parameter k and returns the system parameters ID.pms and master private key ID.msk. The system parameters include the master public key and the description of sets M, C, which denote the set of messages and ciphertexts respectively. ID.pms is publicly available, while ID.msk is kept secret by the trusted authority.

Every node has an own unique identity ID, that must be bound to the node for its entire lifetime, non transferable and verifiable. We will note the identity of the node Ni as IDi. Identities of network nodes could be chosen in different ways. For example, [9] gives some different options to choose the identities of the nodes, distinguishing three cases of nodes an identity is bound to:

We consider two different types of nodes. On the one hand, a node that is able to provide shares of the master key. We refer to this kind of node as a sharing master node or simply as a node. We also consider nodes in the MANET that, although connected to the set of nodes, are not able to provide shares of the master key. We refer to these nodes as potential nodes.

We stress that our proposal specially suits the mobility condition of MANETs. Indeed, a potential node may obtain a set of shares of its secret key from a set of nodes. Even if it moves away, connecting in this way to a different set of nodes in the MANET, it can recover its private key after obtaining enough shares from nodes in the MANET.

Due to space constraints, we focus on a honest-but-curious scenario. That is, we assume that some set of corrupted nodes (either nodes or potential nodes) get information from honest nodes but perform the protocol correctly. From now on, we assume any set of corrupted nodes has cardinality at most t.

Initialization Phase This phase is performed only once in the protocol. Founders of the MANET perform it at the beginning of the protocol. We assume the set of founder nodes is NF = {N1,... , Nl}. This part of the protocol basically consists of the joint generation of a random secret value in Zq. To do so, the idea is that founders jointly set up a (t, l)-threshold secret sharing scheme using bivariate polynomials. Then, shares are univariate polynomials instead of field elements as in [14]. Although this fact increases the complexity of the protocol depending on the chosen parameter t, it is necessary to provide dynamism to the protocols, which is crucial in MANETs because of their inherent mobility and unpredictability.

Note that we are considering the case where t < l. If this is not the case, some simple solutions can solve this problem. For example, founders can try to increase the set of founder nodes or instead of this decrease the threshold t.

Identity-Based Cryptography As a direct application of our construction, nodes in a MANET can take advantage of the benefits that Identity Based Public Key Cryptography (ID-PKC) entails. For example, the ID-based signature scheme of Cha and Cheon [4]. The problem of revoking users can be addressed by including an expiry date in the identity corresponding to every node.

Saxena et al. in [13] suggest using K2nm = Sm(hn) = Sn(hm) as common secret key. If the identities of the nodes include some expiry date, since K1nm depends on the identities IDm, IDn, K1nm changes for every period, while K2nm remains constant. Thus, a node can be compromised for a period without jeopardizing its communications for future periods.

