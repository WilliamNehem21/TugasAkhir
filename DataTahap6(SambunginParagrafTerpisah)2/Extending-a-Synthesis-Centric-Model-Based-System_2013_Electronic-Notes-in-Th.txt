Unlike other approaches, we treat the stochastic delays syntactically and we de- couple the synthesis procedure from ensuring optimality. We restrict to Markovian (exponentially-distributed) delays with which the plant is extended, since we employ the memoryless property to enable a syntactic compositional treatment. This ap- proach enables us to handle industrial systems, by employing state-of-the-art tools Supremica [1] for efficient supervisor synthesis and MRMC [14] for performance evaluation by means of stochastic model checking. The syntactical treatment of Markovian delays is enabled by the fact that uniquely-named uncontrollable events and Markovian delays have the same interleaving behavior [25]. Thus, (1) if we replace Markovian delays with uncontrollable events in the plant, ensuring unique- ness of labels, then (2) perform supervisor synthesis on the renamed plant, which

We model stochastic behavior by means of Markovian (or exponentially-distri- buted) delays that are introduced orthogonally in the extended finite automata in the vein of the Interactive Markov chains of [11]. In such a stochastic extension, the Markovian delays are simply interleaved in the parallel composition, which pre- serves the stochastic behavior of the synchronization. Having in mind the definition of the synchronous parallel composition from above, if we treat Markovian delays as uniquely-named (uncontrollable) delays, then we preserve their interleaving be- havior [25]. To show that controllability is preserved as well, we have to extend the notion of controllability appropriately. This exercise has been done in [25], proving that the transformation does not alter the stochastic behavior of the supervised plant.

(discrete-event) plant with Markovian delays renamed to uncontrollable events, we couple the plant with the supervisor and export the supervised renamed discrete- event plant from Supremica. This exported file is parsed and transformed into a Markov chain using the Supremica2MRMC tool [24]. The transformation ex- tends [12] to cater for state labels and data assignments.

The control problem is to coordinate the movement of the vehicles such that all recipes, which state the colors that should be combined and mixed, are completed, without damaging the vehicles or the vessels, or pouring liquid outside of vessels. This problem has been partially addressed before by employing simulation and by modeling of hybrid properties of the movement of the vehicles [20]. In this paper, we consider high-level supervisory coordination of the movement of the vehicles, such that an arbitrary order of a set of given recipes, i.e., tasks that the vehicle should perform, is executed in order and without conflicts. We note that the vehicles have embedded control for safe acceleration/deceleration, collision avoidance, and docking [20], which makes the coordination problem relevant for supervisory control.

that generators, exits, and waiting stations are conceptual constructs that help us with the reasoning about the system. The generators and the exits are implemented as storage stations in the hardware, whereas a waiting station is a parking space for the vehicles. In the generators, an empty vessel is placed on the automated guided vehicle. Filling stations pour paint of particular color into the vessel that is carried by a vehicle. A filling station is capable of pouring more than one color. Mixing stations remove full vessels from vehicles, mix the paint inside them, and then place them again on a vehicle, which does not necessarily have to be the same vehicle that delivered the vessel. Finally, exit stations remove vessels whose paint has already been mixed from vehicles for storage.

We depict extended finite automata graphically, where state labels are given adjacent to the states, and event labels possibly have associated guards and variable updates below them. The uncontrollable events that represent stochastic delays have labels that begin with stoc. We note that for the sake of clarity of presentation and page limit, we do not discuss the whole model, but only several important aspects. The complete model and the tools are available from [9,24].

