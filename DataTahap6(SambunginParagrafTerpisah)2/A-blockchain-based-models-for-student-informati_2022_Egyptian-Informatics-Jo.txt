Blockchain technology is one of the famous popular techniques in the latest few years [8]. One of the most important applications is securing data of student information systems (SIS). The features of blockchain are readiness of sharing and visibility that are essen- tial for any SIS. The courses registrations and exam marks can be viewed as transactions like financial transitions; once committed to the system must never be removed. A transaction can be only reversed only by submitting another reverse transaction. The infor- mation hashed in the blockchains; when carried the change in con- tent of one block will invalidate the entire chain of blocks [9]. Each block contains a list of transactions, a hash of cryptography for the transaction list, version, in addition to other values necessary for blockchain such as the hash value of the previous block. This implies that the hash value is used to evaluate the relation between two blocks.

The proposed model adds more security via the use of hashing and data readily available with decentralized data storage. The information of blockchain that is provided by the university; is open to all parties that have interest. Immutability, sensitiveness, and deal with of storing the records in blockchain; altogether helped to get good implementation of student information system [11]. A linked list of blockchains can record all values that include birth certificates, social security cards, student loans, etc. [5] in addition to transactional data such as courses registration and exam marks.

and it could have several combinations of SIS roles. On another categorization of nodes, a full node can hold the entire list of blockchain while a light-weight node holds a partial list of blocks. The more nodes a system has, the more decentralized it becomes.

which involves his selected transactions. Usually, a miner gets rewarded with a coin or a fraction of a coin. In SIS context, a safe choice is to exclude the existence of miners in a SIS blockchain. Miners can be discarded by allowing only known nodes to cre- ate blocks.

Stateless data can still be seen critical, but for some systems it is satisfying to keep them into a traditional system with a super admin who signs confidentiality contract. Transactional data are highly critical in all aspects. A Transaction can be only reversed by submitting another reverse transaction.

The modified block is still unconfirmed until the consensus pro- tocol completes its work. For example, if a transaction is sent by node A, it must be verified by the nearest full node according to the rules of an SIS. Node A will only accept a user with the right security privileges to alter marks according to its role type. Then the nearest full node will check against higher level rules such as the deadline of submitting marks. A verified block will then be published to other node peers to confirm and accept its validity if it accepts the block then the block is propagated to the blockchain.

Each transaction contains information that identifies the creat- ing node and time of creation. Each block has a cryptographic hash of the previous block, and another has the transaction data. In this way, the data record posted on the blockchain cannot be tampered after a consensus is accomplished.

In the first model, the simplest choices are used to build the blockchain. It is most appropriate for small organizations. Model 1 considers a permissioned consensus network, with transactions that only accepts stateful data and all nodes are full nodes where each node keeps a full copy of the blockchain. The sender node that adds a transaction is responsible for adding it to the transaction list; which could typically be a SQLite database; and adding it to the Merkle tree. The sender node is also responsible for validating all the fields and verifying that the sender account has the autho- rization to create and send the transaction according to the SIS rules that are embedded into the genesis block of the blockchain during the setup. In this model the stateless information is kept in an ordinary system outside the scope of the blockchain.

In the third model, there are two types of nodes: full nodes and guest nodes. Transactions accept stateful and stateless data. Only full nodes keep a full copy of the blockchain and can add transac- tions, whereas guest nodes have read-only permissions. Guest nodes keep temporary partial set of transactions in form of tempo- rary blocks that get destroyed in the end of the session. Initially full nodes are hosted physically inside the organization.

Courses: A faculty member gets a list of the students who are registered in his subjects and mark each of them. Administra- tors allow the faculty members to purplish marks from their node so that the students can view their marks from their nodes. Students can access their accounts and see the (marks) for their subjects. Student account has the following tabs:

Using blockchain, the paper introduces three different block- chain models that can match different sizes of organizations. The three models avoid the need for miners because there is no incen- tive for miners. Instead, the consensus protocols allow one full node to verify and add a transaction, then broadcasts it to other full nodes. The three models depend on the fact that only trusted, and well-identified nodes can be created. Other types of nodes with limited privileges can exist. The infrastructure of model 3 is based on blockchains are well suited for large-scale data processing.

Universities can deal with a student information system (SIS) in a way that greatly achieves security. Storing and sharing data will be simpler with decentralized data storage and could be pro- grammed into the block chain. Another feature, the ledger can rep- resent as a valid guide to maintain SIS and can introduce reliable, highly trusted model for accessing and storing data.

