In [2], the protocol is described by means of a probabilistic process alge- bra and analyzed, in an untimed setting, through a notion of probabilistic weak bisimulation. In previous work [12] we have described the protocol by using Probabilistic Timed Systems and bisimulation for Probabilistic Timed Systems, in order to show fairness up to a given tolerance. In this paper we translate the Probabilistic Timed Systems modelling the protocol, into PRISM specifications [1], in order to estimate how the tolerance varies when the parameters of the protocol are varied.

The protocol ends in a fair correct way when the action correctstop is performed, i.e. when the system reaches the state (q0, r5). In particular, if both participants behave correctly, the unfair behavior cannot be executed; instead, it is possible to find a malicious recipient that receives the expected information and denies sending the final ack.

DD. State r7 represents, instead, the state reached by the malicious recipient when correctly guessing the last message. Since we set the variable l to1 when the originator sends the last message, the malicious recipient succeeds in its strategy when in state r5 such a variable has value 1 reaching the final state r7. On the other hand, if variable l has value 0, the malicious recipient goes to state r6, from which it tries to send the ack back.

As we have seen the probability for the malicious user to break the protocol is always smaller than p, which is a parameter decided by the designer of the protocol. This happens, obviously, when the condition ad + dd > AD holds. In such a case, in fact, the malicious user could only try to decrypt the first message with the last received one as key (risking in this case to stop the protocol), or send an ack to the originator.

PRISM [1] is a probabilistic model checker that allows modeling and analyz- ing systems which exhibit a probabilistic behavior. Given a description of the system to be modelled, PRISM constructs a probabilistic model that can be either a discrete-time Markov chain (DTMC), a Markov decision process (MDP), or a continuous-time Markov chain (CTMC) [9]. On the constructed model PRISM can check properties specified by using a temporal logic (PCTL for DTMCs and MDPs, and CSL for CTMCs).

