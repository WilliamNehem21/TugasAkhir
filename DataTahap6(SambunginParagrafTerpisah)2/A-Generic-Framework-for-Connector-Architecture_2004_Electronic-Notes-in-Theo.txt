The importance of architecture descriptions has become most obvious over the last decade (see e.g. [17,18,7,10,6]). Various formalisms have been proposed to deal with the complexity of large software systems. In order to build up large software systems from smaller parts, a flexible component concept for soft- ware systems and infrastructures are a useful and widely accepted abstraction mechanism (see e.g. [19,12,8]). Although there are many approaches available, only few are general enough to be used for different specification techniques. To achieve a generic concept the focus has to be on the fundamental issues of components and component-based systems. These are the interfaces, the compositionality of components and its embedding into the environment.

Now, we introduce the architecture based on connectors and components. Similarly to connectors we obtain an architecture diagram and an architecture graph. The first describes the architecture at the level of specifications and the second as a graph, where nodes are connectors or components.

In case of binary components and binary connectors we use the following nice infix notation COMP = COMP1 +CON COMP2. Otherwise we use the notation COMP = CON (COMP1, ..., COMPn, con1, ...conn). The result below can be extended to the composition of connectors with multiple import interfaces.

