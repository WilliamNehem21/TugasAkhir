tion/validation methodologies are treated as a single, joined, methodology with the main focus on the specification part. For this purpose we introduce a number of additional Focus operators 4 . At the most cases we advise to specify the input/output relation on the streams based on time intervals. Ar- gumentation over time intervals of streams help us have not only more clear

A distributed system in Focus is represented by its components 5 . Compo- nents that are connected by communication lines called channels, can interact or work independently of each other. The channels in Focus are asynchronous communication links without delays. They are directed, reliable, and order preserving. Via these channels components exchange information in terms of messages of specified types. The formal meaning of a Focus specification is a relation between the communication histories for the external input and output channels. The specifications can be structured into a number of for- mulas each characterizing a different kind of property, the most prominent

We can see any proof about a system as the proof that a more concrete system specification is a refinement of a more abstract one: if the property to prove is presented as an abstract specification, it remains to validate the system specification with respect to these abstract specification, i.e. to show that the refinement relation holds.

does not imply L1, because it is only about time intervals 2, 4, 6, 8 etc., and it also does not imply L2, because it says nothing about the length of message list at the time intervals. Neither L1 nor L2 imply R, because they say nothing about the message values.

The component Sample represents the logic of the gateway component. If it receives from a ECall application of a vehicle the command to initiate the call to the Emergency Service Center it tries to establish the connection. If the connection is established, and the component Sample receives from a ECall application of a vehicle the command to send the crash data, which were already received and stored in the internal buffer of the gateway, these data will be resent to the Emergency Service Center. After that this com- ponent waits to the acknowledgment from the Emergency Service Center. If the acknowledgment is received, the voice communication will be established, assuming that there is no connection fails.

The component Delay models the communication delay. Its specification is parameterized one: it inherits the parameter of the component Gateway. This component simply delays all input messages on d time intervals. During the first d time intervals no output message will be produced.

16 The optimized proof is ca. 1500 lines of proof, but the proofs of the new auxiliary lemmas are very similar to the proofs of the corresponding parts of the lemma GatewaySystem L0. 17 The optimized proof of the corresponding lemma GatewaySystem L0ext is ca. 300 lines

In this paper we present the idea of the refinement-based verification. We treat any proof about a system as the proof that a more concrete system specification is a refinement of a more abstract one. The case when one needs to prove a single property of a system specification S can also be seen as a refinement relation.

