We use a lightweight, event-based simulator which is abstracted from cryptography aspects of Bitcoin to interrogate the hypotheses formulated in this paper. Its focus is on the Bitcoin overlay network and the transaction round-trip delay. The simulation model is developed in Java for object oriented structure and modularity. It implements a dis- crete event simulation environment, where the behaviour of the Bitcoin client is modelled as an ordered sequence of well-defined events. These events, which take place at discrete points in simulation time, corre- spond to changes in the system‚Äôs state. Two notions of time are taken into account, simulation time and run time. Simulation time reflects the virtual time or logical time in the simulation world. The run time refers to the time that is consumed by a processor that is contending with a particular thread. Simulation time has a direct impact on how the simulation events are organised and on how accurate results are gained.

includes all events which are ranked based on its Expected Time of Schedule (ETS) in Fig. 4. The ETS is calculated for each event based on time distributions which are measured in the real Bitcoin network and passed as an input to the simulator. Based on the ETS, the first event is scheduled and removed from the queue. An individual node‚Äôs behaviour such as joining or leaving the network, creating transactions and forwarding transaction, is implemented by inheritance from given generic java classes.

Different measurements of the most influential parameters that have a direct impact on a client‚Äôs behaviour and information propagation in the real Bitcoin network (cf. [27]) are attached to the developed sim- ulator to ensure that information propagation is well modelled. These measurements include the number of reachable nodes, link latencies, and the lengths of the sessions nodes participate in. We now describe how these measurements are made.

Measurements of the network latency between peers in the Internet play a significant role in the development of any P2P network model as these measurements control the accuracy of conclusions produced by network models [44]. One focus of this research is on information propagation latency in the Bitcoin network. The accurate measurement of link latencies between peers is a fundamental requirement. Measure- ments of link latencies between peers were collected by setting up a Bitcoin client that crawled the entire Bitcoin network. The developed client utilised a list of IP addresses to connect to the majority of peers in the network. Also, the client considered the advantage of ping messages to measure the round trip latency between the discovered peers and developed client. The client attempted to maintain connections to several peers. After that, the client began an iterative process of sending ping messages to each peer of the connected peers. The link latency between the client and a particular connected peer was calculated when

the client heard back from the peer (reception of a pong message). The link latency was measured by calculating the time difference between sending a ping message to the peer, and receiving a pong message back. To maintain large scale and distributed measurements, the client periodically scanned the network and applied the same scenario of measuring the link latencies.

Although the link latency between two peers relies on the location of the host from which the latency is measured, a similar distribution of la- tencies over the entire set of peers might be obtained from two different hosts, where each host is in a different location. To investigate this, the crawler was run in a different location. Fig. 7 shows the distribution of the round-trip latencies between peers that were collected by running the crawler in Los Angeles. The shape of the distribution in Fig. 7 is similar, up to a dilation factor, to the previous distribution in Fig. 6. We conclude that inputting the obtained link latencies distributions to the developed simulation model gives a reasonable estimate of the time delay taken by a transaction to reach different peers in the network.

As the developed model simulates information propagation in the Bitcoin network, the size of the network matters because the number of nodes has a direct impact on the range of propagation delays that will be observed. The size of the Bitcoin network was measured using the same crawler in Section 6.1.1. The crawler was able to measure the size of the network by discovering the available IP addresses in the network and by trying to connect to them. The size of the Bitcoin network was

messages. The transaction propagation delay was measured in [2,44] by setting up a Bitcoin client that kept listening for INV messages. The client calculated the time difference between the first reception of an INV message and subsequent receptions of INV messages, where all of the received INV messages belonged to the same announcement of a transaction. The collected measurements did not indicate when trans- actions were received, and so these measurements did not represent the actual transaction propagation delay. We measure transaction propa- gation delay in the real Bitcoin network in a way that the transaction propagation delay is indicated when peers receive transactions.

connected nodes represented the sequence of the random nodes that the measuring node connected with at each run. In terms of measuring the transaction propagation delay in the simulation world, the afore- mentioned measuring method in the real Bitcoin network was used in the simulation. By doing this, the simulation model was validated by comparing the propagation delay measurements that were collected from the Bitcoin simulator to the measurements that were collected from the real Bitcoin network. As the measurements are taken when peers received transactions, the distribution of these measured time

means that the transaction was received by these nodes with a signifi- cantly larger delay variance. These results reveal that the propagation delay increases with the number of nodes. This is because the total duration of subsequent announcements of the transaction by the re- maining nodes increases as the numbers of connected nodes increases. This happens due to each node being connected to large segments of the network, while the connected nodes were not geographically localised. We conclude that the simulation model closely approximates the behaviour of the real Bitcoin network.

The experimental setup that is used to evaluate the performance of the LBC, PTBC, SNBA, and MNBC protocols is now explained. We consider four different simulation scenarios, one for each of the pro- posed protocols. In each simulation, the size of the network matters as the evaluation is based on the transaction propagation delay. The size of the network in each simulation matches the size of the real Bitcoin network which was measured in our previous work [22]. Each node

on measuring how fast a transaction is propagated in the network after applying the clustering approaches, the transaction propagation delay in each approach is measured using the same methodology that was used in [22], to measure the transaction propagation delay in the real and simulated Bitcoin network. Fig. 10(a) gives an illustrative example of how the simulation experiment works for the SNBA protocol, while Fig. 10(b) illustrates the simulation setup for the MNBC protocol. Fig. 10(c) shows an example of the simulation setup for PTBC and LBC. Before applying the proximity cluster generation algorithms of the proposed techniques, it is assumed that the network nodes belong to one cluster. Based on the PTBC and the LBC protocol, proximity based clusters are generated at times which depend on the ping latency threshold in the PTBC protocol, and a geographical distance threshold in the LBC protocol. For the PTBC protocol, two nodes are close to each other if the measured latency is lower than the suggested distance

are much smaller for the same nodes sequences. This means that the transaction was received by the connected nodes in the SNBA, LBC, PTBC, and MNBC protocols with lower variances of delays compared to the simulated Bitcoin protocol. The reduction of the transaction propagation time variances achieved by the proposed protocols occurs because the Bitcoin network layout, where nodes connect to other nodes without taking advantage of any proximity correlations, results in a high communication link cost, which is measured here by the distance between the nodes. Consequently, the average delay to get transactions delivered is also increased. This has direct implications

/ig. 11. Comparison of the empirical distribution of ùõ•ùë°ùëê,ùëõ measured in the simulated Bitcoin protocol with the empirical distribution of ùõ•ùë°ùëê,ùëõ measured for the PTBC, LBC, SNBA, and MNBC protocols. The thresholds used are: ùêøùë°‚Ñé = 25 ms for the PTBC protocol and ùê∑ùë°‚Ñé = 50 km for the LBC protocol.

The most likely cause of the higher variances of delays in the SNBA protocol is the fact that the information flow between clusters in the SNBA protocol can only be achieved by supers peers. This causes a shortage of transmission channels between clusters which results in inefficient information distribution over the network. The lack of connections between clusters in the SNBA protocol was tackled in the MNBC protocol by considering the edge nodes technology, which added an extra connection channel between clusters. Faster information propagation was achieved by the MNBC protocol compared to the SNBA protocol. Even though the LBC protocol delivered faster transaction propagation compared to the SNBA protocol, the lowest variances of

achieved by the PTBC protocol over the LBC and SNBA protocol. It is possible that the cause of the lower variances of delays in the PTBC protocol compared to the LBC protocol, is that two geographically close nodes may actually be quite far from each other in the physical Internet. Somewhat counter-intuitively, physical distance may lead to smaller delays. This leads to a different conclusion, proximity awareness in the physical Internet improves delivery latencies with a higher probability because transactions may traverse fewer hops and use shorter links. However, comparison of the MNBC protocol‚Äôs results with those of other the proposed protocols confirms that the MNBC protocol achieves the best reduction of delay for information propagation. A possible explanation for this improvement is that it adopts the physical In- ternet distance as a proximity metric in both edge nodes technology and clusters creation. Furthermore, the MNBC protocol provides extra transformation channels by which faster information distribution is achieved.

distance threshold in LBC, as illustrated in Fig. 13, yields smaller variances of delays. The most likely cause for the reduction in variances of delays when the threshold value is minimised is that the limited coverage of geographical location results in fewer nodes being members of each cluster, which results in the hop-count for the transaction being reduced.

We evaluate the potential for partition attacks occurring on the proposed protocols as well as on Bitcoin. Partition attacks split the network into a number of sub-partitions and block the data flow among them [45]. In the Bitcoin network, partition attacks affect the main system functions, which in turn, negatively impact user trust. We adopt an attack model, which consists of three steps:

We use the minimum vertex cut to evaluate the cost of performing partition attacks in Bitcoin networks. Two platforms were utilised to evaluate partition attack, these are: (i) the developed simulator (Section 6.1) and (ii) the Metis toolkit [47] for graph partitioning. The application of Metis results in balanced partitions [48]. In this paper, we assume that the attacker is aiming to gain a number of well-sized partitions. We do not require that the partitions are balanced. We verify the security performance using 1000 runs for each scenario.

networks exhibited more resistance to attacks. In summary, the larger the network, the greater the resistance to partition attacks. Crucially, we report that the Bitcoin protocol achieves the largest minimum vertex cut out of all evaluated protocols. The SNBA protocol has the minimum vertex cut. Both, the PTBC and LBC protocols have low resistance to

the Bitcoin protocol for networks of the same size. In conclusion, the results show that the Bitcoin protocol has the highest minimum vertex cut. This makes it the most resistant to partition attacks compared to the other protocols. The SNBA protocol has the lowest minimum vertex cut, which makes the launching of partition attacks easier. Even though the proposed protocols have a lower minimum vertex cut compared to the Bitcoin protocol, they still require a very large number of non- compromised nodes to perform the cut. This form of attack requires massive computational resources. As expected, clusters in the MNBC protocol, which are fully connected via master nodes and edge nodes, and clusters in the LBC and PTBC protocols, which are connected via border nodes, have fewer numbers of non-compromised nodes in the minimum vertex cut. However, clusters formed by the SNBA protocol, which are connected via super-peers, result in the number of nodes in the area of the minimum vertex cut decreasing.

To determine the relationship between the resistance to partition at- tacks and the session length of the attacker, we run another experiment and evaluate Bitcoin and the proposed protocols. The result in Fig. 15 shows the direct impact of the attacker‚Äôs session length on launching the attack successfully.

An important finding that emerges from this experiment is that the simulated Bitcoin network outperformed the proposed protocols in terms of the resistance to partition attacks. The more patience an attacker (with a high number of peers) has, the better the attacker‚Äôs chances of splitting the network are. To find the correlation between the number of clusters and the difficulty of successfully carrying out a partitioning attack, the results of another experiment are shown in Fig. 16. These results reveal that the number of clusters is directly

Robustness to partition attacks and double-spending attacks are achieved by different mechanisms. The larger the network, the greater the resistance to partition attacks. The faster the infor- mation propagation time, the greater the resistance to double- spending attacks. The Bitcoin protocol achieves the largest min- imum vertex cut, which is a measure of its resistance to parti- tion attacks, however, attackers would need significant computa- tional resources to split the network topologies generated by the protocols proposed in this paper.

Muntadher Sallal: Conceptualization, Methodology, Software, Ex- periments, Writing ‚Äì original draft, Validation, Data curation, Project administration. Ruair√≠ de /r√©in: Supervision, Conceptualization, Fund- ing acquisition, Data curation, Writing ‚Äì review & editing. Ali Malik: Visualization, Investigation, Data curation, Writing ‚Äì review & editing. Benjamin Aziz: Supervision, Validation, Writing ‚Äì review & editing, Formal analysis.

Fadhil M, Owenson G, Adda M. A bitcoin model for evaluation of clustering to improve propagation delay in bitcoin network. In: 2016 IEEE intl conference on computational science and engineering (CSE) and IEEE intl conference on embedded and ubiquitous computing (EUC) and 15th intl symposium on distributed computing and applications for business engineering (DCABES). IEEE; 2016, p. 468‚Äì75.

