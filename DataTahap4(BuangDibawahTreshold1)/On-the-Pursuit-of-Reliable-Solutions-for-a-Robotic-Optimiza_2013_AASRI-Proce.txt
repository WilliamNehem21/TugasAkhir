In robotics, pose errors are known as positional and rotational errors of a given mechanical system. Those errors are commonly produced by the play among joined components, commonly known as joint clearances. Predicting pose errors can be done via the formulation of two optimization models holding continuous domains, which belong to the NP Hard class of problems. This paper focus n providing rigorous and reliable solution to this problem by using constraint programing

Accuracy is one of the key features that favor robotic manipulators for many industrial applications. Superior levels of accuracy are achieved by controlling or measuring all possible sources of errors on the pose of the moving platform of a robotic manipulator. Joint clearance is one of  ost important sources of errors. It

introduce extraneous degrees of freedom between two connected links. When present, they generally contribute importantly to the degradation of the performance of a mechanism Various approaches have been proposed to compute and quantify the errors due to joint clearances [ 9 10 12 1 ], however none of them focuses on the reliability of solutions, which is mandatory to provide an accurate prediction of the pose error. This paper focu	guaranteeing the reliability of solutions by using constraint programming and interval analysis To this end we combine a branch and bound algorithm with interval analysis, which allow drawing firm bounds on the pose errors given possible ranges for the clearances. We illustrate experimental results where the proposed approach generally outperforms the well known solvers GAMS/BARON [1] and ECLiPS [5], while providing reliable solutions

where  corresponds to the small rotation in joint a with respect to axis b, and  corresponds to the translation in joint a with respect to axis b.  and  are simply constants used to limit the pose errors depending on the given configuration (an extended explanation of this model can be found in [4]). Let us notice that both problems belong to the category of NP-Hard problems [7].

The problem has been solved by using a branch and bound algorithm that performs the arithmetic operations with interval analysis [2, 11]. This algorithm has been implemented on top of the RealPaver solver [6]. The implementation details can be seen in [3]. A set of experiments have been carried out so as to verify the reliability of solutions and to compare the performance of such implementation with GAMS/BARON [1] and ECLiPSe [5] solvers. The following experiments take into account 4 models (see Table 1). The illustrated running times correspond to the best ones of 10 runs.

The results show that our implementation is in general faster than its competitors. For smaller problems involving two and three joints, our algorithm exhibits excellent performance, being dramatically faster that BARON. This is because there is no need for a high level of precision for this problem. Indeed, there is no need to reach the usual 10-8 precision, which makes the search process less costly than they usually are.

Let us note that running times is not the most important aspect to remark. It is more important to observe that the solutions reached by the BARON solver are not always reliable. Indeed we have verified by using RealPaver that results computed by BARON are unfeasible on some of the above tested problem instances. The following example illustrates how BARON can fail to give the correct value and return an inconsistent point instead. Let   be two real variables,      , and two constraints       and

. When BARON tries to find the lowest  for which both constraints are satisfied, it returns the point	although it is inconsistent w.r.t. the constraints of the problem. Finally, let us focus on the results obtained for the manipulator composed of two revolute joints illustrated in Fig. 1. Let us assume its geometric parameters are defined as follows:

RealPaver and BARON were used to solve the optimization problem for all manipulator poses. Table 2 depicts the value of the maximum positioning error of the end effector, obtained with RealPaver and BARON, respectively. This value is expressed in millimeters and plotted throughout the manipulator workspace. We can notice that the maximum obtained with BARON is always higher than the one obtained with RealPaver. The difference in any point between the results given by the two solvers is around one millimeter and decreases when positioning error rises: As we already mentioned it, we could notice that the solutions obtained with BARON may not be feasible.

and interval analysis. Experimental results demonstrate the effectiveness of our approach where it is able to in general outperform well-known solvers such as BARON and ECLiPSe, providing reliable solutions. In this context, there are several directions for future work such as to implement more efficient filtering techniques for accelerating the convergence of solutions. In this way, it would be easier to handle the exponential growth of the space of solutions. Finally, it would be interesting to pay an extended attention to the unreliability of solutions obtained by BARON. Such a problem could be also present in additional solvers.

Berger N, Soto R., Goldsztejn A, Caro S, Cardou P. Finding the Maximal Pose Error in Robotic Mechanical Systems Using Constraint Programming, Proceedings of 23rd International Conference on Industrial Engineering and Other Applications of Applied Intelligent Systems (IEA/AIE), 2010, volume 7345 of LNCS, pp. 82-91, Springer.

