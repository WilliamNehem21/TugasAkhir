During td only the anti-parallel diodes can conduct the output current. This will cause an error voltage on the output which needs to be compensated for, as recognized and described in [1]. If the dead time is long enough, discontinuous conduction may also appear. The presence of effective dead time thus introduces output waveform distortion and harmonic content in the output current of inverters. The effects become more severe at increased switching frequencies.

The main circuit of a general three phase inverter with inductive load can be seen on Fig. 1. Most classical software based methods, such as the ones described in [1] [2] and [3] intervene based on the signum(I) function and thus are only capable of compensating for large positive or negative current waveforms. From this point of view, these methods share the same limitations, even if there are huge differences in the number of sensors used and in the methods of the calculation of error voltage or volt-seconds lost due to dead time.

Looking at the circuit diagram on Fig. 1. it can also be understood that for continuous current waveforms having zero crossings, most of the volt-seconds lost during one switch - over (which happens during positive current) are gained back during the next switch-over (during negative output current) within the same switching period. This state of operation is taken in to account in some compensation methods, like in [4].

There are methods which try to solve the problem by using extra detection hardware for each switching element as described in [5] and [6]. These are cheap compared to fast current measurement devices and fast A/D converters, but can detect the momentary current direction when a switch-over is initiated. This detection might be problematic for current waveforms having multiple zero crossings within one switching period.

The maximal current ripple can be calculated from closed formulae, as described in [11]. An attempt was made to use a new algorithm capable of calculating the actual current ripple for dead time compensation, in [12]. This way continuous currents could be handled, even if only slow current measurement is available.

More problematic current waveforms can include discontinuous conduction, as seen on Fig. 2. The error voltages caused by these were calculated from average phase current [10]. The problem is, that the complex formulae require large amount of computing power which makes such a dead time compensator expensive.

The basic idea behind this paper is to incorporate an accurate model into the controller which is capable of modeling low current situations and discontinuous conduction. The inputs of such a model are the instantaneous phase currents, the phase voltages, the relative slope of the triangular carrier (also marked with DIR, with values of +1 or -1), and the duty factor. The model generates the phase currents and phase leg voltage waveforms from these inputs for a half period of the triangular carrier. For that time period it also determines the resulting volt-seconds for each phase leg. A similar approach was described in D. Schr√∂der's paper [8] for a thyristor based DC drive. A significant difference is, that for a DC drive it was relatively easy to determine the desired current waveform from the required average output current. In a three phase PWM system this is much harder, as the three phase legs affect each other through the potential of the neutral point. Because of this, the resulting voltage and current are determined instead for a given duty factor, and the intervention is done using an approximation formula.

The operation of the model can be understood based on Fig. 3. The model splits each half period of the triangular carrier to time segments. Phase currents and the state of the semiconductor switches are available at the beginning of each iteration of steps 1-7; these are stored in the status vector as on Table 1. This vector is initialized on startup with the input measurement data. All initial switch states are determined by the slope of the triangular carrier (DIR) unless the duty factor is so small (or large) that the last switch-over has not been finalized. In the latter case, the phase leg is assumed as free-wheeling (state 0).

The iterations are continued until the last element is cleared from the switching sequence table. A dummy element (T/2) is also added to the table, as seen on Table 2. to make sure that the output contains all volt- seconds for the corresponding half switching period. During initialization, it is made sure that this dummy element is the last in the list (i.e. all time values are smaller).

The model described in the previous section requires the following constants: switching frequency, circuit parameters, dc bus voltage, and the value of the effective dead time. The input variables are the phase voltages, the instantaneous phase currents, and the ideal duty factors (D*) which are the outputs of the current controller, and are valid for a linear (ideal) inverter. The model is run twice in every switching period: once at the upper corner of the triangular carrier, and once at the lower corner.

The compensator uses the output of the model to calculate a new duty factor, which - if applied on the inputs of the PWM generator - will result in approximately the same output voltage on the real inverter, as D* would on an ideal one. The bock diagram of this compensator can be seen on Fig. 4. It can be seen, that this method can only result in an estimation even if the model is correct, as the method on Fig. 4. gives accurate results only for the continuous cases; for discontinuous conduction this is only an approximation.

A linear interpolation based dead time compensator on Fig. 5a. has also been used for reference using the current ripple formula from [11]. From the results on Fig. 5a. it can be seen that the new method is generally better than the linear interpolation based method if the load is at least 7%. Inaccuracies at very low loads can come from the direct calculation in the compensator on Fig. 4. Further plans are being considered to avoid this drawback, and give good THD values down to 1% load.

This work was partially supported by the Hungarian Government, managed by the National Development Agency, and financed by the Research and Technology Innovation Fund through project eAutoTech (grant no.: KMR 12-1-2012-0188). The authors wish to thank the support to the Hungarian Research Fund (OTKA K100275) and the Control Research Group of the Hungarian Academy of Sciences.

