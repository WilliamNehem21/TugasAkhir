one or more ordered VNF service chains. RAN slicing involves the abstraction and sharing of RAN nodes, sharing radio spectrum resources in a dynamic logical manner. Various services classified under eMBB, mMTC, uRLLC categories can be instantiated on the slices per user, per device or even per application [165]. Consequently, scalable, and flex- ible network slices will be required to manage resources needed at peak traffic demand. The resources can be adjusted or removed by manage- ment functions. The slices will enable service differentiation based on predefined SLA. Partitioning the physical infrastructure into multiple logical E2E networks that serve divergent enterprise use cases, champ- ioned the concept of Network slice as a service (NSaaS), enabling mobile network operators to increase revenue and profits in 5G and beyond networks. The sharing of infrastructure helps InPs to reduce network TCO [62].

There is now consensus in the SDOs and industry that softwarization, driven by SDN and NFV technologies, will continue to be an important enabler in slicing 5G networks and beyond. Both SDN and NFV provide programmable control and resource management functionality that are essential for dynamically implementing 5G network slices. When SDN and NFV are combined with various cloud computing delivery models such as IaaS [178], PaaS [178] and SaaS [178], more sophisticated in- frastructures and solutions can be implemented. As illustrated in Fig. 12, the SDN is used to separate the network control from the data control plane. It also separates the routing and control procedures from hardware-based forwarding operations. Consequently, softwarized network control procedures can be implemented with an abstracted view of the underlying physical infrastructure. The centralized SDN network can make intelligent, and automated network management, operation, and optimization decisions from a global network perspec- tive. 5G also adopts a similar dual plane separation mechanism to split the RAN and mobile edge hardware from the network and service functions. Whereas the slice orchestration capabilities are beyond its capabilities, SDN enables the implementation of 5G network slicing

procedures. It supports the flexibility and programmability to simplify network management. NOX [166] is an example of the first SDN controller based on the OpenFlow protocol. Since then, the industry has developed several platforms, primarily for cellular networks, including the Open Networking Operating Systems (ONOS) [190], Central Office Re-architected as a Datacentre (CORD) [168], O-RAN [167], ONAP [195], Aether [169], and SD-RAN [170].

NFV supports scalable and flexible management and orchestration capabilities [240]. This is achieved by virtualizing network services and functions and separating them from their underlying physical infra- structure. Each feature or functionality is implemented in software format via a virtual network function (VNF) that runs on a virtual ma- chine (VM) instantiated on commercial off-the-shelf (COTS) hardware. Network functions (NFs) such as network address translation (NAT), firewalls, intrusion detection, domain name services, can all be imple- mented on COTS, reducing the total cost of ownership (TCO) for mobile operators. Network virtualization which began under virtual machines has continuously evolved through containerization and most recently to a cloud-native network architecture.

A hypervisor is a software layer that separates an operating system and application from the underlying physical infrastructure and allows the underlying host machine to support multiple guest VMs. The hypervisor may interconnect several SDN providers under a single abstraction, allowing applications to create E2E slices without having to observe the differences between SDN providers. The network slice constitutes a variety of virtual machines connected by (a) a virtual local area network (VLAN) if the VMs are hosted in the same data centre (DC) or (b) VLAN and Generic Routing Encapsulation if the VMs are in different DCs. The VM interacts with the underlying physical hardware using the hypervisor. Network slicing has been investigated in numerous studies related to network hypervisors, including OpenSlice [179], MobileVisor [180], RadioVisor [181], and HyperFlex [182]. Containers are based on the concept of virtualization at the operating system level and are an alternative to hypervisor-based virtual machines [183]. Containers contain the application, dependencies, and even the version of the operating system. This allows nomadic operations of applications on computer systems, or even the cloud. The orchestration and man- agement of different containers to all function as one system is critical to

a cloud native architecture. Docker [184], LinuxVserver [185], OpenVZ [186], and Oracle Solaris Containers are all examples of container-based virtualization solutions. Containers can run VNFs in chains to provide flexible 5G network services or applications and lay the foundation for 5G network slicing. A summary of 5G network slicing key technology enablers is provided in Fig. 13 for the reader’s reference.

5G consumers are destined to enjoy access to huge data rates, low latency. Its capability to connect a multitude of devices and a plethora of use cases is good news for the enterprise market. At the centre of this vision is network slicing and virtualization technologies. Network slicing helps InP to create virtual/logical networks on shared physical infrastructure, thereby reducing TCO. Its combines virtual and physical networking capabilities together with programmable and non- programmable technologies create and effectively manage E2E slices. SDN and NFV are critical enablers for E2E network slicing. They support the softwarization and programmability required to support a fully functioning slice. Both 5G SA and NSA supporting several slicing mechanisms including NSSAI, PLMD-ID, SPID etc. Lastly, Preliminary research on shows that network slicing will continue to play a critical role in the realization and monetization of beyond 5G/6G networks.

In the NGMN project [10], Network Slice Instances (NSIs) are created using physical or logical resources (network, compute, storage) that are completely or partially isolated from other resources. E2E network slices can belong to one or more administrative domains distributed throughout the entire network. Close interaction with the NFV man- agement and orchestration (MANO) framework to empower the slice lifecycle management and resource orchestration procedures is required. The next subsection briefly introduces both single-domain and multi-domain management and orchestration.

conventional system architectures. Several reference points such as Or-vnfm exist to interconnect the ETSI NFV MANO functional blocks. The MANO system is responsible for instantiating migrating and scaling VNF/NS instances, operating and managing network resources and networks slices based on predefined QoS policies.

In the context of ETSI NFV ISG guidelines in Ref. [192], MANO procedures plan and use physical and virtual network resources to create an NSI across multiple administrative domains. The authors in Ref. [117] provided more clarity on the multi-domain concept from multiple perspectives including (a) multi-technology which is stitching together heterogeneous technology domains such as RAN, CN to create and E2E SDN driven platform to accommodate various 5G services and

interaction between several InPs or service providers to provide an E2E network slice. The authors in Ref. [150] agree with ETSI NFV ISG in Ref. [192] and argue that to ensure network security, different domain InPs follow their own internal management protocols without disclosing sensitive information to other players in the chain. Mechanisms that enable efficient resource allocation and utilization across multiple administrative domains are generating huge research interest.

Third-party consumers can access the system via customer-to-business (c2b) interface that is administered by the multi-domain resource orchestrator. Similarly, the 5G!Pagoda framework in Ref. [193], is influenced by the ETSI NFV architecture, with each technology domain having its own resource orchestrator. In addition, management domain resource orchestrators are considered to optimize resource usage and management across multiple administrative domains. The architecture in Ref. [111], also influenced by the ETSI NFV MANO, provides support for multi-domain multi tenancy slicing. Its authors argue for the creation of multi-domain slices as a chain of single domain slices, orchestrated by a single orchestrator to mitigate challenges with direct cross domain orchestration.

between multiple InPs. Whereas several studies only focus on multi-domain MANO architectural challenges, they also address the economic benefits of network slicing across multiple domains. However, their unified management and orchestrator interacts with the inter-slice resource broker and ignores service federation across multiple admin- istrative domains, that may be required to assemble E2E multi domain slice instances. The authors in Ref. [232] address this limitation by presenting a hierarchical multi-domain MANO architecture to address challenges of federated network slicing. Their multi-domain orches- trator is based on recursive abstraction and resource aggregation tech- niques. The orchestrator aggregates heterogeneous NSI resources first at the domain level and then between federated domains.

and use cases with different RAN architectures and QoS requirements that require scalable and flexible network slices. Whereas 5G network slicing and virtualization brings several benefits to InPs, it also in- troduces several complexities in network operations and management. The good news is that intelligent tools and methods powered by AI/ML provide potential solutions to address these challenges.

projected to reach USD 309.6 billion by 2026, mainly driven by the need to achieve a robotic economy. The Ericsson report in Ref. [107] outlines key AI/ML opportunities in Fig. 15 for service providers. It notes that 56% of the service provides will adopt AI with a focus on infrastructure

topology, continues to generate excitement in the research community. As discussed earlier, various studies in Refs. [193,232] recommend a tier/hierarchical system topology with an SDN controller in a central cloud and local SDN controllers in each domain, as shown in Fig. 16, to

domains. When logical nodes are implemented, the SDN controller can be used to support logical link connections between logical nodes that can span multiple administrative domains and several physical nodes in an E2E slice network. The centralized and local SDN controllers could also benefit from Deep RL driven data analysis and decision making in that regard to simplify E2E network management. The network slicing

transport, CN and RAN resources such as physical resource blocks (PRBs), virtual resource blocks (vRBs) and VNFs. The E2E network re- sources are sliced for multi-domain E2E network slicing but with different optimization objectives. Fig. 17 provides a diagrammatic rep- resentation of resource allocation and orchestration in a 5G network slicing scenario. Frequently used resource allocation methods include the reservation method and shared based methods discussed in Ref. [222]. In both scenarios, the aim is to maximize overall network utility by adjusting resource allocation according to resource pool con- straints and regulatory rules to achieve near-optimal resource alloca-

Network slicing is fully entrenched in the planning and build of 5G and beyond networks. A high level of isolation and QoS provisioning is therefore required to share the infrastructure. Consequently, effective resource allocation and programmable management is a prerequisite [223]. Efficient Network resource allocation is difficult to achieve because of several possible reasons: (a) pressure to meet existing SLA requirements while simultaneously maximizing InPs revenue [224], (b) interference between adjacent logical nodes in different virtual net- works built on the same physical infrastructure, (c) the need to admin- ister multidimensional resources in a dynamic network environment. Game theory, auction mechanisms, and genetic algorithms are widely used conventional resource allocation mechanisms. They face some limitations as the networks become more dynamic and evolve into

denser, heterogeneous installations, that output larger amounts of data. Traditional statistical model-based tools are also widely used in litera- ture, but given uncertain network conditions, the solutions tend to be suboptimal, resulting in inefficient use of resources and increased costs. In addition, the need for a priori traffic profiles impacts their perfor- mance in dynamic environments such as 5G and beyond networks. The versatility of AI/ML tools such as model-free Deep RL provides an alternative approach and solutions in addressing these challenges. Hybrid approaches using heuristics, metaheuristics, shallow ML, RL, and Deep RL have shown promising results [119].

Deep RL driven solutions in this subsection. The authors in Ref. [229] use Deep RL to address RAN and CN slicing. From their simulation re- sults, they conclude that Deep RL performed better than other conven- tional solutions. The authors of [228] propose an RL agent to control radio resource management (RRM). The authors in Ref. [230] propose an RL algorithm to enable 5G network slicing across multiple adminis- trative domains. The main constraints considered in their solution include delay and location.

A solution that combines shallow ML and Deep RL is proposed in Ref. [220] to address resource allocation and orchestration in a knap- sack problem. The authors of [232] present a management and orchestration architecture for instantiating and managing inter- connected network slices. Although no implementation details are pro- vided regarding service requests, they conclude that Deep RL provides superior results to Q-learning and other techniques. In Ref. [233], the authors use Deep RL to manage the slice resource requests and coordi- nate internal slice resources for each user. A deep RL driven resource allocation scheme is used to guarantee IoT service QoS in Ref. [234]. The authors in Ref. [235] present an RL-based slice management strategy that regulates slice resiliency to maximize InP utility during the life cycle of E2E network slices.

The authors in Ref. [237] combine conventional alternating direct method of multipliers (ADMM) [254] and Deep RL to address a slice resource allocation problem [236]. The main problem is optimized using convex optimization and Deep RL optimizes the sub problem. Consid- ering the real-time resource requirements of slice users, the authors in Ref. [237] formulate the slice resource allocation problem as a semi markov decision process (SMDP) problem and Deep RL is used to opti-

solve the challenge of autonomous resource management for multiple slices, the authors in Ref. [213] successfully use Deep RL to adjust the slice allocated resources based actual usage and QoS feedback. Several studies above consider optimizing the procedures for allocating single resources such as radio resources. However, the study in Ref. [68] for- mulates a multidimensional resource (network, computing, and storage)

allocation problem as an SMDP and Deep RL is used to optimize the resource allocation and utilization accordingly. Their simulations re- ported 40% improvement in performance. Table 9 provides a summary of the literature review in this sub section. The authors of [259] present a Deep RL driven resource allocation and management solution in RAN and CN slicing. They concluded that Deep RL performs better than other “intuitive solutions” and could also play an important role in

Admission control refers to the process of determining the maximum number of concurrent users that a system can allow, bearing in mind the available resources of the wireless system and QoS compliance re- quirements [238]. When a slice request is received over a 5G network, the slice admission control algorithm determines if the slice can be admitted. Once the slice is approved, an optimization algorithm is used to meet the SLA. This sub-section describes recent efforts to streamline

Slice admission control (AC) techniques are essential to the efficient management of the 5G network resources [239]. Slice tenants and InP also rely on slice admission control to achieve their predefined goals [240]. This includes maximizing revenue and ensuring end-user QoS and QoE. Whereas available resources in the network resource pool affect slice admittance, the InPs have the choice to admit slices that are most likely to reach a predefined objective. Slice requests are often queued or deferred while the admission algorithm checks for eligibility, considering the available resources. The main objective of slice admis- sion control includes the following: (a) to maximize network utility by optimally distributing network resources among slices. For example, a premium could be charged for low latency and high bandwidth slices to maximize network utility, (b) to control QoS and QoE [239] by accepting only slices whose QoS/QoE can be assured to retain the availability of resources for QoS-intensive network slices. A slice tenant prioritizing the admission of slices serving a world cup venue in a con- tracted period to guarantee viewers’ QoS/QoE at the expense of the

driving applications. The challenge for the InP is to strike a balance between prioritizing such high revenue but occasional short term slice contracts vs the low margin but long term contracted slices, (c) greedy based admission is intended to admit slices if capacity constraints are not violated [243], (d) random admission to eliminate unfairness by achieving a fair normal distribution over time [239] and (e) optimal admission uses a policy to accept or deny slices based on acceptable network KPIs, under specific constraints and predefined objectives. Commonly used methods in this context include ML [220], RL [251], Deep RL [251], successive convex approximation (SCA) [253,254], and ADMM [254].

network utilities while meeting SLAs. Conventional methods such as statistical models, have been used to solve admission control challenges. However, they often require a prior traffic profiles that may not be readily available in various dynamic network environments such as 5G networks and beyond. As a result, model-free RL, Deep RL solutions provide a compelling alternative solution.

rameters) in a trial and error manner, receiving a reward in the process that is based on the action taken. Based on the value of the reward ob- tained for admitting or rejecting the slice, the agent can improve the next course of action. In Ref. [256], the authors design an admissibility region for slices. Using a priority based admission strategy, they use

agent offline and online. They conclude that in non-complex problems with small state-action spaces, regret matching performs well. However, in complex problems with high order spaces, Deep Q-Learning is the best option. They also conclude that offline solutions require a training period before use and are costly. However, they usually give the best

results. In Ref. [264], the authors use RL to optimize priority slice admission control to maximize network utility. Services that are likely to generate high revenue with less KPI degradation are admitted based on the learned policy. When compared to two deterministic heuristics, the performance of RL-based admission policies performs better by 55%.

Predicting wireless data traffic over 5G networks is an important factor in proactive network optimization [252]. Slice traffic can be un- certain, or even fluctuate due to unexpected events like weekend fes- tivities, resulting in unoptimized resource usage, poor QoS/QoE, and, as a result, SLA violations. By accurately predicting the actual footprint of network slices, the InPs can increase the maximum number of slices that fit the same infrastructure [244] and prevent penalties. A detailed ac- count of the objectives of this functionality will be described in the following sub-section. We also review recent efforts to streamline slice traffic forecasting and prediction using Deep RL. To provide more clarity, we’ll review the RL driven solutions as well.

The quest to improve network utility and improve slice resource utilization is at the forefront of the slice traffic forecasting and predic- tion drive. Forecasting and predicting slice traffic helps the InPs achieve several objectives including the following: (i) satisfy high priority slices through the allocation of more radio resources and throughput [208] (ii) minimize understocking by avoiding to allocate each slice with less than the expected throughput due to less resources to meet throughput needs of all slices [23], (iii) minimize SLA violations by allocating enough resources to each network slice to meet the requirements as per SLA. As described in Ref. [23], SLA categories include Guaranteed Bitrate, Best effort with minimum Guaranteed Bitrate (BEBG), Best Effort (BE), and Guarantee Fairness. (iv) Guarantee fairness [23] i.e resources allocated to each slice should satisfy the predicted demand when network re- sources are adequate. Any violation and understocking penalties resulting from network congestion will be shared across slices according to their priority to guarantee fairness.

Forecasting, and predicting slice traffic improves slice admission control, resource allocation and usage, slice placement, and other areas of slice lifecycle management. Some studies use traditional linear sta- tistical models to forecast and predict traffic. However, the application of AI/ML in this area is gradually being accepted given the challenges and limitations of the traditional methods discussed earlier. In

provisioning and use. Their actual evaluation shows that the elastic resource management capabilities of the DNN driven solution optimizes resource usage. A closed-loop solution is proposed in Ref. [71] to address dynamic services such as user network resource requirements. It predicts future slicing requirements to optimize resource usage. Like the

[37] approach, they used the HoltWinters approach [206] to predict network slice requirements by tracking past traffic and user mobility. Several control parameters are used to influence the prediction. In addition, only short-term rewards are considered. InP long-term rewards are ignored. The authors in Ref. [249] address this limitation using RL. By using a Semi Markov Decision Process (SMDP) problem formulation approach, a Q-learning-based adaptive algorithm is developed that handles the approval and allocation of network slice requests to maxi- mize InP revenue and guarantee tenant SLAs.

SLA requirements. The performance of linear statistical models under uncertain and unstable slice traffic conditions is often suboptimal. Al- gorithms that predict slice traffic so that the optimal resources are allocated based on actual needs and not SLAs or priority are very desirable. Forecasting and predicting slice traffic helps improve resource allocation and streamlines the slice admission process. Some studies address the problem of forecasting slice traffic and forecasting using traditional linear statistical model-based solutions, especially Holt- Winters. However, if a priori traffic profiles are required, they often impact performance in heterogeneous dynamic environments such as 5G and beyond. ML tools and methods such as Deep RL have been used for decision making, but its use in traffic forecasting and prediction is still limited. Traditional linear statistical models are still dominant.

5G is envisioned to support a plethora of Internet of Things (IoT) devices with most IoT sensors being held by the device owner rather than the mobile network operator. As a result, traditional Deep RL customization which works well for a single network entity may not be appropriate in a heterogeneous, dynamic 5G and beyond network environment with a multitude of players. Interactions between different owners (in this case agents) of IoT devices make managing network resources and services extremely difficult and significantly increase the state-action space in question. This condition inevitably slows down the learning algorithm and jeopardizes the performance of the learning policy. In this regard, more effort is needed to accelerate deep multi- agent RL research.

Deep RL requires DQN training. This is done by a centralized com- puter with high computing and processing capabilities. Centralized Deep RL, on the other hand, does not work well on distributed 5G sys- tems such as large IoT devices. As a result, there is a need to design distributed deep RL solutions that divide resource-intensive DQN training tasks into several smaller tasks for individual devices with moderate or limited computing capabilities. This will enable the reali- zation of Deep RL solutions on commercial narrow band-IoT (NB-IoT) and category M1 (CAT-1) devices.

scheduling mechanisms will be very important. The versatile and dy- namic capabilities of Deep RL make their choice attractive considering that when a new slice is requested, the defined state and action space must also adapt to changes in the slice state-action space for any changes in the network environment. How to speed up convergence is an added complexity to this problem. Therefore, more research is needed in this regard, especially if Deep RL solutions are to be put to production.

network slices with varying SLAs and objectives. There is a need to build algorithms to forecast and predict slice traffic so that the optimal re- sources are allocated based on actual needs and not SLAs or priority. Although Deep RL methods have been proposed for slice traffic forecast and prediction, there is a paucity of research in that space. Conventional statistical models tend to be dominant.

state-action pairs. However, in a heterogenous and dynamic 5G network environment, this assumption may not be valid because the mobile de- vice may take a long time to send the information and the network may not receive the information properly. For example, in an extended range coverage scenario, the network receiver (Rx) expects the first signal sent by the mobile device to arrive within a specific time window. If the mobile device signal is received beyond the time window, it may not connect to the network at all. The definition of state-action pairs may also prove cumbersome. Therefore, studies on how to design clear and accurate rewards in this aspect requires more efforts.

This study revealed that the dynamic and non-uniform nature of 5G and beyond networks makes it difficult to manage slice resources. However, many studies presented show that the authors are considering optimizing only 5G wireless communication resource allocation, ignoring computing and storage resources. This approach may not be the best solution for efficient 5G and beyond network slicing resource allocation. More efforts towards joint multi dimensional resource allo- cation research is required.

