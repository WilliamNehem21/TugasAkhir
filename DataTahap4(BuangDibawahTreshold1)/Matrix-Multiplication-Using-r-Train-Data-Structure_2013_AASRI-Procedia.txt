A new dynamic data structure has been proposed recently in 2011. There are several algorithms for matrix multiplication. But none of them has used r-train data structure for storing and multiplying the matrices. In this paper algorithm for matrix multiplication using r-train for parallel machine has been proposed.

A r-train is basically a linked list of tagged coaches. This linked list is called the ‘pilot’ of the r-train. But the implementation of this pilot in memory may also be done using the data structure array in some cases which will be explained later on in this paper. The pilot of a train is thus, in general, a linked list. But, if we are sure that there will be no requirement of any extra coach in future, then it is better to implement pilot as an array. Details about these operations is explained at subsequent sections. The number of coaches in a r-train is called the ‘length’ of the r-train which may increase or decrease time to time. A ‘r-train’ may also be called by the name ‘train’ if there is no confusion. A r-train T of length l (>0) will be denoted by the following notation

For a r-train, START is the address of the pilot (viewing its implementation in memory as a linked list). Thus START points at the data C1 in memory. The length l of the pilot could be any natural number, but the larrays of the TCs are each of fixed length r which store data elements (including  elements) of common datatype where r is a natural number. Thus, by name, 1-train, 60-train, 75-train, 100-train, etc. are few instances of r-train, where the term 0-train is undefined.

The notion of the data structure r-train is a new but very simple data structure, a type of 2-tier data structure, having very convenient methods of executing various fundamental operations like insertion, deletion, searching etc., for huge number of data, in particular for parallel computing. The most important characteristic of the data structure r-train is that it is likely that it can store x number of elements of identical datatype even if an array of size x of same elements can not be stored in memory, at some moment of time. And also, the data can be well accessed by using the indices.

Status of a coach reflects the availability of a seat (i.e. whether a data element can be stored in this coach now or not). Status may vary with time. Each coach of a r-train can accommodate exactly r number of data elements serially numbered, each data element being called a passenger. Thus each coach of a r-train points at a larray of r number of passengers. By definition, the data ei is not a passenger for any i.

Here is the proposed algorithm of matrix multiplication using r-train data structure on a parallel system having M processors. Each processor has a unique ID for identification. If a for loop is preceded by Par then the body of for loop has to be executed in parallel by all the processors. A, B, C are three NXN matrices. Aim of this work is to compute C=AXB using r-train data structure. Proposed Algorithm is given below.

Step 1 and Step 2 can be done in O (N) time. Steps 3, 4, 5, 6, 8, 9 can be done in O(1) time . Step 8 is repeated O(N) time because of loop of step 7. So applying the sum and product rule of computing complexity the complexity of the algorithm is found to be O(N) if M=N2.

