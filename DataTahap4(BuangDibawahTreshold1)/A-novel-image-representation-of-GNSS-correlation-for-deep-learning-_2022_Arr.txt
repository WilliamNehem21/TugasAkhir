Convolutional neural networks [20] are nowadays considered as among the most powerful tools to learn information from images. This is explained by their computational efficiency and their impressive performance on image information processing. Their learning capabil- ity comes from their ability to automatically construct and combine abstract features from an image. The first layers of the network are composed of convolutional layers. Such layers apply several filters over the various regions of the input image and create feature maps that are various versions of the filtered input image. Several convolutional layers are usually stacked in order to progressively extract meaningful information from the feature maps as the depth of the network is increased. The last layers of the CNN perform the task of classification usually through several layers of neurons with dense connectivity. The weights of each convolution layer filters (also called kernels) and those of the dense layers are learned through supervised learning based on gradient back-propagation. The underlying structure of convolutional layers has the advantage of having sparse connectivity and high weight sharing among neurons, which leads to much greater computational efficiency over fully connected neural networks when image sizes are large or the image resolutions are high.

The above principles are at the heart of CNN architectures. Several additional components are usually integrated in the network. Some Pooling layers are used in order to reduce the dimension of feature maps. A Flatten layer is added in front of the stack of dense layers so as to transform feature map information in vector-like input. To increase the generalization power of the network, a dropout mechanism can also be used to artificially and randomly remove a small portion of the neuron connection within the network. The number and the organization of these various components generate several possible CNN architectures [21].

Among CNN architectures that have proven to be effective in prac- tice [22], the VGG-like architecture has been shown to be one of the best choice for image feature extraction [23]. Despite its number of parameters to be trained compared to other popular and more complex architectures such as Inception V3 [24], ResNet [25] and other variants, it has been widely adopted in practice by the ML community. The architecture is composed of several blocks of convolutional layers that are each separated by a pooling layer that decreases the feature map dimension between blocks. As the depth increases, the dimension of layer input decreases but the number of filters increases. When data are organized on a multi-scale basis, mixing macro and micro patterns, the number of convolutional blocks should be chosen sufficiently large. For the GNSS multipath application, such multi-scale representation is not expected in the signal. This is the reason why the chosen architecture only includes one convolutional block composed of two convolutional layers. It is therefore a very simple instance of a VGG-like network.

/ig. 9. The CNN architecture used in this study: the input has 2 channels corresponding to ùêº and ùëÑ channels, the first and second convolutional layers have 16 and 32 filters respectively with ReLu activations and the pooling layer is a 2 √ó 2 max pooling operation layer (this figure has been generated by the NN-SVG tool [26]).

interpret for a specific application, their CNN instances provide some ways to get knowledge on the features that are designed during the training process. The convolutional layers extract meaningful informa- tion in the image for the learning task at hand. Therefore, visualizing the constructed filters after each convolutional layers gives information on the structure of the image that was extracted by the layer, the so- called feature maps. Visualizing the stack of the various feature maps at the output of the various layers will provide insightful knowledge for the user, see Fig. 10 for an example of such stack of filters constructed by the proposed CNN. The figure shows filtered GNSS correlation images from the last convolutional layers. It provides understanding on the regions of the signal image that are extracted for multipath detection. Clearly the various peaks of the signal are considered for the detection task.

In addition, there is also the possibility to build a class-discriminative localization map that will highlight the regions of the input image that are most important for the trained CNN to assign a specific class to the image. Several methods have been proposed along this line [27,28]. The GradCAM method [28], that will be used later in this study, is often used for such purpose as it is applicable to most standard CNN architectures. The main idea is to compute the gradients of the score

of such GradCam activation map is provided, see Fig. 12. In Section 5.7, such heatmaps are constructed for the multipath detection task in the I/Q images. These visualization tools provide further understanding on the patterns of the correlation signals that are important for multipath discrimination. This information may be used later to further refine the signal frame that carries relevant information.

This section describes the experiments which were conducted to evaluate the performance of the proposed model on the dataset de- scribed in Section 3.5. For each test case the mean, median and stan- dard deviation values of accuracy and F1 score averaged over 20 runs are provided. The range and probability distribution of the multipath parameters as defined in Eqs. (5) and (6) are set, unless otherwise specified, as follows:

In this experiment, the performance of the proposed method is compared to the SVM multipath detection technique proposed in [29]. The SVM model constructs a maximum margin separating hyperplane between the two classes of data points (multipath/no multipath). SVM are often used as an alternative method to neural network as they are able to handle non linearly separable data [30,31]. Since the method proposed in [12,29] also collects signal information from the output of the correlator block, from a data collection point of view, it is similar to the technique proposed in this study. However, unlike CNN, they require prior data feature engineering. For comparison purposes, the feature extraction pipeline used in [29] was also implemented on 13 correlator outputs and identical SVM hyperparameters were used. More specifically, the features proposed in [29] were extracted as follows:

The experiments have highlighted the multipath detection power of the CNN when compared to SVM. The automatic feature extraction that takes place in the convolutional layers is able to catch the geometrical dependencies in the data. To further demonstrate this property, activa- tion maps as described in Section 4.3 have been computed using the GradCam technique (see Fig. 12). Clearly, the activation maps show hot detection regions around both signal and multipath peaks (red and yellow areas on the figure) while cold regions that do not carry detection relevant information are marked in dark blue. Distortion around the main signal is highlighted in the activation map in various multipath situations (near or far from main signal peak). When there is no multipath, no distortion appears in the heatmap and a much

This project has been partly funded by the SESAR Joint Undertaking under the European Union‚Äôs Horizon 2020 research and innovation programme under grant agreement No 783287. The opinions expressed herein reflect the authors‚Äô view only. Under no circumstances shall the SESAR Joint Undertaking be responsible for any use that may be made of the information contained herein. The authors are grateful to the Direction Technique de l‚ÄôInnovation (DTI) of the French Civil Aviation Authority (DGAC) for providing a simulation environment to validate our synthetic generator.

Fig. A.14 represents the correlation between the local signal and the sum of the direct path and the multipath signals as a function of the fre- quency offset between the local and received signals. This corresponds to the hypothetical limit case when the multipath signal arrives with the same code delay and with the same amplitude and phase as the direct path signal. The disturbance induced in the correlation function of the direct path by the multipath sinc function is considered to be

Vigneau W, Nouvel O, Manzano-Jurado M, Sanz C, Carrascosa AH, Roviras D, Juan JM, et al. Neural networks algorithms prototyping to mitigate GNSS multi- path for LEO positioning applications. In: Proceedings of the 19th international technical meeting of the satellite division of the institute of navigation. 2006, p. 1752‚Äì62.

