In this study, the acoustic echo problem and cancellation method of Android-platform-based VoIP was analyzed and researched. The echo problem is consequential for Android phone-based VoIP applications. However, in the traditional 2G/3G circuit-switch (CS) mode, the acoustic echo is cancelled by the hardware chip, and the quality of communication is adequate. In the future 4G/LTE environment, all-IP packet communication will be achieved. The IMS/VoIP will become the main application for personal speech communication systems. Before the introduction of 4G with echo cancellation built into its chip, the Android-based VoIP on 3.5G/WiFi will continue to undergo the aforementioned acoustic echo problem. This paper presents an analysis of the acoustic echo on Android-based VoIP and proposes a simple echo cancellation method.

2G/3G circuit switch communication mode, the acoustic echo cancellation function is built into the GSM chip. The LMS algorithm is commonly used for echo cancellation. However, Android-based VoIP is a pure software app. The communication protocol, SIP/RTP, the speech codec, G.711/G729, and acoustic echo cancellation must all be implemented by software. Acoustic echo cancellation is difficult for two reasons: First, the LMS-based echo cancellation algorithm requires high computational power. Second, the record/play process on the Android platform is conducted frame by frame. The minimal frame size is 10 ms (80 sample points), thus lengthening the filter length and computation of the LMS algorithm. Previous echo cancellation methods that have been proposed for the Android platform are listed as follows:

In this study, attempts were made to use a traditional 2G/3G circuit switch (CS) session. The echo was not present and the voice quality was excellent. Hence, whether the echo canceller was implemented in the hardware or the chip had to be determined by reading the android source code and retrieving the segment of code for the CS session. The segment of code was then used to simulate the echo function in the hardware.

This algorithm is used to capture echo audio samples. Most android system audio drivers capture 10 ms of audio data at a time slot. The LMS requires a high-order buffer length and computational power, which seems impossible. The time delay of voice over VoIP is too long for communication. Real-time communication is the most crucial feature of the VoIP system.

This indi ates that a remote user is speaking. A person who is speaking they does not hear the voice of the listener. This is a real situation in human communication. One speaks while the other listens. Based on this characteristic, the echo suppressor is enabled in this situation.

The previous discussion does not consider the effect of time delay. In Android audio devices, audio is not sampled in real time. The recording has an A/D converter and the playback has D/A converter. The time delay causes the echo suppressor to cancel the real voice, not the echo. Therefore, the time delay between recording and playback must be determined. The conditional equati n is modified as follows:

Fig. 5 shows the original playback voice. Fig. 6 depicts the microphone recording, which contains some echoes. Evidently, as shown in Fig. 7, the playback echo was cancelled and disappeared. The experimental result shown in Fig. 7 confirms the high performance of the proposed approach.

