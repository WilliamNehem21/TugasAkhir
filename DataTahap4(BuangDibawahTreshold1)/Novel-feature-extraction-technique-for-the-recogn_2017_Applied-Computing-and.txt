Abstract This paper presents an efficient handwritten digit recognition system based on support vector machines (SVM). A novel feature set based on transition information in the vertical and hor- izontal directions of a digit image combined with the famous Freeman chain code is proposed. The main advantage of this feature extraction algorithm is that it does not require any normalization of digits. These features are very simple to implement compared to other methods. We evaluated our scheme on 80,000 handwritten samples of Persian numerals and we have achieved very promising results.

The recognition of handwritten script is a difficult task due to the different handwriting qualities and styles that are subject to inter-writer and intra-writer variations. Many recognition sys- tems in many applications have been proposed in recent years where higher recognition accuracy is always desired. Typically, the recognition systems are adapted to specific applications to achieve better performance. They can be divided into three

main steps: preprocessing step, feature extraction and selection step, and classification and verification step. Handwritten digit recognition problem can be seen as a subtask of the optical character recognition (OCR) problem. Unconstrained hand- written digit recognition has been applied to recognize amounts written on checks for banks or zip codes on envelopes for postal services, etc.

This paper focuses on feature extraction and classification. The performance of a classifier can rely as much on the quality of the features as on the classifier itself. A good set of features should represent characteristics that are particular for one class and be as invariant as possible to changes within this class [1]. Commonly used features in character recognition are: invariant moments [2], projections [3], zoning feature [4], Four- ier descriptors [5], and contour direction histogram [6]. A fea- ture set made to feed a classifier can be a mixture of such features.

work has been done for Arabic/Farsi digit recognition. Direc- tion histograms using segmented characters from words in the CEDAR database [11] and transition information from the background to the foreground pixels in the vertical and hori- zontal directions of a character image [12] have been investi- gated. Later, feature extraction techniques generating local and global features were proposed [13] wherein local features were obtained from sub-images of the character including fore- ground pixel density information and directional information. The global features measured the fraction of the character appearing below the word baseline and the characters’ width/height ratio. Furthermore, gradient features have been proposed for handwritten character recognition [14,15] where Awaidah and Mahmoud combined them with structural and concavity features for the recognition of Arabic (Indian) numerals using hidden Markov models (HMM) [16].

A probabilistic neural network (PNN) approach for the recognition of the handwritten Indian numerals [17] based on the center of gravity and a set of vectors to the boundary points of the digit has been presented however Montazer et al. [18] proposed a holistic approach using neuro-fuzzy inference engine to recognize the Farsi numeral characters. Finally, Impedovo et al. introduced a genetic algorithm based clustering approach using zoning features [19] whereas an adaptive zoning techniques for handwritten digit recognition are presented [20,21] where the features are extracted accord- ing to an optimal zoning distribution. The experimental tests show the effectiveness of the latter with respect to traditional approaches for zoning design.

The literature details many high accuracy recognition sys- tems for handwritten Farsi digit database [22] used in our research. While an efficient feature set based on modified con- tour chain code has been proposed in [23], two types of feature sets based on modified chain-code direction frequencies in the contour pixels of input image and modified transition features have been presented [24]. A support vector machine (SVM) is proposed as classifier to recognize Persian isolated digits. Besides, combinational methods for improving the recognition rate of multi-class classifiers using confusion matrix and Genetic Algorithms have been proposed [25,26]. From the lit- erature survey of the existing feature extraction techniques for character/digit recognition, most of them need digit normaliza- tion and consequently cannot preserve the shape of the input image for feature extraction step, which could react negatively to the recognition phase. For that reason, the main contribu- tion of this work focuses on novel feature extraction approach where the digit image does not require any normalization.

This paper is broken down into five sections. Section 2 provides details on the feature extraction and selection tech- niques. Section 3 deals with the classifiers used for the recog- nition purpose, experimental results are discussed in Section 4, and finally Section 5 presents some conclusions and perspectives.

normalization, we compute the feature vector without normal- izing digit image. Finally, we normalize feature vector by mak- ing its module equal to one. The second feature extraction technique builds on the white–black transition information in the vertical and horizontal directions of a digit image. Each transition feature is characterized by the area defined by the corresponding transition and normalized by dividing it by the whole digit’s area.

The Canny algorithm is more robust to noise and more likely to detect true weak edges but some digit samples are with bad qualities so that after applying canny operator some redundant pixels are remained, which affect the contour fol- lowing, these pixels should be removed. The redundant pixel removal process is based on the condition that every contour pixel can only have two 8-connected pixels around it. If there is a pixel which has more than two 8-connected pixels around it, the redundant pixels must be detected and removed. An example of redundant pixel removal process is shown in Fig. 2 where pixel 2 is a redundant one and must be removed. After removing redundant pixels, the contour becomes of unit thickness and consequently, we find that only 4 possible seg- ments exist in the contour structure, which are considered as basic segments consisting of two pixels. Consequently, the fea- ture extraction process is independent of the tracing direction. To extract features from digit contour, we employ a his- togram of the 4-chain code directions. The 4-bin histogram of chain code directions is computed where each bin represents

First, the smallest bounding box enclosing the digit contour is computed. If any of the number of rows or columns of the bounding box is not a multiple of 3, one or two rows/columns of zeros should be added. If only one row of zeros is to be added then it will be added on the right side of the image. If two rows of zeros are to be added then each one must be on one side and similarly for columns. Consequently, the image can be divided into 3 × 3 zones of equal area. The tracing pro- cess starts from the end point on the contour element, search- ing for the next nonzero pixel in any direction until end point is

where hi is the ith bin of the tangent histogram of the whole digit, fi is the ith component of the feature vector f, which is between 0 and 1, and   is the 2-norm. Thus,  f  = 1. Conse- quently, these features are a translation and scale invariant contour descriptors and they are independent of the way a con- tour is traced.

The second set, which is used as complementary description of digits, is based on the white–black transition information in the vertical and horizontal directions of a digit image. This technique is an extension of that presented in [28] where the transition description is based on the length of the transitions. However, this technique is based on the areas between these transitions and the bounding box of the digit as region descriptors.

In the horizontal direction, the bounding box of each digit is divided horizontally in two equal parts. For each part, the three transition features are calculated in the horizontal direc- tion. In the vertical direction, the three transition features are evaluated on the whole digit.

Fig. 4 shows an example of the different areas made by the white–black transitions of the digit ۸. In the horizontal direc- tion we have only tow transition types of each part: the area formed by the first transition is at the left side of each part, the area formed by the second transition is at the right side of each part, and as we have not a third transition, the corre- sponding area is equal to zero.

Feature selection aims to reduce the dimensionality of the feature space for classification by selecting the most informa- tive features. The most informative features are the ones that best separate the different classes. Feature selection has been used previously for many applications, yielding higher speed and reduced computational cost for the classification process.

SVM is a classifier derived from statistical learning theory first presented by Boser et al. [30]. SVMs were introduced in [31] as learning machines with capacity control for regression and bin- ary classification problems. It has also been proved to be very successful in many other applications such as handwritten digit recognition, image classification, face detection, object detec- tion, and text classification. In the case of classification, SVM try to find an optimal hyperplane that correctly classifies data points by separating the points of two classes as much as possible. For the linearly separable case, the support vector

The SVs are the training patterns that lie on the margin boundaries. An advantage of this algorithm is its sparsity since only a small subset of the training examples are used to com- pute the output of the classifier. Fig. 5 represents a binary clas- sification problem where filled circles and squares are the training data while hollow circles and triangles are the testing data.

This approach is valid whenever the set of points of the two classes are linearly separable. Nevertheless in real data this is usually not the case. In order to work with non-linear decision boundaries the key idea is to transform xi to a higher dimen- sion space using a transformation function, so that in this new space the samples can be linearly separable. SVM solve these problems using kernels. One only has to calculate the inner products of the vectors in the feature space via the kernel function K(·, ·). This is the kernel trick that allows the con- struction of a decision function that is nonlinear in the input space but equivalent to a linear decision function in the feature space:

‘‘Hoda” [22]. This dataset consists of ten digit classes from 0 to 9 (۰۱۲۳۴۵۶۷۸۹). For experimental results, 80,000 handwritten samples are considered; 6000 samples per class for training and 2000 samples per class for testing. Fig. 6 shows some digit sam- ples extracted from the used database with different styles and qualities.

Firstly, Canny operator is used for digit contour extraction then the bonding box of each digit contour is divided into nine equal zones. Within each zone the redundant pixels is removed and the contribution of the 4-chain codes are counted in the corresponding histograms. The transition features are calcu- lated as shown above: in the horizontal direction, the bound- ing box of each digit is divided horizontally in two equal parts. For each part, the transition features are calculated in the horizontal direction. In the vertical direction, the transition features are evaluated on the whole digit. Finally, relative area is calculated. The used feature vector is equal to 10.f, where f is the vector of the 46 features.

There are two common methods to solve a multi-class problem with binary classifiers such as SVMs: one-against all (or one-vs-rest) and one-against-one. In the one-against-all scheme, a classifier is built for each class and assigned to the separation of this class from the others. For the one against- one method, a classifier is built for every pair of classes to sep- arate the classes two by two. Another approach to the recog- nition of n different digits is to use a single n-class SVM instead of n binary SVM subclassifiers with the one-against- all method, thus solving a single constrained optimization problem.

recognized digits are among 2, 3 and 4 digits. To improve the recognition accuracy, we use a scheme similar to one intro- duced in [24]. We utilize a classifier composed of seven one- against-all SVMs where {۰, ۱} and {۲, ٣, ۴} represent two separate classes as shown, in Fig. 7. After that, we use one against-all SVM to separate the combined {۰,۱} class. For the recognition of digits ۲, ٣, ۴, we also use twice one- against-all SVM.

Fig. 7 illustrates the recognition system where arrow weights represent the number of the misrecognized digits of each class. Out of a total of 20,000 digits in the testing set, there are 291 digits that are not successfully recognized. Con- sequently, we obtain 98.55%, which showed slight improve- ment when compared with the first scheme. Note that we have got an accuracy of 100% on the training samples (60,000 samples) and also an accuracy of 100% when the train- ing is made on the whole dataset (80,000 samples).

Table 3 illustrates the individual discriminative power of each feature. The first column represents the discriminative powers of the features extracted from transitions and the rela- tive area respecting the order described in the transition feature procedure. The discriminative powers of CCH features are pre- sented in a 3 × 3 grid with 4 values in each cell matching the corresponding image region. The threshold value of discrimi- native powers used to select the pertinent primitives must be determined by practical tests. First, the primitives have been ranked in descending order of their discriminative powers. The threshold is then determined by undertaking trainings on the selected features. We retain the threshold that provides the best performance in terms of recognition rate.

Moreover, the discriminative powers help us to analyze the pertinence of the different features. From Table 3, among the 10 less pertinent features there are only two from the transition features and the remaining are from the CCH features. We can also notice that the most pertinent feature is the area made by the second transition of the low part in the horizontal direction with discriminative power of 0.8217, which prove the perti- nence of the transition features.

This paper presents a system for the recognition of the hand- written Persian numerals that could be used for automatic reading of numerical amounts of checks. The main contribu- tion of this work focuses on feature extraction where a novel feature set based on transition information in the vertical and horizontal directions of a digit image combined with the well-known chain code histogram (CCH) is discussed and compared with others in the literature. The classification sys- tem is based on SVM, which is considered one of the most powerful classification techniques and is now widely used in many pattern recognition applications. The results of our experiments show that feature selection procedure reduces the dimensionality of the feature space without affecting the performance of the classifier where the system can maintain high performance with less computational complexity compar- ing to the systems in the literature.

Among the most important advantages of this feature extraction algorithm; it does not require any normalization of digits where the most of the published works need digit nor- malization, which degrade the image quality. These features are also very simple to implement compared to other methods. It is obvious that to improve the performance of proposed system further, we need to investigate more on sources of errors. Potential features other than the presented ones may exist. In future, we plan to use some structural features like concavity analysis which may remove some of confusions

