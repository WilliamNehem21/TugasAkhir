In this paper, authors offer the new method of the organization of the distributed computations. The main benefit of proposed method is possibility of using resources of many different private computers for solving coherent tasks. Proposed method allow correcting the computational process when computing nodes parameters change. Computing system achieves this ability because it consists of equal proactive agents, which interact to create communities to solve incoming tasks. While creating the community agents optimize it composition to solve user task in time and to minimize needed computing resources.

The main problem of using such CNs in DCS is probability of changing of their parameters (such as computing power, network bandwidth and so on) any moment if their owners perform some actions (for example run some application or begin downloading some file). Another problem is the variety of CNs of different owners. Within one DCS may coexist many different CNs, and this makes it much more difficult to solve the task of effective distributing of tasks.

The project SETI@home (setiathome.berkeley.edu) can be example of such attempt. This project uses the CNs of volunteers to perform filtering of the signals from radio telescopes to look for extraterrestrial intelligence. However, analysis show that SETI@home allow to use private computing resources because it is created to solve only easily decomposing tasks, that can be divided into non-coherent pieces. Therefore, non- coherent tasks simplifies implementation of load balancing and time to solve task is not critical, that means that characteristics of the individual CNs can be dynamically varying. That makes systems like SETI@home very limited in usage. That is why it is urgent to develop new methods and algorithms to allow using personal CNs in DCS.

Creation of universal DCS based on private CNs collaboration is considerably more difficult because it should allow solving coherent tasks consisting of coherent subtasks. The problem appears because the set of CNs in DCS is mixed: some CNs have a wider channel, some CNs have higher computational performance. In addition, there are dynamic changes of parameters of CNs depending on their owner’s behavior. Today effective loading of a DCS while solving coherent tasks is a challenge. [9] The task of solving such tasks while parameters of CNs dynamically changes is much harder. However, the development of new methods for performing adaptive computations in DCS, which can let the system to adjust computations to variations of CNs parameters, can solve it [10].

In the proposed method of DCS organization, we try to avoid dedicated servers and to make a decentralized organization of the DCS [11]. This new method is based on multiagent systems and collective decision-making principles. Every CN of DCS have a proactive agent software installed and interaction between these agents realize dispatching of incoming tasks. Every time DCS can consist of different set of agents that is why there appears problem of interaction between user and system because user do not know where to send his task. To solve this problem, we use service nodes that are passive and serve as "bulletin boards" (BB) [12] a structure chart of proposed decentralized DCS is shown on figure 1.

As you can see, proactive agents perform almost all service tasks in such DCS [13]. We proposed to implement each agent on basis of real executive CNs (ECN on the figure 1). Agents dispatch the process of solving user tasks in DCS. In order to solve coherent tasks they need to create unique communities to solve all such tasks [5]. The target of the community is to solve incoming user task during a time, specified by user. Set of the CNs in community have to vary if parameters of CNs in this community change. The system may experience failures of CNs, variation of CNs computing power, reducing of bandwidth, and all that can cause increasing of the task solution time. In case of all this situations community of agents have to change its composition in order to solve the task in time, specified by user.

In the IG G (Q, X) of the task every vertex qi  Q represents i-th subtask. For very subtask user specifies the estimated computational complexity Yi. Every arc x(qi, qj)  X is specifies to the amount of data Wij in transfer from subtasks qi to subtask qj [15].

Steps above let the agents of DCS form a communities to solve incoming coherent tasks in time. The set of agents in the community depends on their actual performance. This ability make the community to adapt computing process to the dynamical variations of parameters of CNs.

Verifying the efficiency of proposed algorithms for solving coherent task in DCS based on private CNs resources is very hard task because there is great amount of parameters in such system. To do that we create the program model of DCS, which allows modelling the DCS containing of up to 1000 CNs solving up to 250 tasks. Figure 3 shows the interface of created program model [17].

The form in the right shows a set of tasks of the DCS, their statuses ("new" / "solving" / "ready") and its parameters (the maximum time for solution, complexity, number of virtual points for solution, etc.). Each task in this table have different color. A visual representation of DCS CNs can be found in the center (lot of circles). Each circle represent modelled CN and its color matches the color of the task that is solving at CN.

The main target of research is the practical proof of efficiency of proposed algorithms, but also we wanted to evaluate of the relative loss of processor time on CNs due to dispatching of the decentralized computing. That is why we had to carry out several series of experiments with different parameters of CNs and computer networks. While researching on the proposed algorithms, we used some types of real tasks we work with in Southern Federal University [18].

For primary parameters we decided to use absolute values, for secondary parameters relative values and for tertiary parameters limited random values. To make result more precise due to random values we carried out every experiment three times. Volume of this paper gives us no opportunity to show all the experimental results that is why below you can see tables (Table 1, Table 2) with parts of them.

The result table 1 shows that the percent of actual load at CNs was good: from 72% to 92%. That means that time loss due to organization ranged from 8% to 28% of the total time. Modern researches in the same directions [8][9] show that average effectiveness of solving coherent tasks in DCS is about 40%, which means that proposed methods are effective. You also can see from table 2 almost all the tasks in modelled DCS have been successfully solved in time

Hisamutdinov M.V., Korovin I.S., Kalyaev A.I. The Application of Evolutionary Algorithms in the Artificial Neural Network Training Process for the Oilfield Equipment Malfunctions’ Forecasting / 2013 2nd International Symposium on Computer, Communication, Control and Automation (3CA 2013) Proceedings. – Atlantis press. Pages 253-257.

