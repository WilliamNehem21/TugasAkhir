The third scenario is inspired by the Organic Traffic Control (OTC) system that self-adapts the green duration of traffic lights [35], estab- lishes progressive signal systems [36], and guides drivers through the network using variable message signs [37]. Here, we used an abstract traffic simulation, where the SASO system consists of seven inter- connected intersection controllers. Fig. 10 shows the layout of the street

Each intersection tries to minimise the waiting time for all cars at all incoming lanes by optimising the red light times for each lane. There are 250 cars in the simulation. They are part of the environment and not of the SASO system itself. Each car picks its destination randomly and chooses the shortest path to it. When it reaches the destination, the process is repeated and therefore all cars in motion constantly. In contrast to OTC system, the intersections of the SASO system in this simulation do not communicate with each other. Their reconfiguration results are only

The optimisation function to be minimised is the sum of all waiting times of all cars in all lanes. We assume that each car needs a constant time to cross the intersection if it is in the first position of an incoming lane with a green light. Therefore, the waiting time for one car is defined by the number of cars that are processed before the current car leaves the intersection. In one time step of the simulation, several cars can be pro- cessed. The waiting time of the unprocessed cars is carried over to the next simulation step. After each simulation step, the intersections look at the waiting times of the unprocessed cars and try to find a red light configuration that minimises the expected waiting time over all cars in the next step.

configuration changes that are big enough to count as active but they generate no isolated peaks. For the sake of completeness, We provide the Kinoshita activity factor for this simulation in Fig. 13. In this time series, the signals for the blockade are not as prominent and the setup phase creates similar signals.

We created this additional simulation to test the measures in a more noisy and larger environment where a smaller part of the subsystems experience a direct influence from external events. The scenario simu- lates rush hours in a city street network. The traffic lights and the cars operate in the same way as in the previous scenario, but we use a different street network. The network represents two islands each with a Manhattan-type network of sizes 3 by 5. The islands are connected with three bridges. The connections between two intersections provide one lane for each direction (see Fig. 14).

Fig. 15 shows the time series νt for this scenario with parameters M = L = 15 and ϵ = 2. Since the random background traffic has no preferred routes, we see a more noisy time series with more peaks. The peaks

clearly visible but are not as outstanding as in the previous simulations. The other peaks are a result of the random traffic. This shows that the measure is still applicable in such an environment although its perfor- mance to identify major events is not as good as in situations with less noise.

This article presented a step towards an integrated framework for the quantification of runtime SASO behaviour. Based on preliminary work on a probabilistic approach to assess a degree of self-adaption and self- organisation, this article presented a method to measure the stability of configurations of autonomous subsystems within an overall SASO constellation. Taking the design concepts of Organic Computing and Autonomic Computing as basis, we found our approach on the interface between adaption mechanism and productive system by assuming read access to the current configurations of the productive units. We showed that the proposed measure building upon the Kinoshita approach can be used to identify global anomalies in the system's configuration which serve as indicators for abnormal adaptation processes. The capability to identify such anomalies relies on the choices for the incorporated hyper- parameters.

oping an integrated measurement framework for a continuous runtime analysis of SASO system properties. Future work follows two major research directions: On the one hand, we aim at an application to further, more complex scenarios of distributed SASO constellations and assess the behaviour of the measure. This includes an evaluation of this method in real-world applications and finding more constructive methods to iden- tify suitable parameters. On the other hand, we build on-top of the in- dicators provided by the measure to establish a runtime approach to using this information within the adaption logic, e.g., to better balance the trade-off between possible performance gain due to adaptation de- cisions and the impact on the stability and correspondingly the users’ acceptance.

This research is partly funded by the Deutsche For- schungsgemeinschaft (DFG, German Research Foundation) under grant TO 843/5-1 (project ‘InTURN’). The publication of this article was financially supported by DFG within the funding programme Open Ac- cess Publizieren. The authors acknowledge the support by the DFG.

D'Angelo M, Gerasimou S, Ghahremani S, Grohmann J, Nunes I, Pournaras E, Tomforde S. On learning in collective self-adaptive systems: state of practice and a 3d framework. In: 2019 IEEE/ACM 14th international symposium on software engineering for adaptive and self-managing systems. IEEE; 2019. p. 13–24.

Filieri A, Maggio M, Angelopoulos K, D’ippolito N, Gerostathopoulos I, Hempel A, Hoffmann H, Jamshidi P, Kalyvianaki E, Klein C, Krikava F, Misailovic S, Papadopoulos A, Ray S, Sharifloo A, Shevtsov S, Ujma M, Vogel T. Control strategies for self-adaptive software systems. ACM Trans Autonom Adapt Syst 2017;11(4):24: 1–24:31.

