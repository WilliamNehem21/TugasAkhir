Network address translation (NAT) traversal is a critical technology for real-time video streaming between two endpoints. The port predictive algorithm of the NAT mapping rule is the core of NAT traversal. However, most port predictive algorithms in the NAT traversal method are too simple or unclear. The behavior of NAT port mapping in devices in real network environments is complex and cannot be accurately predicted. In this study, NAT port mapping behavior was examined and a mathematical model was established to enhance the port predictability of NAT and increase the success rate of NAT traversal.

To improve the NAT traversal algorithm and achieve direct P2P communication, currently available technology requires that both users send their packet to forecast the port mapping rules of local NAT. The information of the next predictive port is then exchanged between two endpoints. Finally, the NAT traversal and direct transmission between two endpoints is achieved. This study focused on an analysis of port mapping rules of specific NATs and improves the success rate of NAT traversal compared with existing methods.

In this study, two testing methods were employed to analyze the behavior of NAT port mapping. The first method is “multiple client sockets to one service port,” and the other method is “one client socket to multiple service ports,” such as STUN [2]. Two methods employed in this study were based on first method; however, in specific NAT cases, only the second method could determine the mapping rule and function smoothly. These two methods, presented in Fig. 1, were employed to analyze and establish a mathematical model.

Fig. 2 presents the port values of each new session for the case of ASUS RX3081. The port mapping rule of most NATs is linear and can be expressed using a simple linear equation. Moreover, the slope of this linear equation or the step size of the port mapping step is equal to 1, which is used by most NAT manufacturers. Thus, most traditional methods use the linear mode to perform NAT traversal.

However, certain NAT manufactures, such as AboCom FSM410, presented in Fig. 3, employ nonlinear port mapping, which is similar to random or two-level linear port mapping. Two properties can be determined; the first increases and then decreases; the second increases subsequently. This phenomenon is called the “jump function.”

In Fig. 3, each mapping port for a new session is named as a set x[n], and each sequence comprises only two types of step. Thus, a second-order jump function can be assigned to match these values. If N types of step exist, it is defined as an N-order jump function. Various types of step can be individually entered into a set dif[n]. For example, in the case of Fig. 3, the second-order function dif[n] is equal to {+12, -4}. In Fig. 4, the auxiliary lines are displayed to facilitate analysis.

The second-order jump function contains two linear auxiliary lines; therefore, an N-order jump function contains N linear auxiliary lines that are parallel to each other. This means that a jump function has a main slope M for all parallel auxiliary lines. Each linear auxiliary line has a y-intercept and can be entered into a set B[n]. For example, the values of B[n] are equal to {33184, 33196} in the case of Fig. 3. Moreover, B[n] can be obtained using (1), where b is the first value of the sequence.

When N = 1, B[n] contains only one value: the initial value b. The values dif[n] also contain only one value, because the value of (n mod 1) is always 0. The equation can be simplified to the linear equation x[n] = Mn + b. Therefore, a first-order jump function is also a linear function.

Typically, at least three values are required to determine whether a numerical series belongs to a linear equation. A linear equation is used to determine the first two values. The third value verifies whether this numerical series is linear. It is a critical method for verifying a linear equation system.

Moreover, verifying an N-order jump function system is also critical. The N-order jump function contains N linear equations. At least three N values are required to verify a jump function and creating a function that requires two N points. A linear equation can be verified using the slope. The jump function can be verified similarly. The equation of M can be obtained using (3).

In this study, a protocol was designed, based on the “one client socket to multiple service ports” method, whereby a client sends a packet and receives a response packet from the server side. This response packet informs the client behind the NAT and elucidates the port mapping situation of the local NAT. The client can then analyze the jump function. The client flowchart can be designed as indicated by Fig. 5, where “Jmp” indicates the jump function.

In this study, an Nth order-jump function was proposed to predict specific NATs. The predictive equation is expressed in (3) and (4). The success rates of port prediction are listed in Table 1. The proposed method is clearly superior to the traditional linear prediction method.

