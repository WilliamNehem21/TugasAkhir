Abstract Extensive research has been devoted to the multi-mode resource constrained project scheduling problem (MRCPSP). However, little attention has been paid to problems where preemp- tion is allowed. This paper involves the preemptive multi-mode resource constrained project scheduling problem (P-MRCPSP) to minimize the project makespan subject to mode changeability after preemption. This problem is a more realistic model and extended case of multi-mode resource constrained project scheduling problem. A binary integer programing formulation is proposed for the problem. The problem formed in this way is an NP-hard one forcing us to use the Simulated Annealing (SA) algorithm to obtain a global optimum solution or at least a satisfying one. The per- formance of the proposed algorithm is evaluated on 480 test problems by statistically comparing in term of the objective function and computational times. The obtained computational results indi- cate that the proposed algorithm is efficient and effective. Also, it is concluded from the results that mode change is very effective to improve the optimal makespan of the project.

time. In these cases, modeling and solving such a problem as a classical MRCPSP, especially in the preemptive case may lead to poor solutions. To the best of our knowledge, no research has been performed on the P-MRCPSP with permitted mode change.

Therefore, the contribution of this paper is fourfold: first, a binary integer programing formulation is developed for the preemptive multi-mode project scheduling problem of mini- mizing the project makespan subject to resource constraints and precedence relations, where execution mode of each activ- ity can be changed after being preempted. This problem is called P-MRCPSP-MC. This model is not considered in the past literature. Second, an efficient meta-heuristic solution procedure based on SA is developed for the problem due to NP-hardness of the problem. In proposed SA, the activity list representation is used to encode a project schedule and the serial schedule generation scheme (SSGS) embedded with a new dynamic heuristic to translate the schedule representation to a schedule. Third, the effectiveness of proposed SA for the P-MRCPSP-MC will be analyzed. Finally, the effect of mode changeability on project makespan is analyzed.

The remainder of this paper is organized as follows: Sec- tion 2 is devoted to the presentation of the problem. In Sec- tion 3 the steps of our algorithm to solve the problem is explained. Computational results are represented in Section 4. Finally, Section 5 contains the conclusions.

The basic MRCPSP and P-MRCPSP assume that activities assigned modes cannot change during the execution of the pro- ject. This assumption is one of the classical MRCPSP and P- MRCPSP shortcomings. This common assumption can be jus- tified as long as essence and materials of modes are different and mode change is inapplicable. However, if execution modes

[1,8,21,25,35,40]. In this section an SA algorithm is proposed to solve P-MRCPSP-MC. In order to increase quality of the proposed SA, an efficient dynamic heuristic algorithm is imple- mented to construct a schedule. Also exact solutions obtained from Lingo 11 are considered to provide comparable computa- tional efforts for SA.

Simulated Annealing (SA) which has been successfully applied to various difficult combinatorial optimization problems is a random search method that is based on Monte Carlo iterative strategy. The origins of SA are in statistical mechanics (Metro- polis algorithm) and it initially was presented as a search algo- rithm for combinatorial optimization by Kirkpatrick et al. [27]. SA is useful for problems with a very large discrete search space, which is too large for an enumeration search method. SA algorithm starts by generating an initial solution and by initializing the so-called temperature parameter T. Then, at each iteration a solution s' is randomly created in the neighbor- hood of the current solution and if it is better than the current solution, it replaces the current solution. If the new solution is not an improvement upon the current solution, it replaces the current solution with a probability generally computed follow-

leading the search to converge to a (local) minimum. The prob- ability of accepting uphill moves is controlled by two factors: the difference of the objective functions f(s')- f(s) and the tem- perature T. On the one hand, at fixed temperature, the higher the difference f(s')- f(s), the lower the probability to accept a move from s to s'. Whereas, the higher T, the higher the prob- ability of uphill moves.

The choice of an appropriate cooling schedule is crucial for the performance of the algorithm. One of the most used ones follows a geometric law Tk+1 = aTk where a e (0, 1) which corresponds to an exponential decay of the temperature. The cooling rule may vary during the search, with the aim of tuning the balance between diversification and intensification. For example, at the beginning of the search, T might be constant or linearly decreasing, in order to sample the search space; then, T might follow a rule such as the geometric one, to con- verge to a local minimum at the end of the search. The cooling schedule and the initial temperature should be adapted to the particular problem instance, since the cost of escaping from local minima depends on the structure of the search landscape. The description of SA indicates that a basic SA does not use the history of the search process. This is one of the reasons why SA is often outperformed by other meta-heuristics. How- ever, due to its simplicity, it is generally very fast and it can be successfully integrated into other search techniques.

In the previous researches, various representations for sched- ules in the construction of heuristics for the RCPSP are devel- oped (Kolisch and Hartmann [30]). The two most important ones are the random-key (RK) representation and the activity-list (AL) representation. Hartmann and Kolisch [19] deduced from experimental tests that procedures based on AL representations outperform the other procedures. The

RWR is a representation of work-resource balancing. In our proposed SA, mode assignment is done by comparing real- ized ratio of work to resources so far with RWR. For selected activity i, mode mi with realized ratio of total completed work content to the spent resources so far as close as to RWR is assigned.

In the proposed SA an initial solution is created by setting all activities on the activity list based on the latest finish time (LFT) which is an efficient priority rule (Kolisch [29]). Then, the procedure described in Section 4.2 is used to determine exe- cution modes and execution time of activities.

In order to generate a neighborhood of current solution the following method is used. Let I = (jI, jI , ... , jI ) be the current solution. Neighborhood generation mechanism is applied to the activity list of the solution. For activity list of I, neighbor- hood generation mechanism operates as follows: A random activity jI , is selected from the activity list with position a. Last

The values of parameters used in Simulated Annealing (SA) algorithms must be carefully selected since parameter values may have a significant influence on the performance of the algorithm. In this paper, the Taguchi experimental design is used to tune the parameters of SA. CPU-time limit was speci- fied as a stopping criterion which is selected through the com- putational experiments. We obtained good results by indexing

than 30, while there are many instances that the Lingo is unable to solve, there is a solution by SA. However, Lingo obtained optimum solutions for 229 out of 480 problems in 1000 s and SA algorithm solved all problems with low relative deviation and in a very short time (70 ms per activity). Average CPU-time for Lingo indicates that when the number of execu- tion modes is increased the complexity of the problem is increased. ARD for the algorithm shows that proposed SA gives robust solutions. Also, NPM for the algorithm indicates that too many executions of problems reach the optimum solution.

The preemptive multi-mode resource constrained project scheduling problem with permitted mode change (P- MPRCPSP-MC), is investigated in this paper. The objective of P-MPRCPSP-MC is to schedule the activities in order to minimize the project makespan subject to the precedence con- straints and resource constraints. In this problem setting, work content concept is used instead of duration. This problem has not been studied ever before. The problem described with an integer programing model, and then the parameters tuned Sim- ulated Annealing (SA) proposed to solve it. The performance of the proposed algorithm on 480 test problems was compared with the results of the Lingo 11. From the computation results, one could clearly see that the SA algorithm could efficiently solve the project scheduling problem. Also, one could find out that mode changeability obviously leads to an average makespan improvement. For further research, we recommend the adapting mode change concept for other extensions of multi-mode project scheduling problems.

