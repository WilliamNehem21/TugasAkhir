In many dynamic open systems, social interaction plays an important role for the development of social capital. These interactions may not be secure from self-interested agents. For that, each agent must be capable of identifying reliable interaction allies. In light of this, the focus is on developing a different type of interaction among the agents inside a spontaneous networked organization (SNO). It helps to overcome such a problem through applying a broad range of

policy of negotiation to accelerate the execution process of the fittest task provided by the organizer. Moreover, by applying collaborative filtering (CF), we examine different types of data to show how agents interact implicitly or explicitly and how these interactions affect the social capital. This method obtains a high performance of interaction and can help to control the spontaneous flow of behaviors and knowledge to be more accurate when agents communicate rationally since trust is recorded in such a distributed organization.

A spontaneous networked organization (SNO) is a collection of agents characterized by their shared values and interactions with each other to achieve a certain goal [2]. In the real world, people always attempt to obtain the satisfied strategy to accomplish the goals. This satisfied solution can meet their own needs even though it may not be computationally perfect. Formation is considered as a main guide to understanding the

Interactions among agents play an important role for the growing of social capital inside the SNO [1]. They give a rise to a set of social norms, shared value, relations and common goals that describe an organization. The behaviors, attitudes, and experiences of each agent are collectively influenced by other agents. Since the social capital is growing rapidly, the new strategies and planes will be launched dynamically to avoid arriving to the dissolution [1]. Therefore, the social interaction process plays an efficient factor in the creation of trust between agents or agents and other entities inside the organization.

Shared values can strengthen the competitiveness for SNO's agents [6]. These shared values become cognitive contexts with agents, and they in a right manner can coordinate their actions and follow to combined communication. These cognitive contexts represent the social norms that can set roles and plans of behavior that synchronize agent's communication with others.

Social norms are the level of social customs and traditions, and common trends, that demonstrated by organization's agents. They are legislated rules and procedures that pay individuals to adapt both when carrying out simple or complex interacts because they know and accept public laws, which increase the unit of organization cohesion and interdependence. These norms are shared values, which deeply cherished by individuals, affect their interactions, and characterized by congruence and similarity among the agents [2]. This is what helps to increase the degree of unity and cohesion of the organization.

The spontaneous networked organization (SNO) has properties that are similar to many traditional organizations. Usually, it goes through processes from formation to dissolution. Some other operations may also exist inside it. Any organization goes through certain processes that formulate its existence. Virtual networks, for instance, have a life cycle stages of creation, operation, evaluation, dissolution, and metamorphoses [9]. These basic stages are very noticeable in the life cycle of many existing organization, such as the SNO.

The organizer in SNO is responsible for building a coherent belief system from the agents in order to keep a sense of continuity toward their organizational behavior. The organizer has the opportunity to pick which agent has the best payoff (i.e. capability) to achieve the task assigned. After the organizer group receives the set of capabilities from the agents, he or she will start to examine the agents’ level of fitness and assign the tasks to the proper one of them who has the best fit capabilities (i.e. a set of payoffs) depending on their level of fitness.

This paper mainly focuses on developing a different type of interaction among the agents inside the SNO. We present first the agent negotiation protocols through the interaction process, and then move to show the service level agreements (SLAs), and how to use them inside SNO in the following sections. The interaction using distributed database will be shown next. The implicit and explicit interactions by applying the concept of collaborative filtering (CF) will be addressed in the last section.

Agents are a set of individuals who are autonomous, social, reactive, and self- learning. They are coherent behaviorally and interact with each other to fix a problem and try to connect other agents. By the time, the organizer agent will offer a task and deploy it to others through the network. This attracts the agents to request the task from the organizer to achieve it. Thus, this composition environment allows both agents to interact and negotiate with each other in a proper manner.

The agents must have multi- attribute qualitative (arbitrary) decision- making to help their decisions on selecting the fit task. The agents have to be willing and cooperate dynamically or sometimes statically to make a decision to get this task. They will show their capability by sending their payoffs to the organizer and set their preferences to select the tasks. The organizer, after examining the agents’ level of fitness, will choose the best agents according to the suitability or the capability and preference they send to execute the certain tasks.

The negotiation among the agents will be based on the Contract Net Protocols that distribute the task as task announcement between the agents when the organizer offers it. These protocols allow the agents to negotiate with their peers to make the fitness agents candidates in one group of agents. When the agents receive the tasks and for some reasons they cannot solve the present them, they will become sub-tasks. Agents will form a contract between themselves, and announce the sub-tasks to the contract net acting as agents which evaluate the task with respect to their capabilities. Thus, other agents will attempt to bid more for winning this contract. The agents who have more bids will win the contract and then show their fit capabilities and abilities to the organizer to be assigned. The organizer in this case can evaluate the submitted bids, and choose the most appropriate agent to perform the task [8]. Furthermore, the organizer is responsible to capture the agent-specific data for particular tasks. When the contract agreement is established between the agents, SLA violation monitoring is applied in this group of agents to determine whether negotiation protocols are achieved or violated [13].

SLAs can be applied among the interacting organizations to describe the agreement type between them [1]. They are a negotiated agreement between two agents who interact in social networks. They compose the natural options to represent the agreed restrictions for individual tasks [8]. SLAs are performed to involve acceptable start and end time limits that simplify the description between sender and receiver requirements. They have been used in networks, such as the Grid Computing, SLA is used to be direct mediation between a service provider and a service requestor. It works depending on the Contract Net Protocols that allow the agents to negotiate with others for scheduling the tasks offered. SLAs help to get an efficient cooperation between the agents by advertising the task as a task-sharing to other agents in the network [8]. Moreover, SLAs use MARGO, an argumentation framework for decision making to allow the agents to interact with their peers for the actual deployment of tasks. The agents argue internally to support the decision on proper task and then decide their offers [4].

In the model of social interactions, we will use the SLA, is a twofold agreement between two group agents who interact in the organization, and it can be attached with each agent in the group. These compose the natural options to represent the agreed restrictions for individual tasks [8]. SLAs are performed to involve acceptable start and end time limits and a simple description of send and receive requirements. This pact between the two parties can specify interaction guarantees in terms of this interaction can be acceptable or unacceptable, and action to be taken in special cases as well [5]. SALs help the organization to be automatically configured based on the availability of different parties [12]. It will be set between the agents in the organization and the trust value for the agents will travel through the vectors that will connect the agent with others. Here, in this system, the implicit interactions among the agents in one group of organization are controlled by SLA, and the agent can negotiate to improve the communication processes and guarantee the quality of the services, so improved the relationship between the parties.

SLAs have parameters and metrics that elaborate the service standards between at least the parties in the network and push them to interact in a proper manner. Interaction using the SLA modeling will include some events that identify the actions occurring on it such as service discovery, negotiation, scheduling, monitoring. SLAs can be a cause of attracting the agents by establishing the credibility of the tasks offered [13].

Let N = {1, 2, …, n} be a finite of agents who interact frequently with their neighbors in the organization. Each agent is monitoring situations in a different state and maintains a local database that need to stay valid by avoiding contradictions. Since agents can only monitor their own state, they must rely on information from their peers in others states. As they receive information, they must decide whether to trust the information and enter it into their local data base or to reject it by distrusting the information sender. The database will keep updating to help the agent to be more accurate in future when some agents or same agents want to communicate with him or her again.

The agents inside the organization are geographically dispersed, and they are able to interact with each other dynamically by depending on the information received. The Distributed databases will be distributed through the network and these database used will work independently form SLA. They run and attach with every agent locally. Thus, they can make a quick access to data over a huge number of agents and support the agent for keeping some information for others in depository’s boxes added [3]. Data communication is a mean for the agents to be connected thorough the network. Database can store temporarily data received and work as a temporary database that update data automatically.

Once the agent is done using a temporary database, they must stay empty to be valid and able to get the information from other agents who attempts to connect, see Fig 1. As soon as an agent connects, a copy of this connection is transferred automatically to the organizer. Maintaining the local database to stay free is an efficient way to avoid any contradictions between the agents and complex data and it will provide a high performance for the multi-agent systems.

This method enables the connections to be rolled back and the procedures are updated automatically. Therefore, there is nothing can be stored in the main temporary database permanently except the depository’s boxes that saves transparent data of connections. The used databases update themselves through the interactions and run to pass the data to other agents. If the agents connect, the whole data will be sent to the agent who gets connected. This process will be continued till the data reaches the organizer. If the agent receives the information, this agent can decide whether moving the data to peers or setting himself or herself

SLAs will be sectioned with each group of agents who interacts in different locations of SNO. The interaction among the agents who have a full similarity of attribute will be implicitly using SLA. SLA shows the relationship and level of correction between the agents depending on the contract of similarity they sign it before. Thus, this will sign implicit agreement that ties the agents who have a similarity of attribute. This similarity will help the agent to behave dynamically over the time and may be employed to build implicit concoctions. Therefore, SLA controls the implicit connections and relationships between the agents in the same case of similarity attribute.

By using the Collaborative Filtering (CF) technique, we can know the agents who will interact implicitly and explicitly. Agents from different locations seek to show their capabilities and preferences to get the tasks offered. In this model, we will illustrate that the agents who belong to one cluster after negotiating will send the agreed payoffs or final results of their negotiation. To compute the similarity between the two groups of agents (X, Y) for their attribute in the SNO, we will present the idea of (CF) of (Memory-Based), which filter data using techniques involving collaboration among multiple agents and the past agent behavior can be examined like (the previous transactions or product ratings), in order to create a new connection between these groups of agents. This method provides an automatic prediction for the interests of the agent by gathering the preference from many agents, thus matching agents with similar interests [11].

share a full attribute and can interact implicitly in SNO. We can expect that they have a collection of attributes and shared values and they will interact relaying on their attribute similarities, see Fig 2. Computing the similarity between the agents is based on using Pearson Correlation that measures the correlation between two variables X and Y and then to apply a similar computation technique to determine the similarity x y, as showing in Equation [1].

Usually inside the organization, many agents share the values and have the same interests with other agents, so they have commonalties in their attributes. They are closely related characteristics to some agents in different clusters of SNO. This relationship will be characterized by a wide range of attribute, thus they will interact explicitly. The agents who interact explicitly will be controlled by the organizer rather than SLA which is responsible for the implicit relations only. In the game matrix above, the agents (1, 4) can interact explicitly because they are closely related characteristics. The ratio between two groups of agents 1 and 4 is [2:4], so they share some attribute and can interact explicitly in SNO.

An affinity score is presented to compute the degree of similarity between the agents that interact explicitly [10]. The example above shows that there exist overlaps between two groups who interact (the overlap between the two groups of agents 1-3 is 1. This overlap will be computed using Equations [3].

Social interactions play an important role that supports social capital to grow. Social networks such as SNO are based on interdependence and communications between the agents. SNO creates an easy space for agents to communicate with others based on certain factors such as the similarity of interests and cultures. Thus, these factors lead to configured SNO network that estimated quantitatively on a number of its agents and morally on a size of mutual trust and cooperation amongst the agents.

The SNO organization will be founded from implicit and explicit connections between the agents that may be characterized by any number of attributes in different locations. As social capital is based on social similarity which indicates to the implicit interactions and the individuals sometime create explicit connections when they have some similarities with others in different clusters, so the agent can interact inside and outside the group. This way of interaction can cause to spread the ideas to other agents, thereby increasing the social consensus to achieve the common interest and by using SLAs seek to set an agreement between the various actors and stakeholders to work together.

In conclusion, this paper has focused on the development of a different type of interactions among the agents inside a spontaneous networked organization (SNO). It helps to overcome the problem of interaction through applying a broad range of service level agreements (SLAs). Applying collaborative filtering (CF) allowed further examinations on different types of data to show how agents interact implicitly or explicitly and how these interactions affect the social capital. This method obtained a high performance of interaction and can help to control the spontaneous flow of behaviors and knowledge to be more secure when agents communicate rationally since trust is recorded in such a distributed organization. Future work will examine more about the security of these interactions and their effect on a wide range of organizations.

