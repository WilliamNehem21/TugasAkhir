Abstract Crowdsourcing has been widely accepted across a broad range of application areas. In crowdsourcing environments, the possibility of performing human computation is characterized with risks due to the openness of their web-based platforms where each crowd worker joins and participates in the pro- cess at any time, causing serious effect on the quality of its computation. In this paper, a combination of Trust-Based Access Control (TBAC) strategy and fuzzy-expert systems was used to enhance the quality of human computation in crowdsourcing environment. A TBAC-fuzzy algorithm was developed and imple- mented using MATLAB 7.6.0 to compute trust value (Tvalue), priority value as evaluated by fuzzy inference system (FIS) and finally generate access decision to each crowd-worker. In conclusion, the use of TBAC is feasible in improving quality of human computation in crowdsourcing environments.

Crowdsourcing is sometimes referred to as human computation, a methodology that lets humans’ process tasks which are difficult to implement in software. These tasks may include transcription of documents, reviewing of articles or eval- uating the quality of ranking algorithms [20]. Crowdsourcing has recently shown enormous potential in solving highly decentralized target localization tasks [13]. In a crowdsourcing system, tasks are distributed to a population of anonymous Internet users for completion. Man-Ching et al. [12] and John et al. [14] defined crowdsourcing as the use of large distributed groups of people to complete micro tasks or to generate information. Because traditional search relevance evaluation requiring expert assessment is a lengthy process [2,6,8,14], crowdsourcing has gained traction as an alternative solution for these types of high volume tasks [1,2,8].

A crowdsourcing site has two groups of users: requesters and workers. The crowdsourcing site exhibits a list of available tasks, associating with reward and time period, that are presented by requesters; and during the period, workers com- pete to provide the best submission [12]. Meanwhile, a worker selects a task from the task list and completes the task because the worker wants to earn the asso- ciated reward. At the end of the period, a subset of submissions is selected, and the corresponding workers are granted the reward by the requesters [12].

Crowdsourcing is now being pushed by large IT companies such as Amazon, Google, or Yahoo!. They have recognized the opportunities behind such mass col- laboration systems [14] for both improving their own services as business case. In particular, Amazon focuses on a task-based crowdsourcing platform called Amazon Mechanical Turk (AMT) [20]. Requesters are invited to issue human-in- telligence tasks (HITs) requiring a certain qualification to the AMT. These crowd- sourcers post mostly simple tasks that, however, require human capabilities. In particular, 50% of tasks are processed at a cost of $0.10 and less, most of the tasks are usually also offered in chunks to multiple AMT workers [12,20].

From literature, Quality Assurance (QA) is seen as a major determinant of e-satisfaction in most business-to-consumer (B2C) and crowdsourcing environ- ments inclusive. QA is further designed into a theoretical framework or a model. These models are Rayport and Jaworski 7Cs Framework [19], DeLone and McLean Electronic Commerce Model [7], The ISO 9126 Quality Model (ISO/ IEC 9126, 2011), SERVQUAL [17], WebQual 4.0 Model [3], Palmer’s Model

QA factors of online transactions as aggregated from QA models is usually expressed by performance characteristics such as response time, throughput, pre- dictability, availability, scalability, stability, usability, reliability, efficiency, func- tionality, speed of download (bit rate), ease of finding information, timeliness, confidentiality and transaction integrity. In this case, we looked into confidential- ity and transaction integrity by focusing on Trust-Based Access Control (TBAC). Trust exists in our daily life and thus can be used as a mechanism to make access decisions in networks [27]. Trust models have also been proposed to control anonymity and uncertainty [9,10]. Several novel access control models based on trust have been proposed in recent years. TrustBAC extends the conventional Role Based Access Control (RBAC) with the notion of trust level [25] in which users are assigned to trust levels instead of the roles based on user identities, behavior history, recommendation, etc. The role that is assigned to a user changes

Trust management systems have been introduced in order to create a coherent framework to deal with trust [11]. Since the importance of building trust models has become vital for the development of some nowadays computer systems the way this trust is derived, that is, the metrics also becomes crucial. Metrics become very important for the deployment of trust management systems as the way of quantifying trust [11]. The simplest way to define a trust metric is by using a dis- crete model where an entity can be either ‘‘trusted’’ or ‘‘not trusted’’. This can also be expressed by using numerical values such as 1 for trusted and 0 for not trusted [11].

However, trust management models cannot address security issues at fullest [18]. There is also need of explicit trust model which address trust access control for crowdsourcing environment. Access control mechanism based on trust cal- culations using fuzzy approach is presented in [24] where access feedback is used for access control.

Let consider an Internet encyclopedia as a crowd-sourcing environment that allows everyone that has access to the Internet to make contributions or edit arti- cles online. In such environment, workers are classified based on their compe- tences and experiences. The crowd workers can freely access the encyclopedia network but are allowed to make contributions or edit some certain articles based on its trust value acquired during the interaction with the host network. The trust value of each crowd worker is greatly affected by the number of activities per- formed. The priority level of workers is determined by the rules generated.

An access control policy considers the workers’ trust degree when deciding whether to grant a worker access to perform tasks. The trust value of a worker is determined as the worker visits the host. A trust metric equation from [15] was adapted so as to compute the trust values of every worker from the crowd.

The trust value of a worker is evaluated based on event performed by the worker. Such an event carries a value and it’s also weighted. An event can be nega- tive if the worker tries to act maliciously; such could be a failure to login or a worker performing brute force attack on the host. The positive value event which varies are the normal event that a worker is expected to carry out on a host.

An anonymous worker is classified as unskilled worker with initial value of 0.0 since the worker is new to the environment and the competence is yet to be ascer- tained while other workers (semiskilled, skilled, highly skilled) are known in the environment. Anonymous worker can eventually gain recognition to become known in the environment. An existing worker which is known to the environment has a level of skills and can be classified either as skilled worker, semiskilled and highly skilled depending on the worker’s performance history.

Priority level denoted as ‘‘priority_Level’’ with four fuzzy sets {high, average, low, verylow}. The ‘‘Priority_Level’’ membership functions are also shown in Fig. 5 where the ‘‘VeryLow’’, ‘‘low’’, ‘‘average’’ and ‘‘High’’ sets are in trape- zoidal form. The linguistic input variable TrustDegree and CrowdWorker are defined in the Table 2, while Table 3 shows the linguistic output variable Priority_Level. The crisp range value was selected based on the degree of membership in the interval [0, 1], where 0 and 1 confirms no membership and full membership respectively.

The proposed framework comprises of the Trust-Based Access Control and fuzzy expert system. The trust based access control (TBAC) has a model that computes the trust value of workers. The trust metric operates at the preprocessing while the access control module operates at postprocessing module. Supplementary Fig. 2 shows the TBAC and Fuzzy expert system components incorporate into a single framework.

the user module classifies workers into different classes while the trust metric module computes the trust value of the worker using Eq. (1). The preprocessing module provides a crisp value which serves as the input value to the fuzzy- expert system. These crisp values are forwarded to the fuzzification module and decode to a fuzzy value.

Postprocessing module: In this module, access right is defined on the workers based on the output result of the fuzzy expert system. The output of the system shows the priority level of the worker. The environment filters the worker based on the output and decides access right to workers that falls within a priority level and thereby improves the quality of the computation. A CrowdTBAC Fuzzy algorithm is described in (Algorithm available in supplementary material).

Our fuzzy expert system trust model is evaluated using a MATLAB fuzzy logic toolbox version 7.0.6. The fuzzy interference system of our TBAC-fuzzy expert system has two inputs and an output, a mamdani-type inference and a centroid method were used for defuzzification. The implementation process was carried out as shown in Figs. 4–8. Firstly, we defined the number of input and the output on fuzzy interference system editor and define the membership functions of the lin- guistic variable.

TBAC-fuzzy expert system is simulated in our crowd-sourcing environment sce- nario. The simulation parameters are shown in Table 5 with the range of values based on assumptions. In this process, 10 workers of different classes (5 unskilled, 2 semiskilled, 2 skilled and 1 highly skilled worker) are considered to make con- tribution in encyclopedia environment. Within the range of values for event and weight defined below, three distinct values are generated using a java program- ming language. The values generated are further used to compute the workers’ trust values on the assumption that same events were performed in Table 4.

The initial values (T0) of the workers are considered in the computation to determine their actual trust value. In this case, we defined T0 to be 0.00, 0.01, 0.025, and 0.05 for a new worker (unskilled), semiskilled, skilled and highly skilled workers respectively. The last three workers are the existing workers and are clas- sified based on their past achievements and experiences.

The designed fuzzy rules are simulated using the trust values of crowd-workers with a fuzzy tool box in MATLAB. The simulation graph above revealed that a task with a priority value of 0.37 can only be performed by workers that gain such a value or more. The threshold value of 0.37 is been defined by the crowd-sourcer

for basic trust level. The threshold/user-defined (Dval = 0.37) value represented by the red line as shown in Fig. 9 gives the crowd-source an insight into the worker that is allowed to performed a task. Any worker below the threshold level will be denied access on the task.

generated using the two inputs (classes of worker and trust value) to determine the output (priority value). The graph also clearly shows that not all two semiskilled workers can be given access to a task of 0.45 priority value that could be defined by the crowd-sourcer.

The defined value chosen by the environment signifies the sensitive level of the activities to be performed. A lower value say 0.2 which could signifies an activities which required worker with little knowledge or experience and this will accept more workers which means 2 workers will be rejected and denied access to make contributions. Whenever a worker visits the host, trust computations were made based on some events performed on the system. The events on the system have a value assigned and also they are weighted.

In the design architecture, trust metric module compute workers trust and transform into a crisp value which is then decoded at the fuzzification module. The surface view in Fig. 7 shows the dependency of the output on the two inputs. Postprocessing module of the fuzzy expert system grants access to a worker.

or more experience while the other workers have little or no experience. In this case a task with a priority value 0.37 can be worked on by 70% of the workers as shown in the simulation chart in Fig. 9. This analysis with the simulation chart helps to enhance the quality assurance of the crowdsourcing activities.

This paper addressed the issues of trust in crowd-sourcing alongside its incentive and how the quality of response from the crowd-workers would be improved. The paper identified answer ranking as a problem in crowd-sourcing leading to cheat- ing by workers. To look for more efficient and reliable way to solve this problem, a fuzzy expert system and trust based access control were employed as a single framework to enforce access control. A trust based access control fuzzy algorithm was used to compute and assigned trust value to workers. The trust value assigned to crowd-worker serves as one of the inputs to the fuzzy system and access is granted to workers whose priority value is above threshold level based on the fuzzy output. In this case, the crowdsourcing could be assured that only workers with little or more experience could perform certain tasks. This however helps to enhance the quality of response from the crowd. Experiment was conducted on Trust-Based Access Control fuzzy algorithm using systematic generated values on MATLAB. The results indicated that high quality response and service could be obtained from CrowdWorkers.

V. George, M. Ian, C. Maria, A probabilistic model for trust and reputation, in: van der Hoek, Kaminka, Lespe´rance, Luck and Sen (Eds.), Proc. of 9th Int. Conf. on Au-tonomous Agents and Multiagent Systems (AAMAS 2010), May 10–14, Toronto, Canada, 2010.

V. Matteo, R. Alex, J. Nicholas, Trust-based fusion of untrustworthy information in crowdsourcing applications, in: Ito, Jonker, Gini, Shehory (Eds.), Proceedings of the 12th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2013), May 6–10, Saint Paul, Minnesota, USA, 2013, pp. 829–836.

Parikshit N. Mahalle, Pravin A. Thakre, Neeli Rashmi Prasad, Ramjee Prasad, A fuzzy approach to trust based control in internet of things, IEEE 3rd International Conference on Wireless Communications, Vehicular Technology, Information Theory and Aerospace & Electronics Systems Technology (Wireless ViTAE – 2013), Atlanta City, USA: IEEE, 2013.

