Abstract Most of the existing studies in temporal data mining consider only lifespan of items to find general temporal association rules. However, an infrequent item for the entire time may be fre- quent within part of the time. We thus organize time into granules and consider temporal data min- ing for different levels of granules. Besides, an item may not be ready at the beginning of a store. In this paper, we use the first transaction including an item as the start point for the item. Before the start point, the item may not be brought. A three-phase mining framework with consideration of the item lifespan definition is designed. At last, experiments were made to demonstrate the perfor- mance of the proposed framework.

Data mining can help derive useful knowledge from databases. Among its technology, association-rule mining [1,3,28] considers frequency relationship among items and is commonly applied to many applications. A transaction usually includes the items bought and the time of its occurrence. Besides, the periods for items to be exhibited are also important. Some researches about temporal data mining were thus presented [27]. For example, the time period for an item may be the entire time interval of a database [5], the duration from the first occurring time of the item to the end of a database [20], or the on-shelf time periods of the item [8]. However, an infrequent item for the entire time interval may be frequent within part of the time.

In this paper, we thus organize time into granules and con- sider temporal data mining for different levels of granules. We use the first transaction including an item as the start point for the item. We propose a three-phase mining framework with consideration of the above item lifespan definition to mine temporal association rules with time granules from a temporal database. According to the definition of item lifespan, in the first phase, each elementary time interval is processed. The temporal frequent itemsets within the above intervals are first found, and then the itemsets are identified as candidate tempo- ral frequent ones in all the time granules of the upper level of the hierarchy. These candidates are then judged for being tem- poral or not at each level of granules. Additional database scans may be needed to find the actual supports of the candi- dates. In the third phase, the possible candidate association rules are derived from the temporal frequent itemsets at each level. Their confidence values are then calculated and com- pared with the minimum confidence value to get the final tem- poral association rules.

The organization of the paper is stated below. Related works are given in Section 2. The problem to be solved is described in Section 3. The proposed algorithm with consider- ation of the first transaction appearance period is presented in Section 4. The performance of the proposed approach is shown in Section 5. Conclusions and future works are finally given in Section 6.

Temporal data mining is popular in recent years. It analyzes temporal data to get patterns or regularities. There are many techniques included in temporal data mining. Sequential asso- ciation mining [2], cyclic association mining [22], stock trading rule mining [11], patent mining [12], clinical mining [25], image time series mining [15], software adoption and penetration mining [23], temporal utility mining [9,29], fuzzy temporal mining [6,16,17], and calendar association mining [21] all belong to it. There are also a variety of applications for tempo- ral data mining. For example, Patnaik et al. used temporal data mining to efficiently manage the cooling system in data centers [24], and Rashid et al. adopted it for finding the corre- lation among sensor data [26].

Chang et al. considered the temporal mining problem of products exhibited in a store [5]. They proposed the concept of common exhibition to find patterns. In a common exhibi- tion period, all the items in an itemset need to be on the shelf at the same time. Lee et al. then used it to discover general tem- poral association rules for publication databases [20]. Ale and Rossi then considered the transaction periods of products [4], instead of their exhibition periods, for finding temporal associ- ation rules. Besides, different products may have different on- shelf properties. For example, a popular product may be sold out quickly, and then be supplied and on shelf soon. It is thus intermittently on-shelf and off-shelf in the entire time [18].

As to hierarchical temporal mining, Li et al. proposed an approach to discover calendar-based temporal association rules [21]. That approach could mine rules according to differ- ent calendar constraints including years, months and days. Chen et al. proposed a hierarchical strategy for video event detection from video databases [7]. They divided the frequent actions into two types, namely pre-actions and post-actions by pre- and post-temporal windows. Fang and Wu used

In this paper, we consider the phenomenon that an itemset may not be frequent in the entire time interval, but may be fre- quent in a partial time interval. We thus organize the time into different levels of granules and find the temporal association rules at each level. This paper is extended from our previous work [19] with different consideration of effective time inter- vals. Here we use the first occurring transaction of an item as the start point for the item. Before the start point, the item may not be brought since it is not ready. This definition is of the benefit that it is not necessary to require the exact on- shelf time of each item in advance.

In addition, there is a pre-defined hierarchy with time gran- ules in three levels, in which there are four basic time periods, denoted as p1 to p4, and the time granules are in three levels in the hierarchy, as shown in Fig. 1. Based on Fig. 1 and Table 1,

Table 1 is a simple example showing that, the fifth transac- tion {A, C, D} contains three items, A, C, and D, and the time stamp of the transaction is p2. In Table 1, the first time period is represented as p1, and P includes four time periods, p1, p2, p3, and p4. In this example, the itemset {AB} containing two items is called a 2-itemset. Since the first transaction including the 1- itemset {B} is the sixth transaction in TDB, and the first time period of the transaction and the last time period of the data- base are p2 and p4, respectively, the maximal time period MTP

Definition 7. A hierarchy of time granules, HTG, is composed of a set of basic time periods. In addition, a time granule pgl.g represents the g-th time granule in the l-th level of the hierar- chy, and it consists of the basic time periods contained by the time granule pgl.g.

The proposed approach considers the first occurring transac- tion period information of products and is processed in three phases. It also adopts a predicting strategy which can reduce the number of data scan by the upper-bound support. Basi- cally, the proposed method is a level-wise algorithm which mines the frequent itemsets level by level and period by period. The main contribution of the proposed method is to reduce the number of data scanning, which can be approved by the exper- imental results later. The mining procedures of the proposed algorithm are stated as follows.

After STEP 11, all the rules in the set of HTAR have been found from the temporal database. The Finding-Individual-TFI procedure used in STEP 5 is described below. Here, the tradi- tional Apriori algorithm is adopted to derive frequent itemsets from the transactions within a time period.

In this section, the experimental results for showing the prun- ing effects and efficiency of the proposed TPPF approach are presented. As a comparison, the basic three-phase algorithm without consideration of the predicting strategy (named TP- HTAR, Three-Phase algorithm for Hierarchical Temporal Association Rules) is derived from the proposed TPPF approach. The experimental environment included a personal computer with 3.0 GHz CPU and 2 GB memory, running J2SDK 1.6.0. The two methods were performed on the same machine using the same program language, data and parame- ter settings. The execution time included data input, generation of frequent itemsets and result output.

Two datasets including synthetic data and real data were used to conduct the comprehensive empirical study. In terms of the synthetic data, it was generated by the public IBM data gener- ator [14]. The temporal database was generated by the model used in [18]. The detailed information of the synthetic data is shown in Table 2.

From the results in Fig. 2, it can be observed that TPPF needed less database scans than TP-HTAR. It was because TP-HTAR purely used the level-wise technique to handle the problem of hierarchical temporal issues. In addition, if all the frequent itemsets in each basic period were identified as possible hierarchical temporal itemsets, then the transactions in the time periods, in which the relative supports of the pos- sible itemsets were unknown, had to be scanned to find the actual relative supports for itemsets. Thus, the TP-HTAR per- formed worse than the proposed TPPF in terms of avoiding unnecessary data scans.

The experiments were then conducted to evaluate the effi- ciency of the two algorithms, TPPF and TP-HTAR, for the hierarchical temporal mining issue, and Fig. 3 shows the results of the two algorithms working on the T10I4N4KD100KP16 dataset with 16 basic periods and 4 levels for the synthetic datasets with the thresholds varying from 0.3% to 0.4%.

In general, the values of the two parameters min_rsup and min_rconf affect the performance of the proposed approach. When min_rsup is set lower, more candidate itemsets are gen- erated and thus the needed computational time becomes more as well. Similarly, when min_rconf is set lower, more rules are generated which needs more computational time. These char- acteristics can be easily observed from Fig. 4 as well. Besides, the minimum support and confidence values are usually deter- mined according to the data characteristics and user require- ment. There are some studies focusing on this issue, but it is beyond our discussion here. Some scholars [13,30,31] adopt the to p–k mining approach to find the results, instead of set- ting the two thresholds.

In addition to synthetic data, a real dataset Foodmart was tested in the experiments. The transactions were divided into 10 time periods and the time hierarchy was organized in three levels, with 1, 5 and 10 time periods, respectively. Fig. 5 shows the differences in the execution time needed by the two algo- rithms for different thresholds, varying from 0.6% to 0.7%. The experimental results show that the algorithm TPPF per- formed much better than TP-HTAR since the number of data scans of TPPF was much fewer than those of TP-HTAR. The results are an echo of Figs. 2 and 3.

0.68%, 0.7%}. Fig. 6 shows the experimental comparisons for rule generation, which delivers some discovery. First, the execution time for each set is very close to each other even using different minimum confidence values. The reason is the same as above. That is, the confidence checking time depends on the numbers of frequent itemsets generated, but not on the confidence thresholds. Second, the performance for smaller confidence value is worse than that for larger confidence val- ues. The reason is that the former will get more rules and thus need more time to generate them out.

In this paper, we introduce a new concept of temporal associ- ation rule mining with a hierarchy of time granules to find hier- archical temporal association rules in temporal databases, and we also present the effective approach (abbreviated as TPPF) to find such rules. In particular, an effective strategy is designed to predict the upper-bound of support values for itemsets. The strategy can be used to remove unpromising itemsets at an early stage in the process, and the proposed TPPF can effectively reduce the computational cost of scan- ning a temporal database. Experiments were also made, with results showing the proposed TPPF outperformed the other one TP-HTAR in reducing database scan and computational time.

The future research directions of this work are as follows. First, we will attempt to investigate the incremental problem of hierarchical temporal association rule mining. That is, based on this work, we will design a method to mine the new result without performing the whole mining procedure at database modification. Second, the optimal minimum support and con- fidence will be approximated by machine learning techniques. Third, actually, this work is the beginning of hierarchical tem- poral association rule mining. In the future, more efficient min- ing algorithms such as FP-growth will be adopted as the solutions to accelerate the mining process and more mining consideration such as utility mining will be studied to extend its applications.

M. Chen, S.C. Chen, M.L. Shyu, Hierarchical temporal association mining for video event detection in video databases, in: The Second IEEE International Workshop on Multimedia Databases and Data Management in The IEEE 23rd International Conference on Data Engineering, 2007, pp. 137–145.

