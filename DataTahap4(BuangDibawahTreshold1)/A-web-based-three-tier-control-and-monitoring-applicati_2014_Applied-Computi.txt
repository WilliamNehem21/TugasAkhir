and manage data from all remote installations. Hierarchical data acquisition methodology and performance macro-observation are according to the IEC 61724 standard. We have successfully used our control and monitoring applica- tion for integrated facility management of photovoltaic plant installations; nev- ertheless it can be easily migrated to other renewable energy generation installations and remote automation applications in general.

The rest of the paper is organized as follows. The automation system architec- ture is presented in Section 2. The main control and automation services provided are described in Section 3. A description of the solar park installation, the moni- tored signals and implemented alarms follow in Section 4. Section 5 illustrates the implemented services via the application screenshots, while Section 6 presents the technology used to build the proposed application and the database schema.

The middle level is the Data Center which communicates through a public and/ or private network with the bottom level. It is also known as automation level. Its role is to monitor and control all installations in a centralized manner. The main part of the Data Center is the service back end, which undertakes to collect, store and manage data from all remote installations. More specifically, the service back end has the following responsibilities:

The back-end is scalable to accommodate any number of measurement points merely through the addition of new servers and storage subsystems. The service back-end can also provide external interfaces to other software entities, depending on the customer needs. The service back-end has been designed to provide inter- operation with a variety of third-party controllers and PLCs. For this reason, an independent module, denoted as the Communications Adapter Module (CAM) in the ensuing, has been implemented, which undertakes the task of acquiring data from the remote installation and feeding them to the service back-end as well as conveying data from the service back-end to the remote site. Multiple CAMs are supported. The service back-end also incorporates an Appli- cation Logic Module (the ALM), which calculates the derived parameters. This module can be extended at will with new calculation functions. Other service back-end modules include the Notification Server Module (NSM), which under- takes the notification of the PV management solution users via SMS or e-mail as well as the Reporting Server Module (RSM), which handles the generation and delivery of reports. All necessary data are stored in a database.

The top level is the management level. At this level, information from the entire system is accessible. The PV management solution includes a front-end, capable of operation with a standard Web browser (Internet explorer, Mozilla Firefox or Google Chrome). A unified interface is presented to the operator and end-users

Derived parameters: Derived parameters are calculated using a specific mathe- matic formula which operates on a specific set of values or vectors of values of primary (and/or other derived) parameters. The PV management solution provides the infrastructure that is necessary to carry out all derived parameter calculations in the service back-end so as to further minimize the necessary bandwidth and storage at the remote site. In the case that derived parameters are calculated in the field, they can be considered as primary parameters within the service back-end. Daily, monthly and yearly values are supported for each derived parameter separately.

The PV management solution records and presents to the user the current status of entities that are either internal or external to the solution. The status is consid- ered to be a powerful tool in terms of the user getting an immediate grasp on whether any entity of the installation being monitored or even the PV management solution itself operate properly or not. Status information actually encodes the severity of the condition of each entity independently, which is a number on a scale from 0 (everything normal) to 100 (complete disaster). The status update mecha- nism shall become apparent in the ensuing.

has taken appropriate actions. This acknowledgement is a simple form of book- keeping of user actions for further investigation. Each state-change event is stored and presented to the user per state set with a list of data, including the entity gen- erating the event, the state the event led to in a descriptive form, the event date/ time in the timezone of the installation, the date/time of the reception of the event in the timezone of the installation, and the event acknowledgment status and acknowledgment text.

Since all entities are organized in a hierarchical structure, the current status of a certain entity cannot depend solely on the state (or states) it is into, but the sta- tuses of all underlying entities within the hierarchy are used as well. This is a basic concept within the PV management solution, since it enables the efficient notifica- tion of the user if something calls for his/her attention. Moreover, this hierarchical status propagation, as it will be denoted in the ensuing, can help the user realize the effect that an entity being in a certain state of a certain state set has on the operation of the installation as a whole.

A very important function is the automatic generation of reports. This service uses the Web and delivers reports to e-mails or mobile phones of users who have subscribed to the service. These reports include information on the operation, maintenance and financial situation of the entire system or specific facilities. The timing and scope are determined by the administrator and the choices of the user.

The operation of solar parks/PV plants is based on the photovoltaic effect. The photovoltaic effect is the basic physical process in which a photovoltaic cell con- verts sunlight into electricity. A solar park consists of solar panels. Each panel is a set of solar cells and numerous other protective and functional coatings installed onto an aluminum frame as a means of support. They are connected in series until we get the desired effect on current output and in parallel until they reach the desired voltage. As a result, solar panel connection is very important during installation.

Every control and monitoring application controls a number of signals using the appropriate sensing elements. Each transducer gives some type of digital (binary or discrete) or analog (continuous) signal, or more complex signals in the form of a protocol, e.g. serial. The type of signal depends on the observed physical size and the transducer used. Controllers inside an automation system can control and monitor digital, analog and serial data from sensors, actuators and devices (Nof, 2009). Our implementation for controlling and monitoring the power of a solar park uses the following signals:

Alarms are binary signals which depend on one or more signals and activated by the changes of their values and situation. In the case of binary digital signals the alarm is activated by the state change of the signal. In case of analog signals, activation of the alarm takes place when the signal value exceeds or goes under a threshold. Our solar park control and monitoring application implements the following alarms:

Power loss alarm: This alarm is activated by a combination of factors. Some of them are long periods of shadow, battery performance and temperature. As mentioned before (see temperature signal), the increase in temperature results in a lower overall energy output.

Battery alarm: The amount of kW per hour that a solar panel can produce with battery life depends on temperature and on sun exposure. The manufacturer or user sets minimum/maximum thresholds and when the temperature value is out of this range for a long period then a battery alarm is created. The performance of a battery is reduced below a threshold and battery stops charging over a tem- perature limit.

The user defines in his/her profile page which type of communication channel will be used per type of notification and alarm. Three channels are provided by the system: (i) SMS to receive notifications in a mobile phone. (ii) Email, where the user receives notifications in the email address filled in the registration form.

The proposed PV management system has been implemented in Visual Studio 2010 with Framework .NET 4. The programming language used is the object- oriented C# language v4.0. The application consists of three projects. The first project is a web site where all .aspx pages are implemented. The aspx pages

The last project is a WCF Service Library project, which implements the Web Service of the PV management application. WCF is an API in the .NET Frame- work for building connected, service-oriented applications. Our PV management application has implemented a Mail Sender Web Service, which sends notification emails when an alarm is created. For this purpose we used the System.Net.Mail library of the .NET framework. This library contains classes in order to send email to a designated SMTP server for delivery. Notification mails include reports as attachments.

The Graphical representations of our application were implemented using Charting Controls which are embedded in Framework 4.0. With these tools we can specify the type of graph, the format of the source of data and the filter of data. The database on the service back-end was implemented in Microsoft SQL

production and environmental benefits in real-time. We have tested our system with real data collected and monitored during a period of one year from a 2MWp PV plant installation. The monitored panel data included several signals: active, reactive and apparent power, air and module temperature, battery, humid- ity and wind speed.

