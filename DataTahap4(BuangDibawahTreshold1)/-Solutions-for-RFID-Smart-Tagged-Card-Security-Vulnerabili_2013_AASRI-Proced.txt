The use of Radio Frequency Identification (RFID) technology is seeing increasing use in all areas of industry. Companies and government agencies have implemented RFID solutions to make their inventory control systems more efficient. In the healthcare industry the technology is being used to saves patient lives by preventing medical misidentification, and mistreatment, to monitor medical equipment assets, and to track the administration of medication. In spite of all the benefits that RFID can provide to industry, there are glaring security concerns that come with its use. The paper will identify the security risks inherent in RFID technology and propose a framework to make smart tagged cards more secure using active tags and prevent the ability to clone tags or sniff data between the tag and reader. The proposed framework is specific to the tag and reader communication layer.

RFID utilizes wireless communication technology to provide the ability to distinctively identify objects or people using devices called tags. The technology is made up of three essential parts: a tag, a reader and a host system. The RFID tag and reader communicate on a specified radio frequency. When an object that has an

RFID tag goes in the communication zone of the reader, the reader tells the tag to send the data that is stored on it. After the reader collects the data from the tag, it sends the data to the RFID controller by a network connection (Ethernet, Mobile IP, etc.). The controller will take the information and use it depending on the type of data it has received. The data can be stored in a database or moved as an object in inventory.

RFID technology has been one of the hottest topics because it makes tracking and tracing processes automatic. It provides much higher data integrity and accuracy, real-time reaction capabilities, and end-to-end visibility compared to the barcode technology. It has been used in various areas, such as retail inventory control, supply chain management, counterfeit prevention, building security, library systems, speed payment fobs, toll collection, vehicle identification, airline baggage, locating missing pets, study wildlife, and tracking livestock. Currently, there is an increasing interest in using the RFID technology to save lives, to prevent errors, and to reduce costs. Medical organizations have adopted RFID tags to track and manage medical assets to improve their utilization and to reduce the need for future expenditures on duplicating equipment. To improve patient safety and medical service, some are using RFID for tracking and tracing by integrating with medical monitoring equipment for emergency alerts and for ensuring the removal of tagged items of surgical equipment during an operation.

Using RFID tags for tracking items carried by people could poses significant security and privacy risk to both organizations and individuals. A tag naturally responds to a reader without the owner’s approval and without the owner even noticing it. When RFID are embedded into patients’ personal data and medical history, it is indispensable to secure the tags to prevent any leaking of privacy-sensitive information. This study examines the security issues impacting RFID the air interface between the tag and reader. Figure 1 shows a typical RFID system and the secured and unsecured interfaces that exist in such system. The system can be made of many readers and one controller or host workstation. A reader has the ability to communicate to multiple tags, with the tags being able to be attached to almost anything (from shelf products, a medical ID bracelet, or a pallet). The communication between the tag and the reader is the weakest point of security in an RFID system. This interface usually does not utilize any encryption, especially if passive tags are used. The network interface between the reader and host system or host network is covered by the IT security policies of the corporate network.

consumers’ knowledge (Grover & Berghel, 2011). Also, RFID tags in products can still transmit data after the products are purchased and can be read by any reader. All readers in appropriate frequency range are able to read the data from the tags. One of the common weak points in RFID technology is the link between the tag and reader. Usually there is no encryption for the messaging for that communication link. Solving this issue will require more hardware, which will affect the size and the cost.

There are several methods being used as countermeasures to the security threats presented against RFID technology. These methods can be categorized into two groups; non-cryptographic systems and cryptographic algorithms (Shih, Lin, & Lin, 2005). To diminish costs, non-cryptographic security countermeasures are deployed. One of the easiest ways to safeguard consumer privacy is tag-killing (Shih, Lin, & Lin, 2005). This method kills the functionality of the RFID tag once it is at the point of sale. The Kill command is built into the RFID tag and is executed once the RFID reader sends a code or PIN at the point of sale to make the tag unusable (Juels, Rivest, & Szydlo, 2003). Utilizing the tags read-writable memory is another popular non- cryptographic security approach, which uses a secret and temporary ID code in the RFID tag’s RAM (semi active tags) and the tag’s serial ID number that is put the ROM by the manufacturer. The result is when the tag is in ROM mode object there is unrestricted object identification to whichever user that needs information and in RAM mode there is a restriction of object identification to limited users (Inoue & Yasuura, 2003),.

Cryptographic algorithms are more costly to implement but can provide better security and privacy, including Hash Based Access Control, Minimalist, Re-encryption scheme and universal re-encryption, and Advanced Semi-Randomized Access Control (A-SRAC) (Shamaili, Yeun, & Zemerly, 2010). Hash Based Access Control uses hash-enabled tags that have a segment of memory set aside for a temporary metaID. This allows the tag to function in a locked or unlocked status (Shih, Lin, & Lin, 2005). A hash algorithm is utilized to generate an indiscriminate key for the metaID, the reader checks the local database for the corresponding hash key to be sent to the tag, the tag receives the hash key and checks it against the metaID and if it corresponds, the tag unlocks and allows full data retrieval to the readers (Shamaili, Yeun, & Zemerly, 2010). The Minimalist method uses a list of pseudonyms that is unique to the keys stored in the RFID tag (Juels A. , 2004). The reader is validated after it has been authenticated by the tag and the tag is validated by the reader by sending an authentication key. Once the validation process is complete, the RFID tag releases its data to

the reader. Then the reader renews the pseudonym and authentication keys in the tag. Re-encryption and universal re-encryption systems use public key cryptographic methods and require more memory and server resources on the back end due to the type of algorithms being employed (Shamaili, Yeun, & Zemerly, 2010). They can keep the tag identifier from being disclosed by utilizing the re-encryption system. The A-SRAC algorithm employs minimal calculations and keeping the messaging size small (Shamaili, Yeun, & Zemerly, 2010). The back end servers keep the old and new data from the tags, w The A-SRAC algorithm employs hash functionality, a random generator, and also utilizes metaID.

We are proposing using the A-SRAC protocol to provide security for RFID smart tagged cards, Personal Medical Card (PMC) with the feature to go to sleep when the smart tags do not need to transfer data and biometric verification to activate the card. This card will have different folders, such as personal identification information, medical records, dental records and any other related issues. The medical records would be issued by different medical providers. The A-SRAC protocol offers a random generator and hash functionality that is two layers of security. It also reduces the overhead computing resources of the server and reader (Lee & Verbauwhede, 2009). The Sleep command is a variation of the Kill command, where the reader transmits an access code to deactivate the tag (Grover & Berghel, 2011). The tag is turned on by physical activation through biometrics verification. The card owner’s fingerprint or another special physical personal character is embedded and digitally coded in the smart tag on the card and the card is activated when the card owner matches the fingerprint with the coded fingerprint on the server. Using A-SRAC, the sleep command, and biometrics will require a smart tag with sufficient memory and processing power. On the back end, there must be enough server resources for security and transactions to take place.

