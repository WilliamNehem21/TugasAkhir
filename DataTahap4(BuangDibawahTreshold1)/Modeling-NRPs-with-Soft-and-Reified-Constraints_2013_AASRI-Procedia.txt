A nurse rostering problem (NRP) deals with the shifts arrangements of nursing staff in the daily operation of a given health care center. This problem is known to be complex mainly due to its combinatorial nature that commonly requires exponential time to be solved. The literature presents a large list of works devoted to solve NRPs, however most of them are focused on the performance of results of well-known NRP instances, and just a few address real cases. In this paper we present a study of real nurse rostering, which particularly involves a very uncommon shift pattern due to proper country legal regulations. We introduce a new model including soft constraints that can be efficiently solved by employing reified constraints.

complexity of constraints. Hospital management policies, government regulations, minimum area allocation, different required nurse skills, as well as the fairness among nurses define the constraints of the problem. Different commercial and generic solutions have been proposed to tackle this problem. However they usually fail to satisfy the given requirements due to the wide variety of constraints from one scenario to another. Health centers therefore try to design tailored solutions in order to satisfy their specific policies and operation mechanisms.

Nurse rostering has been largely studied from the seventies. Classic and exact methods from the mathematical programming area were early used to tackle such a problem [4]. From the nineties, metaheuristics have taken an important place in the rostering research. Different solutions have been proposed, some examples use tabu search [2], simulated annealing [13], genetic algorithms [8], variable neighborhood search [7], electromagnetic metaheuristics [9]. In the context of complete search, constraint programming has been also strongly involved in nurse rostering, some examples can be seen in [1, 6, 11, 10, 14]. However, most work is focused on the efficient solving of well-known instances; and the work devoted to real cases of nurse rostering is quite limited.

This paper presents the study of a real case of nurse rostering in mid-size Chilean health care centers. We take as sample three clinics and four hospitals that collect the main features of those health centers (similar size, organization and amount of nurses). The problem is represented as a CSP (Constraint Satisfaction Problem) involving soft and hard constraints, and solved with CP (Constraint Programming) algorithms via the JaCoP solver. We believe that this work will be useful to increase the experience in real cases of nurse rostering as well as to future NRP researchers.

CP is a relatively modern software technology devoted to the efficient solving of problems subjected to constraints. The main features of this paradigm are inherited from different and relevant domains of computer science such as operational research, programming languages, and artificial intelligence. In CP, a problem is formally stated as a CSP, which is composed of a finite sequence of variables		; the associated set of domains, that is,		, and a set of constraints		. A solution to a CSP is an assignment	such that    	; and the set C is satisfied [3].

Mid-size health care centers in Chile employs a particular type of shift assignment called the ``fourth shift'' system. This system is quite uncommon do not fitting with the common 8 hours-shift system used in most hospital and research papers. The ``fourth shift'' system considers two shifts of 12 hours per day: D and N. D corresponds to a day shift (from 08:00 until 20:00); and N corresponds to a night shift (from 20:00 until 8:00 of the next day).

Now, in order to guarantee the required nurse allocation and off nurses per day, the occurrences global constraint is included.		guarantees that Val occurs Num times in the list named Vars. Let  denote the set of variables			. Then, the required constraints are:	,		, and		.

Soft constraints allows one to model preferences. For instance, in the studied health-care centers, there exist nurses holding a senior position able to suggest some preferences on the schedule. As common CP solvers do not provide primitives to directly handle soft constraints, we model the soft constraints by using reified constraints. A reified constraint reified(ck,Bk) assigns 1 (true) to the variable Bk if the constraint ck is satisfied; and it assigns 0 (false) otherwise. Then, the idea is to maximize the summation of Bk variables as follows, assuming   , where p is the number of preferences: maximize 

example, let us consider three preferences: c1: Nurse 5 prefers not to be off on day 1; c2: nurses 2 and 4 prefer to start with a day shift. c3: nurse 11 prefers to be off the third weekend of the cycle. Those constraints can be modeled as follows: c1: V5,1  0; c2: V2,1 = 1  V4,1 = 1; c3: V11,20 = 0  V11,21 = 0. Finally, we impose three reified constraints and the corresponding objective function in order to obtain a solution:

in an array called B. Then, the summation  is stored in the summation variable at line 4, which is then imposed in the store of constraints. At line 6, a variable cost with a domain [-INF, 0] is initialized. Then, at line 7, the value of summation is multiplied by -1and assigned to the cost variable. This is done since JaCoP only minimizes, thus, it is mandatory to invert the value of the summation variable. Finally, the labeling method triggers a branch and bound algorithm using as cost function the cost variable.

This paper addressed a NRP study for a set of chilean mid-size health care centers. We have presented a model that handles a very uncommon shift pattern and the nurse preferences via soft constraints. Soft constraints have been modeled by using reified constraints in conjunction with an objetive function in order to maximize the number of preferences satisfied. In this way, the model becomes an optimization problem that has been solved in the JaCoP solver. Rosters are automatically generated in about 20 minutes considering 40 nurses. The approach presented here can naturally be extended by considering bigger health care centers and more complex soft constraints. Using metaheuristics and autonomous search [5, 12] will be an interesting research direction to pursue as well.

