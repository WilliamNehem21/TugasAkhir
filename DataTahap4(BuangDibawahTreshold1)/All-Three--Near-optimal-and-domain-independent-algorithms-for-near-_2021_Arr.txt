schemes, as well as the integration of multiples data sources into a single data set. In general in data cleaning, near-duplicates may exist within a single source, whereas in data integration near-duplicates may exist within or across various data sources. However, both cases have the same common goal, detecting near-duplicates and the closeness of similarity among entities in a large collection accurately and efficiently. That is, to determine which records/objects in the same or different databases refer to the same underlying real-world entity.

insights and multi-dimensional information from business, financial (i.e., credit cards), and healthcare data. A comprehensive evaluation and an umbrella of techniques have been investigated. A common factor be- tween these algorithms is they cannot guarantee finding all near- duplicates and also cannot guarantee the accuracy. Vogal et al. [35] provided an annealing standard to evaluate near-duplicate detection results. In other words, the accuracy and completeness of duplicates should converge incrementally and interatively to a gold or silver stan- dard that defines which records represent the same real-world entities.

Our proposed set of algorithms do not presume a specific application domain, but in contrast they are tuned toward any domain-independent applications. Monge-Elkan's (ME) algorithm is relatively domain- independent with the purpose of integrating and matching web scienti- fic papers from multiple sources, typically an alphanumeric domain class. The parameters used in ME are mapped to such a class of applications with only a restricted possibility of tuning the threshold values to provide a better accuracy. In addition, the heuristic method of ME minimizes the number of pairwise record comparisons with potential record duplicates and integrates some key concepts such as the minimum edit-distance of SW.

The rest of the paper is organized as follows. Section 3 reviews and summarizes the effectiveness of Monge-Elkan and Smith-Waterman al- gorithms. Section 4 addresses the metric measures used in detecting near- duplicates. Section 5 explains how to calculate and choose between precision and recall using F-measure. The choice, adjustment, and threshold tuning are defined in this section.

ferences between near-duplicate records often arise because of many abbreviations or extra-string insertions and omissions, the affine-gap model produces a better similarity and more accurate results than most the other edit distance metrics. Moreover, the affine-gap algorithm per- forms well to detect similarities when records have minor syntactical differences, including typographical errors, abbreviations, and trunca- tions. In fact, the Monge-Elkan's algorithm approximates the solution to the optimal assignment problem in combinatorial optimization. This approximation is a reasonable trade-off between accuracy and complexity.

In the paper, we adopt a modified version of the Smith-Waterman similarity edit distance as inter-token similarity measure. Formally, let c(xi, yi) denote the cost of the edit distance that aligns ith character of string x to jth character of string y. Then the SW algorithm computes a cost matrix M that represents a maximum-cost string alignment by the following recurrence rule based on Monge-Elkan's algorithm [4].

representatives which retain the most relevant syntactic and semantics features of the records in the cluster where comparisons take place with cluster representatives, instead of all records, thus the search space can be reduced with the improvement of both true and declared subspaces. In other words, the reduction of false positives and in particular false neg- atives have an impact on the accuracy. A high recall means no false misses and indicates high accuracy of the duplicate detection results. A high reduction ratio achieves an even more effective search space reduction. A high precision means few false matches and has the opposite

cluster. However, (r1, r3) and (r2, r3) would be non-duplicates. Now, consider a new record r4 added to R3 with sim(r1, r4) = 0.75, sim(r2, r4) = 0.88, and sim(r3, r4) = 0.96. Then, (r2, r4) and (r1, r4) are classified as

Similarly 1^ 1r and 1^ 2 r are defined. If two records (i.e., representatives) are in the same cluster then they are considered to be near-duplicates or exactly similar, and if not they are dissimilar. For instance, let R3 = {r1;

in a same manner. Lines 4 and 5 in the function COMPARE (C^ 1;C^ 2) should be substituted by lines 4 and 5 in the function CHECK-SIMILARITY (C^ 1;C^ 2), respectively. In the same way, lines 11 and 12 should be substituted by lines 4 and 5. For the case of no similarity, lines 4 and 5 in the function

3: Flip the first and last attributes (i.e., flip the first and last names in the lists) 4: Duplicate a random character. This might be done to more than one character 5: Abbreviate randomly - Keep the first character but this might be duplicated or

Cora2 Cora data set contains bibliographic records and citations in scientific papers classified in several classes. The cora citation data set, which consists of a data set of original references and research papers, is often used in the duplicate detection community. Additionally, we augmented and topped the cora data set to 21,152 references and 32,005, a substantial larger data set for our experiments.

names(s), title of the publication, some keywords, an abbreviated refer- ence format citation (i.e., journal, book, editor). It consists of 43,935 real objects, both for relational and XML data. Additionally and for our ex- periments, we augmented the data set to 63,553 references.

With an extensive experimental analysis, the purity, inverse and F- measure achieved a value of nearly 1.0, a precision which outperforms the seminal work of Monge-Elkan. For instance, in the ME algorithm which is based on Jaro-Winkler's metric and using the attribute name provided by DBLP, the maximum F-measure is at threshold 0.8 and robust up to 0.9. The precision drops steadily below 0.8 due to many false positives. However, with the same algorithm based on Smith-Waterman's metric, the maximum F-measure is at threshold 0.9 and the SW precision

I acknowledge the collaboration of Dr. Maamir Allaoua who collab- orated with me on several interrelated published papers. He is now retired from the Dept. of Computer Science, University of Sharjah, Sharjah UAE. I would also like to thank two graduate students, Sepideh Pashami and Serveh Ghaderi, who spent one entire term carrying out the experiments and programming parts reported in this paper. I also thank Professors A. Elmagarmid and V. Verykios for providing me with some of the original benchmark data sets.

