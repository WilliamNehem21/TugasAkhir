Cloud Database Management System is a new emerging concept recently introduced in the world. In Cloud the concept of Standard architecture of Cloud Database Management System is not yet been implemented. In this paper we are proposing a framework for 5-layered architecture in cloud database management system. First layer introduced is the External Layer, this layer is closest to the user, in which manageability, providing transparency and security are the important issue that should be considered. Second layer is the Conceptual Middleware Layer, as there are heterogeneous databases and clouds are available in the market, so here interoperability is the major issue. Third layer is the Conceptual Layer in which programming techniques, transaction management, query processing and optimization are the issues that should be considered. Forth layer is the Physical Middleware Layer, as there are various platforms available so here also, interoperability between various platforms are the biggest issue and the last layer is the Physical Layer in which how data can be stored so that it can be easily accessible without so much overhead so here data security, storage, backup, load balancing, partitioning, scaling, elasticity, fault tolerance and replication are the important issues that should be considered.

The cloud Database was conceived for the purpose of online data management by using the variety of distributed databases. Cloud computing in general, with the flexible pay-as-you-go pricing models and different plans it presents the one of the best solutions for startup and small companies that are developing new products. In this way, cloud computing is reminiscent of application service provider (ASP) and Database-as-a service (DBaaS) paradigms. DBaaS offerings are tightly integrated with other Platform–as-a Service ( PaaS) gives the organization the opportunity to focus on developing their products and do not waste any resources on administration of the platform and gives an opportunity to fully focus on the development of the product. Data centre are used for hosting theses services. Data centres use commodity hardware for computation and storage.

Technological changes advances have put shared disk performance at par with shared nothing and cloud computing strongly favours the shared disk architecture. Cloud computing economies leveraging the power of multi tenancy delivers extremely fast shared storage at dramatically minimized cost. Virtualization adds these advantages by enabling users to scale elastically and to pay only for the resources they use. Because of all these changes in the technology now shared disk is equally considerable for the clouds [4].

A system “SQLMR”[1], which is a hybrid approach to fill the gap between SQL-based and MapReduce data processing. Map reduce provides a framework for large data processing and is shown to be scalable and fault tolerant on commodity machines. However it is very difficult to learn than SQL-like languages and maintaining and reuse are not easy. On the other side traditional SQL-based processing is not scalable but

To combine the fault tolerance, heterogeneous cluster and ease of use out of the box capability of MapReduce with the efficiency, performance and tool plug ability of shared nothing parallel database systems, Hybrid solution is needed. This Solution will have a significant impact on the cloud database market [2]. Cloud database system architecture organises cloud architecture into a hierarchy of three level cloud data centre, cloud service provider level, and client level [9].

This layer is presentable to the users. More and more companies are moving their data management applications from expensive, high-end servers to the cloud that is composed of cheaper, commodity machines. Here the main function of the service provider is to manage and provide the services with full transparency and Security.

Manageability: This layer deals with managing the various users. This also keeps record of the time a particular user uses the CDMBS (Cloud Data Base Management System). User payment is decided based on this time. This layer also keeps status of payment due to a user. This layer should also generate report like

Security: The external layer provides user authentication mechanism with the help of user id’s and passwords. User authentication provides that someone or something should be accepted as being legal one. The legal one is permitted to access their database system in cloud but an illegal one is forbidden.

Transparency: Main function of this layer is to provide transparencies to the users. Transparency is one of the advantages of cloud databases where it means that the physical placement of data is not known to the users. Transparency makes development of various types of real time applications easier. Its support flexibility mobility etc.

Interoperability: This layer provides interoperability. Interoperability means operate irrespective of their underlying databases. For example if a customer on ‘A’ database wants to share data with another customer with ‘B’ database, they are able to share the data irrespective of their underlying different databases of different vendors with the help of this layer.

This layer represents the logical structure of the entire database and deals with the internal processing on data. As Cloud deals with various types of data, here users need to combine the traditional data with the data that are placed on the cloud so various types of systems are required for Cloud Databases that provides all these functionalities. Some of the systems or languages like Bigintegrator, SQLMR, Saleforce object query language (SOQL) etc., have been developed for Cloud, that give the results on the basis of their analysis, so users without knowing the logics behind their tasks, gets the results. So, here this layer deals with the following issues- which one of the various types of query languages or which one of the so many available programming techniques, which one of the different query optimization techniques, what transaction management technique should be used for Cloud database Management System. This layer deals with programming techniques, Efficient query processing, Query optimization and security.

and finds the cheapest execution plan among the many possible execution plans that give the same answer. Security: At this layer the main concern is that data should not be destroyed, altered disclosed or copied by any unauthorized user. The conceptual layer provides authorization control methods, which prevents sensitive data being accessed by any unauthorized users. It includes multilevel security policies.

This layer represents the physical representation of the data. In a cloud database service, the backend is being overseen by a Physical layer that’s responsible for the continuous monitoring and configuring of the database to achieve optimal scaling, high availability, multi-tenancy and effective resource allocation in the cloud. The issue of Data Security, privacy, partitioning, shared disk architecture or shared nothing architecture are handled on this layer. Various issues of this layer are given below.

Partitioning: Partitioning is a technique that is used by cloud providers to balance and share the load. This balancing and sharing improves the performance, scalability and availability of CDBMS in multitenant environment [8]. Where to use horizontal partitioning and where to use vertical partitioning for cloud data, these decisions are to be taken at this layer.

Storage: At this layer, issues like where the data should resides so that it take lesser time for accessing the data should be explored. For Cloud Databases shared disk architecture is best suitable. It should also use sophisticated caches to maintain the most recently used metadata in memory.

The five layered Architecture of Cloud Database Management System have been introduced in this work. Functions of the five layers namely External Layer, Conceptual Middleware Layer, Conceptual Layer, Physical Middleware Layer, Physical Layer have been described. We have also explained various issues and challenges involved with each layer.

