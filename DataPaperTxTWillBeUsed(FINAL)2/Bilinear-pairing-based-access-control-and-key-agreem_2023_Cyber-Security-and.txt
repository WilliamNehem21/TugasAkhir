Cyber Security and Applications 1 (2023) 100001

		




Bilinear pairing-based access control and key agreement scheme for smart transportation
Palak Baggaa, Ashok Kumar Das b,‚àó, Joel J.P.C. Rodrigues c,d
a Center for Security, Theory and Algorithmic Research, International Institute of Information Technology, Hyderabad, Gachibowli, Hyderabad, 500032, Telangana,
India
b Center for Security, Theory and Algorithmic Research, International Institute of Information Technology, Hyderabad, Gachibowli, Hyderabad, 500032, Telangana,
India
c College of Computer Science and Technology, China University of Petroleum (East China), Qingdao 266555, China
d Instituto de Telecomunica√ß√µes, Covilh√£, 6201-001, Portugal


a r t i c l e	i n f o	a b s t r a c t

	

Keywords:
Internet of Vehicles (IoV) Smart transportation
Intelligent Transportation System (ITS) Authentication
Bilinear pairing Security
Internet of Vehicles (IoV) enabled Intelligent Transportation System (ITS) allows smart vehicles to communi- cate with other vehicles on road, humans (customers or pedestrians), infrastructure (parking areas, traÔ¨Éc lights etc), Internet, Cloud etc. The vehicles communicate with other entities over wireless open channels directly or indirectly through messages or beacons. Open channel allows various attacks, like replay, man-in-the-middle, im- personation, fabrication etc., during communication. Also, malicious vehicles can be deployed in the network to misuse or have an unauthorized access to the services. To mitigate these issues, we propose a new remote access control scheme that ensures the secure communication among the vehicles. The vehicles are dynamic in nature
it has to register to the nearest trusted authority (ùëá ùê¥) in oÔ¨Ñine or secured channel mode. To make it applica- in an IoV paradigm, that is, they are not under fixed domains. Therefore, whenever a vehicle changes its location ble, we propose remote registration of the vehicles via the ùëá ùê¥. Access control mechanism occurs in two phases:
1) node authentication phase, where vehicles are remotely authenticated by ùëá ùê¥ and 2) key agreement phase,
where after successful mutual authentication they compute a session key by using cryptographic techniques and pre-loaded information. The computed secret session keys are used for ensuring secure communications in future between two vehicles in a cluster as well. Informal security analysis along with formal security verification using the broadly-used Automated Validation of Internet Security Protocols and Applications (AVISPA) show that our access control scheme is secured against various potential attacks. We also show the competency of our scheme by comparing it with other existing schemes in terms of computation and communication costs.





Introduction

Internet of Things (IoT) combines various technologies like embed- ded systems, wireless sensors networks, control system appliance au- tomation, real time analysis, artificial intelligence, machine learning etc. Likewise, Internet of vehicle (IoV) is a concept/subset derived from the vast emerging concept IoT. It is an extended vehicular adhoc network (VANET) that modifies a vehicle into a smart vehicle by installing an on board unit (OBU) in them, thus making them eligible to communicate with other vehicles, humans (customers or pedestrians), infrastructure (parking areas, traÔ¨Éc lights), Internet, Cloud etc. Vehicles collect the information from the surroundings, and other vehicles. The collected information is comprehended to provide multiple services to the cus- tomers. IoV advances to claim a new concept of Intelligent Transporta- tion System (ITS) in smart cities. Smart vehicles (with installed OBU),
vehicle‚Äôs intelligence, diverse communication patterns, connection to In- ternet together forms ITS. ITS regulates the coordination between vehic- ular sensors, on board units, trusted platform module (TPM) etc.
ITS aims to provide safe, secured and luxurious on road experience to users. It provides safety by reducing accidents, generating warnings to avoid mis-happenings, emergency warnings, rule violation warnings etc. It offers comfort and infotainment applications like intelligent nav- igation, parking, file sharing, toll collection etc. It provides 24x7 high speed Internet access and multimedia services. It eÔ¨Éciently manages traÔ¨Éc on road, saves time and cost. IoV is quite similar to IoT as it bor- rows its technologies and benefits. But, at the same time it also has to deal with other crucial and strict requirements like limited communica- tion time, strict real time operations, specific bandwidth, heavy volume of data, scalability and most crucially ‚Äôsecurity issues‚Äô. Various security issues arise because the vehicles communicate with other entities over


‚àó Corresponding author.
E-mail addresses: palak.bagga@research.iiit.ac.in (P. Bagga), iitkgp.akdas@gmail.com, ashok.das@iiit.ac.in (A.K. Das), joeljr@ieee.org (J.J.P.C. Rodrigues).

https://doi.org/10.1016/j.csa.2022.100001
Received 1 November 2021; Received in revised form 14 December 2021; Accepted 3 January 2022
Available online 4 April 2022
2772-9184/¬© 2022 The Authors. Published by Elsevier B.V. on behalf of KeAi Communications Co., Ltd. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/)



wireless open channel directly or indirectly through messages or bea- cons. Therefore, there is high demand for well managed, reliable and robust cybersecurity measures in ITS such as authentication mechanisms, identity preservation techniques, intrusion detection system, access con- trol schemes etc. These mechanisms would provide the required ‚Äúsecu- rity and functionality features to smart transportation‚Äù.
The authors in [10] provided a detailed taxonomy of various secu- rity protocols that are necessary to maintain a secured IoV environment. The basic security protocols related to IoV and other networking envi- ronments are categorized as key management like the schemes of [19], [32], [34], [16], [26], [43], authentication schemes such as [20], [39],
[36], [28], [35], [18], [44], [42], privacy preservation schemes such as
[11], [33], [47], [8], [25], [41], intrusion detection systems proposed
by [1], [23], [24], and access control schemes.
In this paper, we focus mainly on access control mechanism. An ac- cess control scheme ensures a secured environment to provide uninter- rupted services. IoV is a dynamic network where the location of the ve- hicle keeps changing every instant so does the nearest neighbors. Also, due to increasing population, the number of vehicles bought and reg- istered are increasing drastically everyday. Therefore, the need of an hour is to have an access control scheme which ensures that the mem- bers joining the cluster are authenticated and legal. On the other hand, an adversary can even deploy malicious nodes in the network to harm the integrity network. So it becomes necessary to be able to differen- tiate between a genuine and a malicious vehicle. Therefore a success- ful access control mechanism controls the flow of false, invalid, illegal and unauthorized information within the network. It also manages ac- cess permissions, monitors the scalable IoV architecture, handles huge amount of data stream, and also keeps a track of allocation and utiliza- tion of resources in the network.
An access control scheme accomplishes the requirement in two steps.
Node authentication: When a new node (a vehicle) wishes to join the network, the node should prove its legitimacy to the neighboring
nodes, by authenticating itself to the other existing nodes or ùëá ùê¥,
after which it is deployed and allowed to communicate and access
the network.
ployed node and the ùëá ùê¥ compute a secret session key that is used to ‚Ä¢ Key establishment: After the successful authentication, a newly de-
ensure secured communication over a public channel. The key com- puted is to used to encrypt the messages shared further in the process that maintains the confidentiality and resists various attacks.
An eÔ¨Écient access control mechanism should be able to add new nodes through out the network. That is, the increase in the network size should not affect the computation and communication time of the mechanism. It should also resist new node deployment attack where a malicious node should not be allowed to be deployed in the network and no existing node should be compromised. An access control mechanism should be able to maintain the functionality of the network even when few nodes are captured.
Research contributions

The major contributions of the paper as stated as follows.

between a vehicle and its nearest ùëá ùê¥. The vehicles are registered via ‚Ä¢ We propose a remote access control scheme which is implemented the ùëá ùê¥ over secure channel. The access control mechanism works in
between ùëá ùê¥ and a vehicle. After successful authentication, a session two phases. In the first phase, a remote mutual authentication occurs
key is computed for future communications in the second phase.
Our proposed scheme facilitates vehicle addition phase and pass- word update phase. The proposed scheme can be also extended in
formed cluster of vehicles with the help of the ùëá ùê¥. establishing session keys between any two vehicles in a dynamically
In the later part, we also analyze the security of our scheme. An in- formal security analysis exhibits that our scheme can resist various
well known attacks. Further, a formal security verification using the broadly-accepted ‚ÄúAutomated Validation of Internet Security Proto- cols and Applications (AVISPA)‚Äù [6] software tool, shows that our scheme can resist passive/active adversarial attacks.
A comprehensive performance analysis evaluates computation, com- munications cost of our scheme in comparison to other existing schemes. We also list down other security and functionality features.
Paper outline

The layout of the paper is as follows.
In Section 2 we describe the network and the threat model used in the scheme.
Next, in Section 3 we give brief description of few existing access control schemes. We also summarize the characteristics of all the scheme in a table for better comprehension.
Following to this, in Section 4 we describe our proposed scheme in six phases which are defined in Sections 4.1 ‚Äì 4.6. In Section 5, we then extended this basic scheme where any two vehicles in a cluster can establish session key for their secret communication.
In Section 6 we provide the security analysis of our scheme. We pro- vide the correctness proof of our verification phase. Severeal propo- sitions give an informal security analysis of our scheme. We also provide formal security analysis of our scheme using the widely- accepted ‚ÄúAutomated Validation of Internet Security Protocols and Applications (AVISPA)‚Äù tool [6].
In Section 7 we perform a detailed comparative analysis of our scheme against few existing schemes in terms of computation, com- munication costs and other security and functionality features.
The conclusion of the paper is presented in Section 8.

System models

The network and threat model is described as follows.

Network model

A general IoV network comprises of vehicle, RSU, TA. Vehicles are installed with sensors like location based system, monitoring/warning systems, analytic systems, partner systems, speed control, camera, mul- timedia settings, mass airflow sensor, engine speed sensor, spark knock sensor, coolant sensor, fuel temperature sensor, voltage sensor, smart card device, finger print device etc. The sensors of the vehicles collect the data from the surrounding via on-board unit (OBU) through a data collecting agent. The data collected is processed via inference logics to make decisions and is saved in tampered proof device (TPD). In our
ity (ùëá ùê¥). They can be single or multiple ùëá ùê¥s to supervise a smart city. scheme, a vehicle remotely registers itself to the nearest trusted author- To preserve the identity, the ùëá ùê¥s are the only entities to store the real
identities of the vehicles. After getting registered the vehicle is deployed in the the network. IoV enabled ITS supports various types of communi- cations like interactions with other vehicles via Vehicle to Vehicle (V2V) communication. The vehicles exchange updated traÔ¨Éc related informa-
tion. The communication between ùëá ùê¥ and vehicle occurs via Vehicle to
Infrastructure (V2I) communication. Vehicle to pedestrian, vehicle to cus-
tomer communication occurs via Vehicle to Human (V2H) communication through which vehicle provides user services and safe transportation fa- cilities to passengers and customers. Vehicles can even exchange infor- mation with personal devices through Vehicle to Personal devices (V2P) communication. The vehicles are installed with sensors and the commu- nication between them occurs via Vehicle to Sensor (V2S) communication
[40]. ùëá ùê¥ checks the authenticity of the messages flown by the vehicle
therefore, the communication between the vehicle and ùëá ùê¥ takes place in the network. Our proposed scheme supports remote authentication,
through ‚Äúwireless medium using the IEEE 802.11p protocol‚Äù and ‚ÄúDed- icated Short-Range Communications (DSRC)‚Äù [30].


Fig. 1. IoV network model

















Figure 1 shows the architecture of smart transportation network model.

Threat model

We have considered ‚ÄúDolev-Yao threat (DY) model‚Äù [21] as the threat model for the proposed scheme. The model considers the follow- ing assumptions.
The communication channel between the end entities (vehicle or
ùëÖùëÜùëà ) is considered insecure, open and public.
The end nodes like vehicles are not trusted, whereas the trusted au-
thorities (TAs) are assumed to be fully trusted entities.
Following to this the model considers an adversary A, with enough capabilities such the an adversary can perform fabrication, eaves- dropping, modification, tampering, deletion and replay attacks on the messages exchanged on the public communication channel.
The vehicles are equipped with tampered proof device in on board units where they store secret information and the stored information cannot be tampered.
Another threat model considered for this scheme is, ‚ÄúCanetti and Krawczyk‚Äôs adversary model (CK-adversary model)‚Äù [13]; also stated as a ‚Äúcurrent de facto standard model in modeling authenticated key- exchange protocols‚Äù. The model extends the capabilities of the adversary as in DY model. The model assumes that the adversary can not only eavesdrop or send the messages flown in the network like in DY model, but can also compromise the secret credentials, secret keys or session keys during the communication. This model is an essential model while analyzing the security of key exchange protocols because compromised secret credentials during communication should have least impact on the session key established.

Related work

[45] proposed an ‚Äúanonymous and lightweight authentication for secure vehicular networks (ASC)‚Äù based on diÔ¨Éculty of DiÔ¨Ée-Hellman and Discrete Logarithm (DL) problem. Vehicles are issued with a smart card during registration. The scheme uses geo synchronised timestamps
in their vehicles. Vehicle proves its legitimacy to TA via ùëÖùëÜùëà and es- to achieve freshness. Users use their smart card and passwords to log
tablishes a secret key for data transmissions during user authentication phase. Messages shared by the vehicle are also authenticated using hash chains in data authentication phase. The scheme suffers from various well known attacks.
eÔ¨Écient protocol. They assumed a single TA with multiple ùëÖùëÜùëà model, [17] addressed the short comings in ASC by [45] and proposed an where TA and ùëÖùëÜùëà always have secured communications. The vehicle sends a request message to ùëÖùëÜùëà which is relayed to ùëá ùê¥ after checking its authenticity. The reply from the ùëá ùê¥ is broadcasted to ùëÖùëÜùëà and other near by ùëÖùëÜùëà s. The use of passwords (used in ASC) is removed to avoid
password guessing attacks. Instead message authenticated codes (MAC) are added on all the messages exchanged with TAs to assure security and authenticity. The scheme is secured against ‚Äúinsider attack, stolen smart card attack, oÔ¨Ñine password guessing attack, replay attack and impersonation attack‚Äù.
[46] designed a password based secure authentication protocol for wireless sensor networks (WSNs) in vehicular communications. The pro- tocol is light weight and eÔ¨Écient in communication an computation cost as it uses XOR operation and hash function. The sink nodes are deployed at fixed locations on the network. Users are authenticated by the sink nodes in the user authentication phase. Following to this, the data col- lected by authenticated vehicles is sent and collected in the sink node, which is accessed to provide user services in future. [38] claimed that the Yu et al.‚Äôs scheme cannot resist ‚Äúsensor capture attack, user trace- ability attack, impersonation attack, and oÔ¨Ñine sink node‚Äôs secret key guessing attack‚Äù. They proposed a two-factor authentication protocol in WSNs for IoV which overcomes the shortcomings of Yu et al.‚Äôs scheme. Their scheme by [38] uses biometric templates instead of passwords for authentication. A shared key is established between the user and sink node, also between a vehicle and sink node. Although the scheme is se- cured against replay, stolen sink node database, stolen smart card attack but it requires lots of storage space in the sink node‚Äôs memory and incurs heavy computation and communication cost. It does support revocation phases.
[44] proposed an ‚ÄúeÔ¨Écient privacy-preserving mutual authentica-
tion scheme for secure V2V communications‚Äù where a vehicle is au- thenticated by a law executor. Once the authentication is successful, the vehicle receives authentication key and becomes a trustful vehicle until the key expires. Further, a trustful vehicle can also authenticate other vehicles by trust extended phase. Two trustful vehicles compute a session key and can have secure communications. Later, [42] proposed a two factor light weight authentication mechanism. The scheme incurs less computation overheads because it uses less expensive cryptographic operations like XOR operations and hashing. After authentication, a key is established between entities for secure communication. The session key computed in the schemes proposed by [42], and [44], is not secured against CK-adversary attack.
[3] proposed a ‚Äúmulti-factor secured and lightweight privacy- preserving authentication scheme (MSPF)‚Äù. The security of the scheme is



based on multiple authentication factors like physical unclonable func- tions (PUF), vehicle‚Äôs private key and one time pseudo identity. The mechanism is decentralized and reduces redundant authentications. Af- ter vehicle to central authority mutual authentication phase, a regional key is established which is valid until the vehicle reaches a new region.
[27] also proposed an authentication-based secure data dissemination protocol and framework for 5G-enabled VANET. The authenticated vehi- cles are allowed to exchange messages only after validating each other. The message integrity is checked by calculating the disparity in the com- munication bits.
[2] designed an ‚ÄúeÔ¨Écient conditional privacy preservation with mu- tual authentication‚Äù. The TA divides the system into domains with speci-
fied number of ùëÖùëÜùëà s to cover the region. At the time of authentication,
the RSU provides a pool of pseudo identities and their corresponding
cation within the ùëÖùëÜùëà ‚Äôs coverage area. OBU uses the pseudo identity secret keys with expiry to the vehicle, that can be used for communi-
and the secret key from the pool to sign the traÔ¨Éc related message. The malicious vehicles‚Äô secret key is not renewed once it has expired. The scheme incurs higher storage cost to store pool of identities and secret keys.
Another ‚Äúmutual authentication and key agreement scheme‚Äù is de- signed in [9] where a cluster head is chosen in the dynamic cluster of vehicles and the authentication occurs in two levels. In the first level,
the cluster head and ùëÖùëÜùëà mutually authenticate each other,and in the
other level the authentication happens between two vehicles. After au-
phase. 3) Log in phase. 4) Authentication and verification phase. 5) Key agreement phase. 6) Password update phase. To avoid replay at- tacks we use timestamp while exchanging the messages. For that we assume that all the entities are synchronized with their clocks. Towards the end, we also propose a mechanism where the vehicle can any- time change its password if in case the password is lost or breached. The notations used through out the description of the scheme is de- fined in the Table 2. We now present the proposed scheme in following subsections.

Initial setup phase

The initial set up phase is performed by the ùëá ùê¥ authorized for a smart city. The ùëá ùê¥ sets it private and public key, and initializes the system by
computing public parameters by executing the following steps.
Step 1: In the first step, ùëá ùê¥ chooses a non-singular elliptic curve
ùê∏ùëû (ùë¢, ùë£) of the form: ùë¶2 = ùë•3 + ùë¢ùë• + ùë£ (mod ùëû) such that 4ùë¢3 + 27ùë£2 ‚â† 0 (mod ùëû). ùëá ùê¥ also picks an additive group ùê∫1 with point at infinity U and a multiplicative group ùê∫2 with identity 1 of prime order ùëû. It selects ùëÉ as a randomly-chosen generator of ùê∫1. It chooses ùëí as a bi- linear mapping ùëí: ùê∫1 √ó ùê∫1 ‚Üí ùê∫2 . The bilinear mapping has following
properties [12,37]:
Bilinearity: For all ‚ÄúùëÉ , ùëÑ, ùëÖ ‚àà ùê∫1, ùëí(ùëÉ + ùëÑ, ùëÖ) = ùëí(ùëÉ , ùëÖ)ùëí(ùëÑ, ùëÖ)
and ùëí(ùëÉ , ùëÑ + ùëÖ) = ùëí(ùëÉ , ùëÑ)ùëí(ùëÉ , ùëÖ)‚Äù. In general, for all ‚Äúùëé, ùëè ‚àà ùëç ‚àó =

thentication a session key is also established.
Recently, [5] proposed a ‚Äúprivacy-preserving and scalable authenti- cation protocol for the IoV‚Äù which is also based on ‚Äúphysical unclonable function (PUF)‚Äù. PUF is installed in the vehicle‚Äôs OBU. During registra- tion, vehicles generate crypto identity using PUF, random nonce and hashing, and send it to TA along with few challenge response pairs.
All ùëÖùëÜùëà s also store current challenge and nonce. During vehicle to TA
where ùëÖùëÜùëà consolidates request messages, creates a reply by encrypt- authentication phase, all vehicles send their crypto identities to RSU
ing and hashing, and forwards to RSU gateway. RSU gateway forwards the request to TA after verification. TA generates a token for each ver- ified vehicle containing a challenge and sends the authorized response
to the gateway. The gateway forwards the reply to all ùëÖùëÜùëà s in its re-
gion after which it is sent to vehicles. The vehicles generates a crypto-
identity using the challenge received in the token and acknowledges the TA.
Another ‚Äúlightweight authentication and attestation scheme for in- transit vehicles‚Äù based on PUF is proposed by [4]. IoV cloud servers are database that stores the challenge responses and other information. TA
registers vehicles and ùëÖùëÜùëà s. A vehicle sends an authentication request
message to ùëÖùëÜùëà whenever it comes in range of any ùëÖùëÜùëà . ùëÖùëÜùëà veri- fies the vehicle by contacting edge servers (attached to ùëÖùëÜùëà for stor-
age and computation purposes) for registration details. A session key is established which is used for encryption and for an in-transit attesta- tion mechanism that lets the edge servers verify the main ECU firmware installed in the vehicle. For attestation, both vehicle and edge server run an attestation algorithm and verify their checksums computed on memory blocks of ECU firmware using pseudo random functions. The primary ECU firmware after getting verified verifies other ECU‚Äôs present in the vehicle by same process.
Table 1 summarises the characteristics and limitations of the dis- cussed schemes.

The proposed scheme

In this section, we present a new remote access control scheme for
{1, 2, ‚ãØ , ùëû ‚àí 1}, ùëí(ùëéùëÉ , ùëèùëÑ) = ùëí(ùëÉ , ùëÑ)ùëéùëè ‚Äù.
Non-degeneracy: If 1ùê∫1  denotes the identity in ùê∫1 , then
ùëí(ùëÉ , ùëÉ ) ‚â† 1ùê∫1 for all ùëÉ ‚àà ùê∫1 .
‚Äúùëí(ùëÉ  ,  ùëÑ)    for    all    ùëÉ  ,  ùëÑ    ‚àà    ùê∫1‚Äù. ‚Ä¢ Computability: There exists an eÔ¨Écient algorithm to calculate
Step 2: In the second step, ùëá ùê¥ randomly selects ùëùùëüùëá ùê¥ ‚àà ùëç ‚àó, and sets

it as its private key. Using its private key ùëùùëüùëá ùê¥, ùëá ùê¥ calculates its public key by ùëÉ ùë¢ùëèùëáùê¥ = ùëùùëüùëá ùê¥ ‚ãÖ ùëÉ .
Step 3: Next, ùëá ùê¥ computes a public verification factor ùë£ùëíùëü as, ùë£ùëíùëü =
ùëí(ùëÉ ùë¢ùëèùëáùê¥, ùëÉ ) and also chooses two cryptographic hash functions, de- fined as ‚Ñé(‚ãÖ): {0, 1}‚àó ‚Üí {0, 1}‚àó, and ùêª : {0, 1}‚àó ‚Üí ùê∫1 .
Step 4: Finally, ùëá ùê¥ publicly publishes the system parameters: {ùê∫1,
ùê∫2 , ùëí, ùëû, ùëÉ , ‚Ñé(‚ãÖ), ùêª (‚ãÖ), ùëÉ ùë¢ùëèùëáùê¥, ùë£ùëíùëü} at the end of the set up phase.

Registration phase

The ùëá ùê¥ is responsible for registering vehicles before their deploy- ment. ùëá ùê¥ maintains a database where it stores the unique number of
vehicles (VUN) assigned by Regional Transport OÔ¨Éce (RTO) at the time of buying a vehicle. So, when a new vehicle wishes to join the network it needs to register itself to its corresponding TA. To successfully register
vehicle ùëâùëñ , following steps are performed between ùëâùëñ and ùëá ùê¥.
Step 1: Vehicle ùëâùëñ chooses its unique identity ùêºùê∑ùëñ and calculates its pseudo identity ùëÖùêº ùê∑ùëñ as ùëÖùêº ùê∑ùëñ = ùêª (ùêºùê∑ùëñ ). ùëâùëñ sends its pseudo iden- tity ùëÖùêº ùê∑ùëñ , and hashed unique number ‚Ñé(ùëâ ùëàùëÅùëñ ) to ùëá ùê¥ via a secure channel. For instance, the information {ùëÖùêº ùê∑ùëñ , ‚Ñé(ùëâ ùëàùëÅùëñ )} can be en- crypted with the help of the public key of the ùëá ùê¥ and the encrypted credentials can be sent via public channel to the ùëá ùê¥, and the ùëá ùê¥ will decrypt the encrypted credentials using its own private key ùëùùëòùëá ùê¥.
Step 2: On receiving ùëÖùêº ùê∑ùëñ , ‚Ñé(ùëâ ùëàùëÅùëñ ) from ùëâùëñ , ùëá ùê¥ checks for the
presence of ‚Ñé(ùëâ ùëàùëÅùëñ ) in its database. If the entry is present in its
of the same vehicle. If ‚Ñé(ùëâ ùëàùëÅùëñ ) is not present in the database, it database it stops the further process to avoid multiple registration
makes the entry of the vehicle‚Äôs number in the table and proceeds the
registration process. ùëá ùê¥ computes ùëÖùëíùëîùêºùê∑ as, ùëÖùëíùëîùêºùê∑ = ùëùùëòùëá ùê¥ ‚ãÖ ùëÖùêº ùê∑ùëñ .

ùëñ	ùëñ

smart transportation. The scheme is based on the architecture described in Section 2.1. According to our scheme, initially a vehicle remotely
mutually authenticates ùëá ùê¥ and then both vehicle and ùëá ùê¥ compute se-
cret session key for secure communication in future. Our scheme oc-
ùëá ùê¥ chooses a temporary identity ùëá ùêºùê∑ùëñ for vehicle ùëâùëñ , and computes
pseudo temporary identity as ùëÖùëá ùêºùê∑ùëñ = ‚Ñé(ùëá ùêºùê∑ùëñ ‚Äñùëùùëòùëá ùê¥).
Step 3: Finally, ùëá ùê¥ generates a current timestamp as ùëá ùëÜùëáùê¥1 , and
sends the registration reply message {ùëá ùêºùê∑ùëñ , ùëÖùëíùëîùêºùê∑ , ùëÖùëá ùêºùê∑ùëñ , ùëá ùëÜùëáùê¥ }

curs in following phases. 1) TA initial set up phase. 2) Registration
to ùëâùëñ over secure channel.
ùëñ	1

Table 1
Summary of limitations/drawbacks of the state-of-art existing access control schemes



Table 2
Notations and their meanings
Step 5: ùëÇùêµùëàùëñ of vehicle ùëâùëñ stores {ùëá ùêºùê∑ùëñ, ùëâ ùê∑ùêºùê∑ùëñ, ùëâ ùê∑ùëñ, ùëâ ùê¥ùëñ, ùëâ ùêµùëñ}
in its memory, and deletes {ùëÖùëíùëîùêºùê∑ , ùëÖùëá ùêºùê∑ùëñ} permanently from its

memory.
Figure 2 summarizes the registration phase.

Login phase

In login phase, user of vehicle ùëâùëñ inputs its identity ùêºùê∑ùëñ and pass- word ùëÉ ùëäùëñ associated with vehicle in the ùëÇùêµùëàùëñ. Then, ùëÇùêµùëàùëñ executes
the following steps.
Step 1: ùëÇùêµùëàùëñ computes random nonce ùëü‚àó as, ùëü‚àó = ùëüùëñ ‚äï ‚Ñé(ùêºùê∑ùëñ ‚ÄñùëÉ ùëäùëñ)
ùëñ	ùëñ

and then computes ùëÖùëíùëî‚àó
as, ùëÖùëíùëî‚àó
= ùëâ ùê∑ùêºùê∑ùëñ‚àí ùêª (ùëÉ ùëäùëñ ‚Äñùëü‚àó), ùëâ ùê¥‚àó =

‚àó	‚àó	ùêºùê∑ùëñ
ùêºùê∑ùëñ
ùëñ	ùëñ
‚àó






Step	4:	After	receiving	registration	reply	message
{ùëá ùêºùê∑ùëñ, ùëÖùëíùëîùêºùê∑ , ùëÖùëá ùêºùê∑ùëñ, ùëá ùëÜùëáùê¥ }  from  ùëá ùê¥,  ùëÇùêµùëàùëñ  of  ùëâùëñ  first  veri- fies the received timestamp ùëá ùëÜùëáùê¥1 against the current timestamp
‚Ñé(ùêºùê∑ùëñ ‚ÄñùëÖùëíùëîùêºùê∑ ‚Äñ‚Ñé(ùëüùëñ ‚ÄñùëÉ ùëäùëñ)) and verifies if ùëâ ùê¥ùëñ = ùëâ ùê¥ùëñ is valid. If the
condition is not valid, the further processing is stopped, as the user has not provided the correct identity or password and is therefore not authenticated. And if valid, the user of the vehicle is authorized and has provided correct identity and password.
Step 2: Following this, ùëÇùêµùëàùëñ generates two random nonces ùëü1, ùëü2 ‚àà
ùëç‚àó, and performs the following computations. It computes ùëâ ùëçùëñ =
ùëâ ùê∑ùëñ‚äï ‚Ñé(ùëÖùêº ùê∑ùëñ ‚ÄñùëÉ ùëäùëñ ‚Äñùëü‚àó), ùëâ ùêπùëñ = ùëÖùêº ùê∑ùëñ‚äï ‚Ñé(ùëâ ùëçùëñ ‚Äñùëü1), ùëâ ùê∫ùëñ = ùëü2 ‚ãÖ
ùëÉ ùë¢ùëèùëáùê¥ +ùëÖùëíùëîùêºùê∑ùëñ , ùëâ ùêøùëñ = ‚Ñé(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥ ‚ÄñùëÖùêº ùê∑ùëñ).
Step 4: ùëâùëñ generates a current timestamp as ùëá ùëÜùëâùëñ1 and sends au- thentication request message consisting of {ùëá ùêºùê∑ùëñ, ùëâ ùêπùëñ, ùëâ ùê∫ùëñ, ùëâ ùêøùëñ,
ùëü1, ùëá ùëÜùëâùëñ1 } to TA via open public channel.
Remote authentication, verification and session key establishment phase

The communication between TA and vehicles needs to be secured
because the vehicles share data with the ùëá ùê¥s. The data shared between

by the condition: |ùëá ùëÜ‚àó
ùëáùê¥1
‚Äì ùëá ùëÜùëáùê¥1 | ‚â§ Œîùëá ùëÜ, where Œîùëá ùëÜ is the
them is traÔ¨Éc related data which is further used for decision making and

timestamp is valid, ùëÇùêµùëàùëñ of ùëâùëñ asks the user of the vehicle to choose ‚Äúmaximum transmission delay associated with a message‚Äù. If the and enter password ùëÉ ùëäùëñ associated with ùëâùëñ. Then ùëÇùêµùëàùëñ generates a random nonce ùëüùëñ ‚àà ùëç‚àó, and computes ùëâ ùê∑ùêºùê∑ùëñ, ùëâ ùê∑ùëñ, ùëâ ùê¥ùëñ, ùëâ ùêµùëñ as,
ùëâ ùê∑ùêºùê∑ùëñ = ùëÖùëíùëîùêºùê∑ + ùêª (ùëÉ ùëäùëñ ‚Äñùëüùëñ), ùëâ ùê∑ùëñ = ùëÖùëá ùêºùê∑ùëñ‚äï ‚Ñé(ùêºùê∑ùëñ ‚ÄñùëÉ ùëäùëñ ‚Äñùëüùëñ),
ùëâ ùê¥ùëñ = ‚Ñé(ùêºùê∑ùëñ ‚ÄñùëÖùëíùëîùêºùê∑ ‚Äñ‚Ñé(ùëüùëñ ‚ÄñùëÉ ùëäùëñ)), ùëâ ùêµùëñ = ‚Ñé(ùêºùê∑ùëñ ‚Äñùëüùëñ ‚ÄñùëÉ ùëäùëñ) ‚äïùëÖùêºùê∑ùëñ.
providing on road traÔ¨Éc related services. Any modification or delay in the data can lead to mis-happenings and even risks lives. The following steps are executed to remotely authenticate and verify the vehicle.
Step  1:  After  receiving  authentication  request  message
{ùëá ùêºùê∑ùëñ, ùëâ ùêπùëñ, ùëâ ùê∫ùëñ, ùëâ ùêøùëñ, ùëü1, ùëá ùëÜùëâùëñ1 } from ùëâùëñ, ùëá ùê¥ first verifies the




Fig. 2. Summary of vehicle registration phase


received timestamp ùëá ùëÜùëâùëñ1 against the current timestamp by the
condition: |ùëá ùëÜ ‚àó ‚àí ùëá ùëÜùëâ | ‚â§ Œîùëá ùëÜ. If the timestamp is valid, it
Figure 3 summarizes the log in, authentication, verification and key establishment phases.

‚àó ùëâùëñ1
ùëñ1	‚àó	‚àó

computes ùëâ ùëçùëñ = ‚Ñé(ùëá ùêºùê∑ùëñ ‚Äñùëùùëòùëá ùê¥), ùëÖùêº ùê∑ùëñ = ùëâ ùêπùëñ‚äï ‚Ñé(ùëâ ùëçùëñ ‚Äñùëü1 ).
Step 2: After computing ùëÖùêº ùê∑‚àó, ùëá ùê¥ checks its validity against the stored ùëÖùêº ùê∑ùëñ by the equation ùëÖùêº ùê∑ùëñ = ùëÖùêº ùê∑‚àó? If it is valid, ùëá ùê¥ com-
putes ùëÖùëíùëî‚àó  = ùëùùëòùëá ùê¥ ‚ãÖ ùëÖùêº ùê∑‚àó, ùëâ ùëåùëñ = ùëâ ùê∫ùëñ ‚àí ùëÖùëíùëî‚àó . Then ùëá ùê¥ uses the
Vehicle addition phase

With the increase in number of vehicles every day, a new vehicle

ùëñ	ùëñ
bilinear pairing equation: ùëí(ùëùùëüùëá ùê¥‚ãÖ (ùëÖùêº ùê∑‚àó) ‚ãÖ ùëÉ , ùëÉ ) = ùë£ùëíùëü
‚àó
ùëñ to verify
may wish to join the network. Also, there can be a possibility where an existing vehicle might get physically captured or may stop working

the authenticity of the vehicle. It the equation is valid, ùëá ùê¥ computes
ùëâ ùêø‚àó = ‚Ñé(ùëâ ùëåùëñ ‚ÄñùëÖùêº ùê∑‚àó) for the corresponding authorized vehicle.
for some reason. Therefore, a flexible access control scheme should only
allow authenticated vehicle to be deployed in the network. Following

ùëñ	ùëñ

Step 3: In the next step, ùëá ùê¥ computes a session key. For this, it
generates a random nonce ùëü3 ‚àà ùëç ‚àó, and computes ùëâ1 = ùëü3 ‚ãÖ ùëÉ , ùëâ2 =
steps are performed between new vehicle ùëâ ùëõùëíùë§ and ùëá ùê¥.
Step 1: Vehicle ùëâ ùëõùëíùë§ chooses its unique identity ùêºùê∑ùëõùëíùë§ and calcu-

ùëâ1 ‚àí ùëÖùëíùëîùêºùê∑ùëñ . Finally it computes the session key between ùëá ùê¥ and ùëâùëñ ,
ùëñ
ùëõùëíùë§
ùëõùëíùë§
ùëñ
ùëõùëíùë§

as ùëÜùêæ
= ‚Ñé(ùëÖùëíùëî
‚Äñùëâ
‚Äñùëâ ùëå ).
lates its pseudo identity ùëÖùêº ùê∑ùëñ	as ùëÖùêº ùê∑ùëñ	= ùêª (ùêºùê∑ùëõùëíùë§). ùëâùëñ	sends

ùëáùê¥‚àíùëâùëñ
ùêºùê∑ùëñ	1	ùëñ
its pseudo identity
ùëõùëíùë§
ùëñ
(	ùëõùëíùë§ ) to

Step 4: To ensure the integrity of the session key ùëÜùêæùëáùê¥‚àíùëâ , while
ùëÖùêº ùê∑ùëñ  , hashed unique number ‚Ñé ùëâ ùëàùëÅùëñ

sending it on an open channel, ùëá ùê¥ computes ùëÑ = ‚Ñé(
‚àó  ùëñ
ùëá ùê¥ via a secure channel.

ùëñ	ùëÖùêº ùê∑ùëñ ‚ÄñùëÜùêæùëáùê¥‚àíùëâùëñ
ùëõùëíùë§
ùëõùëíùë§
ùëõùëíùë§

‚Äñùëâ1 ). It generates a new temporary identity ùëá ùêºùê∑ùëõùëíùë§, and computes
Step 2: On receiving ùëÖùêº ùê∑ùëñ  , ‚Ñé(ùëâ ùëàùëÅùëñ  ) from ùëâùëñ	, the ùëá ùê¥ checks

ùëñ
ùëõùëíùë§
ùëõùëíùë§
for the presence of ‚Ñé(ùëâ ùëàùëÅùëõùëíùë§) in its database. If the entry is present

new pseudo temporary identity by ùëÖùëá ùêºùê∑ùëñ	= ‚Ñé(ùëá ùêºùê∑ùëñ	‚Äñùëùùëòùëá ùê¥).
It computes ùëâ3 = ùëÖùëá ùêºùê∑ùëõùëíùë§‚äï ùëÜùêæùëáùê¥‚àíùëâ and ùëâ4 = ùëá ùêºùê∑ùëõùëíùë§‚äï ‚Ñé(ùëâ1 ). Fi-
ùëñ
in its database it stops the further process to avoid multiple reg-
istration of the same vehicle. If ‚Ñé(ùëâ ùëàùëÅùëõùëíùë§) is not present in the

nally, ùëá ùê¥ generates another timestamp ùëá ùëÜùëáùê¥2 and sends the authen-
tication reply message as {ùëÑùëñ, ùëâ2 , ùëâ3 , ùëâ4 , ùëá ùëÜùëáùê¥2 } to ùëâùëñ on an open
ùëñ
database, it makes the entry of the vehicle‚Äôs number in the table and
proceeds the registration process. ùëá ùê¥ computes ùëÖùëíùëîùëõùëíùë§ as, ùëÖùëíùëîùëõùëíùë§ =

public channel.
ùêºùê∑ùëñ
ùêºùê∑ùëñ

Step 5: On receiving the authentication reply message from ùëá ùê¥, ùëâ
ùëùùëòùëá ùê¥ ‚ãÖ ùëÖùêº ùê∑ùëõùëíùë§. ùëá ùê¥ chooses a temporary identity ùëá ùêºùê∑ùëõùëíùë§ for vehi-

ùëñ
cle
ùëñ
ùëõùëíùë§
ùëñ
ùëõùëíùë§

checks the freshness of the message by checking the time delay us-
ing the condition: |ùëá ùëÜ ‚àó	‚àí ùëá ùëÜ	| ‚â§ Œîùëá ùëÜ. Then, ùëâ calculates ùëâ ‚àó =
ùëâùëñ	, and computes pseudo temporary identity by ùëÖùëá ùêºùê∑ùëñ	=
‚Ñé(ùëá ùêºùê∑ùëõùëíùë§ ‚Äñùëùùëòùëá ùê¥).

ùëáùê¥2
ùëáùê¥2
ùëñ	1	ùëñ

ùëâ2 + ùëÖùëíùëî
. It uses the value of ùëâ ‚àó to compute session key ùëÜùêæ
Step	3:	Finally,	ùëá ùê¥	generates	a	current	timestamp

ùêºùê∑ùëñ	‚àó	1
ùëâùëñ ‚àíùëáùê¥
as	ùëá ùëÜ
,	and	sends	the	registration	reply	message

as ùëÜùêæùëâ ‚àíùëáùê¥ = ‚Ñé(ùëÖùëíùëîùêºùê∑
‚Äñùëâ1 ‚Äñ(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥)). To ensure the integrity
ùëáùê¥1
{

ùëñ	ùëñ
‚àó	‚àó	ùëá ùêºùê∑ùëõùëíùë§, ùëÖùëíùëîùëõùëíùë§, ùëÖùëá ùêºùê∑ùëõùëíùë§, ùëá ùëÜùëáùê¥ } to ùëâùëñ on a secure channel.

of the calculated session key, ùëâùëñ calculates ùëÑùëñ = ‚Ñé(ùëÖùêº ùê∑ùëñ ‚ÄñùëÜùêæùëâùëñ ‚àíùëáùê¥
ùëñ	ùêºùê∑ùëñ	ùëñ	1

‚Äñùëâ ‚àó) and checks if ùëÑ‚àó = ùëÑùëñ ?
Step	4:	After	receiving	registration	reply	message

1	ùëñ	‚àó
{ùëá ùêºùê∑ùëõùëíùë§, ùëÖùëíùëîùëõùëíùë§, ùëÖùëá ùêºùê∑ùëõùëíùë§, ùëá ùëÜ
} from ùëá ùê¥, ùëÇùêµùëà ùëõùëíùë§
of ùëâ ùëõùëíùë§

Step 6: If the equation ùëÑùëñ = ùëÑùëñ is valid, ùëâùëñ extracts the cre-
ùëñ	ùêºùê∑ùëñ
ùëñ	ùëáùê¥1
ùëñ	ùëñ

dentials by, ùëÖùëá ùêºùê∑ùëõùëíùë§ = ùëâ3 ‚äï ùëÜùêæùëâ ‚àíùëáùê¥, ùëá ùêºùê∑ùëõùëíùë§ = ùëâ4 ‚äï ‚Ñé(ùëâ ‚àó) and
first verifies the received timestamp ùëá ùëÜùëáùê¥1 against the current

ùëõùëíùë§
ùëñ
ùëõùëíùë§
ùëñ	ùëñ	1
timestamp by the condition: |ùëá ùëÜ ‚àó
‚Äì ùëá ùëÜ
| ‚â§ Œîùëá ùëÜ. If the times-

ùëâ ùê∑ùëñ	= ùëÖùëá ùêº ùê∑ùëñ  ‚äï ‚Ñé(ùêº ùê∑ùëñ ‚ÄñùëÉ ùëäùëñ ‚Äñùëüùëñ ). Subsequently, after success-
ùëáùê¥1
ùëáùê¥1

ful authentication and session key establishment, ùëÇùêµùëàùëñ of vehicle	tamp is valid, ùëÇùêµùëà ùëõùëíùë§ requests the user of ùëâ ùëõùëíùë§ to choose and
ùëñ	ùëñ

ùëâùëñ replaces {ùëá ùêºùê∑ùëñ , ùëâ ùê∑ùëñ } with {ùëá ùêºùê∑ùëõùëíùë§, ùëâ ùê∑ùëõùëíùë§} for availing further
enter a password ùëÉ ùëä ùëõùëíùë§ associated with ùëâ ùëõùëíùë§. ùëÇùêµùëà ùëõùëíùë§ gener-

ùëñ	ùëñ	ùëñ	ùëñ	ùëñ

services.
ates a random nonce ùëüùëõùëíùë§ ‚àà ùëç ‚àó, and computes ùëâ ùê∑ùêºùê∑ùëõùëíùë§, ùëâ ùê∑ùëõùëíùë§,

ùëñ	ùëû	ùëñ	ùëñ



Fig. 3. Authentication and key establishment phase


ùëâ ùê¥ùëõùëíùë§, ùëâ ùêµùëõùëíùë§ as, ùëâ ùê∑ùêºùê∑ùëõùëíùë§ = ùëÖùëíùëîùëõùëíùë§+ ùêª (ùëÉ ùëä ùëõùëíùë§ ‚Äñùëüùëõùëíùë§), ùëâ ùê∑ùëõùëíùë§ =
change or update the password. Following steps are executed by the

ùëñ	ùëñ
ùëñ	ùêºùê∑ùëñ
ùëñ	ùëñ	ùëñ

ùëÖùëá ùêº ùê∑ùëõùëíùë§‚äï ‚Ñé(ùêº ùê∑ùëõùëíùë§
‚ÄñùëÉ ùëä ùëõùëíùë§
‚Äñùëüùëõùëíùë§), ùëâ ùê¥ùëõùëíùë§ = ‚Ñé(ùêºùê∑ùëõùëíùë§
‚ÄñùëÖùëíùëîùëõùëíùë§
ùëÇùêµùëàùëñ of the vehicle to update the password.

ùëñ	ùëñ
ùëñ	ùëñ	ùëñ
ùëñ	ùêºùê∑ùëñ

‚Äñ‚Ñé(ùëüùëõùëíùë§ ‚ÄñùëÉ ùëä ùëõùëíùë§)), ùëâ ùêµùëõùëíùë§ = ‚Ñé(ùêºùê∑ùëõùëíùë§ ‚Äñùëüùëõùëíùë§ ‚ÄñùëÉ ùëä ùëõùëíùë§) ‚äïùëÖùêºùê∑ùëõùëíùë§.

ùëñ	ùëñ	ùëñ
ùëñ	ùëñ	ùëñ	ùëñ
Step 1: Vehicle ùëâùëñ enters its identity ùêºùê∑ùëñ and old password ùëÉ ùëäùëñ .

Step 5: ùëÇùêµùëà ùëõùëíùë§ of vehicle ùëâ ùëõùëíùë§ stores {ùëá ùêº ùê∑ùëõùëíùë§, ùëâ ùê∑ùêº ùê∑ùëõùëíùë§, ùëâ ùê∑ùëõùëíùë§,

ùëñ	ùëñ
ùëõùëíùë§
ùëñ	ùëñ	ùëñ
Now, the ùëÇùêµùëàùëñ , executes the Step 1 of log in phase (described in

ùëâ ùê¥ùëñ  , ùëâ ùêµùëõùëíùë§} in its memory, and deletes {ùëÖùëíùëîùëõùëíùë§, ùëÖùëá ùêºùê∑ùëõùëíùë§} per-
Section 4.3) to check the authenticity of the vehicle.

ùëñ
manently from its memory.
ùêºùê∑ùëñ	ùëñ
Step 2: A valid vehicle enters the new password ùëÉ ùëä ùëõùëíùë§. Then,

For better understanding, Figure 4 shows the complete phases of ex-
ùëÇùêµùëàùëñ computes ùëâ ùëçùëñ = ùëâ ùê∑ùëñ‚äï ‚Ñé(ùëÖùêº ùê∑ùëñ ‚ÄñùëÉ ùëäùëñ ‚Äñùëü‚àó), ùëÖùëíùëîùêºùê∑ = ùëâ ùê∑ùêºùê∑ùëñ ‚àí

ecution of our scheme.
ùêª (ùëÉ ùëäùëñ ‚Äñùëü‚àó).
ùëñ	ùëñ

Password change phase
Step 3: Using the new password ùëÉ ùëä ùëõùëíùë§, ùëÇùêµùëàùëñ  calculates
ùëâ ùê∑ùêºùê∑ùëõùëíùë§ = ùëÖùëíùëîùêºùê∑ + ùêª (ùëÉ ùëä ùëõùëíùë§ ‚Äñùëü‚àó), ùëâ ùê∑ùëõùëíùë§ = ùëâ ùëçùëñ‚äï ‚Ñé(ùêºùê∑ùëñ ‚ÄñùëÉ ùëäùëñ

ùëñ	ùëñ	ùëñ	ùëñ	ùëñ
‚Äñùëü‚àó), ùëâ ùê¥ùëõùëíùë§ = ‚Ñé(ùêºùê∑ùëñ ‚ÄñùëÖùëíùëîùêºùê∑ ‚Äñ‚Ñé(ùëü‚àó ‚ÄñùëÉ ùëä ùëõùëíùë§)), ùëâ ùêµùëñ = ‚Ñé(ùêºùê∑ùëñ ‚Äñùëü‚àó
ùëñ	ùëñ	ùëñ	ùëñ	ùëñ	ùëñ

In a vulnerable paradigm like smart transportation, it is likely to
happen that the password of the vehicle can be breached or stolen. So in a password based authentication mechanism, it should be easy to
‚ÄñùëÉ ùëä ùëõùëíùë§) ‚äïùëÖùêºùê∑ùëñ .
Step 4: ùëÇùêµùëàùëñ of vehicle ùëâùëñ replaces the old {ùëâ ùê∑ùêºùê∑ùëñ , ùëâ ùê∑ùëñ , ùëâ ùê¥ùëñ , ùëâ ùêµùëñ }
with new values {ùëâ ùê∑ùêºùê∑ùëõùëíùë§, ùëâ ùê∑ùëõùëíùë§, ùëâ ùê¥ùëõùëíùë§, ùëâ ùêµùëõùëíùë§}.

ùëñ	ùëñ	ùëñ	ùëñ

Fig. 4. Overview of the proposed access control scheme
























The extended scheme
In this section, we provide an extended scheme from the basic scheme discussed in Section 4 for an IoV application.
the ùëá ùê¥ fetches the already established session keys ùëÜùêæùëáùê¥,ùëâùëñ and
ùëÜùêæùëáùê¥‚àíùê∂ùêª corresponding to ùëá ùêºùê∑ùëñ and ùëá ùêºùê∑ùê∂ùêª respectively, and generates a current timestamp ùëá ùëÜùëáùê¥ and a random secret ùëüùëáùê¥ ‚àà
ùëç ‚àó. The ùëá ùê¥ computes a shared session key ùëÜùêæùëâ ,ùê∂ùêª between ùëâùëñ

ùëû	ùëñ

In IoV environment, we consider a dynamic clustering mechanism for the vehicles proposed by [29] and [22] to creating different clus-
ters of vehicles on the fly. The dynamic clustering can be considered as
and ùê∂ùêª as ùëÜùêæùëâ ,ùê∂ùêª = ‚Ñé(ùëüùëáùê¥ ||ùëüùê∂ùêª ||ùëá ùëÜùëñ ||ùëá ùëÜùê∂ùêª ||ùëá ùêºùê∑ùëñ ||ùëá ùêºùê∑ùê∂ùêª
||ùëÜ ùêæùëáùê¥,ùëâùëñ ||ùëÜ ùêæùëáùê¥,ùê∂ùêª ). The ùëá ùê¥ also generates new temporary iden-
tities ùëá ùêºùê∑ùëõùëíùë§ and ùëá ùêºùê∑ùëõùëíùë§ to compute ùëá ùêº ùê∑‚àó = ùëá ùêº ùê∑ùëõùëíùë§ ‚äï‚Ñé(ùëá ùëÜùëáùê¥

ùëñ	ùê∂ùêª	ùëñ	ùëñ

follows. The vehicles moving on a same lane segment that ends at the
||ùëÜ ùêæùëáùê¥,ùëâ
||ùëÜ ùêæùëâ ,ùê∂ùêª ) and ùëá ùêºùê∑‚àó  = ùëá ùêºùê∑ùëõùëíùë§ ‚äï‚Ñé(ùëá ùëÜùëáùê¥ ||ùëÜùêæùëáùê¥,ùê∂ùêª

ùëñ	ùëñ
ùê∂ùêª
ùê∂ùêª

intersection with the other lane are included in a cluster. Thus, a vehicle
||ùëÜùêæùëâ ,ùê∂ùêª ). Once these parameters are calculated, the ùëá ùê¥ sends

needs to find its neighboring vehicles moving on the same lane segment
ùëñ
the messages
ùëÄùë†ùëî3
= {ùëá ùêºùê∑‚àó, ùëá ùëÜ
ùëáùê¥, ùê∏
ùëÜùêæùëáùê¥,ùëâ
(ùëÜùêæùëâ ,ùê∂ùêª
, ùëá ùëÜ
ùëáùê¥)} and

towards the same direction almost with the same speed. In this way, a
ùëÄ ùë†ùëî
= {ùëá ùêº ùê∑‚àó
, ùëá ùëÜ
, ùê∏
ùëñ
(ùëÜùêæ
)} to ùëâ and ùê∂ùêª,

4	ùê∂ùêª
ùëáùê¥
ùëÜùêæùëáùê¥,ùê∂ùêª
ùëâùëñ ,ùê∂ùêª , ùëá ùëÜùëáùê¥	ùëñ

cluster head (ùê∂ùêª) will be selected among the members in each cluster. dynamic cluster will have a group of members as the vehicles. Next, a Now, every vehicle needs to securely communicate with their ùê∂ùêª in a
respectively, over the public channel.
Step 4: After receiving the message ùëÄùë†ùëî3 from the ùëá ùê¥, ùëâùëñ checks the timeliness of received timestamp ùëá ùëÜùëáùê¥ and if it is valid, ùëâùëñ decrypts

cluster.
ùê∏ùëÜùêæ
(ùëÜùêæùëâ ,ùê∂ùêª , ùëá ùëÜùëáùê¥) using the shared key ùëÜùêæùëáùê¥,ùëâ
with the ùëá ùê¥

Note that both the cluster head (ùê∂ùêª) and a vehicle, say ùëâ
in each
ùëáùê¥,ùëâùëñ	ùëñ  ‚Ä≤	ùëñ	‚Ä≤

ùëñ	as (ùëÜùêæùëâùëñ ,ùê∂ùêª , ùëá ùëÜùëáùê¥) = ùê∑ùëÜùêæùëáùê¥,ùëâ [ùê∏ùëÜùêæùëáùê¥,ùëâ (ùëÜùêæùëâùëñ ,ùê∂ùêª , ùëá ùëÜùëáùê¥)]. If ùëá ùëÜùëáùê¥ =

cluster have already established session keys ùëÜùêæùëáùê¥,ùê∂ùêª and ùëÜùêæùëáùê¥,ùëâ , re-
ùëñ
ùëõùëíùë§
‚àó  ùëñ	‚Ä≤

spectively, for their secure communication with the ùëá ùê¥
ùëñ
. For establishing
ùëá ùëÜùëáùê¥, ùëâùëñ calculates ùëá ùêºùê∑ùëñ	= ùëá ùêºùê∑ùëñ ‚äï‚Ñé(ùëá ùëÜùëáùê¥ ||ùëÜùêæùëáùê¥,ùëâùëñ ||ùëÜùêæùëâùëñ ,ùê∂ùêª ).
Next, ùëâùëñ updates ùëá ùêºùê∑ùëñ by the calculated ùëá ùêºùê∑ùëõùëíùë§ in its database and

a session key between the cluster head (ùê∂ùêª) and its member vehicle ùëâùëñ ,
the following steps need to be executed with the help of the ùëá ùê¥:
also stores the session key communication.
ùëñ
ùëÜùêæùëâùëñ ,ùê∂ùêª shared with the ùê∂ùêª for secret

Step 1: The initiator vehicle ùëâùëñ generates a current timestamp ùëá ùëÜùëñ
and sends a session key request message ùëÄùë†ùëî1 = {ùëá ùêºùê∑ùëñ , ùëá ùëÜùëñ } to its cluster head ùê∂ùêª via a public channel.
Step 5: After receiving the message ùëÄùë†ùëî4 from the ùëá ùê¥, ùê∂ùêª
also checks the timeliness of received timestamp ùëá ùëÜùëáùê¥ and
if  it  is  valid,  ùê∂ùêª  decrypts  ùê∏ùëÜùêæ	(ùëÜùêæùëâ ,ùê∂ùêª , ùëá ùëÜùëáùê¥) using

ùëáùê¥,ùê∂ùêª	ùëñ	‚àó

Step 2: After receiving the message ùëÄùë†ùëî1, the ùê∂ùêª validates the
timeliness of the received timestamp ùëá ùëÜùëñ . If it is valid, ùê∂ùêª gener-
the  shared  key  ùëÜùêæùëáùê¥,ùê∂ùêª  with  the  ùëá ùê¥  as  (ùëÜùêæùëâùëñ ,ùê∂ùêª , ùëá ùëÜùëáùê¥)
= ùê∑ùëÜùêæ	[ùê∏ùëÜùêæ	(ùëÜùêæùëâ ,ùê∂ùêª ,  ùëá ùëÜùëáùê¥)].  If  ùëá ùëÜ ‚àó  = ùëá ùëÜùëáùê¥,  ùê∂ùêª

ùëáùê¥,ùê∂ùêª
ùëáùê¥,ùê∂ùêª	ùëñ
ùëáùê¥

ates a current timestamp ùëá ùëÜùê∂ùêª and a random secret ùëüùê∂ùêª ‚àà ùëç ‚àó, and
proceeds to compute ùëá ùêºùê∑ùëõùëíùë§ = ùëá ùêºùê∑‚àó
‚äï‚Ñé(ùëá ùëÜ ‚àó
||ùëÜùêæùëáùê¥,ùê∂ùêª

ùëû	ùê∂ùêª
ùê∂ùêª
ùëáùê¥

encrypts (ùëá ùêºùê∑ùëñ, ùëá ùêºùê∑ùê∂ùêª , ùëá ùëÜùëñ , ùëüùê∂ùêª , ùëá ùëÜùê∂ùêª ) using the shared session	||ùëÜùêæùëâ ,ùê∂ùêª ). Finally, ùê∂ùêª updates ùëá ùêºùê∑ùê∂ùêª by the calculated ùëá ùêºùê∑ùëõùëíùë§
ùëñ	ùê∂ùêª

key ùëÜùêæùëáùê¥ùê∂ùêª with the ùëá ùê¥. After that ùê∂ùêª sends a request message
ùëÄùë†ùëî2 = {ùëá ùëÜùê∂ùêª , ùê∏ùëÜùêæùëáùê¥,ùê∂ùêª (ùëá ùêº ùê∑ùëñ , ùëá ùêº ùê∑ùê∂ùêª , ùëá ùëÜùëñ , ùëüùê∂ùêª , ùëá ùëÜùê∂ùêª )} to the
ùëá ùê¥ via public channel, where ùê∏ùêæ (‚ãÖ) denotes the symmetric encryp- tion using the shared key ùêæ.
Step 3: Once the message ùëÄùë†ùëî2 is received by the ùëá ùê¥, it checks the timeliness of timestamp ùëá ùëÜùê∂ùêª . If it is valid, the ùëá ùê¥ de-
in its database and also stores the session key ùëÜùêæùëâùëñ ,ùê∂ùêª shared with
ùëâùëñ for secret communication.
The summary of the extended scheme is briefed in Figure 5.

Security analysis

crypts ùê∏ùëÜùêæ
(ùëá ùêºùê∑ùëñ , ùëá ùêºùê∑ùê∂ùêª , ùëá ùëÜùëñ , ùëüùê∂ùêª , ùëá ùëÜùê∂ùêª ) using the shared

key ùëÜùêæ
ùëáùê¥,ùê∂ùêª
(ùëá ùêºùê∑ , ùëá ùêºùê∑
, ùëá ùëÜ , ùëü
, ùëá ùëÜ ‚Ä≤
) = ùê∑
In this section we analyze the security of proposed scheme. We show

ùëáùê¥,ùê∂ùêª as
ùëñ	ùê∂ùêª
ùëñ	ùê∂ùêª
ùê∂ùêª
ùëÜùêæùëáùê¥,ùê∂ùêª

ùê∏
ùëáùê¥,ùê∂ùêª
(ùëá ùêºùê∑ùëñ , ùëá ùêºùê∑ùê∂ùêª , ùëá ùëÜùëñ , ùëüùê∂ùêª , ùëá ùëÜùê∂ùêª )], where ùê∑ùêæ (‚ãÖ) denotes
the correctness of bilinear pairing based verification equation used in

the symmetric decryption using the shared key ùêæ. Next, the
ùëá ùê¥ checks the validity of ùëá ùëÜ ‚Ä≤	= ùëá ùëÜùê∂ùêª , and if this is valid,
section 4.4 and the correctness of session key computed by vehicle ùëâùëñ
and ùëá ùê¥. In the next subsection, we present an informal security analysis




Fig. 5. Summary of the extended scheme


of the scheme. And later, a formal security analysis using AVISPA is provided in 6.3.

Correctness proof

We provide below the correctness proof of our authentication, verifi- cation and key establishment phase that is described in Section 4.4 using the theorems 1 and 2.
Since the above equation holds, the message received from ùëâùëñ is valid.
Hence, the theorem follows.  ‚ñ°

session key computed by ùëá ùê¥ ‚à∂ ùëÜùêæùëáùê¥‚àíùëâùëñ , is same as the session key computed Theorem 2. During the key establishment phase, described in Section 4.4, by vehicle ùëâùëñ ‚à∂ ùëÜùêæùëâùëñ ‚àíùëáùê¥.
Proof. The session key computed by ùëá ùê¥ after successful authentication is ùëÜùêæùëáùê¥‚àíùëâùëñ = ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñùëâ1 ‚Äñùëâ ùëåùëñ ). And the session key computed by ùëâùëñ
after receiving authentication reply message is ùëÜùêæùëâ ‚àíùëáùê¥ = ‚Ñé(ùëÖùëíùëîùêºùê∑ ‚Äñùëâ ‚àó

Theorem	1. During	the	authentication	phase	described	in
Section 4.4, a vehicle ùëâùëñ sends authentication request message
‚Äñ(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥)).
ùëñ	ùëñ	1

{ùëá ùêºùê∑ùëñ , ùëâ ùêπùëñ , ùëâ ùê∫ùëñ , ùëâ ùêøùëñ , ùëü1 , ùëá ùëÜùëâ
ùëñ1
} to ùëá ùê¥. Authentication and verifica-
Now, we have,

tion is successful, if and only if the received message is valid.
Proof. ùëá ùê¥	receives	the	authentication	request	message
{ùëá ùêºùê∑ùëñ , ùëâ ùêπùëñ , ùëâ ùê∫ùëñ , ùëâ ùêøùëñ , ùëü1 , ùëá ùëÜùëâùëñ1 } from vehicle ùëâùëñ . Vehicle ùëâùëñ is au-
thenticated if the following equation holds:
ùëÜùêæùëáùê¥‚àíùëâùëñ = ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñùëâ1 ‚Äñùëâ ùëåùëñ )
= ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñùëâ1 ‚Äñ(ùëâ ùê∫ùëñ ‚àí ùëÖùëíùëîùêºùê∑ùëñ ))
= ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñùëâ1 ‚Äñ(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥
+ùëÖùëíùëîùêºùê∑ ‚àí ùëÖùëíùëîùêºùê∑ ))

‚àó	ùëÖùêº ùê∑‚àó
ùëñ	ùëñ

ùëí(ùëùùëüùëá ùê¥ ‚ãÖ (ùëÖùêº ùê∑ùëñ ) ‚ãÖ ùëÉ , ùëÉ ) = ùë£ùëíùëü	ùëñ
Now,
= ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñùëâ1 ‚Äñùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥).

ùë£ùëíùëü	ùëñ = ùëí(ùëÉ ùë¢ùëèùëáùê¥, ùëÉ )
ùëÖùêº ùê∑‚àó
ùëÖùêº ùê∑‚àó
ùëÜùêæùëâ ‚àíùëáùê¥ = ‚Ñé(ùëÖùëíùëîùêºùê∑ ‚Äñùëâ ‚àó‚Äñ(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥))

= ùëí(ùëùùëüùëá ùê¥ ‚ãÖ ùëÉ , ùëÉ )
= ùëí(ùëùùëüùëá ùê¥ ‚ãÖ ùëÉ , ùëÉ )
ùëñ
ùëÖùêº ùê∑‚àó ‚ãÖ1
= ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñ(ùëâ2 + ùëÖùëíùëîùêºùê∑ùëñ )‚Äñ(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥))
= ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñ(ùëâ1 ‚àí ùëÖùëíùëîùêºùê∑ùëñ + ùëÖùëíùëîùêºùê∑ùëñ )

= ùëí(ùëùùëüùëá ùê¥ ‚ãÖ ùëÉ ‚ãÖ ùëÖùêº ùê∑‚àó, ùëÉ ‚ãÖ 1)
= ùëí(ùëùùëüùëá ùê¥ ‚ãÖ (ùëÖùêº ùê∑‚àó) ‚ãÖ ùëÉ , ùëÉ ).
‚Äñ(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥))
= ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñùëâ1 ‚Äñùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥).



Since the above equations are equal to each other. Thus, the theorem follows. ‚ñ°
‚ÄñùëÖùêº ùê∑ùëñ ). For this the adversary can assume ùëü1 , ùëü2 but the adversary can-
not know ùëü‚àó, ùëÖùêº ùê∑ùëñ , ùëÖùëíùëîùêºùê∑ because the value of ùëü‚àó, ùëÖùêº ùê∑ùëñ , ùëÖùëíùëîùêºùê∑ de-

ùëñ	ùëñ	ùëñ	ùëñ

Informal security analysis

We analyze the proposed access control scheme informally in the following propositions, and show that our scheme is resilient against various known attacks.
Proposition 1. Proposed remote access control scheme is secured against replay attack.
Proof. Three messages are exchanged in our scheme to accomplish au- thentication and session key establishment. The first message is a regis-
tration reply message {ùëá ùêºùê∑ùëñ , ùëÖùëíùëîùêºùê∑ , ùëÖùëá ùêºùê∑ùëñ , ùëá ùëÜùëáùê¥ } which is sent from
pends on the long term secrets like ùêºùê∑ùëñ , ùëÉ ùëäùëñ . Therefore an adversary
cannot impersonate vehicle ùëâùëñ as the long term secrets are not known to
him.  ‚ñ°
Proposition 5. Proposed remote access control scheme is protected against privileged-insider attack.
Proof. During the registration phase described in Section 4.2, ùëâùëñ sends its pseudo identity ùëÖùêº ùê∑ùëñ to ùëá ùê¥ via public channel to get ùëÖùëíùëîùêºùê∑ùëñ , ùëÖùëá ùêºùê∑ùëñ , and temporary identity ùëá ùêºùê∑ùëñ . To perform insider attack, any privileged user of ùëá ùê¥ being an attacker gets to know the registration details ùëÖùêº ùê∑ùëñ . However, even if the attacker gets exposed to ùëÖùêº ùê∑ùëñ , he/she still does
not get to know anything about the real identity of the vehicle. Hence,

ùëñ	1

ùëá ùê¥ to ùëâùëñ . The second is during log in phase, where a vehicle sends an
authentication request message {ùëá ùêºùê∑ùëñ , ùëâ ùêπùëñ , ùëâ ùê∫ùëñ , ùëâ ùêøùëñ , ùëü1 , ùëá ùëÜùëâùëñ1 } to TA and third is an authentication reply message as {ùëÑùëñ, ùëâ2 , ùëâ3 , ùëâ4 , ùëá ùëÜùëáùê¥2 } sent to ùëâùëñ from ùëá ùê¥. All the messages include the current timestamp
ùëá ùëÜùëáùê¥1 , ùëá ùëÜùëâùëñ1 , ùëá ùëÜùëáùê¥2 . On receiving the messages, the receiver checks
the freshness of the message by finding the delay in the message. The delay in message is calculated by computing the difference in the re-
our scheme is protected against privileged insider attack.  ‚ñ°
Proposition 6. Proposed access control scheme is secured against ephemeral secret leakage (ESL) attack.
Proof. During authentication, verification and key establishment phase,
ùëá ùê¥ computes a session key as ùëÜùêæùëáùê¥‚àíùëâùëñ as ùëÜùêæùëáùê¥‚àíùëâùëñ = ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñùëâ1 ‚Äñùëâ ùëåùëñ )
and the vehicle computes a session key as ùëÜùêæùëâ ‚àíùëáùê¥ = ‚Ñé(ùëÖùëíùëîùêºùê∑ ‚Äñùëâ ‚àó ‚Äñ(ùëü2 ‚ãÖ

ceived timestamp and the current timestamp. To avoid replay attacks,
ùëÉ ùë¢ùëè
)). Both ùëÜùêæ
and ùëÜùêæ
ùëñ
ùëÖùëíùëî
ùëñ	1

ùëáùê¥
ùëáùê¥‚àíùëâùëñ
ùëâùëñ ‚àíùëáùê¥ depends on
ùêºùê∑ùëñ which is com-

we have considered a very small value Œîùëá ùëÜ as the difference in times-
tamp values. Hence, including the timestamp in every message assures
that the scheme is secured against replay attacks.  ‚ñ°
Proposition 2. Proposed remote access control scheme is secured against OBU physical capture attack.
Proof. During the vehicle registration phase described in Section 4.2,
ùëÇùêµùëàùëñ stores the credentials {ùëá ùêº ùê∑ùëñ , ùëâ ùê∑ùêº ùê∑ùëñ , ùëâ ùê∑ùëñ , ùëâ ùê¥ùëñ , ùëâ ùêµùëñ } in its mem- ory, and deletes {ùëÖùëíùëîùêºùê∑ , ùëÖùëá ùêºùê∑ùëñ } permanently from its memory. So if the adversary has physically stolen ùëÇùêµùëàùëñ of vehicle ùëâùëñ , he/she can extract all the credentials from ùëÇùêµùëàùëñ using power analysis attack. As
seen in the registration phase, ùëâ ùê∑ùêºùê∑ùëñ = ùëÖùëíùëîùêºùê∑ + ùêª (ùëÉ ùëäùëñ ‚Äñùëüùëñ ), ùëâ ùê∑ùëñ =
puted using long term secrets which are private key ùëùùëüùëá ùê¥ of ùëá ùê¥ and identity of the vehicle ùêºùê∑ùëñ . The session key also depends on short term secret values like ùëü3, ùëü2. Therefore an adversary needs both long term and
short term secrets to compute session key. If by any ways, an attacker manages to know short term secret values based on the CK-adversary model by [13] as discussed in the threat model, still he would need to
know the long term secrets ùêºùê∑ùëñ , ùëÉ ùëäùëñ to acquire the session key.  ‚ñ°
Proposition 7. Proposed access control scheme is secured against mas- querading attack.
Proof. During authentication, verification and key establishment phase,

ùëÖùëá ùêº ùê∑ ‚äï ‚Ñé(ùêº ùê∑
‚ÄñùëÉ ùëä
ùëñ
‚Äñùëü ), ùëâ ùê¥ = ‚Ñé(ùêºùê∑ ‚ÄñùëÖùëíùëî
‚Äñ‚Ñé(ùëü
‚ÄñùëÉ ùëä )), ùëâ ùêµ =
ùëá ùê¥ sends a message {ùëÑùëñ, ùëâ2 , ùëâ3 , ùëâ4 , ùëá ùëÜùëáùê¥2 } as authentication reply mes-

ùëñ	ùëñ
ùëñ	ùëñ	ùëñ
ùëñ	ùêºùê∑ùëñ	ùëñ	ùëñ	ùëñ
sage to vehicle ùëâùëñ . If an attacker A tries to launch a masquerade attack

‚Ñé(ùêºùê∑ùëñ ‚Äñùëüùëñ ‚ÄñùëÉ ùëäùëñ ) ‚äïùëÖùêºùê∑ùëñ . However, to retrieve secrets like ùëÖùëíùëîùêºùê∑ , ùëÖùëá ùê∑ùëñ
the adversary needs to know ùëüùëñ , ùêºùê∑ùëñ , ùëÉ ùëäùëñ . Therefore it can clearly be
concluded that the adversary cannot know any secret credentials by
ùëÇùêµùëàùëñ physical capture attack.  ‚ñ°
Proposition 3. Proposed remote access control scheme is secured against man-in-the-middle attack.
message {ùëá ùêºùê∑ùëñ , ùëâ ùêπùëñ , ùëâ ùê∫ùëñ , ùëâ ùêøùëñ , ùëü1 , ùëá ùëÜùëâùëñ1 } and tries to create another Proof. Assume that an adversary intercepts the authentication request
needs to calculate parameters like ùëÑùëñ , ùëâ2 etc. All the parameters in the he/she would try to forge the valid authentication reply. For that he reply message depends on secret values ùêºùê∑ùëñ , ùëùùëòùëá ùê¥. Moreover the session key is also depended on secret ùëÖùëíùëîùêºùê∑ùëñ . Hence it is clear that our scheme
can withstand masquerading attack as the attacker is incapable to create
a forged reply.  ‚ñ°
Proposition 8. Proposed access control scheme resists oÔ¨Ä-line identity guessing attack.

authentication request message as {ùëá ùêºùê∑ùëé, ùëâ ùêπ ùëé, ùëâ ùê∫ùëé, ùëâ ùêøùëé, ùëüùëé, ùëá ùëÜ ùëé }.

ùëñ	ùëñ
ùëñ	ùëñ  1
ùëâùëñ1
Proof. Let us assume that an attacker A traps the authentication request

To create request message, the adversary has to perform computations
like ùëâ ùëçùëñ = ùëâ ùê∑ùëñ‚äï ‚Ñé(ùëÖùêº ùê∑ùëñ ‚ÄñùëÉ ùëäùëñ ‚Äñùëü‚àó), ùëâ ùêπùëñ = ùëÖùêº ùê∑ùëñ‚äï ‚Ñé(ùëâ ùëçùëñ ‚Äñùëü1 ), ùëâ ùê∫ùëñ =
message {ùëá ùêºùê∑ùëñ , ùëâ ùêπùëñ , ùëâ ùê∫ùëñ , ùëâ ùêøùëñ , ùëü1 , ùëá ùëÜùëâùëñ1 }. Now if A wants to identify
ùêºùê∑ , he needs to compute it having known ùëâ ùëç . A cannot guess identity

ùëñ	ùëñ	ùëñ

ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥ +ùëÖùëíùëîùêºùê∑ùëñ , ùëâ ùêøùëñ = ‚Ñé(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥ ‚ÄñùëÖùêº ùê∑ùëñ ). For this the adversary
can generate two random nonces ùëü1 , ùëü2 . For computing ùëâ ùëçùëñ he needs to know ùëâ ùê∑ùëñ , ùëÖùêº ùê∑ùëñ , ùëÉ ùëäùëñ and ùëü‚àó. Let us also assume that he can extract
ùëâ ùê∑ùëñ from the memory of ùëÇùêµùëàùëñ as explained in 2, but he still cannot
using ùëâ ùêπùëñ and ùëâ ùêøùëñ as there are two low entropy parameters < ùêºùê∑ùëñ , ùëü2 >
which are impossible to be guessed in polynomial time. So the identity
cannot be guessed by trapping log in message. Now let us assume that
an attacker traps authentication reply message {ùëÑùëñ, ùëâ2 , ùëâ3 , ùëâ4 , ùëá ùëÜùëáùê¥2 }.

know ùëÖùêº ùê∑ùëñ , ùëü‚àó as it depends on secret ùêºùê∑ùëñ , ùëü1 and ùëÉ ùëäùëñ . Therefore it
would be impossible for an attacker to create authentication request
without knowing the secret values. Hence the scheme is secured against man-in-the-middle attack. ‚ñ°
Proposition 4. Proposed remote access control scheme is resilient against vehicle impersonation attack.
Proof. To impersonate a vehicle ùëâùëñ , and adversary A might try to in- tercept the authentication request message {ùëá ùêºùê∑ùëñ , ùëâ ùêπùëñ , ùëâ ùê∫ùëñ , ùëâ ùêøùëñ , ùëü1 ,
It is also noticeable from Section 4.4 that the value of ùëÑùëñ is relied on
ùêºùê∑ùëñ which is protected under hash functions. Hence it is impossible for
the attacker to guess the identity in polynomial time.  ‚ñ°
Proposition 9. Proposed access control scheme resists vehicle traceability attack.
Proof. We can easily prove that our scheme provides untraceability as a security requirement. During login phase (Section 4.3), a parameter
ùëá ùêºùê∑ is sent in the authentication request message. Then during verifica-

ùëá ùëÜ
ùëâùëñ1
} and creates another authentication request message as {ùëá ùêºùê∑ùëé,
ùëñ
tion and key establishment phase (in Section 4.4) Step 4, ùëá ùê¥ generates

ùëâ ùêπ ùëé, ùëâ ùê∫ùëé, ùëâ ùêøùëé, ùëüùëé, ùëá ùëÜ ùëé
}. To create request message, the adversary
a new identity ùëá ùêºùê∑ùëõùëíùë§ which is sent as parameter ùëâ
in authentica-

ùëñ	ùëñ
ùëñ  1
ùëâùëñ1
ùëñ	4

has to perform computations like ùëâ ùëçùëñ = ùëâ ùê∑ùëñ‚äï ‚Ñé(ùëÖùêº ùê∑ùëñ ‚ÄñùëÉ ùëäùëñ ‚Äñùëü‚àó),
ùëâ ùêπùëñ = ùëÖùêº ùê∑ùëñ‚äï ‚Ñé(ùëâ ùëçùëñ ‚Äñùëü1 ), ùëâ ùê∫ùëñ = ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥ +ùëÖùëíùëîùêºùê∑ùëñ , ùëâ ùêøùëñ = ‚Ñé(ùëü2 ‚ãÖ ùëÉ ùë¢ùëèùëáùê¥
and updates its old ùëá ùêºùê∑ùëñ with ùëá ùêºùê∑ùëõùëíùë§ after verifying the authenticity. tion reply message to the vehicle. Then in Step 6 the vehicle extracts



Hence in every session the parameter ùëá ùêºùê∑ùëñ is changed. Therefore, dy-
namic temporary identity supports untraceability in our access control
scheme.  ‚ñ°
Proposition 10. Proposed access control scheme provides forward and backward secrecy.
Proof. During key establishment phase, ùëá ùê¥ computes a session key as
Table 3
Comparative computational costs analysis

ùëÜùêæ
ùëáùê¥‚àíùëâùëñ
as ùëÜùêæ
ùëáùê¥‚àíùëâùëñ
= ‚Ñé(ùëÖùëíùëî
ùêºùê∑ùëñ
‚Äñùëâ1
‚Äñùëâ ùëåùëñ) and the vehicle computes
‚àó

a session key as ùëÜùêæùëâùëñ ‚àíùëáùê¥ = ‚Ñé(ùëÖùëíùëîùêºùê∑ùëñ ‚Äñùëâ1 ‚Äñ(ùëü2‚ãÖ ùëÉ ùë¢ùëèùëáùê¥)). Both ùëÜùêæùëáùê¥‚àíùëâùëñ
and ùëÜùêæùëâùëñ ‚àíùëáùê¥ depends on short term secret values like ùëü3, ùëü2. Therefore
an adversary if by any chance gets to know session key for a particular
as he needs to know ùëü3, ùëü2 to compute the session key. Therefore our session he still cannot compute session key for next and previous sessions
scheme offers perfect backward and forward secrecy.  ‚ñ°

Formal security verification using AVISPA tool: Simulation study

To formally analyze the security of the proposed access control scheme we have used the widely accepted simulation tool named as ‚ÄúAutomated Validation of Internet Security Protocols and Applications (AVISPA)‚Äù [6]. AVISPA has become the common tool that is used to ver- ify the security protocols based on various cryptographic techniques. The simulation process occurs in two steps. First, a formal language is used to specify the protocols and other security properties. Initially the protocol is coded in ‚ÄúHigh-Level Protocol Specification Language (HLPSL)‚Äù which is then transformed in ‚ÄúIntermediate Format (IF)‚Äù with the help of HLPSL2IF translator. Following to this in the second step, where the code is provided as input to any back-end of the tool which analyzes the security of the protocol.
The AVISPA tool consist of four back-ends:
‚ÄúOn-the-fly Model-Checker (OFMC)‚Äù
‚ÄúConstraint Logic based Attack Searcher (CL-AtSe)‚Äù
‚ÄúSAT-based Model-Checker (SATMC)‚Äù
‚ÄúTree Automata based on Automatic Approximations for the Analysis of Security Protocols (TA4SP)‚Äù.
The output or the result from the back-ends is displayed in the ‚ÄúOut- put Format (OF)‚Äù which is comprehended in different sections. In the first section called as ‚ÄúSUMMARY‚Äù the output displays whether the pro- tocol is ‚Äúsafe, unsafe, or inconclusive‚Äù. The second section called as ‚ÄúDE- TAILS‚Äù elaborates on the reason on why the protocol is summarized as ‚Äúsafe, unsafe or inconclusive‚Äù. The third section is ‚ÄúPROTOCOL‚Äù sec- tion that defines the ‚ÄúHLPSL specification of the target protocol in inter- mediate form‚Äù. Next, section is the ‚ÄúGOAL‚Äù which specifies the actual goal of the analysis of the protocol. And the last section displays the name of the back-end that is chosen to process the security analysis.
HLPSL implementation that consists of two basic roles of ùëá ùê¥, ùëâùëñ, the To analyze the security of our proposed scheme we have coded the
other compulsory roles of session and goal & environment. We have con- sidered the registration phase discussed in Section 4.2, log in phase dis- cussed in Section 4.3 and authentication, verification and key establish-
ment phase discussed in Section 4.4 where ùëá ùê¥ authenticates the vehicle
and both ùëá ùê¥ and vehicle compute a session key.
ting an active role to the intruder (ùëñ). All the public parameters are AVISPA detects the occurrence of attack while simulation by allot-
fed into the knowledge of the intruder, and the intruder can even im- itate all other roles. According to the ‚ÄúDolev-Yao (DY) threat model‚Äù
[21] discussed in Section 2, AVISPA simulation allows the intruder to ‚Äúeavesdrop, modify, delete, or insert messages during communication‚Äù. The broadly used ‚ÄúSecurity Protocol ANimator for AVISPA (SPAN)‚Äù tool
[7] is used to perform formal security verification simulation under the environment: ‚ÄúUbuntu 18.04.5 LTS having Memory: 7.7GiB, Processor:
Intel¬ÆCoreùëáùëÄ i7-8565U CPU @ 1.80GHz √ó 8, OS type: 64-bit, Disk:
966.1 GB‚Äù. The results of simulation of the proposed scheme is shown
in Figure 6 which shows the results using OFMC back-end. Thus we can





Table 4
Comparative communication costs analysis









Note: ùëõ: number of vehicles in the scheme of [2]


clearly state that the proposed access control scheme is secured against ‚Äúreplay and man-in-the-middle-attacks‚Äù.


Comparative analysis

The eÔ¨Éciency of the scheme can be asserted in terms of computa- tion and communication cost. The computation time is the total time taken by the all cryptographic techniques in the scheme to execute. And the communication cost is defined as the number of bits (messages) ex- changed during the execution of any scheme. In this section we calculate the communication, computation of our scheme and also compare it to other existing access control schemes. Later, we also compare all the schemes in terms of security and functionality features.


Computation costs comparison

The cryptographic techniques which are used in the schemes are ‚Äúel- liptic curve point multiplication‚Äù, an ‚Äúelliptic curve point addition‚Äù, a ‚Äúbilinear pairing operation‚Äù, a ‚Äúmodular exponentiation‚Äù, a ‚Äúone-way hash function‚Äù, a ‚Äúsymmetric key encryption/decryption‚Äù. We use the
notation ùëáùëíùëêùëö, ùëáùëíùëùùëé, ùëáùëèùëù, ùëáùëíùë•ùëù, ùëá‚Ñé and ùëáùëíùëõùëê‚àïùëëùëíùëê for each respectively. To
time for each operation. For ùëáùëíùëêùëö, ùëáùëíùëêùëé, ùëáùëèùëù, ùëáùëíùë•ùëù, ùëá‚Ñé and ùëáùëíùëõùëê‚àïùëëùëíùëê the exe- generalized and fair comparison we have considered specific estimated
cution time taken is 17.10 ms ([31]), 4.4 ms ([14]), 42.11 ms, 19.2 ms
([31]), 0.32 ms ([14]) and 0.32 ms, respectively.
The cryptographic operations during login, and authentication, ver- ification and key establishment phases (discussed in Sections 4.3 and 4.4) in our scheme, are ‚Äúelliptic curve point multiplication, elliptic curve
way hash function‚Äù. The total computation cost comes out to be 15ùëá‚Ñé+ point addition, bilinear pairing operation, modular exponentiation, one- 5ùëáùëíùëêùëö+ 3ùëáùëíùëêùëé+ ùëáùëèùëù+ ùëáùëíùë•ùëù. In Table 3, we have compared the computa-
tion costs of our scheme against existing schemes proposed by [17],
[38], [4], [2], [42] and [9]. Due to the use of bilinear pairings, our scheme requires more computational cost as compared to other existing schemes except the comparable computation cost as in [9]. However, it can be justified due to superior security and more functionality at- tributes provided by the proposed scheme as compared to existing com- peting schemes (see Table 5).







Table 5
Comparison of functionality & security features
Fig. 6. Simulation results of AVISPA under OFMC and CL-AtSe backends


Note: ùêπ1: ‚Äúresilience against on-broad unit physical capture attack‚Äù; ùêπ2: ‚Äúinsider attack‚Äù; ùêπ3: ‚Äúreplay attack‚Äù; ùêπ4: ‚Äúman-in-the-middle attack‚Äù; ùêπ5: ‚Äúmutual authentication‚Äù; ùêπ6: ‚Äúremote registration‚Äù ùêπ7: ‚Äúkey agreement‚Äù; ùêπ8: ‚Äúimpersonation attack‚Äù; ùêπ9: ‚Äúformal security verification using AVISPA tool‚Äù; ùêπ10: ‚Äú vehicle addition phase‚Äù; ùêπ11: ‚Äúuser password and/or biometric update phase‚Äù.
: ‚Äúa scheme is secure or assists a feature‚Äù; √ó: ‚Äúa scheme is insecure or does not assist a feature‚Äù.




Communication costs comparison

As stated before the number of messages or number of bits exchanged during the execution of the scheme is said to be its communication overhead. To calculate this, we have considered some standard value to fairly compare all the schemes. The assumed value of ‚Äúone-way cryp- tographic hash function‚Äù is considered as 256 bits. For ECC techniques we have considered 160 bits cryptosystem. Therefore, an elliptic curve
point ùëÉ = (ùëÉùë•, ùëÉùë¶) is (160 + 160) = 320 bits, where ‚ÄúùëÉùë• and ùëÉùë¶ are the
ùë• and ùë¶ co-ordinates of the point ùëÉ ‚Äù. Further, a ‚Äúvehicle‚Äôs real iden-
tity, random nonce and timestamp‚Äù are taken as 160, 160 and 32 bits,
respectively. For a ‚Äúsymmetric key encryption/decryption (for exam- ple, if the Advanced Encryption Standard (AES-128) is used), the plain- text/ciphertext block size‚Äù will become 128 bits.
The authentication process in our scheme, is accomplished by ex- changing two messages. The first message is authentication request mes-
In Table 4, we have compared the communication costs of our scheme against existing schemes proposed by [17], [38], [4], [2],
[42] and [9]. It is noticed that the proposed scheme requires compa- rable communication cost as in [9]. However, the communication cost in the proposed scheme is low as compared to other remaining existing schemes as shown in Table 4.

Security and functionality features comparison

The comparative analysis on ‚Äúsecurity and functionality‚Äù features among the proposed scheme and other schemes proposed is provided in Table 5. We have considered few security and functionality features like resilience against ‚Äúon-broad unit physical capture attack‚Äù, ‚Äúinsider attack‚Äù ‚Äúreplay attack‚Äù, ‚Äúman-in-the-middle attack‚Äù. Other features like ‚Äúmutual authentication‚Äù, ‚Äúremote registration ‚Äù, ‚Äúkey agreement‚Äù, im-

sage {ùëá ùêºùê∑ùëñ, ùëâ ùêπùëñ, ùëâ ùê∫ùëñ, ùëâ ùêøùëñ, ùëü1, ùëá ùëÜùëâ
ùëñ1
} from ùëâùëñ to ùëá ùê¥. This message takes
personation attack‚Äù, ‚Äúformal security verification using AVISPA tool,
‚Äúdynamic vehicle addition phase, ‚Äú password update phase‚Äù. And it can

a total of 160 + 256 + 320 + 160 + 32 = 928 bits. The second message is authentication reply message as {ùëÑùëñ, ùëâ2, ùëâ3, ùëâ4, ùëá ùëÜùëáùê¥2 } to ùëâùëñ which takes a total of 256 + 320 + 320 + 256 + 32 = 1184 bits. The total communica-
tion overhead of our scheme is 2112 bits.
be clearly seen that our scheme excels in security and functionality fea- tures than other schemes. In Table 5, we have considered ‚úì: if ‚Äúa scheme
is secure or assists a feature‚Äù and √ó: if ‚Äúa scheme is insecure or does not
assist a feature‚Äù.


Fig. 7. Performance analysis of all schemes for communication costs in terms of number of
messages (assume ùëõ = 1 in [2])















Fig. 8. Performance analysis of all schemes for
(assume  ùëõ  =  1  in  [2]) communication costs in terms of number of bits















Fig. 9. Performance analysis of all schemes for computational costs



















For overall comparison, we present the computation cost, commu- nication costs in bits and number of messages in Figures 7, 8 and 9, respectively. It can be seen that schemes like [38] and [42] have very low computation costs, but the communication cost is too high. In com- parison to this, our scheme shows a little more computation cost because of bilinear pairing but it uses minimum number of messages exchange to achieve mutual authentication and thus gives a tough competition in terms of communication cost to other schemes. In addition, our scheme excels in security and functionality features than other schemes.

Conclusion and future work

In this paper, we designed a remote access control mechanism as a
our scheme ùëá ùê¥ initially authenticates a vehicle before allowing it to be a countermeasure to security issues in smart transportation. According to part of the network. Further the authenticated vehicle and ùëá ùê¥ compute
tion phase where any new vehicle can easily be registered via ùëá ùê¥. Our a session key to communicate securely. We also propose a vehicle addi-
scheme also facilitates password update phase which allows vehicles to change their passwords if it is stolen or breached. Later, we analyze the security of our scheme informally and formally using AVISPA simulation to show that it can resist various well known attacks. Finally, a com- prehensive performance analysis shows the competency of our scheme against other existing schemes in terms of computation, communication costs. The comparison in security and functionality features shows that our scheme is superior to most of the existing schemes.
In recent years, the lattice-based cryptographic techniques are ap- plied in many networking environments due to its superior security as compared to the traditional public key cryptosystems as they are quan- tum resistant against various attacks as pointed out by [15] for designing ‚Äúlattice-based secure cryptosystem for smart healthcare in smart cities‚Äù. Hence, in future we would like to explore to design more eÔ¨Écient and secure system for IoV based on the lattice-based cryptography.

Declaration of Competing Interest

The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.

CRediT authorship contribution statement

Palak Bagga: Conceptualization, Methodology, Software, Data cu- ration, Writing ‚Äì original draft. Ashok Kumar Das: Conceptualiza- tion, Methodology, Writing ‚Äì review & editing, Visualization, Supervi- sion, Project administration. Joel J.P.C. Rodrigues: Conceptualization, Writing ‚Äì review & editing, Visualization, Supervision, Funding acqui- sition.

Acknowledgments

This work was supported by FCT/MCTES through national funds and when applicable co-funded EU funds under the Project UIDB/50008/2020; and by the Brazilian National Council for Research and Development (CNPq) via Grant No. 313036/2020-9. The authors would like to thank the anonymous reviewers, associate editor and editor-in-chief for their valuable feedback on the paper.
References

O.Y. Al-Jarrah, C. Maple, M. Dianati, D. Oxtoby, A. Mouzakitis, Intrusion detection systems for intra-vehicle networks: A review, IEEE Access 7 (2019) 21266‚Äì21289.
M.A. Al-Shareeda, M. Anbar, I.H. Hasbullah, S. Manickam, S.M. Hanshi, EÔ¨Écient conditional privacy preservation with mutual authentication in vehicular ad hoc net- works, IEEE Access 8 (2020) 144957‚Äì144968, doi:10.1109/ACCESS.2020.3014678.
S.A. Alfadhli, S. Lu, K. Chen, M. Sebai, MFSPV: A multi-factor secured and lightweight privacy-preserving authentication scheme for VANETs, IEEE Access 8 (2020) 142858‚Äì142874, doi:10.1109/ACCESS.2020.3014038.
T. Alladi, S. Chakravarty, V. Chamola, M. Guizani, A lightweight authentication and attestation scheme for in-transit vehicles in iov scenario, IEEE Transactions on Ve- hicular Technology 69 (2020) 14188‚Äì14197, doi:10.1109/TVT.2020.3038834.
M.N. Aman, U. Javaid, B. Sikdar, A privacy-preserving and scalable authentication protocol for the internet of vehicles, IEEE Internet of Things Journal 8 (2021) 1123‚Äì 1139, doi:10.1109/JIOT.2020.3010893.
AVISPA, Automated validation of internet security protocols and applications, 2019a, http://www.avispa-project.org/.Accessed on January 2020.
AVISPA, SPAN, the security protocol ANimator for AVISPA, 2019b, http://www.avispa-project.org/. Accessed on January 2019.
M. Azees, P. Vijayakumar, L.J. Deboarh, EAAP: EÔ¨Écient anonymous authentication with conditional privacy-preserving scheme for vehicular ad hoc networks, IEEE Transactions on Intelligent Transportation Systems 18 (2017) 2467‚Äì2476.
P. Bagga, A.K. Das, M. Wazid, J.J.P.C. Rodrigues, K.K.R. Choo, Y. Park, On the design of mutual authentication and key agreement protocol in internet of vehicles-enabled intelligent transportation system, IEEE Transactions on Vehicular Technology 70 (2021) 1736‚Äì1751, doi:10.1109/TVT.2021.3050614.
P. Bagga, A.K. Das, M. Wazid, J.J.P.C. Rodrigues, Y. Park, Authentication protocols in internet of vehicles: Taxonomy, analysis, and challenges, IEEE Access 8 (2020) 54314‚Äì54344, doi:10.1109/ACCESS.2020.2981397.
M. Bayat, M. Barmshoory, M. Rahimi, M.R. Aref, A secure authentication scheme for VANETs with batch verification, Wireless Networks 21 (2015) 1733‚Äì1743.
D. Boneh, Pairing-based cryptography: Past, present, and future, in: International Conference on the Theory and Application of Cryptology and Information Security (ASIACRYPT‚Äô12), Beijing, China, 2012, p. 1.
R. Canetti, H. Krawczyk, Analysis of key-exchange protocols and their use for build- ing secure channels, in: Advances in Cryptology ‚Äì EUROCRYPT, Springer Berlin Hei- delberg, Innsbruck (Tyrol), Austria, 2001, pp. 453‚Äì474.
S. Challa, M. Wazid, A.K. Das, N. Kumar, A. Reddy, E.J. Yoon, Y. Kee-Young, Secure signature-based authenticated key establishment scheme for future iot applications, IEEE Access 5 (2017) 3028‚Äì3043.
R. Chaudhary, A. Jindal, G.S. Aujla, N. Kumar, A.K. Das, N. Saxena, LSCSH: Lat- tice-based secure cryptosystem for smart healthcare in smart cities environment, IEEE Communications Magazine 56 (2018) 24‚Äì32.
K.K. Chauhan, S. Kumar, S. Kumar, The design of a secure key management system in vehicular ad hoc networks, in: 2017 Conference on Information and Communication Technology (CICT), Gwalior, India, 2017, pp. 1‚Äì6.
C.M. Chen, B. Xiang, Y. Liu, K.H. Wang, A secure authentication protocol for internet of vehicles, IEEE Access 7 (2019) 12047‚Äì12057, doi:10.1109/AC- CESS.2019.2891105.
J. Cui, D. Wu, J. Zhang, Y. Xu, H. Zhong, An eÔ¨Écient authentication scheme based on semi-trusted authority in VANETs, IEEE Transactions on Vehicular Technology 68 (2019) 2972‚Äì2986.
A.K. Das, A random key establishment scheme for multi-phase deployment in large-s- cale distributed sensor networks, International Journal of Information Security 11 (2012) 189‚Äì211.
A.K. Das, B. Bruhadeshwar, An improved and effective secure password-based au- thentication and key agreement scheme using smart cards for the telecare medicine information system, Journal of Medical Systems 37 (2013) 9969.
D. Dolev, A. Yao, On the security of public key protocols, IEEE Transactions on Information Theory 29 (1983) 198‚Äì208.
A. Dua, N. Kumar, A.K. Das, W. Susilo, Secure message communication protocol among vehicles in smart city, IEEE Transactions on Vehicular Technology 67 (2018) 4359‚Äì4373.
W. Fu, X. Xin, P. Guo, Z. Zhou, A practical intrusion detection system for internet of vehicles, China Communications 13 (2016) 263‚Äì275, doi:10.1109/ CC.2016.7733050.
L. Gafencu, L. Scripcariu, Security issues in the internet of vehicles, in: 2018 In- ternational Conference on Communications (COMM), Bucharest, Romania, 2018,
pp. 441‚Äì446.
N.B. Gayathri, G. Thumbur, P.V. Reddy, Z.U.R. Muhammad, EÔ¨Écient pairing-free certificateless authentication scheme with batch verification for vehicular ad-hoc networks, IEEE Access 6 (2018) 31808‚Äì31819.
X. Guo, C. Chen, C. Gong, F. Leu, A secure oÔ¨Écial vehicle communication proto- col for VANET, in: 2016 10th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS), Fukuoka, Japan, 2016, pp. 482‚Äì 485.
N. Gupta, R. Manaswini, B. Saikrishna, F. Silva, A. Teles, Authentication-based se- cure data dissemination protocol and framework for 5g-enabled VANET, Future In- ternet 12 (2020).
H.J. Jo, I.S. Kim, D.H. Lee, Reliable cooperative authentication for vehicular networks, IEEE Transactions on Intelligent Transportation Systems 19 (2018) 1065‚Äì1079.
M.S. Kakkasageri, S.S. Manvi, Multiagent driven dynamic clustering of vehicles in VANETs, Journal of Network and Computer Applications 35 (2012) 1771‚Äì 1780.
J.B. Kenney, Dedicated short-range communications (DSRC) standards in the united states, Proceedings of the IEEE 99 (2011) 1162‚Äì1182.
C.C. Lee, C.T. Chen, P.H. Wu, T.Y. Chen, Three-factor control protocol based on ellip- tic curve cryptosystem for universal serial bus mass storage devices, IET Computers & Digital Techniques 7 (2013) 48‚Äì56.
C. Li, S. Ji, X.Z.H.W.D. Li, H. Liu, An effective and secure key management protocol for message delivery in autonomous vehicular clouds, 2018, 18.
J. Li, H. Lu, M. Guizani, ACPN: A novel authentication framework with conditional privacy-preservation and non-repudiation for VANETs, IEEE Transactions on Parallel and Distributed Systems 26 (2015) 938‚Äì948.



K. Lim, K.M. Tuladhar, X. Wang, W. Liu, A scalable and secure key distribution scheme for group signature based authentication in VANET, in: 2017 IEEE 8th Annual Ubiquitous Computing, Electronics and Mobile Communication Conference (UEMCON), New york, USA, 2017, pp. 478‚Äì483.
J. Liu, Q. Li, R. Sun, X. Du, M. Guizani, An eÔ¨Écient anonymous authentication scheme for internet of vehicles, in: IEEE International Conference on Communica- tions (ICC), Kansas City, MO, USA, 2018, pp. 1‚Äì6.
Y. Liu, Y. Wang, G. Chang, EÔ¨Écient privacy-preserving dual authentication and key agreement scheme for secure v2v communications in an iov paradigm, IEEE Transactions on Intelligent Transportation Systems 18 (2017) 2740‚Äì
2749.
A. Menezes, An introduction to pairing-based cryptography, 2013, (????). Accessed on May 2020.
M. Sadri, M. Rajabzadeh Asaar, A lightweight anonymous two-factor authentication protocol for wireless sensor networks in internet of vehicles, International Journal of Communication Systems 33 (2020) e4511, doi:10.1002/dac.4511.
J. Shao, X. Lin, R. Lu, C. Zuo, A threshold anonymous authentication protocol for VANETs, IEEE Transactions on Vehicular Technology 65 (2016) 1711‚Äì1720.
S. Sharma, B. Kaushik, A survey on internet of vehicles: Applications, se- curity issues & solutions, Vehicular Communications 20 (2019) 100182, doi:10.1016/j.vehcom.2019.100182.
A.K. Sutrala, P. Bagga, A.K. Das, N. Kumar, J.J.P.C. Rodrigues, P. Lorenz, On the design of conditional privacy preserving batch verification-based authentication scheme for internet of vehicles deployment, IEEE Transactions on Vehicular Tech- nology 69 (2020) 5535‚Äì5548, doi:10.1109/TVT.2020.2981934.
H. Vasudev, V. Deshpande, D. Das, S.K. Das, A lightweight mutual authentication protocol for v2v communication in internet of vehicles, IEEE Transactions on Vehic- ular Technology 69 (2020) 6709‚Äì6717.
M. Wazid, P. Bagga, A.K. Das, S. Shetty, J.J.P.C. Rodrigues, Y.H. Park, Akm-iov: Authenticated key management protocol in fog computing-based internet of vehicles deployment, IEEE Internet of Things Journal (2019) 1.
L. Wu, Q. Sun, X. Wang, J. Wang, S. Yu, Y. Zou, B. Liu, Z. Zhu, An eÔ¨Écient privacy-p- reserving mutual authentication scheme for secure v2v communication in vehicular ad hoc network, IEEE Access 7 (2019) 55050‚Äì55063.
B. Ying, A. Nayak, Anonymous and lightweight authentication for secure vehicu- lar networks, IEEE Transactions on Vehicular Technology 66 (2017) 10626‚Äì10636, doi:10.1109/TVT.2017.2744182.
S. Yu, J. Lee, K. Lee, K. Park, Y. Park, Secure authentication protocol for wireless sensor networks in vehicular communications, Sensors 18 (2018).
H. Zhong, J. Wen, J. Cui, S. Zhang, EÔ¨Écient conditional privacy-preserving and authentication scheme for secure service provision in VANET, Tsinghua Science and Technology 21 (2016) 620‚Äì629, doi:10.1109/TST.2016.7787005.
