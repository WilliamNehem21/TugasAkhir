

Electronic Notes in Theoretical Computer Science 253 (2009) 33–44
www.elsevier.com/locate/entcs

An MX /G/1 Energetic Retrial Queue with Vacations and it’s Control
Amar Aissani
University of Science and Technology Houari Boumediene (USTHB), BP.32, El Alia, Bab Ez Zouar,16111, Algeria

Abstract
In this note, we present some results about the MX /G/1 retrial queue with vacations. Retrial times are governed by an arbitrary probability law which is independent of the number of customers in the retrial group. We consider an energetic interpretation in the sense that the service of a customer requires not only a random time, but also a random amount of energy with arbitrarily probability distribution. The server is turned off and takes a vacation when the system becomes empty. The random energy required for each vacation is also arbitrary distributed. We derive a stochastically recursive relation which can be used as a discrete-event simulation algorithm for our queue. Next, we give an explicit formula for the generating function of the number of customers in orbit in steady state and exhibit explicit forms of stochastic decomposition property. Finally, we show how to obtain performance measures of interest and optimal control parameters for vacation and retrial policies.
Keywords: Retrial queues, vacations , batch arrivals , energetic interpretation , optimal control , stochastic decomposition.

Introduction
Queueing systems are valuable tools for modeling communication and transporta- tion networks, production lines, operating systems, transportation networks etc. The server represents access of customers to resources and queue capacity model resource restrictions and storage before service. In classical models, an arrival find- ing the server blocked (busy or out of order) joins a queue with a certain service discipline (FIFO,LIFO or RANDOM) or is considered to be lost unit (Erlang model). Two interesting directions of research have been introduced in relation with the evolution of actual technologies. The first one considers that an arrival who finds the server busy joins a retrial group or an ”orbit” (a sort of queue for secondary sources) and repeats successively his attempt until the server is able to provide service. Otherwise, if the server is available the arriving customer begins service immediately. Such models are called systems with repeated calls or retrial queues
[10], [6].



1571-0661 © 2009 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2009.10.004

The model with vacation (removable or mobile server) is another kind of model extensively studied in the literature, earlier in relation with production systems [9]. The server can be turned off and takes a vacation of random length whenever the system is empty. The server is turned on when the accumulation of units in the system is greater than a fixed threshold N or after a fixed period of time T . Managers introduced vacation periods into the models in order to model the idle time for secondary tasks (preventive maintenance, priority jobs, battery recharge, security actions etc.).
Several practical studies following system analysis principles use similar queuing models with or without vacations.
Example 1.1 [Battery Power Management in Wireless Mobile [16].] In wireless technologies (ad hoc networks, wireless Internet devices, Radio Frequency Identification Devices) many mostly dormant mobile nodes, which are powered by batteries communicate with each other. In an effort to conserve energy, mobile hosts wake up periodically to serve incoming traffic. Energy can be conserved by operating the mobiles in an intermittent fashion.More precisely, the mobile (or the battery) is allowed to go on vacation for calibrating amount of time i.e. allowing idle times for the battery to recharge itself. So, the battery life can be increased in the sense that the number of served customers increases. However, it would not be energy efficient to be awake when they are not receiving any data. This gives rise to a trade-off between energy consumption and delay or between energy efficiency (energy spent in serving packets) and capture rate (fraction of arrivals when the receiver is awake). In these works, it is often assumed that each transmitted packet (i.e. customer, in the language of Queuing theory) consumes energy proportionally to the packet size ( or transmission bit rate, wireless link design etc.) with a speed of unity. In this study the consumption speed is given by some nominal values which can be different (greater or smaller) of unity. We can refer also to more sophisticated models using dynamic programming to maximize quality of service subject to an upper bound on the long-run average power consumption [7].
Example 1.2 [Transfer Control Protocol (TCP)in Internet [15].] When the scheduler makes allocation elsewhere the server takes a vacation. This idea is used in [15] to model TCP performance in Wireless IP Networks.
Example 1.3 [PCS Call-Terminating Control [18].] Schemes for re forward- ing call-terminating SETUP messages from a network (or a cell station)are used to guard against their loss, which would make it impossible to set up calls. The vaca- tion protocol corresponds to the fact that messages registered in the paging-channel queue in a cell station are cyclically forwarded to the wireless area, while retrial phenomena corresponds to the case in which the SETUP messages are forwarded when a response message is not received by the network.
Example 1.4 [Paging Channel Overload or Attacks on Cellular Network [17].] The paging channel at a base station is represented as a queuing system with N + 1 queues where N is the number of slots of the paging channels i.e. N = 32 or N = 64 in Code Division Multiple Access (CDMA) network each cell identified by

a base station operates on 64 Walsh codes). Among the queues, N of them are used to store slotted messages and one is for non-slotted messages. The system approach used here is that the vacation state corresponds to the service of slotted traffic in the actual system. In that work, retrial and energy parameters are neglected.
In the following section, we provide a more detailed description of our model. Section 3 is devoted to the presentation of the basic stochastic process describ- ing the dynamic of our queue. This low-level formalism uses general distributions (rather than exponential distributions) to describe atomic events. We provide also a discrete-event simulation algorithm of the system. In section 4, we give the joint distribution of server state and orbit length in steady state and an explicit formula for the generating function of the system size distribution. Although these expres- sions seem to be cumbersome, they allow to obtain the mean performance measures (mean system size, mean waiting time, etc.) in a simple way. So, they can be used for example, for testing more sophisticated tools, by comparison. In section 5, we exhibit an explicit form of the stochastic decomposition property showing the effect of vacations and retrials. This is another simplifying property of the model and we show how it is useful in order to derive some mean performance measures. Optimal control of vacation and retrial policies appear in sections 6 and 7. Finally, we give a numerical example in section 8 showing how to use the presented results for the design of the system. All the proofs are omitted here since they are similar to that of [3].
Model Description and Notations
Primary customers arrive at a single server according to a compound Poisson process with rate λ > 0. The number of primary (fresh)customers in an arriving batch at an arrival epoch follows an arbitrary discrete distribution {Gi,i ≥ 1} with generating
function G(z) = Σ∞ Gizi and kth factorial moment gi = G(k)(1)(gi ≥ 0 for

∞
i=0
gi = 1). If the server is busy or in vacation at an arrival epoch, then the whole

batch joins the retrial group (of infinite capacity), whereas if the server is idle, then one of the arriving units starts service and the rest joins the retrial group . Any customer accepted for service upon arrival or on retrial leaves the system forever after service completion. The policy to access the server from orbit is governed by an arbitrary probability distribution R(x) = P (τ ≤ x), where τ is the random
time to retrial. We denote by r(s) = E(e−sτ ) the corresponding Laplace-Stieltjes transform, and r1, r2 the first moments. If R(x) = 1 −e−νx, we obtain the so-called
”Constant retrial policy” , studied in [5]. An example of a system under such a policy is the model in which the server is required to search for customers [6]. Let Sn be the amount of work to service n−th customer. We assume that the sequence
{Sn,n ≥ 1} consists of independent identically distributed random variables with common distribution function H(x) = P (S < x),H(0+) = 0 on R+, and Laplace- Stieltjes transform h(s) = E(e−sx), Re(s) ≥ 0; first order moments are denoted by h1 and h2. Under the energetic interpretation, the server works with a power or

speed α > 0. If at time t a primary or secondary customer arrives with a required work x, and if the server is free, then the service will be completed at time t + x/α. We assume that the server leaves for a vacation of random length whenever the system becomes empty. A single vacation requires work which is a nonnega- tive random variable V with speed β. The distribution function V (x) = P (V < x),V (0+) = 0 , has Laplace-Stieltjes transform ν(s) = E(e−V x), Re(s) ≥ 0 , and
first order moments ν1 and ν2. At the end of a vacation, the server inspects the
system and decides whether to take another vacation or begin service of some cus- tomer if any. The most popular vacation policy is the so-called N−policy. The server takes repeated vacations of the same length (or work in our energetic lan- guage) unless there are at least N units waiting in the system upon returning from vacations. Once it starts service, the server continues the service until all units are served. Under the T−vacation policy, the server is activated whenever the cumu- lated work reaches the level T (in the usual interpretation, the activation of the
server starts after a random time of T˜ units after the end of the busy period). As
usual, we assume that inter arrival period, batch sizes, retrial times, service times and vacations times are mutually independent.
Discrete-Event Simulation Algorithm
In this section, we present some results which can be useful for practitioners in order to solve some modelling problems similar to that of Examples 1.1 – 1.4. First, we present a recursive algorithm which can be used to simulate sample paths of the system under study, and then statistically estimate the considered performance measures. In section 4, we give another way to estimate these measures using transform method.
Let {N (t),t ≥ 0} be the number of customers in orbit at time t which represents a stochastic process on the discrete space of nonnegative natural integers N and let C(t) be a random variable taking discrete values: C(t) = 0 (resp.C(t) = 1, C(t) = 2) if the server is free (resp.busy ,on vacation) at time t.
Let ξ(t) be a positive random variable which represents residual retrial time (resp. residual work of customer in service , residual vacation work ) if at time t the server is idle (resp. busy or on vacation). With this additional information, the stochastic process ζ(t) = {C(t),N (t), ξ(t)} becomes a Markovian process defined on the state space E = {0, 1, 2}⊗ N ⊗ R+.
Let {γn,n ≥ 1} be the sequence of successive epochs at which either a service completion occurs or a vacation period ends. Next denote by Xn = (Cn, Nn),n ≥ 1 the sequence of successive states of the system at these epochs where Cn = C(γn+) and Nn = C(γn+). It is not difficult to see that the sequence {Xn,n ≥ 1} forms a Markov chain defined on the state space S = {1, 2}⊗N since it satisfies the following recursive equation


(1)

Xn+1

= (C


n+1

, Nn+1
) =	(2, Wn+1)	if Nn+1 = 0 
(1, Nn − ηn+1Bn+1 − 1+ ηn  if Nn ≥ 1

where Wn+1 is the counting process of primary customers who arrive during the nth cycle (γn, γn+1) if it is a vacation period, Bn+1 = 1 or 0, according whether the customer who leaves the system at time γn+1 comes from the orbit or not, Un+1 is the counting process of primary customers who arrive during the service time which ends at time γn+1 , and ηn+1 is the size of the first batch that arrive after γn+1 . Note also that {N (t),t ≥ 0} is a semi-regenerative process with embedded Markov renewal process (X, γ) = {Xn, γn,n ≥ 1} [19].
Remark 3.1 The stochastic equation (1) gives a recursive algorithm for the simu- lation of sample paths of the process ζ(t) = {C(t),N (t), ξ(t)}. This discrete-event simulation technique allows to compute statistical estimates (mean system size, mean waiting time...) of any performance metric of interest from sample paths of the process. For example, if we have generated m samples (using the corresponding RANDOM generators), the estimate of the mean orbit size can be computed as
E(Nn) ≈  1 Σm  Ni,n,where Ni,n is the ith observed value of the orbit size at time

This technique allows to obtain the considered metrics both in transient regime or in stationary regime. Moreover, this idea can be used to simulate more complex systems. For example, the stochastic equation (1) can be derived under more gen- eral assumptions when the sequence of service works and vacation works are only stationary and ergodic sequences (without the independence assumption); see for example [14].
Note finally, that this equation remains valid for other retrial protocols consid- ered in the literature. Indeed, we can allow a linear retrial protocol (the retrial rate depends linearly on the number of customers in orbit) or a versatile retrial protocol (a combination of the above two retrial protocols).
In the following section, we give another point of view for computing the mean performance measures in a very simple way. However, such a method runs only for the stationary regime.
Let ρ denotes the traffic intensity where

(2)
1 − r(λ)
ρ =	(g
— 1) + λg	h1

r(λ)	1	1 αr(λ)
It can be shown that ρ < 1 is a necessary and sufficient condition for convergence of the above stochastic algorithm, in the following sense.
Theorem 3.2 If ρ < 1, then the recursive sequence {Xn,n ≥ 1} converges as n → ∞ (almost surely) to a stationary variable X = (C, N ), which is independent of the initial state. As a consequence the initial basic stochastic process {ζ(t),t ≥ 0} is ergodic.
The Distribution of the System Size
We are interested in the limiting behavior of the queueing process {ζ(t); t ≥ 0} at stationary point of time. The limiting probabilities

Pi(m, x) = limt→∞ P{C(t) = i, N (t) = m; ξ(t) < x},i = 0, 1, 2; m ≥ 0; x ≥ 0 represent the joint distribution of the server state, the number of customers in
orbit and the remaining work in progress (retrial, service or vacation). From this distribution we can extract the marginal distribution of system size (i.e the number of customers in the system). From theorem 3.2., the steady-state probabilities exists if and only if the stability condition ρ < 1 is satisfied. So, this condition is assumed to hold from now.
In order to formulate the result of this section, we introduce the partial gener-
ating functions
Qi(z, x) = limt→∞ E(zN(t); C(t) = i, ξ(t) < x) = Σ∞	ziPi(m, x),i = 0, 1, 2; x ≥
0.
and the Laplace transforms
fi(z, s) = ∫ ∞ e−sxQi(z, x)dx, i = 1, 2;  z  ≤ 1; Re(s) ≥ 0.
Denote also by Pm = limt→∞ P (M (t) = m) the steady-state probability distri- bution of the number of customers in the system at an arbitrary point.
Theorem 4.1 If ρ < 1 , then
the joint distribution of the server state, the number of customers in orbit and the remaining works (retrial, service or vacation) is determined by its transform
zφ(ν( λ−λG(z) ) − 1) × (r(λ)−r(s)) ×   λ	

(3)
f (z, s) =	β
s(s−λ)
1−r(λ)


0	(λ + δ)z − (δ + λG(z))h( λ−λG(z) )


(4)
f1(z, s) = 
λG(z)+ δ z
h( λ−λG(z) ) − h(s) (	) 	α	
s(αs − λ + λG(z))
ν( λ−λG(z) ) − ν(s)

(5)
where
(6)
and the constants
f2(z, s) = φ 	α	
s βs − λ	λG z

φr(λ)(ν( λ−λG(z) ) − 1)
Q0(z, ∞) = 	β	 ,
(λ + δ)z − (δ + λG(z))h( λ−λG(z) )

(7)
r(λ)	λr(λ)
φ = β(1 − ρ)	,	δ =	.

ν1	1 − r(λ)
the generating function of the number of customers in the system is given by

r(λ)
(1 − z)(1 − ν( λ−λG(z) ))(λG(z)+ δ)h( λ−λG(z) )

(8)
Q(z) = β(1 − ρ)
β	α	.

ν1  ((λG(z)+ δ)h( λ−λG(z) ) − (λ + δ)z)(λ − λG(z))
Remark 4.2 • These transforms are obtained from the Kolmogorov system of equations: see for example [13]or [3]
To understand the second formula, it is sufficient to see that the number M (t) of customers in the system at time t is related to the process N (t) (in steady-state) by the following identities

Pm = limt→∞ P (M (t) = m) = P0(m, ∞)+ P1(m − 1, ∞)+ P2(m, ∞)
P0 = P2(0, ∞).
All examples of section 1 and those cited in reference (except [3]) assume that α = β = 1. In terms of battery power management it means that α is the consumption rate of the battery for the service of one unit.
We can easily consider a model with active breakdowns i.e. we neglect the break- downs which occur when the server is idle or turned off. It is sufficient to replace the service time distribution by the generalized service time or completion time in the terms of [1]; this is the period which begins when a customer access to service until he leaves the system (this period includes all repair times).
Example 4.3 Here we show how to obtain some characteristics which will be useful in the next sections. Let p0.(resp.p1.,p2.) be the probability that the server is idle (resp. busy, on vacation). It can be shown that

(9)
p  =  λg1  = (1 − r(λ))g ;	p
= λg1h1 ;	p
= δ(1 − ρ) = (1 − ρ)r(λ).

0.	λ + δ
1	1.	α
2.	λ + δ

These probabilities have also an independent interest as shown in section 8 and can be obtained simply by setting z = 1 in the corresponding partial generating functions. For example,

(10)
p  = lim
Σ P (m, ∞) = Q (1, ∞) =  λg1  = ((1 − r(λ))g .


Stochastic Decomposition
Another way to simplify the computation is to use the so-called stochastic decompo- sition property (SDP). The decomposition is understood here in the sense that some terms correspond to a well-known system (for example, the FIFO queue), and the others correspond to the effect of some other influences (in the Queuing language). Fuhrman and Cooper [11]describe a large class of queueing models satisfying the stochastic decomposition property (SDP) for the queue size. It is not surprising that we can exhibit such a decomposition for vacation and/or retrial queues, and particularly for our model.
For convenience we introduce the following notations for the energetic versions of corresponding models.
SR : MX/G/1 Retrial Queue without Vacations,
SF : MX/G/1 Queue with FIFO discipline without Vacations,
SRV : MX/G/1 Retrial Queue with Vacations.
Theorem 5.1 If ρ < 1, then for the energetic MX/G/1 retrial queue with vacation (system SRV ), the number of customers MRV can be represented
as a sum of two independent variables

(11)
MRV =d MF + MRV

one of them MF is the number of customers in an energetic MX/G/1 queue with
FIFO discipline (system SF ) and the other MRV  is the number of customers
in the system SRV given that the server is idle or in vacation.Here =d denotes equality in distribution;
as a sum of three independent variables

(12)
MRV =d MF + MR + MRV

0	2
where MF is the number of customers in an energetic MX/G/1 queue with FIFO
discipline (system SF ) and MRV is the number of customers in the system SRV
given that the server is idle or in vacation.
Remark 5.2 The first decomposition shows the effect of retrials and vacations simultaneously relatively to the classical Fifo Queue, while the second one shows the effect of retrials and vacations separately.
Example 5.3 This characteristic can be obtained directly from theorem 4.1 by using formula (8)
E(M ) = Q'(1) = Σ∞	Pm.
However, it is more convenient to use stochastic decomposition property (12).
The average number of customers in SRV is given by
E(MRV ) = E(MF )+ E(MR)+ E(MRV ),

where (13)
0	2
F	h1	(λg1/α)2 + λg2h1/α


RV	λg1ν2

E(M
) = λg1	+
α
2(1 − λg h /α	),	E(M2	) = 2βν ,

1 1	1

(14)
E(MR) =	1 − r(λ)
(g2r(λ)+ θ),

0	g1r(λ)+ (1 − g1) − λg1h1/α	1
and

(15)
(16)
(λg1/α)2g2h2 + λ2g1g2h1/α + 2g1(1 − λg1h1/α)Ψ θ =	,
2(1 − λg1h1/α)
Ψ = [1 − g1 + g2 − λg1h1/α + 2λg1h1/α].

The mean waiting time for an arbitrary customer can be obtained simply via Little’s formula [13].
Optimal Control of Vacation Policy
The general objective in this section is to find an operating policy which minimizes a given cost function and to estimate the effect of the energetic parameters α and β on this policy.
We assume that a fixed setup cost of S > 0 is incurred each time the server is reopened and a waiting cost, h > 0, per unit time is incurred for each customer that is present. The server is turned on only when enough customers (or energy) are (is) accumulated.
From section 3, it appears that the exploitation cost {C(t),t ≥ 0} during the interval of time (0, t) is a regenerative process with regeneration points {γn} and also a cumulative process [19].

By using a fundamental theorem of cumulative processes [19] it can be shown that for stationary policies, the average exploitation time costs per unit time can be expressed as follows

(17)
C = lim
C(t) =	S

+ hE(M ),

t→∞	t
E(L)

where E(L) = E(V )/(1 − ρ)r(λ)β is the mean length of a cycle.
Taking into account the expression of E(M ) given by remark 5.2, we have the explicit expression for the cost function

(18)
Sβ(1 − ρ)r(λ)	λg1T
C T	h	,

	
T	2β
where Π is a constant independent of T . Differentiating (18) with respect to T and setting the result to zero, we obtain T∗ = β  [2S(1 − ρ)r(λ)]/λg1h.
Sensitivity Analysis
It is interesting to study the effect of the retrial distribution R(.) upon the opti- mal values T∗. Let θz = 1 if x < z and θz = 0 if x ≥ z. Also recall that a distribution function on R+ with mean m is NBUE (New Better than Used in Expectation) if and only if  ∞ F (y)dy ≤ mF¯(x) for x ≥ 0.If we reverse the inequality we obtain the distribution NWUE (New Worse than Used in Expectation). The class of all exponential distributions is the boundary between these two non parametric classes of distributions.
Theorem 6.1 • If the retrial time distribution R(x) has ﬁnite ﬁrst order moments
r1 and r2, then the optimal value of T∗ is bounded as follows
(19)	T∗ < T∗ < T∗ ,
L	U
where the upper and lower bounds are given respectively by

(20)

T∗ =

θ0(eλr

1 g1 −

(g1 −

− λg1h1/α)β


2S(g1eλr1 − (g1 − 1) − λg1h1/α)
,
λg1h


(21) T∗ = θ (r

(λ)g

— (g


— 1) − λg h /α)β  2S(g1rU (λ) − g1(1 + λh1/α)+ 1) ,

U	0  U	1	1
and
1 1
r2 − r1
r2 −λ(r +(r −r2)/r2)
λg1h1

(22)
rU (λ) = 
r2
+  1 e r2
1	2	1	1 ,

If the retrial time distribution R(x) is NBUE then

(23)
T∗ < T∗	< T∗

L	NBUE	EXP
where T∗	is the optimal value of the vacation policy for a system SRV with
NBUE retrial time distribution, and T∗	is the optimal value for an energetic
SRV system with constant retrials studied in [3].
Remark 6.2 The inequality (19) gives lower and upper bounds on the optimal T−value when the retrial time distribution is unknown, but we have partial infor- mation about the first two moments. For the second inequality (23) we use the partial information about the aging class of the retrial time distribution.

Optimal Control of the Retrial Policy
We now investigate optimal control of retrial distribution function R(x) when the system operates under T−policy. We note that the cost function

(24)
(  ( )) = Sβ(1 − ρ)r(λ) +
+	[1 − r(λ)](g2r(λ)+ θ)

depends only on the real value r(λ), 0 ≤ r(λ) ≤ 1, and not on the concrete aspect of the retrial time distribution R(x) ; η = E(MF )+ E(MRV ) and θ are constant. So, the problem reduces to the choice of the single optimal value q∗ = r∗(λ) which minimizes the cost function (24).
Theorem 7.1 The optimal value of q∗ which minimizes the cost function (24) is given by
If Ψ ≥ Sβg1/hT, then	q∗ = 1,
If Ψ < Sβg1/hT, then	q∗ is the solution of equation Γ(q) = Sβg1/hT, for
q > ω = λg1/α + (g1 − 1)/g1.
where
g3α2 + 2g2[1 − g1 − λh1/α]q + [θ + λg1h1(g2 + θ)/α + g2(1 − g1)]

(25)
Γ(q) = 1	1
1	1	,
(g1q +1 − g1 − λg1h1/α)2

and
(26)
  3g2 + θ + λ
(1 − λg1h1/α)2

Numerical Example
In this section we present some numerical examples. The previously obtained results can be easily displayed in software under the form of table or interactive Interface in order to help the manager to take his decision.
For example, in table 1, we show the optimal value T∗,the corresponding min- imum expected cost C(T∗) and the load for different values of α. Here, we set λ = g1 = 1, g2 = h2 = 0, h1 = 0.25,h = 2,S = 10, r(λ) = 0.5. We observe that the minimum expected value is independent of β. However the optimal value T∗ increases with increasing of α, while the load decreases.
As an illustration, we consider a simple version of the example 1 (section 1), where the battery of the mobile is the server and the customers are the transmitted packets. In some works [16] the energy efficiency is defined as the fraction of energy spent in serving the packets which is in our case given by c = p1. = λg1h1/α = 0.25/α, with α = 1,so c = 0.25. The capture rate is defined as the fraction of arrivals which find the mobile awake i.e. λ(p0. + p1.) = λ(1 − p2.) = λλ+δρ, in the case of random vacations. Table 1 shows the optimal amount of recharge after which a wake up occurs, for different values of the consumption charge α.

Table 1
Optimal value T ∗ and corresponding minimum expected cost

Conclusion
In this note we have presented the energetic version of the retrial MX/G/1 queue with vacations . The algorithm (1) can be applied under quite general assumptions about independence and/or equi-distribution. We have described design problems for the control of vacation or retrial protocols. This low-level modelling formalism uses general distributions (rather than exponential distributions) to describe atomic events. So, it may help to develop high-level description language such as stochastic Petri Nets or Process algebra [12].
Acknowledgement
I would to thank anonymous referees for very useful comments and suggestions made on earlier drafts.

References
A.Aissani, Artalejo J.R., On the Single Server Retrial Queue Subject to Breakdowns, Queueing Systems 30, (1998), 309-231.
Aissani A., An MX /G/1 Retrial Queue with Exhaustive Vacations,J. of Statistics and Managment Systems, 3,N3 (2000),269-286.
Aissani A., Optimal Control of an M/G/1 Retrial Queue with Vacations, Journal of Systems Science and Systems Engineering,Vol. 17, N4,(2008), 487-502.
Altman E., Nain P., Optimal Control of the M/G/1 Queue with Repeated Vacations of the Server, IEEE Trans. Automat. Contr. Vol. 38, (1993), 776-775.
Artalejo J.R., Analysis of an M/G/1 Queue with Constant Repeated Attempts and Server Vactions, Computers Ops. Res., 24, N6, (1997), 493-504.
Artalejo J.R., Gomez-Corral A., Retrial Queues: An Algorithmic Approach, Springer, Berlin, 2008.
Ata B., Zakariadis K.E.,Dynamic power control in a fading downlink channel subject to an energy constraint, Queueing Systems, (2007), 55, 41-69.
Choudhury G., A two-phase Batch Arrival Retrial Queueing System with Bernoulli Vacation Schedule, Appl.Math. Comput. 188,N2, (2007), 1455-1466.
Doshi T., Queueing Systems with Vacations-A survey, Queueing Systems (1986), 129-166.
Falin G.I., Templeton J.G.C., Retrial Queues, Chapman and Hil, Chichester, 1997.
Furham S.W., Cooper R.B.,Stochastic Decompositions in the M/M/1 Queue with Generalized Vacations, Operations Research, 33, (1985), 1117-1129.

Gharbi N., Ioualalen M., Performance Analysis of Retrial Queueing Systems uning Generalized Stochastic Petri Nets, Electronic Notes in Theoretical Computer Science, Vol. 65, N6, (2002).
Gnedenko B.V. I.N., Introduction to Queueing Theory, 2nd edition, Birkhauser, Boston, (1989).
Kernane T., Aissani A., Stability of Retrial Queues with Versatile Policy, Journal of Applied Mathematics and Stochastic Analysis,Vol. 2006, Article ID 54 359, 1-16.
T.E. Klein, K.K. Leung, H. Zheng, Enhanced Scheduling Algorithms for Improved TCP Performance in Wireless IP Networks, Proceedings of IEEE Global Telecommunications Conference (Globe-com), Dallas, TX, November 2004, 2744-2748.
Prabhu B.J., Chockalingam A., Sharma V., Performance Analysis of Battery Power Management Schemes in Wireless Mobile Devices, Proc. Wireless Communications and Networking Conference WCNC2002, Vol. 2, (2002), 825-831.
Serror J., Zang H., Bolot J.C., Impact of Paging Channel Overloads or Attacks on a Cellular Network,Proceedings of the 5th ACM workshop on Wireless Security, (2008), 75-84.
Shikata Y. , Suzuki S., Takahashi Y.,Ihara T., Nakanishi T., Loss Probability Evaluation of PCS Call-Terminating Control. IEICE Transactions on Fundamentals of Electronics, Communications and Computer Science. Vol. E82-A, N7, 1230-1237.
Tijms H.C., Stochastic Models: An Algorithmic Approach, Wiley, Chichester, 1994.
