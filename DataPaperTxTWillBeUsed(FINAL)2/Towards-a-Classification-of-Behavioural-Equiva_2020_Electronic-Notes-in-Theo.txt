Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 352 (2020) 53–77
www.elsevier.com/locate/entcs

Towards a Classification of Behavioural Equivalences in Continuous-time Markov Processes
Linan Chena,1 Florence Clercb,2 Prakash Panangadenb,3,4
a Department of Mathematics and Statistics McGill University
Montreal, Canada
b School of Computer Science McGill University Montreal, Canada

Abstract
Bisimulation is a concept that captures behavioural equivalence of states in a transition system. In [6], we proposed two equivalent definitions of bisimulation on continuous-time stochastic processes where the evolution is a flow through time. In the present paper, we develop the theory further: we introduce different concepts that correspond to different behavioural equivalences and compare them to bisimulation. In particular, we study the relation between bisimulation and symmetry groups of the dynamics. We also provide a game interpretation for two of the behavioural equivalences. We then compare those notions to their discrete-time analogues.
Keywords: Stochastic Processes, Markov Processes, continuous time, bisimulation, diffusion.


Introduction
Bisimulation [16,18,20] is a fundamental concept in the theory of transition systems capturing a strong notion of behavioural equivalence. In particular, it is a notion stronger than that of trace equivalence. Bisimulation has been widely studied for discrete time systems where transitions happen as steps, both on discrete [15] and continuous state spaces [4,9,17]. In all these types of systems a crucial ingredient of the definition of bisimulation is the ability to talk about the next step. Thus, the general format of the definition of bisimulation is that one has some property that

1 Email: linan.chen@mcgill.ca
2 Email: florence.clerc@mail.mcgill.ca
3 Email: prakash@cs.mcgill.ca
4 This research has been supported by a grant from NSERC.

https://doi.org/10.1016/j.entcs.2020.09.004
1571-0661/© 2020 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).

must hold “now” (in the states being compared) and then one says that the relation is preserved in the next step.
Outside of computer science, there is a vast range of systems that involve continuous-time evolution: deterministic systems governed by differential equations and stochastic systems governed by “noisy” differential equations called stochastic differential equations. These have been extensively studied for over a century since the pioneering work of Einstein [12] on Brownian motion.
In [6], we introduced a notion of bisimulation for stochastic systems with true continuous-time evolution. Some attempts had previously been made to talk about continuous-time [10], but even in what are called continuous-time Markov chains there is a discrete notion of time step; it is only that there is a real-valued duration associated with each state that makes such systems continuous time. They are often called “jump processes” in the mathematical literature, see, for example, [19,21], a phrase that better captures the true nature of such processes.
We focused on a class of systems called Feller-Dynkin processes for which a good mathematical theory exists. These systems are Markov processes defined on con- tinuous state spaces and with continuous time evolution. Such systems encompass Brownian motion and its many variants.
In this paper, we explore four other notions of behavioural equivalence for such continuous-time processes. The strongest notion is that of a group of symmetries. It is stronger than the notion of bisimulation introduced in [6] and it captures the symmetries of the system. We do not know yet if all bisimulations can be accounted for by groups of symmetries.
Temporal equivalence is a notion that is weaker than bisimulation. It looks closer to the definition of bisimulation in discrete time than the definition we provided in [6], however it also strongly relies on trajectories. Temporal equivalence can be summed up as trace equivalence with some additional step-like constraints. It is still an open question if there is a class of processes for which temporal equivalence and bisimulation are equivalent notions or not.
The third notion is that of trace equivalence. It is the weakest of all these behavioural equivalences and an example in [6] shows that it is a strictly weaker notion.
Finally, we give two game interpretations, one for bisimulation and one for tem- poral equivalence. They closely mirror the one provided in [13,7]. The game for bisimulation also emphasizes the importance of trajectories for the study of be- havioural equivalences in continuous time.
The relations between these different behavioural equivalences can be displayed as follows.

trace equ,iv,alence

discrete time bisimulation ¸, /te¸mporal e,qu,ivalence ¸, /ga¸me interpretation
bisimu,la,tion ¸,	/ga¸me interpretation group of symmetries
We end this paper by studying discrete-time systems and by revisiting the ex-
amples provided in our previous study. This seems to indicate that the correct notion that extends bisimulation to continuous-time systems is that of temporal equivalence and not the initial definition provided in [6].
Some proofs that were either too long or not crucial have been moved to the appendix.
Feller-Dynkin Processes
Deﬁnition of Feller-Dynkin Processes
We assume that basic concepts like topology, measure theory and basic concepts of probability on continuous spaces are well known; see, for example [3,11,17].
The basic arena for the action is a probability space.
Definition 2.1 A probability space is a triple (X, Σ,P ) where X is a space (usu- ally a topological space), Σ is a σ-algebra (usually its Borel algebra) and P is a probability measure on S.
Given a measurable space (X, Σ) a (sub)-Markov kernel is a map τ : X × Σ → [0, 1] which is measurable in its first argument, i.e. τ (·,A ∈ Σ) : X → R is measurable for any fixed A in Σ and for any fixed x ∈ E, τ (x, ·) is a (sub)probability measure. These kernels describe transition probability functions.
Definition 2.2 A ﬁltration on a measurable space (X, Σ) is a nondecreasing family (Ft)t≥0 of sub-σ-algebras of Σ, i.e. Fs ⊆ Ft ⊆ Σ for 0 ≤ s < t < ∞.
This concept is used to capture the idea that at time t what is “known” or “observed” about the process is encoded in the sub-σ-algebra Ft.
Definition 2.3 A stochastic process is a collection of random variables (Yt)0≤t<∞ on a measurable space (Ω, Σ1) that take values in a second measurable space (X, Σ2) called the state space. We say that a stochastic process is adapted to a filtration (Ft)t≥0 if for each t ≥ 0 we have Xt is Ft-measurable.
Note that a stochastic process is always adapted to the filtration (Gt)t≥0, where for each t ≥ 0, Gt is defined as the σ-algebra generated by all the random vari- ables {Ys|s ≤ t}. The filtration (Gt)t≥0 is also referred to as the natural filtration associated to (Xt)t≥0.

Before stating the definition of the continuous-time processes we will be inter- ested in, let us first start by recalling the definition of their discrete-time counter- parts.
Definition 2.4 A labelled Markov process (LMP) is a triple (X, Σ,τ ) where (X, Σ) is a measurable space and τ is a Markov kernel.
We will quickly review the theory of continuous-time processes on continuous state space; much of this material is adapted from “Diffusions, Markov Processes and Martingales, Volume I” by Rogers and Williams [19] and we use their nota- tions. Another useful source is “Functional analysis for probability and stochastic processes” by A. Bobrowski [5]. Let E be a locally compact, Hausdorff space with countable base which is also σ-compact and Polish, and let E be equipped with the Borel σ-algebra E = B(E). E∂ is the one-point compactification of E: E∂ = E {∂}. The physical picture is that the added state, ∂, represents a point at infinity; we will view it as an absorbing state. Denoting O the topology on E, the space E∂ is equipped with the topology O∂ = O∪ {{∂}∪ Kc | K compact in (E, O)}.
Definition 2.5 A semigroup of operators on any Banach space is a family of linear continuous (bounded) operators Tt indexed by t ∈ R≥0 such that
∀s, t ≥ 0, Ts ◦ Tt = Ts+t
and
T0 = I	(the identity).
The first equation above is called the semigroup property. The operators in a semigroup are continuous however there is a useful continuity property of the semigroup as a whole.
Definition 2.6 For X a Banach space, we say that a semigroup Tt : X → X is
strongly continuous if
x	X, lim Ttx = x
t↓0
which is equivalent to saying


x	X, lim
t↓0
 Ttx − x  → 0.

We say that a continuous real-valued function f on E “vanishes at infinity” if for every ε > 0 there is a compact subset K ⊂ E such that ∀x ∈ E \ K we have
|f (x)| ≤ ε. The space C0(E) of continuous real-valued functions that vanish at infinity is a Banach space with the sup norm.
Definition 2.7 A Feller-Dynkin (FD) semigroup is a strongly continuous semi- group (Pˆt)t≥0 of linear operators on C0(E) satisfying the additional condition:
∀t ≥ 0	∀f ∈ C0(E), if	0 ≤ f ≤ 1, then	0 ≤ Pˆtf ≤ 1

The following important proposition relates these FD semigroups with Markov processes which allows one to see the connection with more familiar probabilistic transition systems.
Proposition 2.8 Given such an FD semigroup, it is possible to deﬁne a unique family of sub-Markov kernels (Pt)t≥0 : E ×E → [0, 1] such that for all t ≥ 0 and

f ∈ C0(E),
Pˆtf (x)= ∫

f (y)Pt(x, dy).

A very important ingredient in the theory is the space of trajectories of a FD process (FD semigroup) as a probability space. This space does not appear explic- itly in the study of labelled Markov processes but one does see it in the study of continuous-time Markov chains and jump processes.
Definition 2.9 We define a trajectory ω on E∂ to be a cadlag 5 function [0, ∞) →
E∂ such that if either ω(t−) := lims<t,s→t ω(s)= ∂ or ω(t)= ∂ then ∀u ≥ t, ω(u)= 
∂. We can extend ω to a map from [0, ∞] to E∂ by setting ω(∞)= ∂.
As a first intuition, the reader can think of these trajectories as continuous paths. Cadlagness allows for some jumping in a reasonable fashion. The intuition behind the additional condition is that once a trajectory has reached the terminal state ∂, it stays in that state and similarly if a trajectory “should” have reached the terminal state ∂, then there cannot be a jump to avoid ∂ and once it is in ∂, it stays there.
It is possible to associate to such an FD semigroup a canonical FD process. Let Ω be the set of trajectories ω : [0, ∞) → E∂.
Definition 2.10 The canonical FD process associated to the FD semigroup (Pˆt) is (Ω, G, (Gt)t≥0, (Xt)0≤t≤∞, (Px)x∈E )
where
Xt(ω)= ω(t)
G = σ(Xs | 0 ≤ s < ∞) 6 , Gt = σ(Xs | 0 ≤ s ≤ t)
given any probability measure μ on E∂, by the Daniell-Kolmogorov theorem, there exists a unique probability measure Pμ on (Ω, G) such that for all n ∈ N, 0 ≤ t1 ≤ t2 ≤ ... ≤ tn and x0, x1, ..., xn in E∂,


Pμ(X0 ∈ dx0, Xt
∈ dx1, ..., Xt
∈ dxn)= μ(dx0)P	(x0, dx1)...P
(xn−1, dxn) 7



where P +∂
is the Markov kernel extending the Markov kernel Pt to E∂ by

P +∂(x, {∂})=1 − Pt(x, E) and P +∂(∂, {∂}) = 1. We set Px = Pδx .

5 By cadlag we mean right-continuous with left limits.
6 The σ-algebra G is the same as the one induced by the Skorohod metric, see theorem 16.6 of [2]
7 The dxi in this equation should be understood as infinitesimal volumes. This notation is standard in probabilities and should be understood by integrating it over measurable state sets Ci.

This is the version of the system that will be most useful for us. In order to bring it more in line with the kind of transition systems that have hitherto been studied in the computer science literature we introduce a countable set of atomic propositions AP and such a FD process is equipped with a function obs : E → 2AP . This function is extended to a function obs : E∂ → 2AP  {∂} by setting obs(∂)= ∂. Instead of following the dynamics of the system step by step as one does in a discrete system we have to study the behaviour of sets of trajectories. The crucial ingredient is the distribution Px which gives a measure on the space of trajectories
for a system started at the point x.

Brownian motion as a FD process
Brownian motion is a stochastic process describing the irregular motion of a particle being buffeted by invisible molecules. Now its range of applicability extends far beyond its initial application [14]. The following definition is from [14].
Definition 2.11 A standard one-dimensional Brownian motion is a Markov process adapted to the filtration (Ft)t≥0,
B = (Wt, Ft), 0 ≤ t < ∞
defined on a probability space (Ω, F,P ) with the properties
W0 = 0 almost surely,
for 0 ≤ s < t, Wt − Ws is independent of Fs and is normally distributed with mean 0 and variance t − s.
In this very special process, one can start at any place, there is an overall translation symmetry which makes calculations more tractable. In order to do any calculations we use the following fundamental formula: If the process is at x at time 0 then at time t the probability that it is in the (measurable) set D is given by

Pt(x, D)= ∫


y∈D
  1 
√2πt exp
(x	y)2


—	2t
dy.

The associated FD semigroup is the following: for f ∈ C0(R) and x ∈ R,


Pˆt(f )(x)= 
y
 f (y)
√2πt exp
(x	y)2
—	2t
dy.

Bisimulation
We introduced a notion of bisimulation in [6] that we will recall in this section. We will also define two weaker notions: trace equivalence and temporal equivalence. The latter one seems to be a better generalization of bisimulation in discrete time systems than our original definition of bisimulation. For the remaining of this paper, we consider a FD-process as in section 2.

Naive approach
Let us start by illustrating why the naive definition does not work and why we need a more complex definition.
The key idea of bisimulation is that “what can be observed now is the same” and bisimulation is preserved by the evolution. In order to capture this we need two conditions: the first captures what is immediately observable and the second captures the idea that the evolution preserves bisimulation.
Consider the naive extension of bisimulation in discrete time (see definition 6.1): let R be an equivalence relation on the state space E such that whenever x R y (x, y ∈ E):
(initiation) obs(x)= obs(y), and
(induction) for all R-closed (see definition 3.1) sets C in E , for all times t, Pt(x, C)= Pt(y, C)
Let us illustrate on an example why this definition is not enough.
We consider the case of Brownian motion on the reals where there is a single atomic proposition marking 0: obs(0) = 1 and obs(x)=0 for x /= 0. Intuitively, we would like that two states x and y are bisimilar if and only if |x| = |y| as the only symmetry that this system has is point reflection with respect to 0.
However, the two conditions (initiation) and (induction) are not strong enough to enforce that this equivalence relation is the greatest bisimulation.
Let us define the equivalence
R = (R∗ × R∗) ∪ {(0, 0)} where R∗ = R \ {0}.

This equivalence satisfies both conditions (induction) and (initiation). The last one follows directly from the definitions of R and obs.
For the induction condition, the only R-closed sets are ∅, {0}, R∗ and R, and for any state z /= 0 and time t ≥ 0, Pt(z, ∅)= Pt(z, {0})=0 and Pt(z, R∗)= Pt(z, R)= 1.
This shows that with this naive definition of bisimulation, any two non-zero states are bisimilar, which does not correspond to our intuition for this example.

Deﬁnition
As we have just shown, unlike in the discrete-time case we cannot just say that the “next step” preserves the relation. This is why the definition of bisimulation that we introduced in [6] dealt with trajectories instead of steps. There are two conditions (initiation and induction conditions) that can be modified to account for trajectories. Depending on which one is adapted, we get either temporal equivalence or bisimulation.
Definition 3.1 Given an equivalence R on E, a subset C of the state space E is
R-closed if for every states x and y such that x R y, x ∈ C if and only if y ∈ C.

Definition 3.2 Given an equivalence R on E extended to E∂ by setting ∂ R ∂, a set B of trajectories is time-R-closed if for every trajectories ω and ωj such that for every time t ≥ 0, ω(t) R ωj(t) (where R is extended to E∂ by setting ∂ R ∂), ω ∈ B if and only if ωj ∈ B.
A set B is called time-obs-closed if it is time-R-closed where R is the equivalence defined by x R y if and only if obs(x)= obs(y).
The following is the definition of bisimulation introduced in [6]. In discrete time, bisimulation was only about the next step. Here, we take the full trajectories into consideration.
Definition 3.3 A bisimulation is an equivalence relation R on E such that for all
x, y ∈ E, if x R y, then
(initiation) obs(x)= obs(y), and
(induction) for all measurable time-R-closed sets B, Px(B)= Py(B).
Another well-known concept is that of trace equivalence.
Definition 3.4 Two states are trace equivalent if and only if for all measurable time-obs-closed sets B, Px(B)= Py(B).
Temporal equivalence can be viewed as trace equivalence which additionally ac- counts for step-like branching. As such, it is weaker than bisimulation but stronger than trace equivalence. As shown in section 6.1, it seems to be the notion that best generalizes discrete-time bisimulation since the induction requirement of bisimula- tion is actually very strong.
Definition 3.5 A temporal equivalence is an equivalence relation R on E such that for all x, y ∈ E, if x R y, then
(initiation) for all measurable time-obs-closed sets B, Px(B)= Py(B), and
(induction) for all measurable R-closed sets C, for all times t, Pt(x, C) =
Pt(y, C).
Remark 3.6 Two states that are related by a bisimulation are called bisimilar. There is a greatest bisimulation that corresponds to this equivalence.
Similarly, two states that are related by a temporal equivalence are called tem- porally equivalent. There is a greatest temporal equivalence that corresponds to this equivalence.
Example 3.7 Consider for example Brownian motion. In the first case, we will distinguish zero from the other states, i.e. obs(x) = 1 if and only if x = 0. In the second case, we will distinguish the integers from the other states, i.e. obs(x) = 1 if and only if x ∈ Z.
In the first case, the equivalence R defined by x R y if and only if x = y or −y
is both the greatest bisimulation, temporal equivalence and the trace equivalence.
This equivalence is also a bisimulation and a temporal equivalence for the second case. However, there are other bisimulations and temporal equivalences, the greater

ones being that two states x and y are related if and only if they have same distance to the closest integer, i.e. x − [x⊆ = y − [y⊆ or [y≤− y. This equivalence is also trace equivalence.
Theorem 3.8 A bisimulation is also a temporal equivalence. If two states are temporally equivalent, then they are trace equivalent.
We provide in section 6.2.2 an example where the greatest temporal equivalence is strictly greater than trace equivalence. It is still an open question as to whether bisimulation and temporal equivalence are the same notions or if they are only for a class of processes.
Symmetry groups of the process
Given a function h : E∂ → E∂, we define h∗ :Ω → Ω by h∗(ω)= h ◦ ω.
A group of symmetries is a set of bijections on the state space that respect the dynamics of the FD-process. Intuitively speaking, once a symmetry is applied, the system is transformed but the new system behaves exactly like the old one.
Definition 4.1 A group of symmetries is a group (closed under inverse and com- position) H of homeomorphisms on the state space E extended to E∂ by setting h(∂)= ∂ for every h ∈H such that
for all h ∈ H, obs ◦ h = obs, and
for all x ∈ E∂, for all f ∈ H and for all measurable sets B such that for all
h ∈ H, h∗(B)= B,
Px(B)= Pf(x)(B).
Example 4.2 A rather trivial example of a group of symmetries is the group with a single element {id}.
Consider again the example of Brownian motion with zero distinguished from the rest, the set {s, id} where s(x)= −x for x ∈ R is a group of symmetries.
This set is also a group of symmetries for Brownian motion with integers distin- guished from the rest. However, there are several other possible groups of symme- tries: {id, tk | k ∈ Z} and {id, tk, sk | k ∈ Z} where tk(x)= x + k and sk(x)= k − x for every k ∈ Z and x ∈ R.
Definition 4.3 Givena group of symmetries H on E, we denote RH the equivalence defined on E as follows: x RH y if and only if there exists h ∈H such that h(x)= y. The fact that H is a group guarantees that RH is an equivalence.
One of the requirements for being a group of symmetries is to be closed under inverse and composition. This condition is useful for getting an equivalence on the state space, however, it is usually easier (if possible) to view a group of symmetries as generated by a set of homeomorphisms.
Lemma 4.4 Consider a set of homeomorphisms Hgen on the state space E and deﬁne H is the closure under inverse and composition of the set Hgen. Assume that

the set Hgen satisﬁes the following conditions:
for all f ∈ Hgen, obs ◦ f = obs, and
for all measurable sets B such that for all f ∈ Hgen, f∗(B)= B, for all x ∈ E∂
and for all g ∈ Hgen, Px(B)= Pg(x)(B).
Then the set H is a group of symmetries.
Example 4.5 The two groups of symmetries {id, sk | k ∈ Z} and {id, sk, tk | k ∈ Z} are generated by {id, t1} and {id, t1, s} respectively. If one carefully reads the proofs of the examples provided in [6], these two homeomorphisms clearly appear.
Theorem 4.6 Given a group of symmetries H, the equivalence RH is a bisimula- tion.
Example 4.7 The groups of symmetries {id, s}, {id, sk | k ∈ Z} and {id, sk, tk | k ∈
Z} respectively correspond to the equivalences
x R1 y if and only if x = y or − y
x R2 y if and only if x − y ∈ Z, i.e. x − [x⊆ = y − [y⊆
x R3 y if and only if x − y or x + y ∈ Z, i.e. x − [x⊆ = y − [y⊆ or [y≤− y
The equivalence R1 is the greatest bisimulation for Brownian motion with zero distinguished. All three equivalences are bisimulations for Brownian motion with the integers distinguished and R3 is the greatest possible.
Remark 4.8 Givena group of symmetries H, a set C of states is RH-closed if and only if for every h ∈ H, h(C) = C. It is tempting to find a nice characterization of time-RH-closed sets too, however in the case of trajectories, this is much more complicated. It is true that if a set B is time-RH-closed, then for every h ∈ H, h∗(B)= B (which we used in the proofs of the examples considered in [6]) but this is no longer an equivalence.
To illustrate this, consider Brownian motion with zero distinguished and the group of symmetries {s, id}. Define the following trajectories:


1	t for t < 2
1
t − 1 for t ≥ 2
1	t for t < 1
1
t − 1 for t ≥ 1
ω3(t)= t − 1

For every time t, |ω1(t)| = |ω2(t)| = |ω3(t)|, which means that any time-RH-closed set that contains one of these trajectories should contain all of them. Define Bi =
{ωi, −ωi} for i = 1, 2 or 3. It is clear that s∗(Bi)= Bi but ωj ∈/ Bi for i /= j.
To account for this, we can make the condition more complex by allowing to “use” different functions from H as time goes by. More formally, define the set Htraj as the set of functions F obtained in the following way.
Given a set I such that I = N or J0, m) (for m ∈ N), an I-indexed family of times ti such that t0 = 0 < t1 < t2 < ... such that i∈I [ti, ti+1) = R≥0 (where tm+1 is understood as ∞) and an I-indexed family of homeomorphisms fi ∈ H, we can

define F :Ω → Ω such that for ω ∈ Ω,
F (ω): R≥0 → E∂
t ≥→ fn(ω(t))	where n is such that tn ≤ t < tn+1
If a set B is time-RH-closed, then for all F ∈ Htraj, F (B)= B.
However, this is not an equivalence: consider Brownian motion as previously and the trajectories ω(t) = t × sin(1/t) (ω(0) = 0) and ωj(t) = |ω(t)|. These two functions are RH-related at all times but they cannot be accounted for by a “fixed grid” as is done by defining the set Htraj. In order to fully understand time-RH- closed sets, we would need to have some sort of “dynamic grid” that we can refine. This will be tackled in future work.
Remark 4.9 In [6], we also introduced the notion of FD-homomorphism in order to extend the discrete-time notion of zigzags [8].
Given two FD processes, a continuous function f : E1 → E2 is called a FD- homomorphism if it satisfies
obs1 = obs2 ◦ f
for every x ∈ E1 and every measurable B2 ⊂ Ω2, Pf(x)(B2) = Px(B1) where
2	1
B1 = {ω ∈ Ω1 | f ◦ ω ∈ B2}.
We showed that cospans of FD-homomorphisms and bisimulations correspond to one another. In particular, if R is a bisimulation, the quotient by R yields a FD- homomorphism (which is not a homeomorphism if R is non trivial). This is quite different from group of symmetries that identify symmetries of the system.
To illustrate another difference with groups of symmetries, consider Brownian motion with zero distinguished and its group of symmetries {id, s}. Now look at the set {ω | ω(3) ∈ [1, 2]}. This set is accounted for in the definition of FD- homomorphism, but not in the definition of group of symmetries which, in our case, only allows to consider {ω | ω(3) ∈ [−2, −1]∪[1, 2]}. Section 6.4 provides an example of a set of FD-homomorphisms which is not a group of symmetries.
Game Interpretation
The following games are adaptations from [13,7] to our setting of continuous-time processes. The proofs in this section closely mirror those in [13], they can also be found in the appendix. However, it is especially interesting to note that the game interpretation of bisimulation emphasizes once again the role of trajectories in that concept whereas the game interpretation of temporal equivalence resembles that in discrete time very closely.
Game interpretation of bisimulation
Definition 5.1 Two trajectories ω and ωj are time-bisimilar if for all times t	0,
ω(t) and ωj(t) are bisimilar.

Lemma 5.2 Two states x and y are bisimilar if and only if the trajectories ωx and ωy are time-bisimilar where ωz is the trajectory deﬁned by ωz(t) = z for all times t ≥ 0 for a given state z.
We define the following game. Duplicator’s plays are pairs of trajectories that he claims are time-bisimilar. Spoiler is trying to prove him wrong.
Given two trajectories ω and ωj, Spoiler chooses t ≥ 0 and B /= ∅ ∈ G such that Pω(t)(B) /= Pω′(t)(B)
Duplicator answers by choosing ω0 ∈ B and ω1 ∈/ B such that obs◦ω0 = obs◦ω1
and the game continues from (ω0, ω1)
A player who cannot make a move at any point loses. Duplicator wins if the game goes on forever. The only way for Spoiler to win is to choose a time-obs-closed set.
Theorem 5.3 Two trajectories ω and ωj are time-bisimilar if and only if Duplicator has a winning strategy from (ω, ωj).
Corollary 5.4 Two states x and y are bisimilar if and only if Duplicator has a winning strategy from (ωx, ωy).

Game interpretation of temporal equivalence
We define the following game. Duplicator’s plays are pairs of states that he claims are bisimilar. Spoiler is trying to prove him wrong.
Given two states x and y, Spoiler chooses t ≥ 0 and C /= ∅ ∈ S such that
Pt(x, C) /= Pt(y, C).
Duplicator answers by choosing x1 ∈ C and y1 ∈/ C that are trace-equivalent and the game continues from (x1, y1)
A player who cannot make a move at any point loses. Duplicator wins if the game goes on forever. The only way for Spoiler to win is to choose a set that is closed under trace equivalence. Duplicator’s only valid moves are pairs of trace equivalent states.
Theorem 5.5 Two states x and y are temporally equivalent if and only if Dupli- cator has a winning strategy from (x, y).

Justification for these behavioural equivalences
The goal of this work is to extend the notion of bisimulation that exists in discrete time to a continuous-time setting. Therefore two important questions are the fol- lowing: do we get back the definition of bisimulation that existed in discrete time when we restrict Feller-Dynkin processes to (some kind of) discrete-time processes? How well do these notions behave on examples?

Discrete-time Case
It is common in discrete time to consider several actions. Everything that was ex- posed in this paper can easily be adapted to accommodate several actions. However, we will not mention actions in this section either for the sake of readability.
Given an LMP (X, Σ, τ, (χA)A∈AP ) where Σ = σ(T ) where T is a topology on X, we can always view it as a FD process where transitions happen at every time unit. Since the process has to remain Markovian, it cannot keep track of how long it has spent in a state of the LMP. This is why a state of the FD process is a pair of a state in X and a time explaining how long it has been since the last transition. For trajectories to be cadlag, that time is in [0, 1).
We will write obs(x) = (χA(x))A∈AP to mimick what we have in continuous time.
Formally, the state space of the FD process is (E, S ) where the space is defined as E = X × [0, 1) and is equipped with a topology O = T × O([0, 1)) (where O([0, 1)) denotes the usual topology on the interval [0, 1)) and the following σ- algebra S = Σ ⊗B([0, 1)) is generated by this topology. The corresponding kernel is defined for all x ∈ X and C ∈ S , t ≥ 0 and s ∈ [0, 1) as Pt((x, s), C)= τ[t+s♩(x, Cj) where Cj = {z | (z, t + s − [t + s⊆) ∈ C} and for k ≥ 1,

τ0(x, Cj)= 1C′ (x),	τ1(x, Cj)= τ (x, Cj)	and	τk+1(x, Cj)= ∫



y∈X

τ (x, dy)τk(y, Cj)

We also define obs(x, s) = obs(x) (i.e.	(obs(x, s))i  = χAi (x) where AP  =
{A1, A2, ...}).
Recall the definition of bisimulation in discrete time.
Definition 6.1 Given an LMP (X, Σ, τ, (χA)A∈AP ), a discrete time bisimulation (DT-bisimulation) R is an equivalence relation on X such that if x R y, then
obs(x)= obs(y) (i.e. for all A ∈ AP , χA(x)= χA(y))
for all R-closed sets C ∈ Σ, τ (x, C)= τ (y, C). The following lemma is in [6]
Lemma 6.2 Consider a DT-bisimulation R. If x R y, then for all n ≥ 1, for all
R-closed sets A1, ..., An,
∫x1∈A1 ... ∫xn∈An τ (x, dx1)τ (x1, dx2)...τ (xn—1, dxn)= 
∫x1∈A1 ... ∫xn∈An τ (y, dx1)τ (x1, dx2)...τ (xn—1, dxn)
It is possible to define the notion of trajectories in the LMP and that of trace equivalence just as we did in the case of FD-processes. A trajectory is a function ω : N → X {∂} such that if ω(n)= ∂, then for every k ≥ n, ω(k)= ∂. Similarly to what was done in section 2, for a state x we can define the probability distribution Px on the set of trajectories that extends the finite-time distributions using the

Daniell-Kolmogorov theorem. Two states x and y are trace equivalent if for every set B of trajectories that is measurable and time-obs-closed, Px(B)= Py(B).
We have the following result that will be later useful to us.
Lemma 6.3 In an LMP with countably many atomic propositions, any two states
x and y that are DT-bisimilar are trace equivalent.
Proof. Consider a non-empty, measurable set B that is time-obs-closed. We will denote A0 the atomic proposition corresponding to ∂.
Define the following sets for k ∈ N:
Dk,l = {γ : J0, k) × J0, l) → {0, 1} | ∃ω ∈ B ∀i ∈ J0, k) ∀j ∈ J0, l) χAj (ω(i)) = γ(i, j)}
Bk,l = {ω : N → X  {∂} | ∃γ ∈ Dk,l ∀i ∈ J0, k) ∀j ∈ J0, l) χAj (ω(i)) = γ(i, j)}
= {ω : N → X  {∂} | ∃ωj ∈ B ∀i ∈ J0, k) ∀j ∈ J0, l) χA (ω(i)) = χA (ωj(i))
j	j
Bk,l(γ)= {ω : N → X {∂} | ∀i ∈ J0, k) ∀j ∈ J0, l) χAj (ω(i)) = γ(i, j)}
with γ ∈ Dk,l. The set Dk,l is finite for every k, l ∈ N.
First, note that B =	k,l∈N Bk,l. Indeed, by definition B ⊂ Bk,l for every
k, l ∈ N which proves the direct inclusion. For the reverse inclusion, note that

B =  ′
{ω | χA (ω(i)) = χA (ωj(i))}

Bk,l =  ′
 k	 l


{ω | χA (ω(i)) = χA (ωj(i))}

The first equality holds since B is time-R-closed. Using these expressions and infinite distributivity of set union and intersections, the equality B = k,l∈N Bk,l follows.
Second, for γ ∈ Dk,l,

k	l
Bk,l(γ)=  {ω | ω(i) ∈  (χA )—1(γ(i, j))}
i=0	j=0
This proves that Bk,l(γ) is measurable. Furthermore, Px(Bk,l(γ)) = Py(Bk,l(γ)) using lemma 6.2.
Now, Bk,l =  γ∈Dk,l Bk,l(γ) is measurable since Dk,l is finite. Since for γ /=

similarly for Py(Bk,l), which shows that for every k, l ∈ N, Px(Bk,l)= Py(Bk,l).
Define B	=	B	.  If l	l , B	B	and similarly if k	k ,
B	B  . This means that B  = B	and B =	B . Finally, B	B
...	Bn	Bn+1	...	k∈N Bk = B and therefore Px(B) = Py(B) by down- continuity of measures Px and Py.	2
Proposition 6.4 If the equivalence R is a DT-bisimulation, then the relation Rj
deﬁned as
Rj = {((x, s), (y, s)) | s ∈ [0, 1),x R y}
is a temporal equivalence.

Proof. Consider (x, s) Rj (y, s), t ≥ 0 and a measurable and Rj-closed set C. By definition of Pt, Pt((x, s), C) = τ[t+s♩(x, Cj) where Cj = {z | (z, sj) ∈ C} with sj = t + s − [t + s⊆ (and similarly for y).
The set Cj is R-closed. Indeed, consider two states z ∈ Cj and zj ∈ X such that z R zj. These conditions imply that (z, sj) ∈ C and (z, sj) Rj (zj, sj). Since the set C is Rj-closed, (zj, sj) ∈ C and hence by definition of the set Cj, zj ∈ Cj.
Since (x, s) Rj (y, s), we also have that x R y.	By lemma 6.2, we have that τ[t+s♩(x, Cj) = τ[t+s♩(y, Cj). This allows us to conclude that Pt((x, s), C) = Pt(y, s), C).
The initiation condition (trace equivalence) is a direct consequence of lemma
6.3.	2
Remark 6.5 In remark 4.8, we hinted at how complex it is to characterize mea- surable time-R-closed sets when R is defined from a group of symmetries.
A very tempting way to do the proof of Lemma 6.3 would be to state that measurable time-obs-closed sets are generated by the sets X—1(obs—1(A)) where s ∈ R≥0 and A ⊂ {0, 1}. Along those lines, in [6], we compared bisimulation and DT-bisimulation and to do so, we used the fact that time-R-closed measurable sets were generated by X—1(C) where C is a measurable and R-closed set.
However some further studies led us to realize that understanding time-R-closed sets is much harder than expected when R is an equivalence, even in the seemingly simple context of discrete-time systems. In particular, it is still an open question whether the σ-algebra of measurable time-R-closed (resp time-obs-closed) sets is generated by the X—1(C) where t ∈ R and C is a measurable and R-closed subset of the state space (resp C = obs—1(A) with A ⊂ {0, 1}).
In Proposition 6.4, we have corrected the results from [6] but this has required us to use quite different machinery, instead we used down-continuity.
Proposition 6.6 If the equivalence R is a temporal equivalence, then the relation
Rj deﬁned as the transitive closure of the relation
{(x, y) | ∃t, tj ∈ [0, 1) such that (x, t) R (y, tj)}

is a DT-bisimulation.
Proof. First note that Rj is indeed an equivalence.
Let us consider x Rj y, i.e. there exists (xi)i=1,...,n, (ti)i=1,...,n—1 and (tj)i=1,...,n—1 such that x = x1, y = xn and for every 1 ≤ i ≤ n − 1, (xi, ti) R (xi+1, tj).
The fact that obs(x)= obs(y) is a direct consequence of the initiation condition of a temporal equivalence.
Now, consider a Σ-measurable and Rj-closed set Cj.	Define the set C =
{(z, s) | z ∈ Cj,s ∈ [0, 1)}. It is S -measurable and R-closed. Since R is a tem- poral equivalence, for every i, P1((xi, ti), C) = P1((xi+1, tj), C) for every i ≤ n. Additionally, note that for every z  E and every s  [0, 1), P1((z, s), C)= τ (z, Cj). This proves that τ (x, Cj)= τ (y, Cj).	2

Remark 6.7 This result is stronger than the one in [6] since we only ask for R to be a temporal equivalence instead of a bisimulation and additionally, we do not impose further restrictions on the equivalence R such as time-coherence in [6].
These results can be summed up in the following theorem relating temporal equivalence and DT-bisimulation.
Theorem 6.8 Two states x and y (in the LMP) are DT-bisimilar if and only if for all t ∈ [0, 1), the states (x, t) and (y, t) (in the Feller-Dynkin process) are temporally equivalent.
Remark 6.9 The result presented in this paper seems to indicate that temporal equivalence is actually the notion that extends DT-bisimulation to continuous time and that the definition of bisimulation in [6] may be too strong in some contexts. There remains to understand which contexts.

Basic examples
We now revisit some examples from [6] and clarify them in our new framework.
Deterministic Drift
Consider a deterministic drift on the real line R with constant speed a ∈ R>0 and a single atomic proposition. We studied two cases in [6] with 0 as the only distinguished point and with all the integers distinguished from the other points. In both cases, trace equivalence and greatest bisimulation are the same.
where we define for every x ∈ R and every k ∈ Z, tk(x)= x+k and for x, y ∈ R>0
the function fx,y : R → R by
⎧⎪⎨z	if z ≤ 0



Fork
⎪⎩z − x + y	if z > x

This example can be found in [6] in order to show how important the induction condition is in the definition of bisimulation. It is an extension of the standard “vending machine” example in discrete time to our continuous-time setting. The process is a deterministic drift at constant speed with a single probabilistic fork (the process then goes up or down with probability 1/2). We compare the case where

the fork is at the start with the case where the fork happens later. There are two atomic propositions P and Q which enable the process to tell the difference between the two ends of each fork.

We write [x1, x3] for the branch between the states x1 and x3 (and similarly for other branches) and we denote |y − x| the time necessary to go from x to y (if applicable).
Two different states x and y are bisimilar if and only if either x ∈ [x1, x3], y ∈ [y1, y2] and |x3 − x| = |y2 − y|, or x ∈ [x2, x4], y ∈ [y1, y3] and |x4 − x| = |y3 − y| (and similar cases by exchanging x and y).
This bisimulation is generated by the group of symmetries {f, g, id} where


⎧⎪⎨y ∈ [y1, y2] such that |y2 − y| = |x3 − z| if z ∈ [x1, x3]
⎪⎩z otherwise


and g similarly permutes the two branches [x2, x4] and [y1, y3].
This example is interesting because trace equivalence is strictly greater than bisimulation or temporal equivalence: the states x0 and y0 are trace equivalent even though they are neither bisimilar, nor temporally equivalent.





Examples based on Brownian motion

It is especially interesting to read the proofs that were done for these examples with this new framework in mind. All the proofs follow the same steps. First we define an equivalence. We then state that it is a bisimulation, by actually displaying a set of functions which is a group of symmetries. Second, we show that it corresponds to trace equivalence and hence that it is the greatest bisimulation (and also temporal equivalence/group of symmetries). We will only restate the equivalence on the state space and the group of symmetries. Details and proofs can be found in [6]. All these examples are some variants of Brownian motion with either a single or no (first two cases of absorbing wall) atomic proposition.

Standard Brownian Motion
where for every x ∈ R, s(x) = −x, sk(x) = k − x and tk(x) = x + k for every
k ∈ Z.

Brownian motion with drift
Let us consider a Brownian process with an additional drift: Wj = Wt + at (where
Wt is the standard Brownian motion and a > 0).
where for every x ∈ R and every k ∈ Z, tk(x)= x + k.

Brownian motion with absorbing wall
Another usual variation on Brownian motion is to add boundaries and to consider that the process does not move anymore or dies once it has hit a boundary. The boundary is absorbing/killing the process.

where sk(x)= k − x for every x ∈ R and k = b or 2b.

Poisson process
This is an example that we did not consider in [6]. Poisson process models the number of customer arriving at a taxi stop for instance. It is a continuous-time process (Nt)t≥0 on the set of natural numbers N, a discrete space. We define the set Ω of trajectories as usual on the state space. The probability distribution on the set Ω is defined as


k	(λt)n—k

—λt

P (Nt = n)= (n − k)! e
for n ≥ k


We are going to study two cases. In the first case, we are able to test if there is an even or odd number of customers that have arrived. In the second case, we are able to test if there are more customers than a critical value.

Testing evenness of number of customers:
There is a single atomic proposition on the state space: obs(k)=1 if and only if k is even.
Proposition 6.10 Two states x and y are bisimilar (resp. temporally equivalent, trace equivalent) if and only if x ≡ y mod 2.
Proof. Let us write R for the corresponding equivalence.
First, it is indeed a bisimulation. Consider y = x + 2n where n ∈ N (note that
obs(x)= obs(y)) and B a measurable, time-R-closed set.
For a measurable set Bj, Px(Bj) = Px+2n(Bj + 2n), where Bj + 2n = {t ≥→ ω(t)+ 2n} | ω ∈ B}. In particular Px(B)= Py(B + 2n). Since B is time-R-closed, B + 2n ⊂ B, so Px(B) ≤ Py(B).
For the reverse direction, let M be the set of non-decreasing trajectories, and write B0 = B ∩ M ∩ {ω | ω(0) = y}. Note that the process can only realize non-decreasing trajectories, therefore Py(B) = Py(B0). Define B1 = {t ≥→ ω(t) − 2n | ω ∈ B0}. Note that for every ωj ∈ B1 and s ≥ 0, ωj(s) ∈ N since for every ω ∈ B0 and t ≥ 0, ω(t) ≥ ω(0) = x + 2n. Since B1 + 2n = B0, we have that Py(B0)= Px(B1). Furthermore, B1 ⊂ B since B is time-R-closed. Putting all this together: Py(B)= Py(B0)= Px(B1) ≤ Px(B).
This concludes the proof that R is a bisimulation. Now, notice that x R y if and only if obs(x) = obs(y). Since this is weaker than trace equivalence, we have that R is trace equivalence and the greatest bisimulation and temporal equivalence.  2
Remark 6.11 This situation may look a lot like the deterministic or Brownian drift with parity as the atomic proposition. However, there is one key difference here: we are preventing the set of translations by an even number to be a group of symmetries by only allowing positive numbers. These translations are however FD-homomorphisms. Proving that there is no greater group of symmetries than
{id} is not as trivial as it may look.

Testing for a critical value:
Fix m ∈ N≥0, we define the function obs by obs(x) = 1 if and only if x ≥ m.
Proposition 6.12 Two states x /= y are bisimilar if and only if x, y ≥ m.
Proof. Denote
R = {(x, x) | x < m}∪ {(x, y) | x, y ≥ m}
Let us show that it is a bisimulation. Consider x R y and assume x /= y. This means that x, y ≥ m and hence obs(x)= obs(y).
Now consider a measurable time-R-closed set B. Define Bj = B∩M∩{ω | ω(0) ≥ m} where M is the set of non-decreasing functions. Similarly to previous example, M is measurable. Note that the process can only realize non-decreasing trajectories, therefore Py(B)= Py(Bj) (and similarly for x).
There are now two cases to consider:
If Bj is empty, Py(B)= Px(B)= 0.
Otherwise, there exists ωj ∈ Bj. Note that for every time t ≥ 0, ωj(t) ≥ ωj(0) ≥
m since ω is non-decreasing.
We claim that Bj = {ω | ω(0) ≥ m}∩M . The direct inclusion is by definition. For the reverse implication, consider a non-decreasing trajectory ω such that for every time ω(0) ≥ m. This implies that for every time t ≥ 0, ω(t) ≥ m and since we also have that ωj(t) ≥ m, in particular ω(t) R ωj(t). Since ωj ∈ Bj ⊂ B and B is time-R-closed, ω ∈ B and hence ω ∈ Bj.
So this means that for every z ≥ m, Pz(Bj)= Pz({ω | ω(0) ≥ m}∩ M )= 1.
And in particular, this shows that P (B)= P (B)= 1.
To prove that it is the greatest bisimulation, we show that it corresponds to trace equivalence. The proof above can be easily adapted to show that x, y ≥ m are trace equivalent.
Clearly if x < m and y ≥ m, then x and y cannot be trace equivalent since
Px({ω | obs(ω(0)) = 0})=1 and Py({ω | obs(ω(0)) = 0})= 0.
Consider the case when x /= y are both less than m. Consider a time t > 0 and define Bt = {ω | ω(t) ≥ m}. This set is time-obs-closed and for k < m,

Pk(Bt)= Σ

Pk(Nt = n)= e
—λt Σ
(λt)n
n!

n≥m	n≥m—k
This allows us to conclude that if x /= y, Px(Bt) /= Py(Bt).	2
7	Conclusion
The main lesson we have learned is that the continuous-time setting is far more com- plex and richer than the discrete-time setting. There are entirely new phenomena at work, for example, the concept of local time or the fact that exit and entry times are not always easily definable when the state space is also a continuum. Not sur- prisingly, there are different possible extensions of the discrete-time equivalences to

the continuous-time setting. We have uncovered a few different behavioural equiv- alences; we expect some of them to be equivalent with some reasonable restrictions on the systems studied. The question of when they are really different is open and tends to get mired in measurability issues.
One of the interesting prospects is the pursuit of the symmetry group point of view. There are N¨other-like theorems for such systems [1] and it would be very interesting to explore such theorems in our setting.
There is still ongoing work to extend logical characterization and event bisimu- lation to the continuous-time setting. We are also exploring behavioural metrics in this setting.

References
John Baez and Brendan Fong. A Noether theorem for Markov processes. Journal of Mathematical Physics, 54(1):013301, 2013.
P. Billingsley. Convergence of Probability Measures. Wiley Interscience, 2nd edition, 1999.
Patrick Billingsley. Probability and measure. John Wiley & Sons, 2008.
R. Blute, J. Desharnais, A. Edalat, and P. Panangaden. Bisimulation for labelled Markov processes. In
Proceedings of the Twelfth IEEE Symposium On Logic In Computer Science, Warsaw, Poland., 1997.
Adam Bobrowski. Functional analysis for probability and stochastic processes: an introduction. Cambridge University Press, 2005.
Linan Chen, Florence Clerc, and Prakash Panangaden. Bisimulation for feller-dynkin processes. Electronic Notes in Theoretical Computer Science, 347:45 – 63, 2019. Proceedings of the Thirty-Fifth Conference on the Mathematical Foundations of Programming Semantics.
Florence Clerc, Nathana¨el Fijalkow, Bartek Klin, and Prakash Panangaden. Expressiveness of probabilistic modal logics: A gradual approach. Information and Computation, 267:145 – 163, 2019.
Vincent Danos, Jos´ee Desharnais, Fran¸cois Laviolette, and Prakash Panangaden. Bisimulation and cocongruence for probabilistic systems. Information and Computation, 204(4):503–523, 2006.
J. Desharnais, A. Edalat, and P. Panangaden. Bisimulation for labeled Markov processes. Information and Computation, 179(2):163–193, Dec 2002.
Jos´ee Desharnais and Prakash Panangaden. Continuous stochastic logic characterizes bisimulation for continuous-time Markov processes. Journal of Logic and Algebraic Progamming, 56:99–115, 2003. Special issue on Probabilistic Techniques for the Design and Analysis of Systems.
R. M. Dudley. Real Analysis and Probability. Wadsworth and Brookes/Cole, 1989.
A. Einstein. The theory of the brownian movement. Ann. der Physik, 17:549, 1905.
Nathanael Fijalkow, Bartek Klin, and Prakash Panangaden. The expressiveness of probabilistic modal logic revisited. In Proceedings of the 44th International Colloquium on Automata Languages and Programming, 2017.
Ioannis Karatzas and Steven Shreve. Brownian motion and stochastic calculus, volume 113. Springer Science and Business Media, 2012.
K. G. Larsen and A. Skou. Bisimulation through probablistic testing. Information and Computation, 94:1–28, 1991.
R. Milner. A Calculus for Communicating Systems, volume 92 of Lecture Notes in Computer Science. Springer-Verlag, 1980.
Prakash Panangaden. Labelled Markov Processes. Imperial College Press, 2009.
D. Park. Concurrency and automata on infinite sequences. In Proceedings of the 5th GI Conference on Theoretical Computer Science, number 104 in Lecture Notes In Computer Science, pages 167–183. Springer-Verlag, 1981.


L. Chris G. Rogers and David Williams. Diffusions, Markov processes and martingales: Volume 1. Foundations. Cambridge university press, 2nd edition, 2000.
Davide Sangiorgi. On the origins of bisimulation and coinduction. ACM Transactions on Programming Languages and Systems (TOPLAS), 31(4):15, 2009.
W. Whitt. An Introduction to Stochastic-Process Limits and their Applications to Queues. Springer Series in Operations Research. Springer-Verlag, 2002.

Bisimulation
Lemma A.1 There is a greatest temporal equivalence.
Proof. Define M the set of temporal equivalences and R the transitive closure of
R′∈Y R .
First note that the relation R is an equivalence. The equivalence {(x, x) | x ∈ E} is a bisimulation and hence x R x. Furthermore, if x R y, it means there exists (xi)i=0,...,n in E and (Rj)j=0,...,n—1 in R such that x0 = x, xn = y and for every i ∈ {0, ..., n − 1}, xi Ri xi+1. Since Ri is an equivalence, xi+1 Ri xi, and hence y R x. Finally, by definition the relation R is transitive.
Now, we can prove that R is a temporal equivalence. Consider x R y, i.e. there exists (xi)i=0,...,n in E and (Rj)j=0,...,n—1 in R such that x0 = x, xn = y and for every i ∈ {0, ..., n − 1}, xi Ri xi+1.
For the initiation condition, consider a measurable time-obs-closed set B. For every i ∈ {0, ..., n− 1}, Pxi (B)= Pxi+1 (B), since Ri is a temporal equivalence. This proves that
Px(B)= Px0 (B)= ... = Pxn (B)= Py(B)
For the induction condition, consider t ≥ 0 and a measurable R-closed set C. Then the set C is Ri-closed for every i ∈ {0, ..., n − 1}: consider z Ri zj and z ∈ C, then by definition of R, z R zj and since C is R-closed, zj ∈ C. Since Ri is a temporal equivalence, Pt(xi, C)= Pt(xi+1, C) and hence
Pt(x, C)= Pt(x0, C)= ... = Pt(xn, C)= Pt(y, C)
which concludes the proof.	2
Proof. [Proof of Theorem 3.8] Let Rj be a bisimulation and consider two states x
and y such that x Rj y.
Consider a time-obs-closed set B. Then it is also time-Rj-closed: consider two trajectories ω and ωj such that ω  B and for every time t, ω(t) Rj ωj(t). Then for every time t, obs(ω(t)) = obs(ωj(t)) (By the initiation condition of bisimulation). Since B is time-obs-closed and ω  B, ωj is also in B. Using the induction condition of bisimulation, we get that Px(B)= Py(B).
Consider a measurable R-closed set C and a time t.  Define the set B =
{ω | ω(t) ∈ C} = Xt  (C). It is measurable and time-R-closed. We can then apply the induction condition and we get
Pt(x, C)= Px(B)= Py(B)= Pt(y, C)

This concludes the proof that Rj is a temporal equivalence.
The second part of the lemma follows directly from the initiation condition of a temporal equivalence: this is precisely trace equivalence.	2
Symmetry groups of the process
Proof. [Proof of lemma 4.4] Consider h = f1 ◦	◦ fn such that fi or f—1 is in Hgen
for every i. First note that since for every f ∈ Hgen, obs ◦ f = obs implies that
obs = obs ◦ f—1 and hence for every i ∈ J1, n), obs ◦ fi = obs. Finally, we get that
obs ◦ f1 ◦ ... ◦ fn = obs ◦ f2 ◦ ... ◦ fn =	= obs.
Now, consider a set B such that for all hj ∈ H, hj (B) = B. In particular, for every f ∈ Hgen, f∗(B) = B. This implies that for every y in E∂ and for every fi, Py(B)= Pfi(y)(B), which means that for every x ∈ E∂,
Px(B)= Pfn(x)(B)= Pfn−1○fn(x)(B)= ... = Pf1○	○fn(x)(B)= Ph(x)(B).
2
The proof of Theorem 4.6 requires two additional lemmas.
Lemma B.1 Consider a time-RH-closed set B. Then for every f ∈ H, f∗(B) ⊂ B.
Proof. Consider ω ∈ B and any time t ≥ 0. Then f—1(f∗(ω)(t)) = f—1 ◦ f ◦ ω(t)= ω(t). Since f—1 is in H, we know that f (ω(t)) RH ω(t). This is true for any time t and since B is time-RH-closed, we have that f∗(ω) ∈ B.	2
Lemma B.2 Given a group of symmetries H, if a set B is time-RH-closed, then for every h ∈ H, h∗(B)= B.
Proof. First, using lemma B.1, h∗(B) ⊂ B.
To prove the converse implication, consider ω ∈ B. We define ωj as ωj = (h—1)∗(ω). Note that for all times t, h(ωj(t)) = ω(t), i.e. ω(t) RH ωj(t).
Since B is time-RH-closed, ωj ∈ B. We have defined ωj = (h—1)∗(ω)= h—1 ◦ ω. A direct consequence is that ω = h ◦ ωj = h∗(ωj), and therefore ω ∈ h∗(B).	2
Proof. [Proof of Theorem 4.6] Consider two equivalent states x RH y, i.e. there exists h ∈H such that h(x)= y.
First, obs(x)= obs ◦ h(x)= obs(y).
Second, let us consider a measurable, time-RH-closed B. Using lemma B.2, we know that for every f ∈ H, f∗(B) = B, and hence Px(B) = Ph(x)(B) = Py(B), which concludes the proof.	2

Game Interpretation
Game interpretation of bisimulation
Proof. [Proof of theorem 5.3] Denote R the greatest bisimulation.
For the first implication, if two trajectories ω and ωj are time-bisimilar, we know that for all t ≥ 0, for all time-R-closed sets Bj, Pω(t)(Bj)= Pω (t)(Bj). Spoiler chooses a time t ≥ 0 and a measurable set B such that Pω(t)(B) /= Pω (t)(B). This means that the set B that Spoiler chose cannot be time-R-closed. That is why Duplicator can find two trajectories ω0 ∈ B and ω1 ∈/ B that are time-bisimilar. This strategy is winning for Duplicator, since it is allowing him to respond to every move from Spoiler and Duplicator wins all infinite plays.
For the reverse implication, define the following relation Rj on trajectories:
ω Rj ωj if and only if duplicator has a winning strategy from (ω, ωj).
Note that Rj is an equivalence:
reflexivity: Spoiler has no valid move from (ω, ω), hence duplicator wins.
symmetry: Assume ω Rj ωj. Whatever move (B, t) Spoiler does when Dupli- cator says (ωj, ω) is also a valid move from (ω, ωj). Duplicator can then play as he would have from (ω, ωj) and if he had a winning strategy then, it is also a winning strategy now. This means that ωj Rj ω.
transitivity: Assume ω Rj ωj and ωj Rj ωjj. Now consider the game when duplicator starts by saying (ω, ωjj). Spoiler then says (B, t) such that Pω(t)(B) /= Pω (t)(B). In this case, note that we have Pω(t)(B) /= Pω (t)(B) or Pω′(t)(B) /= Pω′′(t)(B) (or both). Duplicator then picks one of those situation (or if only one of them is true, he picks this one) and replies what he would have replied in the game starting with the corresponding start: (ω, ωj) or (ωj, ωjj). Since Duplicator had a winning strategy in both game, he has one here. Hence ω Rj ωjj.
Define the following relation R1 on states: z R1 zj if and only if ωz Rj ωz′ . This relation is an equivalence (this is a direct consequence of the fact that Rj is itself an equivalence). Furthermore, this relation is a bisimulation. To prove this, assume it is not a bisimulation. I.e. there exists x R1 y such that either obs(x) /= obs(y) or there exists a measurable time-R1-closed set B of trajectories such that Px(B) /= Py(B). We can start by excluding the first case. Indeed we know that ωx Rj ωy, which means that obs ◦ ωx = obs ◦ ωy, i.e. obs(x)= obs(y).
We can now show that there is a contradiction. Consider the game starting from
(ωx, ωy). Spoiler says (B, 0). Now, whatever move (ω, ωj) (ω ∈ B and ωj ∈/ B)
duplicator picks, there exists t ≥ 0 such that ω(t) and ωj(t) are not R1-related (since B is time-R1-closed). This means that Spoiler has a winning strategy from (ωω(t), ωω′(t)) that he can play. This contradicts the fact that duplicator has a winning strategy from (ωx, ωy). Which proves that R1 is a bisimulation.	2
Remark C.1 We can also define the relation R2 on states: x R2 y if and only if there exists ω, ωj,t such that ω Rj ωj, ω(t)= x and ωj(t)= y.

Trivially, if x R1 y, then x R2 y.
Now assume that x R2 y, and consider ω, ωj,t according to the definition of R2. Duplicator has a winning strategy from (ωx, ωy). Indeed, either Spoiler is stuck from the start, in which case duplicator wins, or spoiler says (B, t). This means that Px(B) /= Py(B). Duplicator then replies what he would have said in the game starting from (ω, ωj) if Spoiler had said (B, t). This proves that R1 = R2.
Game interpretation of temporal equivalence
Proof. [Proof of Theorem 5.5] Denote R the greatest temporal equivalence.
For the first implication, if two states x and y are temporally equivalent, we know that for all t ≥ 0, for all R-closed sets Cj, Pt(x, Cj) = Pt(y, Cj). Spoiler chooses a time t ≥ 0 and a measurable set C such that Pt(x, C) /= Pt(y, C). This means that the set C that Spoiler chose cannot be R-closed. That is why Duplicator can find two states x1 ∈ C and y1 ∈/ C that are temporally equivalent. This strategy is winning for Duplicator, since it is allowing him to respond to every move from Spoiler and Duplicator wins all infinite plays.
For the reverse implication, define the following relation Rj on the state space:
x Rj y if and only if Duplicator has a winning strategy from (x, y).
Note that Rj is an equivalence:
reflexivity: Spoiler has no valid move from (x, x), hence duplicator wins.
symmetry: Assume x Rj y. Whatever move (C, t) Spoiler does when Duplicator says (x, y) is also a valid move from (y, x). Duplicator can then play as he would have from (x, y) and if he had a winning strategy then, it is also a winning strategy now. This means that y Rj x.
transitivity: Assume x Rj y and y Rj z. Now consider the game when duplicator starts by saying (x, z). Spoiler then says (C, t) such that Pt(x, C) /= Pt(z, C). In this case, Pt(x, C) /= Pt(y, C) or Pt(y, C) /= Pt(z, C) (or both). Duplicator then picks one of those situation (or if only one of them is true, he picks this one) and replies what he would have replied in the game starting with the corresponding start: (x, y) or (y, z). Since Duplicator had a winning strategy in both game, he has one here. Hence x Rj z.
Furthermore, this relation is a temporal equivalence. To prove this, assume it is not a temporal equivalence, i.e. there exists x Rj y such that either x and y are not trace equivalent, or there exists a measurable Rj-closed set C and a time t such that Pt(x, C) /= Pt(y, C).
Duplicator’s only valid moves are pairs of trace equivalent states, so only the second case is possible. Now consider (C, t) to be Spoiler’s move from (x, y). Whatever move (x1, y1) Duplicator chooses, it is not possible to have x1 Rj y1 since C is Rj- closed. Since the game is determined, Spoiler has a winning strategy from (xj, yj) which contradicts the fact that Duplicator has a winning strategy from (x, y). Which proves that Rj is a temporal equivalence.	2
