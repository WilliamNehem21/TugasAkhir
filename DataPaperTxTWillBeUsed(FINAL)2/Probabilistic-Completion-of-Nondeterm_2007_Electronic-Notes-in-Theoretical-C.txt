

Electronic Notes in Theoretical Computer Science 173 (2007) 67–84
www.elsevier.com/locate/entcs

Probabilistic Completion of Nondeterministic Models
Guy Beaulieu1
Department of Mathematics and Statistics University of Ottawa
Ottawa, Canada

Abstract
This work continues ongoing research in combining theories of nondeterminism and probabilistic choice. First, we adapt the above choice theories to allow for uncountably indexed nondeterministic operators, and countably indexed probabilistic operators. Classically, models for mixed choice were obtained by enhancing arbitrary models for probabilistic choice with appropriately distributive nondeterministic operations. In this paper, we focus on the dual approach: constructing mixed choice models by completing nondeterministic models with suitably behaved probabilistic operations. We introduce a functorial construction, called convex completion, which freely computes set-theoretical and posetal mixed choice models from the appropriate semilattices. The completion construction relies upon a new closure operation on convex sets, dependant on the given semilattice. Finally, we show that building a free mixed choice model is equivalent to applying the convex completion functor to its corresponding free nondeterministic model.
Keywords: combining categorical theories, mixed choice theory, functorial factorization, convex completion w.r.t a semilattice


Introduction
This paper addresses the problem of how to add appropriately behaved proba- bilistic operators to models of nondeterminism, which is the focus of the author’s upcoming PhD thesis, [2]. While there is a large literature on probabilistic theories [5,7,8,9,15] and also nondeterministic theories [14,16,18] in isolation, theories with interacting (mixed) choice operators are a more recent phenomenon. Among many developments in the area of mixed choice [4,10,12,13,19,20,21], the works that have most influenced our viewpoints are Mislove,Ouaknine, and Worrell [13], and Keimel, Plotkin, and Tix [10], along with the methods on combining Lawvere theories in- troduced in Power [17], and in Hyland, Plotkin and Power [6].
We consider mixed choice theories which admit probabilistic operators of count- able arity and nondeterministic operators of possibly uncountable arity. Separately,

1 Email: gbeaua181@rogers.com



1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2007.02.028

each choice theory is associated to a monad. In our case, the probabilistic choice theory is associated to the distributions monad and the nondeterministic choice theory is associated to the non-empty powerset monad. These will be described later on in the paper. The use of uncountably indexed nondeterministic operators in our framework, is motivated by two important factors. First, the probabilistic completion of nondeterministic models with uncountable nondeterministic opera- tors has a simpler presentation and a greater degree of generality than its countable counterpart. Second, let ☒ denote nondeterministic choice and for λ ∈ [0, 1], let A ⊕λ B denote the probabilistic operator which evaluates to A with probability λ and evaluates to B with probability 1 − λ. In our framework, the nondeterministic choice between terms A and B can be interpreted as the probabilistic choice of indeterminate weight of the constituents. This viewpoint is the same as the one proposed by Mislove [12] and also Tix [19] in their approach to creating a mixed choice theory. However, our use of uncountable nondeterministic operators is a new
feature allowing us to express the above interpretation of nondeterminism formally
as A ☒ B = ☒ (A ⊕λ B). This equation is derivable from our axioms defining a
λ∈[0,1]
mixed choice theory.
Works by Power [17], and Hyland, Plotkin and Power [6] develop machinery for merging enriched Lawvere theories to combine computational effects, such as com- bining nondeterminism and probabilistic choice. In particular, Power [17] defines (among other things) a subset of enriched countable Lawvere theories which can be merged under a distributive tensor. The distributive tensor between the Lawvere theories L and L', denoted L d L', is the theory which admits all the operations and axioms from L and L' but also imposes distributivity axioms which make every operation in L distribute over every operation in L'. This describes exactly our intended structure for mixed choice.
We proceed by constructing such a distributive tensor, however on a more general combination of Lawvere theories. In our case the theory of nondeterminism has uncountable operators and does not appear to fit in Power’s framework. In the end our axioms for mixed choice agree with the works of Mislove, Ouaknine and Worrell
[13] and Keimel, Plotkin and Tix [10].
In the above literature on combining nondeterministic and probabilistic choice, the approach to constructing models of mixed choice in a category C, is always the same:
First, freely construct probabilistic models over the category C. Thus for set- theoretical models one would use the distributions functor, D, and for domain- theoretical models one would use the extended probabilistic powerdomain, V.
Then, freely complete the probabilistic models obtained in (i) with suitable distributive nondeterministic operations, in such a way as to obtain a model for mixed choice. For set-theoretical models the convex powerset functor, P∗ is used and for domain-theoretical models there are three types of convex pow- erdomains: lower, upper and biconvex.
The above algorithm applied over the category Set corresponds to composing the





∗
cvx




UP∗
˛M od(TM,C, Set) ¸  
UCcvx


Ccvx

Mod(LP, Set)





D
cvx




UD  

UGcvx


Gcvx




  UP∗
P∗
Mod(T¸N,D, Set)

Fig. 1. Mixed Choice Factored Through Probabilistic and Nondeterministic Choice
functors along the left-hand path in the commuting diagram in Figure 1.
Through general categorical results from Barr and Wells [1], we observed that models of mixed choice could also be obtained by completing arbitrary models of nondeterminism with appropriately distributive probabilistic operators. Thus, allowing for an alternative algorithm to constructing models for mixed choice.
(i’) First, freely construct nondeterministic models over the category C. Thus for set-theoretical models one would use the non-empty powerset functor, P∗.
(ii’) Then, freely complete the nondeterministic models obtained in (i’) with suit- able distributive probabilistic operations, in such a way as to obtain a model for mixed choice. For set-theoretical models we will define the convex completions functor, Ccvx , to do so.
This algorithm corresponds to composing the functors along the right-hand path in the commutative diagram in Figure 1. This new approach allows for a wider range of mixed choice models to be studied: those that would arise from arbitrary semilattices, hence arbitrary nondeterministic models with a possible non-standard definition of nondeterminism. This paper will focus on giving a concrete definition of the functors on the right-hand path. More specifically, how to explicitly compute the convex completions functor, Ccvx : Mod(TND, Set) → Mod(TMC, Set), (in the “northeast quadrant” of Figure 1) which assigns a model of mixed choice to an arbitrary nondeterministic model.
In the first section, we provide a quick review of the various categorical notions used, with a short list of important notation. In the second section we give a quick overview on combining the choice theories. The third section contains our main result on completing arbitrary nondeterministic models with appropriately distributive probabilistic operators. We introduce the theory necessary to construct the convex completions functor and give a full account of its adjunction structure. The final section presents how our functors can be lifted to find posetal models.

Categorical Preliminaries
The following are various categorical definitions and results used below. We follow the treatments in [1,3,11].
Definition 2.1 [Monads] A monad, T, on a category C is given by T = (T , η, μ) where T  : C → C is a functor and η : 1C ⇒ T , μ : TT  ⇒ T  are natural

transformations satisfying the commutativity conditions: μ ◦ ηT = 1T = μ ◦ Tη, and
μ ◦ μT = μ ◦ Tμ.
Example 2.2 [Non-empty Powerset Monad] The monad P∗ = (P∗, η, μ), called the
non-empty powerset monad, is defined such that for X ∈ Set,
P∗ is the non-empty powerset functor, i.e. P∗(X)= {Y |∅ /= Y ⊆ X} ;
ηX is the singleton map, for x ∈ X, ηX (x)= {x};
μX is the big union map, for any Y ∈ P∗P∗(X ),
μX(Y)=  Y∈Y Y.
Definition 2.3 [T-Algebras] Let T = (T , η, μ) be a monad on a category C. A
T-algebra is a pair (C, T (C)	ζ	C) with C and ζ in C such that ζ ◦ η	= 1	and
C	C
ξ
ζ ◦T ζ = ζ ◦ μC. If (D, T (D) −→ D) is another T-algebra, a morphism f : (C, ζ) →
(D, ξ) of T-algebras is a morphism f : C → D in C satisfying f ◦ ζ = ξ ◦T f .
Proposition 2.4 Let T = (T , η, μ) be a monad on a category C. The T-algebras and their morphisms constitute a category, written CT, called the “Eilenberg- Moore” category for T over C.
Example 2.5 The Eilenberg-Moore category for P∗ is equivalent to SLat: the category of ∨-semilattices and ∨-preserving maps.
The following definition for categorical theories is a generalization of the defini- tion of algebraic theory presented in Borceux [3, p.130], where we allow for arbitrary powers of the generating object.
Definition 2.6 [Categorical Theories]
A category T, is a categorical theory, if its objects are given by possibly un- countable (cartesian) products, TW , on some generating object T .
A countable Lawvere theory L, is a categorical theory whose objects consist of countable products of the generator.
Let T be a categorical theory and C a category with the same (possibly un- countable) product structure as T. Models of T in C and morphisms between them can be described under two equivalent forms:
As product preserving functors F : T → Set, with morphisms being nat- ural transformations between such functors.
As universal algebras: objects C ∈ C and a set of W -ary operations on C,
fˆ : CW → CW ' | f : TW → TW ' ∈ T  which satisfy the same equations as the corresponding morphisms in T. Morphisms between such algebras are maps in C which preserve every operation in the set of operations on C.
We denote by Mod(T, C), the category of models of T in C.
Proposition 2.7 The following categories coincide;
the model category of a countable Lawvere theory L over Set, Mod(L, Set);
the category of T-algebras, where T is a monad of countable rank on Set.

Notation
Categorical Theories
TND - nondeterministic choice theory.
LND - countable Lawvere theory of nondeterministic choice.
LP - countable Lawvere theory of probabilistic choice.
TMC - mixed choice theory.
LMC - countable Lawvere theory of mixed choice.
Monads
P∗ : Set → Set - non-empty powerset monad.
D : Set → Set - distributions monad.
Gcvx : Set → Set - geometrically convex powerset monad.
Ccvx : Set → Set - convex completion monad.
Functors
P∗ : Set → Mod(TND, Set) - non-empty powerset functor.
D : Set → Mod(LP, Set) - distributions functor.
Gcvx : Set → Mod(TMC, Set) - geometrically convex powerset functor.
Ccvx : Mod(TND, Set) → Mod(TMC, Set) - convex completion functor.
Operators
☒ - binary nondeterministic choice.
⊕λ - binary probabilistic choice weighted by λ.
☒ - nondeterministic choice indexed by W .
W
(λ )  - probabilistic choice weighted by the sequence (λi)I .

Nondeterministic, Probabilistic & Mixed Choice
In this section we recall the definitions of each choice theory and their associated monads. This includes the definitions of all the functors present in Figure 1, except for the convex completion functor, Ccvx : Mod(TND, Set) → Mod(TMC, Set), which we present in full details in the following section.

The Theory of Nondeterminism and the Non-empty Powerset Monad
Definition 3.1 [Nondeterministic Choice Theory] The nondeterministic choice theory, TND, is the categorical theory given as follows:
Objects: Arbitrary products of some fixed generating object N . So objects are denoted by NW for some indexing set W .
Morphisms: In addition to the required morphisms for the product structure, there exists nondeterminism operators (ND-ops) of possibly uncountable arity.
Given a non-empty indexing set W , the ND-op of arity W is denoted as the
morphism ☒ : NW → N .
W

The nondeterminism operators must satisfy the following axioms:
(N-Ax1) ☒ Aw = ☒ ( ☒ Av), with {Vu | u ∈ U } a partition of W.

w∈W
(N-Ax2) ☒
w∈W
u∈U
A	= A.
v∈Vu

Remark 3.2 [Axioms for Finite ND-ops] Consider the binary ND-op, denoted by A1 ☒ A2, then every finitely indexed ND-op is generated by the binary ND-op. As a consequence of (N-Ax1) and (N-Ax2) we can derive the usual semilattice axioms:

(N-Assoc)	(A1 ☒ A2) ☒ A3 = A1 ☒ (A2 ☒ A3) (N-Com)		A1 ☒ A2 = A2 ☒ A1
(N-Idem)	A ☒ A = A
Definition 3.3 [Models of Nondeterminism] Let C be a category with arbitrary products. A model of TND in C, denoted (C, {   }), consists of an object C ∈ C
and for each non-empty indexing set W (W possibly uncountable) a nondetermin-
istic operator ☒ : CW → C satisfying (N-Ax1) and (N-Ax2).
W
Definition 3.4 [Countable Lawvere Theory of Nondeterministic Choice] The countable Lawvere theory of nondeterministic choice, denoted LND, is the full sub- category of TND generated by countable products of N .
Proposition 3.5 The category of models of the nondeterministic theory TND over Set, Mod(TND, Set), is equivalent to the category of P∗-algebras, P∗-Alg, where P∗ is the non-empty powerset monad as deﬁned in Example 2.2.

The Theory of Probabilistic Choice and the Distributions Functor
Definition 3.6 [Probabilistic Weighting] A probabilistic weighting, (λi)I , is a countable sequence of elements in the interval (0, 1] such that  i∈I λi = 1. We will denote the set of all probabilistic weightings by Prob. Whenever the indexing
set is clear from the context we shall denote write (λi) in lieu of (λi)I .
Definition 3.7 [Countable Lawvere Theory of Probabilistic Choice] The countable Lawvere theory of probabilistic choice, LP, is given as follows:
Objects: Countable products of some fixed generating object P . So objects are denoted by PI for some countable indexing set I.
Morphisms: In addition to the required morphisms for the product struc- ture, there are probability operators (P-ops) indexed by probabilistic weight- ings (λi)I . The P-op weighted by (λi)I ∈ Prob, is denoted by the morphism

(λi)I
: PI → P .

The probabilistic operators must satisfy the following axioms:


(P-Ax1)   (λ )

Ai =   (ρ )

(   (ν )
Ak), with {Kj | j ∈ J } a partition of I,



(P-Ax2)   (λ )


A = A.
ρj =	λk
k∈Kj
and νk
= λk .
ρj

Remark 3.8 [Axioms for Finite P-ops] Any P-op indexed by a finite probabilistic weighting can be generated by binary P-ops. We shall denote the binary P-op indexed by (λ, 1 − λ) ∈ Prob by A1 ⊕λ A2 and define ⊕1 , ⊕0 : P 2 → P to be the left and right projections on P 2 respectively. The axioms we derive for finite P-ops correspond to the usual axioms for probabilistic choice in the literature.
(P-Assoc)	(A1 ⊕λ A2) ⊕ρ A3 = A1 ⊕λρ (A2 ⊕ (1−λ)ρ A3),	where λρ /=1 
1−λρ
(P-Com)	A1 ⊕λ A2 = A2 ⊕1−λ A1,
(P-Idem)	A ⊕λ A = A
Definition 3.9 [Models of Probabilistic Choice] Let C be a category with countable products. A model of LP in C, (C, {	}), is given by an object C ∈ C and for
each probabilistic weighting (λi)I ∈ Prob a probabilistic operator  (λ ) : C → C
I

satisfying (P-Ax1) and (P-Ax2).
Definition 3.10 [Distributions Functor] The distributions functor, D : Set →
Mod(LP, Set), is given by:
On objects: For X ∈ Set, D(X)= (D(X), {	}), such that
D(X)= d : X → [0, 1] | (d(x))supp(d) ∈ Prob ,
where supp(d)= {x ∈ X | d(x) /= 0} is the support of d, and

For (λi)I ∈ Prob and (di)I ∈ D(X)I , 

(λi)I
di =	λidi.
i∈I

On morphisms: For f : X → X' ∈ Set, d ∈ D(X) and x' ∈ X', then (Df (d))(x')= Σ{x∈X | f (x)=x'} d(x).
Proposition 3.11 (Distributions Monad) The distributions functor D : Set → Mod(LP, Set) is left adjoint to the forgetful functor UD : Mod(LP, Set) → Set. Thus it forms a monad D = (UD ◦ D, η, μ) over Set, with adjunction structure:
The unit(η): for X ∈ Set and x ∈ X, ηX (x)= δx, where δx : X → [0, 1] is
1 if x' = x
the Dirac distribution given by δx(x')= 

The counit(ε): for (P, { 
0 otherwise
}) ∈ Mod(LP, Set) and d ∈ D(P ), ε(P,{⊕})(d)= 


  (d(p))
p.
supp(d)

Proposition 3.12 The category of models of the probabilistic choice theory LP over
Set, Mod(LP, Set), is equivalent to the category of D-algebras, D-Alg.

The Theory of Mixed Choice and the Geometrically Convex Powerset Functor
Definition 3.13 [Mixed Choice Theory] The mixed choice theory, TMC, is given as follows:
Objects: Arbitrary products of some fixed generating object M . So objects are denoted by MW for some indexing set W .
Morphisms: In addition to the required morphism for the product structure

we include ND-ops, ☒
W
: MW → M and P-ops,
(λi)I
: MI → M .

The ND-ops must satisfy (N-Ax1), (N-Ax2) and the P-ops must satisfy (P-Ax1), (P-Ax2). Furthermore the following distributivity axioms must hold:

(Dist)   (λ ) ( ☒
Aw)=	☒
(   (λ )
Aπi(w))

Remark 3.14 [Axioms for Finite ND-ops and P-ops] For the binary ND-op and P-ops we can derive the following axiom from (Dist):
(FinDist)	(A1 ☒ A2) ⊕λ A3 = (A1 ⊕λ A3) ☒ (A2 ⊕λ A3)
Thus, (FinDist) together with the previously derived axioms (N-Assoc), (N-com), (N-Idem), (P-Assoc), (P-Com), (P-Idem), form the usual axiom set for mixed choice found in the literature.
Definition 3.15 [Models of Mixed Choice] Let C be a category with arbitrary
products. A model of TMC in C, (C, {☒ }, {	}), is given by an object C ∈ C,
for each probabilistic weighting (λi)I ∈ Prob a P-op   (λ ) : C → C and for each
I

non-empty indexing set W a ND-op ☒
W
(N-Ax2), (P-Ax1), (P-Ax2) and (Dist).


: CW → C subject to the axioms (N-Ax1),


Fig. 2. Axioms for TMC at a Glance

Definition 3.16 [Countable Lawvere Mixed Choice Theory] The countable Law- vere mixed choice theory, LMC, is given by LP d LND, the distributive tensor between LP and LND. Equivalently, it is the full subcategory of TMC generated by countable products of M .

Definition 3.17 [Convex  Subsets]  Let  X	be a set equipped with P-ops,

(λi)
: XI → X.	A subset Y of X is convex if for every (λi)I ∈ Prob and

(yi)I ∈ Y I , 

(λi)
yi ∈ Y.

Definition 3.18 [Geometrically Convex Powerset Functor] The geometrically con- vex powerset functor, Gcvx : Set → Mod(TMC, Set), is given by:
On objects: For X ∈ Set, Gcvx(X)= (Gcvx(X), {☒ }, {	}), such that
Gcvx(X)= {Y | Y is a convex subset of D(X)},

For (λi)I ∈ Prob and (Yi)I ∈ Gcvx(X)I ,
(λi)I
For a non-empty family (Yw)W ∈ Gcvx(X)W ,
Yi =  Σi∈I λiyi | yi ∈ Yi},

☒
w∈W
Yw =  Σi∈I ρiyi | I ⊆ W, yi ∈ Yi, (ρi)I ∈ Prob}.

On morphisms: For f : X → X' ∈ Set and Y ∈ Gcvx(X), then
Gcvxf (Y )= {Df (y) | y ∈ Y }.
Proposition 3.19 The geometrically convex powerset functor Gcvx : Set → Mod(TMC, Set) is left adjoint to the forgetful functor UGcvx : Mod(TMC, Set) → Set. Thus it forms a monad Gcvx = (UGcvx ◦ Gcvx, η, μ) over Set. We include the adjunction structure:
The unit(η): for X ∈ Set and x ∈ X, ηX (x)= {δx}.
The counit(ε): for (M, {☒ }, {	}) ∈ Mod(TMC, Set) and Y ∈ Gcvx(M ),

ε(P,{☒},{⊕})(Y )= ☒ (	(y(m))
y∈Y


supp(y)
m).

Proposition 3.20 The category of models of the mixed choice theory TMC in Set, Mod(TMC, Set), is equivalent to the category of Gcvx-algebras, Gcvx-Alg.

Mixed Choice Models from Nondeterministic Models
In  this  section  we  construct  the  convex  completion  functor, Ccvx : Mod(TND, Set) → Mod(TMC, Set), the functor which freely constructs models of TMC over Set from semilattices, i.e. models of TND over Set. First we consider the following special case of a theorem of Barr and Wells [1, p. 133].
Theorem 4.1 Consider the diagram below satisfying the following conditions,


Mod(TM,C, Set) ¸¸Ccvx
UCcvx	z 
Gcvx is left adjoint to UGcvx ,
P∗ is left adjoint to UP∗,
UP∗◦UCcvx is naturally isomor-

UGcvx
Gcvx

UP∗
Mod( T¸ND, Set)
phic to UGcvx ,
UP∗ is of descent type, and

(z  s		P∗
Set
Mod(TMC, Set) has coequal-
izers.

Then UCcvx has a left adjoint Ccvx for which Ccvx ◦ P∗ ∼= Gcvx.

Although Theorem 4.1 states the existence of the left adjoint Ccvx , it only gives a partially constructive proof. The proof clearly states that the image of a free object (P∗(X), ∪) ∈ Mod(TND, Set) under Ccvx is isomorphic to Gcvx(X) ∈ Mod(TMC, Set). However, the image of a non-free object is dependant on com- puting coequalizers in Mod(TMC, Set). Hence, to define Ccvx one must determine how to calculate coequalizers in Mod(TMC, Set).
In this section we shall give a concrete definition for the left adjoint of UCcvx : Mod(TMC, Set) → Mod(TND, Set), which we call the convex completion functor, Ccvx : Mod(TND, Set) → Mod(TMC, Set). In the first subsection, we introduce the concepts needed to define Ccvx and then give its full definition and structure in the next subsection.
Completion of Convex Sets w.r.t. a Semilattice
In this section we define a closure operation on elements of Gcvx(S), called com- pletion w.r.t. (S, ∨), where (S, ∨) is an arbitrary semilattice. These completions are very important in defining the left adjoint of UCcvx : Mod(TMC, Set) → Mod(TND, Set) due to the following correspondence.
Two convex sets C1, C2 ∈ Gcvx(S) are related by the congruence relation generated by the coequalizers from the proof of Theorem 4.1 if and only if their completions
w.r.t (S, ∨) are equal.
The congruence relation generated in the proof of Theorem 4.1 is given by the smallest congruence relation over Gcvx(S) containing the set
{(D(T ), D({∨T })) | T ∈ P∗(S)}. One can see that the elements of Gcvx(S) of the form D(T ), with T ∈ P∗(S), play an important role in determining if two elements are congruent. They will also be an important aspect in defining the completion operation.
Definition 4.2 [Faces] Given a semilattice (S, ∨),
An element Y ∈ Gcvx(S) is a face of Gcvx(S), if Y = D(T ), where T ∈ P∗(S). Note that if (S, ∨) is a finite semilattice, then the faces correspond exactly to the faces of the polytope D(S).
An element F ∈ Gcvx(S) is a facial polytope of Gcvx(S), if F is an element
of Poly , the convex subset of Gcvx(S) generated by the faces of Gcvx(S), i.e
F ∈ Poly =    (λ ) D(Ti) | (λi)I ∈ Prob, Ti ⊆ S .
Example 4.3 Consider the semilattices S1 and S2 from Figure 3. Since the un- derlying sets of S1 and S2 are equal, each semilattice will generate the same set of faces and facial polytopes. We give some examples and non-examples of elements of Poly for S1 and S2 in Figure 4.
For a semilattice (S, ∨), consider a face D(T ), T ∈ P∗(S). Recall that the con- gruence relation discussed in the proof of Theorem 4.1 was generated by the set
{(D(T ), D({∨T })) | T ∈ P∗(S)}. Therefore, D(T ) is congruent to D({∨T }). More- over there is a largest face which is congruent to D({∨T }), namely D(↓{∨T }), where

d	d

a	b	c
a
S1 = ({a, b, c, d}, ∨1)	S2 = ({a, b, c, d}, ∨2)
Fig. 3. Semilattices S1 and S2

Face	Facial Polytope	Non-Example
d	d	d


a	c	a	c	a	c

b	b	b
D({a, b, c, d})	D({c, d}) ⊕ 1 D({a, b, c})
2
Fig. 4. Examples of Faces and Facial Polytopes in S1 and S2
↓{∨T } is the face generated by the downset of {∨T }, ↓{∨T } = {s ∈ S | s ≤ ∨T }, where for s, t ∈ S, s ≤ t if and only if s ∨ t = t. Next, we define a facial polytope expansion construction on facial polytopes based on the above observations.
Definition 4.4 [Facial Polytope Expansion, (F ↓)] Given a semilattice (S, ∨), let

F = 

(λi)I
D(Ti) ∈ Poly , where (λi)I ∈ Prob and Ti ∈ P∗(S). The facial polytope

expansion of F , denoted F ↓, is given by F ↓ =
(λi)I
D(↓{∨Ti}).

Example 4.5 Consider the semilattices S1 and S2 from Figure 3. We list below the faces of Gcvx(S1) and Gcvx(S2) on which their facial polytope expansion disagree.

Given a convex set C ∈ Gcvx(S), if it contains a face, say D(T ), then C = C ☒ D(T ). By our previous observations, D(T ) is congruent to D(↓{∨T }), hence C is congruent to C ☒ D(↓{∨T }). A similar reasoning using facial polytopes implies that if F ∈ Poly and F ⊆ C then C is congruent to C ☒ F ↓. Since F ⊆ F ↓, we have that C ☒ F ↓ is a possibly larger representative than C in their common congruence class. Since we are searching for the largest representative in a given congruence class, we focus on convex sets which are invariant under all facial expansions, i.e. for

any facial polytope F such that F ⊆ C then C = C ☒F ↓. We shall call such a convex set complete. Thus, a convex set C ∈ Gcvx(S) is complete if for any convex subset contained in C generated by a set of facial polytopes D ⊆ Poly , then the convex subset generated by their facial expansions F ↓ | F ∈ D , must also be contained in C.
Definition 4.6 [Complete] Given a semilattice (S, ∨) and C ∈ Gcvx(S). We say C is complete under (S, ∨) if for every F ∈ Poly such that F ⊆ C then F ↓ ⊆ C. We shall denote by Cmp, the set of all complete convex sets in Gcvx(S).
Example 4.7 Consider our semilattices S1 and S2 from Example 4.3. We present two convex sets in Gcvx(S1) = Gcvx(S2) which are complete in one semilattice but not the other.
The face D({b}) is complete in Gcvx(S2).  However, it is not complete in
Gcvx(S1), since D({b})↓ = D({a, b}) /⊆ D({b}).
The face D({a, b}) is complete in Gcvx(S1). However, it is not complete in
Gcvx(S2), since D({a, b})↓ = D({a, b, c, d}) /⊆ D({a, b}).
Proposition 4.8 Let W be a possibly uncountable, non-empty indexing set. Con- sider the family (Cw)W , where Cw ∈ Gcvx(S). If every Cw is complete, then  W Cw is also complete.
The above proposition states that for any C ∈ Gcvx(S) there exists a smallest complete convex set, C⇓ in Gcvx(S) which contains C. It is given by the intersection of all complete convex sets D ∈ Cmp such that C ⊆ D, i.e. C⇓ =  {D∈Cmp | C⊆D} D.
Definition 4.9 [Completion, (C⇓)] Given a semilattice (S, ∨) and C ∈ Gcvx(S). The completion of C under (S, ∨), denoted by C⇓, is the smallest complete convex set in Gcvx(S) containing C.
Example 4.10 Consider the semilattices from Example 4.3.
The completion of D({b}) in S1 is given by (D({b}))⇓ = D({a, b}).
The completion of D({a, b}) in S2 is given by (D({a, b}))⇓ = D({a, b, c, d}).
It is not always the case that the completion of a finitely generated convex set results in a finitely generated convex set. For example consider the convex hull of {a + 1 c, a + 1 c, b} in Gcvx(S2), denote it by hull ({a + 1 c, a + 1 c, b}). The
3	2	3	2
completion of hull ({a + 1 c, a + 1 c, b}) is the convex set obtained by removing

3	2
D({a, d}), D({b, c}), D({b, d}) and D({c, d}) from D(S2) and then adding {d},
as can be seen in Figure 5 .
Proposition 4.11 Given a semilattice (S, ∨), completion w.r.t (S, ∨) is a closure operator on Gcvx(S). In other words, completion w.r.t. (S, ∨), (·)⇓ : Gcvx(S) → Gcvx(S), satisﬁes the following properties: let C, D ∈ Gcvx(S)
C ⊆ C⇓; ((·)⇓ is extensive),
(C⇓)⇓ = C⇓; ((·)⇓ is idempotent),
if C ⊆ D, then C⇓ ⊆ D⇓; ((·)⇓ is monotone).

d





a + 1 b
2

a + 1 b

3	◦
b

hull ({a + 1 c, a + 1 c, b})	(hull ({a + 1 c, a + 1 c, b}))⇓
	
3	2	3	2
Fig. 5. Completion of hull ({a + 1 c, a + 1 c, b})


3	2
Given a convex set C ∈ Gcvx(S), for any non-empty family (Fw)W ∈ Poly W such
that Fw ⊆ C, then C ⊆ ☒ (C ☒ Fw↓) ⊆ C⇓. Moreover, we can make a similar
w∈W
argument with ☒ (C ☒ Fw↓) and a non-empty family (Fu)U ∈ Poly U such that
w∈W
Fu ⊆ ☒ (C ☒ Fw↓). We shall call an element obtained by the above construction
w∈W
a partial completion on C under (S, ∨). Below, we give a recursive definition for the
set of all partial completions on C under (S, ∨) and use it to compute the completion of C under (S, ∨).
Definition 4.12 [Partial Completions] Given a semilattice (S, ∨) and C ∈ Gcvx(S). The set of partial completions on C under (S, ∨), Parcmp(C), is defined by:
C ∈ Parcmp(C),
for Y ∈ Parcmp(C) and F ∈ Poly such that F ⊆ Y , then Y ☒F ↓ ∈ Parcmp(C),

for a non-empty family (Yw)W ∈ Parcmp(C)W , then ☒
w∈W
Yw ∈ Parcmp(C).

Theorem 4.13 Let C ∈ Gcvx(S), then C⇓ =	☒	Y.
Y ∈Parcmp(C)
Probabilistic Completion of Nondeterministic Models
Definition 4.14 [Convex Completion Functor] The convex completion functor,
Ccvx : Mod(TND, Set) → Mod(TMC, Set) is defined as follows:
On	objects:	For	(S, ∨)	∈	Mod(TND, Set),	Ccvx ((S, ∨))	=
(Ccvx (S), {☒ }, {	}), such that
Ccvx (S)=  C⇓ | C ∈ Gcvx(S)},
for (λ ) ∈ Prob and (C ) ∈ G	(S)I ,	C ⇓ = (	⇓ ⇓

for a non-empty family (Cw)W
∈ Gcvx
(S)W ,
☒
w∈W
Cw⇓ =( ☒ Cw ) .
w∈W

On morphisms: For f : (S, ∨) → (S', ∨') ∈ Mod(TND, Set) and C ∈
Gcvx(S), Ccvx f (C⇓)= (Gcvxf (C⇓))⇓.

Theorem 4.15 The convex completion functor Ccvx : Mod(TND, Set) → Mod(TMC, Set) is left adjoint to the forgetful functor UCcvx : Mod(TMC, Set) → Mod(TND, Set). Thus it forms a monad Ccvx = (UCcvx ◦ Ccvx , η, μ) over Mod(TND, Set). We include the adjunction structure:
The unit(η): for (S, ∨) ∈ Mod(TND, Set) and s ∈ S, η(S,∨)(s)= {δs}⇓.
The counit(ε): for (M, {☒ }, {  }) ∈ Mod(TMC, Set) and C ∈ Gcvx(S),

ε(M,{☒},{⊕})(C⇓)= ☒ (
c∈C


(c(m))supp(c)
m).

Theorem 4.16 We can factorize the geometrically convex powerset functor, Gcvx, through the non-empty powerset functor P∗ by using the convex completion functor Ccvx , i.e. Gcvx ∼= Ccvx ◦ P∗.
Proof. [Sketch] We define two inverse natural transformations:
φ : (Ccvx ◦ P∗) ⇒ Gcvx, where for an X ∈ Set, the mixed choice morphism
φX : (Ccvx ◦ P∗)(X) → Gcvx(X) on C⇓ ∈ (Ccvx ◦ P∗)(X), is given by

φX(C⇓)= ☒
c∈C⇓

(
(c(A))supp(c)
(☒ D({a}))).
a∈A

ψ : Gcvx ⇒ (Ccvx ◦ P∗), where for an X ∈ Set, the mixed choice morphism
ψX : Gcvx(X) → (Ccvx ◦ P∗)(X) on C ∈ Gcvx(X) is given by


ψX (C)= (☒ (
c∈C


(c(a))supp(c)
⇓
D({{a}}))) .

To show that the above natural transformations are inverse we need the following technical lemmas.
Lemma 4.17 For	any	X	∈	Set	and	C	∈	Gcvx(X)	the	convex	set

☒ (	(c(a))
c∈C


supp(c)
D({{a}})) is complete.

Lemma 4.18 For any X	∈	Set  and C⇓	∈	(Ccvx ◦ P∗)(X),	C⇓	=

( ☒
c∈C⇓
(
(c(A))supp(c)
D({{a}| a ∈ A}
⇓
))) .

Let X ∈ Set and C ∈ Gcvx(X), we compute φX ◦ ψX (C).

φX ◦ ψX
(C) = φX
((☒ (
c∈C


(c(a))supp(c)
⇓
D({{a}}))) )

= φX (☒ (	(c(a))
c∈C


supp(c)
D({{a}})))	by Lemma 4.17

= ☒ (	(c(a))
c∈C
= C


supp(c)
D({a}))

Let X ∈ Set and C⇓ ∈ (Ccvx ◦ P∗)(X), we compute ψX ◦ φX (C⇓).

ψX ◦ φX(C⇓)= ψX ( ☒
c∈C⇓
(
(c(A))supp(c)
(☒ D({a}))))
a∈A

=( ☒
c∈C⇓
=( ☒
c∈C⇓
(
supp(c)

(
supp(c)
(☒ D({{a}}))))⇓
a∈A
⇓
D({{a}| a ∈ A})))

= C⇓	by Lemma 4.18

Lifting to Posets
In this section we lift the above construction from the category Set to the category Poset. That is, we wish to consider our initial diagram in Figure 1 with Set replaced by Poset. In the case of domains, Keimel, Plotkin and Tix [10], develop three convex powerdomains (lower, upper and biconvex) in order to construct mixed choice models from probabilistic models. Thus by taking their composition with the probabilistic powerdomain [7,8], we obtain three possible powerdomains for constructing mixed choice models. Once again this approach uses the classical algorithm for constructing mixed choice models and is represented by composing functors along the left-hand path in our posetal version of Figure 1.
Below we construct posetal mixed choice models, based on our alternate algo- rithm proposed in the Introduction. Hence, we shall define the functors on the right-hand path of the posetal version of Figure 1. We begin by recalling the known powerdomain structures over Poset, the probabilistic powerdomain and the three powerdomain constructions which model nondeterminism: the Plotkin pow- erdomain, the Hoare (Lower) Powerdomain and the Smyth (Upper) Powerdomain. Finally, we present for each type of powerdomain for nondeterminism the corre- sponding posetal completion functor in order to build posetal models for mixed choice.

Probabilistic and Nondeterministic Powerdomains
We begin by presenting the posetal probabilistic powerdomain.
Definition 5.1 [Probabilistic Powerdomain over Poset] The probabilistic power- domain over Poset, D : Poset → Mod(LP, Poset) is defined as follows:
On objects: (X, ±), (X, ±) '→ ((D(X), ≤±), {  }), where ≤± is the distri- butions order generated by ±. For d, d' ∈ D(X), d ≤± d' if and only if for all Y ⊆ X, d(↑±Y ) ≤ d'(↑±Y ), where d(Y )=  y∈Y d(y).
On morphisms: For f : (X, ±) → (X', ±') ∈ Poset, d ∈ D(X) and x' ∈ X',
Df (x')= Σ{x∈X | f (x)=x'} d(x).
Next we present the posetal definition of the three powerdomains for nonde- terminism. As previously stated, each of the following powerdomains gives rise to

models of nondeterminism with associative, commutative and idempotent nondeter- ministic operators. However, in the cases of the Hoare and Smyth powerdomains, two extra axioms concerning the ordering are assumed, A ± A ☒ B and A ☒ B ± A, respectively.
Definition 5.2 [Plotkin Powerdomain over Poset] The Plotkin Powerdomain over
Poset, P∗ : Poset → Mod(TND, Poset) is defined as follows:
On objects: (X, ±), (X, ±) '→ ((P∗(X), ↓↑±), ∪), where ↓↑± is the Egli-Milner order generated by ±. For A, B ∈ P∗(X), A↓↑±B if and only if ↓±A ⊆ ↓±B and ↑±B ⊆ ↑±A.
On morphisms: For f : (X, ±) → (X', ±') ∈ Poset and Y ∈ P∗(X), P∗f (Y )= {f (y) | y ∈ Y }.
Definition 5.3 [Hoare (Lower) Powerdomain over Poset] The Hoare Powerdomain

over Poset, P∗
: Poset → Mod(TND
, Poset) is defined as follows:

On objects: (X, ±), (X, ±) '→ ((P∗(X), ±H ), ∪), where ±H is the Hoare ordering generated by ±. For A, B ∈ P∗(X), A ±H B if and only if A ⊆ ↓±B.
On morphisms: For f : (X, ±) → (X', ±') ∈ Poset and Y  ∈ P∗(X),
∗ f (Y )= {f (y) | y ∈ Y }.
Definition 5.4 [Smyth (Upper) Powerdomain over Poset] The Smyth Powerdo-

main over Poset, P∗
: Poset → Mod(TND
, Poset) is defined as follows:

On objects: (X, ±), (X, ±) '→ ((P∗(X), ±S), ∪), where ±S is the Smyth or-
dering generated by ±. For A, B ∈ P∗(X), A ±S B if and only if B ⊆ ↑±A.
On morphisms: For f : (X, ±) → (X', ±') ∈ Poset and Y  ∈ P∗(X),
∗ f (Y )= {f (y) | y ∈ Y }.
Upper Convex, Lower Convex and Biconvex Completion
For each of the possible powerdomains capturing nondeterminism, we associate a posetal completion functor.
Definition 5.5 [Biconvex  Completion  Functor  over  Mod(TND, Poset)] The biconvex completion functor over posetal models of nondeterminism, Ccvx : Mod(TND, Poset) → Mod(TMC, Poset) is defined as follows:
On objects: ((S, ±), ∨), ((S, ±), ∨) '→ ((Ccvx (S), ↓↑≤), {☒ }, {	}). Where
↓↑≤ is the Egli-Milner ordering generated by ≤±, the distributions ordering
generated by ±.
On morphisms: f : ((S, ±), ∨) → ((S', ±'), ∨') ∈ Mod(TND, Poset) and
C ∈ Gcvx(S), Ccvx f (C⇓)= Gcvxf (C)⇓.
Definition 5.6 [Lower Convex Completion Functor over Mod(TND, Poset)] The lower convex completion functor over posetal models of nondeterminism,

H
cvx
: Mod(TND, Poset) → Mod(TMC, Poset) is defined as follows:

On objects: ((S, ±), ∨), ((S, ±), ∨) '→ ((Ccvx (S), ≤L), {☒ }, {	}). Where
≤L is the Hoare ordering generated by ≤±, the distributions ordering generated
by ±.

On morphisms: f : ((S, ±), ∨) → ((S', ±'), ∨') ∈ Mod(TND, Poset) and
C ∈ Gcvx(S), CH  f (C⇓)= Gcvxf (C)⇓.
Definition 5.7 [Upper Convex Completion Functor over Mod(TND, Poset)] The upper convex completion functor over posetal models of nondeterminism,

S
cvx
: Mod(TND, Poset) → Mod(TMC, Poset) is defined as follows:

On objects: ((S, ±), ∨), ((S, ±), ∨) '→ ((Ccvx (S), ≤U ), {☒ }, {	}). Where
≤U is the Smyth ordering generated by ≤±, the distributions ordering gener-
ated by ±.
On morphisms: f : ((S, ±), ∨) → ((S', ±'), ∨') ∈ Mod(TND, Poset) and
C ∈ Gcvx(S), CS  f (C⇓)= Gcvxf (C)⇓.
Theorem 5.8 The compositions of the above powerdomain functors with their as- sociated convex completion functor, for the biconvex case Ccvx ◦P∗, the lower convex

case CL
P∗
and the upper convex case CU
P∗
are equivalent to their coun-

terparts obtained by following the left-hand path in the posetal Figure 1.

Further Directions
As we have seen, the classical way of constructing mixed choice models on a cat- egory C was done by calculating LP models in C then extending them by adding appropriately distributive nondeterministic operators. This allowed us not only to construct the free mixed choice models from objects in C but also to construct mixed choice models from LP models over C. By focusing on the dual approach, we are able to calculate TMC models from TND models in C. Thus given any non-standard model of nondeterministic choice in C, we can extend it to mixed choice.
It would be interesting to apply the convex completions functor to existing non- standard models of nondeterminism, perhaps associated to process calculi which admit a non-standard definition of nondeterminism. This would give mixed choice extensions of such models which could not previously be determined by the available machinery.
One important aspect of combining mixed choice was properly capturing the in- teraction between the nondeterministic operators and probabilistic operators, given by considering the distributive tensor between their respective Lawvere theories. We would be interested in generalizing our work to encompass, not only the com- bining of nondeterminism and probability, but for any distributive combination of theories.

Acknowledgements
I would like to acknowledge, first and foremost, my supervisor Philip J. Scott. His advice, understanding and patience throughout the development of my PhD thesis, on which this paper is based, have been a real asset to me. Also, I would like to thank Michael Mislove and James Worrell for the many interesting discussions

we had on this topic during my visit to Tulane. Finally, I’d like to thank all the anonymous referees for their insightful comments and useful suggestions.

References
M. Barr and C. Wells. Toposes, Triples and Theories. Springer-Verlag, 1985.
G. Beaulieu. PhD thesis in progress, University of Ottawa.
F. Borceux. Handbook of Categorical Algebra. Cambridge University Press, 1994.
J.I. den Hartog. Probabilistic Extensions of Semantical Models. PhD thesis, Vrije Universiteit Amsterdam, 2002
R. Heckmann. Probabilistic Domains. CAAP ’94: Proceedings of the 19th International Colloquium on Trees in Algebra and Programming, Lecture Notes in Computer Science, volume 787, pages 142-156, Sprigner-Verlag 1994.
M. Hyland, G. Plotkin and J. Power. Combining effects: sum and tensor. Theoretical Computer Science, volume 357(1) , pages 70-99, Elsevier 2006.
C. Jones. Probabilistic Nondeterminism, PhD Thesis, University of Edinburgh, 1990.
C. Jones and G. Plotkin. A probabilistic powerdomain of evaluations. In Proceedings of the Fourth Annual Symposium on Logic in Computer Science, pages 186-195, IEEE Computer Society Press, 1989.
A. Jung and R. Tix. The Troublesome Probabilistic Powerdomain. Proceedings of Third Workshop on Computation and Approximation, Electronic Notes in Theoretical Computer Science, volume 13, 1998.
K. Keimel, P. Plotkin and R. Tix. Semantic Domains for Combining Probability and Non-Determinism.
Electronic Notes in Theoretical Computer Science, volume 129, pages 1-104, 2005.
J. Lambek and P. J. Scott. Introduction to Higher Order Categorical Logic. Cambridge University Press, 1986.
M. Mislove. Nondeterminism and probabilistic choice: obeying the laws. In Proceedings 11th CONCUR, Lecture Notes in Computer Science, volume 1877, pages 350-364, 2000.
M. Mislove, J. Ouaknine, J. Worrell. Axioms for Probability and Nondeterminism. Proceedings of EXPRESS 03, Electronic Notes in Computer Science, volume 96, 2004.
G. Plotkin. A powerdomain construction. SIAM Journal on Computing, volume 5, pages 452-487, 1976.
G. Plotkin. Probabilistic powerdomains. In Proceedings CAAP, pages 271-287, 1982.
G. Plotkin. A powerdomain for countable non-determinism. In M. Nielson and E. M. Schmidt, editors, Automata, Language and programming, Lecture Notes in Computer Science, volume 140, pages 412-428, Springer-Verlag 1982.
J. Power. Discrete Lawvere Theories. Proceedings of CALCO 2005, Lecture Notes in Computer Science, volume 3629, pages 348-363, Springer 2005.
M. B. Smyth. Powerdomains. Journal of Computer and Systems Sciences, volume 16, pages 23-36, 1978.
R. Tix. Continuous D-cones: Convexity and Powerdomain Constructions. PhD thesis, Technische Universit¨at Darmstadt, 1999.
D. Varacca. The Powerdomain of Indexed Valuations. In Proceedings of 17th LICS, IEEE Computer Society Press, 2002.
D. Varacca and G. Winskel. Distributing probability over non-determinism. Mathematical Structures in Computer Science, volume 16, pages 87-113, 2006.
