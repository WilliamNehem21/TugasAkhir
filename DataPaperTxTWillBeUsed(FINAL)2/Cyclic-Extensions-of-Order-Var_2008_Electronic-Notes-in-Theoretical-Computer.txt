	Electronic Notes in Theoretical Computer Science 212 (2008) 119–132	
www.elsevier.com/locate/entcs

Cyclic Extensions of Order Varieties

Pierre Ille, Paul Ruet1
CNRS - Institut de Mathématiques de Luminy
Campus de Luminy, Case 907, 13288 Marseille Cedex 9 (France)

Abstract
We study complexity problems involving three sorts of combinational structures: cyclic orders, order vari- eties and cycles. It is known that the problem of telling whether a cyclic order is included in some cycle is NP-complete. We show that the same question for order varieties, a special class of cyclic orders, is in L. For this, we relate the entropy relation between partial orders to the forcing relation of graph theory.
Keywords: Computational complexity, Logarithmic space, Cyclic orders, Dimension 2 orders.


Introduction
We are interested in complexity problems on three sorts of combinational structures: cyclic orders, order varieties and cycles. Cyclic orders [13,15] are ternary relations with the property that when a point in the support is fixed (focussed on), the induced binary relation is a partial (binary) order. Order varieties are cyclic orders in which focussing is reversible: no information is lost by fixing any point. Order varieties have been introduced in [2,18] and further studied in [12,4] in the context of proof theory [7], with motivations coming from concurrency theory [19] and linguistics [10,1]. Cycles are order varieties such that the induced binary relations are actually linear orders. Section 2 recalls the necessary background.
An immediate consequence of [5] (see also [6]) is that the following problem is NP-complete: given a cyclic order α, does there exists a cycle β such that α ⊆ β (inclusion of the sets of triples)? This is explained in Section 3. See [16] for a standard reference on computational complexity.
We show that the same question for α an order variety is in L, the class of langages decidable by a deterministic Turing machine within logarithmic space.

1 Email: {ille,ruet} at iml.univ-mrs.fr. Work first presented by the second author in June 2004 during a seminar at Paris 7 University.

1571-0661 © 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2008.04.057

We first observe that the inclusion of order varieties corresponds to an order relation between partial orders (via the focussing operation mentionned earlier), which is called entropy and denoted by ª, and we study the following equivalent problem: given a partial order ω, does there exists a linear order τ such that ω ª τ ? Remark that the same problem where entropy is replaced by usual inclusion has a trivial answer: a partial order always has a linear extension, more or less in the way you want; indeed, if (x, y) and (y, x) /∈ ω, add, e.g., (x, y) to ω, take the transitive closure, and continue if the resulting order is not linear.
In Section 4, we relate entropy to the forcing relation and forcing classes of graph theory. Essentially, we show that the transitive closure used for the inclusion of orders should be replaced by the forcing class in the context of entropic extensions. We then prove that the linear entropic extensibility of ω is equivalent to a simple condition on the forcing classes of ω, and also equivalent to the condition that the cocomparability graph of ω be a comparability graph, or equivalently that the dimension of ω be at most 2. The latter problem amouts to testing whether an undirected graph is a comparability graph, a problem known to be SL-complete [3], SL being the class of langages decidable by a symmetric Turing machine [11] within logarithmic space. By using the recent result that SL = L [17], we may conclude that the problem of linear entropic extensibility is in L. This problem is then trivially L-complete (or SL-complete) for log-space reductions, and it would be interesting to decide whether it is complete for even weaker reductions, e.g. in AC.

Preliminaries on Cyclic Orders and Order Varieties
We review here the definitions of cyclic orders and order varieties, and some of their properties. The results in this Section are not new (see [15] for cyclic orders and [2,18,12,4] for order varieties), we have included them so as to make the paper as self-contained as possible.
The support of a binary or ternary relation R is denoted by |R|. If R is a binary or ternary relation, its restriction to a subset X ⊆ |R|, defined in the obvious way, is denoted by RTX .
Given a set X and a ternary relation α on X, we consider the following possible properties of α:
cyclicity : for all x, y, z ∈ X, α(x, y, z) implies α(y, z, x),
anti-reflexivity : for all x, y ∈ X, not α(x, x, y),
transitivity : for all x, y, z, t ∈ X, α(x, y, z) and α(z, t, x) imply α(y, z, t),
spreading: for all x, y, z, t ∈ X, α(x, y, z) implies α(t, y, z) or α(x, t, z) or α(x, y, t),
totality : for all x, y, z ∈ X, either α(x, y, z) or α(z, y, x).
Given a set X, a cyclic order on X is a ternary relation on X which is cyclic, anti-reflexive and transitive. An order variety on X is a spreading cyclic order on X. A cycle on X is a total cyclic order on X. It is immediate that a cycle is spreading,

hence an order variety. If α is a cycle on X, the elements of X can be placed on an oriented circle so that α(x, y, z) if and only if the oriented arc from x to z contains
y. A cyclic order or an order variety is such a relation of “being between”, but a partial one, where three points cannot always be compared.
For each of these structures, one may naturally consider a reflexive version, where anti-reflexivity is replaced by reflexivity (for all x, y ∈ X, α(x, x, y)) and an anti- symmetry condition is added (for all x, y, z ∈ X, α(x, y, z) and α(z, y, x) imply at least two among x, y, z are equal).
If X is a set and x, y, z ∈ X, the cyclic order on X solely consisting of the triples (x, y, z), (y, z, x), (z, x, y) is denoted by xyz. When X \ {x, y, z} /= ∅, xyz is clearly not an order variety, since for some t ∈ X \ {x, y, z}, neither α(t, y, z) nor α(x, t, z) nor α(x, y, t) holds.
Restriction preserves the structures of order, cyclic order, order variety and cycle. If on the other hand, α is a cyclic order, let α−1 denote the opposite cyclic order: α−1(x, y, z) if and only if α(z, y, x). The opposite of an order variety (resp. a cycle) is clearly an order variety (resp. a cycle).

Focussing
If α is a cyclic order on X and x ∈ X, then αx, called α focussed at x, is the binary relation on X \ {x} defined by αx(y, z) if and only if α(x, y, z). It is easy to check that αx is a partial order on X \ {x}.
Conversely, if X is a set and (ωx)x∈X is a family of partial orders such that
|ωx| = X \ {x} and ωx(y, z) implies ωy(z, x) for all x, y, z ∈ X, then there exists a cyclic order α on X such that ωx = αx for all x ∈ X. Hence a cyclic order is the same as such a cyclic family of partial orders.
If α is a cyclic order, a single focussed partial order does not contain enough information to determine α: for instance, if α is the cyclic order xyz on {x, y, z, t}, αt is the empty order on {x, y, z} and there is no way to recover α. The situation with order varieties is simpler: if α is an order variety, any αx determines α, i.e., focussing is a reversible operation, as shown by Equations (2) and (3) below.
This property was the main motivation for introducing order varieties in the context of non-commutative logic in [2,18]. To give a hint of why, let us simply observe that, in sequent calculus, it is necessary to be able to choose a formula and possibly change this choice later, hence to focus and unfocus on a element (a formula here) of a certain structure. For instance, sequents of linear logic [7] are multisets, and the rule for introducing the (commutative) multiplicative conjunction ⊗ requires to focus on some formula (A and B in the example below) in each premise sequent:
▶ Γ,A	▶ Δ,B ,

▶ Γ, Δ,A ⊗ B
but the next rule, which has ▶ Γ, Δ,A ⊗ B as a premise sequent, may obviously require another main formula than A ⊗ B. While these focussing and unfocussing processes are usually transparent, they become apparent in the presence of a non- commutative connective. This is the case of non-commutative logic, where the

connective ⊗ of linear logic coexists with the non-commutative ⊙ of [10,1]. This leads obviously to consider focussed sequents ▶ Γ,A where Γ is partially ordered. Since focussing, i.e., giving rise to partial orders here, should be reversible, we are lead to define a sequent of non-commutative logic as an order variety.

Closure and Gluing
Recall that partial orders ω and τ with disjoint supports give rise their series sum ω ≺ τ = ω ∪ τ ∪(|ω|×|τ |) and their parallel sum ω  τ = ω ∪ τ . If ω is a partial order on a set X, then ω, called the closure of ω, is the ternary relation on X defined by ω(x, y, z) if and only if
⎧ω(x, y) and ω(x, y|z), or
ω(y, z) and ω(y, z|x), or
⎪⎩ω(z, x) and ω(z, x|y),
where ω(x, y|z) expresses that z is in the same relation with x and y in ω: ω(x, z) ⇔ ω(y, z) and ω(z, x) ⇔ ω(z, y). It is equivalent to say that for all x, y, z ∈ X, ω(x, y, z) if and only if ωT{x,y,z} is
either x ≺ y ≺ z, or (x ≺ y)	z,
or the image of one of these orders by a cyclic permutation of {x, y, z}. Again, one can check that ω is then an order variety, not just a cyclic order, on X: the required spreading of ω can be easily figured out by considering the possible restrictions of ω to an arbitrary four-element subset of |ω|. When α = ω, we say that ω is a presentation of α, or that α is presented by ω. Then:
ω ≺ τ =	= τ ≺ ω.	(1)
We denote this order variety on |ω|∪ |τ | by ω ∗ τ and call it the gluing of ω and τ . Note that gluing is a heterogeneous operation, mapping two orders to an order variety. These two constructions, focussing and gluing, are related as follows:
αx ∗ x = α	(2)
(ω ∗ x)x = ω,	(3)
where α is an order variety such that x ∈ |α| and ω is a partial order such that x /∈ |ω|. Equations (2) and (3) express that the species of order varieties in the sense of [9] has derivative the species of partial orders.
Observe that Equation (2) is wrong in general when α is not an order variety but just a cyclic order: for instance, if α is again the cyclic order xyz on {x, y, z, t}, αt is the empty order on {x, y, z}, hence αt ∗ t is the empty order variety on {x, y, z, t} and is stricly included in α; on the other hand, αz = (x ≺ y)  t, hence αz ∗ z = ((x ≺ y)  t) ∗ z = (x ≺ y) ∗ (t  z)= xyt ∪ xyz and α is stricly included in αz ∗ z. More precisely, a cyclic order α is an order variety if and only if αx ∗ x = α for some

x ∈ |α|, if and only if αx ∗ x = α for all x ∈ |α|, if and only if α = ω for some partial order ω.
To follow up the observations of last Section on proof theory, let us mention that the two processes of focussing and unfocussing:
(α, x) '→ αx,	(ω, x) '→ ω ∗ x
are implemented in non-commutative logic by structural rules:

 ▶ Γ ∗ A  ,
▶ Γ; A
▶ Γ; A  ,
▶ Γ ∗ A

where Γ is a partially ordered set of formulas, hence Γ∗A an order variety of formulas. Many more details can be found in [18].
Series-parallelism
Recall that series-parallel orders are those obtained from the unique partial orders on singletons (the empty relation with support {x}) by series (ω ≺ τ ) and parallel (ω  τ ) sums. The unique order on the empty set is also considered as series-parallel. It is a standard result that a partial order ω is series-parallel if and only if its restriction to any four elements x0, x1, x2, x3 ∈ |ω| is different from {(x0, x2), (x1, x2), (x1, x3)}. For a more substantial survey on series-parallel orders, see, e.g., [14].
An order variety is said to be series-parallel when it can be presented by a series- parallel order. It is easily shown that an order variety α is series-parallel if and only if for some x ∈ |α|, αx is series-parallel, if and only if for all x ∈ |α|, αx is series- parallel, if and only if the restriction of α to any five elements x0, x1, x2, x3, x4 ∈ |α| is different from the following order variety:

x0x1x3 ∪ x1x2x4 ∪ x2x3x0 ∪ x3x4x1 ∪ x4x0x2 =   xixi+1xi+3,
i=0
where the indices are taken modulo 5. Observe that linear orders are obviously series-parallel orders, and that cycles are obviously series-parallel order varieties. Moreover, if α is an order variety on X and x ∈ X, then:
α is a cycle if and only if αx is a linear order.	(4)
Let us mention that a series-parallel order variety α on a set X can be represented by a rootless planar tree (or better: seaweed ) with leaves labeled by elements of X and ternary vertices labeled by ≺ or :
take an arbitrary presentation of α as a series-parallel order ω;
write ω as a planar binary tree t with leaves labeled by elements of X, and the other vertices labeled by ≺ or  for series and parallel sum respectively (the rep- resentation of ω as a planar binary tree is not unique, because of the associativity of ≺ and  and the commutativity of );
then remove the root of t. See Figure 1.

σ	τ	σ	τ
−→
σ	τ
←−	≺


Fig. 1. Closure of series-parallel orders and Equations (1) in terms of planar trees.
a	b	c



Fig. 2. Three leaves a, b, c in a seaweed and the intersection point p labeled by ≺.

To read the seaweed, take three leaves a, b, c and let p be the vertex at the intersection of the three paths ab, bc and ca; then (a, b, c) is in the order variety if and only if the vertex p is labeled by ≺, and the paths pa, pb and pc lie in this order on the oriented plane while moving clockwise around p. See Figure 2.

Entropy
The entropy relation is the relation ª between partial orders with same support defined as follows: if |ω| = |τ |, then ω ª τ if and only if
ω ⊆ τ and ω ⊆ τ. 

Entropy is clearly a partial order, compatible with restriction (ω ª τ implies ωTX ª τ TX for any X ⊆ |ω| = |τ |) and with the series and parallel sums of orders (ω ª τ and ω' ª τ ' imply (ω ≺ ω') ª (τ ≺ τ ') and (ω  ω') ª (τ  τ ')). The main point of entropy is that it is the relation between orders which corresponds to inclusion of order varieties with same support: given two order varieties α, β on X, we have:
α ⊆ β if and only if for some x ∈ X, αx ª βx	(5) if and only if for all x ∈ X, αx ª βx.

Entropy may be characterised as follows: if ω ⊆ τ , then ω /ª τ if and only if there is a triple (x, y, z) such that
ωT{x,y,z} is x  (y ≺ z), and	(6)
τ T{x,y,z} is (x  y) ≺ z or y ≺ (x  z) or y ≺ x ≺ z.

In the series-parallel case, ª is the least reflexive transitive relation between series- parallel orders on the same set such that:
ω[(τ1  τ2)/x] ª ω[(τ1 ≺ τ2)/x],	(7)
where x ∈ |ω|, the sets |ω|, |τ1| and |τ2| are disjoint, and ω[τ /x] denotes the series- parallel order in which x has been substituted by τ in ω.

Complexity Problems on Order Varieties
We shall consider complexity problems on binary or ternary relations (with finite supports). For these problems, the elements of the support X of the relation are taken to be natural numbers, represented in binary. The binary or ternary input relation R is represented by the elements of X separated by commas, followed by the pairs (x, y) or triples (x, y, z) in R, separated by commas. Hence, the alphabet Σ we shall use consists in 0, 1, the comma and the parentheses. The size of the representation of R is clearly polynomially equivalent to the cardinality n of X: indeed, this size is greater than n and is bounded by n(2 + log n)+ k(8 + 3 log n) ≤ n(3 + n)+ n3(11 + 3n), where k is the cardinality of R and log is the logarithm in base 2.
It is standard that checking whether a word on Σ represents a binary relation (resp. a partial order, a ternary relation) is log-space computable. The following is straightforward.
Lemma 3.1 Checking whether a word on Σ represents a cyclic order (resp. an order variety, a cycle) is log-space computable. Given a cyclic order α and x ∈ |α|, αx is log-space computable. Given partial orders ω and τ, ω ∗ τ is log-space computable.
Definition 3.2 Let X be a finite set. Given a set α of triples (of elements of X), a cyclic extension of α is a cycle β such that α ⊆ β. Given a partial order ω on X, a linear entropic extension of ω is a linear order τ such that ω ª τ .
We consider the following problems:
Cyc.	Given a set of triples, does it have a cyclic extension? CO-Cyc.	Given a cyclic order, does it have a cyclic extension? OV-Cyc.	Given an order variety, does it have a cyclic extension?
EntropicExt.	Given a partial order, does it have a linear entropic extension?
In [5], it is shown that deciding whether a cyclic ternary relation has a cyclic exten- sion is NP-complete, via a reduction of 3-Sat.
Lemma 3.3 Cyc and CO-Cyc are NP-complete.
Proof — This is a trivial consequence of [5]. Cyc is more general than the NP- complete problem in [5], and it is clearly in NP too: given a set α of triples, let α = α∪α−1; then nondeterministically choose an “orientation” for each triple (x, y, z) which is not in α, i.e., add either xyz or zyx to α; finally check whether the result is a cycle. Hence, Cyc is NP-complete.
Besides, Cyc is more general than CO-Cyc, so CO-Cyc is in NP. On the other hand, Cyc reduces to CO-Cyc: turn the given set of triples into a cyclic transitive relation, check whether it is a cyclic order and, if yes, apply the algorithm for CO-Cyc. Hence, CO-Cyc is NP-complete.	 
Lemma 3.4 OV-Cyc and EntropicExt are log-space reducible to each other.

Proof — Let us show that OV-Cyc reduces to EntropicExt. In order to know whether a word on the alphabet Σ is in OV-Cyc, first check that it represents an order variety, say α on {1,... , n}, otherwise reject. If n = 0, accept (empty order variety on the empty set). If n ≥ 1, compute on a new string the representation of the partial order αn on {1,... ,n − 1}: by Lemma 3.1, all this is done in log-space. Finally, use the machine for EntropicExt on αn to answer. Our reduction is correct, because if α is an order variety and x ∈ |α|, then:
α ∈ OV-Cyc  if and only if α ⊆ β for some cycle β
if and only if αx ª βx for some cycle β	by (5) if and only if αx ª ω for some linear order ω  by (4) if and only if αx ∈ EntropicExt.
To prove that EntropicExt reduces to OV-Cyc, one uses a similar argument, together with the remark that a partial order ω is in EntropicExt if and only if ω ∗ x ∈ OV-Cyc, with x not in |ω|.	 
Observe that any series-parallel order ω is in EntropicExt (and similarly, any series- parallel order variety is in OV-Cyc): a linear order τ is obtained from ω by replacing every parallel sum by a series sum; by (7), ω ª τ . On the other hand, an example of a partial order which has no entropic extension will be given in Section 4.

Forcing Classes and Linear Entropic Extensions
Forcing Relation
Let G be a (symmetric, irreflexive, simple) graph with set of vertices X = G0 and set of edges G1. Along [8], it is possible to associate to G a binary relation on G1, as follows:


(a, b) =1
(a', b') if and only if a = a' and (b, b') /∈ G1
or (a, a') /∈ G1 and b = b'.



Since G is symmetric and irreflexive, =1
is symmetric and reflexive. The transitive

closure of =1
is an equivalence relation called the forcing relation of G and denoted

=G. The =G-class, or forcing class, of p ∈ G1 is denoted pG. (Forcing classes are called implication classes in [8].) If p = (a, b), let p−1 = (b, a) denote the opposite edge; if p ∈ G1, then p−1 ∈ G1; if A is a set of edges, let A−1 = {p−1 s.t. p ∈ A}
and A˜ = A ∪ A−1. Note that =G is a relation between ordered edges, and in general
1
p /=G p−1. Clearly, p =G q if and only if p−1 =G q−1, and (p−1)G = (pG)− .
Moreover, one may prove that if p ∈ G1, then either pG = (p−1)G, or pG ∩ (p−1)G = ∅ and in the latter case, the two classes pG and (p−1)G are transitive relations: (a, b) and (b, c) ∈ pG imply (a, c) ∈ pG, and similarly for (p−1)G. In other terms, if a forcing class is antisymmetric, then it is transitive.
We shall also need the following result, which characterises the forcing classes of

the graph G \ A obtained after removing the symmetric closure of a forcing class A: they are either forcing classes of the original graph, or disjoint unions of two (non-opposite) classes. If G is a graph, A is a forcing class of G, and D is a forcing class of G \ A, then:
either D is a class of G,
or D is the disjoint union of two classes B and C of G such that B /= C−1; and in this case, if A is antisymmetric, so are B, C and D.
For proofs of these graph theoretic results, among many others, see, e.g., [8].
Forcing, Partial Orders and Entropy
Given a reflexive partial order ω on X, let ω−1 be the opposite partial order on X (ω−1(x, y) if and only if ω(y, x)). If p = (x, y), let p−1 denote the opposite pair (y, x); if p ∈ ω, then p−1 ∈ ω−1. Let
ω˜ = ω ∪ ω−1
be the comparability graph of ω and
ω^ = X2 \ ω˜
be its cocomparability graph. We assume ω is reflexive, so that ω is irreflexive.
Definition 4.1 If ω is a partial order, let =1 , =ω respectively stand for =1 , =ωb. =ω
ω	ωb
is called the forcing relation of ω. If p ∈ ω^, let
pω
denote its forcing class pωb.
Lemma 4.2 If ω and τ are reflexive partial orders with same support such that
ω ª τ, and p ∈ τ \ ω, then p ∈ ω and pω ⊆ τ.
Proof —	By hypothesis, p ∈/ ω; p ∈/ ω−1 either since otherwise, p ∈ τ and p−1 ∈
ω ⊆ τ , a contradiction. Hence, p ∈ ω^. We now just have to prove that τ is closed
q' = (x', y'). There are two cases, illustrated in Figure 3, where solid (resp. dotted) arrows represent pairs in ω (resp. in ω).
In the first case, if q = (x, y) ∈ τ , then by transitivity, q' = (x', y') = (x, y') ∈ τ . If q' = (x, y') ∈ τ , then both (x, y') and (y, y') ∈ τ , since ω ⊆ τ ; moreover, (x, y, y') ∈ ω and ω ª τ , so (x, y, y') ∈ τ ; with the constraints (x, y'), (y, y') ∈ τ , this condition on τ holds only if τ T{x,y,y'} = (x ≺ y ≺ y'), i.e., q ∈ τ .
The second case is similar.	 
Definition 4.3 If ω is a partial order and p ∈ ω, we shall say that p is compatible
with ω, written
p-ω,




y'	x'

x = x'	y = y'

y	x

Fig. 3. The restriction ω†{x,y,x',y'} in the proof of Lemma 4.2.
when there exists a partial order τ such that ω ª τ and p ∈ τ .
Lemma 4.4 Let ω be a partial order such that (x, y) ∈ ω. If (y, z) ∈ ω, then either
(x, z) =ω (y, z) or (x, z) ∈ ω. If (t, x) ∈ ω^, then either (t, y) =ω (t, x) or (t, y) ∈ ω.
Proof —	Assume (y, z) ∈ ω^ and (x, z) ∈/ ω. Then (x, z) ∈/ ω	, because otherwise
(z, y) ∈ ω by transitivity, in contradiction with the assumption that (y, z) ∈ ω.
Hence (x, z) ∈ ω, and (y, z) =ω (x, z). The second assertion is similar.	 
Lemma 4.5 If ω is a partial order and p ∈ ω, then the following are equivalent:
p-ω,
pω is antisymmetric,
ω ∪ pω is a partial order. In that case, ω ª ω ∪ pω.
Proof —	(i ⇒ ii) By Lemma 4.2, if p-ω, then pω ⊆ τ , hence pω is antisymmetric. (ii ⇒ iii) If pω is antisymmetric, then ω ∪ pω is antisymmetric because ω is antisymmetric and pω ⊆ ω. Moreover, pω is then transitive (Section 4.1), so ω ∪ pω
is transitive by Lemma 4.4. Hence it is a partial order.
(iii ⇒ i) We show that, if ω ∪ pω is a partial order, then ω ª ω ∪ pω. Assume for a contradiction that (x, y, z) ∈ ω \ ω ∪ pω . Then, up to a cyclic permutation of
{x, y, z}, we may assume that ω T{x,y,z} is x  (y ≺ z) and that (ω ∪ pω) T{x,y,z} is either (x  y) ≺ z or y ≺ (x  z) or y ≺ x ≺ z. But in the first case, since (x, z) ∈/ ω, (x, z) ∈ pω, whence (x, y) ∈ pω and (ω ∪ pω) T{x,y,z}/= ((x  y) ≺ z), a contradiction. In the second and third cases, (y, x) ∈ pω, whence (z, x) ∈ pω, so (ω ∪ pω) T{x,y,z}/= (y ≺ (x  z)) and /= (y ≺ x ≺ z), a contradiction.	 
Lemma 4.6 Let ω be a partial order and p, q ∈ ω. If p-ω and q-ω, then either
q ∈ ω˜∪ pω or q-ω ∪ pω.
Proof — Let G = ω and A = pω be the class of p in G. Then G \ A = ω^∪  pω . Assume q ∈/ ω˜∪  pω : then q ∈ G \ A and let D be the class of q in G \ A. According to Section 4.1, one of the following holds:
D is a forcing class of G, i.e., D = qω. As q-ω, D is antisymmetric by Lemma 4.5. Since by definition D = qω∪pω , this implies, again by Lemma 4.5, that q-ω ∪ pω.

D is the disjoint union of two forcing classes of G, say, B = rω and C = sω, such that r /=ω s−1. Since p-ω, A is antisymmetric by Lemma 4.5. Therefore, according to Section 4.1, D is antisymmetric too, therefore q-ω ∪ pω.
Lemma 4.7 If ω ª τ, then for any p ∈ τ^, pω ⊆ pτ .
Proof —	Assume ω ª τ . Let p ∈ τ ⊆ ω, and let q ∈ ω be such that q =ω p. We
show, by induction on the distance n between q and p in =ω, that q ∈ τ and q =τ p.
If n = 0, then q = p ∈ pτ .
If n > 0, then q =1 r =ω p for some r ∈ ω whose distance with p is strictly smaller than n. By induction hypothesis, r ∈ τ and r =τ p. Assume that q ∈ τ : as q ∈ ω and ω ª τ , by Lemma 4.2, r ∈ τ , a contradiction. Hence q ∈ τ , and then clearly q =1 r, so q =τ p.

Observe that the converse to Lemma 4.7, with the additional condition that ω ⊆ τ , does not hold: for instance, if ω = (x  (y ≺ z)) and τ = (y ≺ x ≺ z), then ω ⊆ τ , and the condition on forcing classes is satisfied, but ω /ª τ . However, we have the following characterisation of entropy in purely order theoretic terms.

Theorem 4.8 Let ω and τ be partial orders with same support. Then ω ª τ if and only if ω ⊆ τ and (τ \ ω) ∪ ω−1 is a partial order if and only if ω ⊆ τ and ω ∪ (τ \ ω)−1 is a partial order.

Proof —  The second equivalence is obvious, so we prove the first one.
If ω ª τ , then ω ⊆ τ . Let us show that θ = (τ \ ω) ∪ ω−1 is a partial order. First, θ is antisymmetric because so are τ \ ω and ω−1, and if (x, y) ∈ τ \ ω, (y, x) /∈ ω−1. Second, let us show that θ is transitive. Let (x, y) and (y, z) ∈ θ.
If both pairs are in ω−1, then clearly (x, z) ∈ θ.
If both pairs are in τ \ ω, then (x, z) ∈ τ . Moreover, if (x, z) ∈ ω, since (x, y) and
(y, z) are in ω and ω ª τ , we have (y, x) ∈ τ . Hence (x, z) /∈ ω, and (x, z) ∈ θ.
If (x, y) ∈ τ \ ω and (y, z) ∈ ω−1, then (x, y) ∈ ω because ω ⊆ τ , and we have (z, y) ∈ ω and (x, z) /∈ ω, hence either (x, z) ∈ ω−1 or (x, z) ∈ ω, so (x, z) ∈ τ because ω ª τ , and we have (x, z) ∈ τ \ ω. To sum up, (x, z) ∈ (τ \ ω) ∪ ω−1.
The case (x, y) ∈ ω−1 and (y, z) ∈ τ \ ω is similar.
Conversely, assume ω ⊆ τ and θ = (τ \ ω) ∪ ω−1 is a partial order. If ω /ª τ , then ω /⊆ τ , so by (6), there is a triple (x, y, z) such that ωT{x,y,z} = (x  (y ≺ z)) and τ T{x,y,z} is either (x  y) ≺ z or y ≺ (x  z) or y ≺ x ≺ z. In the first two cases, θT{x,y,z} is not transitive, and in the third case, θT{x,y,z} has a cycle, contradicting the assumption that θ is a partial order.	 

3

Fig. 4. A partial order with no entropic extension.
Linear Entropic Extensions
By Lemma 3.4, EntropicExt and OV-Cyc have equivalent complexity, and it is more convenient to consider EntropicExt.
Let us first observe that, although any partial order trivially has a linear exten- sion, not all partial orders have linear entropic extensions. A partial order ω with no linear entropic extension is given in Figure 4. Solid arrows represent pairs in ω (for sake of clarity, we omit the pairs (c, a) and (c, b) induced by transitivity), and the dotted arrows, numbered from 1 to 7, represent pairs the forcing class of (x, y). Observe that (y, x) is in this forcing class: by Lemma 4.2, this clearly prevents ω from having a linear entropic extension.
Lemma 4.9 A partial order ω has a linear entropic extension if and only if all the forcing classes pω, for p ∈ ω, are antisymmetric.
Proof — If ω is not linear and has a linear entropic extension τ , then by Lemma 4.2, for any p ∈ ω, pω ⊆ τ . Since τ is antisymmetric, so is pω.
Conversely, assume all the forcing classes are antisymmetric. We prove that ω
has a linear entropic extension by induction on the cardinality n of ω.
If n = 0, ω is linear.
ω	-
If n > 0, let p ∈ ω^. Now, p	is antisymmetric, so by Lemma 4.5, p  ω and
ω ª ω ∪ pω. Let τ = ω ∪ pω, and let qr be a forcing class of τ , if any: we
have q ∈ τ , and qω is antisymmetric, so by Lemma 4.5, q-ω, and by Lemma 4.6, q-τ . Since the cardinality of τ is strictly smaller than n, the induction hypothesis applies and τ has a linear entropic extension, say σ. Then ω ª τ ª σ.

Theorem 4.10 EntropicExt and OV-Cyc are in L.
Proof — By Lemma 4.9, EntropicExt reduces to the problem of telling, given the undirected graph =ω with vertex set ω, whether no vertex (a, b) ∈ ω is connected to (b, a). This is an undirected non-reachability problem, hence in coSL, since undirected reachability is SL-complete [3]. Since SL=L [17], we have coSL=L, and EntropicExt is therefore in L. By Lemma 3.4, so is OV-Cyc.	 

Recall that a graph is a comparability graph if it is the comparability graph ω of some partial order ω. A standard result is that G is a comparability graph if and only if all its forcing classes are antisymmetric (see [8]).
If ω is a partial order, its dimension is the smallest number of linear orders whose intersection is ω. A reference on dimension theory is [20]. The previous discussion on the relation between entropy and forcing can be summed up as follows.
Theorem 4.11 If ω is a partial order, then the following are equivalent:
ω has a linear entropic extension,
all the forcing classes of ω are antisymmetric,
ω^ is a comparability graph,
ω has dimension at most 2.
Proof — The first equivalence is Lemma 4.9. The second equivalence is the char- acterisation of comparability graphs mentionned above. Let us prove the last equiv- alence.
If ω is a comparability graph, then ω = τ for some partial order τ , hence ω = τ −1. But ω = (ω ∪τ )∩(ω ∪τ −1), and ω ∪τ and ω ∪τ −1 are both linear, so ω has dimension at most 2.
Conversely, if ω has dimension at most 2, it is the intersection of two linear orders
σ and τ . Let θ = σ ∩ τ −1. Then θ is a partial order such that θ˜ = ω^.	 
References
V. M. Abrusci. Non-commutative logic and categorial grammar: ideas and questions. In V. M. Abrusci and C. Casadio, editors, Dynamic Perspectives in Logic and Linguistics. Cooperativa Libraria Universitaria Editrice Bologna, 1999.
V. M. Abrusci and P. Ruet. Non-commutative logic I: the multiplicative fragment. Annals of Pure and Applied Logic, 101(1):29–64, 2000.
C. Àlvarez and R. Greenlaw. A compendium of problems complete for symmetric logarithmic space.
Computational Complexity, 9(2):123–145, 2000.
J.-M. Andreoli, R. Maieli, and P. Ruet. Non-commutative proof construction: a constraint-based approach. Annals of Pure and Applied Logic, 142(1-3):212–244, 2006.
Z. Galil and N. Megiddo. Cyclic ordering is NP-complete. Theoretical Computer Science, 5(2):179–182, 1977.
M. R. Garey and D. S. Johnson. Computers and intractability: a guide to the theory of NP- completeness. Freeman and Co, 1979.
J.-Y. Girard. Linear logic. Theoretical Computer Science, 50(1):1–102, 1987.
M. C. Golumbic. Algorithmic graph theory and perfect graphs. Computer Science and Applied Mathematics. Academic Press, 1980.
A. Joyal. Une théorie combinatoire des séries formelles. Advances in Mathematics, 42:1–82, 1981.
J. Lambek. The mathematics of sentence structure. American Mathematical Monthly, 65(3):154–170, 1958.
H. Lewis and C. Papadimitriou. Symmetric space-bounded computation. Theoretical Computer Science, 19(2):161–187, 1982.

R. Maieli and P. Ruet. Non-commutative logic III: focusing proofs. Information and Computation, 185(2):233–262, 2003.
N. Megiddo. Partial and complete cyclic orders. Bulletin of the American Mathematical Society, 82(2):274–276, 1976.
R. Möhring. Computationally tractable classes of ordered sets. In I. Rival, editor, Algorithms and Order, pages 105–193. Kluwer Academic Publishers, 1989.
V. Novák. Cyclically ordered sets. Czechoslovak Mathematical Journal, 32(107):460–473, 1982.
C. Papadimitriou. Computational complexity. Addison-Wesley, 1994.
O. Reingold. Undirected st-connectivity in log-space. In ACM Symposium on Theory of Computing, pages 376–385. ACM Press, 2005.
P. Ruet. Non-commutative logic II: sequent calculus and phase semantics. Mathematical Structures in Computer Science, 10(2):277–312, 2000.
P. Ruet and F. Fages. Concurrent constraint programming and non-commutative logic. In Computer Science Logic 1997, volume 1414 of Lecture Notes in Computer Science, pages 406–423. Springer, 1998.
W. T. Trotter. Combinatorics and partially ordered sets, Dimension theory. Johns Hopkins University Press, 1992.
