Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 298 (2013) 165–178
www.elsevier.com/locate/entcs

History-Preserving Bisimilarity for Higher-Dimensional Automata via Open Maps
Uli Fahrenberg Axel Legay
INRIA/IRISA, Campus de Beaulieu, 35042 Rennes CEDEX, France

Abstract
We show that history-preserving bisimilarity for higher-dimensional automata has a simple characterization directly in terms of higher-dimensional transitions. This implies that it is decidable for finite higher- dimensional automata. To arrive at our characterization, we apply the open-maps framework of Joyal, Nielsen and Winskel in the category of unfoldings of precubical sets.
Keywords: higher-dimensional automaton, history-preserving bisimilarity, homotopy, unfolding, concurrency

Introduction
The dominant notion for behavioral equivalence of processes is bisimulation as in- troduced by Park [31] and Milner [27]. It is compelling because it enjoys good algebraic properties, admits several easy characterizations using modal logics, fixed points, or game theory, and generally has low computational complexity.
Bisimulation, or rather its underlying semantic model of transition systems, applies to a setting in which concurrency of actions is the same as non-deterministic interleaving; using CCS notation [27], a|b = a.b+b.a. For some applications however, a distinction between these two is necessary, which has led to development of so- called non-interleaving or truly concurrent models such as Petri nets [32], event structures [30], asynchronous transition systems [4, 35] and others; see [40] for a survey.
One of the most popular notions of equivalence for non-interleaving systems is history-preserving bisimilarity (or hp-bisimilarity for short). It was introduced independently by Degano, De Nicola and Montanari in [6] and by Rabinovich and Trakhtenbrot [34] and then for event structures by van Glabbeek and Goltz in [39] and for Petri nets by Best et.al. in [5]. One reason for its popularity is that it is a

1571-0661 © 2013 Elsevier B.V. Open access under CC BY-NC-ND license.
http://dx.doi.org/10.1016/j.entcs.2013.09.012

congruence under action refinement [5, 39], another its good decidability properties: it has been shown to be decidable for safe Petri nets by Montanari and Pistore [29]. As a contrast, its cousin hereditary hp-bisimilarity is shown undecidable for 1-safe Petri nets by Jurdzin´ski, Nielsen and Srba in [24].
Higher-dimensional automata (or HDA) is another non-interleaving formalism for reasoning about behavior of concurrent systems. Introduced by Pratt [33] and van Glabbeek [37] in 1991 for the purpose of a geometric interpretation to the theory of concurrency, it has since been shown by van Glabbeek [38] that HDA provide a generalization (up to hp-bisimilarity) to “the main models of concurrency proposed in the literature” [38], including the ones mentioned above. Hence HDA are useful as a tool for comparing and relating different models, and also as a modeling formalism by themselves.
HDA are geometric in the sense that they are very similar to the simplicial complexes used in algebraic topology, and research on HDA has drawn on a lot of tools and methods from geometry and algebraic topology such as homotopy [11,14], homology [15, 20], and model categories [16, 17], see also the survey [18].
In this paper we give a geometric interpretation to hp-bisimilarity for HDA, using the open-maps approach introduced by Joyal, Nielsen and Winskel in [23] and results from a previous paper [7] by the first author. Using this interpretation, we show that hp-bisimilarity for HDA has a characterization directly in terms of (higher-dimensional) transitions of the HDA, rather than in terms of runs as e.g. for Petri nets [13].
Our results imply decidability of hp-bisimilarity for finite HDA. They also put hp- bisimilarity firmly into the open-maps framework of [23] and tighten the connections between bisimilarity and weak topological ﬁbrations [3, 25].
Due to lack of space, we have had to omit all proofs in this paper. They can be found in the long version at [9].

Higher-Dimensional Automata
As a formalism for concurrent behavior, HDA have the specific feature that they can express all higher-order dependencies between events in a concurrent system. Like for transition systems, they consist of states and transitions which are labeled with events. Now if two transitions from a state, with labels a and b for example, are independent, then this is expressed by the existence of a two-dimensional tran- sition with label ab. Fig. 1 shows two examples; on the left, transitions a and b are independent, on the right, they can merely be executed in any order. Hence for HDA, as indeed for any formalism employing the so-called true concurrency paradigm, the algebraic law a|b = a.b + b.a does not hold; concurrency is not the same as interleaving.
The above considerations can equally be applied to sets of more than two events: if three events a, b, c are independent, then this is expressed using a three- dimensional transition labeled abc. Hence this is different from mutual pairwise independence (expressed by transitions ab, ac, bc), a distinction which cannot be


	
Fig. 1. HDA for the CCS expressions a|b (left) and a.b + b.a (right). In the left HDA, the square is filled in by a two-dimensional transition labeled ab, signifying independence of events a and b. On the right, a and b are not independent.
made in formalisms such as asynchronous transition systems [4, 35] or transition systems with independence [40] which only consider binary independence relations. An unlabeled HDA is essentially a pointed precubical set as defined below. For labeled HDA, one can pass to an arrow category; this is what we shall do in Section 6.
Until then, we concentrate on the unlabeled case.
A precubical set is a graded set X = {Xn}n∈  together with mappings δν :
Xn → Xn−1, k ∈ {1,..., n}, ν ∈ {0, 1}, satisfying the precubical identity


δνδμ = δμ  δν
(k < l) .	(1)

k l	l−1 k
The mappings δν are called face maps, and elements of Xn are called n-cubes. As above, we shall usually omit the extra subscript (n) in the face maps. Faces δ0x of an element x ∈ X are to be thought of as lower faces, δ1x as upper faces. The precubical identity expresses the fact that (n−1)-faces of an n-cube meet in common (n − 2)-faces, see Fig. 2 for an example of a 2-cube and its faces.
Morphisms f : X → Y of precubical sets are graded mappings f = {fn : Xn →

Yn}n∈  which commute with the face maps: δν ◦ fn = fn−1 ◦ δν
for all n ∈  ,

k	k
k ∈ {1,..., n}, ν ∈ {0, 1}. This defines a category pCub of precubical sets and
morphisms.
A pointed precubical set is a precubical set X with a specified 0-cube i ∈ X0, and a pointed morphism is one which respects the point. This defines a category which is isomorphic to the comma category ∗↓ pCub, where ∗∈ pCub is the precubical set with one 0-cube and no other n-cubes. Note that ∗ is not terminal in pCub (instead, the terminal object is the infinite-dimensional precubical set with one cube in every dimension).
Definition 2.1 The category of higher-dimensional automata is the comma cate-
δ0δ1x = δ1δ0	1δ1x = δ1δ1x
1 2	1 1	1 2	1 1


δ0x	δ1x


0 0	0 0
δ0x
1 0	0 1

δ1 δ2 x = δ1 δ1 x	2	δ1 δ2 x = δ1 δ1 x

Fig. 2. A 2-cube x with its four faces δ0x, δ1x, δ0x, δ1x and four corners.
1	1	2	2

gory HDA = ∗ ↓ pCub, with objects pointed precubical sets and morphisms com- mutative diagrams
∗
¸r	c¸
X	f	zY ,. 
Hence a one-dimensional HDA is a transition system; indeed, the category of transition systems [40] is isomorphic to the full subcategory of HDA spanned by the one-dimensional objects. Similarly one can show [19] that the category of asyn- chronous transition systems is isomorphic to the full subcategory of HDA spanned by the (at most) two-dimensional objects. The category HDA as defined above was used in [7] to provide a categorical framework (in the spirit of [40]) for parallel com- position of HDA. In this article we also introduced a notion of bisimilarity which we will review in the next section.
Path Objects, Open Maps and Bisimilarity
With the purpose of introducing bisimilarity via open maps in the sense of [23], we identify here a subcategory of HDA consisting of path objects and path-extending morphisms. We say that a precubical set X is a precubical path object if there is a (necessarily unique) sequence (x1,..., xm) of elements in X such that xi /= xj for i /= j,
for each x ∈ X there is j ∈ {1,..., m} for which x = δν1 ··· δνp xj for some indices
k1	kp
ν1,..., νp and a unique sequence k1 < ··· < kp, and
for each j = 1,...,m − 1, there is k ∈  for which xj = δ0xj+1 or xj+1 = δ1xj.
k	k
Note that precubical path objects are non-selflinked in the sense of [11]. If X and Y are precubical path objects with representations (x1,..., xm), (y1,..., yp), then a morphism f : X → Y is called a cube path extension if xj = yj for all j = 1,...,m (hence m ≤ p).
Definition 3.1 The category HDP of higher-dimensional paths is the subcategory of HDA which as objects has pointed precubical paths, and whose morphisms are generated by isomorphisms and pointed cube path extensions.
A cube path in a precubical set X is a morphism P → X from a precubical path object P . In elementary terms, this is a sequence (x1,..., xm) of elements of X such that for each j = 1,...,m − 1, there is k ∈ for which xj = δ0xj+1 (start of new part of a computation) or xj+1 = δ1xj (end of a computation part). We show
an example of a cube path in Fig. 3.
A cube path in a HDA i : ∗ → X is pointed if x1 = i, hence if it is a pointed morphism P → X from a higher-dimensional path P . We will say that a cube path (x1,..., xm) is from x1 to xm, and that a cube x ∈ X in a HDA X is reachable if there is a pointed cube path to x in X.
Cube paths can be concatenated if the end of one is compatible with the be- ginning of the other: If ρ = (x1,..., xm) and σ = (y1,..., yp) are cube paths with







i	a	x	b

Fig. 3. Graphical representation of the two-dimensional cube path (i, a, x, b, bc, c, z, d). Its computational interpretation is that a is executed first, then execution of b starts, and while b is running, c starts to execute. After this, b finishes, then c, and then execution of d is started. Note that the computation is partial, as d does not finish.
y1 = δ1xm or xm = δ0y1 for some k, then their concatenation is the cube path
k	k
ρ ∗ σ = (x1,..., xm, y1,..., yp). We say that ρ is a preﬁx of χ and write ρ ± χ if
there is a cube path ρ for which χ = ρ ∗ σ.
Definition 3.2 A pointed morphism f : X → Y in HDA is an open map if it has the right lifting property with respect to HDP, i.e. if it is the case that there is a lift r in any commutative diagram as below, for morphisms g : P → Q ∈ HDP, p : P → X, q : Q → Y ∈ HDA:
p  zX,
g	r	f
,	, 
q	zY ,
HDA X, Y are bisimilar if there is Z ∈ HDA and a span of open maps X → Z → Y
in HDA.
It follows straight from the definition that composites of open maps are again open. By the next lemma, morphisms are open precisely when they have a zig-zag property similar to the one of [23].
Lemma 3.3 For a morphism f : X → Y ∈ HDA, the following are equivalent:
f is open;
for any reachable x1 ∈ X and any y2 ∈ Y with f (x1)= δ0y2 for some k, there
is x2 ∈ X for which x1 = δ0x2 and y2 = f (x2);
for any reachable x1 ∈ X and any cube path (y1,..., ym) in Y with y1 = f (x1), there is a cube path (x1,..., xm) in X for which yj = f (xj) for all j = 1,..., m.
Theorem 3.4 For HDA i : ∗→ X, j : ∗→ Y , the following are equivalent:
X and Y are bisimilar;
there exists a precubical subset R ⊆ X × Y for which (i, j) ∈ R, and such that for all reachable x1 ∈ X, y1 ∈ Y with (x1, y1) ∈ R,
for any x2 ∈ X for which x1 = δ0x2 for some k, there exists y2 ∈ Y for which
y1 = δ0y2 and (x2, y2) ∈ R,
for any y2 ∈ Y for which y1 = δ0y2 for some k, there exists x2 ∈ X for which
x1 = δ0x2 and (x2, y2) ∈ R;
there exists a precubical subset R ⊆ X × Y for which (i, j) ∈ R, and such that for all reachable x1 ∈ X, y1 ∈ Y with (x1, y1) ∈ R,



d	d	d	d

z	z	z	z

c	c








Fig. 4.	Graphical representation of the cube path homotopy (i, a, x, b, bc, c, z, d)	∼
(i, a, x, c, bc, c, z, d) ∼ (i, a, x, c, bc, b, z, d) ∼ (i, a, x, c, y, b, z, d).
for any cube path (x1,..., xm) in X, there exists a cube path (y1,..., ym) in
Y with (xp, yp) ∈ R for all p = 1,..., m,
for any cube path (y1,..., ym) in Y , there exists a cube path (x1,..., xm) in
X with (xp, yp) ∈ R for all p = 1,..., m.
Note that the requirement that R be a precubical subset, in items (ii) and (iii) above, is equivalent to saying that whenever (x, y) ∈ R, then also (δνx, δνy) ∈ R
k	k
for any k and ν ∈ {0, 1}.

Homotopies and Unfoldings
In order to reason about hp-bisimilarity, we need to introduce in which cases dif- ferent cube paths are equivalent due to independence of actions. Following [38], we model this equivalence by a combinatorial version of homotopy which is an extension of the equivalence defining Mazurkiewicz traces [26].
We say that cube paths (x1,..., xm), (y1,..., ym) are adjacent if x1 = y1, xm =
ym, there is precisely one index p ∈ {1,..., m} at which xp /= yp, and
xp−1 = δ0xp, xp = δ0xp+1, yp−1 = δ0  yp, and yp = δ0yp+1 for some k < l, or

k	l
vice versa,
xp = δ1xp−1, xp+1 = δ1xp, yp = δ1
l−1	k

yp−1, and yp+1 = δ1yp for some k < l, or

k
vice versa,
l	l−1	k

xp = δ0δ1yp, yp−1 = δ0yp, and yp+1 = δ1yp for some k < l, or vice versa, or
k l	k	l
xp = δ1δ0yp, yp−1 = δ0yp, and yp+1 = δ1yp for some k < l, or vice versa.
k l	l	k
Homotopy of cube paths is the reflexive, transitive closure of the adjacency relation. We denote homotopy of cube paths using the symbol ∼, and the homotopy class of a cube path (x1,..., xm) is denoted [x1,..., xm]. The intuition of adjacency is rather simple, even though the combinatorics may look complicated, see Fig. 4. Note that adjacencies come in two basic “flavors”: the first two above in which the dimensions of xl and yl are the same, and the last two in which they differ by 2.
The following lemma shows that, as expected, cube paths entirely contained in

one cube are homotopic (provided that they share endpoints).
Lemma 4.1 Let x ∈ Xn in a precubical set X and (k1,..., kn), (l1,..., ln) se-

quences of indices with kj, lj ≤ j for all j = 1,..., n.	Let xj = δ0
··· δ0 x,
n

yj = δ0 ··· δ0 x. Then the cube paths (x1,..., xn, x) ∼ (y1,..., yn, x).
lj	ln
We extend concatenation and prefix to homotopy classes of cube paths by defin- ing [x1,..., xm] ∗ [y1,..., yp] = [x1,..., xm, y1,..., yp] and saying that x˜ ± z˜, for homotopy classes x˜, z˜ of cube paths, if there are (x1,..., xm) ∈ x˜ and (z1,..., zq) ∈ z˜ for which (x1,..., xm) ± (z1,..., zq). It is easy to see that concatenation is well- defined, and that x˜ ± z˜ if and only if there is a homotopy class y˜ for which z˜ = x˜∗ y˜. Using homotopy classes of cube paths, we can now define the unfolding of a HDA. Unfoldings of HDA are similar to unfoldings of transition systems [40] or Petri nets [22, 30], but also to universal covering spaces in algebraic topology. The intention is that the unfolding of a HDA captures all its computations, up to ho-
motopy.
We say that a HDA X is a higher-dimensional tree if it holds that for any x ∈ X, there is precisely one homotopy class of pointed cube paths to x. The full subcategory of HDA spanned by the higher-dimensional trees is denoted HDT. Note that any higher-dimensional path is a higher-dimensional tree; indeed there is an inclusion HDP ‹→ HDT.
Definition 4.2 The unfolding of a HDA i : ∗ → X consists of a HDA ˜i : ∗ → X˜ and a pointed projection morphism πX : X˜ → X, which are defined as follows:
X˜n = [x1,..., xm] | (x1,..., xm) pointed cube path in X, xm ∈ Xn}; ˜i = [i]
δ˜0[x1,..., xm]=  σ = (y1,..., yp) | yp = δ0xm,σ ∗ xm ∼ (x1,..., xm)}
k	k
δ˜1[x1,..., xm]= [x1,..., xm, δ1xm]
k	k
πX [x1,..., xm]= xm

Proposition 4.3 The unfolding (X˜, πX ) of a HDA X is well-deﬁned, and X˜
is a

higher-dimensional tree. If X itself is a higher-dimensional tree, then the projection
πX : X˜ → X is an isomorphism.
Lemma 4.4 If X is a higher-dimensional automaton and (x˜1,..., x˜m) is a pointed cube path in X˜, then (πXx˜1,..., πXx˜j) ∈ x˜j for all j = 1,..., m.
Lemma 4.5 For any HDA X there is a unique lift r in any commutative diagram as below, for morphisms g : P → Q ∈ HDP, p : P → X˜, q : Q → X ∈ HDA:
  p 
z˛,˛
g	r	πX
,	, 
Q	q  zX,
Corollary 4.6 Projections are open, and any HDA is bisimilar to its unfolding. 2

X˜	Y˜



f











πX	πY


X	Y
Fig. 5.  Two simple one-dimensional HDA as objects of HDA and HDAh. In HDA there is no morphism
X → Y , in HDAh there is precisely one morphism f : X → Y .

History-Preserving Bisimilarity
In this section we recall history-preserving bisimilarity for HDA from [38] and show the main result of this paper: that hp-bisimilarity and the bisimilarity of Def. 3.2 are the same. To do this, we first need to introduce morphisms of homotopy classes of paths and homotopy bisimilarity.
Definition 5.1 The category of higher-dimensional automata up to homotopy HDAh

has as objects HDA and as morphisms pointed precubical morphisms f : X˜
of unfoldings.
→ Y˜

Hence any morphism X → Y in HDA gives, by the unfolding functor, rise to a morphism X → Y in HDAh. The simple example in Fig. 5 shows that the converse is not the case. By restriction to higher-dimensional trees, we get a full subcategory HDTh ‹→ HDAh.


Lemma 5.2 The natural projection isomorphisms πX : X˜
extend to an isomorphism of categories HDTh ∼= HDT.
→ X for X ∈ HDT

Restricting the above isomorphism to the subcategory HDP of HDT allows us to identify a subcategory HDPh of HDTh isomorphic to HDP.
Definition 5.3 A pointed morphism f : X → Y in HDAh is open if it has the right lifting property with respect to HDPh, i.e. if it is the case that there is a lift r in any commutative diagram as below, for all morphism g : P → Q ∈ HDPh,

p : P → X, q : Q → Y ∈ HDAh:

p  zX,

g	r	f
,	, 
q	zY ,
HDA X, Y are homotopy bisimilar if there is Z ∈ HDAh and a span of open maps
X → Z → Y in HDAh.
The connections between open maps in HDAh and open maps in HDA are as follows.
Lemma 5.4 A morphism f : X → Y in HDAh is open if and only if f : X˜ → Y˜ is
open as a morphism of HDA. If g : X → Y is open in HDA, then so is g˜ : X˜ → Y˜ .
We also need a lemma on prefixes in unfoldings.
Lemma 5.5 Let X be a HDA and x˜, z˜ ∈ X˜. Then there is a cube path from x˜ to

z˜ in X˜
if and only if x˜ ± z˜.

Proposition 5.6 For HDA i : ∗→ X, j : ∗→ Y , the following are equivalent:
X and Y are homotopy bisimilar;

there exists a precubical subset R ⊆ X˜ × Y˜
all (x˜1, y˜1) ∈ R,
with (˜i, ˜j) ∈ R, and such that for

for any x˜2 ∈ X˜ for which x˜1 = δ0x˜2 for some k, there exists y˜2 ∈ Y˜ for which
y˜1 = δ0y˜2 and (x˜2, y˜2) ∈ R,
for any y˜2 ∈ Y˜ for which y˜1 = δ0y˜2 for some k, there exists x˜2 ∈ X˜ for which

x˜1 = δ0x˜2 and (x˜2, y˜2) ∈ R;
there exists a precubical subset R ⊆ X˜ × Y˜
all (x˜1, y˜1) ∈ R,
with (˜i, ˜j) ∈ R, and such that for

for any cube path (x˜1,..., x˜n) in X˜, there exists a cube path (y˜1,..., y˜n) in
Y˜ with (x˜p, y˜p) ∈ R for all p = 1,..., n,
for any cube path (y˜1,..., y˜n) in Y˜ , there exists a cube path (x˜1,..., x˜n) in
X˜ with (x˜p, y˜p) ∈ R for all p = 1,..., n;

there exists a precubical subset R ⊆ X˜ × Y˜
all (x˜1, y˜1) ∈ R,
with (˜i, ˜j) ∈ R, and such that for

for any x˜2 ± x˜1 in X˜, there exists y˜2 ± y˜1 in Y˜
for any y˜2 ± y˜1 in Y˜ , there exists x˜2 ± x˜1 in X˜
for which (x˜2, y˜2) ∈ R, for which (x˜2, y˜2) ∈ R.

Again, the requirement that R be a precubical subset is equivalent to saying that whenever (x˜, y˜) ∈ R, then also (δνx˜, δνy˜) ∈ R for any k and ν ∈ {0, 1}. The
k	k
next result is what will allow us to relate hp-bisimilarity and bisimilarity.
Theorem 5.7 HDA X, Y are homotopy bisimilar if and only if they are bisimilar.
The following is an unlabeled version of hp-bisimilarity for HDA as defined in [38]:

Definition 5.8 HDA i : ∗→ X, j : ∗→ Y are history-preserving bisimilar if there exists a relation R between pointed cube paths in X and pointed cube paths in Y for which ((i), (j)) ∈ R, and such that for all (ρ, σ) ∈ R,
for all ρj ∼ ρ, there exists σj ∼ σ with (ρj, σj) ∈ R,
for all σj ∼ σ, there exists ρj ∼ ρ with (ρj, σj) ∈ R,
for all ρj ± ρ, there exists σj ± σ with (ρj, σj) ∈ R,
for all σj ± σ, there exists ρj ± ρ with (ρj, σj) ∈ R.
We are ready to show the main result of this paper, which together with Theo- rem 5.7 gives our characterization for hp-bisimilarity.
Theorem 5.9 HDA X, Y are homotopy bisimilar if and only if they are history- preserving bisimilar.
Corollary 5.10 History-preserving bisimilarity is decidable for ﬁnite HDA.
Labels
We finish this paper by showing how to introduce labels into the above framework of bisimilarity and homotopy bisimilarity. Also in the labeled case, we are able to show that the three notions of bisimilarity, homotopy bisimilarity and history-preserving bisimilarity agree.
For labeling HDA, we need a subcategory of pCub isomorphic to the category of sets and functions. Given a finite or countably infinite set S = {a1, a2,... }, we construct a precubical set !S = {!Sn} by letting
!Sn = (ai ,..., ai ) | ik ≤ ik+1 for all k = 1,...,n − 1}


with face maps defined by δν(ai ,..., ai )= (ai ,..., ai

k−1
, ai
k+1 ,..., ain ).

Definition 6.1 The category of higher-dimensional tori HDO is the full subcate- gory of pCub generated by the objects !S.
As any object in HDO has precisely one 0-cube, the pointed category ∗ ↓ HDO is isomorphic to HDO. It is not difficult to see that HDO is indeed isomorphic to the category of finite or countably infinite sets and functions, cf. [21].
Definition 6.2 The category of labeled higher-dimensional automata is the pointed arrow category LHDA = ∗ ↓ pCub → HDO, with objects ∗ → X → !S labeled pointed precubical sets and morphisms commutative diagrams
∗
¸c	c¸
f	z,
,	, 
!S	σ	z!T,

Definition 6.3 A morphism (f, id) : (∗ → X → !S) → (∗ → Y → !S) in LHDA is open if its component f is open in HDA. Labeled HDA ∗ → X → !S, ∗ → Y → !S are bisimilar if there is ∗→ Z → !S ∈ LHDA and a span of open maps X → Z → Y in LHDA.
Next we establish a correspondence between split traces [38] and cube paths in higher-dimensional tori. For us, a split trace over a finite or countably infinite set S is a pointed cube path in !S. Hence e.g. a split trace a+b+a−b+b− (in the notation of [38]) corresponds to the cube path (i, a, ab, b, bb, b). Both indicate the start of an a event, followed by the start of a b event, the end of an a event, the start of a b event, and the end of a b event. Note that contrary to ST-traces [38], the split trace contains no information as to which of the two b events has terminated at the b−.
By definition, a torus !S on a finite or countably infinite set S = {a1, a2,... }
contains all n-cubes (ai1 ,..., ain ). Hence we have the following lemma:
Lemma 6.4 Let (x1,..., xm), (y1,..., ym) be pointed cube paths in !S with xm =
ym. Then (x1,..., xm) ∼ (y1,..., ym).	2
Homotopy classes of split traces are thus determined by their endpoint and length:
Corollary 6.5 The unfolding of a higher-dimensional torus i : ∗ → !S ∈ HDO is isomorphic to the pointed precubical set j : ∗→ Y given as follows:
Yn = {(x, m) | x ∈ !Sn,m ≥ n, m ≡ n mod 2}, j = (i, 0)
δ0(x, m)= (δ0x, m − 1), δ1(x, m)= (δ1x, m + 1)	2
k	k	k	k
The definitions of open maps and bisimilarity in HDAh can now easily be ex- tended to the labeled case. Again, we only need label-preserving morphisms.
Definition 6.6 The category of labeled higher-dimensional automata up to homo- topy LHDAh has as objects labeled HDA ∗ → X → !S and as morphisms pairs of precubical morphisms (f, σ): (∗→ X˜ → !S˜) → (∗→ Y˜ → !T˜) of unfoldings.
Definition 6.7 A morphism (f, id) : (∗ → X → !S) → (∗ → Y → !S) in LHDAh is open if its component f is open in HDAh. Labeled HDA ∗→ X → !S, ∗→ Y → !S are homotopy bisimilar if there is ∗ → Z → !S ∈ LHDAh and a span of open maps X → Z → Y in LHDAh.
The proof of the next theorem is exactly the same as the one for Theorem 5.7.
Theorem 6.8 Labeled HDA X, Y are homotopy bisimilar if and only if they are bisimilar.	2
Also for the labeled version, we can now show that homotopy bisimilarity agrees with history-preserving bisimilarity. We first recall the definition from [38], where we extend the labeling morphisms to cube paths by λ(x1,..., xm)= (λx1,.  , λxm):
i	λ	j	μ
Definition 6.9 Labeled HDA ∗ −→ X −→ !S, ∗ −→ Y −→ !S are history-preserving
bisimilar if there exists a relation R between pointed cube paths in X and pointed

cube paths in Y for which ((i), (j)) ∈ R, and such that for all (ρ, σ) ∈ R,
λ(ρ)= μ(σ),
for all ρj ∼ ρ, there exists σj ∼ σ with (ρj, σj) ∈ R,
for all σj ∼ σ, there exists ρj ∼ ρ with (ρj, σj) ∈ R,
for all ρj ± ρ, there exists σj ± σ with (ρj, σj) ∈ R,
for all σj ± σ, there exists ρj ± ρ with (ρj, σj) ∈ R.
Theorem 6.10 Labeled HDA X, Y are homotopy bisimilar if and only if they are history-preserving bisimilar.

Conclusion
We have shown that hp-bisimilarity for HDA can be characterized by spans of open maps in the category of pointed precubical sets, or equivalently by a zig-zag relation between cubes in all dimensions. Aside from implying decidability of hp- bisimilarity for HDA, and together with the results of [38], this confirms that HDA is a natural formalism for concurrency: not only does it generalize the main models for concurrency which people have been working with, but it also is remarkably simple and natural.
One major question which remains is whether also hereditary hp-bisimilarity can fit into our framework. Because of its back-tracking nature, it seems that simple unfoldings of HDA are not the right tools to use; one should rather consider some form of back-unfoldings of forward-unfoldings. Given the undecidability result of [24], it seems doubtful, however, that any characterization as simple as the one we have for hp-bisimilarity can be obtained.
Another important question is how HDA relate to other models for concurrency which are not present in the spectrum presented in [38]. One major such formalism is the one of history-dependent automata which have been introduced by Montanari and Pistore in [28, 29] and have recently attracted attention in model learning [1, 2]. We conjecture that up to hp-bisimilarity, HDA are equivalent to history-dependent automata.
With regard to the geometric interpretation of HDA as directed topological spaces, there are two open questions related to the work laid out in the paper: In [7] we show that morphisms in HDA are open if and only if their geometric realizations lift pointed directed paths. This shows that there are some connections to weak factorization systems [3] here which should be explored; see [25] for a related approach.
In [8] we relate homotopy of cube paths to directed homotopy of directed paths in the geometric realization. Based on this, one should be able to prove that the geometric realization of the unfolding of a higher-dimensional automaton is the same as the universal directed covering [12] of its geometric realization and hence that morphisms in HDAh are open if and only if their geometric realizations lift dihomotopy classes of pointed dipaths.

The precise relation of our HDA unfolding to the one for Petri nets [22, 30] and other models for concurrency should also be worked out. A starting point for this research could be the work on symmetric event structures and their relation to presheaf categories in [36].

References
Fides Aarts, Faranak Heidarian, and Frits Vaandrager. A theory of history dependent abstractions for learning interface automata. In CONCUR, volume 7454 of LNCS, pages 240–255. Springer, 2012.
Fides Aarts, Bengt Jonsson, and Johan Uijen. Generating models of infinite-state communication protocols using regular inference with abstraction. In ICTSS, volume 6435 of LNCS, pages 188–204. Springer, 2010.
Jiˇr´ı Ad´amek, Horst Herrlich, Jiˇr´ı Rosicky´, and Walter Tholen. Weak factorization systems and topological functors. Appl. Categ. Struct., 10(3):237–249, 2002.
Marek A. Bednarczyk. Categories of asynchronous systems. PhD thesis, Univ. of Sussex, 1987.
Eike Best, Raymond R. Devillers, Astrid Kiehn, and Lucia Pomello. Concurrent bisimulations in Petri nets. Acta Inf., 28(3):231–264, 1991.
Pierpaolo Degano, Rocco De Nicola, and Ugo Montanari. Partial orderings descriptions and observations of nondeterministic concurrent processes. In Jaco W. de Bakker, Willem P. de Roever, and Grzegorz Rozenberg, editors, Linear Time, Branching Time and Partial Order in Logics and Models for Concurrency, volume 354 of LNCS, pages 438–466. Springer, 1989.
Uli Fahrenberg. A category of higher-dimensional automata. In FOSSACS, volume 3441 of LNCS, pages 187–201. Springer, 2005.
Uli Fahrenberg. Higher-Dimensional Automata from a Topological Viewpoint. PhD thesis, Aalborg University, Denmark, 2005.
Uli Fahrenberg and Axel Legay. History-preserving bisimilarity for higher-dimensional automata via open maps. CoRR, abs/1209.4927, 2012. http://arxiv.org/abs/1209.4927.
Lisbeth Fajstrup. Dipaths and dihomotopies in a cubical complex. Adv. Appl. Math., 35(2):188–206, 2005.
Lisbeth Fajstrup, Martin Raussen, and E´ric Goubault. Algebraic topology and concurrency. Theor. Comput. Sci., 357(1-3):241–278, 2006.
Lisbeth Fajstrup and Jiˇr´ı Rosicky´. A convenient category for directed homotopy. Theor. Appl. Cat., 21:7–20, 2008.
Sibylle B. Fr¨oschle and Thomas T. Hildebrandt. On plain and hereditary history-preserving bisimulation. In MFCS, volume 1672 of LNCS, pages 354–365. Springer, 1999.
Philippe Gaucher. Homotopy invariants of higher dimensional categories and concurrency in computer science. Math. Struct. Comput. Sci., 10(4):481–524, 2000.
Philippe Gaucher. About the globular homology of higher dimensional automata. Cah. Top. G´eom. Diff. Cat., 43(2):107–156, 2002.
Philippe Gaucher. Homotopical interpretation of globular complex by multipointed d-space. Theor. Appl. Cat., 22:588–621, 2009.
Philippe Gaucher. Towards a homotopy theory of higher dimensional transition systems. Theor. Appl. Cat., 25:295–341, 2011.
E´ric Goubault. Geometry and concurrency: A user’s guide. Math. Struct. Comput. Sci., 10(4):411–425, 2000.
E´ric Goubault. Labelled cubical sets and asynchronous transition systems: an adjunction. In CMCIM, 2002.
E´ric Goubault and Thomas P. Jensen. Homology of higher dimensional automata. In Rance Cleaveland, editor, CONCUR, volume 630 of LNCS, pages 254–268. Springer, 1992.

E´ric Goubault and Samuel Mimram. Formal relationships between geometrical and classical models for concurrency. Electr. Notes Theor. Comput. Sci., 283:77–109, 2012.
Jonathan Hayman and Glynn Winskel. The unfolding of general Petri nets. In FSTTCS, volume 2 of
LIPIcs, pages 223–234. Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik, 2008.
Andr´e Joyal, Mogens Nielsen, and Glynn Winskel. Bisimulation from open maps. Inf. Comp., 127(2):164–185, 1996.
Marcin Jurdzin´ski, Mogens Nielsen, and Jiˇr´ı Srba. Undecidability of domino games and hhp-bisimilarity.
Inf. Comp., 184(2):343–368, 2003.
Alexander Kurz and Jiˇr´ı Rosicky´. Weak factorizations, fractions and homotopies. Appl. Categ. Struct., 13(2):141–160, 2005.
Antoni W. Mazurkiewicz. Concurrent program schemes and their interpretations. DAIMI Report PB 78, Aarhus University, Denmark, 1977.
Robin Milner. Communication and Concurrency. Prentice Hall, 1989.
Ugo Montanari and Marco Pistore. An introduction to history dependent automata. Electr. Notes Theor. Comput. Sci., 10:170–188, 1997.
Ugo Montanari and Marco Pistore. Minimal transition systems for history-preserving bisimulation. In
STACS, volume 1200 of LNCS, pages 413–425. Springer, 1997.
Mogens Nielsen, Gordon D. Plotkin, and Glynn Winskel. Petri nets, event structures and domains, part I. Theor. Comput. Sci., 13:85–108, 1981.
David M.R. Park. Concurrency and automata on infinite sequences. In TCS, volume 104 of LNCS, pages 167–183. Springer, 1981.
Carl A. Petri. Kommunikation mit Automaten. Bonn: Institut fr Instrumentelle Mathematik, Schriften des IIM Nr. 2, 1962.
Vaughan Pratt. Modeling concurrency with geometry. In POPL, pages 311–322. ACM Press, 1991.
Alexander M. Rabinovich and Boris A. Trakhtenbrot. Behavior structures and nets. Fund. Inf., 11(4):357–403, 1988.
Mike W. Shields. Concurrent machines. Comp. J., 28(5):449–465, 1985.
Sam Staton and Glynn Winskel. On the expressivity of symmetry in event structures. In LICS, pages 392–401. IEEE Computer Society, 2010.
Rob J. van Glabbeek. Bisimulations for higher dimensional automata. Email message, June 1991.
http://theory.stanford.edu/~rvg/hda.
Rob J. van Glabbeek. On the expressiveness of higher dimensional automata. Theor. Comput. Sci., 356(3):265–290, 2006.
Rob J. van Glabbeek and Ursula Goltz. Equivalence notions for concurrent systems and refinement of actions. In MFCS, volume 379 of LNCS, pages 237–248. Springer, 1989.
Glynn Winskel and Mogens Nielsen. Models for concurrency. In Samson Abramsky, Dov M. Gabbay, and Thomas S.E. Maibaum, editors, Handbook of Logic in Computer Science, volume 4, pages 1–148. Clarendon Press, Oxford, 1995.
