

Electronic Notes in Theoretical Computer Science 265 (2010) 11–33
www.elsevier.com/locate/entcs
Unitary Theories, Unitary Categories
Pieter Hofstra1,2
Department of Mathematics and Statistics University of Ottawa
Ottawa, Canada
Robin Cockett3
Department of Computer Science University of Calgary
Calgary, Canada

Abstract
This paper explores the fine structure of classifying categories of partial equational theories. The central concept is that of unitary category, and results about those are applied to the problem of completing partial algebras to total ones. We also look at the special case of partial combinatory logic and give a characterization of the global sections of the generic PCA.
Keywords: Partial equational logic, partial algebra, completions, classifying categories, unitary categories, partial combinatory logic, partial combinatory algebras.


Introduction
Both in mathematics and in computer science, the widespread presence of partial maps and -operations has led researchers to develop syntactical and semantical tools for handling partiality in an elegant and efficient way. On the syntactical side, this goes back at least to Kleene, who introduced what has become known as Kleene-equality between terms. After that, several authors have extended or modified existing logical systems in order to reason about partiality; we mention M. Beeson’s Logic of Partial Terms [1] and D.S. Scott’s Logic of Partial Elements[16], both of which are extensions of first order logic, and of course Moggi’s PhD dis- sertation on the partial lambda calculus [12]. On the semantical side, categorical

1 We would like to thank Mike Mislove for his useful questions and comments on an earlier version of this paper.
2 Email: phofstra@uottawa.ca
3 Email: robin@ucalgary.ca

1571-0661© 2010 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2010.08.003

settings for partiality have been developed on different levels, e.g. in the work by Curien and Obtulowicz on partial cartesian closed categories [10], by E. Robinson and G. Rosolini on P-categories [14], and later by Cockett and Lack on restriction categories [8].
The past decade has also seen several papers on the syntax and semantics of partial equational theories. A first exploration of the use of classifying categories for such theories appears in L. Schr¨oder’s [15]; Corradini and Gadducci [9] further develop a functorial semantics which can be used to describe not only partial al- gebras, but also relational and multivalued models, and Palmgren and Vickers [13] show that this fragment of logic is actually richer than one might think at first: one may use the logic to simulate reasoning using Horn clauses.
Our own motivation for the work presented here came from Turing categories, which are abstract categorical models of computability [6]. There is a representation theorem, which roughly says that every such category is generated from a Partial Combinatory Algebra (PCA); in turn, a PCA is just a model of a partial equational theory called partial combinatory logic (a two-valued version of this theory was first formulated by Feferman, see e.g. his expository paper [11]). In particular, the classifying category of PCL is a Turing category, which is initial amongst such cat- egories. It therefore became important to understand the structure of this category in more detail, and this work is a step in that direction, as well as an exploration of the applications of classifying categories in general.

Aims and Contributions.
The main contribution of this paper is that it develops aspects of the syntax and semantics of partial equational theories and connects these with unitary categories. Unitary categories are partial map categories in which the partiality is particularly well-behaved, and as such give a pleasant model theory. It turns out that many of the partial equational theories of practical interest actually give rise to unitary cat- egories; we both give methods for establishing and for exploiting this. In particular, we derive a sufficient condition for a partial algebra to be completable (embeddable in a total model) and give a general categorical procedure for constructing the completion.
In addition, we give a characterization of the PCA of global sections of the generic PCA as the PCA of strongly normalizing terms in combinatory logic modulo provable equality.

Plan of the paper.
After reviewing some background material on restriction categories and cartesian structure, we start (Section 2) by developing some of the theory of unitary cate- gories, in particular looking at two congruences naturally associated to a restriction category. We then (Section 3) turn to partial equational logic; in the literature, there are several versions of this formalism available, and the version presented here is both fully general (in that it corresponds to the widest possible class of carte- sian partial map categories), it matches the intended semantics smoothly and is

syntactically a bit finer than other versions (which is a must for syntactically sensi- tive aspects, such as rewriting). We introduce some of the theories of interest, and describe briefly the construction of the classifying category of a theory. Particu- lar emphasis is placed on the fact that different notions of natural transformation correspond under the functorial semantics to different notions of homomorphism of partial algebras.
Next (Section 4) we look at the passage between total and partial algebras, and relate this to unitary categories. We establish easily that several theories, including PCL, have a unitary classifying category. Then we turn to one of the
main applications, namely the problem of completability of a partial algebra. By using the notion of the closed diagram of a partial algebra, we can employ general results about unitary categories to establish a sufficient condition for completability
(in general, the problem is undecidable). Finally, we state the characterization of the global sections of the generic PCA; while the result is intuitively clear, a complete proof relies on a careful analysis of the rewriting theory of partial theories, something which is outside the scope of the current paper and will be left to a forthcoming paper.

Restriction Categories and Unitary Categories
In this section we first rehearse some standard material about categories of partial maps. We then explore the basic theory of unitary categories, develop some basic results about the unitary quotient of a category and investigate its effect on the global sections functor; this will play a key role in section 4.4 where we investigate completions of partial algebras.

Background on partial map categories
For convenience and to settle on the necessary notation and terminology, we review some of the essentials of abstract categories of partial maps. For a detailed treat- ment, as well as some connections to other approaches to partial map categories, see [8].
Definition 2.1 [Restriction category] A restriction category is a category C en- dowed with a combinator (−), sending f : A → B to f : A → A, such that the following axioms are satisfied.


The idea is that the map f measures the degree of partiality of f ; we refer to f
as the domain (of definition) of f . The prime example of a restriction category is

Par, the category of sets and partial functions. Another important example is the category with one object N and with partial recursive functions as morphisms. In this example, the domains correspond to the r.e. sets.
A morphism f in a restriction category for which f = 1 is called a total map.
The subcategory of total maps is denoted Tot(C).
It is easily verified that maps of the form f are idempotent. If a map f satisfies f = f , then we say that f is a restriction idempotent. Note that in general such idempotents are not required to split; thus the domain of f need not be represented by an actual subobject.
Restriction categories are order-enriched: given two parallel maps f, g : A → B, say that
f ≤ g  ⇔ f = gf. 
This ordering expresses the idea that f and g agree wherever f is defined, but that
g may be more defined than f . Axiom R.1 implies this ordering to be reflexive,
R.1 and R.2 give antisymmetry, R.3 gives transitivity, and R.4 gives enrichment.


Restriction functors and transformations.
A functor F : C → D between restriction categories is called a restriction func- tor if Ff = F (f ) for all maps f . There is more than one notion of natural trans- formation between restriction functors; we mention here only the most common types of transformation. Let F, G : C → D be two restriction functors, and let α = {αX : FX → GX|X ∈ Ob(C)} be a family of maps. If each square

FX  αX zG,X
Ff	Gf
,		, 
FY	αY  zG,Y
commutes on the nose, then we say that α is a strict natural transformation. If instead αY Ff ≤ GfαX then we say that α is a lax natural transformation. In case all components αX are total maps, then we call α total. There are various combinations possible; we shall be mainly interested in the following:
Rcat is the 2-category of restriction categories, restriction functors and total, strict natural transformations
Rcatl the 2-category with the same 0-cells and 1-cells as Rcat, but with lax total
natural transformations as arrows.
Rcatp stands for the 2-category with again the same 0-cells and 1-cells, but with
lax, partial transformations.
We note that the category Rcatp is locally a restriction category. 4

4 The restriction of a natural transformation is taken pointwise; however, this does not work when we consider strict, partial transformations and strict maps, and for this reason we do not consider this combi- nation.

Cartesian structure
For purposes of categorical logic we need a bit more than just a restriction category: we need to have the appropriate notion of finite product.
An object 1 in a restriction category C is said to be a restriction terminal object
if for each object A there is a unique total map !A : A → 1, such that !1 = 1, and for each f : A → B we have !Bf =!Af , as in the diagram below.

A ¸ f  zB,
¸¸¸¸≥
!	¸¸ !B
¸r1,¸ 
A partial product of two objects A, B is an object A × B equipped with total projections πA : A × B → A and πB : A × B → B, such that for each C and each pair of maps f : C → A, g : C → B, there is a unique map ⟨f, g⟩ : C → A × B with the properties that πA⟨f, g⟩≤ f, πB⟨f, g⟩≤ g and ⟨f, g⟩ = fg.

  C ¸¸¸¸

f 
⟨f,g⟩
¸g¸¸

   ≥
πA
≤
, 
× B πB
¸¸r 
zB,

Thus, these finite limits are limits in the enriched sense; still, we shall simply speak about terminal objects and products, as there will be no chance of confusion. If a restriction category has a terminal object and binary (hence all finite) products, we say that the category is cartesian. Similarly, a restriction functor preserving all of this structure is called a cartesian functor. Each of the above 2-categories of restric- tion categories has a cartesian variant; e.g., we denote by CartRcatl the 2-category of cartesian restriction categories, cartesian functors and lax total transformations.
When it is clear that we are dealing with partial products in a restriction cat- egory, we will often simply speak about products, assuming this will not lead to confusion.

Unitary categories
We now turn to unitary categories. 5 We need some terminology first: given two par- allel maps f, g in a restriction category C, we say that f, g are compatible (notation f × g) when fg = gf . Thus, maps are compatible if they agree on the intersection of their domains. The compatibility relation is almost a congruence: it is preserved by pre- and post composition (i.e. f × g ⇒ hfk × hgk) and by restriction (i.e. f × g ⇒ f × g), and it is symmetric and reflexive. The only property which fails in general is transitivity. For example, in the category Par, let g : A → B be the

5 The notion of unitariness stems from inverse semigroup theory, where an inverse semigroup S is said to be E-unitary when every element s ∈ S which is above an idempotent is itself idempotent. Every free inverse semigroup is E-unitary, but the converse is not true; in fact, MacAlister’s P-theorem is a structure theorem for unitary inverse semigroups, describing them (roughly) as a semidirect product of a group acting on a
meet-semilattice. An analogue of the P-theorem for a class of unitary categories was obtained in [9].

empty map, so that for any f, h : A → B we have f × g, g × h. Clearly, we need not have f × h.
Note also that for any two restriction idempotents e1, e2 on the same object, we have e1 × e2.
Definition 2.2 A restriction category C is unitary if the compatibility relation ×
on hom-sets is transitive.
Trivially, any total category is unitary. Less trivially (see [9]) free restriction categories are unitary. In practice, the following criterion is often used to test whether a category is unitary:
Lemma 2.3 Let C be a restriction category. Then C is unitary if and only if for all e = e, fe = ge implies f × g.
Proof. If C is unitary and fe = ge, then we have f × fe = ge × g, hence f × g by transitivity of ×. Conversely, if f × g × h then we have ffgh = hfgh, hence f × h.	2
Thus in particular unitarity implies that if two maps agree on some small domain, then they already agree on the overlap of their domains. 6
In a unitary category the relation × is actually a restriction congruence (i.e. a congruence on the category compatible with restriction), and thus there is a quotient functor
q : C → C/ ×   q(C) = C   q(f ) = [f ]~.
The quotient category then is an ordinary category (equivalently, has trivial restriction), because we will have q(f ) = q(f ) = q(1) = 1. Moreover, the quotient functor separates total maps; since this will be used later, we record this as a lemma.
Lemma 2.4 If C is unitary then the functor q : C → C/ × is faithful on total maps, in the sense that for total maps f, g, we have q(f ) = q(g) implies f = g.
Proof. If C is unitary then we have q(f ) = q(g) if and only if f × g. But since f, g
are total this simply means f = g.	2
Let us organize the situation: denote by Cat the category of ordinary categories, by Rcat the category of restriction categories, and by UCat the category of unitary categories. We then have a diagram of inclusions

Cat	I  zUC,at	J  zR,cat
Proposition 2.5 Both inclusion functors have left adjoints.
Proof. We have already indicated how to turn a unitary category C into a total category: one divides by the congruence ×. We write Q(C) for the category C/ ×. The adjointness is easily verified.

6 It is clear that (just as in semigroup theory) the notion of unitarity needs some refinement when the ambient category has a zero, but for the present purposes we need not worry about this.

Next, consider a restriction category D. We turn D into a unitary category by forming the quotient D/ ∼, where ∼ is the congruence defined by

fg ∼ gf if there exists an e = e for which fe = ge.
It is readily verified that this is indeed a congruence, which forces two maps to be compatible when they agree on some domain. For example, transitivity is proved as follows: given fe = ge, ge' = he' for some restriction idempotents e, e', then fee' = gee', so that fh ∼ hf . It is also easy to see that the quotient U(D) = D/ ∼ is unitary.	2
The quotient functor C → C/ ∼ has the property that it separates idempotents, in the sense that e1 ∼ e2 if and only if e1 = e2 for any two restriction idempotents e1, e2.
We have:
Q	U
˛r⊥ z,˛r⊥ z,
Cat	I	UCat	J	Rcat.
We remark that the formulation of the above result ignores the 2-categorical structure of the categories involved; however, it is easily seen that the two quotient functors also act on appropriate transformations.
Finally, we shall sometimes overload notation and simply write D/ × for QU(D), even if D is not unitary.
All of the above goes through without modification when we add cartesian struc- ture to the categories involved. For future reference we record this:
Proposition 2.6 The adjunctions from Proposition 2.5 restrict to the subcategories of cartesian (restriction, unitary) categories and -functors, and hence give adjunc- tions of the form

Q
¸r⊥ z,
U
 t ⊥ z,

CartCat
CartUCat
CartRCat.


Global sections
When C is a cartesian restriction category we may consider the functor Γ : C → Par;   C '→ Tot(1,C) = {c : 1 → C|c = 1}
which sends C to the collection of total elements 1 → C. On arrows, Γ acts by composition. We refer to Γ as the global sections functor. It is easily seen to be a cartesian functor; in fact, it is the initial such functor:
Lemma 2.7 Let F : C → Par be a cartesian restriction functor. Then there exists a unique (lax, total) natural transformation γ = γ(F ) : Γ ⇒ F.
Proof. Since Γ(1) ∼= 1 ∼= F (1), the component γ1 at 1 of the sought-after γ is the unique total map 1 → 1. By naturality, this completely determines the transforma- tion: at an object X we define γX (x : 1 → X) = F x(∗) ∈ FX. This definition of

γX is the only one which makes the naturality square


Γ1 ∼= 1
Γx
1 ∼= F 1
Fx 

,		, 
ΓX	γx	zF,X 
commute.	2
We shall also find use for the following special case:
Corollary 2.8 Let F : C → D be a cartesian restriction functor between cartesian restriction categories. Consider the (non-commutative!) diagram
C ¸ F	zD,

¸¸¸¸
Γ ¸¸¸ Γ
r,¸ 
Par.
There exists a unique (lax, total) natural transformation γ(F ) : Γ ⇒ ΓF, and the assignment F '→ γ(F ) is functorial in F.
We now apply the above to the situation
C ¸  q zC/,∼   r	zC/,×


¸¸¸¸
Γ ¸¸¸¸
   
Γ   Γ

r,¸ ˛ r
Par.

Both triangles give total, lax natural transformations according to the above lemma. In fact, the first component γ(q) is epi, while the second part γ(r) is mono. This gives:
Lemma 2.9 Suppose that C is a cartesian restriction category. Then the following statements are equivalent:
For every pair of global sections a, b : 1 → C in C and each restriction idem- potent e we have ae = be implies a = b.
The functor q : C → C/ ∼ (the unitary quotient of C) separates global sections.
The epi part γ of the natural transformation is an isomorphism.
The natural transformation associated to the quotient map C → C/ × is mono.
Proof. Clearly the last two statements are equivalent. For any two global sections a, b we have a × b iff ae = be for some idempotent e iff qa = qb, so (i) and (ii) are equivalent as well. Finally, by construction of γ (see the proof of Lemma 2.8) (ii) and (iii) are equivalent.	2

The logic of partial maps
In this section we present a term logic for cartesian restriction categories. Our syntax is based on restricted, or conditioned terms of the form t|s; a key difference with the syntax presented in [9] is that we consider term restriction as a term formation operation, while in loc. cit. terms are required to have a specific syntactic form, which we may recover as a special normal form.
We then outline the basic features of the functorial semantics, including several notions of homomorphism between partial algebras, and sketch the construction of the classifying category of a theory.


Signatures and Partial Terms
The logic we are presenting is a typed logic; atomic types will be written A0, A1,.. ., or A, B, C,.. ., and general types are formed by taking finite products of atomic types, including the empty product type denoted 1.
A signature, Σ = (A, Ω, ω) consists of a set A of atomic types, and a set of primitive function symbols Ω with an arity function ω which assigns a type to each function symbol. As usual, we write f : A1 ×· · ·×An → A0. Constants are regarded as function symbols of arity 0.
Next we construct the collection Term(Σ) of partial terms over Σ. We assume that we have, for each atomic type A, a countable supply of variables.
A basic term judgement now takes the form Γ ▶ t : A. Here Γ is a variable context, i.e. an ordered list of variable declarations of the form x : B. It is required that the free variables of t are mentioned in the context Γ. The formation rules for partial term judgements are listed in Table 1.
Thus, terms are built in the standard manner except for the additional rule which allows us to form t|s. One should think of this term as being obtained from t by cutting down the domain of t to that of s.
In order to improve readability we write more conveniently:

((t|s1 )|s2 ..)|sn =: t|s1,s2,...,sn

or even t|S for S = {s1,..., sn}. This notation suggests that the terms s1,..., sn are to be regarded as a set, i.e. that their order and multiplicity does not matter. This will indeed be a consequence of the axioms.
The set of free variables of a term t is defined inductively in the usual manner,
and will be denoted FV (t). Similarly, we have an obvious notion of subterm; if t is a subterm of s then we write t ≤ s, and if t is a proper subterm of s then this is denoted t ≺ s.
We shall also identify term judgements which are α-equivalent, i.e. are different only up to a renaming of variables.



Table 1 Judgements for partial terms

Equality of partial terms
The axioms for equational reasoning are as in ordinary equational logic, but with a few added rules governing the behaviour of restrictions and the interaction with the tuple terms. The rules are given in Table 3.2. Note in particular that eR.4 states that variables are total.
We will now consider substitution in this term logic, which is crucially differ- ent from standard substitution in equational logic. The substitution operation is inductively defined as follows:
Definition 3.1 Given a term judgement Γ ▶ t : A with x : B ∈ Γ and a term s : B, define inductively t{s/x} by
x{s/x} = s
y{s/x} = y|s when x /= y
c{s/x} = c|s when c is atomic
f (t1,..., tk){s/x} = f (t1{s/x},..., tk{s/x})
t1|t2 {s/x} = t1{s/x}|t2{s/x}
Occasionally we will also need simultaneous substitution t{s1/x1,..., sn/xn}; the evident definition is left to the reader.
The following lemma facilitates substitution. Standard substitution is written
t[s/x], while we continue to use t{s/x} for the partial term substitution.
Lemma 3.2 Let t, s be terms.


Table 2
Restriction equality judgements

If t' is a subterm of t, then t|t' = t.
If x occurs as a free variable of t, then t{s/x} = t[s/x]
If x is free in both t and t', then t = t' implies t{s/x} = t'{s/x}.
Proof.
This is an easy induction on the structure of t using the restriction rules.
The only difference between t[s/x] and t{s/x} is that in the latter we may have some more restrictions. But if x occurs free in t then t{x/s} contains s as a subterm, and we may apply the first part of the lemma to remove these restrictions.
Immediate.
2
This shows that we can use substitution in equational reasoning in the way we are used to, as long as we substitute for free variables which actually occur.
To conclude this section, we note that the restriction equalities may be used to bring terms into canonical form.
Definition 3.3 A term is called pure if it does not contain any restrictions, and is called primitive if it is also of basic type. A term is said to be in restriction form if it is of the form r|S , where r is pure and all s ∈ S are primitive.
There is an algorithm for bringing an arbitrary term t into this form: considering the restriction rules [eR.3], [eR.5], [eR.6] and [eR.7] as oriented from left to right, they actually give a confluent reduction system. Thus we have:
Lemma 3.4 (Restriction Form) Let r be an arbitrary term. Then r is provably equal to a term in restriction form.
In [9], one only considers terms in restriction form, making some of the rules

for manipulating restrictions superfluous. However, for certain purposes having fine control over the syntax is desirable, especially when considering rewriting of partial terms.

Theories and Models
A theory consists of a signature Σ, together with a set E of axioms (equality judge- ments in the language). Typically, we denote theories by T = (Σ, E ), but if the signature is clear we also identify theories with their sets of axioms.
A few examples:
Given a signature Σ, one can always consider the theory with no equations; such a theory is called a free theory. For example, the theory of partial applicative structures, which has one basic type A and one binary function symbol • : A × A → A as its signature, has no equations and so is a free theory.
A theory which only contains equations consisting of pure terms (terms without any restrictions) is called a pure theory.
The theory of partial monoids is pure. It is given by the following axioms:
x ◦ (y ◦ z)= (x ◦ y) ◦ z x ◦ e = x
e ◦ x = x
Partial combinatory logic (PCL) is obtained from the theory of partial applica- tive systems by adding two constants k, s and by adding the following axioms:
(k • x) • y = x
((s • x) • y) • z = (x • z) • (y • z)
(x, y)|(s•x)•y = (x, y)
We introduce the standard convention of associating the application to the left and writing xy instead of x • y, omitting parentheses whenever possible. The models of this theory are partial combinatory algebras (PCAs, see [3] for definitions and examples).
The theory of a discrete object (also known as a separable object ) has a single type D and a single binary function symbol eqD satisfying the equations:
eqD(x, x)= x
(x, y)|eqD (x,y) = (eqD(x, y), eqD(x, y)).
Of course, eq is to be thought of as an equality predicate; a model of such a theory will be an object equipped with an equality predicate.
An equation of the form e(x) = x|e(x) expresses that e is a restriction idem- potent (see section 2.1). This example, as well as the previous one, illustrates how we can describe properties of objects or morphisms using the logic.
Palmgren and Vickers have shown that partial algebraic theories subsume Horn theories, see [13].

When T is a theory and D a cartesian restriction category, we have the notion of a model of T in D; this generalizes the usual notion of model of equational theories, where we interpret a restricted term t|s as [t|s] := [s][[t]]. When M is a model, we write M |= t = s and say that t = s is valid in M when the terms t and s are interpreted under M as the same morphism of D.
The collection of all T-models in a fixed category D is itself a category; in fact, there are several categories whose objects are the T-models, depending on which kind of homomorphisms one chooses. Fix two models M, N in D. Then a lax homomorphism α from M to N consists of a family αA : M(A) → N (A) of morphisms in D indexed by the types of the signature of T, such that for each function symbol f , the diagram
M(A ) ×· · · × M(A )αA1 ×···×αAn zN,(A ) × ... ×N (A )

M(f )	≤
, 
N (f )
, 

M(A)	αA	zN,(A)
commutes up to inequality.
In case we actually have equality in every such square, α is called strict. When each component αA is a total map, we call α a total homomorphism 7 . This leaves us with three useful combinations:
Mod(T, D) is the category whose objects are T-models in D and whose morphisms are strict, total homomorphisms.
Modl(T, D) is the category whose objects are T-models in D and whose morphisms are lax, total homomorphisms.
Modp(T, D) is the category whose objects are T-models in D and whose morphisms are lax, partial transformations.
Lemma 3.5 Both Mod(T, D) and Modl(T, D) are cartesian categories; Modp(T, D)
is a cartesian restriction category.
Proof. It is evident that each of the structures defined are categories. Only on Modp(T, D) we have a non-trivial restriction structure, since for both other cate- gories the morphisms are total. This restriction is pointwise: if α = (αA) is a lax partial homomorphism, put α to be the partial homomorphism with components αA.
Finally, the cartesian product of two models is also defined componentwise, i.e. (M×N )(A) = M(A) ×N (A), etc. The verifications are routine.	2
Classifying Categories
We now sketch the construction of a classifying category of a theory T, which will, in particular, prove the completeness of our semantics.
7 In the universal algebra approach to partial algebras one employs different terminology. What we have called a strict, total homomorphism is called closed in [4], while our lax total homomorphisms are considered the standard notion in loc. cit. and are simply called homomorphisms.

Objects: Cartesian types of T. Objects will be written A = A1 × ··· × Ak. The terminal object will be denoted by 1.
Morphisms: A morphism from A = A1 × ··· × An to B = B1 × ··· × Bm is an equivalence class of terms t for which there exists a term judgement of the form

Γ ▶ t : B
where Γ = [x1 : A1,..., xn : An]. Two such t, t' are equivalent when T ▶ t = t'. We denote such a morphism by [t] : A → B.
Even though the notation does not reflect it, it is crucial that, firstly, t is a term in a chosen variable context, and secondly, that we have also chosen an ordering of those variables. The fact that we work up to alpha-equivalence allows us to ensure that two morphisms have disjoint sets of free variables if this is necessary.
Identities: The identity morphism on an object A1 ×· · ·× An is represented by the tuple term (x1,..., xn), where xi : Ai.
Composition:  Given morphisms [t] : A → B = B1 ×· · · × Bk, [s] : B → C, we may assume that t is of the form
t = (t1,..., tk)|T ,
and that FV (s) ⊆ {y1,..., yk} is disjoint from FV (t).
Now the composite [s] ◦ [t] is represented by the term
s{t1/y1,..., tk/yk}|T .

Restriction:  Given a morphism [t] : A1 ×· · ·× Ak → B, define its restriction to be the morphism represented by the term (x1,..., xk)|t.
Products: The unique total map A → 1 is represented by the empty tuple (). A projection A1 ×· · · × An → Ai is represented by xi : Ai.
Proposition 3.6 For any theory, T, its classifying category C[T] is a cartesian restriction category.
The category C[T] contains a generic T-model, which we shall denote by GT. Genericity means:
Theorem 3.7 For any cartesian category D, there is an equivalence of categories
Modp(T, D)  CartRcatp[C[T], D]
where the functor category on the right consists of all cartesian functors and lax, partial natural transformations. This equivalence cuts down to
Modl(T, D)  CartRcatl[C[T], D],

Mod(T, D)  CartRcat[C[T], D].
The proof is standard. We hope that the above formulation of the result draws attention to the fact that the various types of homomorphisms between partial algebras usually considered actually may be explained by the fact that there are many kinds of natural transformations in this setting.
Unitary theories and applications
Comparing total and partial theories
Recall from Section 2 that one may turn a (cartesian) restriction category C into an ordinary category by forming the quotient C/ × of C, where × is the compatibility relation on maps.
On the syntactical side of things, we have two ways of turning a partial theory into a total one. First, given a theory T we may define another theory (which is to be regarded as an ordinary algebraic theory without any partiality), denoted Erase(T). The signature of Erase(T) will be identical to that of T; in order to define the axioms, we introduce a mapping from partial terms to ordinary terms. Recall that Term(Σ) denotes the collection of partial terms over Σ; we shall write Termtot(Σ) for the collection of ordinary algebraic terms.
Definition 4.1 Let Σ be a signature.
We define the function Erase : Term(Σ) → Termtot(Σ) by induction on the structure of terms as follows:
Erase(x) = x  for x a variable
Erase(t1,..., tk) = (Erase(t1),..., Erase(tk))
Erase(f (t1,..., tk)) = f (Erase(t1),..., Erase(tk))
Erase(t|s) = Erase(t)
Now if E is the collection of axioms for T, we may define
Erase(E ) = {Erase(t) = Erase(t')|t = t' ∈ E}.
Then Erase(T) is the algebraic theory obtained from T by taking as axioms
Erase(E ); we call this the erasure of T.
We note that this operation preserves provability:
Lemma 4.2 If T ▶ t = t' then also Erase(T) ▶ Erase(t) = Erase(t').
Proof. This is an easy induction on proof depth.	2
The second way of turning a theory into a total one consists of adding axioms of the form ()|t = () for every term t in the language or, more economically, adding axioms ()|f(x1,...,xn) = () for each function symbol. The result of applying this to a theory T will be denoted by Tot(T).
We can now consider three categories: the first is the classifying category C[T] of the original theory T; the second is the classifying category C[Tot(T)] of the

theory Tot(T); as defined, this is a cartesian restriction category, but the restriction is trivial since we have forced all maps to be total. And the third is the cartesian category C[Erase(T)], the classifying category of the erasure of T. The category C[Tot(T)] should not be confused with the subcategory Tot(C[T]) of total maps in C[T]; these categories are generally very different.
Lemma 4.3 The categories C[Tot(T)], C[T]/ × and C[Erase(T)] are isomorphic.
Proof. Straightforward: the categories have the same objects; two terms t, s are provably equal in Tot(T) if and only if there is a term e for which t|e = s|e in T, i.e. if and only if they are identified by the congruence induced by ×. Moreover, it is easily seen that the induced functor C[T]/ ×→ C[Erase[T]] is inverse to the functor in the opposite direction corresponding to the Erase(T)-model in C[T]/ ×.	2
As a consequence, a model for the totalized theory is essentially the same thing as a model for the erased theory.
Unitary theories: easy cases
In Section 2 we defined unitary categories. The notion of a unitary theory is the syntactical analogue.
Definition 4.4 [Unitary Theory] A partial theory T is unitary if t|T = s|T implies t|s = s|t for all terms t, s. A model A of a theory T in a category D is unitary when, for every pair of terms t, s in T and every term r we have [t|r]A = [[s|r]A implies that [t|s]A = [[s|t]A.
In terms of functorial semantics, this says that the induced functor C[T] → D has a unitary subcategory of D as its essential image. We stress that even if T is a unitary theory, nothing general can be concluded about the models of T being unitary. It is often difficult to prove or disprove that a particular theory is unitary (in fact, this is generally undecidable). However, in some cases results are easily obtained, and these will already give us an ample supply of unitary theories.
Let us suppose for the moment that we are given an equational (total) theory T and that we wish to know whether, regarded as a pure, partial theory, this theory is unitary. Imagine a proof of t = s in the total world; we will write T ▶tot t = s to denote provable equality in the total theory. We may try to copy the proof as closely as we can in the partial world: the axioms can be copied verbatim, reflexivity, symmetry and transitivity can be copied without problem as well. The only thing which spoils this copycat strategy is substitution, which may, on the partial side, introduce restrictions.
Let us look at this more closely: if we applied a substitution on the total side,

say
	t = s	 t[r/x] = s[r/x]

then one of two things can happen. First, it could be that x occurs in both t and
s. Then in the partial world both substitutions are standard, and we don’t need to introduce restrictions.

Otherwise, x occurs in exactly one of t, s; then in the partial world we are forced to introduce a restriction which can’t be removed. (Of course, one may disregard the hypothetical case where x does not occur on either side, since then the hypothesis and conclusion of the inference step are syntactically identical.) The above argument shows in particular:
Lemma 4.5 Suppose that all substitutions used in a proof of T ▶tot t = s are balanced, in the sense that the substitution variable occurs on both sides. Then T ▶ t = s as well.
From this, the following is immediate:
Proposition 4.6 Let T be a pure theory which is balanced, i.e. all the axioms t = s satisfy the requirement that a variable occurs in t if and only if it occurs in s. Then T is unitary.
Proof. Suppose T ▶ t|T = s|T . Then, passing to the total world, we get T ▶tot t = s. Since any proof of t = s contains only balanced equations, we get a proof of t = s in the partial theory as well.	2
Thus, for example, the theory of partial monoids is unitary.

Rewriting
Let us now suppose that we have an equational theory T (not necessarily balanced), and that we have a rewriting presentation of this theory. That is, we have basic rewrite steps t → s, which we may apply in context, and in which we may substitute: then a general rewrite step is of the form C[tσ] → C[sσ] where C[] is a context and σ a substitution. We write →∗ for the reflexive, transitive closure of the rewrite relation; to say that we have a rewrite presentation of T means exactly that two terms are in the same connected component of → if and only if they are provably equal in T. Finally, we recall the notion of a confluent rewriting system [17]: this is a rewriting system in which any two terms which are provably equal (i.e. connected via a zig-zag of rewrites) have a common reduct.
We first collect some information on the connection between multistep rewrites in the total world and equality in the partial world:
Lemma 4.7 If t →∗ r then t = r|t.
Proof. This is clear for a basic rewrite: if t → r then t = r is an axiom. If we apply a substitution s/x to this, we get t[s/x] → r[s/x], where x necessarily occurs in t but not necessarily in r. Then we find t[s/x] = r[s/x]|s = r[s/x]|t[s/x]. Also, we may place this in context: if t = r then C[t] = C[r]. Therefore, the lemma is true for one-step rewrites.
Now if, by induction, we have t → s →∗ r, we know that t = s|t and s = r|s.
Thus
t = s|t = (r|s)|t = r|s,t = r|t.
2

Proposition 4.8 Let T admit a confluent rewriting presentation. Then, as a par- tial theory, T is unitary.
Proof. Suppose that T ▶ t|T = s|T . Then in the total world t = s, hence by confluence there is a term r such that t →∗ r and s →∗ r. By the lemma, this gives t = r|t and s = r|s. Thus we find
t|s = r|t,s = r|s,t = s|t,
which shows that s and t are compatible.	2
There is a useful strengthening of this result:
Proposition 4.9 If T is unitary and S is a set of purely restrictional axioms in the same language, then T ∪ S is again unitary.
Proof. There is a purely categorical proof of this fact, which makes use of a special type of congruence on a unitary category, but here we will give a simple syntactic argument.
Suppose T ∪ S ▶ t|T = s|T , where t, s are pure. Since the erasure of S is trivial, we get
Erase(T) = Erase(T ∪ S) ▶ t = s.
Hence T ▶ t|s = s|t, because it is a unitary theory. Thus trivially also T ∪ S ▶ t|s =
s|t.	2
Our main example of such a theory is partial combinatory logic; the pure axioms are well-known to admit a confluent rewrite system (see, e.g. [17]).

Application: completions
To illustrate why it may be useful to know that a theory is unitary, we consider the problem of completing a partial model. The following definition can be found, albeit not in this exact wording, in texts on partial algebras (e.g. [4]):
Definition 4.10 Let A be a model of a partial theory T in C = Par. A model B together with a morphism m : A → B is called a free completion of A when the following hold:
B is a total model
m is a lax, total homomorphism
m is a monomorphism
any lax, total homomorphism f : A → C where C is total factors uniquely through m.
There are two questions: first, when does the free completion of A exist? Second: how can we construct this completion? In the theory of partial algebras one employs a lengthy but straightforward syntactical construction, while in other cases (such as for PCAs) techniques from rewriting are the key to approaching this problem [2].

Example 4.11 Consider the following axioms in the language of groups: (xy)z = x(yz), x1 = x = 1x, xx−1 = 1|x−1 , x−1x = 1|x−1 . The models are partial groups. Then the set E = {e, 1} with e2 = e satisfies the axioms (the inverse is not defined at e), but clearly cannot be embedded into a group. Since the question whether a
given monoid embeds into a group is generally undecidable, we see that the problem of completability of partial algebras is undecidable as well.
We fix a theory T and a model A in Par. First we construct a new theory T[A], called the closed theory (or the atomic diagram) of A. This is done by adding to the signature constants a for each element a ∈ A. Then the axioms of T[A] are given by
all axioms of T
()|a = () for all a ∈ A
f (a1,..., ak) = a whenever f (a1,..., ak) = a holds in A
Note that the third clause also includes constants: if a constant c of T was inter- preted as an element cA ∈ A, then we have an axiom c = cA.
We may construct the classifying category of T[A], which fits into the diagram


C[T]¸
J zC[,T[A]]
(1)

¸¸¸¸
¸r, 
Par
The functor A : C[T] → Par selects the model A. The functor J is the canonical functor which sends the generic T-model to the generic T[A]-model. Since, trivially, A is a model of its own theory, we also have a cartesian functor from the classifying category C[T[A]] to Par sending the generic object to A. By construction, the diagram commutes on the nose. Moreover, the global sections of the generic T[A]- model are in one-one correspondence with the elements of A (again by construction). Thus the functor A : C[T[A]] → Par may be identified with the global sections functor. Thus, we have constructed a factorization of the functor A : C[T] → Par through a global sections functor, or, put differently, we have realized the model A as global sections of a generic model of the theory T[A]. In fact, one may show that this is the universal property of the closed theory of A:
Lemma 4.12 Given any category D, any cartesian functor F : C[T] → D and lax natural transformation α : A → ΓF, there is a unique functor F˜ : C[T[A]] → D for which F˜J = F.
Proof. First note that F corresponds to a T-model in D which we will denote by B, that ΓF gives a T-model Γ(B) in Par, and that α amounts to a lax homomorphism of T-models α : A → Γ(B). We show that B is canonically a model of T[A], so that F factors through C[Tc[A]]. For this, it suffices to show that the extra constants of T[A] can be interpreted in such a way that the new axioms are valid in B.
First, for every a ∈ A, the theory Tc[A] has a new constant a.  In B, this

constant will be interpreted as α(a) : 1 → H. Since α lands in global sections of B, this interpretation is indeed such that the axiom ()|a = () is valid in B.
Next, consider an axiom of the form f (a1,..., an) = b, where f (a1,..., an) = b in A. Since α is a lax homomorphism, this implies that f (α(a1),..., α(an)) = α(b) as global sections of B. Thus the axiom holds in B.
This shows that B is a model of the closed theory of A, and hence that F factors through J : C[T] → C[Tc[A]]. The uniqueness of F˜ is obvious from the fact that any two extensions of F have to agree on all atomic terms and on all maps in the image of J ; since these generate, we’re done.	2
From the above we may derive that the process of associating a closed theory to a model is functorial in the following sense:
Corollary 4.13 A lax total homomorphism α : A → B gives rise to a carte- sian functor C[Tα] : C[T[A]] → C[T[B]]. This assignment is in fact a functor Modl(T, Par) → CartRcatl, and this functor is a full embedding.
Proof. To define C[Tα], apply the previous lemma. This gives a (non-commutative) diagram
C[T [A]]  C[Tα] zC[,T [B]]
¸¸¸¸
¸¸¸	Γ
Γ	¸¸ ,  
Par
and hence we recover α as the unique natural transformation Γ → ΓC[Tα] as in Lemma 2.8.	2
We can now consider the question of free completions. We still consider a fixed model A of T. We have already seen that freely turning a category into a total one yields, in the case of C[T[A]], the universal functor
q : C[T[A]] → C[T[A]]/ ×
and that this functor is universal amongst functors into total categories. After taking global sections, this gives (again using Lemma 2.8), a lax homomorphism α : A → Aˆ, where Aˆ is the image of the generic model under the composite Γq. This homomorphism inherits the following universal property:
Proposition 4.14 Every T-model A possesses a universal lax homomorphism α : A → Aˆ to a total model, in that any lax homomorphism μ : A → B, where B is total, factors uniquely through α.
Proof. We have already indicated how to construct α. Given a lax homomorphism
μ : A → B into a total model, consider the composite
C[T[A]] C[Tμ] zC[,T[B]]	q' zC[,T[B]]/ ×
The quotient functor q' is not necessarily an equivalence, but because B is total, it induces the identity on global sections. Finally, the universal property of q gives a

unique factorization of q through the above composite, and this (using Lemma 2.8 once again) gives the desired homomorphism Aˆ → B.	2

However, the morphism A →
Aˆ need not be monic, and thus we obtain, in

general, not a free completion of A as defined in the beginning of this section. Therefore we need to understand when A → Aˆ is monic.
Theorem 4.15 The model A has a free completion if the closed theory T[A] of A
is unitary.

Proof. Proposition 4.14 shows that every model has a completion α : A →
Aˆ.

Thus we need only verify that α is injective if T[A] is unitary. But to say that α is injective (Lemma 2.9) is to say that q separates global elements, which certainly is the case if its domain is unitary.	2
In [2], it is proved that PCAs with unique head normal forms are completable. The proof given in loc. cit. goes as follows: given a PCA A, define a rewrite system which extends combinatory logic by adjoining constants a for a ∈ A, and by adding rewrite rules corresponding to the closed equations true in A. (Thus it is a rewrite presentation of the closed theory of A, but in the total world.) Then it is shown that if A has unique head normal forms, this rewrite system is confluent, and that the collection of normal forms assemble to form the desired completion. We now see how this fits into the conceptual picture of completions described in this section: for we know that if a total theory admits a confluent rewrite presentation, the corresponding partial theory is unitary. And if this theory is unitary, then by the above proposition a free completion must exist.
From the construction of the completion, one observes that α : A → Aˆ is monic if and only if t ∼ s ⇒ t = s for total elements t, s. Contrapositively, this means that different total elements can not be related via ∼. This in turn is equivalent to saying that there exists no subterminal object (restriction idempotent on the terminal object) which equalizes two different total elements. In Example 4.11, it is easy to see which subterminal spoils the fun: it is the domain of e−1, since

e|e
−1 = eee−1
−1
|e−1
= 1|e−1 .

The Generic PCA
In this section we outline some further results concerning partial combinatory logic and its classifying category. In particular, we investigate the global sections of the generic model. Some of the results rely on the fact that partial combinatory logic has a confluent rewriting presentation. The precise notion of rewriting system on partial terms, as well as an analysis of confluence and normalization in such systems is the subject of a forthcoming paper ([7]), but since some of the applications are closely related to the material presented here we have opted to present these here.
Suppose t is a term of partial combinatory logic, representing a morphism in the classifying category C[PCL]. To say that t represents a total map is to say that the equation x|t = x is provable (assuming that t is of basic type). Using the identities for manipulating restrictions, we may write the left hand side as x|t = x|t1,...,tk

where all of the ti are pure terms, i.e. terms of ordinary combinatory logic. When in addition t is closed, this reduces to:
()|t1,...,tk = ()

where all of the ti are closed terms of CL. The following result will appear in [7]:
Proposition 4.16 A closed equation of the form ()|t1,...,tk = () is provable in PCL if and only if each of the ti is strongly normalizing (in the sense of the standard rewriting presentation of combinatory logic).
Hence a closed term is provably total if, and only if, all of its pure subterms are strongly normalizing. Indeed, the intuition behind this result is that when a term t contains a subterm without a normal form, then because of the nature of equational reasoning between partial terms, one can never “lose” this term (in the total world, where the equation kAB = A may lose a non-normalizing subterm B, this phenomenon is described by the so-called Erasure Lemma, see [17]). In the other direction, the class of closed SN terms of combinatory logic are inductively described by: k and s are in this class, and whenever P, Q are in the class then so are kP, sP and sP Q. It is clear that in PCL, all such terms are provably total.
This leads to the following characterization of the global sections of the generic PCA:
Theorem 4.17 The PCA Γ(G) of global sections of the generic PCA is isomorphic to the PCA of strongly normalizing CL terms modulo provable equality.
The PCA of strongly normalizing CL terms is well-known: application is defined

by:
[t] • [s] = ⎧⎨ [ts]	if ts is SN
⎩ undefined otherwise.

Proof. It has already been shown in the previous lemma that global sections of G are precisely provable equality classes of closed SN terms. It remains to be shown that under this identification the PCA structure on ΓG corresponds with the one on the closed SN terms.
the combinators s and k are preserved because these are total elements, hence SN.
application is preserved, because in the generic PCA the term [t] • [s] is total if and only if [ts] is again strongly normalizing.
2

References
M. Beeson. Foundations of constructive mathematics. Springer Verlag, Berlin (1985).
I Bethke, J-W. Klop, and R. de Vrijer. Completing partial combinatory algebras with unique head- normal forms. In Logic in Computer Science, pp. 448–545. IEEE Computer Society Press (1996).

I. Bethke. Notes on partial combinatory algebras. Ph.D. thesis, Universiteit van Amsterdam (1988).
P. Burmeister. Partial algebras – an introductory survey. In: I. G. Rosenberg and G. Sabidussi, editors.
Algebras and orders, pages 1–70. NATO ASI series C. Kluwer Academic (1993).
J.R.B. Cockett and X. Guo. Stable meet semilattice fibrations and free restriction categories. Theory and Applications of Categories 16 307-341 (2007).
J.R.B. Cockett and P.J.W. Hofstra. Introduction to Turing categories. Annals of Pure and Applied Logic, 156(2-3):183-209 (2008).
J.R.B. Cockett and P.J.W. Hofstra. Rewriting systems on partial terms. In preparation.
J.R.B Cockett and S. Lack. Restriction categories I. Theoretical Computer Science, 270:223–259 (2002).
A. Corradini and F. Gadducci. A functorial semantics for multi-algebras and partial algebras, with applications to syntax. Theoretical Computer Science 286 (2), pp. 293–322 (2002).
P.-L. Curien and A. Obtulowitz. Partiality, cartesian closedness and toposes. Information and Computation 80 pp. 50–95 (1989).
S. Feferman. Logics for termination and correctness of functional programs. In: Logic from Computer Science, MSRI Publications 21, Springer Verlag, pp. 95–127 (1992).
E. Moggi. The partial lambda calculus. PhD thesis, Edinburgh University (1988).
E. Palmgren and S. Vickers. Partial Horn logic and cartesian categories. Annals of Pure and Applied Logic, 145(3):314–353 (2007).
E. Robinson and G. Rosolini. Categories of partial maps. Information and Computation 79 pp. 94–130 (1988).
L. Schr¨oder. Classifying categories for partial equational logic. in: R. Blute (ed.), Category Theory and Computer Science (CTCS02), vol. 69 of Electronic Notes in Theoretical Computer Science, Elsevier Science (2003).
D.S. Scott. Identity and existence in formal logic. In: Applications of sheaves, Lecture Notes in Mathematics 753, pp. 660–696 (1979).
Terese. Term rewriting systems, volume 55 of Cambridge Tracts in Theoretical Computer Science. Cambridge University Press (2003).
