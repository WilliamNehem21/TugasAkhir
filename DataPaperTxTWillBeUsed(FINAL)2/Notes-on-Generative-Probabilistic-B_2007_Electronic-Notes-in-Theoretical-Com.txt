Electronic Notes in Theoretical Computer Science 175 (2007) 77–88	
www.elsevier.com/locate/entcs

Notes on Generative Probabilistic Bisimulation
Simone Tini 1,2
Dipartimento di Scienze della Cultura, Politiche e dell’Informazione Universita` dell’Insubria
Via Carloni 78, 22100, Como, Italy

Abstract
In this notes we consider the model of Generative Probabilistic Transition Systems, and Baier and Her- manns’ notion of weak bisimulation defined over them. We prove that, if we consider any process algebra giving rise to a Probabilistic Transition System satisfying the condition of regularity and offering prefixing, interleaving, and guarded recursion, then the coarsest congruence that is contained in weak bisimulation is strong bisimulation.
Keywords: Process Algebras, Generative Probability, Behavioral Equivalences, Bisimulation, Weak Bisimulation, Congruence


Introduction
Probabilistic process algebras have been introduced in the literature (see, among the others, [1,2,3,7,10,11,12,16,18,21,31]) to develop techniques dealing with both functional and non-functional aspects of system behavior, such as performance and reliability. Models of probabilistic processes are classified in [18] into generative, reactive, and stratiﬁed. In the generative model, a single probability distribution is ascribed to all moves of a given process, independently of their action label. In the reactive model, the kind of action performed by a given process in chosen in a nondeterministic way, and a probability distribution is ascribed to all moves of that process labeled with that action. In the stratified model a given process has either probability moves, to which a single probability distribution is ascribed and that are associated with no action label, or a single action move, having an action label, thus implying a clear separation of action and probability. The model of Probabilistic

1 Author partially supported by PRIN Project “Analisi di sistemi di Riduzione mediante sistemi di Tran- sizione” (ART)
2 Email: simone.tini@uninsubria.it

1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2006.09.016

Automata [29] was introduced to capture both probability and the classical process algebraic notion of nondeterminism. Here, a state of an automaton can have several transitions that are chosen in a nondeterministic way, and each transition leads to a probabilistic distribution over action labeled moves. Usually, the model of [29] is known as the non-alternating model, in contraposition with the alternating model of [19], where there is a clear distinction between nondeterministic states, enabling transitions leading to a unique state and that are chosen in a nondeterministic way, and probabilistic states, enabling a unique transition leading to a probabilistic distribution over states.
Probabilistic transition systems (PTSs, for short), which extend classic labeled transition systems by some mechanism to represent probability, have been employed as a basic semantic model of probabilistic processes. Of course, several definitions of PTS have been introduced, taking into account of the probabilistic model consid- ered. In order to abstract away from irrelevant information on the way that proba- bilistic processes compute, several notions of probabilistic equivalence and preorder have been defined over the PTS models [2,8,9,11,12,19,20,22,23,25,30,32]. In order to fit a given equivalence into an axiomatic framework, it is required that it is a con- gruence with respect to all process algebra operations. Probabilistic bisimulation, which relates two processes iff their PTSs have the same probabilistic branching structure, and that was originally defined in [25] for the reactive model, enjoys the congruence property in the process algebras proposed in the papers mentioned above, and is one of the equivalence definitions most frequently employed.
In the nonprobabilistic case, weak bisimulation has been successfully proposed by Milner [26] as an equivalence relation that abstracts away from internal com- putation steps. A notion of weak bisimulation for the non-alternating model has been considered in [2,11,12,30]. Baier and Hermanns [5] formulated a notion of weak bisimulation inspired by [26] for the generative model. We refer to [5] for interesting motivations and results on probabilistic weak bisimulation.
In the nonprobabilistic setting, it is well known that weak bisimulation is not a congruence with respect to the operation of nondeterministic choice, which is offered by most of known process algebras. Due to the importance of having the congruence property, the coarsest congruence with respect to nondeterministic choice that is finer than weak bisimulation has been characterized, and called observational con- gruence by Milner [26]. Such a congruence is known also with the names of rooted τ-bisimulation [4] and rooted weak bisimulation [6]. Also in the non-alternating model, the coarsest congruence with respect to nondeterministic choice that is finer than weak bisimulation has been characterized [2,11,12].
Process algebras respecting the generative model do not offer any operation of nondeterministic choice. More precisely, these process algebras do not offer any operation introducing nondeterminism. However, in general, also in the generative model weak bisimulation is not a congruence. In fact, many process algebras offer a parametric version of interleaving operation, where the parameter determines the probability to move of each of the two composed processes, and we show by means of a simple example that weak bisimulation is not a congruence with respect to

this interleaving operation. Also the CCS-like parallel composition operation of [10,7] and the CSP-like parallel composition operation of [10] do not preserve weak bisimulation.
Our aim is then to study in the generative model the problem to give a char- acterization of the coarsest equivalence notion being finer than probabilistic weak bisimulation and being a congruence with respect to any reasonable kernel of oper- ations. To this purpose, we assume prefixing, interleaving, and guarded recursion as such a kernel of operations, since they are widely employed. We prove that, if we only consider process algebras giving rise to PTSs satisfying the regularity condition, then the congruence we aim to characterize is probabilistic bisimulation. In some sense, this result has negative consequences. In fact, in the nonprobabilistic case a lot of work has been done on congruences weaker than bisimulation and stronger than weak bisimulation [6,13,14,15,17], whereas in the generative case such a work cannot be repeated, since our result implies that there is no congruence strictly lying between bisimulation and weak bisimulation. Note that our result emphasizes also a difference between the generative and the non-alternating model, where the coarsest congruence contained in weak bisimulation is strictly coarsest than strong bisimulation. This difference depends on the fact that the parallel composition op- eration of the non-alternating model has no parameter, introduces nondeterminism, and can be treated as the classical interleaving operation of [26].

Probabilistic Bisimulations
Given any set S, let M(S) denote the set of all multisets over S. Let us employ “{|” and “|}” as brackets for multisets.
The following definition originates from [3,5,7].
Definition 2.1 A generative probabilistic transition system (GPTS, for short) is a triple (S, Act,T ), where S is a set of states, Act is a countable set of actions, and T ∈ M(S × Act × (0, 1] × S) is a multiset of transitions such that, for all states s ∈ S:
{| p | ∃α ∈ Act, s ∈ S : (s, α, p, s ) ∈ T |} ∈ {0, 1}
Def. 2.1 requires that each state s   is semistochastic, namely, the probabilities of its outgoing transitions, if there are any, sum up to 1. Let us recall that GPTSs considered in [18,31] have a weaker requirement, since they admit that, for each state s, the sum of the probabilities of its outgoing transitions, if there are any, is a value 0 q 1, the interpretation being that s deadlocks with probability 1 q. Results proved in the present paper hold also for the model of GPTS of [18,31], since they do not depend on any constraint on the probability of the transitions leaving from s.

Let s α,p  s'	'
α,p	'

−−→	denote that (s, α, p, s ) ∈ T , s −→ denote that s −−→ s
holds for

some α, p and s', and s /−→ denote that s α,p
s' holds for no α, p and s'.



3 Note that multisets are needed to handle the case where from a state s several transitions with the same label α and probability p lead to a state s'.

Let s =⇒ s' denote that s' is reachable from s, namely there exists a sequence

of transitions s
α0,p0
...s 
αn−1,pn−1
s
such that s
= s and s
= s'.

0 −−−→ 1	n−1 −−−−−−−→ n	0	n
In the following we assume the “regularity” condition, namely, for each state
s ∈ S there are only finitely many outgoing transitions s	s', and from s only
finitely many other states can be reached through any (po−s−s→ibly infinite) sequence
of transitions.
Let us recall the cumulative probability distribution function μG [18], which com- putes the total probability by which from a state s a state s' can be reached through transitions labeled with an action α. Adopting the convention that the empty sum of probability is 0, μG is defined as follows.
Definition 2.2 μG : S×Act×S → [0, 1] is the function given by: ∀s ∈ S, ∀α ∈ Act,
∀s' ∈ S:	Σ

μG(s, α, s') = 
α,p
{|p | s −−→
s' ∈ T |}

Function μG can be extended to sets of target states. ∀s ∈ S, ∀α ∈ Act, ∀S ⊆ S:
μG(s, α, S) = Σ μG(s, α, s')
s'∈S

Following [5], function μG can be extended to sequences of actions in Act∗. Let ϵ denote the empty sequence of actions. For each α Act and λ Act∗, let αλ denote the sequence in Act∗ obtained by prefixing λ with α.
Then, ∀s ∈ S, ∀α ∈ Act, ∀λ ∈ Act∗, ∀S ⊆ S:
μG(s, ϵ, S)=1 if s ∈ S μG(s, ϵ, S)=0 if s /∈ S
μG(s, αλ, S)=	μG(s, α, s') · μG(s', λ, S)
s'∈S
Finally, following [5] function μG can be extended to sets of sequences of actions in Act∗. Let Λ denote any subset of Act∗, and Λ/α denote the set {λ ∈ Act∗ | αλ ∈ Λ}.
Then, ∀s ∈ S, ∀Λ ⊆ Act∗, ∀S ⊆ S:
μG(s, Λ, S)=1 if ϵ ∈ Λ and s ∈ S

μG(s, Λ, S)=	Σ
(α,s')∈Act×S
μG(s, α, s') · μG(s', Λ/α, S) otherwise

We can recall now the notion of bisimulation for GPTSs [18]. For any equivalence relation R over the set of states S, let S/R denote the set of equivalence classes induced by R.
Definition 2.3 An equivalence relation R ⊆ S × S is a (strong) bisimulation if (s1, s2) ∈R implies: ∀C ∈ S/R, ∀α ∈ Act:
μG(s1, α,C) = μG(s2, α,C)

The union of all bisimulations is, in turn, a bisimulation, denoted by ∼. Relation
~ equates states having the same probabilistic branching structure.
Let us assume that Act contains the special silent action τ . We can recall now Baier and Hermanns’ notion of weak bisimulation for GPTSs [5]. Let us denote sets of sequences of actions in Act∗ with regular expressions.
Definition 2.4 An equivalence relation R ⊆ S × S is a weak bisimulation if (s1, s2) ∈R implies: ∀C ∈ S/R, ∀a ∈ Act \ {τ }:
μG(s1,τ∗aτ∗,C) = μG(s2,τ∗aτ∗,C) μG(s1,τ∗,C) = μG(s2,τ∗,C)
The union of all weak bisimulations is, in turn, a weak bisimulation, denoted by
≈. Relation ≈ is coarser than ∼, since it abstracts from silent computation steps.

Weak Bisimulation is not a Congruence
As usual, let us assume a process description language whose abstract syntax is given by a signature, consisting of a set of operation symbols Σ together with an arity mapping that assigns a natural ar(f ) to every f ∈ Σ.
For a set of variables Var ranged over by x, y, ... , the set of (open) terms over Σ and Var is the least set such that:
each variable x ∈ Var is a term;
f (t1,..., tar(f )) is a term whenever f ∈ Σ and t1,..., tar(f ) are terms.
Terms that do not contain variables in Var are called closed terms, or processes.
The semantics of the language is given by a GPTS, whose states are processes, and whose transitions are inferred by a set of SOS rules [27,28]. As usual, let us assume that Σ contains the operation symbol 0 (sometimes denoted nil) with ar(0) = 0, where 0 represents the idling process having no move.
Let us recall the notion of congruence.
Definition 3.1 An equivalence relation R over processes is called a congruence
iff, for each f ∈ Σ, if relation (ti, t' ) ∈ R holds for all 1 ≤ i ≤ ar(f ), then
(f (t1,..., tar(f )),f (t' ,..., t'	)) ∈ R.
Now, bisimulation is a congruence with respect to operations of well known process algebras used in the literature [1,3,7,10,16,18,21,24,31].
Let us consider the operation of probabilistic interleaving p of [3], whose se- mantics in SOS style is presented in Table 1. Intuitively, if both processes t1 and t2 can move, then the process t1 p t2 moves as t1 with probability p and as t2 with probability 1  p. If only t1 (resp. t2) can move, then t1 p t2 moves as t1 (resp. t2)
with probability 1.
By an example, we can show that weak bisimulation is not a congruence with respect to operation p.

x[recX. x/X] −−→ y

α ·
α,1
x −−→ x
recX. x α,p y

  x  /−→	x	α2,p2  y

x	p x
α2,p2
p y

x	α1,p1
α2,p2

1 −−−→ y1 x2 −→		x1 −→	x2 −−−→ y2	

x	p x
α1,p1·p
p x
x	p x
α2,p2·(1−p)
x	p y

1 	2 −−−−→ 1 	2


Table 1
1 	2 −−−−−−−→ 1 	2

Some probabilistic operations; x, x1, x2, y1, y2 are process variables, α, α1, α2 range over Act, p, p1, p2 are variables over the interval [0, 1], and X is a recursion variable.

Example 3.2 Let a  Act  τ , and t1 and t2 be the processes t1  τ  a  0 and t2  τ τ a 0, where is the prefixing operation described in Table 1. It is immediate that t1  t2, but, for each 0 < p < 1 and b  Act  a, τ , t1 p b 0  t2 p b 0. In fact, μG(t1 p b 0,τ∗aτ∗, 0  p b 0) = p2, whereas μG(t2 p b 0,τ∗aτ∗, 0 p b 0) = p3, and no other state weak bisimilar to 0 p b  0 is reachable from t1  p b  0 and t2 p b 0. Intuitively, to perform the a move before the b move by b 0, t1 has to win two competitions versus b 0, whereas t2 has to win three competitions, and the probability to win each of these competitions is p.
Notice that the arguments of Example 3.2 hold also if we replace the interleaving operation  p with the CCS-like parallel composition operation  p of [10,7], provided
that b /= a, or with the CSP-like parallel composition operation p of [10], provided
that the set of actions A contains neither a nor b.

Bisimulation is the Coarsest Congruence Contained in Weak Bisimulation
Let rec be the recursion operation defined in Table 1. We assume that the recursion variables always appear as guarded, according to the usual definition. In this section we prove that, if we consider any process algebra offering the operations of prefixing, recursion, and interleaving as in Table 1, then the coarsest congruence contained in weak bisimulation is bisimulation.
Let us introduce the notion of p-bisimulation. It can be viewed as a relation weaker than a bisimulation, in the sense that the probabilistic branching structure of processes is considered modulo the probability value p.
Definition 4.1 Given any 0 ≤ p ≤ 1, an equivalence relation Rp ⊆ S × S is a
p-bisimulation if (s1, s2) ∈ Rp implies: ∀C ∈ S/Rp, ∀α ∈ Act:
|μG(s1, α,C) − μG(s2, α,C)|≤ p μG(s1, α,C) = 0 iff μG(s2, α,C) = 0 
On one side, it is not guaranteed that the union of all p-bisimulations is a
p-bisimulation, and, therefore, p-bisimulations are less elegant than bisimulations

and weak bisimulations. On the other side, p-bisimulations permit to relate two processes when they differ only for probabilities smaller than a given bound p. However, we are not interested here in studying their theory, we simply use p- bisimulations in our proofs.
The following result is immediate.
Proposition 4.2 A p-bisimulation is also a q-bisimulation, for each q > p. A
0-bisimulation is a bisimulation.
Given a process t, let actions(t) denote the set of the actions appearing in the transition labels in the portion of GPTS rooted in t. The regularity condition over the GPTS ensures that actions(t) is a finite set.
Let us assume two processes t and t'. Since actions(t) and actions(t') are finite sets, and since Act is a countable set, we can take two actions b, c ∈ Act\(actions(t)∪ actions(t') ∪ {τ }). We can prove that, given arbitrary values 0 < p, q < 1, then, if relation (t  q recX. c · X)  p recX. b · X ≈ (t' q recX. c · X)  p recX. b · X holds, then there exists some (p · q)-bisimulation relating t and t'.
Lemma 4.3 Given arbitrary processes t, t', arbitrary values 0 < p, q < 1, and any pair of actions b, c ∈ Act \ ({τ}∪ actions(t) ∪ actions(t')), it holds that:
(t  q rec X. c · X)  p rec X. b · X ≈ (t' q rec X. c · X)  p rec X. b · X

implies
t ∼p·q t' for some (p · q)-bisimulation ∼p·q
Proof.
First of all let us prove the following lemma.
Lemma 4.4 For each pair of processes s ≈ s' such that s is reachable from (t  q rec X. c·X) p rec X. b·X and s' is reachable from (t' q rec X. c·X) p rec X. b·X, for each action α ∈ Act, and for each equivalence class C ∈ S/ ≈, it holds that
|μG(s, α, C) − μG(s', α,C)|≤ p2 · q2.
Proof. Let us note that s has the form (t1 q rec X. c X)  p rec X. b X and s' has the form (t2 q rec X. c X)  p rec X. b X, for some t1 and t2. We can distinguish four cases:
α = a, with a	Act	b, c, τ .
Let p1 and p2 be the values such that p1 = μG(s, a, C) and p2 = μG(s', a,C). We have to prove that p1		p2	p2 q2. The thesis is immediate if p1 = p2. If p1 = p2, then w.l.o.g. we can assume that p1 > p2. Now, p1 = μG(s, a, C) implies μG(s, τ∗aτ∗,C)	p1. Since s	s' we infer that μG(s',τ∗aτ∗,C)	p1. Since p1 > p2 = μG(s', a,C), we infer that μG(s',τ +aτ∗,C) + μG(s', aτ +,C) (p1	p2), where τ + denotes the set of all the sequences of n	1 τ -actions.
Since a = b and a = c, processes in C can be reached from s' by sequences
τ +aτ∗ and aτ + only through at least two moves by t2.  This implies that

μG(s',τ +aτ∗,C)+ μG(s', aτ +,C)  p2 q2. Summarizing, p2 q2  p1  p2, and the thesis is proved.
α = b.
Since b  actions(t) actions(t'), the only b move by s is due to rec X. b X and leads to s itself, and, analogously, the only b move by s' is due to rec X. b X and leads to s' itself. Hence, either C contains neither s nor s', and the thesis is immediate since μG(s, b, C) = 0 = μG(s', b,C), or C contains both s and s'.
Let us concentrate on the second case. Since t1 q recX. c X moves, it cannot
happen that the probability of the b-move by rec X. b X is 1, we are sure that this b move has probability 1	p, and, therefore, μG(s, b, C) = 1	p. For the same reason we infer that μG(s', b,C) = 1	p. Summarizing, μG(s, b, C) = μG(s', b,C), and the thesis is proved.
α = c.
Let p1 and p2 be the values such that p1 = μG(s, c, C) and p2 = μG(s', c,C). Since c actions(t) actions(t'), the only c move by s is due to rec X. c X and leads to s itself, and, analogously, the only c move by s' is due to rec X. c X and leads to s' itself. Hence, either C contains neither s nor s', and the thesis is immediate since μG(s, c, C) = 0 = μG(s', c,C), or C contains both s and s'. Let us concentrate on the second case. It holds that either p1 = p (1 q), if t1 has some move, or p1 = p, if t1 has no move. Moreover, either p2 = p (1  q), if t2 has some move, or p2 = p, if t2 has no move. Therefore, it suffices to prove that it cannot happen that t1 moves and t2 does not to infer that either p1 = p (1  q) = p2 or p1 = p = p2, which implies the thesis.
By contradiction, let us assume that t1 moves and t2 does not. Since t2 does
not move, s' has only one b move with probability 1  p and only one c move with probability p. Since s  s', we infer that s has only moves in b, c, τ , thus implying that t1 has τ moves. This implies that the overall probability of sequences τ∗bτ ∗ by s is strictly greater than 1 − p, which contradicts that
s ≈ s'.
α = τ .
First of all let us note that, since s  s', either C contains both s and s', or C contains neither s nor s'. If C contains neither s nor s', we can reason as in case (i).
Let us assume that C contains both s and s'. In this case, let p1 and p2 be the
values such that p1 = μG(s, τ, C) and p2 = μG(s', τ,C). We have to prove that p1  p2  p2 q2. The thesis is immediate if p1 = p2. If p1 = p2, then w.l.o.g. we can assume that p1 > p2. First of all let us note that, since each state sˆ

reachable from s or s' can perform the c move, it cannot happen that sˆ b,1
sˆ,

b,1−p	−→
and, therefore, we are sure that sˆ	sˆ. Since both s and the processes in C reachable through one τ move from s (with total probability p1) can perform b with probability 1 − p while remaining in C, it holds that μG(s, τ∗bτ ∗,C) ≥ (1 − p) + p1 · (1 − p).  Since s ≈ s', it holds that μG(s',τ∗bτ ∗,C) ≥ (1 − p) + p1 · (1 − p). Since states in C cannot perform b with probability 1, we

know that μ (s', b,C) = (1  p) and Σ	μ (s',τmbτ n,C) = p (1 p). Hence, Σ	μ (s',τmbτ n,C) (p p )(1 p). Moreover, we know that Σm+n≥2 μG(s',τmbτ n,C)  p2 q2 (1  p), since τmbτ n with m + n  2 requires at least two moves by t2 and one move from rec X. b X. Summarizing,
p2 q2 (1  p)   (p1  p2)  (1  p), which implies p2 q2  p1  p2, and the
thesis is proved.
 
Lemma 4.4 implies that there is a (p2 · q2)-bisimulation relating processes reach- able from (t q rec X. c · X) p rec X. b · X and (t' q rec X. c · X) p rec X. b · X and that contains the pair formed by (t  q rec X. c · X)  p rec X. b · X and (t' q rec X. c · X) p rec X. b · X. Let ∼p2·q2 denote such a (p2 · q2)-bisimulation.
Let us take any equivalence class C ∈ S/ ∼p2·q2 . We prove below that the set of processes Cˆ = {s such that (s q rec X. c · X) p rec X. b · X ∈ C} are an equivalence class of a (p · q)-bisimulation relating processes reachable from t and t'. Let ∼p·q denote such a (p · q)-bisimulation. Relations ∼p·q equates t and t', since (t q rec X. c · X) p rec X. b · X and (t' q rec X. c · X) p rec X. b · X are equated by ∼p2·q2 . The thesis follows from t ∼p·q t'.
Hence, it remains to prove that Cˆ ∈ S/ ∼p·q for some (p · q)-bisimulation ∼p·q. Given arbitrary processes t1, t2 ∈ Cˆ, any equivalence class Dˆ, and any action α ∈ actions(t1) ∪ actions(t2), the semantics of  p and  q implies that:
μG(t1, α, Dˆ) =  1  · μG((t1  q rec X. c · X)  p rec X. b · X, α, D),
μG(t2, α, Dˆ) =  1  · μG((t2 q rec X. c · X)  q rec X. b · X, α, D).
Since (t1 q rec X. c X) p rec X. b X  p2·q2 (t2 q rec X. c X) p rec X. b X, we are sure that μG((t1 q rec X. c X)  p rec X. b X, α, D)  μG((t2 q rec X. c X)  p rec X. b X), α, D)   p2 q2. Therefore, μG(t1, α, Dˆ)  μG(t2, α, Dˆ)   p  q, as
required.	 
At first glance, our choice of using a context with two occurrences of the in- terleaving operator in Lemma 4.3 could be surprising. One could expect that a context with only one of these occurrences suffices. The point is that the proof of Lemma 4.4 does not work if we consider the context  p recX. b X instead of ( q rec X. c X)  p rec X. b X. In fact, both in the proof of case α = b, and in the proof of the case α = τ , we exploit the fact that the probability of the b move by rec X. b X cannot be 1. This is implied by the fact that rec X. c X can perform the c move. Without process rec X. c X, the process on the left side of  p could be a process without any move, and the b move by rec X. b X could have probability 1.
Notice that Lemma 4.3 above holds also if we replace the interleaving operations

p and  q with the CCS-like parallel composition operations  p
and  q'
of [7,10],

provided that t and t', besides performing neither b nor c, perform neither b nor c. Moreover, Lemma 4.3 holds also if we replace  p and  q with the CSP-like parallel

composition operations  p
and  q
of [10], with A = ∅.


Let us prove now that processes related by p-bisimulations for all 0 < p < 1 are

strong bisimilar.
Lemma 4.5 Given processes t and t', if for each 0 < p < 1 there exists a p- bisimulation ∼p such that t ∼p t', then it holds that t ∼ t'.
Proof. Since the regularity condition ensures that the number of states reachable from t and t' is finite, there exists an equivalence relation R over the states reach- able from t and t' such that (t, t') ∈ R and such that, given any δ > 0, R is an ϵ-bisimulation for infinite many δ > ϵ > 0. We can prove that R is a strong bisimulation. By contradiction, let us assume that R is not a strong bisimulation. Then, there exists a pair of states (s, s') ∈ R, an action α ∈ Act, and an equiv- alence class C over R such that μG(s, α, C) /= μG(s', α,C).  Let d be the value
|μG(s, α, C) − μG(s', α,C)|. It follows that R is not an ϵ-bisimulation for any ϵ < d, which contradicts that R is an ϵ-bisimulation for infinite many d > ϵ > 0. Now, since R is a bisimulation and (t, t') ∈ R, the thesis holds.	 
We can give now our main result.
Theorem 4.6 Given arbitrary processes t and t', if for all 0 < p, q < 1 and actions
b, c ∈ Act\({τ}∪actions(t)∪actions(t')) it holds that (t  q rec X. c·X)  p rec X. b·X
≈ (t' q rec X. c · X) p rec X. b · X then it follows that t ∼ t'.
Proof. By Lemma 4.3, for each 0 < p, q < 1, it holds that t ∼p·q t' for some (p · q)-
p·q	< d <	p	q	d
d t'. Since t  d t' for all 0 < d < 1, we can apply Lemma 4.5 to infer t  t', and the proof is complete.	 
Let us assume that	is an equivalence relation over processes being a congruence
w.r.t interleaving, prefixing and recursion, and being finer than weak bisimulation (i.e. R ⊂ ≈). Given processes t and t' such that (t, t') ∈ R, since R is a congruence, we infer that, for all 0 < p, q < 1, ((t q rec X. c · X) p rec X. b · X, (t' q rec X. c · X) p rec X. b · X) ∈ R. Since R ⊂≈, we infer (t q rec X. c · X) p rec X. b · X ≈ (t' q rec X. c· X)  p rec X. b· X. Thm. 4.6 implies that t ∼ t'. Hence, R ⊆∼. Since
~ is a congruence w.r.t. interleaving, prefixing and recursion, we infer that ∼ is the coarsest congruence contained in ≈ that is a congruence w.r.t. these operations.

Conclusions
We have proved that, if one considers process algebras giving rise to GPTSs satisfy- ing the regularity condition and offering recursion, interleaving and prefixing, then strong bisimulation is the coarsest congruence contained in weak bisimulation. This differentiates the generative probabilistic model not only with respect to the non- probabilistic case, where interesting congruences strictly lying between strong and weak bisimulation have been studied [6,13,14,15,17], but also with respect to the non-alternating model, where the coarsest congruence being finer than weak bisim- ulation has been characterized and proved to be coarser than strong bisimulation [2,11,12].

Analogies between the nonprobabilistic and the non-alternating model arise since in the non-alternating model process algebras offer parallel composition operations and a nondeterministic choice operation having the same nature of those of non- probabilistic process algebras. To support this observation the fact that the ax- iomatization of the coarsest congruence being finer than weak bisimulation requires rules similar to Milner’s “expansion law” to manage parallel composition [12] and rules similar to Milner’s “τ -law” to manage τ prefixing [2,11,12].
In the generative model, no operation introducing nondeterminism is allowed. Therefore one cannot hope to treat parallel composition operations as in the non- probabilistic case. Asynchronous parallel composition operations require parame- ters specifying the probability to move of each of the processes running in parallel. These parametric operations do not preserve weak bisimulation, since they distin-
guish τm  t1 and τn  t1, when m = n. In fact, when we compose in parallel τm  t1
with another process t2, the τ actions of τm t1 imply that actions of t1 can be performed only after τm t1 has won m competitions versus t2 to perform the m occurrences of τ , and each of these competitions is not for free, meaning that the probability of winning it is not 1 but depend on the parameter of the operation. The ability of discriminating τm t1 and τn t1 has as a consequence that there is no congruence strictly lying between strong and weak bisimulation.
Checking whether our result holds also for GPTSs that do not satisfy the reg- ularity condition, and for transition systems respecting the reactive and stratified models of probabilistic processes could be interesting developments of the present notes.

References
A. Aldini, M. Bravetti, and R. Gorrieri: A Process-algebraic Approach for the Analysis of Probabilistic Non-interference. J. Comput. Secur. 12(2), 2004, 191–245.
E. Bandini and R. Segala: Axiomatizations for Probabilistic Bisimulation. Proc. Int. Coll. on Automata, Languages and Programming, Lecture Notes in Computer Science 2076, Springer, Berlin, 2001, 370–381.
J. C. M. Baeten, J. A. Bergstra, and S. A. Smolka: Axiomatizing Probabilistic Processes: ACP with Generative Probabilities. Inf. Comput. 121(2), 1995, 234–255.
J. C. M. Baeten and W. P. Weijland: Process Algebra. Cambridge Tracts in Theoretical Computer Science 18, Cambridge University Press, 1990.
C. Baier and H. Hermanns: Weak Bisimulation for Fully Probabilistic Processes. Proc. Int. Conf. on Computer Aided Verification, Lecture Notes in Computer Science 1254, Springer, Berlin, 1997, 119–130.
B. Bloom: Structural Operational Semantics for Weak Bisimulation. Theor. Comput. Sci. 146(1–2), 1995, 25–68.
M. Bravetti and A. Aldini: Discrete Time Generative-reactive Probabilistic Processes with Different Advancing Speeds. Theor. Comput. Sci. 290(1), 2003, 355–406.
I. Christoff: Testing Equivalences and Fully Abstract Models for Probabilistic Processes. Proc. Int. Conf. on Concurrency Theory, Lecture Notes in Computer Science 458, Springer, Berlin, 1990, 126–140.
R. Cleaveland, S. A. Smolka, and A. Zwarico: Testing Preorders for Probabilistic Processes. Proc. Int. Colloquium on Automata, Languages and Programming, Lecture Notes in Computer Science 623, Springer, Berlin, 1992, 708–719.
P. R. D’Argenio, H. Hermanns, and J. P. Katoen: On Generative Parallel Composition. Proc. Int. Work. on Probabilistic Methods in Verification, Electr. Notes Theor. Comput. Sci. 22, Elsevier, Amsterdam, 1999.


Y. Deng and C. Palamidessi: Axiomatizations for Probabilistic Finite-State Behaviors. Proc. Int. Conf. on Foundations of Software Science and Computational Structures, Lecture Notes in Computer Science 3441, Springer, Berlin, 2005, 110–124.
Y. Deng, C. Palamidessi, and J. Pang: Compositional Reasoning for Probabilistic Finite-State Behaviors. In Processes, Terms and Cycles: Steps on the Road to Infinity, Essays Dedicated to Jan Willem Klop, on the Occasion of His 60th Birthday, Lecture Notes in Computer Science 3838, Springer, Berlin, 2005, 309–337.
W. J. Fokkink: Rooted Branching Bisimulation as a Congruence. J. Comput. Syst. Sci. 60(1), 2000, 13–37.
W. J. Fokkink, R. J. van Glabbeek, and P. de Wind: Divide and Congruence Applied to Eta- bisimulation. Proc. Workshop on Structural Operational Semantics, Electr. Notes Theor. Comput. Sci. 156(1), Elsevier, Amsterdam, 2005, 97–113.
W. J. Fokkink, R. J. van Glabbeek, and P. de Wind: Divide and Congruence: From Decomposition of Modalities to Preservation of Branching Bisimulation. Proc. Int. Symp. on Formal Methods for Components and Objects, Lecture Notes in Computer Science 4111, Springer, Berlin, 2005.
A. Giacalone, C. C. Jou, and S. A. Smolka: Algebraic Reasoning for Probabilistic Concurrent Systems. Proc. IFIP Work. Conf. on Programming, Concepts and Methods, 1990, 443–458.
R. J. van Glabbeek: On Cool Congruence Formats for Weak Bisimulations. Proc. Int. Colloquium on Theoretical Aspects of Computing, Lecture Notes in Computer Science 3722, Springer, Berlin, 2005, 331–346.
R. J. van Glabbeek, S. A. Smolka, and B. Steffen: Reactive, Generative and Stratified Models of Probabilistic Processes. Inf. Comput. 121(1), 1995, 59–80.
H. Hansson and B. Jonsson: A Framework for Reasoning about Time and Reliability. Proc. IEEE Real-Time Systems Symposium, IEEE Press, 1989, 102-111.
B. Jonsson and K. G. Larsen: Specification and Refinement of Probabilistic Processes. Proc. IEEE Symp. on Logic in Computer Science, IEEE Press, 1991, 266–277.
B. Jonsson, K. G. Larsen, and W. Yi: Probabilistic Extensions of Process Algebras. Handbook of Process Algebra, Elsevier, Amsterdam, 2001.
B. Jonsson and W. Yi: Compositional Testing Preorders for Probabilistic Processes. Proc. IEEE Symp. on Logic in Computer Science, IEEE Press, 1995, 431–443.
C. C. Jou and S. A. Smolka: Equivalences, Congruences and Complete Axiomatizations for Probabilistic Processes. Proc. Int. Conf. on Concurrency Theory, Lecture Notes in Computer Science 458, Springer, Berlin, 1990, 367–383.
R. Lanotte and S. Tini: Probabilistic Congruence for Semistochastic Generative Processes. Proc. Int. Conf. on Foundations of Software Science and Computational Structures, Lecture Notes in Computer Science 3441, Springer, Berlin, 2005, 63–78.
K. G. Larsen and A. Skou: Bisimulation Trough Probabilistic Testing. Inf. Comput. 94(1), 1991, 1–28.
R. Milner: Communication and Concurrency. Prentice Hall, London, 1989.
G. Plotkin: A Structural Approach to Operational Semantics. Tech. Rep. DAIMI FN-19, University of Aarhus, 1981.
G. Plotkin: A Structural Approach to Operational Semantics. J. Log. Algebr. Program. 60–61, 2004, 17–139.
R. Segala: Modeling and Verification of Randomized Distributed Real-Time Systems. PhD Thesis, MIT, Technical Report MIT/LCS/TR-676, 1995.
R. Segala and N. Lynch: Probabilistic Simulations for Probabilistic Processes. Proc. Int. Conf. on Concurrency Theory, Lecture Notes in Computer Science 836, Springer, Berlin, 1994, 481–496.
E. W. Stark and S. A. Smolka: A Complete Axiom System for Finite-State Probabilistic Processes. In Proof, Language and Interaction: Essays in Honor of Robin Milner, G. Plotkin, C.P. Stirling, and M. Tofte, Eds., MIT Press, 1999.
S. Yuen, R. Cleaveland, Z. Dayar, and S. A. Smolka: Fully Abstract Characterizations of Testing Preorders for Probabilistic Processes. Proc. Int. Conf. on Concurrency Theory, Lecture Notes in Computer Science 863, Springer, Berlin, 1994, 497–512.
