Available online at www.sciencedirect.com



Electronic Notes in Theoretical Computer Science 275 (2011) 23–36
www.elsevier.com/locate/entcs

The Monte Carlo EM method for the parameter estimation of biological models
Alessio Angius1 Andr´as Horva´th2
Department of Computer Science, University of Torino, Torino, Italy

Abstract
It is often the case in modeling biological phenomena that the structure and the effect of the involved interactions are known but the rates of the interactions are neither known nor can easily be determined by experiments. This paper deals with the estimation of the rate parameters of reaction networks in a general and abstract context. In particular, we consider the case in which the phenomenon under study is stochastic and a continuous-time Markov chain (CTMC) is appropriate for its modeling. Further, we assume that the evolution of the system under study cannot be observed continuously but only at discrete sampling points between which a large amount of reactions can occur.
The parameter estimation of stochastic reaction networks is often performed by applying the principle of maximum likelihood. In this paper we describe how the Expectation-Maximisation (EM) method, which is a technique for maximum likelihood estimation in case of incomplete data, can be adopted to estimate kinetic rates of reaction networks. In particular, because of the huge state space of the underlying CTMC, it is convenient to use such a variant of the EM approach, namely the Monte Carlo EM (MCEM) method, which makes use of simulation for the analysis of the model. We show that in case of mass action kinetics the application of the MCEM method results in an efficient and surprisingly simple estimation procedure. We provide examples to illustrate the characteristics of the approach and show that it is applicable in case of systems of reactions involving several species.
Keywords: parameter estimation, mass action kinetics, maximum likelihood, expectation-maximisation method


Background
As described by Gillespie in [5] the temporal behaviour of a biochemical system can be described by a stochastic process, in particular, by a continuous time Markov chain (CTMC). In order to have a complete description of the CTMC model de- scribing the phenomenon under study and to be able to perform its analysis, the estimation of the kinetic rates is a ”conditio sine qua non”. In this context, the parameter estimation is essentially an optimisation problem which aims to find the set of parameter such that the model is able to reproduce the experimental obser- vations with high probability. The problem is not trivial for several reasons. The

1 Email: angius@di.unito.it
2 Email: horvath@di.unito.it

1571-0661 © 2011 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2011.09.003

studied phenomenon can be very complex with several reagents interacting through many reactions. Moreover, it is often unrealistic to consider the process as per- fectly and continuously observable. In particular, the measurement techniques are often unable to observe the system behaviour as a continuous process and provide observations of the system state only at a limited set of time instants. Moreover, consecutive time instants can be so far from each other that a considerable amount of reactions occur between them. This means that we have to face an optimisa- tion problem with incomplete data in hand. A method to maximum likelihood estimation in case of incomplete data, namely the Expectation-Maximisation (EM) method, has been presented by A. Dempster in [3]. The basic idea of EM method is to rebuild the missing data in expectation and apply optimisation to find param- eters that maximises the probability of the reconstructed complete data. It is often the case that the exact reconstruction of the missing data is a hard task. In these cases, as proposed by Wei and Tanner in [15], simulation can be used to complete the data and this approach is called the Monte Carlo EM (MCEM) method.
In this work we adopt the MCEM method to the estimation of kinetic rates in stochastic reaction networks. In particular, we consider stochastic reaction networks evolving according to mass action kinetics and show that the MCEM method leads to a simple and efficient estimation procedure.
Several works exist on estimating kinetic rates of reaction networks by apply- ing optimisation methods [10,4,12]. Most of these works however do not consider stochasticity but apply a deterministic view of the evolution of the phenomenon under study. In theory, it is possible to transform the rates obtained for the deter- ministic model into rates that can be used in a stochastic setting but, as it is pointed out in [11], this is not always possible. This observation led to attempts to give an estimate of the kinetic rates in accordance with the stochastic view introduced by [5]. Bayesian inference methods were used in [7,1], maximum likelihood methods were applied in [11,2,13]. The strength of our approach, with respect to the ones cited above, is that it works with limited information (i.e., it is possible to apply it with very infrequent observations between which thousands of reactions occur) and does not involve heavy optimisation tasks.
The paper is organised as follows. In the next section we provide the reference stochastic model. Then a brief introduction of the EM method in general is given. Subsequently, we describe the application of the MCEM method to the estimation of parameters of stochastic reaction networks. The last but one section is dedicated to the numerical illustration of the proposed approach. In the last section we draw the conclusions.

Considered model
We consider a continuous time Markov chain (CTMC) describing the interaction of M reagents through R reactions. The state of the system is given by a vector of M integers providing the quantity of the reagents. The effect of reaction i, 1 ≤ i ≤ R is described by a vector of M integers denoted by ei in such a way that if reaction

i occurs in state x then the next state is xj = x + ei. The transitions of the CTMC represent the reactions and their intensity depends on the state of the system. By fi(x) we denote the function providing the intensity of reaction i in state x. Throughout the paper we assume that the intensities are of the form


fi(x)= ki
jY=1
xj ai,j
(1)

where the constants ai,j provide the stoichiometry of the ith reaction with ai,j ∈ N and ki is the kinetic rate constant (i.e., it describes the speed of the interaction). Consequently, the model corresponds to mass action kinetics and the CTMC is exactly the one simulated by the classical algorithm of Gillespie [5].
As an example of the model consider the following system of reactions [6] which will be used among the numerical examples as well:
DNA	k1
off −→ DNAon,
k
on −→ DNAoff ,
DNA	k3
on −→ mRNA + DNAon.
The above set of reactions describes that DNA is switched on/off by polymerase binding/unbinding and polymerase bound (i.e., switched-on) DNA is transcribed into mRNA. Switch on is described by the first reaction transforming DNAoff to DNAon, switch off is described by the second reaction transforming DNAoff to DNAon and transcription is due to the third reaction which produces mRNA leav- ing the actual quantity of DNAon unchanged. As three reagents are involved, the state of the system is a triple x = |x1, x2, x3| describing the quantities of DNAoff , DNAon and mRNA, respectively. The vectors describing the effect of the three reactions are: e1 = | − 1, 1, 0|, e2 = |1, −1, 0| and e3 = |0, 0, 1|. The intensities associated with the reactions assuming mass action kinetics are: f1(x) = k1x1, f2(x) = k2x2 and f3(x) = k3x2. Based on the above description, the stochastic simulation of the system is a straightforward task.
EM method
The Expectation-Maximisation (EM) method is an algorithm for maximum like- lihood parameter estimation in case of incomplete data. The input of the EM algorithm is composed by a set of samples and a stochastic model characterised by a set of parameters denoted by λ.
The EM method is iterative, i.e., it starts from an initial guess of the set of parameters, λ0, and then improves it step by step in such a way that the behaviour provided by the model is more and more similar to the behaviour described by the samples. The set of parameters after i steps is denoted by λi. Each iteration is com- posed of two steps called, respectively, Expectation step (E-step) and Maximisation step (M-step).

The role of the E-step is to compute the missing information in expectation. Formally, denoting by Y the set of incomplete data, and by Z the complete data, the E-step computes the conditional expectation E[Z|Y, λi]. In the context of our problem, Y contains the samples at discrete time points and the E-step aims to calculate, given the current set of parameters in λi, the most typical full trajectory, Z, that goes through the observed samples given in Y .
The M-step is applied then to find a new set of parameters λi+1 such that the likelihood of the trajectory generated during the E-step is maximal. Once the new set of parameters λi+1 is found, it is used as the starting point for the next iteration.
In many situations, including the one considered in this paper, the strength of the EM method lies in the fact that finding such parameters that maximise the likelihood of the incomplete data is much harder than finding parameters that maximise the likelihood of the complete data. In other words, the optimisation required in the M-step is less burdensome than the original optimisation problem. In particular, in relation to the problem considered in this paper, the M-step is very simple in the case of mass action kinetics. In turn, in many cases, including ours, the E-step can be hard both from a theoretical and computational point of view.
For those cases in which the computations required by the E-step are partic- ularly complex, a variant of the EM method can be applied. In this variant, the exact computation of the conditional expectation in the E-step is substituted by simulation. This approach is known as the Monte Carlo EM (MCEM) method and it is particularly useful in situations when performing the E-step in an exact man- ner is either too time consuming or even unfeasible. For the problem considered in this paper, because of the huge state space of the involved CTMC, the only viable approach is provided by the MCEM method.
The convergence characteristics of the MCEM method are poorer than those of the EM method and the simulation can introduce fluctuations of the parameters. It is still possible however to prove that the convergence of the method is preserved if the number of iterations is high [15].
MCEM for biochemical systems
Problem formulation
We assume that we are given a network of reactions and experimental observations of quantities of the involved species at discrete time instants. The time instants of the observations will be denoted by t0 = 0, t1, t2,..., tN and the associated ob- servations by y0, y1,..., yN where yi is a vector of integers providing the state of the system at ti. (We consider here only a single sequence of observations but the extension to multiple observation sequences is straightforward.) We assume that all or some of the kinetic rates are not known, i.e., there are unknown constants in the functions fi(x) which provide the intensity of the reactions. The set of these unknown constants will be denoted by λ and we will write fi(x, λ) to make explicit the dependence of the intensities on the unknowns. Our aim is to give a maximum likelihood estimate for the unknown kinetic rates by the MCEM method. In the

following two subsections we describe the E-step and the M-step.


E-step
Given the set of samples and the current estimate of the parameters, the E-step aims to build the most probable full trajectory that goes through the observed states. This requires to find the most probable trajectory between each two consec- utive sample points. The E-step hence requires to find most likely random walks over CTMCs. This is possible in theory but, unfortunately, as in our context the considered CTMC almost always has a huge state space, it cannot be performed in an exact manner. As anticipated, in this situation the E-step can be solved by simulation which provides a good approximation of the most probable trajectory. Generating trajectories of a CTMC by simulation is straightforward.
As we are given N + 1 samples, we need N subtraces to connect the observation time instants. As the CTMC is huge and the current set of parameters can be far from the real set of parameters, it is very unlikely that a single simulation run arrives exactly (or even close) to the observed states. For this reason the E-step is composed by the following two phases.
Generation of traces. For each interval [ti, ti+1], 0 ≤ i ≤ N − 1, we generate K random walks of length ti+1 − ti starting from yi and choose the one that arrives closest in “distance” to yi+1. The concept of “distance” between the sample point and the last state of the random walk is expressed as the sum of the relative errors over the species.
Improvement of traces. In this phase we improve the subtraces by modi- fying them. We pick up randomly a reaction from the subtrace and check if it can be substituted by another reaction in such way that the subtrace arrives closer to the observed state. The substitution is accepted only if all the re- maining reactions are still possible. The times between consecutive reactions remain unchanged. The extent of the modification is determined by a param- eter ρ ∈ [0, 1] which defines the proportion of the reactions that we attempt to substitute.
The proportion defined by ρ has a delicate role in the estimation process. When the current estimate is far from the real parameters, a higher ρ is necessary in order to come up with reasonable subtraces and to have faster convergence of the estimation process. Instead, when the estimates are already good, a lower ρ (even ρ = 0) has to be used in order to not to alter too much the stochastic behaviour induced by the actual estimate.
In terms of complexity, the cost of the generation of random walks is linear in the number of reactions occurrences, and the storage of the best random walk is very cheap, since each subtrace can be uniquely identified by means of the seed of the pseudo-random number generator. For these reasons, the improve of the best trace represents the most expensive phase of the method, since each trial forces the

unroll and the check of the enabling of all subsequent reactions 3 . As a consequence, the implementation of this phase could be not trivial. A first hint could be the use of a preprocessing which after the random selection of the “candidates” for the substitution sorts them in order of occurrence. In this manner the whole trace can be unrolled just ones and for each attempt the number of checks becomes smaller and smaller. The second hint is to verify more than one reaction at a time and discard (without additional costs) all substitutions if the control is not satisfied. This solution could discard some valid substitutions but is more convenient in terms of computation time.

M-Step
In the M-step we have to find the next set of estimates, λi+1, that maximises the likelihood of the full trajectory generated in the E-step. The ith subtrace generated by the E-step, reconstructing the most probable trajectory between state yi−1 and state yi in the time interval [ti−1, ti], will be denoted by Si and it has the form


y	= s
ri,1,ui,1
ri,2,ui,2
ui,Hi



i−1


i,1
−→ si,2
−→ · · · −→ si,Hi −→ si,Hi

where Hi denotes the length of the ith subtrace and si,j, ri,j and ui,j are the states, the reactions and the sojourn times of the ith subtrace, respectively. We have that
Hi
ui,j = ti − ti−1.
j=1
The last arrow is without a reaction and this represents the fact that the process remains in state si,Hi for at least ui,Hi time units. The closer state si,Hi is to state yi the better the ith subtrace reflects the observed behaviour.
It follows from the theory of CTMCs that the likelihood of the ith subtrace, denoted by Li, can be calculated as


Hi−1
Li =
j=1

fri,j (si,j, λ)e


−f (si,j ,λ)ui,j
⎞
⎠ · e


−f (si,Hi ,λ)ui,H

i	(2)

where
R
f (x, λ)=	fk(x, λ)
k=1
is the sum of the intensities of the reactions in state x. The product in (2) gives the likelihood of the transitions of the ith subtrace while the last exponential term is the probability that the process does not leave state si,Hi for at least ui,Hi time

3 Note that the unroll of the trace is expensive almost as its generation.

units. The likelihood of all the subtraces is simply given by

N
L =	Li
i=1
and we have to find such λ that maximises this product.
In order to find the maximum of L, it is useful to take its logarithm in which products are transformed into sums as


ln(L)= 

Σi=1

ln(Li)= 

Σi=1
,Hi−1
⎝ j=1

ln(fri,j (si,j, λ)) −


Hi


j=1
f (si,j, λ)ui,j⎞ .	(3)
⎠

Naturally, the difficulty of finding the maximum of (3) depends on the functions fi(x, λ), 1 ≤ i ≤ R. As mentioned earlier, we consider the case in which the intensity of the reactions corresponds to mass action kinetics (1). Moreover, we assume that the stoichiometry of the reactions (described by ai,j, 1 ≤ i ≤ R, 1 ≤ j ≤ M ) is known which is the typical case in parameter estimation problems. Accordingly, the parameters to estimate are the kinetic rate constants, i.e., λ = {k1, ..., kR}. Without loss of generality, we focus our attention on finding such k1 that maximises
(3). Applying (1), the derivative of (3) with respect to k1 is
∂ ln(L)
=
∂k1

Σ ,HΣi−1
M
k=1
xk a1,k
Hi	 x	⎞

i=1 ⎝

j=1
I{ri,j is reaction 1}
k1
M
k=1
—
k
a1,k

j=1 k=1
a1,k
ui,j ⎠

where I is 1 if its argument is true and 0 otherwise. Denoting by fi,j the number of times reaction j occurs in the ith subtrace we have

∂ ln(L)
Σ , f


i,1
Hi	 x	⎞

∂k1
=
i=1
⎝ k1
—
j=1 k=1
a1,k
ui,j⎠ .	(4)

It is easy to check that the value of k1 with which (4) is 0 maximises L. Consequently, the estimate is
ΣN  fi,1

1	N
i=1
Hi	M
j=1	k=1
xk
a1,k
i,j

Accordingly, in case of mass action kinetics, the optimisation required in the M-step boils down to the explicit formula given in (5).
Handling other forms of fi(x, λ) is out of the scope of this paper. We only mention here that with general fi(x, λ) functions the optimisation required by the M-step can become more complex but even in this case it is possible to divide the optimisation problem into smaller subproblems. In order to show this, let us denote by νi the variables on which fi(x, λ) depends. It is reasonable to assume that the

sets νi, 1 ≤ i ≤ R, are mutually disjoint. In this case the derivative of the log- likelihood function (given in (3)) according to a variable belonging to νi does not depend on the variables belonging to the other sets νj,j /= i. This means that the original optimisation problem that involves all the variables can be tackled by R smaller optimisation problems of much smaller dimensions.
Illustrative numerical examples
In this section we show numerical results obtained using the MCEM method. We apply the method to two models. For both cases, the samples are generated ”in silico” by means of simulations. In these tests we put aside the biological meaning of the models and our aim is to illustrate the method and to show that it is able to reconstruct the set of parameters. For all the cases we provide tables to compare the original values and their estimates. Moreover, in order to provide a visual comparison of the behaviours with the original and the estimated values, we provide in figures the evolution of the systems according both to the corresponding ordinary differential equations (ODEs) and to the corresponding stochastic setting. The ODEs are useful to get a quick glimpse of the goodness of the estimates that were obtained in the stochastic setting.
The MCEM method has been implemented in a prototype JAVA tool. All the experiments have been performed on a Intel Centrino Dual Core with 4Gb of RAM.
Gene transcription model
Our first example is the model already introduced in Section 2 describing binding and unbinding of the DNA and its transcription into mRNA [6]. We assume to have a single unit of DNA and the initial condition is [DNAoff ] = 1 and [DNAon] = [mRNA]= 0.
In order to evaluate the method in different situations, we use the model with dif- ferent levels of “granularity”, i.e., we use different levels of discretizations to obtain discrete models from the originally continuous concentrations. The discretization step will be denoted by h. The initial state of the CTMC modeling the three reac- tions is |1/h, 0, 0|. For the sake of having models that evolve on the same time scale independently of h, the kinetic rate constants have to depend on h. Specifically, the intensity of the reactions are k1h, k2h and k3h with k1 = 0.027, k2 = 0.166 and k3 = 0.4. The effect of h is twofold: the smaller h the larger the state space and the less variable the behaviour of the model. Indeed, as h tends to 0, the behaviour of the model tends to the solution of the corresponding ODEs [8,14].
We have generated “in silico” samples in such a way that between consecutive sampling points there are about 25000 reactions. The number of the samples is 25. This means that only a small fraction of what happens in the model is available to the estimation procedure.
The E-step was performed with K = 20, i.e., 20 traces were generated in the first phase of the E-step. In the second phase the parameter ρ plays a crucial role. It is convenient to start with a high value of ρ and then to lower it gradually as the

estimates become more reliable. We chose to start with ρ = 0.4 and to decrease it as the generated traces get closer to the observations.
Table 1 reports the original parameters and those obtained by the MCEM ap- proach after 100 iterations computed in about a second of CPU time. The initial guess of the parameters was random in the range [0:10]. A possible observation about the results could be that some estimations of k1 and k2 are far from the orig- inal values. This is caused by the fact that the low number of infrequent discrete samples reflect the ratio k1/(k1 + k2) ×k3 (determining the increase of mRNA) and, to some extent, the ratio k1/(k1 + k2) (determining the quantity of DNAon) but not the value of parameters. More samples with higher sampling frequency could however alleviate this problem. It can also be observed that with finer discretiza- tion the results are more accurate. A way of illustrating all the cases on the same figure is to apply the results in the ODEs representing the model. This is depicted in Figure 1. It can be seen that all cases catch well the asymptotic increase rate of mRNA and with h = 0.001 the estimates reproduce well the original model. The ODEs could not provide an accurate representation of the CTMC trajectories, for this reason we took in consideration also the stochastic setting. Figures 2 depicts the mean and the variance of the 100.000 simulation traces. As last observation, it is important to point out that by using smaller values of h the method gets better.

Table 1
Results of the parameter estimation for the gene transcription model


DFG degradation pathway
In order to test the method with a higher number of variables we use a model which describes the control of the N-(deoxy-D-fructos-1-y1)-glycine (DFG) degra- dation pathway [9]. The model can be found in the database available on the site www.sbml.org. It involves 14 reagents interacting through 16 reactions with mass action kinetics (the reactions are reported in Table 2). The original ODE model was transformed into a CTMC with discretization step h = 0.0001 and started with initial concentration [DFG] = 9 and quantity 0 for all other reagents. Note that this choice of h leads to a CTMC with huge state space. The samples contained 20 observations with about 10000 reactions between consecutive samples. The E-step was performed with K = 20 and ρ started from 0.2 and decreased throughout the calculations. The results are given in Table 3. It can be seen that the method gives good estimate for almost all the involved parameters. Figure 5 depicts the evolu- tion of some of the reagents of the model according to the corresponding system of ODEs with the original and the estimated parameters. The stochastic setting is depicted in Figure 4 where in honor of synthesis we report the variance only. For


1	0.35

0.95	0.3

0.9	0.25

0.85	0.2


0.8

0.75

0.7

0.65









0	2	4	6	8	10

0.6

0.5

0.15

0.1

0.05

0



Original
h=1 h=0.1 h=0.01
h =0.001
0	2	4	6	8	10


0.4

0.3

0.2

0.1

0
0	2	4	6	8	10

Fig. 1. Gene transcription model: ODE computed with the original parameters and the estimates for different values of h (DNAoff on the left, DNAon on the right and mRNA below).

most species there is a good correspondence between the original behaviour and the one provided by the estimate. In Figure 3 we depict instead the likelihood with which the estimates reproduce the original “in silico” generated trace. After 350 interactions the likelihood with the estimates is very close to the likelihood with the original parameters.

Table 2
Reactions of the DFG degradation pathway

Table 3
Result of parameter estimation for the DFG degradation pathway


1	0.25


0.95

0.9

0.85

0.8

0.75

0.7

0.65
















0	2	4	6	8	10


0.2


0.15


0.1


0.05


0
















0	2	4	6	8	10


0.35	0.25


0.3

0.25

0.2

0.15

0.1

0.05

0
















0	2	4	6	8	10


0.2


0.15


0.1


0.05


0
















0	2	4	6	8	10


0.6

0.5

0.4

0.3

1
0.9
0.8
0.7
0.6
0.5
0.4


Fig. 2. Gene transcription model: The average (left) and the variance (right) of the quantity of Dnaoff ,
Dnaon, mRna computed with original parameters and the estimates for different values of h.


-250000
-300000
-350000
-400000
-450000
-500000
-550000
-600000
-650000
-700000
-750000


0	50	100  150  200  250  300  350


Fig. 3. DFG degradation pathway: likelihood with estimates as function of the number of iterations



2.5


2


1.5


1


0.5


0















Original AA Result AA
0	20	40	60	80	100
1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

0


0	20	40	60	80	100


2.5


2


1.5


1


0.5


0


0	20	40	60	80	100

0.5
0.45
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0















Original Glu Result Glu
0	20	40	60	80	100


2.5


2


1.5


1


0.5


0















Original Gly Result Gly
0	20	40	60	80	100

1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

0















Original Mel Result Mel
0	20	40	60	80	100


1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

0















Original MG Result MG
0	20	40	60	80	100

Fig. 4. The variance of some of the reagents involved in the DFG degradation pathway

Conclusions
In this work we adopted the MCEM method to the estimation of kinetic rates in stochastic reaction networks. We have shown that the resulting technique is efficient and leads to surprisingly simple calculations in the case of mass action kinetics. The strength of the proposed approach is that it can be applied even with a limited set



9
8
7
6
5
4
3
2
1
0
0	20	40	60	80	100
0.14

0.12

0.1

0.08

0.06

0.04

0.02

0


0	20	40	60	80	100


0.45
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0


0	20	40	60	80	100

0.5
0.45
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0















Original Glu Result Glu
0	20	40	60	80	100


0.35	0.25


0.3

0.25

0.2

0.15

0.1

0.05

0













Original Gly Result Gly
0	20	40	60	80	100


0.2


0.15


0.1


0.05


0













Original Mel Result Mel
0	20	40	60	80	100


2
1.8
1.6
1.4
1.2
1
0.8
0.6
0.4
0.2
0















Original MG Result MG
0	20	40	60	80	100

Fig. 5. ODEs of some of the reagents involved in the DFG degradation pathway
of observations of the modeled phenomenon. Several numerical examples have been provided to illustrate the computational characteristics of the method.

References
Boys, R. J., D. J. Wilkinson and T. B. L. Kirkwood, Bayesian inference for a discretely observed stochastic kinetic model,, Statistics and Computing 18 (2008), pp. 125–135.
Burrows, R., G. Warnes and R. Choudary Hanumara, Statistical modeling of biochemical pathways, Technical Report 06/11, Dept. of Biostatistics and Computational Biology, University of Rochester (2006).
Dempster, A. P., N. M. Laird and D. B. Rubin, Maximum likelihood from incomplete data via the em algorithm, JOURNAL OF THE ROYAL STATISTICAL SOCIETY, SERIES B 39 (1977), pp. 1–38.
Gadkar, K. G., R. Gunawan and F. J. Doyle 3rd, Iterative approach to model identification of biological networks, BMC Bioinformatics 6 (2005).
Gillespie, D. T., Exact stochastic simulation of coupled chemical reactions, J. Phys. Chem. 81 (1977),
pp. 2340–2361.
Golding, I., J. Paulsson, S. M. Zawilski and E. C. Cox, Real-time kinetics of gene activity in individual bacteria, Cell 123 (2005), pp. 1025–1036.
Golightly, A. and D. Wilkinson, Bayesian inference for stochastic kinetic models using a diffusion approximation, Biometrics 61 (2005), pp. 781–788.
Kurtz, T. G., Solutions of ordinary differential equations as limits of pure jump Markov processes, Journal of Applied Probability 1 (1970), pp. 49–58.
Martins, S. I., A. T. Martinus and M. A. V. Boekel, Kinetic modelling of amadori n-(1-deoxy–fructos-1- yl)-glycine degradation pathways. part ii–kinetic analysis, Carbohydrate Research 338 (2003), pp. 1665– 1678.
Moles, C., P. Mendes and J. Banga, Parameter estimation in biochemical pathways: a comparison of global optimization methods, Genome Res. 13 (2003), pp. 2467–2474.
Reinker, S., R. Altman and J. Timmer, Parameter estimation in stochastic chemical reactions, IEEE Proceedings Systems Biology 153 (2006), pp. 168–178.
Sugimoto, M., S. Kikuchi and M. Tomita, Reverse engineering of biochemical equations from time- course data by means of genetic programming, Biosystems 80 (2005), pp. 155–164.
Tian, T., S. Xu, J. Gao and K. Burrage, Simulated maximum likelihood method for estimating kinetic rates in gene expression, Bioinformatics 23 (2007), pp. 84–91.
Tribastone, M., “Scalable Analysis of Stochastic Process Algebra Models,” Ph.D. thesis, School of Informatics, University of Edinburgh (2010).
Wei, G. C. G. and M. A. Tanner, A monte carlo implementation of the em algorithm and the poor man’s data augmentation algorithms, Journal of the American Statistical Association 85 (1990), pp. 699–704.
