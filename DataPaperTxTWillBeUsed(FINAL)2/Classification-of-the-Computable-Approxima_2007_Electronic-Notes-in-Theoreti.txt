	Electronic Notes in Theoretical Computer Science 167 (2007) 325–344	
www.elsevier.com/locate/entcs

Classification of the Computable Approximations by Divergence Boundings1
Xizhong Zheng2
Department of Computer Science, Jiangsu University Zhenjiang 212013, P.R.China.
Theoretische Informatik, BTU Cottbus D-03044 Cottbus, Germany

Abstract
A real number is called computably approximable if there is a computable sequence of rational numbers which converges to it. To investigate the complexity of computably approximable real numbers, we can consider the converging speed of the sequences. In this paper we introduce a natu- ral way to measure the converging speed by counting the jumps of certain size appeared after certain stages. The number of this big jumps can be bounded by a bounding function. For different choice of bounding functions, we introduce various classes of real numbers with different approximation quality and discuss their mathematical properties as well as computability theoretical properties.
Keywords: Computable real number; Computable approximation; Converging speed; Hierarchy.


Introduction
The real numbers can be represented in a lot of different ways. For exam- ple, they can be represented by Cauchy sequences, by decimal expansions, by binary expansions, or by Dedekind cuts, etc. For mathematics, all these representations are equivalent because they deduce the same real structure (so-called Dedekind-complete ordered field). However, if we are interested in the computability of real numbers and real functions, the choice of the rep- resentations of real numbers does play an important role. The first definition

1 This work is supported by DFG (446 CHV 113/240/0-1) and NSFC (10420130638).
2  Email: zheng@informatik.tu-cottbus.de





1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2006.08.019

of computable real numbers of Turing [10] is base on the decimal expansion. As it is pointed out by Robinson [8], Myhill [6], Rice [7] and others, all clas- sical representations of real numbers lead to the same computability notion of real numbers as Turing’s. However, the situation is completely different for the computability of real functions. For example, the addition function is computable as we expected with respect to the Cauchy representation. But it is not computable with respect to the decimal representation (see Weihrauch [11]).
Actually, as it is shown in [11], the Cauchy representation leads to the most natural notion of computability to the real space and is regarded as the standard representation of real numbers for the computable analysis. Thus, a real number is called computable if it has a computable Cauchy representation. Here a Cauchy representation of a real number x is a sequence (xs) of rational numbers which converges to x effectively in the sense that
(∀n ∈ N)(∀s, t ≥ n)(|xs − xt|≤ 2−n),	(1)
and a sequence (xs) of rational numbers is computable means that there are three computable functions a, b, c : N → N such that xs = (a(s)−b(s))/(c(s)+
1) for all s. A (possibly partial) real function f :⊆ R → R is called com- putable if there is an effective procedure (so-called Type-2 Turing machine) which transfers any Cauchy representation of any x ∈ dom(f ) to a Cauchy representation of f (x).
The computability of real numbers based on the Cauchy representation can be defined in several equivalent ways. For example, x is computable if and only if there is a computable sequence (xs) of rational numbers such that
(∀n ∈ N)(|x − xn|≤ 2−n).	(2)
The conditions (1) and (2) are equivalent in the sense that, given a sequence satisfying one condition, we can effectively construct a new sequence with the same limit which satisfies the other one. We prefer to use condition (1) because it does not include the limit x directly. However, condition (2) shows more clearly the essence of the computability of a real number x. Namely, given any error bound, say 2−n, we can effectively find a rational approximation xn to x within this error bound. According to this principle, computable real numbers can be defined equivalently in a more general way: a real number x is computable if and only if there is a computable sequence (xs) of rational numbers and two computable functions e, d : N → N such that d is unbounded
and
(∀n ∈ N)(∀s, t ≥ e(n))  |x − x |≤  1   .	(3)
In this case, the functions e and d are called modulus function and distance

function of the sequence (xs), respectively.
Without conditions (1), (2), (3) or other equivalent one, the limit x is called computably approximable. As it is shown by Specker [9], not every com- putably approximable real number is computable. If x is not computable, then for any computable sequence (xs) of rational numbers which converges to x, there would be some exceptions of index-pair (s, t) to (3). The number of such exceptions depends on n and it can be represented by a function. This function describes the converging quality and is called the (e, d)-divergence degree of the sequence. The divergence degree is a natural measurement of the complexity of the limit x. If the (e, d)-divergence degree is bounded by a function f , then x is called (f, e, d)-effectively computable. We will see that, the modulus function e does not really play a role in this definition and therefore we can fix the modulus function e to be the identity function id(n)= n. The (f, id, d)-effectively computable real numbers are simply called (f, d)-effectively computable. Furthermore, for any computable distance func- tion d, the (f, d)-effective computability can be reduced to (g, ep)-effective computability for the exponential function ep(n) = 2n and a new bounding function g. The (f, ep)-effectively computable real numbers are called simply f -effectively computable. For a class C of functions, we call a real number C-effectively computable if it is f -effectively computable for some function f in C.
In this paper we investigate the properties of f -effectively computable real numbers for different functions f . Especially, we will prove a Ershov-style hierarchy theorem for the constant functions f and a general hierarchy theorem for computable functions f which asserts that if the computable functions f and g differ at infinitely many places, then the f -effective computability is different from the g-effective computability. In addition, for very natural classes C of functions, we show that the classes of C-effectively computable real numbers are closed under the arithmetical operations and hence are fields. The f -effective computability introduced in this paper is actually an im- proved version of the f -Cauchy computability in [13] and the f -bounded com- putability in [12]. The difference among them is the definition of big jumps which should be counted. Different from the f -effective computability, the f - Cauchy computability counts the jumps of size between 2−n and 2−n+1 which appear after stage n while all jumps bigger than 2−n will be considered by f - bounded computability. It has been shown that, the f -Cauchy computability has a very nice hierarchy theorem. But the real number classes defined by f -Cauchy computability usually do not have good mathematical properties. For example, the class of all f -Cauchy computable real numbers for constant functions f is not closed under addition.	On the other hand, the classes

of real numbers deduced from f -bounded computability have better mathe- matical properties. However there does not have an Ershov-style hierarchy for f -bounded computability although there is a general hierarchy theorem that, the f -bounded computability is different from g-bounded computabil- ity if the functions f and g have an unbounded distance. Also the class of computable real numbers cannot be described by f -bounded computability. The f -effectively computability introduced in this paper shares the advantages of both f -Cauchy computability and f -bounded computability. Therefore, it provides a more natural way to approach the complexity of computably ap- proximable real numbers.
This paper is organized as follows. In the section 2 we define three differ- ent versions of effective computability by bounding the divergence degree and discuss the possible reductions among them. Section 3 discusses the classes of f -effective real numbers for constant functions f and prove an Ershov hierar- chy theorem. Section 4 investigates the classes of f -effectively computable real numbers and prove a general hierarchy theorem. Finally, we consider the C- effective computability in the section 5 and show that, the class of C-effective computable real numbers is a field if C contains all constant functions and is closed under composition.

The Definition of f -Effective Computability
In this section we will give the precise definitions of the main notions discussed in this paper. At firs the most general notion of (f, e, d)-effective computability is defined. Then we explain, how this notion can be reduced to a simpler notion of f -effective computability in two steps. Therefore, it suffices to investigate only the f -effective computability later on.
Our goal is to classify the computably approximable real numbers accord- ing to how fast they can be approximated. To measure the converging speed of a sequence we consider the number of “big” jumps which are beyond an effective bound.
Recall that, a real number x is computable if it can be effectively approxi- mated with an effective error estimation and we denote by EC the class of all computable real numbers. Thus, given any error ε > 0, we can find effectively an approximation xs of x within this error bound, i.e., |x − xs| ≤ ε. The effective approximation of x is usually given by a computable sequence (xs) of rational numbers which converges to x. Thus, the computability of x demands in fact an effective bound e such that there is no s ≥ e with |x − xs| > ε, or equivalently, there is no s, t ≥ e with |xs − xt| > ε. The pairs (s, t) after e such that |xs − xt| > ε are the loveless “big jump” which can destroy the

computability of x. The more such big jumps a computable sequence has, the less computability its limit may have. In order to describe the dependence of the bound e to the error ε more precisely, the error will be given by 1/d(n) for an unbounded function d : N → N and a natural number n. Then the bound is dependent actually on n and can be characterized as a function e : N → N. The functions d and e are called distance function and modulus function, re- spectively. For any sequence (xs), the number of non-overlapping big jumps (of size lager than 1/d(n)) after stage e(n) is denoted by v(n). The function v is called the divergence degree (with respect to e and d) of the sequence (xs). The functions v, e and d supply the most important information about how effectively a real number can be approximated. This leads to our first definition.
Definition 2.1 Let f, e, d : N → N be functions.
The (e, d)-divergence degree of a sequence (xs) is the function v such that
v(n) equals the number of the non-overlapping index-pairs (s, t) such that
s, t ≥ e(n) &  |x − x | >  1   .	(4)

A computable sequence (xs) converges (f, e, d)-effectively to x if the (e, d)- divergence degree v of (xs) is bounded by f .
A real number x is (f, e, d)-effectively computable ((f, e, d)-ec, for short) if there is a computable sequence (xs) of rational numbers which con- verges (f, e, d)-effectively to x. The class of all (f, e, d)-ec real numbers is denoted by (f, e, d)-EC.
Normally, a function v is bounded by another function f means that v(n) ≤ f (n) for all n. However, for the definition 2.1.(ii) and the defini- tions later on, it suffices to require that the divergence degree v is bounded by f almost everywhere, i.e., v(n) ≤ f (n) holds for almost all n. The reason is, if the divergence degree v of a computable sequence is bounded by f almost everywhere, then there obviously exits a new computable sequence with the same limit whose divergence degree is bounded by f (completely). Therefore we do not distinguish these two cases explicitly in this paper.
It is very natural to consider only the unbounded distance function d. Oth- erwise, support tath d(n) ≤ N for all n. Then, for any computable converging

sequence (xs), we can define a new computable sequence (x' ) by x' := xN
for

s	s	1

all s ≤ N1 and x'
:= xs for s > N1, where N1 is the minimal natural number n

such that (∀s, t ≥ n)(|xs − xt|≤ 1/N ). This sequence (x' ) converges (0, e, d)-
effectively for any modulus function e. Thus, a bounded distance function is

meaningless. Besides, we consider also only the unbounded modulus function
e because a bounded modulus function does not make much sense.
Another natural restriction to the modulus and distance function is that they should be nondecreasing. Thus, we consider only the unbounded nonde- creasing modulus function e and distance function d in this paper. Even un- der this restriction, an (e, d)-divergence degree v can still be a non-monotonic function. However, because we are interested only in the bounding function f which bounds the function v, we assume also that the function f is also nonde- creasing when we discuss the (f, e, d)-effective computability of real numbers.
Lemma 2.2 Let f, e, d : N → N be non-decreasing functions such that e, d are unbounded. If e is computable, then a real number is (f, e, d)-effectively computable iff it is (f, id, d)-effectively computable for id(n)= n.
Proof. Let x be an (f, e, d, )-effective computable real number. Then there is a computable sequence (xs) of rational numbers which converges (f, e, d)-

effectively to x. Obviously, the computable sequence (x' ) defined by x'
:= xe(s)

s	s
converges (f, id, d)-effectively to x.
On the other hand, suppose that (xs) is a computable sequence of rational numbers which converges (f, id, d)-effectively to x. Let e be a computable nondecreasing unbounded function. Define an increasing computable sequence (vs) of natural numbers inductively by v0 := 0 and vn+1 := (μt > vn)(e(t) > e(vn)). Then we have e(vn) = e(s) for any n and vn ≤ s < vn+1. Define
a computable sequence (x' ) of rational numbers by x' := xe(v ) if vn ≤ s < 
s	s	n
vn+1. Thus the sequence (x' ) converges (f, e, d)-effectively to x and hence x
is (f, e, d)-effectively computable.	 
The Lemma 2.2 shows that, for any unbounded nondecreasing computable function e, all the classes of (f, e, d)-effectively computable real numbers are the same. In other words, for the (f, e, d)-effective computability, only the computability of the modulus function e, not the increasing speed of e, plays a role. For this reason, we have the following definition.
Definition 2.3 Let f, d : N → N be any functions.
A sequence (xs) converges (f, d)-effectively to x if, for any n, there are at most f (n) pairs of non-overlapping indices s, t such that
s, t ≥ n &  |x − x | >  1   .	(5)

A real x is (f, d)-effectively computable ((f, d)-ec, for short) if there is a computable sequence (xs) of rational numbers which converges (f, d)- effectively to x. The class of all (f, d)-ec real numbers is denoted by

(f, d)-EC.
Thus, a real number x is (f, d)-effectively computable if and only if it is (f, id, d)-effectively computable. In this case, the function d determines the size of the “big jumps” and the function f bounds the number of such big jumps. The functions f and d together reveal the information of the com- plexity of an (f, d)-effectively computable real number. Later on we will see that different functions f, d lead to the different (f, d)-effective computability. That is, they cannot be reduced further.
By definition, if f1(n) ≤ f2(n) and d1(n) ≥ d2(n) for almost all n, then any (f1, d1)-effectively computable real is also (f2, d2)-effectively computable. Between the bounding function f and the distance function d we can show a tradeoff phenomenon with respect to the (f, d)-effectively computability.
We explain some notations on the inverse functions at first. For an un- bounded nondecreasing function h : N → N we can define its inverse function in the following two different ways.
h−1(n) := min{t ∈ N : h(t) ≥ n};
h−1(n) := max{t ∈ N : h(t) ≤ n}.
The functions h−1 and h−1 are called upper inverse and lower inverse function of h, respectively. For an unbounded nondecreasing function h, it’s upper and lower inverse functions are both nondecreasing. In addition, they have the following properties which follow from the definition directly.
Proposition 2.4 Let h : N → N be an unbounded and nondecreasing func- tion. Then we have
(∀n ∈ N) (h ◦ h−1(n) ≥ n & h−1 ◦ h(n) ≤ n);
(∀n ∈ N) (h ◦ h−1(n) ≤ n & h−1 ◦ h(n) ≥ n);
(∀n ∈ N)(h ◦ h−1(n)= n & h ◦ h−1(n)= n), if h is surjective;
(∀n ∈ N)(h−1 ◦ h(n)= n & h−1 ◦ h(n)= n), if h is injective.
Lemma 2.5 Let f, d be nondecreasing functions and d is unbounded. If h is an unbounded nondecreasing computable function, then we have
(f ◦ h−1, d)-EC ⊆ (f, d ◦ h)-EC ⊆ (f ◦ h−1, d)-EC;
(f, d)-EC ⊆ (f ◦ h, d ◦ h)-EC.
Proof. (i). For the first inclusion, let x be an (f ◦ h−1, d)-effectively com- putable real number. There is a computable sequence (xs) of rational num- bers which converges (f ◦ h−1, d)-effectively to x. That is, for almost all n ∈ N, the number of non-overlapping index-pairs (s, t) such that s, t ≥ n and
|xs − xt| > 1/d(n) is bounded by f ◦ h−1(n). Define a computable sequence

(ys) of rational numbers by ys := xh(s) for all s. The sequence (ys) converges to x too. Now we show that this sequence converges (f, d ◦ h)-effectively.
Given an n, if (s, t) is an index-pair such that s, t ≥ n and |ys−yt| > d◦h(n), then we have h(s), h(t) ≥ h(n) and |xh(s) − xh(t)| > d ◦ h(n) because h is a nondecreasing function. By the (f ◦ h−1, d)-effective convergence of the se- quence (xs), the number of such non-overlapping pairs (h(s), h(t)) is bounded by f ◦ h−1(h(n)) which is bounded again by f (n) according to the second part of Proposition 2.4.(i) and the monotonicity of f . Since h is nondecreasing, for each pair (h(s), h(t)) with above properties, there are two disjoined intervals of natural numbers [s1, s2] and [t1, t2] such that h(s)= h(s') and h(t)= h(t') for any s' ∈ [s1, s2] and t' ∈ [t1, t2]. All these pairs (s', t') overlap each other. This implies that, there are at most f (n) non-overlapping index-pairs (s, t) such that s, t ≥ n and |ys − yt| > d ◦ h(n). That is, the sequence (ys) converges (f, d ◦ h)-effectively to x and hence x is (f, d ◦ h)-effectively computable.
For the second inclusion of (i)., let x be an (f, d ◦ h)-effectively computable real number and let (xs) be a computable sequence of rational numbers which converges (f, d ◦ h)-effectively to x. Let ys := xh−1 (s). We are going to show that the computable sequence (ys) converges (f ◦ h−1, d)-effectively to x.
For a given n, let (s, t) satisfy s, t ≥ n and |ys −yt| > 1/d(n). By the mono- tonicity of h−1 and the inequality n ≤ h ◦ h−1(n), we have h−1(s), h−1(t) ≥ h−1(n) and |xh−1 (s) − xh−1(t)| > 1/d(n) ≥ 1/d ◦ h ◦ h−1(n). By the (f, d ◦ h)- effective convergence of the sequence (xs) and the monotonicity of h−1, this implies that the computable sequence (ys) converges (f ◦ h−1, d)-effectively to x and hence x is (f ◦ h−1, d)-effectively computable.
(ii). It is analogous to the proof of (i).	 
Sofar we discuss the (f, d)-effective computability of real numbers for pos- sibly non-computable functions f and d. However, it is a very natural require- ment that the jump-size should be effectively given if the number of the jumps is concerned. In the following we are mainly interested in the computable dis- tance function d, while the bounding function f can still be uncomputable.
The following lemma shows that any computable distance function can be reduced to the identity distance function.
Lemma 2.6 Let f be a nondecreasing function. If d is a computable un- bounded nondecreasing function, then we have (f, d)-EC = (f ◦ d−1, id)-EC.
Proof. First, by Lemma 2.5.(ii) we have (f, d)-EC ⊆ (f ◦ d−1, d ◦ d−1)-EC. This implies the inclusion (f, d)-EC ⊆ (f ◦ d−1, id)-EC because of the in- equality d ◦ d−1(n) ≥ n.
The other direction of the inclusion (f ◦ d−1, id)-EC ⊆ (f, d)-EC follows directly from the Lemma 2.5.(i).	 

Lemma 2.6 shows that, if the (f, d)-effective computability is considered for the computable distance functions d, then it suffices to consider only the (f, id)-effective computability for different functions f . However, because of the simplicity in a lot of proofs, we prefer using the distance function ep(n) := 2n instead of the identity function id. This does not change the matter essentially because of the following lemma.
Lemma 2.7 Let f be a nondecreasing function. We have
(f, id)-EC = (f ◦ ep, ep)-EC;
(f, d)-EC = (f ◦ d−2, ep)-EC for any unbounded non-decreasing com- putable function d, where d−2(n) := d−1 ◦ ep(n)= min{t : d(t) ≥ 2n}.
Proof. (i) The inclusion (f, id)-EC ⊆ (f ◦ep, ep)-EC can be followed directly from Lemma 2.5.(ii).
For the other direction of the inclusion we have
(f ◦ ep, ep)-EC = (f ◦ ep, id ◦ ep)-EC
⊆ (f ◦ ep ◦ ep−1, id)-EC	(By Lemma 2.5.(i))
⊆ (f, id)-EC	(Since ep ◦ ep−1(n) ≤ n)
(ii) By Lemma 2.6, we have (f, d)-EC = (f ◦ d−1, id)-EC for any unbounded non-decreasing computable function d. By item (i)., we have (f ◦ d−1, id)-EC = (f ◦ d−1 ◦ ep, ep)-EC. Therefore, (f, d)-EC = (f ◦ d−2, ep)-EC.	 
In the following we consider only the computable distance functions. By Lemma 2.7, it suffices actually only to consider the distance function ep(n) := 2n. This leads to the following definition.
Definition 2.8 Let f : N → N be a nondecreasing function.
A sequence (xs) converges f-effectively if, for almost all n ∈ N, there are at most f (n) non-overlapping index-pairs (s, t) such that
s, t ≥ n & |xs − xt| > 2−n.	(6)
A real number x is f-effectively computable (f -ec, for short) if there is a computable sequence (xs) of rational numbers which converges f - effectively to x. The class of all f -computable real numbers is denoted by f -EC.
Thus, a real number is computable if and only if it is f -effectively com- putable for the constant function f ≡ 0, or shortly, it is 0-ec. For a class C of functions, a real x is called C-effectively computable if it is f -computable for a function f ∈ C. The class of all C-effectively computable real numbers

is denoted by C-EC. The properties of C-EC for different classes C will be investigated in the following sections.

Constant Bounds
In this section we discuss the f -effective computability for constant functions
f . By the tradeoff Lemma 2.5 and Lemma 2.7, the computable distance functions do not play a role any more in this case. That is, for a constant function f , the (f, e)-effective computability does not depend on the choice of the computable unbounded nondecreasing function d. Therefore we have the following lemma.
Lemma 3.1 Let f be a constant function.
f-EC = (f, d)-EC for any unbounded nondecreasing computable function
d;
f-EC ⊆ g-EC for any nondecreasing unbounded function g.
Proof. It follows directly from the Lemma 2.7.(ii). and the Definition 2.8. Let k be any natural number and let f ≡ k be a constant function. We call
an f -effectively computable real number k-effectively computable or k-ec for short. The class of all k-ec real numbers is denoted by k-EC. A real number x is called bounded effectively computable (bec, for short) if it is k-ec for some constant k. The class of all bounded effectively computable real numbers is denoted by ∗-EC := k∈N k-EC.
For the k-ec real numbers we have the following hierarchy theorem which is similar to the Ershov’s hierarchy [4] of Δ0-sets of natural numbers.
Theorem 3.2 For any natural number k, there is a (k + 1)-ec real number which is not k-ec, i.e., k-EC Ç (k + 1)-EC.
Proof. Let k be a natural number. We will construct a (k + 1)-computable real number which is not k-ec. That is, we construct a computable sequence (xs) of rational numbers which converges (k + 1)-effectively to a non k-ec real number x. Thus, x has to satisfy all the following requirements:
Re : (ϕe(s))s converges k-effectively to ye =⇒ x /= ye,
where (ϕe) is an effective enumeration of all computable functions ϕe :⊆ N →
Q.
To satisfy a single requirement Re, we choose two rational intervals I1 and I2 which have a distance 2−e. As default let x0 be the middle point of I1. If there is an s ≥ e such that ϕe(s) enters the interval I1, then redefine the xs to be the middle point of the interval I2. If ata later stage t > s, ϕe(t) enters

I2, then let xt to be the middle point of I1 again, and so on. We allow at most k + 1 such kind of jumps. This suffices to guarantee that the limit x of the constructed sequence is different from the possible limit of lims→∞ ϕe(s) if this sequence converges k-effectively.
To satisfy all requirements simultaneously, we apply the standard finite injury priority construction. The details are omitted here.	 
On the arithmetical operations about the k-effectively computable real numbers we have the following result.
Lemma 3.3 Let i, j, k be natural numbers.
If x ∈ i-EC and y ∈ j-EC, then x + y, x − y, x · y, x/y ∈ (i + j)-EC.
The class ∗-EC is closed under the arithmetical operations, i.e., it is a ﬁeld.
There exist a k-ec real number x and an 1-ec real number y such that x + y is not k-ec. Thus, the class k-EC is not closed under addition and hence is not a ﬁeld.
Proof. (i). Let x ∈ i-EC and y ∈ j-EC. There are computable sequences (xs) and (ys) of rational numbers which converge i-effectively and j-effectively to x and y, respectively. We consider here only the product xy. The situations for other operations are similar. Choose a constant c such that |xs|, |ys| ≤ 2c for all s. For any natural numbers s, t and n, if |xs − xt|≤ 2−n and |ys − yt| ≤ 2−n, then we have
|xsys − xtyt|≤ |xs||ys − yt| + |yt||xs − xt|≤ 2−(n−(c+1)).	(7)
Define a computable sequence (zs) of rational numbers by zs := xsys. This sequence converges obviously to xy.
For any given natural number n, if s, t are indices with s, t ≥ n such that
|zs − zt| > 2−(n−(c+1)), then, we have either |xs − xt|≥ 2−n or |ys − yt| ≥ 2−n by
Since (xs) and (ys) converge i-effectively and j-effectively, respectively, the number of non-overlapping index-pairs (s, t) of these properties is bounded by i + j. That is, the sequence (zs) converges ((i + j), λn.2n−(c+1))-effectively. By Lemma 3.1, xy is (i + j)-effectively computable.
It follows immediately from assertion (i).
We can construct two computable sequences (xs) and (ys) of rational numbers which converge k-effectively and 1-effectively to x and y, respectively such that their sum x + y is different from any k-effectively computable real numbers. That is, x + y satisfies the following conditions:
Re : (ϕe(s))s converges k-effectively to ze =⇒ x + y /= ze.
The construction of the sequences (xs) and (ys) applies the standard jump

technique. To satisfy a single requirement Re, we choose two rational intervals
I1 and I2 such that the distance between them is 2−n for some natural number
n. As default, let x0 be the middle point of I1 and y0 := 0. We change xs to be the middle point of I2 whenever the sequence (ϕe(t)) enters the interval I1 after stage n while the ys remains being unchanged. xs can be back to the interval I1 again if the sequence (ϕe(t)) enters the interval I2 later. This kind jumps of xs are allowed at most k times. After k jumps of xs, we can increase or decrease ys by 2−n once to force the sum xs + ys leave the interval I1 or I2 depending on the sequence (ϕe(t)) enters I1 or I2. In this way, we guarantee that the sequences (xs) and (ys) converge k-effectively and 1-effectively, respectively, but the limit x + y is different from the possible limit of the sequence (ϕe(t)) if it converges k effectively.
To satisfy all requirements simultaneously, we apply the finite injury pri- ority construction technique.	 
Now we compare the k-effective computability with the semi- computability. Recall that, a real x is called left computable or computably enumerable (c.e., for short), if there is an increasing computable sequence (xs) of rational numbers which converges to x. A real number x is called right com- putable or co-c.e., if −x is c.e. Left and right computable real numbers are called semi-computable. The classes of left, right and semi-computable real numbers are denoted by LC, RC and SC, respectively.
We show first that the class of semi-computable real numbers does not contain all bounded effectively computable real numbers. Actually, even 1- effectively computable real number can be not semi-computable.
Theorem 3.4 There is an 1-effectively computable real number which is not semi-computable. That is, 1-EC ¢ SC.
Proof. Let (ϕe) be an effective enumeration of all partial computable func- tions ϕe :⊆ N → Q. If y is a semi-computable real number, then there is an e such that the function ϕe is a monotone total function such that lims→∞ ϕe(s)= y. Now we are going to construct a computable sequence (xs) of rational numbers which converges 1-effectively to x and x satisfies all the following requirements:
Qe : (ϕe) is total and monotone and lim ϕe(s)= ye =⇒ x /= ye.
s→∞
The strategy to satisfy a single requirement Qe is quite simple. Suppose that we have at stage s0 defined xs0 . If at a later stage we can find a t > s0 so that we can verify that the finite sequence (ϕe(s))s≤t is increasing and 0 ≤ xs0 − ϕe(t) ≤ 2−e, then define xt := xs0 − 2−e. Similarly, if the finite sequence (ϕe(s))s≤t is decreasing and 0 ≤ ϕe(t) − xs0  ≤ 2  , then define

xt := xs0 +2−e. This guarantees that the limit of the constructed sequence (xs) is different from the possible limit lims→∞ ϕe(s) if ϕe is a monotone function. Notice that, in this strategy one jump of size 2−e suffices.
To satisfy all requirements simultaneously, we apply again the finite in- jury priority construction. The only problem here is how to guarantee the 1-effective convergence of the sequence (xs). According to the above strategy, to satisfy a requirement Qe we need a jump of size 2−e of the sequence (xs). Because the element xs is defined at the stage s, this means that, at most one requirement Qe with e ≤ s is allowed to be attacked by this strategy after stage
s. This restriction may cause that some requirements may not be satisfied. To solve this problem, we define a new list of requirements Re by R⟨i,j⟩ := Qi. That is, each requirement Qe will appear in the list infinitely many times. A requirement R⟨i,j⟩ has a higher priority than the requirement R⟨i',j'⟩ if i < i' or i = i' and j < j'. In this way, all requirement Qi has infinitely many chances to be attacked and can be satisfied by the above strategy for the list (Re), although some requirement Re could be never attacked.	 
Now we will show that the class of semi-computable real numbers is not contained in the class of bounded effectively computable real numbers. Ac- tually, there exists even a strongly c.e. real number which is not bounded effectively computable. Here, according to Downey [3], a real number x is called strongly c.e. if it has a c.e. binary expansion, i.e., there is a c.e. set A ⊆ N such that x = xA := i∈A 2−(i+1). Thus, the class SC and ∗-EC are incomparable.
Theorem 3.5 There is a strongly c.e. real number x which is not k- computable for any natural number k. Therefore we have SC ¢ ∗-EC.
Proof. We construct a c.e. set A ⊆ N such that the strongly c.e. real number
xA satisfies all the requirements for all e = ⟨i, j⟩:
Re : (ϕi(s))s converges j-effectively to ye =⇒ xA /= ye.
To satisfy a single requirement R⟨i,j⟩, we choose j + 1 different natural numbers a0 < a1 < ··· < aj as possible witnesses of the requirement. Fix a rational interval Ie := (ue, ve) of length 2−(aj +1). As default define x0 to be the middle point of the interval Ie. As long as the sequence (ϕi(s))s does not enter the interval Ie, we define xs equal to x0. Otherwise, if the sequence (ϕi(s))s enters the interval Ie after the stage aj + 1, then we move the interval Ie to right by a distance 2−aj . This move can be denoted by Ie := Ie + 2−aj (and ue := ue + 2−aj , ve := ve + 2−aj ). Notice that the new interval has a distance 2−(aj +1) to the old one. Then define the new xs as the middle point of the new interval Ie. That is, xs has an increasing jump of size 2−aj . If, at a late stage, the sequence (ϕi(s))s enters the new interval Ie, then we move the interval and

the element xs to right for a distance 2−aj−1 . If it is necessary, they can be moved to right further for the distances 2−aj−2 , ..., 2−a1 and eventually 2−a0 . In this way, we can guarantee that the limit of the sequence (xs) is different from lims→∞ ϕi(s) if the sequence (ϕi(s)) converges j-effectively.
Notice that, in the above strategy, the values of xs are increased always by 2−a for some natural number a. And for different a, the increment 2−a can appear at most once. This corresponds to the enumeration of the element a into the binary expansion set A of xA := lims→∞ xs. That is, the computable sequence (As) defined by xAs = xs is an effective enumeration of the c.e. set
A. If we want to satisfy all requirements simultaneously, we should choose the different witness elements for different requirements and then apply the priority construction technique. Thus, the limit xA of the constructed sequence (xs) has a c.e. binary expansion and it satisfies all requirements Re. That is, xA is strongly c.e. but not bounded effectively computable.	 
It is shown in [1] that, the arithmetical closure of the semi-computable real numbers is the class of weakly computable real numbers. Here x is called weakly computable if there is a computable sequence (xs) of rational numbers which converges to x weakly effectively in the sense that the sum  s∈N |xs − xs+1| is finite. The class of weakly computable real numbers is denoted by WC. From the Theorem 3.4, we have the following corollary immediately.
Corollary 3.6 The class of the bounded effectively computable real numbers is a proper subset of the class of weakly computable real numbers, i.e., ∗-EC Ç WC.
Proof. Because all semi-computable real numbers are weakly computable, the inequality ∗-EC /= WC follows directly from Theorem 3.5.
Now we prove the inclusion ∗-EC ⊆ WC. Let x be a k-effectively computable real number and let (xs) be a computable sequence of rational numbers which converges k-effectively to x. We want to show that the sum

∞
s=0
|xs − xs+1| is finite.

For any natural number n, there are at most k indices s ∈ [n − k, n] such
that |xs − xs+1| > 2−(n−k) by the k-effective convergence of (xs). In other words, there is at least one s ∈ [n − k, n] such that |xs − xs+1| ≤ 2−(n−k). In general, for any i ≤ n − k, there are at least i + 1 indices s ∈ [n − k − i, n] such that |xs − xs+1|≤ 2−(n−k−i). This implies that, there are n − k different indices s0, s1, ··· , sn−k such that |xs − xs +1|≤ 2−i for all i ≤ n − k. Choose a constant c such that |xs − xs+1| ≤ c for all s ∈ N. Then we have
n	n−k	n−k
Σ |xs − xs+1| ≤ Σ |xsi − ss +1| + ck ≤ Σ 2	+ ck ≤ 2+ ck.
−i



s=0
i=0
i=0

Therefore Σ∞  |xs − xs+1|≤ 2+ ck, i.e., (xs) converges weakly effective to x
and hence x is weakly computable. Thus, ∗-EC ⊆ WC.	 

Computable Bounds
In this section we discuss the f -effective computability for the computable functions f . We show at first a general hierarchy theorem of f -ec real numbers for computable functions f . Then we compare the semi-computability and weak computability with f -effective computability for some special functions f .
Recall that, a real number x is called f-bounded computable in [12] if there is a computable sequence (xs) of rational numbers which converges to x such that, for any n, the number of the non-overlapping index-pairs (s, t) (not necessarily after n) with |xs − xt| ≥ 2−n is bounded by f (n). The class of all f -bounded computable real numbers is denoted by f -BC. The union of all f -BC for all computable functions f is DBC, the class of divergence bounded computable real numbers which was first introduced in [14].
Notice that, for f -bounded computability all jumps bigger than 2−n are considered no matter if the jump occurs after stage n or not. Thus, if a real number x is f -bounded computable, then it is also f -effectively computable, i,e., f -BC ⊆ f -EC for any function f . On the other hand, there are at most n big jumps before the stage n for any n. That is, if x is f -effectively computable for a function f , then it is f1-bounded computable for the function f1(n) := f (n)+ n, i.e., f -EC ⊆ f1-BC. As a result, DBC is also the union of f -EC for all computable functions f . For the f -bounded computability, it is shown in [12] that, for any computable functions f and g, f -BC /= g-BC if and only if the functions f and g have an unbounded distance, i.e., (∀c)(∃n)(|f (n)−g(n)|≥ c). For the f -effective computability, we have another hierarchy theorem as follows.
Theorem 4.1 Let f, g : N → N be computable functions. If there are in- ﬁnitely many n such that f (n) < g(n), then there is a g-effectively computable real number which is not f-effectively computable, i.e., g-EC ¢ f-EC.
Proof. Suppose that f and g are computable functions such that f (n) < g(n) for infinitely many n. We are going to construct a g-effectively computable real number x which is not f -effectively computable. More precisely, we construct a computable sequence (xs) of rational numbers converging g-effectively to a real number x which satisfies for all e the following requirements:
Re : (ϕe(s))s converges f -effectively to ye =⇒ x /= ye.
where (ϕe) is an effective enumeration of all computable functions ϕe :⊆ N →

Q.
The formal construction of the sequence (xs):
Stage 0: Define two rational intervals I0 := (0, 1) and J0 := (2, 3) and let
x0 := 1/2, i.e., x0 is the middle point of the interval I0. In addition, we define three further parameters e0 := 0, n0 =0 and v0 := 0.
Stage s+1: Suppose that we have defined xs and es. For all i ≤ es intervals Ii and Ji and the parameter vi and ni are also defined. The intervals Ii, Ji and the parameters ni and vi can be changed at different stages. Their values at stage s are denoted by Ii,s, Ji,s, ni,s and vi,s, respectively. Suppose that the distance between the intervals Ii,s and Ji,s is always 2−ni,s .
A requirement Re requires attention at this stage if e ≤ es and there exists a t0 > ve,s such that, for all t ≤ t0, ϕe,s(t) is defined and the finite sequence (ϕe,s(t))t≤t0 does not injure the condition of the f -effective conver- gence; ϕe(t0) ∈ Ie,s and the sequence (xt)t≤s does not have more than g(ne,s) non-overlapping jumps of the size larger than 2−ne,s .
If some requirements require attention, then let Re be the requirement of the highest priority (with minimal e) which requires attention. Define Ie,s+1 := Je,s, Je,s+1 := Ie,s, es+1 := e, ve,s+1 := t0 and let xs+1 be the middle point of the interval Ie,s+1. At the same time, let Ii,s+1, Ji,s+1, ni,s+1 and vi,s+1 be undefined, for all i > e, or remain the same as their values at stage s if i < e.
If no requirement requires attention, then, for e = es+1, choose an ne,s+1 > s large enough such that f (ne,s+1) < g(ne,s+1) and such that we can define two rational intervals Ie,s+1, Je,s+1 ⊆ Ies,s so that their lengths and the distance between them are both equal to 2−ne,s+1 . In addition the rational number xs should be the middle point of Ie,s+1. Then, define xs+1 := xs, es+1 := es + 1, ves+1 := s. All other parameters remain unchanged.
Thus, the computable sequence (xs) converges g-effectively and its limit x satisfies all requirements Re. That is, x is g-effectively computable but not f -effectively computable.	 
From Theorem 4.1 it follows immediately that, for any constant k and any unbounded computable function f , there is an f -effectively computable real number which is not k-effectively computable. This is true even for the class of bounded effectively computable real numbers.
Corollary 4.2 Let f be an unbounded nondecreasing computable function. Then ∗-EC Ç f-EC.
Proof. Let f be an unbounded nondecreasing computable function. The inclusion follows immediately from the Lemma 3.1.(ii).
To prove the inequality, defined an unbounded nondecreasing computable

function by f1(n) := f (n) −· 1. Then we have ∗-EC ⊆ f1-EC and f1-EC Ç
f -EC by Theorem 4.1. This implies that ∗-EC Ç f -EC.	 
We have shown that, if f is an unbounded computable function, then the class f -EC extends the class ∗-EC properly. The next theorem shows when the f -effective computability arrives at the semi-computability.
Theorem 4.3 Any semi-computable real number is ep-effectively computable, where ep(n) := 2n for all n, i.e., SC ⊆ ep-EC.
Proof. Suppose that x ∈ [0, 1] is a left computable real number. According to a characterization of left computable real numbers by Calude et al [2], there is a strongly ω-c.e. set A such that x = xA :=	i∈A 2−(i+1). Here A is strongly ω-c.e. if there is a computable sequence (As) of finite sets such that lims→∞ As = A and, for any n, if n ∈ As − As+1, then there is an m < n such that m ∈ As+1 − As. That is, if some natural number n is removed from A by the approximation (As) at some stage s + 1, then some smaller natural number m must be put into A at the same time. As a result, any natural number n can change its membership to A by the approximation (As) at most 2n times. In other words, A is an ep-c.e. set according to Ershov [4].
Now let xs := xAs . Then (xs) is a computable sequence of rational numbers which converges to x. For any s, t, if |xs − xt| > 2−n, then there must be an m < n which changes its membership to A between stages s and t. This can happen at most 20 + 21 + ··· + 2n−1 = 2n times. That is, the sequence (xs) converges ep-effectively and hence x is ep-effectively computable.	 
Theorem 4.3 shows that, if a function f increases not slower than the ex- ponential function 2n, then f -EC contains all semi-computable real numbers. However, if a computable function f increases essentially slower than 2n (i.e., f ∈ o(ep)), then the class f -EC does not contain all semi-computable real numbers any more as it is shown by the following theorem.
Theorem 4.4 If f is a computable function such that f ∈ o(ep), then there is a semi-computable real number which is not f-effectively computable, i.e., SC ¢ f-EC.
Proof. We construct an increasing computable sequence (xs) of rational num- bers which converges to x such that x is not f -effectively computable, i.e., x satisfies all the following requirements:
Re : (ϕe(s))s converges f -effectively to ye =⇒ x /= ye.
where (ϕe) is an effectively enumeration of computable functions ϕe :⊆ N →
Q.

To satisfy a single requirement Re, we choose a rational interval I of the length, say, 2−ne−1 for a natural number ne−1. Since f ∈ o(ep) is computable, we can find effectively a natural number ne > ne−1 such that 2(f (ne)+1)2−ne < 2−ne−1 . Divide the interval I into subintervals I0, I1, I2,... of the length 2−ne . As default, let x0 be the middle point of I0. If the sequence (ϕe(s)) enters the interval I0, let xs be the middle point of I2. If the sequence (ϕe(s)) enters I2, then change xs to be the middle point of I4, and so on. In this way, the values xs can be increased at most f (ne) + 1 times and each time it is increased by 2−ne+1. By the choice of ne, all xs remain in the interval I. However this suffices that the limit of the sequence (xs) satisfies the requirement Re. To satisfy all requirements simultaneously, we construct the sequence by a priority finite injury technique.	 

Bounding by Function Classes
From the previous sections we have seen that, for a fixed function f , the class of f -effectively computable real numbers is usually not closed under the arithmetical operations. Therefore, we discuss the class C-EC for the class C of functions. Our intention is to define some real number classes defined by C-effective computability which have nice mathematical properties. A good example is the class of bounded computable real numbers which corresponds the class of all constant functions.
In this section we will show that, for a lot of natural function classes C, the classes C-EC are fields.
Theorem 5.1 Let C be a class of functions which contains all constant func- tions and is closed under composition. Then the class C-EC is a ﬁeld.
Proof. Suppose that C is a class of functions which contains all constant functions and is closed under composition.
For any x, y ∈ C-EC, there are two functions f, g ∈ C and two computable sequences (xs) and (ys) of rational numbers which converge f -effectively and g-effectively to x and y, respectively.
Let zs := xs+1+ys+1 for all s. Then the computable sequence (zs) converges to x + y. For any natural number n and any indices s, t ≥ n, if |zs − zt| > 2−n then we have either |xs+1 − xt+1| > 2−(n+1) or |ys+1 − yt+1| > 2−(n+1). By the assumption, the number of such non-overlapping index-pairs is bounded by f (n + 1)+ g(n + 1). This means that the sequence (zs) converges h-effectively to x + y for the function h(n) := f (n + 1) + g(n + 1). Since h belongs to C, the sum x + y is a C-effectively computable real number.
Analogously, we can show that x − y ∈ C-EC.

For the production xy, we choose a natural number N large enough such that, for all s, max{|xs|, |ys|} ≤ 2N hold. Define a computable sequence (zs) by zs := xs+N+1ys+N+1 for all s. Notice that, for any s, t, if |xs+N+1 − xt+N +1| ≤ 2−(n+N +1) and |ys+N +1 − yt+N +1| ≤ 2−(n+N +1), then we have |zs − zt| ≤ |xs+N +1||ys+N +1 − yt+N +1| + |yt+N +1||xs+N +1 − xt+N +1| ≤ 2−n. In other words, if |zs − zt| > 2−n, then we have either |xs+N+1 − xt+N+1| > 2−(n+N+1) or
|ys+N+1 − yt+N+1| > 2−(n+N+1). This implies that the sequence (zs) converges h-effectively to xy for the function h(n) := f (n + N + 1)+ g(n + N + 1). Since h ∈ C, we have xy ∈ C-EC.
Finally we consider the division x/y for y /= 0. Suppose without loss of generality that ys /= 0 for all s. Choose a natural number N such that 2−N ≤ |ys| and max{|xs|, |ys|} ≤ 2N for all s. Define a computable sequence (zs) by zs := xs+3N+1/ys+3N+1. For any natural numbers s, t and n, we have the inequality |xs/ys − xt/yt| ≤ (|xs||ys − yt| + |yt||xs − xt|)/|ysyt|≤ 2−n+3N+1. Thus, if s, t ≥ n satisfy |zs − zt| > 2−n, then we have either |xs+3N+1 − xt+3N +1| > 2−(s+3N +1) or |ys+3N +1 − yt+3N +1| > 2−(s+3N +1). This implies that the sequence (zs) converges h-effectively to x/y for the function h(n) := f (n + 3N + 1)+ g(n + 3N + 1). Since h ∈ C, the division x/y is C-effectively computable.	 
There are a lot of natural classes of functions which satisfy the condition of the Theorem 5.1. For example, the class LF of all linear functions f (n) := an+b, the class of PF of polynomial functions, the classes En of Grzegorczyk’s hierarchy ([5]), and the class of primitive recursive functions, and so on. For all these classes C, the corresponding classes C-EC are fields.
Natural classes of functions can also be defined from any given function in the following way.
Definition 5.2 For any function f , we define a class θ(f ) of the functions by
θ(f ) := {g : (∃a, b, c ∈ N)(∀n ∈ N)(g(n) ≤ af (n + b)+ c)}.
Proposition 5.3 Let f, g be nondecreasing functions.
(∃c)(∀n)(|f (n) − g(n)|≤ c) =⇒ θ(f )= θ(g);
f ∈ o(g) =⇒ θ(f ) Ç θ(g);
θ(f + g)= θ(f )  θ(g) := {h1 + h2 : h1 ∈ θ(f ) & h2 ∈ θ(g)}.
Obviously, for any nondecreasing function f , the class θ(f ) satisfies the condition of Theorem 5.1 therefore we have the following corollary.
Corollary 5.4 Let f be any nondecreasing function. The class θ(f )-EC is closed under the arithmetical operations and hence is a ﬁeld.

For example the class θ(ep)-EC is a field which contains all semi- computable real numbers according to the Theorem 4.3. This implies im- mediately that WC ⊆ θ(ep)-EC because WC is the arithmetical closure of semi-computable real numbers. This can even be extended to the class o(ep)-EC.
Theorem 5.5 The class WC is a proper subset of o(ep) − -EC, i.e., WC Ç
o(ep)-EC.
Proof. By the Theorem 4.7 of [12], we have WC Ç o(ep)-BC. Since any f -bounded computable real number is also f -effectively computable for any function f , we have o(ep)-BC ⊆ o(ep)-EC. Therefore WC Ç o(ep)-EC. 

References
Ambos-Spies, K., K. Weihrauch and X. Zheng, Weakly computable real numbers, Journal of Complexity 16 (2000), pp. 676–690.
Calude, C. S., P. H. Hertling, B. Khoussainov and Y. Wang, Recursively enumerable reals and Chaitin Ω numbers, Theoretical Computer Science 255 (2001), pp. 125–149.
Downey, R. G., Some computability-theoretic aspects of reals and randomness, in: The Notre Dame lectures, Lect. Notes Log. 18, Assoc. Symbol. Logic, Urbana, IL, 2005 pp. 97–147.
Ershov, Y. L., A certain hierarchy of sets. i, ii, iii. (Russian), Algebra i Logika (7(1):47–73, 1968;7(4):15–47, 1968; 9:34–51, 1970).
Grzegorczyk, A., Some classes of recursive functions, Rozprawy Mat. 4 (1953), p. 46.
Myhill, J., Criteria of constructibility for real numbers, The Journal of Symbolic Logic 18
(1953), pp. 7–10.
Rice, H. G., Recursive real numbers, Proc. Amer. Math. Soc. 5 (1954), pp. 784–791.
Robinson, R. M., Review of “Peter, R., Rekursive Funktionen”, The Journal of Symbolic Logic
16 (1951), pp. 280–282.
Specker, E., Nicht konstruktiv beweisbare S¨atze der Analysis, The Journal of Symbolic Logic
14 (1949), pp. 145–158.
Turing, A. M., On computable numbers, with an application to the “Entscheidungsproblem”, Proceedings of the London Mathematical Society 42 (1936), pp. 230–265.
Weihrauch, K., “Computable Analysis, An Introduction,” Springer, Berlin Heidelberg, 2000.
Zheng, X., D. Lu and K. Bao, Divergence bounded computable real numbers, Theoretical Computer Science 351 (2006).
Zheng, X. and R. Rettinger, Weak computability and representation of reals, Mathematical Logic Quarterly 50 (2004), pp. 431–442.
Zheng, X., R. Rettinger and R. Gengler, Closure properties of real number classes under CBV functions, Theory of Computing Systems 38 (2005), pp. 701–729.
