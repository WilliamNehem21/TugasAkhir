Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 335 (2018) 3–25
www.elsevier.com/locate/entcs

Abductive Network Action Inference for Targeted Therapy Discovery
C´elia Biane 1	Franck Delaplace 2 Tarek Melliti 3
IBISC laboratory - Evry University, 91037 Evry, France

Abstract
Complex diseases such as cancer result from the combined actions of genetic perturbations whose charac- terization is crucial to determine the healing treatment. The challenge of therapy discovery focuses on the identification of the causal mechanisms underlying the genotype-phenotype relationships. In this undertak- ing, networks provide suitable representations to model molecular interactions and enable the analysis of the effect of multiple molecular perturbations on the cell system behaviour. Although network-based analysis was announced as a key milestone for drug discovery, the challenge remains daunting. A main issue is to properly qualify the actions of diseases on networks and their dynamical effects to discover the appropriate targets for drugs. In this article, we propose a new computational method for network action inference using Boolean networks to model the dynamics of biological networks and where disease/drug actions are represented as arc additions and deletions. Based on abductive reasoning, the method finds the actions that provide the best parsimonious explanation for shifting the cell from a diseased state to a healed state. The method was applied to retrieve the necessary drug actions in the case of synthetic lethality for Breast Cancer.
Keywords: Boolean network, Abductive reasoning, Cancer therapy prediction


Introduction
Cancer originates from a deregulation of gene expression leading to uncontrolled proliferative capability sustained by complementary functions: angiogenesis, growth suppressor evasion, cell death resistance and immortality [12]. It is caused by a com- bination of mutations responsible for a functional malignant switch. Targeted drug therapy aims at counteracting the effect of mutations by reprogramming cancer cell to switch to cell-death [9]. To some extent, cancer can be assimilated to a biolog- ical “network function perturbation” requiring to focus on the network dynamics analysis for the identification of targets [6,26]. In a network, the cause of functional perturbation is rarely reduced to a single gene mutation but rather results from

1 Email: celia.biane@ibisc.univ-evry.fr
2 Email: franck.delaplace@ibisc.univ-evry.fr
3 Email: tarek.melliti@ibisc.univ-evry.fr

https://doi.org/10.1016/j.entcs.2018.03.006 1571-0661/© 2018 Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

a collective outcome involving different interacting cellular components [6]. The multiplicity of actors combining their action drastically complicate drug targets discovery, in contrast to the magic bullet paradigm where the drug acts on a single pathological cause [33].
Synthetic lethality illustrates the network-based drug discovery issue. Synthetic lethality refers to a combination of genetic events inducing cell death but leaving the cell viable when only one of the events occurs [13]. Consequently, the develop- ment of targeted anticancer drugs is based on the identification of the gene whose synthetic lethal partner is inactivated in the cancer cells. More generally, synthetic lethality emphasizes two important elements for network-based drug discovery: the distinction between the drug target and the defective molecule, and the selection of combined actions reprogramming the cell to reach an intended physiological state. Network action targeting aims at characterizing the set of actions applied to network that shifts its dynamics to a specific physiological state. For cancer, the actions actually interpret the effects of mutations in terms of topological alterations of a biological network deviating its dynamics. Somatic mutations in a cancer cell genome may be classified according to their consequences for cancer develop- ment. Driver mutations are causally involved in the emergence of cancer and confer selective growth advantage to the cell while the remaining mutations are passen- gers that do not have significant functional influence in cancer cells [32]. In [5], drivers have been termed as Network Attacking Mutations and classified according to the way they affect signalling networks. The authors distinguish mutations that constitutively activate or inhibit enzymes and mutations that rewire the network interactions. Moreover, in [38], the authors link mutation to network topology modification. Nonsense mutation, out-of-frame insertion or deletion and defective splicing are interpreted as node or arc deletions whereas miss-sense mutation and in-frame insertion or deletion can be modelled as node or arc addition. The effect of mutation on biological network can thus be described as an elementary topological action: either arc addition or deletion. Indeed, node deletion can be expressed by its isolation (all the surrounding arcs are deleted), and rewiring can be seen as a
combination of arc deletions and additions.
Therefore, the network action targeting issue is to infer the required elementary arc actions that shifts its dynamics to a specific physiological state. In the proposed modelling framework, each physiological state is associated to a marking described by a sequence of variable states which is a notion akin to the concept of biomarkers in precision medicine [39]. Moreover, a marking is expected to be found at equilibrium of the dynamics because it is assimilated to the molecular signature of a specific physiological state. The functions modelling the dynamics are modified according to the interpretation of the network actions: an arc deletion induces a variable removal in the function defining the dynamics of the arc target node whereas an arc addition extends this function by integrating the source variable. Within this framework, network action inference is seen as the inverse problem of equilibria computation, namely: how to transform a dynamical system with respect to the interpretation of the actions such that some resulting equilibria contain the intended marking?

In this article, we define an efficient method for network action inference based on abductive reasoning using Boolean networks to model the dynamics of biolog- ical networks. It can be used either for discovering actions causing disease or the appropriate drug action. More precisely, the framework is illustrated by focusing on arc deletions as actions. Deletion is likely the most common action associated to mutations or drug because their results are often interpreted as the deprivation of protein action on the others. Non-sense, out-of-frame mutations, chromosomal deletions are directly assimilated to arc deletion, and in-frame, miss-sense muta- tions can be interpreted in terms of arc deletion if the mutated sequence does not code for a protein [38]. Moreover, anti-cancerous targeted drugs are mostly molec- ular inhibitors binding to their targets and preventing their interaction with other molecules [12]. Arc addition, discussed in conclusion, seems to also fall within the proposed framework for their inference.
After introducing the basic elements related to propositional logic and Boolean networks (Section 2) we explain the principles for network action inference (Sec- tion 3) that will be applied for drug action discovery in the case of synthetic lethal- ity, illustrating the application of the method (Section 4) for the discovery of drug actions.
Preliminaries
In this section we briefly review the essential notions used in the article related to propositional logic and Boolean network.
Propositional logic
In this section we briefly review the notions in propositional logic used in the article. Propositional logic is the branch of logic studying the truth values of sentences or propositions where atomic propositions are assimilated to Boolean variables. A propositional formula is inductively constructed from atoms composed of constants, False and True, and variables V , unary negation operator ¬, and binary logical operators (e.g., ∧ - conjunction/and), ∨ - disjunction/or) . The truth values False, True are respectively noted by 0, 1. A literal is either an atom or its negation. Given a formula f , Vf denotes the set of variables occurring in f . For example, let fex be the propositional formula representing the equivalence between atom a1 and the negation of atom a2, fex = (a1 ⇐⇒ ¬a2) , the variables are Vfex = {a1, a2} and the literals are a1 and ¬a2.
A cube denotes a conjunction of literals (ie.,	i li where li = ai or li = ¬ai, ai ∈ V ). A disjunctive normal form (DNF) of a formula is a disjunction of cubes (ie., i	ji lji ) and any formula can be written in DNF. For example, the DNF of fex is
(a1 ∧ ¬a2) ∨ (¬a1 ∧ a2) . 
Let an interpretation I : V → {0, 1} be a function assigning a truth value to each variable, a model of a formula is an interpretation such that the formula is evaluated to True and a satisﬁable formula has a model at least. For example, fex is satisfiable because the interpretations I1 = {a1 → 1, a2 → 0} and I2 = {a1 → 0, a2 → 1} are

both models of fex.
Formula f1 entails formula f2, denoted by f1 |= f2, if and only if any model of f1 is also a model of f2. A satisfiable cube C entailing a formula f is said an implicant of f and it is prime if it ceases to be an implicant when deprived of any literal. Considering the example, C1 = a1 ∧ ¬a2 and C2 = ¬a1 ∧ a2 are both prime implicants of fex with I1 and I2 as model respectively, thus entailing fex: C1 |= fex, C2 |= fex.

Boolean networks

⎧⎪⎪⎨ a1 = ¬a2 ∧ ¬a3
F =	a2 = ¬a1
⎪⎪⎩ a3 = a2 ∨ a1


Fig. 1. A Boolean network, its model of dynamics for the asynchronous mode (ie., n = {{a1}, {a2}, {a3}}) and the associated interaction graph.

A Boolean network is a discrete dynamical system of an agent set A defined by a family of propositional formulas F = (fa)a∈A that determines the evolution of the agent states where each fa correspond the step-wise state evolution for agent a cf., Figure 1.
A (Boolean) state of a ∈ A is defined as a mapping s : A '→ B associating a value from B to an agent in A. It is naturally extended to sequence of agents by collecting their state in a sequence preserving their order (e.g., s[a1] = 1, s[a2] = 
0 ⇐⇒ s[(a1, a2)] = (1, 0)).
The evolution is also governed by a mode M qualifying which agents evolve synchronously. Formally the mode is a subset of parts of A, M ⊆ 2A, covering A (ie., A ⊆ m∈A m.) such that each modality m ∈ M characterizes the agents evolving jointly. For example, the asynchronous mode where only one agent is updated per transition is defined as M = {{ai}}ai∈A whereas the parallel mode where all the agents are updated jointly is M = {A}.
The model of dynamics of a Boolean network associated to a mode ⟨F, M⟩ is described by a labelled transition system ⟨−→, M, Bn⟩ where the transition relation
−→⊆ S ×M× S is labelled by modality 4 , −m→, such that:


∀m ∈M : s −m→ sj ⇐⇒
s /= sj ∧ ∀a ∈ m : sj[a]= fa(s) ∧ ∀a ∈ A \ m : sj[a]= s[a].

(1)

A state sj is said reachable from another state s if and only if there exists a trajec-
4 Hence —→= S	m
m∈M —→

tory 5 connecting s to sj, s −→∗ sj. A state s is an equilibrium for −→, eq⟨F,n⟩(s), if it is reached infinitely often, ie., ∀sj ∈ S : s −→∗ sj =⇒ sj −→∗ s. An attractor is a set of equilibria that are mutually reachable and a stable state is an attractor of cardinality 1. In Figure 1, the state (0, 1, 1) is a stable state. Notice that a stable state is a solution of the equation system F (s)= s that does not depend on mode.
The signed interaction graph associated to F , GF = ⟨A,  , σ⟩ abstracts a Boolean network by representing the interactions between agents (cf., Figure 1). The arc labelling function σ : A × A → {+, −, ±} qualifies its nature by a sign: + stands for increasing relation, − for decreasing one and ± otherwise. Such a graph can be inferred from the syntax of the propositional formulas in minimal disjunctive normal form, where ai  — aj stands for the occurrence of the negative literal ¬ai in fa , ai + aj for the occurrence of the positive literal ai in fa , and ai ± aj for both.
Arc action inference
Let F be a Boolean network, the arc deletions denoted by Δ acting on the interaction graph are interpreted as modifications on the Boolean are the brute force method to the abductive method (Sub-section 3.2).
By considering the application in biology, it is assumed that the deletion of an arc ai  aj corresponds to the replacement of ai by 0 in the formula faj in order to represent the molecular interaction deprivation. It is worth noting that the rule can be adapted to the context of the application (e.g., replacement by the neutral element) inducing minor changes in the framework (see δ Section 3.1).
The objective is to determine the arc actions altering network in order to shift the dynamics to an intended marking representing specific values for some agents called markers at equilibrium. A set of arc actions is arc action consistent (AA-consistent) if the dynamics of the modified network encounters the expected marking at equi- librium (Definition 3.1). Formally, a marking is a particular state sα restricted to markers M ⊆ A, sα[M ].
Definition 3.1 Let A be a set of agents, ⟨F, M⟩ a Boolean network defined on A, M ⊆ A a set of markers, and sα ∈ S a marking, the set of arcs Δ is arc action consistent (AA-consistent) with ⟨F, M⟩, sα[M ] if and only if the marking is met at equilibrium for the modified Boolean network, FΔ:
∃s ∈ S : eq⟨FΔ,n⟩(s) ∧ s[M ]= sα[M ].


If the equilibria are stable only, the AA-consistency condition can be more simply stated as an equation system namely, find Δ such that:
∃s ∈ S : FΔ(s)= s with s[M ]= sα[M ].	(2)

5 —→∗ denotes the reflexive and transitive closure —→.

Hence if the equation system has a solution then Δ is AA-consistent.
The AA-consistent arc sets are divided in two categories: the core which is a minimal set under the inclusion such that the dynamics of a Boolean network shifts to the intended marking at equilibrium (Definition 3.2), and the supplement extending the core while maintaining the marking at equilibrium.
Definition 3.2 An AA-consistent set of arcs to be deleted Δ is a core if and only if any arc removal of the set makes it AA-inconsistent.
The distinction between core and supplement may be compared to the one car- ried out for cancer between driver and passenger mutations; both separating primary to secondary events causing an evolution of the dynamics. Therefore, the identi- fication of the cores is central for understanding the fundamental causes initiating the equilibrium shift that could be related to driver identification.
Core abductive inference
We define a computational method to infer the cores while considering the stable states. Hence, the issue is to find all the minimal arc sets under the inclusion Δ such that Equation (2) holds. Δ = ∅ will be assumed AA-inconsistent otherwise it is an unique trivial solution.
Brute force algorithm.
The brute force algorithm consists of deleting all the possible combinations (sub- sets) of arcs, and checking whether stable states of the modified Boolean networks contain the intended marking. The cores are then selected among the AA-consistent sets. The complexity of the brute force algorithm for n agents with k ≤ n2 interac- tions/arcs is in O(2k+n + 22k) that corresponds to the computation of stable states from the 2n states for each 2k modified Boolean networks by application of the arc deletions followed by the core selection.
Table 4 in Appendix details the result of the brute force algorithm for the running example introduced in Figure 1 by considering that the marking is {a1 = 1, a2 = 0}. Two cores are found {a1  a3} and {a3  a1}. Moreover, it is worth noticing that some other arc sets including supplements (e.g., {a2  a3, a3  a1}) are also AA-consistent.
The complexity of the Brute-force algorithm practically restricts its application to small networks (. 10 agents, see Figure 3). To extend the core computation for medium and large networks, we propose an efficient method based on abduction.
Abductive inference of the core.
Abduction is a method of reasoning that aims at proposing hypotheses providing the best explanation for observable facts. Abductive reasoning refers to the generation process of abductive explanations of the observable facts with a prospect of being valid causes in regards to knowledge of the context constituting the theory of the abduction [18]. A cube C is an abductive explanation of a formula Θ formalizing

the facts with respect to another formula Φ representing the theory if: C ∧ Φ |= Θ. Finding a parsimonious cause is characterized by a minimal cube which is consistent with the theory (ie., Φ ∧ C is satisfied). As an abductive explanation can be equivalently expressed as C |= (Φ =⇒ Θ), then a parsimonious consistent hypothesis corresponds to a prime implicant of Φ =⇒ Θ. AA-consistency problem (Equation 2) will be formalized by observable facts and a theory to deduce the cores from the prime implicants. As the objective is to determine the deleted arcs, the notion of arc must be integrated in the specification of the problem. For this, the arcs are assimilated to pipes flowing value from the input (source) to the output (target) leading to explicitly separate the input from the output by two distinct variables, thus enabling the possible distinction of the input and output value in case of arc deletion. The state variables qualify the inputs and appear in the left-hand side of the equations defining the dynamics (ie., ai = .. .) while the arc variables are the outputs occurring in the right hand of the equations. The observable facts formalize the situation where the marking is met at equilibrium while integrating the notion of the arc-as-pipes. The theory formalizes the admissible value variation between input and output of the arc-as-pipes.


Formalizing the observable facts Θ.
First, the Boolean network is changed to include the arc variables. For each arc ai  aj, the occurrence of variables aj is replaced by an arc variable denoted by δi,j in the formula of ai. The Boolean network integrating these replacements is noted Fδ. For example, in Figure 1, the new Boolean network is defined as:
⎧ a1 = ¬δ2,1 ∧ ¬δ3,1
Fδ =	a2 = ¬δ1,2
⎪⎪⎩ a3 = δ2,3 ∨ δ1,3

Then, the presence of the marking at equilibrium is specified by two formulas respectively describing the stability condition and the marking. Each equation ai = fδai stating equilibrium condition is naturally translated to an equivalence because a model of f ⇐⇒ g is also a solution of f = g.
Finally, the marking is formalized by a cube the model of which is the marking. The conjunction of the stability and marking conditions defines the observable facts Θ.
Let l : V × {0, 1} → Lit be a function transforming a state into a literal such that l(ai, 1) = ai and l(ai, 0) = ¬ai, The equation system modelling the stability condition while integrating the marking is then expressed as:

Θ= 
ai∈A

 ai ⇐⇒ fδai ∧ 
aj ∈M

l(aj, sα[aj]),	(3)

For the example according to the marking a1 = 1, a2 = 0, the formula is:
a1  ⇐⇒  ¬δ2,1 ∧ ¬δ3,1 ∧ ⎫
a2  ⇐⇒ ¬δ1,2	∧	Equilibrium

Θ= 
a3 ⇐⇒ δ2,3 ∨ δ1,3	∧
⎪⎪⎭

a1 ∧ ¬a2	, Marking
Definition of the theory Φ.
The theory formalizes the condition governing the propagation of value through arcs viewed as pipes. Basically, an arc propagates the value of the state variable unless the arc is deleted leading to set the arc variable to 0. Table 1 summarizes the different situations that could arise between a state and an arc variable of the same arc. This defines the truth table of the following formula: δi,j =⇒ ai that characterizes the admissible conditions between input and output for arc ai  aj. Hence, the generalization of this condition to all state variables defines the theory Φ.

Φ=	 
aj ∈A,ai∈Vfaj
(δi,j =⇒ ai)	(4)



Table 1
Situations of value propagation.

For the example, we have:
Φ= (δ1,2 =⇒ a1) ∧ (δ1,3 =⇒ a1) ∧
(δ2,1 =⇒ a2) ∧ (δ2,3 =⇒ a2) ∧ (δ3,1 =⇒ a3).

Given an implicant which is solution (hypothesis) of the problem, the negative arc variables of this implicant will correspond to the AA-consistent deleted arcs, ie.,
¬δi,j corresponds to the deletion of arc ai  aj (Lemma 3.3).
Definition of the core.
It is worth noting that some deletions may be needless since the state variables are already set to 0. However, in a core only the essential deletions must be kept.

They correspond to the situations of true deletions where the state variable is 1 and the arc variable must be set to 0 to comply to marking condition at equilibrium. Let C1 be an implicant such that C1 ∧ Φ |= Θ, we define CΔ the sub-cube of C1 containing all the negative arc variables that correspond to deleted arcs. The set of arcs Δ corresponding to the negative arc variables of CΔ is a core if and only if there does not exist another prime implicant C2 such that CΔ absorbs CΔ. In other
2	1
words, a core is constructively defined from a prime implicant with the minimal set
of negative arc variables under the inclusion compared to other prime implicants. Theorem 5.1 (In Appendix) proves the correctness, a core is always deduced from a prime implicant, and the completeness, for any core we can find a prime implicant, of the core. For the example, two prime implicants exist:

C1 = ¬a2 ∧ ¬a3 ∧ δ1,2 ∧ ¬δ1,3,
C2 = ¬a2 ∧ a3 ∧ δ1,2 ∧ δ1,3 ∧ ¬δ3,1.

As they are both minimal with respect to the inclusion of negative arcs variables, they designate two cores: c1 = {a1  a3} and c2 = {a3  a1}. Figure 2 shows the application of deletion of the core c1 to reach the marking {a1 = 1, a2 = 0}.
Lemma 3.3 The correctness (1) and completeness(2) properties of the abductive inference of network actions hold:
an implicant C complying to C ∧ Φ |=Θ implies the existence an AA-consistent set of arcs Δ which is constructively deﬁned from C;
conversely, an AA-consistent set of arcs Δ implies the existence of an implicant
C complying to C ∧ Φ |=Θ which is constructively deﬁned from Δ.

⎧⎪⎪⎨ a1 = ¬a2 ∧ ¬a3

Fc1 =
a2 = ¬a1
⎪⎪⎩ a3 = a2 ∨ 0




Fig. 2. From left to right: Boolean network Fc1 , its model of dynamics with a new stable state 100 containing the marking (a1 = 1, a2 = 0) and the associated interaction graph.


Experimental Brute force/Abductive methods time comparison
The computational time of the formula generation for facts and theory is linear in the number of arcs because it depends on the occurrence of variables in each formula of the Boolean network. Therefore, the complexity of the algorithm depends on the computation of the prime implicants which is known as an NP-Hard problem. The first algorithm finding prime implicants was proposed by Quine [27] in 1959


sec. (Log)






100




10




1




0.10




0.01

# agents
3	4	5	6	7	8	9	10

Fig. 3. Time comparison between brute force and abductive method: the curves report the mean time on a logarithmic scale of 20 tests for each size for the both methods. For each sequence of tests associated to a size, the minimal and the maximal time values were removed. The Boolean networks have been randomly generated while complying to scale-free topology for their interaction graph. The experiments have been performed on a HP ZBook 15 Quad Core (4 2.8 Ghz-Core i7 processors with 16 Go of memory).

and recent algorithms effectively improved the method by using binary decision diagram, SAT-based algorithm, or integer linear 0-1 programming [28,30,17,25].
Figure 3 shows the comparison in time between the brute force and the abduc- tive method by considering two agents as markers for random monotonous Boolean networks of different size with a scale-free interaction graph. The prototype was developed in Mathematica [36] based on the function computing the minimal dis- junctive normal form for prime implicants finding. To speed-up the brute force method, the selection of AA-consistent arc sets that are candidates for being a core is computed in parallel.
The experiments confirms the effectiveness of the abductive method. Indeed, the gain factor in time (GFT = Brute force method time/Abductive method time) grows exponentially with the number of agents until reaching an order of 104 for 10 agents (Figure 3).

Network action target inference in breast cancer
The rational of targeted therapies is to specifically kill cancerous cells while pre- serving normal cells by the identification of drug targets that are essential for the viability of cancer cells. Synthetic lethality illustrates the problem of identification of drug targets based on network dynamics: two genes are said synthetic lethal if a mutation leading to the loss of either gene alone is compatible with viability but mutations in both genes lead to cell death [13]. Therefore, the inhibition of a syn- thetic lethal gene specifically kills the cancer cell carrying the mutation in the other gene [8]. The discovery of drug targets based on the synthetic lethality concept is mainly driven by the functionality of the cancerous cell. More specifically, the

objective is to identify “functional” targets that will trigger cancer cell death due to the network fragility induced by the mutation rather than to directly identify the targets of mutations.
In breast cancer, the synthetic lethal partners are the BRCA/PARP pair. During cell division, when errors occur while the DNA is replicated, the cell triggers DNA repair processes. BRCA and PARP are essential molecules activated in response to DNA damage and involved in two complementary DNA repair pathways. In cancer cell with BRCA-deficiency, the use of PARP inhibitors prevents any possibility of DNA-repair resulting in permanent DNA damage inducing apoptosis [8,15].




CycD1





Fig. 4. Interaction graph of the synthetic lethality Boolean model
The Boolean model is focused on the switch between division and apoptosis pro- cesses. Two markers are used to qualify these physiological states: Cyclin D1 and Bax, which are respectively the effector of the G1/S transition of the cell cycle [3] and the effector of the intrinsic pathway of apoptosis [11]. These two markers were chosen because their expression are frequently altered in breast cancer cell [29,14,22]. Thus their state profiles can be validly assimilated to signatures distinguishing can- cerous state to health state. When considering a cell with DNA damage, a cancerous state is interpreted as a cell continuing to divide and unable to trigger apoptosis and a healthy state is considered as an apoptotic, non dividing cell. The interac- tion graph of apoptosis/division control is shown in Figure 4 and the facts driving its construction are detailed in Appendix. The Boolean network is built from the following statements:
As we consider a normal cell under DNA damage stress, in these cells wild-type BRCA and PARP genes are activated [15], thus we set both nodes to True to force the activation.
Mdm2 gene transcription is activated by nuclear p53, moreover Akt is necessary for Mdm2 to be translocated into the nucleus where it binds p53, hence both molecules are required for Mdm2 activity logically modelled by and [19].
p53 activity is regulated in two ways by Mdm2: the binding of Mdm2 to p53 blocks p53 transcriptional activity and Mdm2 exports p53 to the cytoplasm and targets it for proteasomal degradation [19], we thus consider that the absence of Mdm2 is a necessary condition for p53 activation. Moreover the complementary

Agents	Boolean Function
BRCA	True
PARP	True
PI3K	¬PTEN
Akt	PI3K
Mdm2	Akt∧p53
GSK3	¬Akt
p53	¬Mdm2∧(BRCA1∨ ¬PARP) PTEN	p53
Bax	¬Akt∧p53
CycD1	¬GSK3β ∨(¬BRCA1∧PARP)
Table 2
Boolean model of synthetic lethality

role of PARP and BRCA in DNA repair explained above is described by an or. Notice that the action of PARP in DNA repair induces the inhibition of p53.
Bax gene transcription is directly activated by p53 [34] and its translocation to its active site (mitochondria) is blocked by the PI3K/Akt pathway [35], we thus consider that the absence of Akt is a necessary condition for Bax activation (and).
Cyclin D1 degradation is regulated both dependently and independently of GSK3 levels (OR) [2]. Moreover, as PARP and BRCA have the opposite action on DNA repair than they have on division, we modeled their action on Cyclin D1 by the negation of their action on p53.
We applied the method to the discovery of the synthetic lethal partner of BRCA. For this we first considered a cancerous state where BRCA is mutated. As BRCA mutation causes the complete loss of the gene in the cancerous cell, BRCA was isolated from the network by deleting all its arcs. The corresponding dynamics is characterized by a single stable state given in Table 3, and interpreted as a state of proliferation of the cell while DNA is damaged (Cyclin D1 is active and Bax is inactive). As stated in Section 3, the objective is to determine the arc actions

Table 3
Stable state associated to the cancerous state

required to shift the dynamics to apoptosis where Cyclin D1 is inactive and Bax active (marking (CycD1= 0, Bax = 1)).

The core abductive inference method gives 15 prime implicants from which an unique core containing two arcs is deduced (cf., Table 5 in Appendix - computed in 0.016s.):
{PARP	+	CycD1, PARP	—	p53}.
These actions isolate the PARP node from the rest of the interaction graph, therefore identifying PARP as the synthetic lethal partner of BRCA.
Although the result must be confirmed on other applications, we may conclude in this context that the method has predicted non-trivial actions of drugs that defines the synthetic lethality mechanism for breast cancer. Moreover, from a more detailed analysis on the prime implicants, other conclusions might be formulated. For example, let us consider one of the found prime implicants:
C1 = ¬Akt ∧ Bax ∧ ¬Bcl2 ∧ BRCA1 ∧ ¬CycD1 ∧ ¬MDM2 ∧ PARP ∧ ¬PI3K ∧ δGSK3,CycD1 ∧ δp53,Bax ∧
δp53,PTEN ∧ δPTEN,PI3K ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53,

we deduce that four arcs (positive arc variables) must also be present to obtain the marking at equilibrium:
{GSK3	—	CycD1, p53	+	Bax, p53	+	PTEN, PTEN	—	PI3K}.
Actually only the arc variables of the first two arcs also occur in all the 15 prime implicants. Therefore, these two arcs must always be present to reach the marking of apoptosis at equilibrium whenever the arcs PARP + CycD1 and PARP — p53 are deleted.
The necessary presence of arcs seems interesting to relate to drug resistance mechanisms. Indeed, one possible resistance mechanism is the acquisition of in- sensitivity to drug-induced apoptosis [10] meaning here that the marking of the apoptosis is never attained which is the case when one of these two arcs is deleted. Interestingly, it has been found that pharmacological inhibition of GSK3 attenuates DNA damage-induced apoptosis by PARP inhibitors thus forbidding the synthetic lethality mechanism [23]. However, no facts were found confirming that p53 muta- tion would provide resistance to PARP inhibitors. This indicates that the results proposed by the abductive inference would go further the concept of cores, notably by providing insights for the prediction of acquired resistance to drugs from the necessary present arcs.
Conclusion
Complex diseases as cancer requires a systems biology approach to apprehend the multiplicity of molecular factors causing diseases. In this context, computational methods should play a central role to infer causes rationally viewed as molecular targets. In this paper, we have proposed an efficient method based on abductive inference to discover the network actions shifting the dynamics to an intended stable state and developed a prototype in Mathematica. The proof-of-concept has been demonstrated for synthetic lethality therefore opening perspectives for non-obvious therapy discovery based on computational dynamics network analysis. The method

considers arc deletion as action which is likely the most frequent actions associated to mutations [38] or drugs. The current implementation of the method enables the analysis for medium-sized networks.
A perspective is to extend the method by integrating arc addition. Basically, arc addition leads to incorporate a new variable in the formula of the target node. However, the possibilities on how to incorporate a variable in a formula remains vast in contrast to arc deletion that simply fixes a variable to 0. Therefore we need to identify a finite sets of logical patterns involving arc addition modelling genetic events. For instance, over-expression is usually modelled by a disjunction between the function describing the normal behaviour and an (arc) variable whose source is permanently fixed to 1 (ie., faj ∨ δover,j, over = 1). Although over-expression is a common consequence of mutations in cancer, the modelling of genetic event using arc addition will not probably be restricted to the over-expression pattern. Therefore, the modelling issue is to identity the typical logical patterns involving arc addition related to genetic mutations and more generally pathological events. Another issue is to tackle with the scalability of the method to infer actions for large networks.

References
Wassim Abou-Jaoud´e, Djomangan A. Ouattara, and Marcelle Kaufman. From structure to dynamics: frequency tuning in the p53-Mdm2 network i. logical approach. Journal of theoretical biology, 258(4):561–577, June 2009.
John P Alao. The regulation of cyclin d1 degradation: roles in cancer development and the potential for therapeutic invention. Molecular cancer, 6(1):1, 2007.
V Baldin, J Lukas, MJ Marcote, M Pagano, and G Draetta. Cyclin d1 is a nuclear protein required for cell cycle progression in g1. Genes & development, 7(5):812–821, 1993.
F Chang, JT Lee, PM Navolanic, LS Steelman, JG Shelton, WL Blalock, RA Franklin, and JA McCubrey. Involvement of pi3k/akt pathway in cell cycle progression, apoptosis, and neoplastic transformation: a target for cancer chemotherapy. Leukemia, 17(3):590–603, 2003.
Pau Creixell, Erwin M Schoof, Janine T Erler, and Rune Linding. Navigating cancer network attractors for tumor-specific therapy. Nature Biotechnology, 30(9):842–848, 2012.
Peter Csermely, Tam`as Korcsm`aros, Huba J M Kiss, G`abor London, and Ruth Nussinov. Structure and dynamics of molecular networks: A novel paradigm of drug discovery: A comprehensive review. Pharmacology and Therapeutics, 138(3):333–408, 2013.
Chu-Xia Deng. Brca1: cell cycle checkpoint, genetic instability, dna damage response and cancer evolution. Nucleic acids research, 34(5):1416–1426, 2006.
Hannah Farmer, Nuala McCabe, Christopher J Lord, Andrew NJ Tutt, Damian A Johnson, Tobias B Richardson, Manuela Santarosa, Krystyna J Dillon, Ian Hickson, Charlotte Knights, et al. Targeting the dna repair defect in brca mutant cells as a therapeutic strategy. Nature, 434(7035):917–921, 2005.
J B Gibbs. Mechanism-based target identification and drug discovery in cancer research. Science (New York, N.Y.), 287(5460):1969–1973, 2000.
Michael M Gottesman. Mechanisms of cancer drug resistance. Annual review of medicine, 53(1):615– 627, 2002.
Sudhir Gupta. Molecular signaling in death receptor and mitochondrial pathways of apoptosis (review).
International journal of oncology, 22(1):15–20, 2003.
Douglas Hanahan and Robert a. Weinberg. Hallmarks of cancer: The next generation. Cell, 144(5):646– 674, 2011.

William G. Kaelin. The concept of synthetic lethality in the context of anticancer therapy. Nature Reviews Cancer, 5(9):689–98, 2005.
S Krajewski, M Krajewska, BC Turner, C Pratt, B Howard, JM Zapata, V Frenkel, S Robertson, Y Ionov, H Yamamoto, et al. Prognostic significance of apoptosis regulators in breast cancer. Endocrine-Related Cancer, 6(1):29–40, 1999.
Luca Livraghi and Judy E Garber. Parp inhibitors in the management of breast cancer: current data and future prospects. BMC medicine, 13(1):1, 2015.
Maria Malanga, Jutta M Pleschke, Hanna E Kleczkowska, and Felix R Althaus. Poly (adp-ribose) binds to specific domains of p53 and alters its dna binding functions. Journal of Biological Chemistry, 273(19):11839–11843, 1998.
V.M. Manquinho, P.F. Flores, J.P.M. Silva, and A.L. Oliveira. Prime implicant computation using satisfiability algorithms. Proceedings Ninth IEEE International Conference on Tools with Artificial Intelligence, pages 232–239, 1997.
P Marquis. Extending abduction from propositional logic to first order logic. Lecture Notes in Artificial Intelligence, 535:141–155, 1991.
Lindsey D. Mayo and David B. Donner. The PTEN, Mdm2, p53 tumor suppressor-oncoprotein network.
Trends in Biochemical Sciences, 27(9):462–467, 2002.
Ute M Moll and Oleksi Petrenko. The mdm2-p53 interaction. Molecular Cancer Research, 1(14):1001– 1008, 2003.
PB Mullan, JE Quinn, and DP Harkin. The role of brca1 in transcriptional regulation and cell cycle control. Oncogene, 25(43):5854–5863, 2006.
Elizabeth A Musgrove, C Elizabeth Caldon, Jane Barraclough, Andrew Stone, and Robert L Sutherland. Cyclin d as a therapeutic target in cancer. Nature Reviews Cancer, 11(8):558–572, 2011.
Patchara Ngok-Ngam, Piyajit Watcharasit, Apinya Thiantanawat, and Jutamaad Satayavivad. Pharmacological inhibition of gsk3 attenuates dna damage-induced apoptosis via reduction of p53 mitochondrial translocation and bax oligomerization in neuroblastoma sh-sy5y cells. Cellular & molecular biology letters, 18(1):58–74, 2013.
Diana Nguyen, Maria Zajac-Kaye, Larry Rubinstein, Donna Voeller, Joseph E Tomaszewski, Shivaani Kummar, Alice P Chen, Yves Pommier, James H Doroshow, and Sherry X Yang. Poly (adp-ribose) polymerase inhibition enhances p53-dependent and-independent dna damage responses induced by dna damaging agent. Cell Cycle, 10(23):4074–4082, 2011.
C. Pizzuti. Computing prime implicants by integer programming. In Proceedings Eighth IEEE International Conference on Tools with Artificial Intelligence, pages 332–336. IEEE Comput. Soc. Press, 1996.
Albert Pujol, Roberto Mosca, Judith Farr´es, and Patrick Aloy. Unveiling the role of network and systems biology in drug discovery. Trends in pharmacological sciences, 31(3):115–123, 2010.
WV Quine. On cores and prime implicants of truth functions. The American Mathematical Monthly, 66(9):755–760, 1959.
Anavai Ramesh, George Becker, and NV Murray. CNF and DNF considered harmful for computing prime implicants/implicates. Journal of Automated Reasoning, 698:337–356, 1997.
Pankaj G Roy and Alastair M Thompson. Cyclin d1 and breast cancer. The Breast, 15(6):718–727, 2006.
Laurent Simon and Alvaro Del Val. Efficient consequence finding. IJCAI International Joint Conference on Artificial Intelligence, pages 359–365, 2001.
V Stambolic, D MacPherson, D Sas, Y Lin, B Snow, Y Jang, S Benchimol, and TW Mak. Regulation of pten transcription by p53. Molecular cell, 8(2):317–325, 2001.
Mr Stratton, Pj Campbell, and Pa Futreal. The cancer genome. Nature, 458(7239):719–724, 2009.
Klaus Strebhardt and Axel Ullrich. Paul Ehrlich’s magic bullet concept: 100 years of progress. Nature reviews. Cancer, 8(6):473–80, jun 2008.
Miyashita Toshiyuki and John C Reed. Tumor suppressor p53 is a direct transcriptional activator of the human bax gene. Cell, 80(2):293 – 299, 1995.

Fuminori Tsuruta, Norihisa Masuyama, and Yukiko Gotoh. The phosphatidylinositol 3-kinase (pi3k)-akt pathway suppresses bax translocation to mitochondria. Journal of Biological Chemistry, 277(16):14040–14047, 2002.
Inc. Wolfram Research. Mathematica. Wolfram Research, Inc., version 10.4 edition, 2016.
Xiaoling Xu, Wenhui Qiao, Steven P Linke, Liu Cao, Wen-Mei Li, Priscilla A Furth, Curtis C Harris, and Chu-Xia Deng. Genetic interactions between tumor suppressors brca1 and p53 in apoptosis, cell cycle and tumorigenesis. Nature genetics, 28(3):266–271, 2001.
Quan Zhong, Nicolas Simonis, Qian-Ru Li, Benoit Charloteaux, Fabien Heuze, Niels Klitgord, Stanley Tam, Haiyuan Yu, Kavitha Venkatesan, Danny Mou, Venus Swearingen, Muhammed a Yildirim, Han Yan, Am´elie Dricot, David Szeto, Chenwei Lin, Tong Hao, Changyu Fan, Stuart Milstein, Denis Dupuy, Robert Brasseur, David E Hill, Michael E Cusick, and Marc Vidal. Edgetic perturbation models of human inherited disorders. Molecular systems biology, 5(321):321, 2009.
Andreas Ziegler, Armin Koch, Katja Krockenberger, and Anika Grosshennig. Personalized medicine using DNA biomarkers: A review. Human Genetics, 131(10):1627–1638, oct 2012.

Appendix
Exhaustive arc deletions with their actions


Deleted arc set	Fδ	Stable Eq.
a1 a2 a3


{a1	a3}	{a1 = ¬a2 ∧ ¬a3, a2 = ¬a1, a3 = a2}
1 0 0 
0 1 1 

{a2	a1}	{a1 = ¬a3, a2 = ¬a1, a3 = a2 ∨ a1}	0 1 1 

{a3	a1}	{a1 = ¬a2, a2 = ¬a1, a3 = a2 ∨ a1}
1 0 1 
0 1 1 

{a1	a2, a1	a3}	{a1 = ¬a2 ∧ ¬a3, a2 = 1, a3 = a2}	0 1 1 
{a1	a2, a2	a1}	{a1 = ¬a3, a2 = 1, a3 = a2 ∨ a1}	0 1 1 
{a1	a2, a2	a3}	{a1 = ¬a2 ∧ ¬a3, a2 = 1, a3 = a1}	0 1 0 
{a1	a2, a3	a1}	{a1 = ¬a2, a2 = 1, a3 = a2 ∨ a1}	0 1 1 
1 0 0 

{a1	a3, a2	a1}	{a1 = ¬a3, a2 = ¬a1, a3 = a2}

{a1	a3, a2	a3}	{a1 = ¬a2 ∧ ¬a3, a2 = ¬a1, a3 = 0}

{a1	a3, a3	a1}	{a1 = ¬a2, a2 = ¬a1, a3 = a2}
0 1 1 
1 0 0 
0 1 0 
1 0 0 
0 1 1 



{a2	a1, a2	a3}	{a1 = ¬a3, a2 = ¬a1, a3 = a1}	-


{a2	a3, a3	a1}	{a1 = ¬a2, a2 = ¬a1, a3 = a1}
1 0 1 
0 1 0 

{a1	a2, a1	a3, a2	a1}	{a1 = ¬a3, a2 = 1, a3 = a2}	0 1 1 
{a1	a2, a1	a3, a2	a3}	{a1 = ¬a2 ∧ ¬a3, a2 = 1, a3 = 0}	0 1 0 
{a1	a2, a1	a3, a3	a1}	{a1 = ¬a2, a2 = 1, a3 = a2}	0 1 1 
{a1	a2, a2	a1, a2	a3}	{a1 = ¬a3, a2 = 1, a3 = a1}	-
{a1	a2, a2	a1, a3	a1}	{a1 = 1, a2 = 1, a3 = a2 ∨ a1}	1 1 1 
{a1	a2, a2	a3, a3	a1}	{a1 = ¬a2, a2 = 1, a3 = a1}	0 1 0 
{a1	a3, a2	a1, a2	a3}	{a1 = ¬a3, a2 = ¬a1, a3 = 0}	1 0 0 
{a1	a3, a2	a1, a3	a1}	{a1 = 1, a2 = ¬a1, a3 = a2}	1 0 0 
1 0 0 

{a1	a3, a2	a3, a3	a1}	{a1 = ¬a2, a2 = ¬a1, a3 = 0}
0 1 0 

{a2	a1, a2	a3, a3	a1}	{a1 = 1, a2 = ¬a1, a3 = a1}	1 0 1 
{a1	a2, a1	a3, a2	a1, a2	a3}{a1 = ¬a3, a2 = 1, a3 = 0}	1 1 0 
{a1	a2, a1	a3, a2	a1, a3	a1}{a1 = 1, a2 = 1, a3 = a2}	1 1 1 
{a1	a2, a1	a3, a2	a3, a3	a1}{a1 = ¬a2, a2 = 1, a3 = 0}	0 1 0 
{a1	a2, a2	a1, a2	a3, a3	a1}{a1 = 1, a2 = 1, a3 = a1}	1 1 1 
{a1	a3, a2	a1, a2	a3, a3	a1}{a1 = 1, a2 = ¬a1, a3 = 0}	1 0 0 

{a1  a2, a1  a3, a2  a1,
{a  = 1,a  = 1,a  = 0}	1 1 0 

1	2	3
Table 4
Exhaustive deletion of arcs associated to their action on network and stable states for Example 1.

Prime implicants computed for Breast cancer case study

C1  = ¬Akt ∧ Bax ∧ ¬Bcl2 ∧ BRCA1 ∧ ¬CycD1 ∧ ¬MDM2 ∧ PARP ∧ ¬PI3K ∧ δGSK3,CycD1 ∧ δp53,Bax ∧
δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPTEN,PI3K
C2 = ¬Akt ∧ Bax ∧ ¬Bcl2 ∧ BRCA1 ∧ ¬CycD1 ∧ ¬MDM2 ∧ PARP ∧ PI3K ∧ ¬PTEN ∧ δGSK3,CycD1 ∧
δp53,Bax ∧ ¬δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ ¬δPI3K,Akt
C3 = ¬Akt ∧ Bax ∧ ¬Bcl2 ∧ BRCA1 ∧ ¬CycD1 ∧ ¬MDM2 ∧ PARP ∧ PI3K ∧ PTEN ∧ δGSK3,CycD1 ∧
δp53,Bax ∧ δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ ¬δPI3K,Akt ∧ ¬δPTEN,PI3K
C4  = Akt ∧ Bax ∧ ¬Bcl2 ∧ BRCA1 ∧ ¬CycD1 ∧ ¬MDM2 ∧ PARP ∧ ¬PTEN ∧ ¬δAkt,Bcl2 ∧ ¬δAkt,GSK3 ∧
¬δAkt,MDM2 ∧ δGSK3,CycD1 ∧ δp53,Bax ∧ ¬δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPI3K,Akt C5  = Bax∧Bcl2∧BRCA1∧¬CycD1∧¬MDM2∧PARP∧¬PTEN∧δAkt,Bcl2∧¬δAkt,GSK3∧¬δAkt,MDM2∧
¬δBcl2,Bax ∧ δGSK3,CycD1 ∧ δp53,Bax ∧ ¬δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPI3K,Akt C6  = Bax∧Bcl2∧BRCA1∧¬CycD1∧¬MDM2∧PARP∧¬PTEN∧δAkt,Bcl2 ∧¬δAkt,GSK3 ∧¬δBcl2,Bax ∧
δGSK3,CycD1 ∧ δp53,Bax ∧ ¬δp53,MDM2 ∧ ¬δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPI3K,Akt C7 = Bax ∧ ¬Bcl2 ∧ BRCA1 ∧ ¬CycD1 ∧ ¬MDM2 ∧ PARP ∧ ¬PTEN ∧ ¬δAkt,Bcl2 ∧ ¬δAkt,GSK3 ∧ δAkt,MDM2 ∧ δGSK3,CycD1 ∧ δp53,Bax ∧¬δp53,MDM2 ∧¬δp53,PTEN ∧¬δPARP,CycD1 ∧¬δPARP,p53 ∧
δPI3K,Akt
C8  = Akt ∧ Bax ∧ ¬Bcl2 ∧ BRCA1 ∧ ¬CycD1 ∧ ¬MDM2 ∧ PARP ∧ PTEN ∧ ¬δAkt,Bcl2 ∧ ¬δAkt,GSK3 ∧
¬δAkt,MDM2 ∧ δGSK3,CycD1 ∧ δp53,Bax ∧ δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPI3K,Akt ∧
¬δPTEN,PI3K
C9 = Bax∧Bcl2∧BRCA1∧¬CycD1∧¬MDM2∧PARP∧PTEN∧δAkt,Bcl2 ∧¬δAkt,GSK3 ∧¬δAkt,MDM2 ∧
¬δBcl2,Bax ∧ δGSK3,CycD1 ∧ δp53,Bax ∧ δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPI3K,Akt ∧
¬δPTEN,PI3K
C10 = Bax ∧ Bcl2 ∧ BRCA1 ∧¬CycD1 ∧¬MDM2 ∧ PARP ∧ PTEN ∧ δAkt,Bcl2 ∧¬δAkt,GSK3 ∧¬δBcl2,Bax ∧
δGSK3,CycD1 ∧ δp53,Bax ∧ ¬δp53,MDM2 ∧ δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPI3K,Akt ∧
¬δPTEN,PI3K
C11 = Bax ∧ ¬Bcl2 ∧ BRCA1 ∧ ¬CycD1 ∧ MDM2 ∧ PARP ∧ ¬PTEN ∧ ¬δAkt,Bcl2 ∧ ¬δAkt,GSK3 ∧
δAkt,MDM2 ∧ δGSK3,CycD1 ∧ ¬δMDM2,p53 ∧ δp53,Bax ∧ δp53,MDM2 ∧ ¬δp53,PTEN ∧ ¬δPARP,CycD1 ∧
¬δPARP,p53 ∧ δPI3K,Akt
C12 = Bax∧¬Bcl2∧BRCA1∧¬CycD1∧¬MDM2∧PARP∧PTEN∧¬δAkt,Bcl2∧¬δAkt,GSK3∧δAkt,MDM2∧
δGSK3,CycD1 ∧ δp53,Bax ∧ ¬δp53,MDM2 ∧ δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPI3K,Akt ∧
¬δPTEN,PI3K
C13 = Bax∧Bcl2∧BRCA1∧¬CycD1∧MDM2∧PARP∧¬PTEN∧δAkt,Bcl2 ∧¬δAkt,GSK3 ∧δAkt,MDM2 ∧
¬δBcl2,Bax ∧ δGSK3,CycD1 ∧ ¬δMDM2,p53 ∧ δp53,Bax ∧ δp53,MDM2 ∧ ¬δp53,PTEN ∧ ¬δPARP,CycD1 ∧
¬δPARP,p53 ∧ δPI3K,Akt
C14 = Bax∧¬Bcl2∧BRCA1∧¬CycD1∧MDM2∧PARP∧PTEN∧¬δAkt,Bcl2 ∧¬δAkt,GSK3 ∧δAkt,MDM2 ∧ δGSK3,CycD1 ∧ ¬δMDM2,p53 ∧ δp53,Bax ∧ δp53,MDM2 ∧ δp53,PTEN ∧ ¬δPARP,CycD1 ∧ ¬δPARP,p53 ∧ δPI3K,Akt ∧ ¬δPTEN,PI3K
C15 = Bax ∧ Bcl2 ∧ BRCA1 ∧¬CycD1 ∧ MDM2 ∧ PARP ∧ PTEN ∧ δAkt,Bcl2 ∧¬δAkt,GSK3 ∧ δAkt,MDM2 ∧
¬δBcl2,Bax ∧ δGSK3,CycD1 ∧ ¬δMDM2,p53 ∧ δp53,Bax ∧ δp53,MDM2 ∧ δp53,PTEN ∧ ¬δPARP,CycD1 ∧
¬δPARP,p53 ∧ δPI3K,Akt ∧ ¬δPTEN,PI3K


Table 5
Prime implicants computed for synthetic lethality case study in Breast cancer

Explanation of the interaction graph
The interaction graph (Figure 4) was built from the following observations:
BRCA1 increases Bax transcription through p53 activation [21,37] corresponding to an activation pathway between BRCA1, p53 and Bax;
BRCA1 provokes cell cycle arrest at the G1/S transition checkpoint [21,7] de- scribed as an inhibitory interaction between BRCA1 and Cyclin D1;
PARP is known to interfere with p53 function [16,24] by the inhibition of its expression;
PARP inhibition induces cell cycle arrest suggesting that PARP activates cell

cycle transitions [24] which is interpreted as an activation of Cyclin D1 by PARP;
the level of p53 is regulated by Mdm2 through a negative feedback circuit, mod- eled by the inhibition of p53 by Mdm2 and the activation of Mdm2 by p53 [1,20];
p53 is also involved in a negative loop with the PI3K/Akt pathway by the acti- vation of PTEN and Mdm2 is activated by the PI3K/Akt pathway [19,31];
the PI3K/Akt pathway prevents apoptosis and promotes cell survival by inhibit- ing Bax [4,35] and activates cell cycle progression through the inhibition of GSK3, an inhibitor of Cyclin D1 [4].

Proofs of the completeness and the correction of the method
For the proofs we adopt the following notations:
the set of arc variables is Vδ we range over by δi,j;
a cube C will be treated as a set of literals when needed;
C is the set of cubes using literals from A and Vδ;
let C ∈ C, we denote CΔ = {δi,j ∈ Vδ|¬δi,j ∈ C}, the sub-cube reduced to negative arc variables.
a|b denotes the substitution of a by b in a formula (ie., f [a|b]).
δi denotes the set ai output arc variables.
For the sake of notations arcs are identified to arc variables and conversely.
Lemma 3.3 proves the correction and the completeness related to the set of arcs AA-consistent and the implicant, namely: for each implicant C complying to C ∧ Φ |= Θ, we are able to deduce an AA-consistent set of arcs and conversely. Theorem 5.1 proves the correction and the completeness of the algorithm finding the cores from implicants C complying to C ∧ Φ |= Θ.
Proof. Lemma 3.3. Let F be a Boolean network and sα[M ] a marking state, the correctness (1) and completeness(2) properties hold:
an implicant C complying to C ∧ Φ |= Θ implies the existence of an AA- consistent set of arcs Δ which is constructively defined from C:
∀C ∈C : C ∧ Φ |=Θ =⇒ ∃Δ ⊆ Vδ, ∃s ∈ S : F(Δ)(s)= s ∧ s[M ]= sα[M ]
conversely, an AA-consistent set of arcs Δ implies the existence an implicant
C complying to C ∧ Φ |= Θ which is constructively defined from Δ:
∀Δ ⊆ Vδ : (∃s ∈ S : FΔ(s)= s ∧ s[M ]= sα[M ]) =⇒
 ∃C ∈C :Δ ⊆ CΔ ∧ (C ∧ Φ |= Θ) 

(Correctness) Let C a cube s.t. (C ∧ Φ) |= Θ. Since by hypothesis, Φ ∧ Θ is satisfiable, then there exists a model I : Vδ → {0, 1} of C ∧ Φ such that (I |= Θ). Let we consider an interpretation I |= C ∧ Φ:
By definition of Θ we deduce that:

( =⇒ ) ∀aj ∈ A : I[aj]= faj ai | δi,j | I[δi,j] ai∈A ∧ I[M ]= sα[M ] ( ⇐⇒ ) ∀aj ∈ A : I[aj]= faj ai | I[δi;j] ai∈A ∧ I[M ]= sα[M ]
Let ΔI = {δi,j|I[δi,j]= 0} be the set of arc variables assigned 0 by I, we have: ( ⇐⇒ ) ∀aj ∈ A : I(aj)= faj ai | 0 δi,j∈ΔI ak | I[δk,j] δk,j Uδ\ΔI ∧ I[M ]= sα[M ]
Since ∀δi,j ∈ Vδ : I[δi,j] =⇒ I[ai] by definition of Φ and I |=Φ then we have:
∀δi,j ∈ Vδ \ ΔI : I[δi,j]= I[ai]=1	(5) By equation 5 we have then
∀ai ∈ A : I(ai)= fai aj | 0 δj,i∈ΔI ak | I[ak] δkiUδ\ΔI ) ∧ I[M ]= sα[M ]	(6) Consider now Fj s.t:

∀ai ∈ A : fj
= fai aj | (aj ∧ δj,i) 

aj ∈A

( ⇐⇒ ) ∀ai ∈ A : Fj(I)[ai]= fj (I)= fa aj | (I[aj] ∧ I[δj,i]) 

ai	i
Since I |= C ∧ Φ we have:
δj,i∈Uδ


(I |= C ∧ Φ) ⇐⇒ ∀δi,j ∈ Vδ : (I[δi,j] ∧ I[ai]) ⇐⇒ I[δi,j]	(7)
( ⇐⇒ ) ∀ai ∈ A : Fj(I)[ai]= fj (I)= fa aj | I[δj,i])	= I[ai]

ai	i
Again by equation 5 we have:
δj,i∈Uδ

( ⇐⇒ )∀ai ∈ A : Fj(I[A])[ai] = fj (I[A]) = fa aj | 0	 ak | I[ak]	=

Fj(I[A]) = I[ai]
ai	i
δj,i∈ΔI
ak∈A


Let Δ = ΔI and s = I[A], we have then :
∃Δ ⊆ Vδ, ∃s : A =⇒ {0, 1} : ∀ai ∈ A : Fj(s)[ai]= FΔ(s)[ai]= I[ai]
( ⇐⇒ ) ∃Δ ⊆ Vδ, ∃s : A =⇒ {0, 1} : FΔ(s)= s ∧ s[M ]= sα[M ] Which concludes the fact that Δ is AA-consistent.
(Completeness) Let we consider an AA-consistent solution Δ. ( ⇐⇒ ) ∃s : F(Δ)(s)= s ∧ s[M ]= sα[M ]
We define Δ0 = {aij ∈ A|s[ai]=0 ∧ δi,j /∈ Δ} and s0 = {ai ∈ A|s[ai]= 0}
Since the variable source of each aij ∈ Δ0 is equal to 0 then cutting them will not disturb the steadiness of s ie., F(Δ′=Δ∪Δ0)(s)= s


Let C be a cube with C =
δi,j ∈Δ′
¬δi,j	¬a
a∈s0

We construct the set of interpretation I s.t I ∈I iff:
I(a)= s[a] (a ∈ M ∪ s0)
I(δi,j)=0 (δi,j ∈ Δj)
It is obvious that for all I ∈ I we have I |= C. Since ∀a ∈ A \ s0 : s[a]=1 we have then:


∃!I∗ ∈I : I∗ |= C ∧ Φ ∧ ∀a ∈ A \ (s0 ∪ M ),δ ∈ Vδ \ Δj : I∗[a]= I∗[δ]=1	(8) We prove here after that I∗ is also a model for Θ.

∀ai ∈ A : fa aj | δj,i | I∗(δj,i) 

aj ∈A
= fai aj | 0 

δj,i∈Δ
′ ak | 1 

δkiUδ\Δ′

By equation 8 we deduce :

∀ai ∈ V : fai aj | 0 

δj,i∈Δ
′ ak | s[ak] 

δki/∈Δ
′ = fa Δ′ (s)= s[ai]= I∗(ai)

Since s[M ] = sα[M ] = I∗[M ] we conclude that I∗ |= Θ and that C ∧ Φ |= Θ which establish the completeness.	2

In the following, we will define a method to find the prime implicants that minimize the number of negative arc variables. Let we consider two Cubes C1 and C2:
C1 absorbs C2 if and only if C1 ⊆ C2
A consensus is possible between C1 and C2 if and only if:
|C1 \ (C1 ∩ C2)| = |C2 \ (C1 ∩ C2)| =1 ∧ (C1 \ (C1 ∩ C2)) = ¬(C2 \ (C1 ∩ C2)).
The consensus is (C1 ∩ C2).
In the sequel, we denote by the pair (Cv, Cv) a consensus on variable v, where
1	2
v can be an arc or a state variable.
Let C = {C|C ∈ DNF (Φ =⇒ Θ)} a set of cubes of the DNF forms of Φ =⇒ Θ (note that each C is an implicant).
The Mc-Quines approach to compute the set of prime implicants consist in two steps :
Step 1. Removing the subsumed implicant from C.
Step 2. Add to C all the possible consensus and repeat Step 1. If no consensus is added then stop.
The resulted set of cubes constitutes what we call the prime implicants. Each prime implicant C may contain three types of literals :
Positive arc literals representing the kept arcs;
Negative arc literals representing the deleted arcs;
State variables giving the value of the agent in the equilibrium containing the marking.
Let us remark that any cube including literals not belonging to C is still an implicant (if consistent with φ).
The method is based on the following consideration: assume that there exists two prime implicants C1 and C2 such that there is a consensus between two pairs of
sub-cubes (Cai , Cai ) and (Cδi,j , Cδi,j ) respectively denoting a consensus on a state
1	2	1	2
variable ai and an arc variable δi,j. Therefore, no consensus exists between C1 and

C2 by definition of consensus. Let δi,j and ai be the variables concerned by the consensus, by construction of the implicants and by considering the consensus on these variables, we deduce that one implicants necessary contains positive literals C1 and the other one contains negative literals C2. Indeed, the situation where one of these implicants contains ¬δi,j and ai is impossible. By considering the minimality of the number of negative arc literals with respect to the theory Φ, the occurrence of ¬δi,j is the sole condition justifying the arc deletion. Thus, as we are interested in finding the minimum set of arcs to delete, C1 must be chosen.
Hence, driven by the goal of finding the minimal set of deleted arcs, we ignore the implicant containing the negative arc and variable literals when a consensus exists on these variables for two prime implicants. Note that this statement is only related to the specificity of our modelling and it is not true in general. Hence, in the remaining prime implicants, the occurrence of a negative arc variable ¬δi,j is necessary associated to the occurrence of the related positive state variable ai.
Let P be set of prime implicants, we construct the set of cubes with minimal number of negative arc variables, P— as follow :
(step 1) P— = {CΔ|C ∈ P}
(step 2) P— = {CΔ ∈ P—|∄Cj— ∈ P— : Cj— ⊆ CΔ}
Theorem 5.1 Let P be the set of prime implicants w.r.t. F and sα abduction problem, then set P— is the set of all cores.
Proof. Theorem 5.1. For any state s ∈ S we denote by Vx(s) the set of variables where s[ai]= x ie., Vx(s)= {ai|s[ai]= x}.
( =⇒ ) Let p be a core and σ be a state that respects the marking while |V0(σ)|
is a maximum, ie., : 
FP (σ)= σ
σ[M ]= sα[M ]
∀s ∈ S : eqFP (s) ∧ s[M ]= sα[M ] =⇒ |V0(σ)|≥ |V0(s)|
We define a cube C as follow:
p ⊆ C
∀ai ∈ V1(σ): δi ⊆ p =⇒ ai ∈ C
∀ai ∈ V1(σ): δi /⊆ p =⇒ (∃!δik ∈ δi \ p : δik ∈ C)
∀a ∈ V0(σ): ¬a ∈ C
First it is obvious that C is an implicant. We show now that C is a prime implicant. Thus, we show that each Cj ⊆ C is not an implicant. Let Cj be a cube resulting from the removal of a literal in C and assume that Cj is an implicant:
Removing a negative arc variable (ie., Cj = C \ {¬δi,j}) Let consider the in- terpretation I s.t. I(Vδ \ p) = 1 and I |= C ∧ Φ. Let Ij = I except for δi,j, we distinguish :
I[ai]=0 =⇒ Ij /|=Φ 

I[ai]=1 =⇒ Ij |=Φ ∧ Ij |=Θ this means that:
∀s ∈ S : eqFP (s) ∧ s[M ]= sα[M ] ∧ s[ai]=0 =⇒ ¬eqFp\δ  (s)
∀s ∈ S : eqFP (s) ∧ s[M ]= sα[M ] ∧ s[ai]=1 =⇒ eqFp\δ  (s) We have then, two possibilities :
∀s ∈ S : eq	(s) =⇒ ¬eq	(s), in this case Cj is not an impliquant which
P	p\δi,j
contradict the hypothesis.
∃s ∈ S : eqF	(s) ∧ s[M ] = sα[M ], in this we have p \ δi,j AA-consistent
i,j
which contradict the fact that p is a core.
Removing a positive arc (ie., Cj = C \ {δi,j}) δi,j is in C because σ[ai] = 1. Removing δi,j implies that there is a model assigning 0 to each arc in δi and also 0 to ai. if Cj is an implicant then the state s s.t. s[ai] and s[A\{ai}]= σ[A\{ai}]. This means s = σ which is a contradiction since s[ai] /= σ[ai].
Removing a positive variable (ie., Cj = C \ {ai}) The same argument as in the previous case leads to the contradiction that σ is not the state maximising the number of 0 which is a contradiction.
Removing a negative variable (ie., Cj = C \{ ¬ai}) Let consider two inter- pretations: I1 and I2 s.t.:
I1 |= (Cj ∧ Φ) and I2 |= (Cj ∧ Φ)
I1(ai)= 1, I2(ai)=0 
∀δ ∈ δi : I1(δ)= I2(δ)=0 
∀v ∈ (Vδ ∪ A) \ ({ai}∪ δi)I1(v)= I2(v)
Note that both interpretations differ only in ai. Now consider Δ = p ∪ δi faiΔ(I1[A]) = I1[ai]=0 and faiΔ(I2[A]) = I2[ai] = 1, this means that fai Δ = ai. The variable ai depends only on itself. As δi ⊆ Δ, we deduce that I2 /|= Θ by definition of fa Δ = 0. Thus, Cj is not an implicant which concludes that C is a
prime implicant.
By (step 2) we have p ∈ P—.
( ⇐= ) From Lemma 3.3 we deduce that each p ∈ P— is an AA-consistent solution. Then, we have to show that p is minimal. Assume that p is not minimal and that there exists some pj ⊆ p s.t. pj is AA-consistent and minimal. We can use the same construction of a prime implicant from the state that maximizes the zeros as in ( =⇒ ). The resulted prime implicant will only contain pj as negative arcs. So by (step 2) p /∈ P—, which is a contradiction.
2
