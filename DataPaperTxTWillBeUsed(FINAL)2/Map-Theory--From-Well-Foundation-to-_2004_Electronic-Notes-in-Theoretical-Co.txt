Electronic Notes in Theoretical Computer Science 73 (2004) 217–245 
www.elsevier.com/locate/entcs


Map Theory: From
Well-Foundation to Antifoundation
Thierry Vall´ee1 ,2
Computer Sciences University College Cork Cork, Ireland

Abstract
Map Theory is a powerful extension of type-free lamba-calculus (with only a few term constants added). Due to Klaus Grue, it was designed to be a common foundation for Computer Sciences and for Mathematics. All the primitive notions of first-order logic and set theory, including truth values, connectives and quantifiers, set-membership and set-equality, are interpreted as terms. All the usual set-theoretic constructs, including inductive data-types, get computational interpretations.
Now, Grue’s version of Map Theory is founded, in the sense that it only considers mathematical sets or classes which are well-founded with respect to the membership relation. In [19], we have shown that it was possible to design an alternative version which takes non-well-founded sets into account, and allows for co-inductive reasoning over them. This new version opens the way to a direct representation of co-inductive data-types and of circular processes and phenomena in Map Theory.
In this article, we give parallel presentations of the two versions of Map Theory and of their relations with ZFC. We also give a flavor of the proofs of their relative consistency with respect to the existence of a strongly inaccessible cardinal. These proofs take place inside the κ-continuous semantics, which is an extension of Scott’s continuous semantics (where κ = ω) to any regular cardinal κ.
Keywords: Map Theory, Antifoundation, Coinduction, Untyped λ-calculus, Set Theory,
κ-Continuous Semantics, Bisimulations






1 Supported by a postdoc grant of the dept. of Mathematics and Computer Sciences of the University of Udine, Italy.
2 Email: tv1@cs.ucc.ie


1571-0661 © 2004 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2004.08.010

Contents

Introduction
Well-founded Map Theory
The untyped λ-calculus is widely used in computer science, in particular for the theory of functional programming languages. It is the consistent part of the original system introduced by Church [3] [4] in order to be both a theory of computability and a foundation for mathematics (with function and application as primitive notions).
Coming back to Church’s foundational intention, Klaus Grue designed in
[9] an equational extension of the untyped λ-calculus, called Map Theory, and showed that it is at least as powerful as ZFC + F A, where FA denotes the


usual foundation axiom. The consistency of the theory w.r.t ZFC +SI, where SI is the axiom asserting the existence of a strongly inaccessible cardinal, is proved in [2].

Antifounded Map Theory
However, Grue’s theory, which will be denoted by MTF in this paper, does not take into account non-well-founded sets. During the last fifteen years, one could observe a growing interest in antifoundation in set theory. This interest is mainly motivated by some developments in computer sciences. Indeed, in this area, many objects and phenomena do have non-well-founded features : looping processes, transition systems, paradoxes in natural languages etc... Some others like strings, reals, formal series.  are potentially infinite, and can
only be approximated by partial and progressive knowledge. Thus, it is natural to use universes containing adequate non-well-founded sets as frameworks to give semantics for these objects or phenomena. Moreover, it is often not relevant to use the classical principles of deﬁnition and reasoning by induction to define and reason about these objects. All this led some computer scientists and mathematicians like R. Milner, Bart Jacobs, Jan Rutten, Daniele Turi, Martina Lenisa...(see, for instance, [14], [15], [11], [16], [17], [12], [13]) to develop a new and more suitable approach, which is to define and to use the dual principles of deﬁnition and reasoning by co-Induction.
According to this approach, we designed in [19] an antifounded version of Map Theory, which will be denoted by MTA. This new equational theory allows quantification over non-well-founded objects and gives a formalization of co-inductive reasoning. In [19], we proved that MTA is consistent relatively to ZFC + SI, and that it is at least as powerful as ZFC + AF A, where AF A is the antifoundation axiom introduced by F. Honsell and M. Forti in [6] and popularized by P.Aczel in [1] under the following form :
AF A : “Every graph has a unique decoration”
Remember that a graph is just an ordered pair (a, b), where a is a set and b
is a binary relation on a, and that :
Definition 1.1 A function d is a decoration of the graph (a, b) if, for all x ∈ a, we have : d(x)= {d(y): (x, y) ∈ b}
From AF A, one can deduce the existence of a large class of non-well- founded sets. For instance, one can check easily that, in order to “decorate” the one element graph ({x}, {(x, x)}), one needs a “self-singleton”, that is, a set Ω such that Ω = {Ω}. Moreover, the uniqueness of the decoration (which is defined by : d(x) = Ω), implies that this self-singleton is unique.


Related work
Map Theory is a very original system which is highly different in spirit from each of the very few other foundational systems based on untyped λ-calculus. First, the number of its primitive constants and of its rules is kept very low. Secondly, its interpretation of the membership relation is essentially dual of the traditional interpretation where a set is represented by its characteristic function, and “x ∈ A” is translated by (Ax) (i.e. A applied to x). Let us recall that this traditional interpretation was that of the initial system of Church and also, for instance, of the system of Flagg-Myhill [5]. The interested reader can find a deeper comparison between Map Theory and Flagg-Myhill’s system in [2].
Klaus Grue has recently designed in [10] a new version of MTF where the “Construction Axioms” (presented here in Section 5.1.1) are theorems, and which is intended to be more suitable for some further utilizations. In particular, this new version is used by S. Skalberg in [18] to implement Map Theory inside the theorem prover Isabelle. Nevertheless, a consistency proof for this new theory remains to be presented.




Plan of the article
In this article, we give parallel presentations of MTF and MTA, and of their relations with ZFC. We also give a flavor of their consistency proofs inside the framework of the κ-continuous semantics, which is a generalization (and a weakening) of Scott’s continuous semantics.
In Section 2, we will give an informal presentation of MTF and MTA, and of their common-core which will be denoted by MT . In Section 3,4 and 5, we will present successively three groups of axioms and rules which permit, respectively, the embeddings of Propositional Calculus in MT , of Predicate Calculus in MT , and of ZFC in MTF and MTA. Sections 6 and 7 will be devoted to the validation of FA in MTF and of AF A in MTA. Finally, in Section 8, we will discuss an open problem concerning an alternative axiomatization of MTA.
The complete proofs of all the results about MTF presented in this paper can be found in [9] and [2], those about MTA can be found in [19]. Section
4.4 generalizes to all first order languages analogue results of [9] which were only concerned with set theory and the missing proofs can also be found in [19].

Map Theory: A Synopsis
This synopsis of MT, MTF and MTA splits into two parts. In the first one, we will present the syntax of the two theories, the second will be about their consistency proofs as they were carried out in [2] and [19].
Informal discussions will use the expression “Map Theory” to speak about common features of MTF and MTA.

Syntax
The languages of MTF and MTA
The only expressive means available for the theories MTF and MTA are the equations between terms of a λ-calculus enriched with a few constants. These constants are ⊥,T, if , ε,φ for MTF , to which we were forced to add the constant “ =˙ A ” for MTA. All the notions used by predicate calculus (such as truth values, connectives and quantifiers) and by set theory (such as membership and equality) are translated by terms of λ-calculus. In particular, the boolean True is represented by the constant “T ”, the equation A = T reads “the term A is true”. The boolean False is represented by every λ-abstraction λx.A, but the term F =def λx.T will stand as its canonical representative. In addition to the classical truth values True and False, Map Theory borrows from λ-calculus an extra “truth value”, which is the U ndef ined, represented by the constant “⊥”. The role of the others constants will be explained later on.
In the following, the metavariables A, B, ... and A¯, B¯, .... will denote re- spectively terms and finite sequences of terms of Map Theory (including the empty sequence). The length of A¯ will be denoted by lg(A¯). We will de-
note respectively by u, v, ..., x, y... and u¯, v¯, ..., x¯, y¯.. the variables and finite sequences of variables of Map Theory and ZFC (we will assume that they both use the same countable set of variables). We will denote by FV (B) (resp. FV (B¯)), the set of free variables of the term B (resp. of the sequence B¯). The script B[x¯] will imply FV (B) ⊆ x¯ and will imply that x¯ is without any repetition. Finally, B[C¯/x¯] will denote the term obtained by the correct substitution of C¯ to the variables of x¯, and will suppose that lg(C¯)= lg(x¯).
Notation 2.1 AB¯ =def AB1....Bn =def (....(AB1)....Bn), where B¯ = (B1, ..., Bn)
Notation 2.2 A¯ = B¯ abbreviates the sequence of equations (Ai = Bi)1≤i≤n,
with n = lg(A¯)= lg(B¯).
Notation 2.3 ▶ A = B will mean that the equation A = B is a theorem of both MTF and MTA. We will specify ▶MT F or ▶MT A for the theorems which

belong to only one of the two theories.
Principle of the embedding of ZFC in Map Theory
The embedding of ZFC in Map Theory splits into two steps :
Every formula G of ZFC is translated into a term G˙ .
For every theorem G[x] of ZFC, one shows that :
▶ φx → (G˙ [x¯]= T )
where, as we will see later on, φx → (G˙ [x¯]= T ) abbreviates an equation whose intuitive meaning is :
“If the variables in x are interpreted by “sets” then G˙ [x¯] is true”
Thus, when G is closed we get ▶ G˙ = T .
The second step is carried out by associating to each proof of a theorem G[x¯] in ZFC, a proof of the equation φx → (G˙ [x¯] = T ) in Map Theory. Moreover, notice that the consistency of Map Theory implies that one can never prove both ▶ φx → (G˙ [x¯] = T ) and ▶ φx → (¬˙ G˙ [x¯] = T ) (where ¬˙ G˙ is the term translating ¬G). The following terminology will be useful :
Definition 2.4 A theorem G[x] of ZFC is validated by MTF or MTA iff
▶ φx → (G˙ [x¯]= T )
Overview of MT, MTF and MTA
As we said before, MT is the common core of MTF and MTA. It consists in three groups of axioms and rules. The first one, named Axioms of λ- calculus and of propositional calculus, includes the usual αβ-equivalence and describes the computational behavior of the constants ⊥, T and if . Finally, it contains a rule, called Quartum Non Datur, which allows the embedding of propositional calculus in MT . The second one, named Axioms of Predicate calculus, describes essentially the behavior of the constant ε and allows us to embed predicate calculus in MT . The third one consists in the so called Construction axioms 3 . These axioms state some simple closure properties of the “Universe of Sets” which is syntactically represented by the constant φ. They are essentially used to embed ZFC in MTF and MTA.
In addition of the axioms and rules of MT , the theory MTF has one extra Construction axiom and one extra rule. The axiom, denoted by MTF - Prim, plays, among other things, a central role for the validation in MTF of the Axiom of Infinity. The rule, called Induction Principle, is used, like its analogue of set theory, as a principle for “reasoning”. Moreover, it is also

3 In this article, this group include the construction axioms of Grue but also the axioms named Well1, 2, 3 in [9].


used to show the usual properties of equality in MTF (reflexivity, symmetry, transitivity).
In addition to the axioms and rules of MT , the theory MTA has an “In- finity axiom” which has a more classical formulation than MTF -Prim. The reason why we were forced to replace the latter by the former is explained in Section 8. The theory MTA has also a rule called the Co-induction Prin- ciple and a group of axioms called Equality axioms, which express the usual properties of equality (which are proved in MTF using the Induction Prin- ciple). Finally, MTA has a last extra axiom MTA-Deco which is crucial for the validation of AF A.

Semantics
The κ-continuous semantics of λ-calculus
As already said, the constructions of models of MTF and MTA in [2] and
[19] are done in the framework of the κ-continuous semantics of λ-calculus, which is a straightforward generalization of the (ω-)continuous semantics of Scott to every regular cardinal κ. The notions of κ-cpo (κ-complete partial order), κ-compact and κ-continuous function are defined, as usual, from the notion of κ-directed subset. A subset B of a partial ordered set D is κ-directed if, for all X ⊆ B such that Card(X) < κ, there exists an upper bound of X in B.
In order to model some axioms of Map Theory containing the constants ε and φ, one must work with particular κ-cpos : the κ-Scott domains. A κ-cpo D is a κ-Scott domain if every bounded subset of D has a sup, and if every element u ∈ D is the sup of the set of the κ-compact elements below u (this set is then κ-directed). More details about the κ-continuous semantics, can be found in [2] or [19].
As in the ω-case, the κ-continuous functions are exactly the functions which are continuous for some topology, called the κ-Scott topology. The open sets of this topology are called κ-open sets.
Notation 2.5 [D '→ E]κ will denote the κ-cpo of κ-continuous functions from
D to E , where D and E are κ-cpos.
The categories of κ-cpos and κ-Scott domains, with κ-continuous functions as morphisms, are two cartesian closed categories (c.c.c.). These categories give rise to models of λ-calculus, which are their reflexive objects, in others words triples (M, λ, A), where M is a κ-cpo (resp. a κ-Scott domain), λ ∈ [[M '→ M]κ '→ M]κ, A ∈ [M '→ [M '→ M]κ]κ and A ◦ λ = id[M'→M]κ .
In the following, a reflexive κ-cpo (M, λ, A) will simply be denoted by M.
Let us recall now the interpretation | | of closed terms with parameters in


a κ-cpo M, for an extended λ-calculus with constants, and relatively to an interpretation j of these constants :
|u| = u if u ∈ M 
|c| = j(c) for every constant c
|(A A')| = A(|A|)(|A'|)
|λx.A| = λ(u ∈ M '−→ |A[u/x]|)
Notation 2.6 When there will be no ambiguity, | A | will be simply denoted by A. Moreover, we will write M ▶ A = B to express that M satisﬁes the equation A = B, i.e. that, for x¯ = FV (A, B) and for all u¯ ∈ Mlg(x¯), it is true in ZFC that |A[u¯/x¯]| = |B[u¯/x¯]|.
Notation 2.7 For all u, x¯ ∈ M : ux¯ is deﬁned as usual by induction on
lg(x¯) ∈ ω, starting from ux =def A(u)(x).
Notation 2.8 uΦ =def {ux : x ∈ Φ}, for all u ∈ M and Φ ⊆ M.
Let us also recall that the function λ allows us to define a sequence (λn)n∈ω of κ-continuous functions, which code into M the functions of [Mn → M]κ, in such a way that, for all n ∈ ω, u¯ ∈ Mn and f ∈ [Mn → M]κ, we have λn(f )x¯ = f (x¯). The definition is by induction, starting from λ1 =def λ, thus, in particular, we have λ(f )x = f (x).
κ-premodels of Map Theory
Intuitively, and to begin with, a model M of Map Theory is a space of mono- tonic functions F with two extra elements TM and ⊥M added, the latter being also the least element of M. This 3-partition of M corresponds to the three truth values of Map Theory : False which is the truth value of functions, True which is represented by TM, and Undeﬁned represented by ⊥M.
The κ-premodels defined in [2] follow this first intuition, and are the most
natural reflexive κ-cpos which can be enriched into models of Map Theory. In particular, as we will see later on, every κ-premodel satisfies the group of “Axioms and rules of λ-calculus and of propositional calculus”. The existence of such κ-cpos requires only standard tools of denotational semantics, and the simplest is built in [2]. The definition uses the following notations.
Notation 2.9 For M ≡ (M, λ, A) a reflexive κ-cpo, we will denote by :
FM, or simply F, the set {λ(f ): f ∈ [M '→ M]κ}.
≤M the order on M.
⊥M the least element of M.
Remark 2.10 It is easy to show that, for F ' =def λxλy.(xy), we have :
F = {u ∈ M : F 'u = u} = {u ∈ M : λx.ux = u}


Definition 2.11 A κ-premodel is a reflexive κ-Scott domain (M, λ, A) such that :
M = F ∪ {⊥M, TM} and F ∩ {⊥M, TM} = ∅
TM is a maximal element of M and ⊥M is the unique element below it.
λ and the restriction of A to F are two inverse isomorphisms between the
κ-cpos F and [M → M]κ.
A(TM)= x '→ TM and A(⊥M)= x '→ ⊥M
Remark 2.12 F and {TM} are κ-open subsets of the κ-cpo M.
Notation 2.13 When there will be no ambiguity, TM and ⊥M will be simply denoted by T and ⊥.

Universes of sets inside κ-premodels
For modelling MTF and MTA we start from any κ-premodel M. The differ- ence between the two models begins with the constructions of two adequate subsets of M, denoted respectively by ΦF and ΦA in this article (Definitions 5.11 and 5.12). These sets, once enriched with adequate equality and mem- bership relations (denoted by =F and ∈F in the first case, =A and ∈A in the second case), will be models of ZFC + FA and ZFC + AF A respectively; this however requires κ > σ, for some (strongly) inaccessible cardinal σ.
One main distinctive feature of Map Theory is its interpretation of the membership relation. In a first and intuitive approximation, one defines the “membership” relation ϵΦ on Φ by : v ϵΦ u iff u /= T and v ∈ uΦ. In particular, from the set theoretic point of view, T represents the empty set in Map Theory.
But it is easy to exhibit distinct u, v ∈ Φ such that uΦ= vΦ, and so, the relation ϵΦ is not extensional (i.e. two different sets may have the same “ele- ments”). We will see in Section 5.2.2 how to get an adequate and extensional interpretation of membership, using some kind of quotient of ϵΦ.

Propositional Calculus in MT 
Until the end of the paper, we will assume that κ is some fixed regular cardinal, and that M is a κ-premodel.
In this section, we present the first group of axioms and rules of MT , i.e. the “Axioms of λ-calculus and of propositional calculus”, which allows us to embed the Propositional Calculus in MT . Then, we introduce a significant abbreviation concerning some kind of equations named Non-monotonic Impli-


cations 4 . Next, we show how to translate propositional calculus into terms of MT . Finally, we sketch the proof of the satisfaction of the above axioms and rules in any κ-premodel M.

Axioms of λ-calculus and of propositional calculus
Besides the usual axioms and rules of αβ-equivalence (which we omit here), the first group contains five axiom schemes which describe the applicative behavior of the constants ⊥,T, if , and a rule named Quartum Non Datur which syntactically expresses that M splits into three parts. For all terms A, B, C :
MT -Applic-T	▶ TB = T MT -Applic-⊥	▶ ⊥B = ⊥
MT -Select1	▶ if T B C = B
MT -Select2			▶ if λx.A B C = C MT -Select3		▶ if ⊥ B C = ⊥ Let us recall that F ' =def λxλy.(xy). QND	If	▶ A[T/x]= B[T/x]
and	▶ A[F 'x/x]= B[F 'x/x] and	 ▶ A[⊥/x]= B[⊥/x] Then ▶ A = B
Remark 3.1 Using the axioms and rules of αβ-equivalence, it is easy to show that : ▶ A[F 'x/x] = B[F 'x/x] iff ▶ A[λy.S/x] = B[λy.S/x] for all abstrac- tions λy.S.

Non-monotonic implications
Abbreviations of equations will be introduced by “ ≡def ” (instead of“ =def ”, which will be kept for term abbreviations).
Definition 3.2 :
A:B =def (if A B ⊥)

4 In order to simplify our exposition, the notion of Non-monotonic Implication presented here is only a particular case of the notion defined in [9].

A¯:B =def B if A¯ = ∅
A¯:B =def A1:(A2:..:(An:B)..) if A¯ = (A1, .., An)

Remark 3.3 It is easy to check, using Select1, that ▶ T :B = B.
Notation 3.4 (non-monotonic implications).
A¯ → B ≡def A¯:B = A¯:T

An equation of the form A¯
→ B is called a non-monotonic implication.

The reason why it is called an implication is given by the following theorem, which is the analogue of the Modus Ponens of propositional calculus. On the other hand, it is called non-monotonic because the characteristic function of equality is not monotonic. In contrast, Definition 3.7 below introduces a term
⇒˙ called “monotonic implication” which is bound to be interpreted by (the
code of) a κ-continuous, and hence monotonic, function.
Theorem 3.5 (MP) A¯ = T ; A¯ → B ▶ B = T
Some pairs of non-monotonic implications are called non-monotonic equiv- alences. Let us introduce a useful abbreviation for writing them.
Notation 3.6 (non-monotonic equivalence)
A ←→ B ≡def	A → B; B → A

Embedding of Propositional Calculus
The constants ⊥, if , and the canonical representatives of True and False

(T and F ), allow us to define terms, abbreviated by
∧˙ , ∨˙ , ⇒˙ , ¬˙ , ⇔˙ , which

translate the usual connectives of propositional calculus. The definition of these terms can easily be deduced from the following abbreviations which concern β-reducts of the terms applied to variables.
Notation 3.7 For all variables x and y :
F =def λx.T
!x =def (if x T T )
!x¯ =def !x1, ..., !xn, where x¯ = (x1, ..., xn)
≈x =def (if x T F )
¬˙ x =def (if x F T )
x∧˙ y =def (if x ≈y (if x F F ))
x∨˙ y =def (if x ! y ≈y)
x⇒˙ y =def (if x ≈y ! y)
x⇔˙ y =def (if x ≈y ¬˙ y)
Notation 3.8 For any formula G[x¯] of propositional calculus, we will denote by G˙ [x¯], or simply G˙ , the term which translates this formula in MT. It is

straightforward to obtain this term using the deﬁnition above.
The main consequence of the axioms and rules introduced in this section, including the QND, is the following theorem (which uses the term “!” which has just been defined).
Theorem 3.9 If G[x¯] is a tautology of propositional calculus then ▶!x¯ → G˙
The intuitive meaning of ▶!B = T is that “B is defined”, i.e. not ⊥. Since it is easy to check that ▶!T = T and that ▶!λx.A = T for all A, x, the intuitive meaning of the theorem is :

“If each variable of False then G˙ = T”
x¯ is interpreted by one of the usual truth values True or


Satisfaction of the Axioms of λ-calculus and of propositional calculus in κ-premodels
The axioms and rules of αβ-equivalence are modelled since M is a reflexive κ-cpo. Then, taking j(T )= TM and j(⊥)= ⊥M, it is clear, using Definition 2.11.4, that :
Lemma 3.10 For all u ∈ M we have M ▶ (Tu)= T and M ▶ (⊥u)= ⊥. We need now to give an interpretation of the constant if satisfying the
MT -Select axioms. The natural way to do it is to let j(if )= λ3(IF ), where
IF is the following function (its κ-continuity follows from the Remark 2.12).
Lemma 3.11 The function IF from M3 to M, which is deﬁned by :
IF (u, v, w)= ⎪⎨ v if u = T
⎪ w if v ∈ F
is κ-continuous.
There is still to check that M satisfies the QND. In fact, it is clear from Remark 2.10 and Definition 2.11.3 that M satisfies a stronger property, called Strong Quartum Non-Datur (SQND ) in [2], and which is expressed as follows.
Lemma 3.12 (SQND) For all κ-premodels M we have :
M = {u ∈ M : |F 'u| = u}∪ {T, ⊥}

Predicate Calculus in Map Theory
The domain Φ of quantiﬁcation
The main difference between the quantifiers of Map Theory and the quantifiers of predicate calculus is that the former ones have a domain. This domain, which is denoted by Φ in this section, is represented in the syntax by the constant φ, which is interpreted in M by the code of the characteristic function of Φ.
Definition 4.1 We will denote by χΦ the following function, called the char- acteristic function of Φ ⊆ M, and defined on M by :
χ (u)= ⎧⎨ T if u ∈ Φ
⎩ ⊥ else
Remark 4.2 χΦ is κ-continuous iff Φ is a κ-open subset of M.
The fact that χΦ takes only two values T and ⊥ has to be expressed, in the syntax, by the following axiom :
MT -Caract φx =! φx

The constant ε and the quantiﬁers in MT 
The quantifiers ∃ and ∀ are translated in MT by means of the constant ε which is a variant of the Hilbert choice operator. This constant denotes the function EΦ defined below, relatively to some fixed choice function ρ on M.
Definition 4.3  :
⊥	if	⊥ ∈ uΦ
EΦ(u)=  ρ(Φ)	if  uΦ ⊆ F
⎪⎪⎩ ρ({x ∈ Φ: ux = T }) else
We will see, in Section 4.5, which conditions on Φ imply the κ-continuity of EΦ, and hence allow us to interpret ε in M by λ(EΦ). Then, quantifiers are defined as follows.
Definition 4.4 For all terms A, let :
εx.A =def (ε λx.A)
∃˙ x.A =def ≈(λx.A εx.A)
∀˙ x.A =def ¬˙ ∃˙ x.¬˙ A


Interpreting ε by the code of EΦ, we get the desired semantic meaning of
∃˙ and ∀˙ , which we make explicit for ∃˙ (the dual result holding for ∀˙ ) : 
Lemma 4.5 The interpretation of ∃˙ x.A is equal to ⊥, F or T and :
M ▶ ∃˙ x.A = T iff ∀u ∈ Φ: M ▶ A[u/x] /= ⊥∧ ∃u ∈ Φ: M ▶ A[u/x]= T
M ▶ ∃˙ x.A = ⊥ iff ∃u ∈ Φ: M ▶ A[u/x]= ⊥
M ▶ ∃˙ x.A = F iff ∀u ∈ Φ: M ▶ A[u/x] ∈ F
The quantiﬁcation axioms
These axioms express some useful properties of the function EΦ, in particular that its domain of quantification is Φ. The axiom Quantif1 is the analogue of the instantiation rule of predicate calculus :
MT -Quantif 1 φB, ∀˙ x.A → A[B/x] MT -Quantif 2 εx.A = εx.(φx∧˙ A) MT -Quantif 3 φ(εx.A)= ∀˙ x.!A
MT -Quantif 4 ∃˙ x.A → φ(εx.A) MT -Quantif 5 ∀˙ x.A = ∀˙ x.(φx : A)
These axioms, added to those of the first group, have Theorem 4.12 below as a main consequence. Intuitively, this theorem expresses that it is possible to embed predicate calculus in MT , provided that the terms which translate the formulas have a “defined truth value” True or False.
Interpreting ﬁrst-order theories
Until the end of the section, L will denote any first-order language. We will denote by PL the set of predicate symbols of L, by FL the set of function symbols of L, and by FL the set of first-order L-formulas.
Given an interpretation θ which associates to each predicate or function symbol of L a closed term of Map Theory, we will denote by θ˙ the straight- forward extension of θ to FL, i.e. the one obtained using Definitions 3.7 and
4.4.

Notation 4.6
G˙ (resp. R˙ ) will be a simpliﬁed notation for θ˙(G) (resp. θ(R)).

Example 4.7 Let G be the formula ∃x (Rx∧Qx), where R, Q ∈ PL are unary predicates. Then θ˙(G) =def G˙ =def ∃˙ x.(R˙ x∧˙ Q˙ x)
Definition 4.8 θ forces the determination of PL if, for all R ∈ PL, we have: 
▶ φx1, ...., φxn −→! (θ(R) x1...xn)

where n is the arity of R.
Definition 4.9 θ forces the closure of the domain of quantiﬁcation under FL
if, for all f ∈ FL, we have : 
▶ φx1, ...., φxn −→ φ (θ(f ) x1...xn) where n is the arity of f .
Notation 4.10 φx¯ = φx1, ...., φxn, where x¯ = (x1,	, xn)
Definition 4.11 :

θ validates the formula G[x¯] ∈ FL if ▶ φx¯ −→
θ˙(G)

θ validates a theory T ⊆ FL if θ validates all its theorems.
Theorem 4.12 If θ forces the determination of PL and also forces the closure of the domain of quantiﬁcation under FL, then, for every theory T ⊆ FL :
θ validates T iff it validates the axioms of T
We end this section with two fundamental syntactical results which essen- tially follow from the quantification axioms. The first one is crucial to prove equations of the form φx¯ → ∃˙ z.G˙ [x¯, z], where G[x¯, z] is a theorem of the theory
T we are interpreting.
Theorem 4.13 (Exhib)
φB = T ; !(∃˙ z.A)= T ; A[B/z]= T ▶ ∃˙ z.A = T
Theorem 4.14 (Gene) For every term A[x¯], we have :

φx¯ → A E▶
∀˙ x¯.A = T.


Satisfying the Quantiﬁcation Axioms in M.
Let us now return to our κ-premodel M. The satisfaction of the quantifica- tion axioms presupposes the interpretation of the constants φ and ε by the functions χΦ and EΦ and so, presupposes the κ-continuity of χΦ and EΦ (Def. 4.3 et 4.1). We already know that χΦ is κ-continuous iff Φ is a κ-open sub- set (Remark 4.2). The requirement for the continuity of EΦ is given in the following lemma.
Notation 4.15 ↑ H =def {u : ∃v ∈ H, v ≤M u}, where H ⊆ M.
Definition 4.16 Let ξ be any cardinal. We will say that K ⊆M is essentially
ξ-small if there is H ⊆M such that Card(H) < ξ and H ⊆ K ⊆↑ H.
Lemma 4.17 Let Φ ⊆ M, if Φ is essentially κ-small then EΦ is κ-continuous.
The main result of this section is the following theorem.


Definition 4.18 Φ ⊆ M is a domain of quantiﬁcation (for the predicate calculus) if Φ is κ-open and essentially κ-small.
Theorem 4.19 If Φ ⊆ M is a domain of quantiﬁcation and φ, ε are respec- tively interpreted by (the code of) the functions χΦ and EΦ, then M satisﬁes the axioms of quantiﬁcation.
Of course, when dealing with set theory, we will be interested in “big” Φ’s, in the sense that they should be suitable for representing the universe of sets. However, we can have less ambitious purposes. Suppose, for example, that we get interested in interpreting Peano’s Arithmetic in Map Theory. In this case, a relevant domain of quantification will be Φω =def { λx1...λxn.T : n ∈ ω}. It is easy to check that Φω is κ-open for all κ, and that it is essentially κ-small if and only if κ > ω.
A still more simple example of a possible domain of quantification would be the domain of ΦBool =def {T, F }, which is κ-open and essentially κ-small for all κ ≥ ω.

Embedding ZFC in Map Theory
We suppose here that ZFC is written with the two relation symbols ∈, =, and we denote by ZFC−ext the theory ZFC minus the Extensionality axiom. First, notice the particular status of the Extensionality axiom in ZFC. Indeed, all the axioms of ZFC−ext express the existence of some sets whereas the Extentionality axiom expresses a property of the membership and equality
relations.
In the first subsection, we will sketch the validation of the axioms of ZFC−ext in Map Theory (in the sense of Definition 2.4). In the second one, we will introduce the translations of membership and equality in MTF and MTA, and we will say a few words about the validation of the Extensionality axiom, which can be proved from these translations.

Embedding ZFC−ext in Map Theory
From the point of view of Map Theory, the axioms of ZFC −ext express the clo- sure of the universe under some operations : P airing, Power, Union.  (possibly
of arity 0, for the axioms which assert the existence of a particular set, as the Emptyset axiom or the Infinity axiom). Each usual operation on sets cor- responds to a term of Map Theory, called a set constructor. A list of the set constructors relevant to the axiomatization we chose is given in [19, p. 55]. In this paper, we give only three basic useful examples corresponding to

Singleton, P airing and Ordered-P airing operations :
Example 5.1 :
Sg =def λxλz.x (usually denoted by K)
P =def λxλyλz.(if z x y)
⟨ , ⟩ =def λxλy.(P (Sgx) (P xy))
Notice that the term ⟨x, y⟩ =def ⟨ , ⟩xy corresponds to the Kurakowski’s definition of the ordered pair : (x, y) =def {{x}, {x, y}}.
The fact that the universes ΦF and ΦA, which were introduced in Section 2.2.3, are closed under the set constructors, is syntactically expressed by means of non-monotonic implications. Theses equations follows in MTF and MTA from a group of axioms, named the Construction Axioms, which express some simple closure properties of ΦF and ΦA, and which are natural from the point of view of λ-calculus.
In the rest of the Section 5.1, we will first state these axioms. Then, we will shortly describe a generic method for validating the axioms of ZFC −ext. Next, we will be interested in the satisfaction of the construction axioms in
M. We will end with the definitions of the universes ΦF and ΦA inside M.

The construction Axioms
The construction axioms use the following abbreviations :
Curry =def λaλxλy.a (P xy)
Y =def λf.(λx.f (xx) λx.f (xx))
Prim =def λfλaλb.(Y λgλx.(if x a (f λz.g(x(bz))))
x∈˙ Ay =def ((∈˙ Ax)y), where ∈˙ A is the term which translates ∈ in MTA (see Definition 5.24 below).
The term Y is the well-known Curry’s fixed point operator. The term (Prim f a b) denotes a primitive recursive function for which a defines the base case, f de- fines the recursive case, and b sort of enumerates the destructive/predecessor functions available.
The construction axioms : (MT -T )	φT = T
(MT -F )	φF = T
(MT -⊥)	φ⊥ = ⊥
(MT -ϕ)	φλx.A = φλx.φA
(MT -App)	φu, φz → φ(uz)


(MT -P )	φu, φv → φ(Puv) (MT -Curry)	φu → φ(Curry u) (MT -Diag)	φu → φλx.((ux)x) (MT -CInv)	φu, φv → φλx.u(xv)

(MT -Comp) (MTF -Prim)
∀˙ x.φ(f x), φu → φλx.f (ux)
∀˙ x.φ(f x), φa, φb → φ(Prim f a b)

(MTA-Infinity) ∃˙ z.(T ∈˙ Az∧˙ ∀˙ u.(u∈˙ Az⇒˙ Su∈˙ Az)) = T
The construction axioms of MTF (resp. MTA) consist in the ten first axioms plus MTF -Prim (resp. MTA-Infinity). Notice that the axioms MT -Diag, MT -CInv and MT -Comp replace the axioms C-M1 and C-M2 of [9]. They are indeed simpler, more natural from the point of view of λ-calculus, and as powerful (as shown in [9] and [2]).
Remark 5.2 MTF -Prim implies the validity of the axiom of Infinity in MTF . The natural way to treat infinity in MTA would be to replace MTF - Prim by a dual axiom MTA-CoPrim. In fact, as it will be discussed in Section 8, we were forced to fall back on MTA-Infinity.

A generic method for interpreting ZFC−ext in Map Theory
All the axioms of ZFC−ext are of the form ∀x¯∃z.H[z, x¯], where H is a formula of ZFC. The generic method to get the validation of such a theorem is to exhibit a set constructor cH such that :

1.	▶ φx¯ cH)
→ φ(cHx¯) (intuitively : the universe ΦF (or ΦA) is closed under

▶ φx¯ → H˙ [cHx¯, x¯] (where H˙
is the translation of H)

Then, using theorems 4.13 and 4.14, one can deduce :
▶ ∀˙ x¯∃˙ z.H˙ [z, x¯]= T
Example 5.3 For the pairing axiom, one takes cH = P and one shows :
▶ φx, φy → φ(P xy) 5
▶ φx, φy → (x∈˙ P xy∧˙ y∈˙ P xy)	(needs a proof) and one deduces :
▶ ∀˙ x∀˙ y∃˙ z.(x∈˙ z∧˙ y∈˙ z)= T


5 Here, the result is immediate by MT -P , but in general this step needs a proof.


Satisfying the Construction axioms
To model some of the Construction axioms, we need to assume the existence of a strong inaccessible cardinal. So we suppose now that M is built within a universe satisfying ZFC + SI. The letter σ will denote a fixed inaccessible cardinal, and we will suppose that M is a κ-premodel with κ > σ. We also suppose that the constants ⊥, T and if are interpreted as in Sections 3.4 and 4.2.
In the following, Φ ⊆ M is a quantification domain (in the sense of Def. 4.18) and we assume that φ and ε are interpreted by the codes of χΦ and EΦ.
We will present in this section some requirements over Φ which will enable us to model the construction axioms of MTF and of MTA.
Notation 5.4 K '→ H = {u : ∀x ∈ K, ux ∈ H}, for all K, H ⊆ M.
Notation 5.5 For all x¯ ∈ Gω and n ∈ ω, we will denote by x¯n the sequence consisting of the n ﬁrst elements of x¯. In particular, if n = 0 then x¯n is the empty sequence.
Definition 5.6 Let G ⊆M :
G0 =def {u ∈ M : ∀x¯ ∈ Gω, ∃n ∈ ω : ux¯n = T }
G+ =def {u ∈ M : ∀x¯ ∈ Gω, ∀n ∈ ω : ux¯n /= ⊥}
Remark 5.7 ⊥ ∈/ G0 ⊆ G+ and the operations ( )0,( )+ are decreasing w.r.t inclusion.
Notation 5.8 Oσ(G) denotes the set of all the essentially σ-small and κ-open subsets of G ⊆ M.
We now define two properties (depending on σ), the GCP (General Closure Property) and the GCPA (General Closure Property for Antifoundation) :
Definition 5.9 Let G ⊆ M, we will say that G satisfies the :
GCP  if G = ∪{O0 '→ G : O ∈ Oσ(G)}
GCPA if G = ∪{O+ '→ G : O ∈ Oσ(G)}
We are now ready to give the main theorem of this section, which in fact collects two theorems. The first one comes from [2] and its premisses will be satisfied by ΦF . The second one comes from [19] and its premisses will be satisfied by ΦA. The rest of the section will be used to comment this theorem.
Theorem 5.10 If ⊥ ∈/ Φ e T then :
If Φ satisﬁes the GCP and if Φ ⊆ Φ0 then M satisﬁes the Construction axioms (with MTF-Prim).
If Φ satisﬁes the GCPA and if Φ ⊆ Φ+ then M satisﬁes the Construction

axioms (with MTA-Infini).
Let us remark first that ⊥ ∈/ Φ e T implies trivially the satisfaction of MT - T and MT -⊥. The rest of the discussion will concern the property Φ ⊆ Φ0 which was called Strong Induction Principle in [2] and plays two different roles :
combined with the GCP it allows us to prove MT -App and MTF -Prim.
it is equivalent to the well-foundation of Φ with respect to ϵΦ (i.e. there is no infinite sequence (ui)i<ω such that ui+1 ϵΦui for every i ∈ ω). This well- foundedness, on one hand implies the satisfaction of the Induction Principle of MTF , and on the other hand allows us to show that Φ is a model of FA (via suitable interpretations of membership and equality).
Definitely, if Φ is non-well-founded then Φ ¢ Φ0. Then, the satisfaction of
MT -App follows from the property Φ ⊆ Φ+ and from the GCPA.

Construction of the universes ΦF and ΦA
We now define ΦF and ΦA by ordinal induction up to σ.
Definition 5.11 ΦF =def Φˆσ where (Φˆα)α≤σ is the sequence of sets defined by :
Φˆ1	= {T }
Φˆα+1 = Φˆ 0 '→ Φˆα
Φˆα	= ∪γ<αΦˆγ	if α is a limit ordinal
Definition 5.12 ΦA =def Φˇσ where (Φˇα)α≤σ is the sequence of sets defined by :
Φˇ1	= {T }
Φˇα+1 = (Φˇ + '→ Φˇα) ∪ ↑ {δαbx : b, x ∈ Φˇ}
Φˇα	= ∪γ<αΦˇγ	if α is a limit ordinal
In this definition, (δα)α≤σ is a sequence of elements of M, called universal decorators. We will talk about them again in Section 7.2.
Definitely, T ∈ ΦF ∩ ΦA.
The main issue of the consistency proofs of MTF and MTA lies in the following results.
Theorem 5.13 [2] ΦF is an essentially κ-small and κ-open subset of M
which satisﬁes the GCP, and is such that ΦF ⊆ Φ 0 .


Theorem 5.14 [19] ΦA is an essentially κ-small and κ-open subset of ł
which satisﬁes the GCPA, and is such that ΦA ⊆ Φ+.
Remark 5.15 ΦF /= Φ 0 and ΦA /= Φ+
The Extensionality axiom in MTF and MTA
In this section we will first define the interpretations of equality and mem- bership in MTF and MTA. Then, we will talk about the properties of these interpretations which allow to validate the Extensionality axiom. This will lead us to state a new group of axioms of MTA, called the Equality Axioms. Finally, we will briefly show how to model these axioms in ł.
Interpretations of equality in MTF and MTA
In this section, we introduce the two binary relations on ł, denoted by =F and =A, which are the adequate interpretations of equality mentioned in Sec- tion 2.2.3. We will also introduce the term =˙ F which translates equality in MTF and is the syntactical representative of =F . Since =A has no known syntactical representative as a term of the language {⊥,T, if, ε, φ}, we have to introduce a new constant =˙ A 6 to play this role. We will see in Section
5.2.4 that the interpretation of =˙ A is the characteristic function of =A, is a sense that we will make precise.
First, let us associate to each subset Φ of ł the following increasing operation ΘΦ on (У(ł2), ⊆).
Definition 5.16 For Φ ⊆ ł, let ΘΦ : У(ł2) '→ У(ł2) be defined by : ΘΦ(R)= {(T, T )}∪ { (u, v): u /= T /= v and
6x ∈ Φ, Ey ∈ Φ: (ux, vy) ∈ R and
6y ∈ Φ, Ex ∈ Φ: (ux, vy) ∈ R	}
Notation 5.17 ΘF =def ΘΦF and ΘA =def ΘΦA .
Notation 5.18 A =def λr.λuλv.( if u (if v T F ) (if v F r0uv))
where r0uv =def 6˙ xE˙ y.r(ux)(vy)Λ˙ 6˙ yE˙ x.r(ux)(vy)
Definition 5.19 :
1. =˙ F =def (Y A)
2. =F =def {(u, v): ł ▶ ((=˙ F u) v)= T }
The term A is a syntactical analogue of ΘΦ. One can indeed easily check that, when φ and ε are interpreted by the codes of χΦ and EΦ, then, for all



6 =˙ F and =˙ A are respectively denoted by =˙
and ∼˙
in [9] and [19].


r ∈ ł and R ∈ У(ł2), we have :
If R = {(u, v): ł ▶ ruv = T }	then  ΘΦ(R)= {(u, v): ł ▶ Aruv = T }
The following lemma is a rather easy consequence of this remark.
Lemma 5.20 =F is a ﬁxed point of ΘF and an equivalence relation on ΦF .
Definition 5.21 A binary relation R on ł is a ΘΦ -bisimulation iff R ⊆
ΘΦ(R). In particular, every fixed point of ΘΦ is a ΘΦ-bisimulation.
Definition 5.22 =A is the union of all the ΘA -bisimulations R ⊆ (Φ+)2.
It is easy to check that R ⊆ (Φ+)2 implies ΘA(R) ⊆ (Φ+)2, and to deduce
A	A
the following lemma.
Lemma 5.23 =A is a ﬁxed point of ΘA, an equivalence relation on Φ + and
is the unique maximal ΘA -bisimulation on Φ+.
The maximality of =A is essential for the satisfaction of the axiom AF A and of the Co-Induction Principle of MTA. Moreover, the fact that =A is defined on Φ+, and not just on ΦA, is essential for the satisfaction of the axiom MTA-Deco (see Section 7.2).

Interpretations of membership in MTF and MTA
In Map Theory, the membership relation is defined from the equality relation.
Definition 5.24 :
∈˙ F =def λuλv.(if u F E˙ z.uz=˙ F v)
∈˙ A =def λuλv.(if u F E˙ z.uz=˙ Av)
Let us comment this definition in the case of MTA (for MTF the expla-
nations are similar, with ϵΦF , ∈F and =F replacing ϵΦA , ∈A and =A).
As mentioned in Section 2.2.3, the relation ϵΦA is not extensional; thus we will interpret membership with the relation ∈A defined, for all u, v ∈ Φ+, by: v ∈A u iff u /= T and there exists x ∈ Φ such that ux =A v. The relation ∈A is syntactically represented by the term ∈˙ A above which, hence, translates “∈” in MTA.
Notation 5.25 :
u=˙ F v =def ((=˙ F u) v) and u=˙ Av =def ((=˙ Au)v)
u∈˙ F v =def ((∈˙ F u)v) and u∈˙ Av =def ((∈˙ Au)v)

Notation 5.26 From now on, G˙
denotes the term translating the formula G

of the language of ZFC in MTF (resp. MTA) using =˙ F and ∈˙ F (resp.
and ∈˙ A) to translate “=” and “∈” (following Section 4.4).
=˙ A


Validation of the Extensionality axiom in MTF and MTA
The properties of equality in MTF
The following properties of =˙ F are needed to validate the Extensionality axiom in MTF . The four points of Theorem 5.27 were proved in [9] using the Induction Principle. The lemma is a non-monotonic equivalence (cf. Notation 3.6) and follows easily from the definition of =˙ F as a fixed point of A, plus standard reasoning in MT .
Theorem 5.27 (EquivΦF )
▶MT F φu, φv → φ(u=˙ F v)
▶MT F φu → (u=˙ F u)
▶MT F φu, φv, u=˙ F v → v=˙ F u
▶MT F φu, φv, φw, u=˙ F v, v=˙ F w → u=˙ F w
Lemma 5.28 ▶MT F u=˙ F v ←→ ((A=˙ F )u)v

The Equality Axioms of MTA
The CoInduction Principle of MTA is, in some sense, weaker than its “dual” of MTF . For this reason, we have been forced to introduce the fol- lowing axioms which, in particular, imply the analogues of the above theorem and lemma for =˙ A.
MTA-Const	φu, φv → φ(u=˙ Av)
MTA-ReflexΦ φu → (u=˙ Au)
MTA-Sym	u=˙ Av = v=˙ Au
MTA-Compat u=˙ Av → (u=˙ Aw = v=˙ Aw)
MTA-F ix	u=˙ Av ←→ ((A=˙ A)u)v
Three of these axioms express properties of =A which are not limited to ΦA; this will be needed to validate AF A in MTA (cf. end of Section 7). The axiom MTA-Compat is of the form A → (B = C) which abreviates the equation (if A B ⊥)= (if A C ⊥); this axiom implies the transitivity of =˙ A on Φ+.
Satisfying the Equality axioms of MTA
As we already said, the constant =˙ A will be interpreted by the “characteristic function” of =A. We begin with the definition of this notion and then give the key result, which allows this interpretation.


Definition 5.29 [19] Let R be a binary relation on G ⊆ ł. The character- istic function of R (over G) is the function χR defined by :
⎧ T if (u, v) ∈ R
χR(u, v)=  F if (u, v) ∈/ R and (u, v) ∈ G2
⎪ ⊥ if (u, v) ∈/ G2
G will be called the domain of R.
Theorem 5.30 [19] χ=A is κ-continuous
This theorem follows from two lemmas. The first one states that Φ+, which is the domain of =A, is a κ-open subset, and follows from the fact that ΦA is essentially κ-small. The second one states that : 6u, v ∈ Φ+,
u ≤M v ⇒ u =A v.
Defining j(=˙ A) = λ2(χ= ), we can verify that the Equality axioms are satisfied by ł using that =A is an equivalence relation, a fixed point of ΘA, and that T, F ∈ ΦA ⊆ Φ+.

The Induction Principle of MTF
The provability of F˙ A = T in MTF follows essentially from the following rule of MTF , called the Induction Principle.
MTF -Induction :
For all terms B and A¯ such that x ∈/ FV (A¯) and y not free in B :
A¯, φu, u → B; A¯, φu, ¬˙ u, 6˙ y.B[(uy)/x] → B ▶ A¯, φu −→ B

The intuitive meaning of the rule is that (under the hypothesis A¯) : 
“Suppose u = T satisﬁes the property B, and suppose, moreover, that B is true for every u /= T as soon as it is true for every v ∈ ΦF such that v ϵΦF u. Then B is true for every u ∈ ΦF ”
The satisfaction of the rule in ł follows easily from the property ΦF ⊆ Φ 0 .

Provability of AFA in MTA
The axiom AF A (cf. Introduction) is clearly equivalent to the conjunction of the two following statements :
AF A1 “Every graph (a, b) has a decoration” (cf. Definition 1.1).

AF A2 “If d and d' are decorations of the graph (a, b) then d = d'”
The fact that we have ▶MT A AF˙ A1 = T follows from a unique new con- struction axiom named MTA-Deco. The fact that ▶MT A AF˙ A2 follows from a new rule named the CoInduction Principle. First we state and comment this rule. Then we will present the axiom MTA-Deco.

The CoInduction Principle of MTA
The coinduction principle is a deduction rule which expresses syntactically that, for every ΘA-bisimulation R ⊆ Φ2 , we have R ⊆=A. It is trivially justified by the semantic fact that =A is the union of all the ΘA-bisimulations
on Φ+, and that ΦA ⊆ Φ+. The statement of the CoInduction Principle uses
A	A
a term A' which is intuitively close to the term A of Definition 5.18 :
MTA-CoInduction :
For all terms A¯, r and for all variables u, v not free in A¯, r:
A¯, φu, φv, ⟨u, v⟩∈˙ R → ((A'r)u)v ▶ A¯, φu, φv, ⟨u, v⟩∈˙ r → u=˙ Av
Definition 7.1 A' =def λr.λuλv.(if u (if v T F ) (if v F r' uv))
where r' uv =def 6˙ xE˙ y.⟨ux, vy⟩∈˙ rΛ˙ 6˙ yE˙ x.⟨ux, vy⟩∈˙ r
The proof of ▶MT A AF˙ A2= T using the CoInduction Principle is detailed in [19]. The set theoretic intuition which is behind this proof is the following : If d and d' are two decorations of the graph ⟨a, b⟩ then, for every x ∈A a, the images d⟨x⟩ and d'⟨x⟩ are ΘA-bisimilar; so, by maximality of =A and since
=A interprets equality, they are equal. Thus, the functions d and d' are equal on all the elements of their domain, and so they are equal.

The Axiom MTA-Deco
The axiom MTA-Deco expresses that, for all b, x ∈ ΦA, there exists u ∈ ΦA such that δbx =A u, where δ is a term which we are going to discuss and which is defined in [19, p. 116]. Its satisfaction in ł follows easily from Lemma 7.5 below. First, let us state this axiom :
MTA-Deco φb, φx → E˙ u.(δbx=˙ Au)
We sketch now the intuitive proof of ▶MT A AF˙ A1= T , and in particular describe the role of MTA-Deco.
The proof roughly follows the method used to validate the axioms of


ZFC−ext in Section 5.1.2, and consists first in exhibiting a set constructor Deco, which is the term representing the “operation” Decoration in MTA. Its definition can be deduced easily from the following abbreviation.
Definition 7.2 Deco(a, b) =def λz.⟨az, δ˜b(az)⟩ ,where δ˜ =def λbλx.εu.(δbx=˙ Au)
In this definition, the variable a represents the set of nodes of the graph to be decorated, and b its set of edges. The use of the “ordered pair constructor”
⟨ , ⟩ corresponds to the fact that a decoration is a function, and that a function is defined as a graph in set theory. The term δ˜ is actually the heart of the
definition of Deco. To understand its definition, we will first get interested in the term δ. Before that, we give two key lemmas. Notice that the second one correspond to the first point of the method described in Section 5.1.2.
Lemma 7.3 :
▶ φb, φx → φ(δ˜bx)
▶ φb, φx → δ˜bx=˙ Aδbx

Proof. Follows immediately from MTA-Deco using the definition of E˙
and

MT -Quantif 4.	 
Lemma 7.4 ▶MT A φa, φb '→ φDeco(a, b)
Proof. Follows easily from the point 1 of the previous lemma.	 
The term δ satisfies the following semantic property :
(2) 6b, x ∈ ΦA : u ∈A δbx ⇔ Ey ∈ ΦA, u = δby Λ ⟨x, y⟩ ∈A b
Comparing Property (2) and Definition 1.1, it would be natural to replace δ˜ by δ in the definition of Deco. However, for some deep reasons linked to the construction of ΦA, this is not possible. Indeed, ł $ φb, φx → φδbx, which
implies that the Lemma 7.4 would not be satisfied.
However, we have the following weaker result which, as we will see soon, gives rise to a general method for defining decorations. Notice that it uses the δα’s of the definition of ΦA (Definition 5.12). The precise definition of δα has no interest here. Let us simply say that δα does not have syntactical
representative in the language of MTA, and that it satisfies Property (2) relatively to Φˇα. Thus, δα ∈ ΦA is called the universal decorator of rank α.
Lemma 7.5 For all b, x ∈ ΦA, there exists α < σ such that δbx =A δαbx. In particular, δbx ∈ Φ+.
Using Lemma 7.5, the general method for defining a decoration d for a graph ⟨a, b⟩ is the following : for every x ∈A a, we choose u ∈ ΦA which is bisimilar to δbx (the existence of u follows from the lemma), and we set


down d(x) = u. The bisimilarity between d(x) and δbx ensures Property (2) for d(x). The syntactical implementation of the above method is the term Deco(a, b) (remember that ε syntactically represents a choice function).
We are now able to give the reason why we do not limit the scope of some of the Equality axioms to ΦA (as remarked at the end of the Section 5.2.3). It is to allow the syntactical handling of terms of the form δbx (whose interpretations are in Φ+ but not in ΦA). In particular, these axioms, combined to MTA- Deco, allow us to use reflexivity, symmetry and transitivity on terms of that form.

An Open Problem: The Consistency of MTA-CoPrim
In this section, we discuss briefly the axiom MTA-CoPrim which we wanted originally to integrate in MTA. Unfortunately, we were not able to prove its consistency (in connection with the other axioms of MTA). Let us state this axiom and explain its interest compared to that of MTF -Prim.
MTA-CoPrim ▶MT A 6˙ x.φ(f x), φb '→ φ(CoPrim f b)
where (CoPrim f b) =def (Y λgλx.(if (f x) T λz.g((f x)(bz))) )
We already said in Remark 5.2 that MTA-CoPrim would imply the va- lidity of the Infinity axiom in MTA, and could replace MTA-Infinity. In addition, it seems to be able to replace also the axiom MTA-Deco. Before giving more details, we recall briefly the categorical interpretation of well- foundation and of antifoundation (details can be found, for instance, in [17]). Stating FA is equivalent to saying that the universe (of sets) is an initial algebra for the functor “Power ” in the category of classes and class functions. Stating AF A is equivalent to saying that the universe is a final co-algebra for the functor “Power ”. This is essentially how AF A was first expressed in [6]
under the name of X1.
The axiom MTF -Prim (cf. 5.1.1) expresses a property of ΦF which is close to the “existence” part of initiality. Furthermore, it allows to validate the Infinity axiom using the 0-ary set constructor ωF =def (Prim λx.x T T ) (which interprets ω). More generally, MTF -Prim expresses that ΦF is closed under a particular scheme of definition by induction which corresponds to the term Prim.
Dually, the axiom MTA-CoPrim expresses a property which is close to the “existence” part of finality and of the axiom X1 (which corresponds to AF A1). Integrated into MTA, it would allow us to validate the Infinity axiom using the term ωA =def (CoPrim λx.x T ). This term has actually a computational


meaning, contrary to the term that we were forced to use in [19] to interpret ω. Moreover, MTA-CoPrim would allow us to have, in MTA, a scheme of definition by co-induction, which would be the dual of the induction scheme of MTF , and which would correspond to the term CoPrim.
Finally it is quite interesting to note that ωA and ωF are β-equivalent, and so are provably equal in MT . Nevertheless, this fact is of no help even for proving that it is consistent to add the axiom φωA = T to MTA. Adding this axiom would be sufficient to interpret the Infinity axiom.

Conclusion
Map Theory is a very ingenious foundational system which is at least as pow- erful as ZFC. But, in some sense, it goes further than this theory since, in most cases, it associates to each usual set a λ-term which has a natural com- putational meaning in λ-calculus, whereas ZFC only asserts the existence of the aforementioned set.
Many questions about Map Theory remain open, and in particular the one discussed in the previous section. Let us mention two others. The first one asks for the exact power of Map Theory, which is between ZFC and ZFC + SI. The second one is whether one can design versions of Map Theory which would embed foundational theories whose primitives are not only sets. We are thinking, in particular, of the class theory of Bernays-Go¨del, and of the very general theory of Di Giorgi-Forti-Honsell-Lenisa-Lenzi (see, for instance, [8], [7]).
Indeed, Map Theory appeals to such a generalization because classes and class functions can be represented by terms of Map theory in, at least, two different ways. The first one, which is in the original spirit of Map Theory, represents a (unary) class by a term u and membership to this class by : x ∈Φ u iff u /= T and there exist y ∈ Φ such that uy =Φ x. This representation already allows for “external quantification” over classes. The second one, which is more classical, also represents a class by a term u but, then, membership is

defined by : x ∈'
u iff ux = T . The simplest example is the universe Φ itself

which is represented as a class by the term λx.x in the first case, and by φ or
λx.x=˙ x in the second case. What is lacking yet in the present versions of Map Theory is free quantification over classes, and the possibility of representing “collections of collections”.

References
Aczel P., “Non-Well-Founded sets”, CSLI Lectures Notes 14 1988.


Berline C. et K. Grue, A κ-denotational semantics for map theory in ZFC + SI, Theoretical Computer Sciences 179 (1997), p.137-202.
Church A., A set of postulates for the foundation of logic I, Ann. Math 33 (1932), p.346-366.
Church A., A set of postulates for the foundation of logic II, Ann. Math 34 (1933), p.839-864.
Flagg R.C, J. Myhill, A type-free system extending ZFC , Annals of Pure and Apply Logic 43
(1989), p.79-97.
Forti M. et F. Honsell, Set Theory with Free Construction Principles, Annali Scuola Normale Sup. di Pisa, Classe si Sc., Serie IV, X(3) (1983), p.493-522.
Forti M., F. Honsell, M. Lenisa, Operations, collections and sets within a general axiomatic framework, Logic et Foundations of Mathematics (1999), A. Cantini and al. eds, Kluwer Academic Publishers, p.1-24.
Forti M., G. Lenzi, A general axiomatic framework for the foundations of Mathematics, Logic and Computer Science, Unpublished, 1997.
Grue K., Map Theory, Theoretical Computer Sciences, 102(1) (1992), p.1-133.
Grue	K.,	“Map	Theory	with	classical	maps”,	preprint,	303	p,	2001,
http://www.diku.dk/users/grue,2001

Jabobs B. et J. Rutten, “A tutorial on (Co)algebras and (co)induction”, EATCS Bulletin 62, 1997.
Lenisa M., “Themes in Final Semantics”, Dottorato di ricerca in informatica, PhD thesis TD- 6/98, Universita di Pisa, 1998.
Lenisa M., A complete Coinductive Logical System for Bisimulation Equivalence on Circular Objects, FOSSACS’99 (ETAPS), Conference Proceedings, W. Thomas ed., Springer, Lecture Notes in Computer Sciences vol 1578 (1999).
Milner R., “A calculus of Communicating Systems”, Lecture Notes in Computer Sciences, N0 92 , 1980, Berlin, Springer-Verlag.
Milner R., Calculi for Synchrony and Asynchrony, Theoretical Computer Sciences 25 (1993), p.267-310.
Rutten J., “Behavioural differential equations: a coinductive calculus of streams, automata, and power series”, Report SEN-R0023 ISSN 1386-369X, CWI Amsterdam, 2000, to appear in Theoretical Computer Sciences.
Rutten J. and D. Turi, On the foundations of ﬁnal coalgebra semantics : non-well-founded sets, partial orders, metric spaces, Mathematical Structures in Computer Sciences, vol 8 (1998), p.481-540.
Skalberg S., “An interactive proof system for Map Theory”, PhD thesis, University of Copenhagen, 2002, http://www.mangust.dk/skalberg

Thierry Vall´ee, “Map Theory et Antifondation”, Th`ese de Doctorat en Logique Math´ematique et Fondements de l’Informatique, UFR de Math´ematiques, Universit´e Paris VII, 2001, http://www.pps.jussieu.fr/ vallee, To be published in ENTCS, Vol. 79.
