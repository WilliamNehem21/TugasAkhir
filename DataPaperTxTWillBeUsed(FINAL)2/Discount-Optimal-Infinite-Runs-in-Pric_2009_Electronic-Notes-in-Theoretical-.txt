

Electronic Notes in Theoretical Computer Science 239 (2009) 179–191
www.elsevier.com/locate/entcs

Discount-Optimal Infinite Runs in Priced Timed Automata
Uli Fahrenberg and Kim G. Larsen
Dept. of Computer Science Aalborg University Denmark
Email: {uli,kgl}@cs.aau.dk


Abstract
We introduce a new discounting semantics for priced timed automata. Discounting provides a way to model optimal-cost problems for infinite traces and has applications in optimal scheduling and other areas.
In the discounting semantics, prices decrease exponentially, so that the contribution of a certain part of the behaviour to the overall cost depends on how far into the future this part takes place. We consider the optimal infinite run problem under this semantics: Given a priced timed automaton, find an infinite path with minimal discounted price. We show that this problem is computable, by a reduction to a similar problem on finite weighted graphs.
The proof relies on a new theorem on minimization of monotonous functions defined on infinite-dimensional zones, which is of interest in itself.
Keywords: Timed automata, priced timed automata, optimal scheduling, infinite schedules, infinite zones

Introduction
During the present decade, substantial research on applying and retargeting timed automata technology has been carried out [1,6,9,10,13]. In particular, the timed automata approach has been successful in dealing with scheduling problems which (as is often the case) can be reformulated in terms of reachability. To address the issue of optimal scheduling, the notion of priced timed automata 1 has been intro- duced [7,4]. In this extended model, the underlying timed automaton is decorated with prices in locations and on transitions, modeling the different rates by which the accumulated cost increases during the behaviours of the timed automaton.
Up to now, emphasis has mostly been on optimality of ﬁnite behaviours, one exception being the notion of limit ratio between accumulated cost and time which has been considered in [8], where it was shown that with respect to limit ratio, optimal infinite schedules are computable for priced timed automata. In this paper

1 Called linearly priced timed automata in [7] and weighted time automata in [4].

1571-0661/© 2009 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2009.05.039

we take a different approach to optimality of infinite behaviours, by applying the principle of discounting : The contribution of a certain part of the behaviour to the overall cost depends on how far into the future this part takes place. Discounting is a well-known principle in economics, and has been used in the context of timed automata e.g. in [12].
We show that for priced timed automata, discount-optimal infinite schedules are computable, using the corner-point abstraction of [8]. The proof relies on a new theorem on minimization of monotonous functions on inﬁnite-dimensional zones, which generalizes previously known results for finite-dimensional zones. In this infinite-dimensional setting, usual compactness arguments are not available, so the proof relies on explicit constructions of converging sequences in ∞. We expect the result to have applications in other settings also.
The authors would like to thank Patricia Bouyer, Lisbeth Fajstrup, John Leth and Martin Raussen for numerous discussions on the topics of this paper.

Priced Timed Transition Systems with Discounting
Timed transition systems play an important role in this paper, so we recall their definition from [2]:
Definition 2.1 [2] A timed transition system is a pair (S, T ) of a set of states S
and a set of transitions T = Ts ∪ Td, with Ts ⊆ S × S and Td ⊆ S × ≥0 × S,
satisfying the following properties, where we write s −→t s' instead of (s, t, s') ∈ Td:

(zero delays) s −→0
s for all s ∈ S,

(additivity) whenever s −→t s' s'' ∈ S, and
and t'
t'
≤ t, then also s −→ s
'' t−t'
' for some

(determinism) whenever s −→t
s' and s −→t
s'', then s' = s''.

Transitions in Ts are called switches (and also written s → s' instead of (s, s') ∈ Ts), transitions in Td are called delays. The last requirement of the definition means that the target of a delay transition is uniquely determined by the source, hence we

can write delay transitions as s −→t
st, and we shall do so in what follows.

Definition 2.2 A priced timed transition system, or PTTS for short, is a tuple (S, T, p, r), where (S, T = Ts ∪ Td) is a timed transition system, and p : Ts → ≥0, r : S → ≥0 are price functions.
The price p(e) of a switch transition e = s → s' models the amount of resources required for taking this transition, and the price rate r(s) of a state s measures how much it costs to stay in that state.
We want to measure the accumulated cost of an execution, or path, in a priced timed transition system, using some form of discounting. To this end, we fix a discounting factor λ from now on, with 0 < λ < 1, and we define the discounted price below in such a way that things which happen some t time units in the future are discounted by a factor λt.

First we extend the price function p to delay transitions by defining p(s −→t  st)= 
∫ t λτ r(sτ )dτ , and we note that in case r(st) = r(s) for all t, the above reduces to
p(s −→t st)= r(s)  1  (λt − 1). Hence the price of a delay transition is the infinitesimal
sum of the prices of all the states through which the delay transition passes, but discounted by passage of time. This discounting principle is also applied in the following definition.

Definition 2.3 The discounted price of a finite alternating path π = s0 −t→0
st0 →

tn−1
tn−1

s1 → ··· −−−→ sn−1 → sn is the number
n−1
t
i	i
i=0

where Ti = Σi
tj and t−1 = 0. The discounted price of an infinite alternating

path π = s0 −t→0
st0 → s1 → ··· is the limit
P (π) = lim
n→∞


P (π²2n)

provided that it exists. Here π²2n denotes the restriction of π to 2n steps, i.e. up
to the transition stn−1 → s .
Definition 2.4 The discount-optimal price of a state s ∈ S is the number
Pmin(s)= inf  P (π)  π is an infinite path starting in s}
An infinite path π starting in s is said to be discount-optimal if P (π) = Pmin(s). A family (πε)ε>0 of infinite paths starting in s is said to be discount-optimal if
|P (πε) − Pmin(s)| < ε for each ε.
Note that it is not given that a discount-optimal infinite path from a given state exists, whence the last definition of discount-optimal families of paths. We are now able to state the problem with which we are concerned in this paper:
Problem 2.5 (Discount-optimal price problem) Given a priced timed transi- tion system and one of its states s, compute Pmin(s) and, provided it exists, a discount-optimal inﬁnite path from s, or otherwise a discount-optimal family of in- ﬁnite paths from s.
We shall show that, for priced timed transition systems arising from priced timed automata, cf. Section 3, the above problem is computable from the automaton’s initial state.

Discounting Priced Timed Automata
Recall [14] that a priced timed automaton, or PTA for short, is a tuple A = (Q, C, I, E, p, r), with Q a finite set of locations, C a finite set of clocks, I : Q →



H
	,J¸˜x ≤ `3
x =3 
√\
deg
x ← 0 z  M
,J¸˜x ≤ `3
x =3 
deg	z  L
√\

z,	J,˜¸z ≤` 8 \√

z ≤ 8	,,
p = 2		
z ≤ 8	,,
p = 1		
r =9 

r =2 x, z ← 0	att
z ≥ 2
r =5 x, z ← 0	att
z ≥ 2

Fig. 1. Priced timed automaton PS for a production system.
Φ(C) location invariants, E ⊆ Q × Φ(C) × 2C × Q a set of transitions, p : E →  transition prices, and r : Q →  location price rates. Here the set Φ(C) of clock constraints ϕ is defined by the grammar
ϕ ::= x da k | x − y da k | ϕ1 ∧ ϕ2	(x ∈ C, k ∈ , da ∈ {≤, <, ≥, >})
Example 3.1 The priced timed automaton PS of Fig. 1 models a Production Sys- tem which may be operating in three different modes: a high (H), a medium (M ) and a low (L) mode with different associated price rates: 2 (H), 5 (M ) and 9 (L) respectively. Invariants in the locations enforce the operation mode to be automat- ically degraded (deg) from H to M , and from M to L unless an attentive action (att) is performed within 3 time units. The guards on the clock z models that con- secutive attentive actions need a minimum time separation of 2 time units. Also, the attentive action entails a certain cost: 1 (upgrade from L to M ) and 2 (upgrade from M to H).	 
We give an operational semantics to priced timed automata using priced timed transition systems. Recall [2] that the timed transition system (S, T = Ts ∪ Td) generated by a timed automaton A = (Q, C, I, E) (without prices) is defined by
S = (q, ν) ∈ Q × C  ν |= I(Q)}
'	'	ϕ,S	'	'	}
T = (q, ν) −→t  (q, ν + t) ∀t' ∈ [0, t]: ν + t' |= I(q)}
Definition 3.2 The semantics of a PTA A = (Q, C, I, E, p, r) is the PTTS A) = (S, T, p˜, r˜), where (S, T ) is the standard timed transition system generated by the
timed automaton A, and the price functions p˜ : Ts → ≥0, r˜ : S → ≥0 are defined as

'	' 
ϕ,S	'

Example 3.3 Reconsider the production system from Fig. 1. The following alter- nating cyclic behaviour provides an infinite path of PS):
(H, x = 0,z = 0) −→3 (H, x = 3,z = 3) −→ (M, x = 0,z = 3) −→3

(M, x = 3,z = 6) −→ (L, x = 3,z = 6) −→1
(L, x = 4,z = 7) −→

(M, x = 0,z = 0) −→2
(M, x = 2,z = 2) −→ (H, x = 0,z = 0)

Using λ = e−1, the discounted price p of this infinite path is the unique solution

to the following equation:
p = 2(1 − e−3)+ 5(e−3 − e−6)
+ 9(e−6 − e−7)+ e−7 + 5(e−7 − e−9)+ 2e−9 + e−9p
which can be computed as p ≈ 2.16.	 
We have to make several assumptions about the priced timed automata we consider, and about the discounting factor λ, in the rest of this paper:
We need λ to be a rational number.
We need our priced timed automata to be bounded, that is, there exists M ∈  such that for every reachable state (q, ν) in  A), and for every clock x of A, ν(x) ≤ M . By results of [14], every PTA is strongly price-bisimilar to a bounded PTA.
We need all infinite runs in our priced timed automata to be time-divergent :
Whenever s −t→0  st0 → s −t→1  st1 → ··· is an infinite run, then Σ∞  t → ∞.
The first two of these assumptions are quite natural, but the third may require som comment; we are excluding Zeno runs here, which may be problematic for some applications. Our assumption of time divergence is technical and needed in our proofs of Lemmas 5.2 and 7.4. Using other proof techniques, it may well be possible to show our results without excluding Zeno runs—but note that in the limit-ratio approach to infinite optimal scheduling [8], a similar assumption of strong reward divergence has to be made.
We are now able to state the main result of this paper, which we will prove in the remaining sections:
Theorem 3.4 The discount-optimal price problem is computable for the initial states of time-divergent and bounded priced timed automata and rational λ.

Discount-Optimal Paths in Finite Weighted Graphs
To compute discount-optimal infinite paths in priced timed automata, we reduce the problem to that of computing discount-optimal infinite paths in finite weighted graphs. This problem in turn is a special case of the discounted payoff games discussed in [5]. In this section we present the results from [5] which we rely on; for the reduction see Section 5.
Let G = (S, T, w, d) be a finite weighted graph, with w : T →  a weight function and d : T →  ∩ ]0, 1] a discount function, with the additional property that any
vertex in S has at least one outgoing edge in T . For an infinite path π = s0 −→
d0

−w→1 ··· , let the discounted price of π be the number P (π)= Σ∞
 w  i−1 d .

For s ∈ S, let Pmin(s) be the infimum discounted price of paths starting in s, and say that an infinite path π emerging from s is discount-optimal if P (π)= Pmin(s).

Lemma 4.1 ([5]) The values Pmin(s1),... , Pmin(sn), where S = {s0,... , sn}, can be computed in O(mn2 log m) strongly polynomial time, with m = |T |. Discount- optimal paths can be obtained using a function assigning to each s ∈ S an edge

s −→w
d
s' for which Pmin(s)= w + dPmin(s').



Note that above we have permitted the discount function d : T →  ∩ ]0, 1] to assume the value 1, whereas [5] demands d to always have values strictly less than
1. This has the consequence that for us, the discounted price of an infinite path may not converge, however it is not difficult to see that also in this case, the results of [5] hold.




Regions and Corner-Point Abstraction

We show computability of discount-optimal prices by reducing the state space of a PTA to a finite weighted graph, its corner point abstraction as introduced in [8]. We use the standard notion of bounded regions, see e.g. [2]; here, [·♩ and ⟨·⟩ denote integral respectively fractional part: Given a finite set C of clocks, the relation of
region equivalence is  defined on C by ν  ν' if and only if
[ν(x)♩ = [ν'(x)♩, and ⟨ν(x)⟩ =0 iff ⟨ν'(x)⟩ = 0, for all x ∈ C, and
⟨ν(x)⟩≤ ⟨ν(y)⟩ iff ⟨ν'(x)⟩≤ ⟨ν'(y)⟩ for all x, y ∈ C.
We consider clocks bound by some M ∈ , and the set of regions bounded by
M ∈  over a finite set C of clocks will be denoted RC,M = ν ∈ C  ν(x) ≤
M for all x ∈ C} / .
Given a region R ∈ RC,M and a clock constraint ϕ ∈ Φ(C), we say that R |= ϕ if ν |= ϕ for all ν ∈ R. Given a subset S ⊆ C, we denote by R[S ← 0] the region with the clocks in S reset to 0, given by ν ∈ R ⇔ ν[S ← 0] ∈ R[S ← 0]. Another region R' ∈ RC,M is said to be the immediate time successor of R, denoted R' = succ(R), if there for all ν' ∈ R' exists d ∈ ≥0 such that ν' − d ∈ R, and for all 0 ≤ d' ≤ d, ν' − d' ∈ R ∪ R'. The set of corner points of a region R ∈ RC,M is cp(R) = {ν ∈ cls(R) | ν(x) ∈  for all x ∈ C}, where cls(R) denotes the (topological) closure of R under the canonical identification of valuations in C
with points in |C|.


Definition 5.1 The corner-point abstraction of a priced timed automaton A = (Q, C, I, E, p, r) is the weighted graph cp(A)= (S, T, w, d) defined as follows, where the super- and subscripts on the arrows indicate weights w respectively discounting

8
6
4
2
e−1
0123 
H	H




0	0	0
1	1	1
H	M	M




0	0
1	1	e−1
M	M	M


factors d:
Fig. 2. Example path in corner point representation

S = (q, R, α) ∈ Q × RC,M × C
 R |= I(q),α ∈ cp(R)}

T = 
w	'	'	'
ϕ,S	'

R' = R[S ← 0], α' = α[S ← 0],w = p(q → q')}

∪ (q, R, α) −→w
λ
∪ (q, R, α) −→0
1
(q, R, α + 1)  w = r(q)  1  (λ − 1)}
(q, R', α)  R' = succ(R),α ∈ cp(R) ∩ cp(R')}

The corner point abstraction is thus a refinement of the standard region graph [3], in which one also keeps track of the corner points of regions. The motivation for the weights and discounting factors on the transitions in cp(A) is as follows:
Transitions (q, R, α) → (q', R', α') correspond to switch transitions (q, ν) →
(q', ν') with ν ∈ R, ν' ∈ R'.

Transitions (q, R, α) → (q, R, α + 1) correspond to delays (q, ν) −→1
(q, ν + 1).

Transitions (q, R, α) → (q, R', α) are introduced for “book-keeping” only.
Our boundedness assumption, together with the postulate that all infinite runs in a given priced timed automaton be time-diverging, now allows us to conclude the following:
Lemma 5.2 The corner-point abstraction is a ﬁnite weighted graph with the prop- erty that any of its vertices has at least one outgoing edge.
Corner-point representations of states s = (q, ν) and paths π = (q0, ν0) → (q1, ν1) → ··· in A) are sets of states, respectively sets of paths, in cp(A) given by cp(s)= (q, R, α) ν ∈ R and
cp(π)= (q0, R00, α00) → (q0, R01, α01) → ··· → (q0, R0r0 , α0r0 )
→ (q1, R10, α10) → ··· ∀i : νi ∈ Ri0}

Example 5.3 Figure 2 illustrates part of the corner point representation of the infinite path given on page 4. For λ = e−1, the discounted price of this segment, starting in (H, x = z = 2) and ending in (M, x = 1,z = 4), is 5 (1 − e−1)+ 9 (1 − e−1)e−1 ≈ 5.25.	 

Linear Combinations of Exponential Functions
We shall show in the next section that the corner-point abstraction is sound and complete with respect to discounted prices of paths. The completeness proof relies on minimization of certain functions defined on inﬁnite-dimensional zones; we shall show below that an infinite linear combination of exponential functions defined on an infinite-dimensional zone attains its minimum in a corner of this zone. The proof of this result relies on a new theorem on minimization of infinite sums of positive-valued functions defined on closed and bounded sets in  ∞.
We consider ∞ equipped with the ∞-metric d (x1, x2,... ), (y1, y2,... ) = supi |xi − yi|, and say that a set in  ∞ is closed if it is closed with respect to this metric. Also, we let pri denote projection to the ith coordinate.
Theorem 6.1 Let Z ⊆ ∞ be a closed and bounded set and f1, f2,... a sequence of continuous functions fi : pri Z → ≥0. Let f : Z → ≥0 ∪ {∞} be the function
given by f (x1, x2,... )= Σ∞ fi(xi), and assume that there exists x ∈ Z for which
f (x) converges. Then the inﬁmum of f over Z is obtained in a point of Z.
We remark that with ∞ replaced by n for some n ∈ , the theorem is trivial; in that case, Z is compact, hence the claim can be proven by some convergent- subsequence type argument. The difficulty lies in the fact that in ∞, closedness does not imply compactness.
Proof. We use function notation for sequences in this proof, so a sequence (xi)i∈ of points in Z will be written as a function x :  → Z. Let a = inf{f (x) | x ∈ Z}, and let x :  → Z be a sequence of points for which limi→∞ f (x(i)) = a. Note that x is a sequence of sequences; x :  → ( → ).
If Z were compact, we could find a converging subsequence of x, and the limit of that subsequence would be the point we are looking for. Now Z is not in general compact, but so are all the projections prj Z to the coordinates, hence we can use the argument coordinate-wise:
Let y = pr1 x = x(·)(1). All x(i)(1) are elements of pr1 Z, which is a compact set, hence y contains a subsequence x(ϕ1(·))(1) which converges to a limit z1 ∈ pr1 Z. Here ϕ1 :  →  is a strictly increasing re-indexing function. The subsequence x ◦ ϕ1 of x has thus the property that pr1(x ◦ ϕ1) converges to z1 ∈ pr1 Z.
Assume inductively that we have a subsequence x◦ϕk of x with the property that prj (x◦ϕk) converges to a limit zj ∈ prj Z for all j = 1,... , k. Let y = prk+1(x◦ϕk)= x(ϕk(·))(k + 1), then y is a sequence in prk+1 Z, hence by compactness contains a convergent subsequence x(ϕk(ψ(·)))(k + 1) with limit zk+1 ∈ prk+1 Z. Setting ϕk+1 = ϕk ◦ ψ finishes the induction.
Let z = (z1, z2,.. .) ∈ Z, then we claim that f (z) converges with value f (z)= a: We have


a = lim f (x(i)) = lim
lim Σ fj(x(i)(j)) = lim
lim Σ fj(x(i)(j))

i→∞
i→∞ k→∞
j=1
k→∞ i→∞
j=1

the last equality because all terms in the series are non-negative, hence convergence
is absolute. For the inner limit, define gk :  → ≥0 by gk(i)= Σk	fj(x(i)(j)).
Then limi→∞ gk(i) exists, hence we can replace gk by its subsequence gk ◦ ϕk, and limi→∞ gk(i) = limi→∞ gk(ϕk(i)).
On the other hand, zj = limi→∞ x(ϕk(i))(j) for all j = 1,... , k, hence by continuity,
k	k
Σ fj(zj) = lim Σ fj(x(ϕk(i))(j) = lim gk(ϕk(i))

j=1
i→∞
j=1
i→∞

Collecting the pieces, we have a = limk→∞ limi→∞ gk(i) = limk→∞ Σk	fj(zj ) = 
f (z).	 
Analogously to the finite case, cf. [2], we define an inﬁnite zone on an infinite set of clocks C = {x1, x2,... } to be a (possibly infinite) set of elementary clock constraints xi da k, xi −xj da k, and we say that ν ∈ Z, for a valuation ν : C → ≥0, if ν |= ϕ for all ϕ ∈ Z. An infinite zone is readily identified with a subset of ∞ , and, again equipping ∞ with the ∞-metric, we have a notion of closed zone. We note that a zone is closed in that sense if and only if all its defining clock constraints are closed, i.e. use only non-strict inequalities.
Corollary 6.2 Let Z ⊆ ∞ be a closed and bounded zone and f1, f2,... a sequence of monotonous continuous functions fi : pri Z → ≥0. Let f : Z → ≥0 ∪ {∞}
be the function given by f (x1, x2,... ) = Σ∞ fi(xi), and assume that there exists
x ∈ Z for which f (x) converges. Then the inﬁmum of f over Z is obtained in a
corner point of Z.
Proof. By Theorem 6.1, we have z ∈ Z for which f (z) is the infimum of f over Z. Now assume that z is not a corner point of Z. There are two cases to consider:
There is a coordinate zj of z and ε > 0 such that for all t ∈ [−ε, ε], the point z +j t := (z1,... , zj + t,... ) ∈ Z. (Hence j is the coordinate in which z is not a corner, and in this case, the edge in that coordinate is parallel to the xj-axis, corresponding to an absolute constraint on the xj variable.) But then
f (z +j ε)= Σ ciλzί + cjλzj +ε + c < f (z)
i=1 i/=j
There are coordinates zj, zl of z and ε > 0 such that for all t ∈ [−ε, ε], the point z +j,l t := (z1,... , zj + t,... , zl + t,... ) ∈ Z. (This corresponds to a diagonal constraint on xj − xl.) But then
f (z +j,l ε)= Σ ciλzί + cjλzj +ε + clλzÆ +ε + c < f (z)
i=1 i/=j,l

In both cases we obtain a contradiction, hence z must be a corner point of Z. 

Corner-Point Abstraction is Sound and Complete
We are now able to show that any infinite path in a PTA can be approximated by an infinite path in the corner-point abstraction with discounting price not higher than the original one, and vice versa, that any infinite path in the corner-point abstraction can be approximated by a family of infinite paths in the PTA.
Theorem 7.1 (Soundness of corner-point abstraction) Given a PTA A and a path π˜ in cp(A) for which P (π˜) converges, then for all ε > 0 there exists a path π ∈ cp−1(π˜) for which P (π) − P (π˜) < ε.
Note that the above implies that if π˜ emerges from the initial region of cp(A), then π starts in the initial state of A). Before the proof we need a few technical lemmas, the first of which is from [8].
Lemma 7.2 ([8, Prop. 5]) Let π˜ = (q ,R ,α ) −k→0 (q , R' ,α +k ) → (q ,R ,α ) −k→1

0	0	0
0	0	0	0
1	1	1

··· be an inﬁnite path in cp(A) and ε > 0. Then there exists an inﬁnite path

π = (q ,ν ) −t→0  (q ,ν + t ) → (q ,ν ) −t→1
··· in  A) such that π ∈ cp−1(π˜) and

0	0	0	0	0	1	1

|Ti − Ki| < ε for all i. Here, Ti = Σi
tj and Ki = Σi
kj.

The second lemma can easily be shown by a second-order approximation to the
y  t
x
Lemma 7.3 For 0 < λ < 1 and x, y ∈ , λx − λy ≤ 1 | ln λ| λx + λy |x − y|.
The third lemma concerns the convergence of a certain infinite sum and uses our time-divergence assumption:

Lemma 7.4 If (q ,R ,α ) −k→0
(q , R' ,α + k ) → (q ,R ,α ) −k→1
··· is an inﬁnite

0	0	0
0	0	0	0
1	1	1

path in cp(A), then the sum Σ∞ λKί converges.
Proof. Let Ki = Σi	kj, and let M be the number of states of cp(A). We have
Ki+M > Ki for all i, as otherwise there would be a Zeno loop in cp(A), hence by Lemma 7.2 a Zeno loop in A, implying that A would violate the time-divergence assumption.
As the Ki are all integers, this implies that Ki+M ≥ Ki +1 for all i, hence for all n ∈ ,

nM −1

i=0
λKί =
Σ
i=0
M −1

j=0

λKίM +j ≤
Σ
i=0
M −1
λi
j=0

λKj

which is a geometric series and thus converges.	 
Example 7.5 As the following example shows, assuming time divergence is not
enough to ensure that the above sum converges for any infinite path in A itself : Let

π = (q ,ν ) −t→0  (q ,ν + t ) → (q ,ν ) −t→1
··· be an infinite path in  A) for which

0	0	0	0	0	1	1
ti =  1  ln i − ln(i − 1) for i ≥ 2 and t0 = t1 = 0. Then π is time divergent, but

Ti = Σi
tj = − ln i
for i ≥ 1 and T0 = 0, hence Σn
λTί = 1 + Σn
1 , which

does not converge.	 

Proof of Theorem 7.1. Using the notation of Lemma 7.2, we can choose any
ε1 > 0 and get a path π for which |Ti − Ki| < ε1 for all i. By Lemma 7.3,

 λTί − λKί 
Tί + λKί	1
Kί 1+ λ−ε1 

< 2 ε1| ln λ| λ
the last inequality because of Ti > Ki − ε1.
< 2 ε1| ln λ|λ

We compute the differences of the prices of finite prefixes of π and π˜:

 nΣ−1 
  1  

 P (π²2n) − P (π˜²2n) = 
r(qi)



| ln λ|
λTί − λKί





n−1
i | ln λ|	i


i=0
i | ln λ|	i n−1

+ Σ r(q )  1  λKί−1 − λTί−1 
1	 nΣ−1 

≤ 2 ε1
1+ λ−ε1

i=0
r(qi)+ pi| ln λ| λKί + r(qi)λKί−1

All coefficients in the above sum are bounded, hence by Lemma 7.4 it converges for n → ∞. An appropriate choice of ε1 will thus ensure that P (π) − P (π˜) < ε. 
Theorem 7.6 (Completeness of corner-point abstraction) Given a PTA A and an inﬁnite path π in A), then there exists an inﬁnite path π˜ ∈ cp(π) for which P (π˜) ≤ P (π).
Proof. Write π = (q ,ν ) −t→0  (q ,ν + t ) → (q ,ν ) −t→1  (q ,ν + t ) → ··· . In
0	0	0	0	0	1	1	1	1	1
case P (π) is infinite, we have nothing to prove, so let us assume that P (π) is finite.
Let pi = p (qi, νi + ti) → (qi+1, νi+1) = p(qi → qi+1) and note that this does not
depend on the value of ti. With Ti = Σi	tj and t−1 = 0, we have
Σ	t

P (π)= f (T0, T1,... )= 

i=0
λTί−1
p (qi, νi) −→ί
(qi, νi + t)
+ λtί pi

= Σ
i=0
 r(qi)
 1  ln λ

λTί − λTί−1
+ λTί pi

where we now view the price of π as a function f : ∞ → ≥0 in variables

T0, T1,... .

ϕ0,S0

ϕ1,S1

ϕ2,S2

Let q0 −−−→ q1 −−−→ q2 −−−→ ··· be a path in A which generates π, let Ri

be regions for which νi ∈ Ri, and introduce valuations ν'
: C → ≥0 given by

ν'(x)= Ti − Tmax{j≤i|x∈S }, that is, ν'(x) is the time elapsed since clock x was last
i	j	i
reset.

Define a (closed and bounded) zone Z ⊆ ∞
by the set of constraints Z =

{ν' ∈ cls(Ri) | i ∈ }, then by Corollary 6.2, f attains its minimum over Z in
a point β ∈ ∞ ∩ ∂Z. Define valuations σi : C → ≥0, for i = 0, 1,... , by
σi(x)= βi − βmax{j≤i|x∈Sj }. As β ∈ Z, we have σi ∈ cp(Ri) for all i ∈ .
It is now easy to construct a path π˜ ∈ cp(π) which goes through the regions (qi, Ri) and whose discounted price is P (π˜) = f (β); we refer to [8] for a detailed procedure. As β minimizes f over Z, this means that P (π˜) ≤ P (π).	 

Conclusion and Future Work
We have shown that the corner-point abstraction is sound and complete with respect to discounted prices of paths, hence the following algorithm can be applied to find discount-optimal infinite paths (or families of such) emerging from the starting state of a given priced timed automaton A:
Construct cp(A).

Find a discount-optimal infinite path π˜ cp(A).
emerging from the initial region of

Find a discount-optimal infinite path π ∈ cp−1(π˜), or a family of such.
There are a number of issues which remain open. Our computability proof is based on regions and corner points and does not provide a basis for an efficient implementation. In [11], the authors show that discount-optimal infinite runs admit a certain fixed-point characterization, which together with the notion of priced zones exploited in [14] should allow for efficient, zone-based algorithms for computing discount-optimal infinite runs.
Also, we conjecture that, in analogy to the setting of finite weighted graphs [15], discount-optimal infinite runs coincide with infinite runs with minimal limit-ratio when λ is close to 1, which should provide a certain unification of our results with the ones from [8]. Finally, one should also think about extending the presented work to the setting of priced timed games.

References
Abdedda¨ım, Y., E. Asarin and O. Maler, Scheduling with timed automata, Theor. Comput. Sci. 354
(2006), pp. 272–300.
Aceto, L., A. Ing´olfsd´ottir, K. G. Larsen and J. Srba, “Reactive Systems,” Cambridge University Press, 2007.
Alur, R. and D. Dill, Automata for modeling real-time systems, in: Proc. 17th Int. Coll. on Automata, Languages and Programming (ICALP’90), Lecture Notes in Computer Science 443 (1990), pp. 322–335.
Alur, R., S. La Torre and G. J. Pappas, Optimal paths in weighted timed automata, in: Proc. 4th Int. Work. on Hybrid Systems: Computation and Control (HSCC’01), Lecture Notes in Computer Science 2034 (2001), pp. 49–62.
Andersson, D., “Improved Combinatorial Algorithms for Discounted Payoff games,” Master’s thesis, Uppsala University, Department of Information Technology (2006).
Behrmann, G., E. Brinksma, M. Hendriks and A. Mader, Production scheduling by reachability analysis
- a case study, in: Proc. 19th Int. Parallel and Distributed Processing Symp. (IPDPS’05) (2005).


Behrmann, G., A. Fehnker, T. Hune, K. G. Larsen, P. Pettersson, J. Romijn and F. Vaandrager, Minimum-cost reachability for priced timed automata, in: Proc. 4th Int. Work. on Hybrid Systems: Computation and Control (HSCC’01), Lecture Notes in Computer Science 2034 (2001), pp. 147–161.
Bouyer, P., E. Brinksma and K. G. Larsen, Staying alive as cheaply as possible, in: Proc. 7th Int. Work. on Hybrid Systems: Computation and Control (HSCC’04), Lecture Notes in Computer Science 2993 (2004), pp. 203–218.
Bozga, M., A. Kerbaa and O. Maler, Scheduling acyclic branching programs on parallel machines, in:
Proc. 25th IEEE Real-Time Syst. Symp. (RTSS’04) (2004), pp. 208–217.
Brinksma, E., A. Mader and A. Fehnker, Verification and optimization of a PLC control schedule, J. Software Tools for Technology Transfer (STTT) 4 (2002), pp. 21–33.
Fahrenberg, U. and K. G. Larsen, Discounting in time, in: Proc. 7th Work. on Quantitative Aspects of Programming Languages (QAPL’09), Electronic Notes in Theoretical Computer Science (2009), to appear.
Henzinger, T. A., R. Majumdar and V. S. Prabhu, Quantifying similarities between timed systems, in:
P. Pettersson and W. Yi, editors, Proc. 3rd Int. Conf. on Formal Modeling and Analysis of Timed Systems (FORMATS’05), Lecture Notes in Computer Science 3829 (2005), pp. 226–241.
Hune, T., K. G. Larsen and P. Pettersson, Guided synthesis of control programs using uppaal, in: Proc. IEEE ICDS Int. Work. Distributed Systems Verification and Validation (2000), pp. E15–E22.
Larsen, K. G., G. Behrmann, E. Brinksma, A. Fehnker, T. Hune, P. Pettersson and J. Romijn, As cheap as possible: Efficient cost-optimal reachability for priced timed automata, in: Proc. 13th Int. Conf. on Computer Aided Verification (CAV’01), Lecture Notes in Computer Science 2102 (2001), pp. 493–505.
Zwick, U. and M. Paterson, The complexity of mean payoff games, in: D.-Z. Du and M. Li, editors, Proc. 1st Int. Conf. on Computing and Combinatorics (COCOON’95), Lecture Notes in Computer Science 959 (1995), pp. 1–10.
