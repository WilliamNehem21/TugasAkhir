Egyptian Informatics Journal 24 (2023) 100388











Many-objective evolutionary algorithm based on three-way decision
Zhihua Cui, Bingting Li ⇑, Zhuoxuan Lan, Yubin Xu
Shanxi Key Laboratory of Big Data Analysis and Parallel Computing, Taiyuan University of Science and Technology, China



a r t i c l e  i n f o 


Article history:
Received 20 February 2023
Revised 23 May 2023
Accepted 9 June 2023
Available online 30 June 2023


Keywords:
Many-objective optimization problems Many-objective evolutionary algorithm Three-way decision
Convergence Diversity
a b s t r a c t 

In recent years, many-objective optimization problems have been widely used. however, with the increase of the number of objectives, the difficulty of solving increases exponentially, and the imbalance between convergence and diversity becomes more serious. In view of the above problems, this paper combines the idea of three-way decision, redesigns the environment selection strategy, and proposes a many-objective optimization algorithm based on three-way decision. Firstly, the distance from the indi- vidual to the ideal point is used as an index to measure individual convergence, the minimum distance from the individual to other solutions is used as an indicator to measure individual diversity, and the individuals with good convergence and good diversity are selected separately by combining the thresh- olds of the three-way decision; and secondly, A dynamic threshold acquisition method is designed to fur- ther improve the performance of the algorithm; Finally, it is proved that the algorithm can effectively balance convergence and diversity through tests of different data sets, so as to verify the feasibility and effectiveness of the algorithm
© 2023 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo
University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/
licenses/by-nc-nd/4.0/).





Introduction

In real life, Multi-objective Optimization Problems (MOPs) are prevalent. In MOPs [1–4,36,37], the objective functions are in con- flict with each other, that is, each objective function cannot reach the optimal solution at the same time, but there is a set of compro- mise solutions called the pareto optimal solution. At present, intel- ligent optimization algorithms are mainly used to solve MOPs, such as Genetic Algorithm (GA) [5], Ant Clony Optimization (ACO) [6], Particle Swarm Optimization (PSO) [7] and so on. When
solving MOPs (i.e. 2 ~ 3 objectives), this kind of algorithm has the
advantages of high efficiency and strong adaptability, and can be
handled efficiently without interference from various solving problems.
However, most of the optimization problems in real life belong to (the number of objectives is greater than 3) Many-objective Optimization Problems (MaOPs) [10], at this time, the objective spatial dimension increases exponentially, the difficulty of solving increases, the convergence and diversity of balanced solutions are more difficult [17], and the algorithm for solving MOPS is no longer applicable. Among the common MaOEA algorithms, MOEA/D uses Pareto  domination  and  penalty-based  boundary  intersection

* Corresponding author.
E-mail addresses: cuizhihua@tyust.edu.cn (Z. Cui), 351087024@qq.com (B. Li), 1984029@tyust.edu.cn (Y. Xu).
strategies to select good-quality individuals. GrEA combines Pareto domination with grid sorting to select individuals with good con- vergence and uses grid crowding distance to select individuals with good diversity. NSGA-III algorithm uses a non-dominant sort- ing strategy and reference point strategy. However, with the increase in the number of iterations, the number of non- dominant solutions in the population will gradually increase. How- ever, the reference point strategy only considers the diversity of the population. Therefore, common environmental selection meth- ods will lead to population convergence and diversity will be out of balance. Aiming at how to better balance individual convergence and diversity choice in environment selection, the three-way deci- sion provides a possible idea.
The Three-Way Decision (TWD) theory [11] is a decision- making model developed on the basis of rough set theory [12] pro- posed by Yiyu Yao, which is more in line with human cognition and efficient. It believes that there is enough information to judge whether things are good or bad, to make decisions about accep- tance or rejection. For some problems that do not have enough information to make decisions, you can put things into the bound- ary domain and delay the judgment of things, which is called delayed decision-making. When the evidence is sufficient and complete, make an acceptance or rejection strategy. In environ- mental selection, the distance from an individual to an ideal point is used as an index to measure individual convergence, and the minimum distance from an individual to other solutions is used


https://doi.org/10.1016/j.eij.2023.100388
1110-8665/© 2023 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



as an index to measure individual diversity. The decision to accept an individual with good convergence and diversity is made, while the decision to reject an individual with poor convergence and diversity is made. Delayed decisions are made for individuals with good convergence and poor diversity or with good diversity and poor convergence.
Combining the idea of three-way decision, this paper proposes a Many-objective evolutionary algorithm based on three-way deci- sion (MaOEA-TWD). The main work of this study is as follows:
As the number of objectives increases, the difficulty of solving the problem increases, and the conflict between convergence and diversity becomes more intense.
In this paper, combined with the idea of a three-way decision, a high-dimensional many-objective evolutionary algorithm based on three-way decisions is proposed.
In order to solve the problem that the traditional threshold can- not satisfy the three-way decision in the high-dimensional many- objective model, a new dynamic threshold acquisition method is proposed, which dynamically generates a pair of decision thresh- olds for each granularity.
The rest of this article is prepared below:
The background knowledge and techniques required for the model proposed in this paper are described in Section 2. In Sec- tion 3, the framework and process of the high-dimensional many-objective evolutionary algorithm model based on three- way decisions are introduced in detail. Experimental verification and analysis are provided in Section 4. Finally, the fifth part sum- marizes this paper and puts forward the future work.


Related work

With the increasing amount of data, the difficulty of solving high-dimensional multi-objective optimization problems increases gradually [39–47]. At present, among common high-dimensional multi-objective evolutionary algorithms [18–20], algorithms are usually classified according to the selection mechanism. The evolu- tionary process can be summarized into three parts: firstly, excel- lent parent populations are selected while inferior individuals are eliminated, to produce better offspring populations [21]. Secondly, excellent parent populations produce new offspring through recombination [22], including crossover or mutation; Finally, through environmental selection [23], the evaluation function is used to select the better individuals from all the individuals in the parent and child generations to form the next generation.
However, due to the increase in the number of objectives, the conflict between convergence and diversity of objectives is increas- ingly serious when solving high-dimensional many-objective evo- lutionary problems [24]. Therefore, this chapter summarizes the algorithm based on the selection mechanism. There are mainly the following categories:

High dimensional many-objective evolutionary algorithm based on Pareto domination.

Optimization algorithms based on Pareto domination enhance selection pressure by modifying the Pareto domination relation [31]. Sato [25] expanded or contracted the dominant area of indi- viduals by modifying the objective value with customized param- eters, thus changing the dominant relationship between individuals. Sun [26] selected inverted generational distance solu- tions with good convergence and diversity based on the IGD index, proposed a new dominant relationship, and developed an adaptive niche technology based on the perspectives of the candidate solu- tions, to improve the accuracy of IGD sampling reference points. Among algorithms based on Pareto domination, most MOEA shows
poor universality for problems with different Pareto domination. Therefore, the algorithm should have good applicability in the pro- cess of solving. Tian [27] proposed an adaptive strategy to dynam- ically adjust the dominance relationship according to the current generation number. The improvement of this algorithm ensures good applicability in solving Pareto frontier problems to a certain extent. While balancing diversity and convergence, how to ensure the scalability of the algorithm is also a problem that needs to be solved. GrEA [9] uses grid ranking, crowding distance and coordi- nate point distance to strengthen the selection pressure of the best direction, while maintaining a wide and even distribution of solu- tions to avoid local overcrowding. At the same time, GrEA [9] guides the algorithm to search in different directions, revealing the role of grid partition parameters.

High-dimensional many-objective evolutionary algorithm based on evaluation index.

According to the evaluation index, the distribution uniformity, diversity and convergence of the candidate solutions can be weighed to compare the advantages and disadvantages of the can- didate solutions, to increase the selection pressure of the algo- rithm. Monte Carlo simulation is used in HypE [28] to approximate accurate hypervolume values. The ranking of the solution caused by the overcapacity indication, the algorithm can make a trade-off between the accuracy of the estimate and the available computing resources. IGD is considered to be a reliable performance indicator for quantifying convergence and diversity of many-objective evolutionary algorithms. IGD was used to improve the accuracy of the solution [26], and the reference point set was adjusted according to the index contribution of the candi- date solution to enhance the universality of understanding [27]. Hausdorff distance is a tool to study the distance between objects in different fields, but in multi-objective optimization algorithms, Hausdorff distance does not fit the single outlier of the candidate
set used by the evolutionary strategy. Schuetze [29,30] based on the defined performance indicators Dp, it is composed of GD and IGD, can be regarded as the result set and the average hausdorff
distance between the Pareto frontier.

High-dimensional many-objective evolutionary algorithm based on decomposition problem.

The many-objective evolutionary problem is transformed into multiple sub-problems, and the transformed sub-problems are optimized simultaneously [38]. For example, MOEA/D [32] scalar optimization subproblems and optimize them simultaneously. Each subproblem only uses the information of neighboring sub- problems, which reduces the computational complexity of each generation. Using NSGA-III of the reference point strategy, EFRRR uses the vertical distance of the weight vector in the objective space to clearly ensure the diversity of the required solutions in the evolutionary process, so as to better achieve the balance between diversity and convergence among solutions. Cheng [33] proposed the RVEA algorithm, which uses a factory-based approach and guides the search by a set of predefined reference vectors.

High-dimensional many-objective evolutionary algorithm based on fusion selection strategy.
This algorithm combines different selection mechanisms and uses their respective advantages to balance diversity and conver- gence. The improved double archiving algorithm Two_Arch2 [34] is a low complexity algorithm, it has two archives, and allocates different selection principles to them, namely two indicators and



Pareto based environment selection strategies, focusing on conver- gence and diversity respectively. SPEA is proposed to find or approximate Pareto optimal set of multi-objective optimization problems. Zitzler proposed SPEA2 [24], which added two new mechanisms to improve its searching ability, one is a more effec- tive crossover mechanism, and the other is an archiving mecha- nism to maintain the diversity of solutions in the objective space and variable space. Selection strategies, including mating selection and environmental selection, are key factors in the design of many- objective evolutionary algorithm. In MaOEA-CSS [35], the algo- rithm takes into account the quality of each selected parent and the effectiveness of the selected parent combination as well as the performance of the population as a whole. At the same time, new measures of distance convergence and angle differentiation are proposed to solve the dimension problem in multi-objective optimization problems. The convergence index of the computa- tional efficiency of the algorithm selects descendant individuals one by one to increase the selection pressure toward the Pareto optimal frontier.

Many-objective evolutionary algorithm based on three-way decision

This chapter details the Many-objective evolutionary algorithm based on three-way decision (MaOEA-TWD). The idea of three-way decision is adopted to balance convergence and diversity in the solution process. Then, a dynamic threshold acquisition method of three-way decisions is proposed to enhance the performance of the algorithm. The basic steps of the algorithm are described in 3.1. Dynamic threshold acquisition methods are described in detail in 3.2. Time complexity analysis are described in detail in 3.3.

MaOEA-TWD algorithm

With the increase of the number of objectives, the difficulty of solving increases, and the conflict between convergence and diver- sity becomes more intense, this paper combines the ideas of three- day decisions, redesigns the environment selection strategy, and



Fig. 2. MaOEA-TWD algorithm model framework.

proposes a many-objective optimization algorithm based on	three-way decision (MaOEA-TWD), the basic steps of which are
shown in Fig. 2.
Step 1: Initialize population N, generate first-generation sub- groups, generate reference points and ideal points;
Step 2: Parent and offspring combine Rt ¼ Pt [ Qt (size N) and
select new parents (N) from among them;
Step 3: Divide 2 N individuals into multiple nondominated lay- ers (Z1, Z2, .. .) by nondominated ordering, and each layer will have H individuals. Individuals are then picked from the first layer to construct a new population until the population exceeds N or equals N for the first time, as shown in Fig. 1.
Step 4: Make your selection. At the L layer, the population size exceeds N or equals N for the first time. Then the L layer is called the critical layer, and the solution above the critical layer will be



Fig. 1. Eliminate the critical layer above.	Fig. 3. Three domains for three-way decision.



eliminated, where k = (N-L*H) individuals in the critical layer will be accepted.
Step 5: Set the convergence and diversity thresholds, and calculate the convergence and diversity of critical layer individuals, using the distance from the individual to the ideal point to represent the conver- gence of the individual, and the minimum distance from the individ- ual to other solutions to express the diversity of the individual.
Step 6: Compare the convergence and diversity of critical layer individuals with convergence threshold and diversity threshold, put individuals with good convergence and diversity into P domain and N domain, and put the rest into B domain, if k is less than the sum of P domain plus N domain, then select k individuals in P domain and N domain, and form a new population with the former L-1 layer,
if k is greater than the sum of P domain plus N domain, then indent
The three domains satisfy the following relationships:
U = P ∪ N ∪ B	(3)
P ∩ N = £	(4)
N ∩ B = £	(5)
P ∩ B = £	(6)
Let the current number of iterations be t, there are Nx individu- als in the critical layer, and the convergence and diversity of the critical layer individuals in the current number of iterations are calculated respectively, the maximum and minimum values of
convergence of individuals are amax and amin, the mean value of con-

t	t

the threshold and repeat the sixth step as the critical layer until
the selection is completed to form a new parent population.
vergence is at, the maximum and minimum values of diversity are
—
, and the mean value of diversity is  ,

Step 7: Determine whether the current number of iterations t	t	t	dt

reaches the maximum number of iterations. If not, t = t + 1 and go back for a second step, and if the number of iterations is reached, output the population.

A selection strategy based on three-way decision

Environmental selection using three-way decision
The three decision-making ideas are to divide a whole into the required 3 domains by introducing two thresholds, the P domain, the B domain, and the N domain Fig.3. In this paper, the thresholds
for convergence and diversity are denoted by a and b respectively.

When the convergence of an individual is less than or equal to
indented distance of the threshold each time. The two decision thresholds, at and bt, are shown below respectively.
at = amin + E	(7)
bt = dmax — F	(8)
E = (at — amin)/katNx	(9)
—
= (dt	— dt)/kdtNx	(10)
The above equation (7–10) is combined to obtain the thresholds
at and bt

the convergence threshold a, put the individual into the P
a = amin
a— — amin)/k N
(11)

domain;
t	t  +( t	t
at  x

when the diversity of an individual is greater than or equal
max
max	—

to the diversity threshold b, the individual is placed in the N domain;
When none of the above is satisfied, put the entity into the B
bt = dt	— (dt	— dt)/kdtNx	(12)
The values of k are shown below.
k = (amax — a— )/(amax — amin)	(13)

domain,

K individuals are selected for the critical layer, as shown in
at	t

—
t


min
t

max
t

min


Formula (1).
k = sum(PopObj)— sum(Next)	(1)
where sum(PopObj) is the number of offspring, and sum(Next) is the
kdt = (dt — dt  )/(dt	— dt )	(14)
The above equation (7–12) is combined to obtain the thresholds
at and bt .
(amax — amin )(a— — amin )

number of all dominant layer solutions.
at = amin +   t	t	t	t	
(15)

t	(amax — a— )N

The individuals in domains P, B and N are a, b and c. If the value of k is less than a + c, k individuals are randomly selected in the P
t	t  x
max	min	max	—
b = dmax — ( t	—  t  )( t	—  t)

(16)

and N domains to form new progeny. If the value of k is greater	t	t
—	min

than a + c, domain B is treated as the critical layer and three deci- sions continue to be made until k individuals are selected.

The setting of dynamic thresholds
The setting of threshold has always been the focus of three-way decision research, and the traditional threshold setting method needs to prioritize the loss function of the given dataset, which cannot meet the application of the three-way decision on many- objective optimization models, and in the many-objective opti- mization algorithm, the convergence and diversity thresholds of the population change with the change of the number of popula- tion iterations. Therefore, a three-way decision dynamic threshold acquisition method is designed.
Let U=(x,x,	, x) is a non-empty finite set of objects. These
three decisions divide the entity set U into three disjoint domains P, N and B by the convergence and diversity thresholds atand bt, respectively.
→ {P, N, B}	(2)
(dt — dt  )Nx
According to the above formula, the diversity and convergence of individuals in the critical layer are compared successively, and
the P domain, B domain and N domain are divided. If k individuals cannot be selected in the P and N domains, the thresholds at and bt are indented to E and F respectively, and the B domains are divided into new P, B, and N domains, and individuals are continued to be
selected until k individuals are selected, and then subsequent steps of the algorithm are carried out.

Time complexity analysis

In this section, the time complexity of the proposed MaOEA- TWD algorithm is analyzed. The main steps of the algorithm include population initialization, population selection, crossover and mutation operations, fast non-dominated sorting, population convergence and diversity calculation, and linear threshold three- way decision selection strategy. Assuming that population of size is N, the objective dimension is M. So, this algorithm to select



the operation time complexity is O (Nlog2 N), crossover operation time complexity is O (1), the variation of time complexity is O (1), fast non dominated sorting operation time complexity is O (MN2), the time complexity of calculating population convergence and diversity is O(2 N), and the operation time complexity of three- way decision selection strategies with linear threshold is O(N2). In summary, the time complexity of MaOEA-TWD-LT algorithm proposed in this section is O(MN2).
Experimental results and analysis of experimental datasets

Test functions

In this chapter, we consider the instance problem DTLZ test set and six questions from the WFG test set, DTLZi (i = 1, 2,.. .,7) and WFGi (i = 1, 2,.. .,6) for testing. DTLZ problem Pareto frontier fea- tures are concave, linear, degenerate, bias, etc. WFG problem Par- eto frontier features are Impartibility, Discrete, Convex etc.
Table 1
Specific characteristics of the DTLZ and WFG test set.

Test the function	features


DTLZ1	Multimodality, Linear
DTLZ2	Concave
DTLZ3	Multimodality, Concave
DTLZ4	Bias, Concave
DTLZ5	Degenerate
DTLZ6	Multimodality, Degenerate, Discrete
DTLZ7	Mixed, Degenerate
WFG1	Mixed, Offset
WFG2	Impartibility, Discrete, Convex
WFG3	Linear, Impartibility
WFG4	Concave
WFG5	Offset, Concave
WFG6	Impartibility, Concave



Table 2
DTLZ and WFG test function parameter setting.



Table 3
The IGD values of different thresholds are compared to the algorithm.
Therefore, these benchmark questions are challenging to evaluate the performance of MaOEAs. The specific characteristics of DTLZ and WFG test sets are shown in Table 1.

Parameter setting

In this chapter, we consider the instance problem DTLZi (i = 1,2,
.. .,7) and WFGi(i = 1,2,.. .,6). Set the objectives number is m, popula- tions size is d and iterations is t Table 2. MaOEA-TWD algorithm is compared with classic algorithms GrEA [13], RVEA [14], MaOEARD [15], EFRRR [16] and NSGA-III [8]. We used 13 example questions and 5 different objective numbers to get 65 test instances.

Algorithm comparison

We selected five common high-dimensional many-objective evolutionary algorithms to verify the performance of MaOEA- TWD: Grid-based evolutionary algorithm GrEA [13], Reference Vector-guided Multi-objective Optimization Evolutionary Algo- rithm RVEA [14], Multi-objective Evolutionary Algorithms: objec- tive Space Reduction and Diversity Improvement MaOEARD [15], Convergence and Diversity Balance EFRRR [16] in Decomposition based Multi-objective Optimizer, and Reference Point Non- dominated Sorting Objective optimization algorithm NSGA-III [8].

Performance indicators

The convergence performance and distribution performance of the algorithm were evaluated by the comprehensive performance evaluation index IGD. The smaller the value, the better the overall performance of the algorithm including convergence and distribu- tion performance.

Influence of different thresholds on the results of MaOEA-TWD algorithm

In order to optimize the performance of the MaOEA-TWD algo- rithm, three different thresholds of decision decisions are selected, and the influence of different thresholds on the algorithm results is compared on the test data set DTLZi (i = 1, 2,.. .,7) and WFGi (i = 1, 2,.. .,6). Heuristic threshold means that the histogram is divided into two groups at a certain threshold. When the variance between the two groups is the largest, the threshold is determined. The average threshold means that the average convergence or diversity of a population is taken as the threshold. Set M = 4, then 13 differ- ent test examples are obtained, and the IGD values of the MaOEA- TWD algorithm are obtained with different thresholds, as shown in Table 3. The dynamic threshold acquisition method used in this paper obtains the optimal solution on the datasets DTLZ and





WFG, which proves that the dynamic threshold method can improve the performance of the algorithm and make the MaOEA- TWD algorithm stable. Therefore, the dynamic threshold is more suitable for the MaOEA-TWD algorithm than the other two thresholds.
The dynamic threshold varies with the number of population iterations, and the threshold for each generation is determined by 3.2 Chinese equation (11)(12), and the influence of different k values on the results of the MaOEA-TWD algorithm is shown in Fig. 4.
From Fig. 4, we can see that the k value set in this paper makes the IGD value of the MaOEA-TWD algorithm the lowest, so the dynamic threshold method set in this paper can make the MaOEA-TWD algorithm perform better.

Compare experimental results with different algorithms

In this paper, we consider thirteen instance problems DTLZi (i = 1, 2,.. .,7), WFG (i = 1, 2,.. .,6) and set five different objective quantities (M = 4, 6, 8, 10, 15) to compare the MaOEA-TWD algo- rithm with the classical algorithms GrEA [13], RVEA [14], MaOEARD [15], EFRRR [16], NSGA-III [8]. Get 65 test examples.
Table 4 shows the IGD values for different algorithms on DTLZ.
In Table 4, IGD is a comprehensive evaluation index, and the smaller the IGD value, the better the algorithm performance. Bold font on gray indicates the optimal solution among the six algo- rithms. ‘‘+” indicates that the algorithm is superior to the MaOEA-TWD algorithm, ‘‘-” indicates that the algorithm is infe- rior to the MaOEA-TWD algorithm, and ‘‘=” indicates that the algorithm is equal to the MaOEA-TWD algorithm. By comparing the IGD values of six different algorithms on the standardized test problem DTLZi (i = 1, 2,.. .,7), out of 35 comparison results, MaOEA-TWD obtained the optimal solution 24 times, performed well on the data set DTLZ1, DTLZ2, DTLZ3, DTLZ6, DTLZ7, and performed better when the objective number M was equal to 6 and 8, the GrEA algorithm obtained the optimal solution 5 times, and the RVEA algorithm obtained the optimal solution 3 times. EFRRR has an optimal solution three times, MaOEARD and NSGA-III do not have an optimal solution. By comparing with the other five algorithms, it is proved that the MaOEARD algo- rithm and the NSGA-III algorithm perform poorly on the test set DTLZ, while the MaOEA-TWD algorithm has better perfor- mance advantages.
In Table 5, IGD is a comprehensive evaluation index, and the smaller the IGD value, the better the algorithm performance. The bolded font on a grey background indicates the best solution for





Fig. 4. The variation trend as the number of evaluations increases of the different threshold on 8-objectives DTLZ5.


Fig. 5. The variation trend as the number of evaluations increases of the six algorithms on 8-objectives DTLZ5.








Table 4
IGD values for different algorithms on DTLZ.


Table 5
IGD values for different algorithms on WFG.



the six algorithms. +‘‘ indicates that this algorithm is superior to MaOEA-TWD, ”-‘‘ indicates that it is inferior to MaOEA-TWD, and ”=‘‘ indicates that this algorithm is equal to MaOEA-TWD. By com- paring six different algorithms on standardized test problems WFGi (i = 1,2.. . 6). Among the 30 comparison results obtained, MaOEA-TWD has obtained the optimal solution for 14 times, per- forming well on data sets WFG1, WFG2, and WFG4. Moreover, when the target number M is equal to 8, the algorithm performs better, while GrEA has obtained the optimal solution for 12 times, with GrEA obtaining the most optimal solutions. The reason is that the GrEA algorithm uses a grid to enhance the selection pressure. Two times the RVEA algorithm is equal to the optimal solution, and seven times the solution is better than the MaOEA-TWD. This is due to RVEA’s scaling method of angle penalty distance to bal- ance the convergence and diversity of the solutions in the high- dimensional target space. NSGA-III obtained the optimal solution twice, and MaOEA-TWD was superior to Maoea-TwD 9 times, mainly because NSGA-III used the reference point strategy to bal- ance the diversity and convergence of the solutions. WFG1 has the characteristic of mixed bias, WFG2 is a discrete curve, and WFG4 is a concave problem. MaOEA-TWD has dealt with these dif- ficulties effectively, striking a good balance between the diversity and convergence of algorithms. The main reason is that the selec-
tion strategy based on a three-way decision plays an obvious role in alleviating the conflict between algorithm diversity and conver- gence. Compared with the other five algorithms, MaOEA-TWD algorithm has better performance. In summary, MaOEA-TWD is superior to other algorithms.
In Table 6, GD is the convergence index, the smaller the GD value, the better the solution set convergence, Spacing is the diver- sity index, the smaller the Spacing value, the better the solution diversity. When the objective is 6, the convergence and diversity of the MaOEA-TWD algorithm on the test problem DTLZ5 are the best, the convergence and diversity of the GrEA algorithm are bet- ter, when the objective is 8, the convergence and diversity of the MaOEA-TWD algorithm are the best, the convergence and diversity of the GrEA algorithm become worse, the convergence and diver- sity of the EFRRR algorithm become better, when the objective reaches 15, the convergence and diversity of the MaOEA-TWD algorithm are the best, the diversity is better, The GrEA algorithm has good convergence but poor diversity, and the EFRRR algorithm has the best diversity but poor convergence. The algorithms RVEA, MaOEARD and NSGA-III have poor convergence and diversity under different objectives. Therefore, the MaOEA-TWD algorithm can better balance convergence and diversity, and has better per- formance advantages.



Table 6
Convergence and diversity of different algorithms on DTLZ5 test problems at objectives 6, 8 and 15.


Table 7
Convergence and diversity of different algorithms on WFG2 test problems at objectives 6, 8 and 15.



In Table 7, GD is a convergence indicator. The smaller the GD value, the better the convergence of the solution set. Spacing is a diversity indicator. The smaller the Spacing value, the better the solution set diversity. When the target was 6, MaOEA-TWD algo- rithm had the best convergence and diversity on the test prob- lem WFG2, while GrEA and RVEA algorithms had better convergence and diversity. When the target was 8, MaOEA- TWD algorithm had the best convergence and diversity, while the GrEA algorithm had worse convergence and diversity. RVEA algorithm has good convergence and diversity. When the target reaches 15, the MaOEA-TWD algorithm has the best convergence and diversity, GrEA algorithm has good convergence but poor diversity, EFRRR algorithm has good diversity and convergence, and RVEA algorithm has the worst convergence and diversity. MaOEARD and NSGA-III have poor convergence and diversity for different targets. Therefore, MaOEA-TWD can better balance convergence and diversity, and has better performance advantages.
In Fig.5, IGD, GD and Spacing trends as the number of evalua- tions increases of the six algorithms on 8-objectives DTLZ5. IGD represents the comprehensive index, the smaller the IGD value, the better the comprehensive performance of the algorithm, GD means the convergence index, the smaller the GD value, the better the convergence of the algorithm, Spacing represents the diversity index, the smaller the Spacing value, the better the algorithm diversity. It can be seen from the figure that the IGD, GD and Spac- ing indicators of the MaOEA-TWD algorithm are smaller, so the performance of the MaOEA-TWD algorithm is better.


Conclusion

Aiming at the problem of convergence and diversity conflict caused by the increase of objectives in the many-objective opti- mization problem, this paper proposes a many-objective evolu- tionary algorithm based on three-way decision (MaOEA-TWD), which integrates the three-way decision ideas into the environ- mental selection, and then selects individuals with strong con- vergence and rich diversity in the population. At the same time, the three dynamic thresholds of decision are combined to improve the performance of the many-objective optimization algorithm. The experimental results show that compared with the commonly used many-objective optimization algorithm, the MaOEA-TWD algorithm proposed in this paper has better perfor- mance and can effectively balance the convergence and diversity of populations.


CRediT authorship contribution statement

Zhihua Cui: Methodology, Supervision, Project administration, Funding acquisition. Bingting Li: Software, Data curation, Writing – original draft, Validation, Formal analysis, Investigation. Zhuox- uan Lan: Writing – review & editing. Yubin Xu: Conceptualization.
Declaration of Competing Interest

The authors declare that they have no known competing finan- cial interests or personal relationships that could have appeared to influence the work reported in this paper.


Acknowledgments

This work was supported by the National Natural Science Foun- dation of China (Grant No. 61806138); the Central Financial Guid- ance for Local Science and Technology Development Fund (Grant No. YDZJSX2021A038); China University Industry-University- Research Innovation Fund - Future Network Innovation Research and Application Project(2021FNA04014); and Taiyuan University of Science and Technology Joint Training Demonstration Base for Graduate Students(JD2022003).


References

Zhou A, Qu B-Y, Li H, Zhao S-Z, Suganthan PN, Zhang Q. Multi-objective evolutionary algorithms: a survey of the state of the art. Swarm Evol Comput 2011;1(1):32–49.
Cai X, Lan Y, Zhang Z, Wen J, Cui Z, Zhang W. A Many-Objective Optimization Based Federal Deep Generation Model for Enhancing Data Processing Capability in IoT. IEEE Trans Ind Inf 2023;19(1):561–9.
Cui Z, Zhang Z, Hu Z, et al. A Many-Objective Optimization Based Intelligent High Performance Data Processing Model for Cyber-Physical-Social Systems. IEEE Trans Network Sci Eng 2022;9(6):3825–34.
Sun Q, Chen L, Liu Y, et al. Variety and Convergence of Genetic Algorithm. J4 2006;44(06):68–72.
Ge J, Qiu Y, Wu C, et al. A review of genetic algorithm research. Appl Res Comput 2008;10:2911–6.
Duan H, Wang D, Zhu J, et al. Development on ant colony algorithm theory and its application. Control Decision 2004;19(12):1321–6.
Yang W, Li Q. Review of particle swarm optimization algorithms. Eng Sci 2004;6(05):87–94.
Deb K, Jain H. An Evolutionary Many-Objective Optimization Algorithm Using Reference-Point-Based Nondominated Sorting Approach, Part I: Solving Problems With Box Constraints. IEEE Trans Evol Comput 2014;18(4):577–601.
Lygoe R, Cary M, Fleming P. ‘‘A Real-World Application of a Many-Objective Optimisation Complexity Reduction Process,” Evolutionary Multi-Criterion. Optimization 2013:641–55.
Cai X, Zhang J, Ning Z, et al. A Many-Objective Multistage Optimization-Based Fuzzy Decision-Making Model for Coal Production Prediction. IEEE Trans Fuzzy Syst 2021;29(12):3665–75.
Liang D, Cao W. Three-way Decisions: Model and the State of the Art. Univ Electron Sci Technol China 2019;21(1):104–12.
Miao D, Li D. Rough set theory, algorithms, and applications. Beijing: Tsinghua University publishing; 2008.
Yang S, Li M, Liu X, Zheng J. A Grid-Based Evolutionary Algorithm for Many- Objective Optimization. IEEE Trans Evol Comput 2013;17(5):721–36.
Cheng R, Jin Y, Olhofer M, Sendhoff B. A Reference Vector Guided Evolutionary Algorithm for Many-Objective Optimization. IEEE Trans Evol Comput 2016;20 (5):773–91.
He Z, Yen GG. Many-Objective Evolutionary Algorithm: Objective Space Reduction and Diversity Improvement. IEEE Trans Evol Comput 2016;20 (1):145–60.
Yuan Y, Xu H, Wang Bo, Zhang Bo, Yao X. Balancing Convergence and Diversity in Decomposition-Based Many-Objective Optimizers. IEEE Trans Evol Comput 2016;20(2):180–98.
Zhang Z, Cao Y, Cui Z, et al. A Many-Objective Optimization Based Intelligent Intrusion Detection Algorithm for Enhancing Security of Vehicular Networks in 6G. IEEE Trans Veh Technol 2021;70(6):5234–43.

Singh HK, Isaacs A, Ray T. A Pareto Corner Search Evolutionary Algorithnr and Dimensionality Reduction in Many-objective Optimization Problems[J]. IEEE Trans Evol Comput 2011;15(4):539–56.
Herrero JG, Berlanga A, Lopez JMM. Effective Evolutionary Algorithms for Many-specifications Attainment: Application to Air Traffic Control Tracking Filters[J]. IEEE Trans Evol Comput 2009;13(1):151–68.
Jaimes AL, Montano AA, Coello CA. ‘‘Preference Incorporation to Solve Many- objective Airfoil Design Problems[J]”. 2011 IEEE Congresson. Evol Comput 2011:1605–12.
Bi X, Wang C. A Niche-Elimination Operation based NSGA-III Algorithm for Many-objective Optimization[J]. Appl Intell 2018;48(1):118–41.
Deb K, Agrawal RB. Simulated Binary Crossover for Continuous Search Space[J]. Complex Systems 1994;9(3):115–48.
Cheng JX, Yen GG, Zhang GX. A Many-Objective Evolutionary Algorithm with Enhanced Mating and Environmental Selections[J]. IEEE Trans Evol Comput 2015;19(4):592–605.
He Z, Yen G. Many-Objective Evolutionary Algorithms Based on Coordinated Selection Strategy[J]. IEEE Trans Evol Comput 2017;21(2):220–33.
Sato H, AguirreHE, TanakaK. Controllingdominancearea ofsolutionsandits impact ontheperformanceof MOEAs[C]. In:ObayashiS, DebK,PoloniC,Hiroyasu T, Murata T, editors. Lecture Notes in Computer ScienceEvolutionary Multi-Criterion Optimization. Berlin, Heidelberg: Springer Berlin Heidelberg; 2007. p. 5–20.
Sun Y, Yen GG, Yi Z. IGD Indicator-Based Evolutionary Algorithm for Many- Objective Optimization Problems[J]. IEEE Trans Evol Comput 2019;23(2):173–87.
Tian Ye, Cheng R, Zhang X, Cheng F, Jin Y. An Indicator-Based Multiobjective Evolutionary Algorithm With Reference Point Adaptation for Better Versatility [J]. IEEE Trans Evol Comput 2018;22(4):609–22.
Bader J, Zitzler E. HypE: An Algorithm for Fast Hypervolume-Based Many- Objective Optimization[J]. Evol Comput 2011;19(1):45–76.
Schuetze O, Sanchez G, Coello CAC. In: A new memetic strategy for the numerical  treatment  of  multi-objective  optimization  problems [C]. Atlanta: ACM; 2008. p. 705–12.
Schutze O, Esquivel X, Lara A, Coello CAC. Using the averaged Hausdorff distance as a performance measure in evolutionary multi objective optimization[J]. IEEE Trans Evol Comput 2012;16(4):504–22.
Wang H, Yao X. Corner sort for Pareto-based many-objective optimization[J]. IEEE Trans Cybernetics 2014;44(1):92–102.
Zhang Q, Hui L. MOEA/D: A Multi-objective Evolutionary Algorithm Based on Decomposition[J]. IEEE Trans Evol Comput 2007;11(6):712–31.
Wang H, Jiao L, Yao X. Two_Arch2: An Improved Two-Archive Algorithm for Many-Objective Optimization[J]. IEEE Trans Evol Comput 2015;19(4):524–41.
Zitzler E, Laumanns M, Thiele L. SPEA2: Improving the Performance of the Strength Pareto Evolutionary Algorithm[J]. Parallel Problem Solving from Nature-PPSN VIII 2004;3242(4):742–51.
Cai X, Hu Z, Chen J. A many-objective optimization recommendation algorithm based on knowledge mining. Inf Sci 2020;537(3):148–61.
Li W, Yao X, Zhang T, Wang R, Wang L. Hierarchy Ranking Method for Multimodal Multiobjective Optimization With Local Pareto Fronts. IEEE Trans Evol Comput 2023;27(1):98–110.
Li K, Zhang T, Wang R, et al. Deep Reinforcement Learning for Combinatorial Optimization: Covering Salesman Problems. IEEE Trans Cybern 2022;52 (12):13142–55.
Li K, Zhang T, Wang R. Deep Reinforcement Learning for Multiobjective Optimization. IEEE Trans Cybern 2021;51(6):3103–14.
Li Y, Gong W, Li S. Multitasking optimization via an adaptive solver multitasking evolutionary framework. Inf Sci 2023;630:688–712.
Li Y, Gong W, Li S. Evolutionary competitive multitasking optimization via improved adaptive differential evolution[J]. Expert Syst Appl 2023;217:119550.
Li R, Gong W, Wang L, Lu C, Jiang S. Two-stage knowledge-driven evolutionary algorithm for distributed green flexible job shop scheduling with type-2 fuzzy processing time[J]. Swarm Evol Comput 2022;74:101139.
Sharon Femi P, Ganesh Vaidyanathan S. An efficient ensemble framework for outlier detection using bio-inspired algorithm[J]. Int J Bio-Inspired Comput 2022;19(2):67–76.
Shojaeiyan S, Niknam T, Nafar M. A novel bio-inspired stochastic framework to solve energy management problem in hybrid AC-DC microgrids with uncertainty[J]. Int J Bio-Inspired Comput 2021;18(3):165–75.
Wu T, Neri F, Pan L. On the Tuning of the Computation Capability of Spiking Neural Membrane Systems with Communication on Request[J]. Int J Neural Syst 2022;32(8):pp.
Xia P, Ni Z, Zhu X, He Q, Chen Q. A novel prediction model based on long short- term memory optimised by dynamic evolutionary glowworm swarm optimisation for money laundering risk[J]. Int J Bio-Inspired Comput 2022;19(2):77.
Zatout MS, Rezoug A, Rezoug A, Baizid K, Iqbal J. Optimisation of fuzzy logic quadrotor attitude controller – particle swarm, cuckoo search and BAT algorithms[J]. Int J Syst Sci 2022;53(4):883–908.
Wang Z, Deng A, Wang D, Wu T. A parallel algorithm to solve the multiple travelling salesmen problem based on molecular computing model[J]. Int J Bio-Inspired Comput 2022;20(3):160.
