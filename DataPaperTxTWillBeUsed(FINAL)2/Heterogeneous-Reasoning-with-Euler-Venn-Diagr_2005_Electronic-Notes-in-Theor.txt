Electronic Notes in Theoretical Computer Science 134 (2005) 153–187 
www.elsevier.com/locate/entcs


Heterogeneous Reasoning with Euler/Venn Diagrams Containing Named Constants and FOL
Nik Swoboda 1,3
Departamento de Inteligencia Artiﬁcial Universidad Polit´ecnica de Madrid
Campus de Montegancedo, Boadilla del Monte, Madrid, 28660, Spain

Gerard Allwein2
Naval Research Laboratory, Code 5543 4555 Overlook Avenue SW Washington DC 20375-5337, USA

Abstract
The main goal of this paper is to present the basis for a heterogeneous Euler/Venn diagram and First Order Logic (FOL) reasoning system. We will begin by defining a homogeneous reasoning system for Euler/Venn diagrams including named constants and show this system to be sound and complete. Then we will propose a heterogeneous rule of inference allowing the extraction of formulas of FOL from an Euler/Venn diagram. In defining this rule we will attempt to capture the “explicit” information content of an Euler/Venn diagram in a way similar to the Observe rule in the Hyperproof [1] system. Two definitions for this heterogeneous rule will be presented, one syntactically based, which is intended to be intuitive and motivational, and a second based upon a framework employing information types to model heterogeneous reasoning previously pre- sented [17]. Lastly we will explore the relationships between these two notions.
Keywords: Heterogeneous reasoning, Venn diagrams, Euler diagrams


1 Email: nswoboda@clip.dia.fi.upm.es
2 Email: allwein@itd.nrl.navy.mil
3 A Ram´on and Cajal research grant provided by the Spanish Ministry of Science and
Technology provided partial support for this work.


1571-0661 © 2005 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2005.02.023

Introduction
A little more than a decade has passed since Shin [12] and Hammer [6] re- ignited interest in Venn diagrams and spurred their use in formal reasoning sys- tems. Subsequently, related systems have been studied including Euler/Venn diagrams [16], constraint diagrams [10,15,4], spider diagrams [5,8] and oth- ers. A very useful survey of Euler-based diagrammatic systems can be found in [14]. Here we will focus our interest in an extended version of Euler/Venn diagrams including named constants and their use in a heterogeneous FOL and Euler/Venn reasoning system.
Euler/Venn diagrams are a modified version of the Venn diagram system presented by Shin and Hammer which include diagrams with both ‘Venn- like’ and ‘Euler-like’ features. In Euler/Venn diagrams curves can be drawn which completely contain other curves or which are completely disjoint from other curves. Furthermore, shading and anonymous constant chains in these diagrams carry information regarding the members of represented sets. Here modifications to this system will be presented which make these diagrams more suitable for reasoning along with FOL. More specifically, the system presented here will replace the anonymous constant sequences (Shin and Hammer’s x- sequences) with named constant sequences and will exclude models with empty domains. 4 This change will allow information carried by FOL formulas like “Dog(fido)” to be more precisely expressed in the diagrams. An example diagram can be seen in Fig. 1. These modifications trigger further changes to the system’s rules of inference to maintain soundness and completeness. More specifically, rules are added to allow the addition of constant sequences, the combination of constant sequences, and to address the two new kinds of inconsistency that can occur in these diagrams.
After presenting the homogeneous diagrammatic system we will then turn our attention to heterogeneous Euler/Venn and FOL reasoning. We will present two heterogeneous rules of inference for the extraction of FOL from Euler/Venn diagrams with constants which will be motivated by an interest in capturing the “explicit” information content of a diagram. The first of these two rules will be syntactically based in the interest of simplicity and intuitive- ness. Then a second information type based approach [17] will be given and the relations between these two rules will be explored.


4 Empty domains are not permitted in typical FOL systems due to the strange behavior that they cause when dealing with quantified expressions. For example the formula “∀x((A(x) ∨
¬A(x)) is no longer universally true when empty domains are allowed. Thus to reason heterogeneously, in a natural manner, with FOL it is necessary to eliminate empty domains from the diagrammatic system.



Fig. 1. An example Euler/Venn diagram with named constants
Euler/Venn Diagrams with Named Constants (EV c)
Here and throughout the remainder of the paper, risking confusion in the interest of readability, we will refer to diagrams of the new EV c system as simply Euler/Venn diagrams and references made to diagrams of the old EV system will be explicitly noted.

The Vocabulary of EV c
Let L be some set of predicates, each which can be thought of as the label of some curve of an Euler/Venn diagram, and let the set Terms be the union of a set Cons of constant symbols and a set Var of variable symbols also occurring in those diagrams. For the purposes of this project, free variables and constants in an Euler/Venn diagram will be treated almost identically. Thus, free variables will be replaced by fresh constants at the point of their
evaluation. 5 Using these collections, the vocabulary of EV c consists of the following elements:
Rectangles: Each rectangle denotes the domain of discourse to be repre- sented by the diagram.
Closed Curves: A countably infinite set of closed curves, each uniquely labeled with predicate symbols from L. 6 Each of these curves is taken to

5 A similar treatment of free variables is described in [3].
6 This includes a very broad collection of curves, even those that self-intersect. This is done
to ensure that any Euler/Venn diagram with shading can be redrawn as a logically equivalent Euler/Venn diagram with any shaded area removed. Unfortunately this also results in many diagrams which are difficult to interpret. Easy to define and stricter restrictions which would allow the removal of any shaded area while at the same time only allowing diagrams which are intuitive and easy to interpret are unknown to the authors.


represent the set which corresponds to its label.
Shading: The shading of areas in the diagram denotes that the set repre- sented by that area is empty.
Constant Symbols: A countably infinite set of individual constant symbols from Terms.
Lines: Lines are used to connect individual constants with the same name in different regions to illustrate the uncertainty regarding which set contains that constant.

The Grammar of EV c
Notion of region
A region of a diagram is any, possibly empty, area of the diagram that is completely enclosed by lines of that diagram. 7 Any region of the diagram completely enclosed by a closed curve is referred to as a basic region. Each basic region has a unique label, the label of its enclosing curve.
The collection of regions is closed under union, intersection, and comple- ment; thus a region may contain disconnected parts. These operations are defined as follows:
∪ The union of two regions is the region containing both of those regions and no others.
∩ The intersection of two regions is the region that is common to both regions.
− The difference of two regions is the region contained in the first but not contained in the second.
r The complement of a region is the region not contained in that region but still within the rectangle of the diagram.
⊂ One region is the subset of another if that region is entirely contained within the other.
A region which can be defined using the previous operations from basic regions, but is not represented in the diagram (has no area in the diagram) will be called a missing region. A minimal region is any non-missing region which is not crossed by any of the lines of that diagram (i.e., any region that can not be thought of as the union of other non-missing regions).

7 Here we present the notion of a region using areas, but they could be alternatively defined by thinking of the diagram as being contained in a plane with regions being open sets of points within the diagram and bound by lines of the diagram in that plane.


Formation rules
Formation rules for well-formed diagrams VEV c 8 of EV c:
Any diagram containing only a Rectangle is a member of VEV c.
If D ∈ VEV c then:
D with the addition of any closed curve C with label L (not already occurring in the diagram) completely within the rectangle of D so that all the minimal regions intersected by C are split into at most two new regions, is a member of VEV c.
D with the shading of any minimal region is a member of VEV c.
D with the addition of an individual constant symbol to any minimal region is a member of VEV c.
D with the addition of a constant symbol n to any minimal region and the inclusion of a line connecting the new n to an existing n in a different minimal region such that the new sequence doesn’t have more than one link in any minimal region, is a member of VEV c.
No other diagram is in VEV c.
It should be noted that, as in the old Euler/Venn diagrams, no two disjoint regions in a diagram can be considered to represent the same set. One other important aspect of these new Euler/Venn diagrams is that two separate con- stant sequences containing the same constant are permitted. Some example diagrams in VEV c are shown in Fig. 2. We will use the term features of a region to generically describe the state of a region of the diagram, i.e., that one or more links of certain constant sequences are in that region, that it is shaded, or that it is missing. Likewise, the collection of the features of all of the regions of a diagram will be referred to as the features of a diagram.

Notion of a tag
At times we will need to refer to the missing or non-existing regions of Eu- lerized Venn diagrams; tags are introduced as simply an auxiliary notion to give a mechanism for referring to these regions. Given the set {L1,..., Ln}
of labels of a diagram D ∈ V, a tag is a subset of {L1, L1,..., Ln, Ln} not
containing Li and Li for any i (1 ≤ i ≤ n). A tag τ is said to be complete if for each label Li of D, either Li ∈ τ or Li ∈ τ .
Thus for each basic region labeled L there will be a tag {L} corresponding to it and tag {L} corresponding to the complement of that region. Then given two regions tagged with τ1 and τ2 the tag for the intersection of those

8 Throughout the rest of this work, EV c subscripts will be omitted when this will not result in ambiguity.


	

(a) Well-Formed Diagram	(b) Not Well-Formed Diagram

Fig. 2. Examples of diagrams of VEV c

regions will be τ1 ∪ τ2 (provided that this tag doesn’t contain Li and Li for some Li). We then see that all the complete tags consisting of labels L1,..., Ln correspond exactly to all of the minimal regions of a Venn diagram (a diagram with no missing regions) having curves with each of those labels. We also allow the tag {} to refer to the region enclosed by the rectangle of the diagram. It should be noted that in diagrams with missing regions, tags can still be used to refer to the missing regions that could be re-introduced into the diagram. These intuitions are made precise by the following definition:
Definition 2.1 Tag Assignment Function
Given a diagram D ∈ V containing curves labeled L1,..., Ln, the function regionD from the tags of D’s labels to the regions of D will be defined as follows:
For the region r enclosed by the rectangle of D regionD({}) = r.

For each basic region r labeled L in D regionD({L}) = r and regionD({L}) = 
r.
Assume regionD(τ1) = r1 and regionD(τ2) = r2 and τ1 ∪ τ2 is a tag, if the region r1 ∩ r2 is missing in D(it is not represented in the diagram) then regionD(τ1 ∪ τ2) = ∅ otherwise regionD(τ1 ∪ τ2) = r1 ∩ r2. 9
It is important to point out that not every region in a diagram has a tag, but rather only the region contained by the rectangle, and regions that are the intersection of basic regions with the complements of basic regions.

9 Here the issue of missing regions is addressed for the system to be able to deal correctly with Euler type diagrams illustrating set inclusion and sets which are disjoint.


Notion of counterpart
Intuitively, two regions in two different diagrams are said to be counterparts if they are both interpreted as representing the same set. Given two diagrams D and D' we will say that region r of D and r' of D' are counterparts if there is a tag τ such that regionD(τ ) = r and regionD' (τ ) = r . Counterparts agree with respect to shading and whether they are missing in two diagrams when for any two regions that are counterparts one is shaded iff the other is shaded, one is missing iff the other is missing.
Counterparts agree with respect to constant sequences in two diagrams D and D' when for any constant sequence in either diagram, say in D (without loss of generality), with links in minimal regions r1,..., rn there is a constant sequence with the same name in D' with links in the minimal regions s1,..., sm and either
for all si (1 ≤ i ≤ m) there is some rj (1 ≤ j ≤ n) in D' with counterpart
' in D such that si ⊆ r' and in D there are no minimal regions sk not in
s1,..., sm such that sk ⊂ r'.
for all ri (1 ≤ i ≤ m) there is some sj (1 ≤ j ≤ n) in D with counterpart
' in D' such that ri ⊆ s' and in D' there are no minimal regions rk not in
r1,..., rm such that rk ⊂ s'. (This is basically same condition but with D
and D' and the s’s and r’s swapped.)
We say that for some region r in D that its counterparts in D' agree with respect to constant sequences when for all constant sequences in r the previous conditions hold. For additional work on syntactically defining the notion of counterpart regions see [9].

The Deductive System of EV c
Given diagrams D and D' of V, D' can be inferred from D if D' is the result of applying any of the following rules to D:
Erasure of part of a constant sequence – D' is obtained by erasing a link n of a constant sequence of D where that link n falls within a shaded region and provided that the possibly split constant sequence is rejoined if necessary.
Extending a constant sequence – D' is the result of adding a new link to a constant sequence of D in a minimal region not already containing a link of that same sequence.
Combining constant sequences – D' is the result of combining two con- stant sequences each containing the constant n in a diagram D. Two con-


stant sequences with the same letter can be combined when they each con- tain links in one or more minimal regions. In the resulting diagram both sequences are replaced by one sequence of the same term with links in each and every of the minimal regions which contained links from both in the initial diagram.
Introduction of a Constant Sequence – D' is the result of adding a constant sequence to D with one link in each of the minimal regions of D.
Erasure – D' is obtained from D by erasing:
an entire constant sequence;
the shading of a region;
a closed curve (and possibly redrawing the remaining curves to keep the diagram well-formed) if the removal does not cause any counterpart re- gions to disagree with regard to shading, whether they are missing, and constant sequences.
Introduction of a new curve – D' is the result of adding a new curve to D, whose label does not occur in D, which crosses all of the minimal regions of D once and in such a way that D' is well-formed, the other labels of D are left undisturbed, and all counterparts agree with respect to shading, whether they are missing, and constant sequences.
Inconsistency – D' of any form can obtained from D if:
D contains a region that is both shaded and contains all the links of some constant sequence;
D contains two separate constant sequences of the same term and there is no minimal region in the diagram containing links of both of the sequences.
all of the regions in D are shaded;
Adding shaded regions – D' is the result of adding a new minimal (but not basic) region which is the counterpart of a missing region in D provided that this new region is shaded and is drawn so that the region is contained within the basic regions to whose intersection it is intended to correspond.
Removing shaded regions – D' is the result of removing a shaded min- imal but not basic region of D. To emphasize the fact that the region has been removed the lines enclosing the now non-existing region should be smoothed where possible, and the remaining curves should be spaced out to remove points of unintended intersection.
Unification – D' can be inferred from diagrams D1 and D2 if it is the case that:
The set of labels of D' is the union of the labels of D1 and D2.
If a minimal region in either D1 or D2 is shaded or missing then there is a


counterpart region in D which is also shaded or missing. Also, if there is a region in D which is shaded or missing then there is a counterpart region in D1 or D2 which is shaded or missing.
If a region in either D1 or D2 has a constant sequence then there are coun- terpart regions in D which agree with respect to that constant sequence. Also, if there is a region in D containing a constant sequence then there are counterpart regions in D1 or D2 which agree with respect to that constant sequence.
Examples are given in Fig. 3 to illustrate the use of the system’s new and modified rules of inference.
A diagram D is provable from the set of diagrams D in V, written as D ▶EV c D, if there is a sequence of diagrams D1 ... Dn where Dn is equal to D and all D1 ... Dn are either members of D or the result of applying one of the above rules of inference to prior diagrams in the sequence.

The Semantics of EV c
The semantics of the system is given by the assignment of a domain to the dia- gram, subsets of this domain to minimal regions of the diagram, and members of the domain to each of the diagram’s constants.
Definition 2.2 Hammer Models for Euler/Venn Diagrams (exten- sion of Hammer [6])
A model of a Euler/Venn diagram is a triplet M = (UM , IM , denotesM ), where
UM is a non-empty set of objects, IM a function assigning subsets of UM to all regions of a diagram, and denotesM a function assigning members of UM to members of the set Terms. 10 The function I has the following properties:
I(r) = U whenever r is a region consisting of the entire interior of the diagram’s rectangle.
I(r) = I(s) whenever r and s are two basic regions with the same label.
I(r ∩ s) = I(r) ∩ I(s), for all r and s regions of a diagram.
I(r) = U − I(r), if r is a region of a diagram.
The collection of Euler/Venn models will be referred to as MEV c.
Next the notion of truth for Euler/Venn diagrams using these models will be defined.
Definition 2.3 Truth of Euler/Venn diagrams in Hammer Models
Given any M ∈ M with M = (U, I, denotes) and D ∈ V, we say that D is

10 When clear the M subscripts will be omitted.


Combining Constant Sequences:

Introduction of a Constant Sequence:

Inconsistency(ii):

Any Diagram

Inconsistency(iii):

Any Diagram

Unification:






Fig. 3. Example applications of new and modified rules of inference

true in M or that M |= D if the following conditions are satisfied:
For each shaded region r, I(r) = ∅.
For each missing (i.e., non-existing) region r, I(r) = ∅.
For each constant symbol n which is in the region r or constant sequence
n completely contained in the region r, denotes(n) ∈ I(r).
M /|= D will be written if it is not that case that M |= D.
With D ∪ {D} a set of diagrams, D is a logical consequence of D in EV c iff every model which makes all of D true in EV c also makes D true. This will be written as D |=EV c D.

Soundness and Completeness of EV c
Theorem 2.4 Soundness of EV c (extension of Hammer [6])
For every set of diagrams D ∪ {D} ⊆ V, if D ▶EV c D then D |=EV c D.
Proof Sketch: It suffices to show that the new and modified rules of inference preserve soundness; this plus trivial changes to Hammer’s soundness proof will demonstrate the soundness of EV c.
If D' is the result of applying the rule of Combining Constant Sequences to D, then D |=EV c D'. Suppose that (U, I, denotes) |=EV c D, then for regions r and r' in D, each containing constant sequences of some term n, denotes(n) ∈ I(r) and denotes(n) ∈ I(r'). Thus denotes(n) ∈ I(r) ∩ I(r') and then by the definition of the function I, denotes(n) ∈ I(r ∩ r'). Since the resulting diagram has links of n in each and only the the minimal regions of r ∩ r', then (U, I, denotes) |=EV c D'.
If D' is the result of applying the rule of Introduction of a Constant Sequence to D, then D |=EV c D'. Suppose that (U, I, denotes) |=EV c D and the new constant sequence contains links of the term n. Since U is non- empty, all constants have interpretations in U , the new constant sequence is contained in the region r bound by the rectangle of the diagram, and
I(r) = U ; we have that denotes(n) ∈ I(r). Thus (U, I, denotes) |=EV c D'.
If D' is the result of applying the rule of Inconsistency to D, then D |=EV c
D'.
Suppose that (U, I, denotes) |=EV c D and all of the regions in D are shaded. Then the region r bound by the rectangle of the diagram is shaded. Therefore both I(r) = ∅ and I(r) = U and U is defined to be non-empty. Since there can be no such model it is therefore the case that D |=EV c D' for any D'.
Suppose that (U, I, denotes) |=EV c D and that D contains two constant



D	Assume
	+ 
v	v


+
v,max
D’
Dv’

Soundness
Soundness
Transitivity




D  Dv 	+
+
v,max
Dv’ D’

Add/Remove
Add curve
Maximize/
Add/Remove

Shading
Add constant/	Erasure Erasure
Erasure
Shading

Fig. 4. Strategy for proof of completeness result

sequences of the term n without sharing links in any minimal region. Thus for some disjoint regions r, r', denotes(n) ∈ I(r) and denotes(n) ∈ I(r') and r ∩ r' = ∅. But then I(r) ∩ I(r') = I(r ∩ r') = ∅ and thus denotes(n) ∈ ∅. Since there can be no such model it is therefore the case that D |=EV c D' for any D'.
If D' is the result of applying the rule of Adding shaded regions to D, then D |=EV c D'. Suppose that (U, I, denotes) |=EV c D then for all minimal regions r not existing in D, I(r) = ∅. Thus since the newly added region is shaded then I(r) = ∅, and (U, I, denotes) |=EV c D'.
If D' is the result of applying the rule of Removing shaded regions to D, then D |=EV c D'. Suppose that (U, I, denotes) |=EV c D then for all shaded regions r in D, I(r) = ∅. Thus since the removed minimal region does not exist in the diagram then I(r) = ∅, and (U, I, denotes) |=EV c D'.

Theorem 2.5 Finite Completeness of EV c (extension of Shin [13]) For any two diagrams D, D' in V, if D |=EV c D' then D ▶EV c D'.
Proof Sketch: For this proof, Hammer’s completeness proof of Shin’s com- pleteness result found in [6] will be greatly relied upon. We begin by assuming that D |=EV c D' to show that D ▶EV c D'. An illustration of the proof strategy that we will follow is given in Fig 4.
First, the diagram D is extended to a Venn diagram Dv, through the repeated application of the Adding shaded regions inference rule. The same is done to D' extending it to D' . From soundness we know that D and

Dv as well as D' and D'
are logically equivalent. (This also depends on the

fact that when from one diagram, a second diagram can be concluded using the repeated application of Adding shaded regions then the second can


be concluded from the first through the repeated application of Removing shaded regions.)
Next we add any basic regions in D' that don’t appear in Dv to Dv using
the Introduction of a new curve rule of inference. At the same time we use the rule Introduction of a Constant Sequence to add every constant n appearing in D' to Dv. Constants are added even if some sequence of the same constant already exists in Dv. (The order in which these additions, curves and constants, are made is irrelevant.) We call the resulting diagram D+. As in the last step, we note that from soundness D and D+ are logically equivalent (the added curves and constant sequences can be removed with the Erasure rule of inference). Then we construct Shin’s maximal diagram of D+.
To do this we begin by constructing the set ∆. We first repeatedly use the Erasure of part of a constant sequence rule to remove all links of

constant sequences in D+
falling in shaded minimal regions and place the

resulting diagram in ∆. Then we close ∆ under the rule of Extending a
constant sequence and use the unify rule to unify all of those diagrams into

the resulting diagram D+
. Since D+
is provable from D, D is provable

+
v,max
(using Erasure and Extending a constant sequence to arrive

at D+ from which D can be proved as mentioned earlier), and D' is logically

equivalent to D'
we then know that D+
|= D' .

Then as in Hammer’s proof, to show that we can prove D'
+
v,max

using the Erasure rule we need to establish two claims:
For every minimal region r of D' that is shaded its counterpart in D+
is also shaded.
For every region r of D' that contains a constant sequence n its counterparts

+
v,max
agree with respect to that constant sequence.

To show both of these claims we will construct models that show that if the above two claims aren’t the case then contradictions will occur. We begin

by supposing that there is a minimal region r of D+
that is not shaded but

its counterpart r' in D'
is shaded. We then construct a model (U, I, denotes)

in which D+
is true but D'
is false. As the domain U we take the set

{o1,..., on} with a unique ok (1 ≤ k ≤ n) for each non-shaded minimal region

+
v,max
.  We note that if there are no non-shaded minimal regions then

immediately we can use the Inconsistency rule to conclude D' completing
the construction. For the function I we simply assign a unique ok (1 ≤ k ≤

n) to each non-shaded minimal region of D+
and extend this assignment

appropriately to all regions of the diagram.  Lastly we define the function
denotes, but in doing so we need to consider the following possibilities:

For every constant sequence of the constant n in D+
there is at least


one minimal region containing links from every one of those sequences. In

this case, for each constant n in D+
we pick one unshaded minimal

region r' from the minimal regions in which one link of each and every of the n sequences fall and define denotes so that denotes(n) = ok such that ok ∈ I(r') (and we know from the construction that I(r') is a single object).
In the case that it is not possible to pick an unshaded minimal region we can then use the Combining Constant Sequences and the Inconsistency rule to directly conclude D' completing the construction.
There are at least two constant sequences of some constant n which do not both have links in some minimal region. In this case then we can use the Inconsistency rule to directly conclude D' completing the construction.
Since in all the cases where no (U, I, denotes) could be constructed the In- consistency rule can be employed we can then focus on just those diagrams for which a model can be constructed. We then return our attention to the

region r of D+
that is not shaded and its counterpart r' in D'
that is

shaded. In this case I(r) = ∅ in our model, and thus I(r') = ∅ since they are counterparts. Then (U, I, denotes) /|= D' , contradiction.
To show the second claim we suppose that there is some constant sequence

n in D'
in the region r' and that counterparts in D+
do not agree with

respect to that constant sequence. We use a similar construction as in the last
case to make a model such that (U, I, denotes) |= D+	. Let n1,..., nj be
the constants appearing in D' but not in the appropriate regions in D+	.
As above in the case that all regions of the diagram are shaded, there is a ni
(1 ≤ i ≤ j) with links in only shaded regions, or some ni (1 ≤ i ≤ j) for which it is the case that there are two ni sequences with no links in the same minimal region we can use the Inconsistency rule to directly conclude D' completing the construction. Otherwise we assign an arbitrary object o to denotes(ni) in some minimal region containing one link of each and every ni sequence in the

diagram, for each constant ni in D+
. Then we then collect the arbitrary o

into the domain U , and construct the appropriate function I assigning those oi to the appropriate minimal regions, ∅ to all other minimal regions, and the correct combinations to all the other regions. However since denotes(ni) /∈ I(r) and thus denotes(ni) /∈ I(r') we then have that (U, I, denotes) /|= D' , contradiction.	 

Heterogeneous Rules of Inference
The general goal of this portion of the paper is to define a heterogeneous rule of inference that allows the extraction of information in an Euler/Venn diagram in the form of a formula of FOL. To accomplish this end, we will employ the



Fig. 5. Alice in Wonderland
information type based framework for defining heterogeneous rules of inference given in [17]. Furthermore we will attempt to define this rule in the spirit of the Observe rule presented in that same article. Stated briefly, one should only be able to observe information from a diagram when that information is explicitly expressed in that diagram. Thus we will present two such rules. The first will be syntactically based and thus defined using only the explicit information in the diagram. Then a second information type based notion will be presented and it will be shown that this notion can be characterized by the first notion.

Observe and Euler/Venn diagrams
To develop some intuitions about what should and what should not be observ- able from diagrams in general, let’s first look at observations that we would and would not like to be able to make from the Euler/Venn diagram in Fig. 5.
One can observe that Alice has a face, since that information is explicitly present.
One cannot observe that Alice has a grin and one cannot observe that she does not have a grin since neither piece of information is present.
One can observe that the Cheshire Cat has a grin and does not have a face, due to the placement of ‘CheshireCat’.
One can observe that nothing has a grin that does not have a face, due to the shading of the appropriate region.
Nothing can be observed regarding the Mad Hatter, since he is not men- tioned in the diagram.
In trying to make precise our intuitions about what can be observed from Euler/Venn diagrams we are immediately confronted with a number of inter-




A Diagram With Negative Information





An Inconsistent Diagram
A Diagram With Disjunctive Information





A Null Digram



Fig. 6. Examples of problematic Euler/Venn diagrams

esting issues arising from the kinds of information that can be contained in Euler/Venn diagrams. These issues have the following as their source:
Negative Information – Through shading one can represent negative infor- mation, that some set does not contain any members.
Disjunctive Information – By creating chains of individual constants in a Euler/Venn diagram one can represent the uncertainty of which of the rep- resented sets contain the denoted individual, while at the same time repre- senting the certainty that the individual is in one of those sets.
Open world – there is no assumption when using an Euler/Venn diagram that all objects under discussion are explicitly represented in the diagram.
Inconsistency – One can represent inconsistent information in a single Eu- ler/Venn diagram. An example was the placing of the constant ‘Cheshire Cat’ in a shaded region of Fig. 5.
Null Diagrams – By a null diagram, a diagram in which all regions are shaded is meant. These diagrams are used to represent a domain without any members. This contravenes a basic assumption of first order logic, where one always assumes that the domain of discourse is non-empty.
Examples of diagrams demonstrating some of these problems are in Fig. 6. It is important to keep these special kinds of diagrams in mind and later refer back to them as we critically evaluate the following theories of observation.

Strong observation for Euler/Venn diagrams
In this section a very intuitive and simple definition for an observe relation between well-formed Euler/Venn diagrams and a fragment of monadic first order logic with generalized quantifiers will be stated.


The usual formulation of first order logic uses only the quantifiers ∀ and
∃. As is well known, many other forms of quantification can be be defined in terms of these, at least up to logical equivalence. However, the observation relation that will be proposed does not preserve logical equivalence. That is, there are formulas which are logically equivalent but which do not explicitly express the same information, so that one can be observed from a diagram but the other cannot. For this reason, monadic first order logic (MFOL) will be defined in a way that explicitly introduces some additional forms of quantification that are only implicitly introduced in the standard formulation. These new quantifiers include: Nx ϕ(x) which will be read as “there is no x
such that ϕ(x)”, All x (ϕ1(x), ϕ2(x)) which will be read as “all x such that ϕ1(x) then ϕ2(x)”, and Some x (ϕ1(x), ¬ϕ2(x)) which will be read as “there is some x such that ϕ1(x) and not ϕ2(x).”
For our purposes monadic first order logic will be thought of as consisting of a set of monadic predicates taken from L containing terms from Terms closed under negation, conjunction, disjunction, existential, and the above types of generalized quantification It will be assumed that each formula of MFOL is written so that there are no embedded quantifiers and only predicate expres- sions containing the quantified variable occur in the scope of a quantifier. This assumption is being made to simplify a number of the following definitions. By doing this we are not loosing any of the expressiveness of MFOL because any formula of MFOL can be translated into a logically equivalent formula
adhering to this restriction. 11 Each of the basic predicate expressions P (x) will be thought of as a membership relation for the set corresponding to the curve labeled P in some Euler/Venn diagram. Please note that where ϕ(t) is written in the following definitions it will mean that all of the predicates in the formula ϕ contain the term t.
Definition 3.1 Euler/Venn Observational Formulas (EVOF)

Basic formulas: For every predicate P in L, and term t in Term, P (t) is in EVOF.
Negations, Conjunctions, and Disjunctions: For every ϕ1(t),..., ϕn(t) in
EVOF, the following are also in EVOF:
¬ϕ1(t)
(ϕ1(t) ∧ ... ∧ ϕn(t))
(ϕ1(t) ∨ ... ∨ ϕn(t))
Quantifiers: For every unquantified ϕ(x) in EVOF the following are also

11 Quine [11] refers to such formulas as being pure and describes an algorithm for the purification of a formula, based upon [2] (his citation). Similar work is also presented in [3].


in EVOF:
Nx ϕ(x)
∃x ϕ(x)
Generalized Quantifiers: For every unquantified ϕ1(x), ϕ2(x) in EVOF, the following are also in EVOF:
All x (ϕ1(x), ϕ2(x))
Some x (ϕ1(x), ¬ϕ2(x))
To see some examples of formulas of EVOF let us translate some of the example observations from Diagram 5 into observational formulas.
Face(Alice) can be observed.
Grin(Cheshire-Cat) ∧ ¬Face(Cheshire-Cat) can be observed.
Nx[Grin(x) ∧ ¬Face(x)] can be observed.
All x (Grin(x), Being(x)) can be observed.
The basic idea behind the above definition is that each unquantified mem- ber of EVOF is really making a statement about features of some region of the diagram. This relation between formulas of EVOF and regions of a diagram is then made precise by the following function.
Definition 3.2 Region Assignment Function
Given a diagram D ∈ V containing curves labeled P1,..., Pn, the partial function regionD from EVOF to the regions of D will be defined as follows:
For each basic region r labeled P in D regionD(P (t)) = r.
If regionD(ϕ1(t)) = r1, . .., regionD(ϕn(t)) = rn then:
regionD(¬ϕ1(t)) = r1.
regionD((ϕ1(t) ∧ ... ∧ ϕn(t))) = r1 ∩ ... ∩ rn
regionD((ϕ1(t) ∨ ... ∨ ϕn(t))) = r1 ∪ ... ∪ rn
Now the main definition of this section will be stated, that of strong obser- vation. As was alluded to earlier, our goal is to define when something can be observed, and when something can be observed to fail. These two definitions will be separate, and thus at times there will be things which can neither be observed nor observed to fail. Also in the case of inconsistent diagrams something might be able to be observed and observed to fail at the same time. The intuitions behind each of these relations of observation are given briefly below:
D| +ϕ or that ϕ can be strongly observed from D if it is the case that there exists explicit information in D supporting ϕ.
D| −ϕ or that ϕ can be strongly observed to fail from D if it is the case


that there exists explicit information in D denying ϕ.
D| ?ϕ or that ϕ cannot be strongly observed to hold nor to fail from D if D contains neither explicit support for ϕ nor is there explicit support for it failing from D.
Definition 3.3 Euler/Venn Strong Observation
The relations D| +ϕ(t) and D| −ϕ(t) will be defined between diagrams of V
and formulas of EVOF by induction on the complexity of ϕ(t) as follows:
For unquantified formulas:
D| +ϕ(t) if the term symbol t appears in regionD(ϕ(t)). 12
D|  −ϕ(t) if the term symbol t appears in the complement of regionD(ϕ(t)).
For quantified formulas:
D| + Nx ψ(x) if the region regionD(ψ(x)) is shaded.
D| − Nx ψ(x) if D| +∃x ψ(x).
D| +∃x ψ(x) if some term symbol t appears in regionD(ψ(x)).
D| −∃x ψ(x) if D| +Nx ψ(x).
D| + All x (ψ1(x), ψ2(x)) if the region regionD(ψ1(x)) is a subregion of regionD(ψ2(x)).
D| − All x (ψ1(x), ψ2(x)) if D| +Some x (ψ1(x), ¬ψ2(x)).
D| + Some x (ψ1(x), ¬ψ2(x)) if some term symbol t appears in the region regionD(ψ1(x)) and not in the region regionD(ψ2(x)).
D| − Some x (ψ1(x), ¬ψ2(x)) if D| +All x (ψ1(x), ψ2(x)).
D| ?ϕ will be written if neither D| +ϕ nor D| −ϕ.
Now we will briefly show a few properties of strong observation: that it en- tails logical consequence, that it is decidable, and that any logical consequence of a diagram is a logical consequence of observations from that diagram. Be- fore we do this a number of things need to be defined, we begin by defining relations between formulas of MFOL and Hammer models.
Definition 3.4 Truth of MFOL in Hammer Models
The relation M |= ϕ(t) will be defined between Hammer models in M and formulas of MFOL by induction on the complexity of ϕ(t) as follows: 13
M |= P (t) if denotes(t) ∈ I(regionD(P (t))).
Negation, conjunction and disjunction are defined in the natural way.

12 The term symbol t appears in the region r if t is not part of a term sequence and t appears in r or if t is part of a term sequence and the entire sequence appears in r.
13 Here and throughout the rest of the paper in cases where the diagram D of the function
regionD isn’t explicitly stated, we take a canonical Venn diagram D containing the appro- priate curves and no shading or constant sequences as the basis of the function regionD.


M |= Ex ψ(x) if there is some M' such that M =x M' and it is the case that M' |= ψ(x). 14
M |= 6x ψ(x) if for all M' such that M =x M' it is the case that
M' |= ψ(x).
M |= Nx ψ(x) if there is no M' such that M =x M' and M' |= ψ(x).
M |= All x (ψ1(x), ψ2(x)) if for all M' such that M =x M' and M' |= ψ1(x) we have that M' |= ψ2(x).
M |= Some x (ψ1(x), чψ2(x)) if there is some M' such that M =x M', and M' |= ψ1(x) and M' /|= ψ2(x).
Given any Euler/Venn diagram D and ϕ a formula of MFOL we say that ϕ is a logical consequence of D (written as D |= ϕ) if every Hammer model which satisfies D also satisfies ϕ. When this is not the case we say that ϕ is not a logical consequence of D which we will write as D /|= ϕ.
Theorem 3.5 For all Euler/Venn diagrams D and ϕ a formula of EVOF, if ϕ can be strongly observed from D then ϕ is a logical consequence of D. Likewise if D can be strongly observed to fail from D then чϕ is a logical consequence of D.
Proof Sketch: This result will be shown by induction on EVOF:
Basic formulas -
D|  +P (t) in this case t is in the region regionD(P (t)) and thus all M
s.t. M |= D we have that denotes(t) ∈ I(regionD(P (t))) and hence
D |= P (t).
D| −P (t) in this case t is in the complement of the region regionD(P (t)) and thus all M s.t. M |= D we have that denotes(t) ∈ I(regionD(P (t))) and hence D |= чP (t).
Negations - Similar to last case except we take the complement of the region.
Conjunctions -
D|  +(ϕ1(t) ∧ ... ∧ ϕn(t)) in this case denotes(t) ∈ regionD(ϕ1(t)) ∩
... ∩ regionD(ϕn(t)) hence D |= (ϕ1(t) Λ ... Λ ϕn(t))
D|  −(ϕ1(t) ∧ ... ∧ ϕn(t)) similar to last case.
Disjunctions - Similar to conjunctions except we take the union of the regions.
Nx ϕ(x)

14 In this context M =x M′ if the structures M and M′ are the same except for the interpretation by denotes for some variable x.


D| + N x ψ(x) in this case regionD(ϕ(x)) is shaded. Thus any models
M s.t. M |= D must assign ∅ to that region. Hence D |= N x ϕ(x).
D| − N x ψ(x) in this case there is some t s.t. denotes(t) ∈ regionD(ϕ(x)) hence using the same argument as before D |= ϕ(t), and thus D |=
чN x ϕ(x)
Ex ϕ(x) is defined as the dual of the last case.
Generalized Quantifiers
D| + All x (ψ1(x), ψ2(x)) in this case regionD(ϕ1(x)) is contained in regionD(ϕ2(x)) and thus any model must assign a subset of I(regionD(ϕ2(x))) to regionD(ϕ1(x)) thus D |= All x (ϕ1(x), ϕ2(x)).
D| − All x (ψ1(x), ψ2(x)) in this case the intersection regionD(ϕ1(x))
and the complement of regionD(ϕ2(x)) contains some term t thus all models must assign a non-empty set to the interpretation of that re- gion and thus D |= чAll x (ϕ1(x), ϕ2(x)).
Some x (ϕ1(x), чϕ2(x)) is defined as the dual of the last case.
 
Theorem 3.6 There is a simple decision procedure for deciding from an ar- bitrary Euler/Venn diagram D and an Euler/Venn Observational Formula ϕ whether or not ϕ can be strongly observed to hold on the basis of D (D| +ϕ) and whether or not ϕ can be strongly observed to fail on the basis of D (D| −ϕ).
Proof Sketch: First note that an Euler/Venn diagram can be represented by discrete objects (cf. [16] with trivial changes to add named constants) in a machine. Since on the basis of these objects the process of deciding if any region of a diagram is shaded or contains a constant or variable symbol is decidable, observation is trivially decidable.	 
Lastly it will shown that a diagram is the logical consequence of all the formulas observable from it. The set of formulas observable from D will be referred to as its observational theory, which will be defined to be the set of all ϕ such that D| +ϕ. From this result we get as corollary that any logical consequence of a diagram is a consequence of its observational theory.
Theorem 3.7 Every Euler/Venn diagram D is a logical consequence of its observational theory.
Proof Sketch: Suppose this is not the case. Then there is some M = (U, I, denotes) ∈ ł such that the observational theory of D is true in M but M /|= D. In this case we know that there is some feature in D which disagrees with M , i.e., there is some region r = regionD(ϕ(x)) in D such that


one of the following is the case:
r is shaded but I(r) /= ∅, but then D| +Nx ϕ(x) and also M /|= Nx ϕ(x); contradiction.
r is missing but I(r) /= ∅, but then there is some missing minimal region r1 with tag τ1 such that r1 ⊂ r and another non-missing region r2 with tag τ2 such that that the region r2 also has the tag τ1∩τ2. There also must be ϕ1(x) and ϕ2(x) such that r1 = regionD(ϕ1(x)) and r2 = regionD(ϕ2(x)). Then D| +All x (ϕ1(x) Λ ϕ2(x), ϕ2(x)) then M /|= All x (ϕ1(x) Λ ϕ2(x), ϕ2(x)); contradiction.
r contains some constant sequence t but denotes(t) /∈I(r), but then D| +ϕ(t) but M /|= ϕ(t); contradiction.
 
Hyperproof [1] was the first detailed case-study of a heterogeneous reason- ing system; it allows students to write proofs including blocks-world diagrams and formulas of FOL. It is interesting to note that, though we have a much weaker notion of observation than that of Hyperproof, we get the result in The- orem 3.7 which we do not get in the case of Hyperproof. One of the biggest contributing factors to achieving this result is that the language of observa- tional formulas (EVOF) that was chosen is rich enough to completely express all the information which can be expressed in an Euler/Venn diagram. In the case of Hyperproof there is certain information that can be expressed in the diagram but cannot be observed from the diagram due to the limitations of Hyperproof ’s language.
This last proof also hints at the interesting product of our definition of strong observation that was mentioned earlier. If we are given two logically equivalent Euler/Venn diagrams one an Euler diagram and the other a Venn diagram with shading we can distinguish between them observationally though they are equivalent from the point of view of truth. To finish this section, the Corollary that any logical consequence of a diagram is the consequence of observations made from the diagram will be stated.
Corollary 3.8 Any MFOL formula which is a logical consequence of an Eu- ler/Venn diagram D is a logical consequence of the observational theory of D.

Observe relation for monadic FOL and Euler/Venn diagrams
In the previous section a simple definition for a strong relation of observation was presented. This relation was defined recursively on the formulas of our observational language and the diagrams themselves without an appeal to


some intermediate representation. In this section a more semantic approach to defining a similar observe relation using a generalization of partial structures, which we will call information types, as our intermediate representation will be given. By using information types to define observation, will be able to more precisely capture the information content of the diagram. This definition will be based upon the framework given in [17]; we will begin with a brief overview of that work.

Overview
One way to model the information content of a sentence of a first order lan- guage is by means of the class of all the total structures that make that sen- tence true. A somewhat more fine-grained approach than this is to take the class of partial structures making the sentence true. Here a partial structure is taken to be a universe, an interpretation for each constant, and a positive and negative extension for each predicate. Modeling information content by means of partial structures gives a better model of explicit information, because sen- tences which are logically true are, by definition, true in all total structures but not in all the partial structures. It is also better when we are considering sentences containing inconsistent information provided we allow partial struc- tures where the intersection of the positive and the negative information is non-null.
In fact, Hyperproof uses a notion of partial structures similar to that given
above to evaluate the validity of observations based on the blocks-world dia- gram (along with a set of domain assumptions). For diagrams like these, which preserve many properties of their represented domain, this approach is partic- ularly useful because for each diagram D there is a unique, up to isomorphism,
minimal partial structure MD making the diagram D true. The observation
relation between formulas and diagrams of Hyperproof is basically taken to be the relation of truth under the Kleene evaluation scheme: we can observe ϕ from D if MD |=+ ϕ, where |=+ is the positive part of Kleene three-valued evaluation scheme. 15
Part of what makes this portion of the project of interest is that the tradi- tional notion of partial structure that worked so well for capturing the infor- mation content of the diagrams of Hyperproof is inappropriate for capturing the information content of Euler/Venn diagrams.
The inability of the traditional notion of partial structure to act as a model of the information content of Euler/Venn diagrams stems from the inability of

15 Note that “if and only if” is not said here because Hyperproof actually has some additional heuristics built into the Observe rule, based on certain spatial features of the diagrams. But this is the main idea of the Observe rule of Hyperproof.




Logical Consequence


Observe
|~
Fig. 7. The Euler/Venn distributed system

these structures to model certain kinds of information, and thereby precludes the existence of a single minimal partial structure for Euler/Venn diagrams. Some of the information that these partial structures cannot express includes: disjunctive information about individuals, negative universal information, and certain contradictory information. Another source of divergence comes from the fact that Hyperproof diagrams embody a closed world assumption (all block in the domain of discourse are depicted in the diagram) whereas no such assumption is natural with Euler/Venn diagrams. Studying these diagrams forces us to think about the modeling of partial information in new ways.
With the above intuitive notion of strong observation to guide us, a math- ematical notion of an information type for Euler/Venn diagrams will be given. Using these types, relations between Euler/Venn diagrams and the types, for- mulas of MFOL and the types, and finally Hammer models and the types will be defined. These relations will then be used to define our second notion of observation. This notion of observation will be defined in a way to behave consistently with the intuitions that have been drawn out about observations from Euler/Venn diagrams (this relation is illustrated in Fig. 7 by the dashed line labeled |≈). It will shown that if ϕ is observable from D in our sense, then it is a logical consequence of D (in the sense of Shin and Hammer) but not conversely. This observe relation will also be shown to be decidable from results in the last section of the paper.

Euler/Venn information types
We are after a mathematical representation of the explicit information content of Euler/Venn diagrams. What will be offered, then, is a substitute for the


traditional notion of a partial structure, since these are not appropriate in this context. For lack of a better name, these objects will simply be called information types, or types for short.
Definition 3.9 7EV c - Euler/Venn Information Types
Let L be some finite set of predicates, thought of as labels. A type over L ∈ L 
is a structure of the form T = (U, pos, neg, denotes) where:
U is a non-empty set called the domain of T . (Its members will be referred to as the objects of T .)
pos is a function assigning to each complete tag of L some subset of U such that if τ1 /= τ2 then pos(τ1) ∩ pos(τ2) = ∅. We interpret pos(τ ) = {o1, o2} as the information that the objects o1, o2 are definitely members of the set represented by the minimal region associated with the tag τ .
neg is a function assigning to each complete tag of L either ∅ or •. We interpret of neg(τ ) = • as the information that the set represented by the region associated with τ is definitely empty, whereas neg(τ ) = ∅ will be interpreted as giving us no information.
denotes is a partial function with domain the set of Terms taking values in
U . We think of denotes(t) = o as the information that t denotes the object
o.
The collection of Euler/Venn information types will be referred to as 7EV c.

A type T = (U, pos, neg, denotes) is inconsistent with respect to a tag τ if we have conflicting positive and negative information regarding τ (pos(τ ) /= ∅ and neg(τ ) = •). A type T will be referred to as maximal consistent with respect to D if it is not inconsistent with respect to any tag τ , and we have complete information in T about every set and every member of the domain. By complete information it is meant that for each o in U there is some tag τ
s.t. o ∈ pos(τ ) and for no τ , pos(τ ) = neg(τ ) = ∅.
The functions pos and neg can be extended uniquely to pos and neg defined on all tags as follows: 16

pos(τ ) = ∪{pos(τ ') : τ' complete and τ ⊆ τ'}


16 This extension is unique due to the fact that each tag labels a region which is comprised of a fixed number of minimal regions, each having a complete tag. Hammer proved the uniqueness of a very similar kind of extension of the assignment of sets to minimal regions in [6].



neg(τ ) = ⎧⎪⎨•

if neg(τ ') = • for all complete τ' s.t. τ ⊆ τ'

⎪∅	otherwise

Type relations on Euler/Venn diagrams
In this section two type membership relations (:+




and :−




) on diagrams of

V, and types of the set 7 will be defined. 17
Definition 3.10 Type Relations on Euler/Venn Diagrams
For any T ∈ 7 with T = (U, pos, neg, denotes), and a diagram D ∈ V, It

will be said that D is of the type T , written as D :+
T , if the following

conditions are satisfied:
For each tag τ , if the region associated with τ is shaded, neg(τ ) = •.
For each tag τ , if the region associated with τ is missing (i.e., non- existing), neg(τ ) = • and pos(τ ) = ∅.
For each term sequence t contained in regions regionD(τ1),..., regionD(τn), denotes(t) ∈ pos(τ1) ∪ ... ∪ pos(τn).
Note that though a diagram may not be inconsistent, there are many types inconsistent with respect to some τ which support it.

Type relations on MFOL formulas
Here type membership relations between formulas of MFOL and types of the

set 7 will be defined (:+
—
MFOL
, and :?
). In the following definitions

the same region assignment function regionD as given in Definition 3.2 will
be used. We are able to use the same function due to the assumption that in MFOL each formula is written so that there are no embedded quantifiers and only predicate expressions containing a quantified variable occur in the scope of a quantifier.
Definition 3.11 Type Relations on MFOL
Let ϕ be a formula of MFOL, and T ∈ 7 with T = (U, pos, neg, denotes). ϕ :+ T and ϕ :− T will be defined as follows on the structure of ϕ:
P (t) :+ T if denotes(t) ∈ pos(P ).
P (t) :− T if denotes(t) ∈ pos(P ).
¬ψ :+ T if ψ :− T .

17 Throughout the remainder of this work the subscripts of “:” relations may be omitted when which is meant is clear from the current context.


¬ψ :− T if ψ :+ T .
conjunctions and disjunctions are defined in the natural fashion.
∃x ψ(x) :+ T if there is some term t such that ψ(t) :+ T .
∃x ψ(x) :− T if Nx ψ(x) :+ T .
Nx ψ(x) :+ T if for all complete τ s.t. regionD(τ ) ⊆ regionD(ψ(x)) it is the case that neg(τ ) = •.
Nx ψ(x) :− T if Ex ψ(x) :+ T .
∀x ψ(x) :+ T if for all complete τ s.t. regionD(τ ) ⊆ regionD(чψ(x)) it is the case that neg(τ ) = •.
∀x ψ(x) :− T if Ex чψ(x) :+ T
All x (ψ1(x), ψ2(x)) :+ T if for all complete τ s.t.	regionD(τ ) ⊆
regionD(ψ1(x) Λ чψ2(x)) it is the case that neg(τ ) = •.
All x (ψ1(x), ψ2(x)) :− T if Some x (ψ1(x), чψ2(x)) :+ T .
Some x (ψ1(x), ¬ψ2(x)) :+ T if there is some term t such that ψ1(t)Λ чψ2(t) :+ T .
Some x (ψ1(x), ¬ψ2(x)) :− T if All x (ψ1(x), ψ2(x)) :+ T
ϕ :? T will be written if neither ϕ :+ T nor ϕ :− T .
Proposition 3.12 For all T ∈ 7 and ψ1(x), ψ2(x) ∈ MFOL:
6x ψ1(x) :+ T iff Nx чψ1(x) :+ T.
All x (ψ1(x), ψ2(x)) :+ T iff 6x (чψ1(x) ∨ ψ2(x)) :+ T
Some x (ψ1(x), чψ2(x)) :+ T iff Ex (ψ1(x) Λ чψ2(x)) :+ T.

Second deﬁnition of observation
Next the relations |≈+, |≈−, and |≈? will be defined following the same intu- itions given above for | +, | −, and | ?.
Definition 3.13 Observe Relations over MFOL (|≈)
For all D ∈ V, and all ϕ ∈ MFOL:
D|≈+ϕ if for all Euler/Venn types T such that D :+ T we have that ϕ :+ T . D|≈−ϕ if for all Euler/Venn types T such that D :+ T we have that ϕ :− T . D|≈?ϕ if it is not the case that D|≈+ϕ nor is it the case that D|≈−ϕ.

Properties of observation
Definition 3.14 Extension Relation on Euler/Venn Diagrams
Given diagrams D and D' in V it can be said that D' is an extension of


D, or that D ≤ D' if for all regions in D containing some features, their corresponding regions in D' contain the same features.
Lemma 3.15
For all D, D' ∈ V if D' is an extension of D then for all T ∈ 7 if D' :+ T
then D :+ T.
Proof Sketch: Assume that D' :+ T . Since D' is an extension of D we know that all of the features of D are in D'. Suppose that it is not the case that D :+ T , then T and D would have to disagree on some feature, from the definition of :, but that same feature would be in D' and then it would not be the case that D' :+ T contradiction.	 
Theorem 3.16 Any MFOL formula ϕ that can be observed to hold of an Euler/Venn diagram D can be observed to hold in any extension of D. Like- wise any ϕ which can be observed to fail from D can be observed to fail from any extension of D.
Proof Sketch
Assume that D|≈+ϕ, then for all T ∈ 7 such that D :+ T , we have that ϕ :+ T . Since D' is an extension of D we know from Lemma 3.15 that for all T ' ∈ 7 such that D' :+ T ', it must be the case that D :+ T ', and thus from the above assumption we have that ϕ :+ T '. Hence we have that D'|≈+ϕ.
Assume that D|≈−ϕ, then D|≈+чϕ and from the last part we have that for all extensions D' of D it is the case that D'|≈+чϕ, and hence that D'|≈−ϕ.


Type relations on hammer models
Let us start by recalling the definition of Hammer Models given above (Def- inition 2.2). As before, the collection of Hammer models will be referred to as ł. Note that since each of the basic regions of a diagram are required to be labeled by some member of our language L there naturally arises a tag assignment function regionD from the diagram. The underlying assumption in the definition of a Hammer Euler/Venn model is that all the regions are part of some potential diagram and thus any of the above regions are taken to be in the range of some tag assignment function.
The type membership relations, :+ and :− , on models of ł and types of
the set 7 will be defined as follows:
Definition 3.17 Hammer Type Membership Relations (:M )


Let M = (UM , IM , denotesM) be a Hammer model and T = (U, pos, neg, denotes) be an Euler/Venn Information Type. M :+ T will be written when T is maxi- mal consistent and for each tag τ such that regionD(τ ) = r it is the case that IM (r) = pos(τ ), and for each term t, denotesM (t) = denotes(t). M :− T will be written if it is not the case that M :+ T .
Proposition 3.18

There is a one-to-one and onto mapping between maximal consistent types in 7 and models in ł. These pairs of maximal consistent types and models will be referred to as matching type-model pairs.
For any maximal consistent type T in 7 and its matching model M we have that for all ϕ ∈ MFOL, ϕ :+ T iff M |= ϕ.
For any maximal consistent type T in 7 and its matching model M we have that for all D ∈ V, D :+ T iff M |= D.
Proof Sketch:
We will define a one-to-one and onto function f from maximal consistent types in 7 to models in ł. First recall that both our types and our models are defined using the same domain, the same collection of Terms and that for each region in the domain of a model’s IM function there
is a corresponding tag τ for which the type’s pos and neg functions are defined and vice-versa. Thus for a type T = (U, pos, neg, denotes) we define f (T ) to be the model M = (U, IM , denotesM ) such that for each τ with some regionD(τ ) = r it is the case that IM (r) = pos(τ ), and for each term t, denotesM (t) = denotes(t). This function is one-to-one by definition and is onto in virtue of the relations between the domains of IM and pos, and denotesM and denotes.
Arbitrarily pick T ∈ 7 and M ∈ ł that are a matching pair, and a formula ϕ ∈ MFOL.  (→) Assume that ϕ :+ T but that M /|= ϕ. Then M and ϕ must disagree with respect to some predicate P (n) such that regionD(P (n)) = r but denotes(n) /∈ I(r), some region r = regionD(ϕ(x)) such that Nx ϕ(x) but I(r) /= ∅, or some region r = regionD(ψ1(x) Λ чψ2(x)) such that All x (ψ1(x), ψ2(x)) but I(r) /= ∅. But then then there must be a τ such that regionD(τ ) = r in T and from the fact that they are matching pairs the same disagreement must exist between ϕ and T thus ϕ :− T contradiction. (←) Because of the very close relation between the M and T , and |= and :MFOL the argument is analogous.
Arbitrarily pick T ∈ 7 and M ∈ ł that are a matching pair, and an


Euler/Venn diagram D ∈ V. (→) Assume that D :+ T but that M /|= D. Then M and D must disagree with respect to some region which is r which is shaded but I(r) /= ∅, which is missing but I(r) /= ∅, or which contains a constant n but denotes(n) /∈ I(r). But then then there must be a τ such that regionD(τ ) = r in T and from the fact that they are matching pairs the same disagreement must exist between D and T thus D :− T contradiction. (←) Because of the very close relation between the M and T , and |= and :M the argument is analogous.


Relations of truth
We will use the satisfaction relation M |= ϕ between Hammer Models and formulas of MFOL as that given above in Definition 3.4. We will also use the same definitions of truth of Euler/Venn diagrams in Hammer models and logical consequence for MFOL and Euler/Venn diagrams as those given in Definitions 2.3 and 3.4 respectively. Using these relations it will be shown that observation implies logical consequence, but first let us prove a couple of Lemmas used in proving this result.
Lemma 3.19 For each M = (UM , IM , denotesM ) ∈ ł and each diagram D ∈ V, there is a unique characterizing type (deﬁned in the proof) T ∈ 7 such that M :+ T, and M |= D iff D :+ T.
Proof Sketch:
To construct this characterizing type T = (U, pos, neg, denotes) we take U = UM , denotes = denotesM , and for all complete tags τ , pos(τ) = IM (regionD(τ)), and:

neg(τ ) =	•	if IM (regionD(τ )) = ∅
∅	otherwise
We get that M :+ T trivially. We just need to show that M |= D iff D :+ T . (→) Assume that M |= D and we don’t have that D :+ T . Then D and T disagree on some tag or variable. But since T was derived from M , M and D must also disagree, contradiction. (←) Assume that D :+ T and M /|= D. Then M and D must disagree on some region or variable. Then since T was derived from M , the same disagreement must exist between T and M , contradiction.	 
Lemma 3.20 For each M ∈ ł, T ∈ 7 and all ϕ ∈ MFOL, if M :+ T and
ϕ :+ T then M |= ϕ.

Proof Sketch:
Arbitrarily choose M = (UM, Im, denotesM) ∈ łand T = (U, pos,neg, denotes)∈
7 such that M :+ T , we will proceed by induction on formulas:
Base: ϕ an atomic formula. Assume that P (t) :+ T . Then we know that denotes(t) ∈ pos(P ), denotes(t) = denotesM (t), and IM (regionD(P )) = pos(P ) hence M |= P (t).
Induction: Assume for formulas ϕ and ψ.
The arguments for ч, ∨, and Λ are omitted as they are trivial.
∃ Assume that Ex ψ(x) :+ T . Then there is some term t such that ψ(t) :+
T . Then using the hypothesis we know that M |= ψ(t) and thus that
M |= Ex ψ(x).
N Assume that Nx ψ(x) :+ T . Then for all complete τ s.t. regionD(τ ) ⊆
regionD(ψ(x)) it is the case that neg(τ) = •, and then IM (regionD(ψ(x)))=
∅. Hence M |= Nx ψ(x).
The other quantified cases are all reducible to the last two cases.
 
Theorem 3.21 For all Euler/Venn diagrams D and ϕ a formula of MFOL, if ϕ can be observed from D then ϕ is a logical consequence of D. Likewise if ϕ can be observed to fail from D then чϕ is a logical consequence of D.
Proof Sketch
Assume that D|≈+ϕ then for all T ∈ 7 such that D :+ T , then ϕ :+ T . We need to show that all Hammer models M such that M |= D then M |= ϕ. From Lemma 3.19 we know that if M |= D then M ’s characterizing type T is such that D :+ T . Then using ϕ :+ T and Lemma 3.20 we have that that M |= ϕ.
Proof similar to the last case.
 
Theorem 3.22 There is a simple decision procedure for deciding from an arbitrary Euler/Venn diagram D and a formula of MFOL ϕ whether or not ϕ can be observed to hold on the basis of D (D|≈+ϕ) and whether or not ϕ can be observed to fail on the basis of D (D|≈−ϕ.)
Proof Sketch: We get the above result indirectly from the results in the next section.	 

Bridging the Gap
Now that two relations of observation have been defined, one which is very simple and only defined in terms of diagrams and a fragment of monadic first


order logic, and the other which is more complicated and defined on the richer language of MFOL. Next we will relate these two definitions and show that while the second definition is more rich and complicated, we do not get a much more powerful notion of observation. In fact if we take the boolean closure of the first, and blur the distinction between the generalized quantifiers and the standard quantifiers, we get an observe relation which is equivalent to the second observe relation (|≈). Thus in the following theorem, we will show that the second relation of observation can be characterized in terms of the first.
Theorem 3.23 For every ϕ, which is a formula of MFOL and D an Eu- ler/Venn diagram, the positive and negative observe relations (D|≈+ϕ and D|≈−ϕ) can be characterized as follows:
if ϕ is unquantified and of the form ϕ(t) (only containing the term t) then
D|≈+ϕ(t) if D| +ϕ(t).
D|≈−ϕ(t) if D|  −ϕ(t).
D|≈+¬ϕ if D|≈−ϕ.
D|≈−¬ϕ if D|≈+ϕ.
Conjunctions, and disjunctions are done in the natural way.
D|≈+ Nx ψ(x) if D|  +Nx ψ(x) or if regionD(ψ(x)) is missing. 18
D|≈− Nx ψ(x) if D|≈+Ex ψ(x).
D|≈+∃x ϕ(x) if D| +Ex ϕ(x).
D|≈−∃x ϕ(x) if D|≈+Nx ϕ(x).
D|≈+∀x ϕ(x) if D|  +Nx чϕ(x) or if regionD(чϕ(x)) is missing.
D|≈−∀x ϕ(x) if D|≈+Ex чϕ(x).
D|≈+ All x (ψ1(x), ψ2(x)) if D| +Nx (ψ1(x)Λчψ2(x)) or if regionD(ψ1(x)Λ чψ2(x)) is missing.
D|≈− All x (ψ1(x), ψ2(x)) if D|≈+Ex (ψ1(x) Λ чψ2(x)).
D|≈+ Some x (ψ1(x), ¬ψ2(x)) if for some term symbol t we have that D| +ψ1(t) and D| −ψ2(t).
D|≈− Some x (ψ1(x), ¬ψ2(x)) if D|≈+All x (ψ1(x), ψ2(x)).
Before we start the main proof we will prove two lemmas:
Lemma 3.24 For all D ∈ V the constant sequence t is contained in the the minimal regions associated with the complete tags τ1 ... τk, regionD(τ1) ∪... ∪ regionD(τk), of D iff for all T = (U, pos, neg, denotes) ∈ 7 it is the case that denotes(t) ∈ pos(τ1) ∪ ... ∪ pos(τk).

18 It is here that the distinction is being blurred between the two types of quantifiers.


Proof Sketch: (→) Assume that the constant symbol t appears in the region regionD(τ1)∪.. .∪regionD(τk). Thus we know that any T = (U, pos, neg, denotes) in 7 s.t.  D :+ T it is the case that denotes(t) ∈ pos(τ1) ∪ ... ∪ pos(τk) from the definition of a diagram being of a type. (←) Assume that all T = (U, pos, neg, denotes) ∈ 7 such that D :+ T , it is the case that denotes(t) ∈ pos(τ1) ∪... ∪ pos(τk) but the constant symbol t is not contained in the region regionD(τ1) ∪... ∪regionD(τk) of D. Furthermore we know that the symbol t doesn’t occur in D, because if it did then denotes(t) /∈ pos(τ1) ∪ ... ∪ pos(τk).
We can construct a type T ' differing from T only in that denotes'(t) is unde- fined. Since t is not in D and D :+ T we know that D :+ T ', contradiction. 
Lemma 3.25 For all D ∈ V the region of D associated with any complete tag τ is shaded iff for all T = (U, pos, neg, denotes) ∈ 7 s.t. D :+ T it is the case that neg(τ ) = •.
Proof Sketch: (→) Assume that the region associated with the tag τ is shaded. Thus we know that any T = (U, pos, neg, denotes) in 7 s.t. D :+ T it is the case that neg(τ ) = • from the definition of a diagram being of a type. (←) Assume that all T = (U, pos, neg, denotes) ∈ 7 such that D :+ T , it is the case that neg(τ ) = • and the region associated with τ of D is not shaded. We can construct a type T ' differing from T only in that neg(τ ) = ∅. Since the region associated with τ is not shaded and D :+ T we know that D :+ T ', contradiction.	 
Now we can return to the proof of the main result of this section, Theo- rem 3.23.
Proof Sketch:
For the following proof, we assume that the formula ϕ is in conjunctive normal form (CNF). Please note that any formula can be converted into this form [11]. The proof will proceed by induction on the complexity of formulas of MFOL in CNF.
ϕ is of the form ϕ(t):
D| +ϕ(t) Thus we know that the term symbol t occurs in regionD(ϕ(t)), and thus from Lemma 3.24 we know that for all T = (U, pos, neg, denotes)∈
7 s.t. D :+ T it is the case that denotes(t) ∈ pos(regionD(ϕ(t))) and thus that ϕ(t) :+ T . Hence D|≈+ϕ(t).
D| −ϕ(t) Argument similar to the last case.
D|≈+ϕ(t) Here we know that all T = (U, pos, neg, denotes) ∈ 7 s.t. D :+ T it is the case that ϕ(t) :+ T and thus that in that T , denotes(t) ∈ pos(regionD(ϕ(t))). Using Lemma 3.24 we know that the term symbol t is in the region regionD(ϕ(t)) and hence that D| +ϕ(t).


D|≈−ϕ(t) Argument similar to the last case.
The argument for negations is trivial.
D| +ψ1 and D| +ψ2 then we know that the term symbol t appears in the intersection of regionD(ψ1) and regionD(ψ2). Again using the Lemma and the induction hypothesis we conclude that D|≈+ψ1 Λ ψ2.
D| −ψ1 and D| −ψ2 Argument similar to the last case.
D|≈+ψ1 ∧ ψ2 Thus we know that all T = (U, pos, neg, denotes) ∈ 7 
s.t. D :+ T it is the case that ψ1 :+ T and ψ2 :+ T . Then from the induction hypothesis we have that D| +ψ1 and D| +ψ2.
D|≈−ψ1 ∧ ψ2 Argument similar to the last case.
The argument for disjunctions is similar.
D| +∃x ψ(x) Thus we know that there is some t such that the term symbol t is in the region regionD(ψ(t)) and hence D| +ψ(t) and thus that D|≈+ψ(t), from which we can conclude D|≈+Ex ψ(x).
D|≈+∃x ψ(x) Thus we know that all T = (U, pos, neg, denotes) ∈ 7 
s.t. D :+ T there is some t s.t. ψ(t) :+ T . Thus we know that the region regionD(ψ(t)) has to contain the term symbol t, and hence that D| +Ex ψ(x).
D| + N x ψ(x) Thus we know that the region regionD(ψ(x)) is shaded
and then using Lemma 3.25 we know that for all T in 7 s.t. D :+ T and all complete tags τ s.t. regionD(τ ) ⊆ regionD(ψ(x)) that neg(τ ) = •. Hence D|≈+N x ψ(x).
D|≈+ N x ψ(x) Thus we know that all T = (U, pos, neg, denotes) ∈ 7 
s.t. D :+ T and all the complete tags τ such that regionD(τ ) ⊆ regionD(ϕ(x)) is is the case that neg(τ ) = •. Using Lemma 3.25 we know that the region regionD(ϕ(x)) is shaded and hence D|  +N x ψ(x).
The arguments for the other quantifiers reduce to the above two cases.
 




Conclusions
In this paper we have presented Euler/Venn diagrams with named constants, an extension of Shin and Hammer’s Venn reasoning system, and defined half of a heterogeneous FOL and Euler/Venn reasoning system. This system will serve as the basis of the implementation of an educational tool called Open- proof, the next generation of the Hyperproof system.

References
Barwise, J. and J. Etchemendy, “Hyperproof,” CSLI Publications, Stanford, 1994.
Behmann, H., Beitr¨age zur algebra der logik, insbesondere zum entscheidungsproblem, Mathematische Annalen 86 (1922), pp. 163–229.
Boolos, G. S. and R. C. Jeffrey, “Computability and Logic,” Cambridge University Press, 1989, third edition.
Fish, A., J. Flower and J. Howse, The semantics of augmented constraint diagrams, Journal of Visual Languages and Computing (2005), in press.
Gil, J. Y., J. Howse and S. Kent, Formalising spider diagrams, in: Proceedings IEEE Symposium on Visual Languages (VL99) (1999), pp. 130–137.
Hammer, E. M., “Logic and Visual Information,” CSLI and FOLLI, Stanford, 1995.
Hegarty, M., B. Meyer and N. H. Narayanan, editors, “Diagrammatic Representation and Inference,” Number 2317 in Lecture Notes in Artificial Intelligence, Springer-Verlag, Berlin, 2002.
Howse, J., F. Molina, J. Taylor, S. Kent and J. Y. Gil, Spider diagrams: A diagrammatic reasoning system, Journal of Visual Languages and Computing 12 (2001), pp. 299–324.
Howse, J., G. Stapleton, J. Flower and J. Taylor, Corresponding regions in euler diagrams, in: Hegarty et al. [7] pp. 76–90.
Kent, S., Constraint diagrams: visualizing invariants in object-oriented models, in: Proceedings of the 1997 ACM SIGPLAN conference on Object-oriented programming systems, languages and applications (1997), pp. 327–341.
Quine, W. v., “Methods of Logic,” Routledge and Kegan Paul, 1974, third edition.
Shin, S.-J., “The Logical Status of Diagrams,” Cambridge University Press, Cambridge, 1995.
Shin, S.-J., Situation-theoretic account of valid reasoning with Venn diagrams, in: G. Allwein and J. Barwise, editors, Logical Reasoning with Diagrams, Oxford University Press, New York, 1996 pp. 81–108.
Stapleton, G., A survey of reasoning systems based on euler diagrams, Electronic Notes in Theoretical Computer Science ?? (2005).
Stapleton, G., J. Howse and J. Taylor, A constraint diagram reasoning system, in: Proceedings of the 9th International Conference on Distributed Multimedia Systems, 2003, pp. 263–270.
Swoboda, N., Implementing Euler/Venn reasoning systems, in: M. Anderson, B. Meyer and
P. Olivier, editors, Diagrammatic Representation and Reasoning, Springer-Verlag, London, 2002 pp. 371–386.
Swoboda, N. and G. Allwein, Modeling heterogeneous systems, in: Hegarty et al. [7] pp. 131–145.
