Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 354 (2020) 91–105
www.elsevier.com/locate/entcs
A Heuristic for the Coloring of Planar Graphs
Guillermo De Ita Lunaa,1, Cristina L´opez-Ram´ıreza,2, Ana E. De Ita-Varelaa,3 and Jorge E. Guti´errez-G´omeza,4
a Benem´erita Universidad Aut´onoma de Puebla
14 Sur Esq. Sn. Claudio, C.U. - Edif. CCO1, Puebla, Pue., M´exico

Abstract
We present an algorithm for the coloring of planar graphs based on the construction of a maximal inde- pendent set S of the input graph. The maximal independent set S must fulfill certain characteristics. For example, S contains the vertex that appears in a maximum number of odd cycles of G. The construction of S considers the internal-face graph of the input graph G in order to select each vertex belonging to a maximal number of odd faces of G.
The traversing in pre-order on the internal-face graph Gf of the input planar graph G provides us of a
strategy for the construction of partial maximal independent sets of critical regions of Gf . Thus, the union of these partial maximal independent sets forms a maximal independent set S of G. This allows us to color first the vertices that are crucial for decomposing G in a graph (G − S), which is a polygonal tree, and therefore, is 3-colorable.
Keywords: 3-Coloring Graph, Maximal Independent Set, Planar Graphs, Independent Paths.


Introduction
The graph vertex coloring problem consists of coloring the vertices of the graph with the smallest possible number of colors, so that two adjacent vertices cannot receive the same color. If such a coloring with k colors exists, the graph is k-colorable. The chromatic number of a graph G, denoted as χ(G), represents the minimum number of colors for a proper coloring of G. The k-colorability problem consists of determining whether an input graph G is k-colorable.
The inherent computational complexity, associated with solving NP-hard prob- lems, has motivated the search for alternative methods, which allows in polynomial time the solution of special instances of NP-hard problems. For example, in the

1 Email: deita@cs.buap.mx
2 Email: cristyna2001@hotmail.com
3 Email: aeda 5e@hotmail.com
4 Email: user name@hotmail.com

https://doi.org/10.1016/j.entcs.2020.10.008
1571-0661/© 2020 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

case of the vertex coloring problem, the 2-coloring problem is solvable in polyno- mial time. Also in polynomial time has been solved the 3-colorability problem for some graphs’ topologies, such as: AT-free graphs and perfect graphs. Similarly, the problem of determining χ(G) is solved efficiently for some classes of graphs such as: interval graphs, chordal graphs, and comparability graphs [18] . In all those cases, special structures (patterns) have been found to characterize the classes of graphs that are colorable in polynomial time complexity.
Graph vertex coloring is an active field of research with many interesting sub- problems. The graph coloring problem has many applications in areas such as: scheduling problems, frequency allocation, planning, etc. [3,6,13]. Into the set of planar graphs, the polygonal chain graphs have been a relevant issue of researching in mathematical chemistry, perhaps because they express molecular graphs used to represent the structural formula of chemical compounds [5,17,19]. Meanwhile, planar graphs play an important role both in the graph theory and drawing area. In fact, planar graphs have several interesting properties: they are sparse, four- colorable, and their inner structure is described succinctly and elegantly [4].
Coloring planar graphs represents a relevant area of interest in graph and com- plexity theory, since it involves the frontier between efficient and intractable com- putational procedures. For example, to determine if a planar graph is 3-colorable is a NP-complete problem [9]. However, the famous Four-Color Theorem (4CT) [1,2] says that every planar graph is vertex 4-colorable. Furthermore, 4CT provides a polynomial-time algorithm of order O(n2) to 4-color any planar graph of n vertices [2,16].
We propose a novel greedy algorithm for the coloring of planar graphs. Our proposal is based on the logical specification of the constraints given by a 3-coloring of a polygonal array as the core of the coloring on planar graphs. Furthermore, the traversing in pre-order on the internal-face graph Gf of the input planar graph G provides us of a strategy in the construction of a set of partial maximal independent sets for critical regions of the internal-face of the graph. The union of those partial maximal independent sets forms a maximal independent set S, which reduces (G−S) into a polygonal tree that will be 3-colorable.

Preliminaries
Let G = (V, E) be an undirected simple graph (i.e. finite, loop-less and without multiple edges) with vertex set V (or V (G)) and set of edges E(orE(G)). Two vertices v and w are called adjacent if there is an edge v, w ∈ E, joining them. The Neighborhood of x ∈ V is N (x)= {y ∈ V : {x, y}∈ E} and its closed neighborhood is N (x) ∪ {x}, which is denoted by N [x]. Note that v is not in N (v), but it is in N [v]. We denote the cardinality of a set A by |A|. The degree of a vertex x ∈ V , denoted by δ(x), is |N (x)|. The maximum degree of G, or just the degree of G, is Δ(G)= max{δ(x): x ∈ V }.
A path from a vertex v to w is a sequence of edges: v0v1, v1v2, ..., vn−1vn such that v = v0, vn = w, vk is adjacent to vk+1 and the length of the path is n. A

simple path is a path such that v0, v1, ..., vn−1, vn are all different. A cycle is justa nonempty path in which the first and last vertices are identical; and a simple cycle is a cycle in which no vertex is repeated, except the first and last vertices. A k-cycle is a cycle of length k (it has k edges). A cycle of odd length is called an odd cycle, while a cycle of even length is called an even cycle. A graph without cycles is called acyclic.
Given a subset of vertices S ⊆ V , the subgraph of G, where S is the set of vertices and the set of edges is {{u, v} ∈ E : u, v ∈ S}, is called the subgraph of G induced by S, and it is denoted by G|S. G − S denotes the graph G|(V − S). The subgraph induced by N (v) is denoted as H(v) = G|N (v), which contains all the nodes of N (v) and all the edges that connect them.
An independent or stable set is a set of vertices in a graph where none of its vertices is adjacent to any other. That is, it is a set S ⊆ V (G) of vertices such that for any pair of them there is not an edge that connects them. The size of an independent set is the number of vertices it contains. An independent set is maximal if it is not a proper subset of another independent set, and it is maximum in G if there is not another independent set in G with a cardinality higher than |S|. A coloring of a graph G = (V, E) is an assignment of colors to its vertices. A coloring is proper if adjacent vertices always have different colors. A k-coloring of G is a mapping from V into the set {1,2,...,k} of k ”colors”. The k- colorability problem consists of deciding whether an input graph is k-colorable. The chromatic number of G denoted by χ(G) is the minimum value k such that G has a proper
k-coloring. If χ(G)= k, then G is said to be k-chromatic or k- colorable.
Let G = (V, E) be a graph. G is a bipartite graph if V can be partitioned into two subsets U1 and U2, called partite sets, such that every edge of G joins a vertex of U1 to a vertex of U2. If G = (V, E) is a k-chromatic graph, then it is possible to partition V into k independent sets V1, V2, ..., Vk called color classes, but it is not possible to partition V into k − 1 independent sets.
Planar Graphs
A drawingΓ ofa graph G maps each vertex v to a distinct point Γ(v) of the plane and each edge (u, v) to a simple open Jordan curve Γ(u, v) with endpoints Γ(u) and Γ(v). A drawing is planar if two distinct edges do not intersect except, possibly, at common endpoints. A graph is planar if it admits a planar drawing. A planar drawing partitions the plane into connected regions called faces. The unbounded face is usually called external face or outer face. If all the vertices are incident to the outer face the planar drawing is called outerplanar, and the graph admitting it is an outerplanar graph.
Given a planar drawing, the (clockwise) circular order of the edges incident to each vertex is fixed. Two planar drawings are equivalent if they determine the same circular orderings of the edges incident to each vertex (sometimes called rotation scheme). A (planar) embedding is an equivalent class of planar drawings and it is described by the clockwise circular order of the edges incident to each vertex. A graph put together with one of its planar embedding is sometimes referred as

a plane graph. A non-connected graph is planar if and only if all its connected components are planar.
Perhaps the most renowned property is the one stated by Euler’s Theorem, which shows that planar graphs are sparse. Namely, given a plane graph with n vertices, m edges and f faces, we have n − m + f = 2. A simple corollary that can be deduced from the Euler’s rule is that for a maximal planar graph with at least three vertices, where each face is a triangle, we have that (2m = 3f ). Since m = 3n − 6, then for any planar graph we have m ≤ 3n − 6. This number reduces to m = 2n − 3 for maximal outerplanar graphs with at least three vertices (and m ≤ 2n − 3 for general outerplanar graphs). Also, if n ≥ 3 and the graph has no cycle of length 3, then m ≤ 2n − 4. Finally, if the graph is a tree, then m = n − 1. These considerations allow us to replace m with n in any asymptotic calculation involving planar graphs, while for general graphs only m ∈ O(n2) can be assumed. From a more practical perspective, they allow us to decide the non-planarity of denser graphs without reading all the edges.
The first complete characterization of planar graphs is due to Kuratowsky [11], and states that a graph is planar if and only if it contains no subgraph that is a subdivision of K5 or K3,3, where K5 is the complete graph of order 5 and K3,3 is the complete bipartite graph with 3 vertices in each of the sets of the partition. A similar result, recasted in terms of graph minors, is Wagner’s theorem, it states that a graph G is planar if and only if it does not have K5 or K3,3 as minor, that is, K5 or K3,3 cannot be obtained from G by contracting some edges, deleting some edges, and deleting some isolated vertices [8]. Observe that the two characterizations are different, since a graph may admit K5 as minor without having a subgraph that is a subdivision of K5.

Coloring a planar graph
From now on, we consider only planar graphs as working graphs. The famous four coloring theorem [1,2,16] guarantees us that all planar graph is 4-colorable. However, the current known proof for the 4CT is computer assisted. In addition, the correctness of the proof is still lengthy and complicated [10].
On the other hand, any planar graph triangle-free is 3-colorable, according to Gr¨otzsch’s theorem [7]. Similarly, it is easy (in linear-time on the size of the graph) to recognize if an input graph is 2-colorable, since it involves the recognition of the parity of cycles in the graph, e.g if it has even cycles. In the same sense, all loopless outerplanar graphs can be colored using only three colors [15]. Thus, the hard part of recognizing the 3-colorable or 4-colorable planar graphs is when they contain triangles, because it exists planar graphs for both cases.
For example, any planar graph containing K4 or odd wheels will request four colors to properly color those graphs. However, those patterns are not the unique 4-colorable cases. If we compose two (or more) wheels sharing one triangle and adding one edge to join the vertices of the last triangle of each wheel, we can form 3 or 4-colorable planar graphs. In the remainder of this section, we will introduce

concepts that we have developed to be used in our algorithmic proposal.
We consider as input a planar graph G = (V, E) whose draw has been already embedded in the plane. Let Tres = {1, 2, 3} be the set of the three possible colors to use. To each vertex x ∈ V (G) a set of prohibited colors is associated with it, denoted by Tabu(x). The following lemma proposes a method for the 3-coloring of acyclic components, whose vertices have at most one prohibited color.
Lemma 3.1 An acyclic component, where its vertices have at most one color as a restriction, is 3-colorable.
Proof. The acyclic component is considered as a tree rooted in vr. A pre-order coloring is made from vr, where Color(vr) = MIN{Tres − Tabu(vr)}. When advancing in pre-order in each new level to be colored, all vertex y in the new level that will have at most two restricted colors from its parent node and the color that could exist in Tabu(y). Thus, it has been always available a color of the three possible in Tres. The 3-coloring process ends when all nodes of the tree have been visited in pre-order.	2
We will call the above procedure for coloring acyclic graphs as the ISAT (G) pro- cess. A planar graph G has a set of closed non-intersected regions R = {r1,.  , rk}
called faces. Each face ri is represented by the set of edges that bound its inside area. All edge {u, v} in G that is not the border of some face from G is represented by its vertices label uv, and they are called acyclic edges.
Two faces ri, rj ∈ R are adjacent if they have common edges, this is, E(ri) ∩ E(rj) /= ∅. Otherwise, they are independent faces. Two acyclic edges are adjacent if they share a common endpoint. An acyclic edge is adjacent to a region ri if they have just one common vertex. A set of faces is independent if each pair of them is independent.
Lemma 3.2 Let A = {f1, f2,..., fn} be a set of n faces where each face has at least one vertex that does not restrict color 3. If the set of faces is independent or all of them have a common vertex, then A is 3- colorable
Proof. This Lemma is shown by induction on the number of faces in the set.
A single face is 3-colorable, since every cycle with at least one unrestricted vertex is 3-colorable.
Suppose that the hypothesis on sets up to n − 1 faces is validated.
Let A be a set of n faces where each face has at least one vertex that does not restrict color 3. If there is a face fa ∈ A that is independent with all other regions in A, since fa is 3-colorable (as in the case 1), fa can be removed from
A. The remaining set in A has n − 1 faces, and the inductive hypothesis is held.
Otherwise, the n faces in A share a common vertex. Let x ∈ fi : ∀fi ∈ A be the common vertex. If 3 ∈/ Tabu(x), then by assigning the color 3 to x and removing it from the graph, all the faces in A become opened and form an acyclic graph, which is 3-colorable by Lemma 3.1.

Assuming Tabu(x) = {3}, but ∀fi ∈ A, there is yi ∈ V (fi) such that Tabu(yi) = ∅, by hypothesis. By assigning color 3 to each one of these yjs, and eliminating them from each V (fi), an acyclic component is formed. This component is 3-colorable by Lemma 3.1.
2
Lemma 3.3 For any vertex v ∈ V (G), N [v] is δ(v)+ 1-colorable.
Proof. Assume that all y ∈ N (v) have different colors from each other. Then, v has δ(v) neighborhood colors and it can take only a different color from its neighborhood, so N [v] takes δ(v) + 1 colors. If there are repeated colors in the neighborhood of v, then the use of at most δ(v) colors is needed; therefore, N [v] is δ(v) + 1-colorable.2
The previous lemma is applied in the sense that for any vertex of minimal degree (e.g less than 3), 3 colors are enough to be colored. Afterwards, it can be removed at the beginning of any 4-coloring algorithm in order to simplify the resulting graph. This Lemma allow us to consider only one edge between adjacent faces, because more than two edges between adjacent faces would imply vertices of degree 2 that can be contracted to any of the extremal points of the common boundary between both faces.
We build an internal-face graph Gf = (X, E(Gf )) from G, in the following way:
Each face ri ∈ R has attached a node x ∈ V (Gf ) labeled by its composing edges.
Each acyclic edge from G has attached a node of Gf labeled by its vertices’ label.
There is an edge {u, v} ∈ E(Gf ) joining two adjacent nodes of Gf when its corresponding faces (or acyclic edges) are adjacent in G.
Each edge in Gf is labeled by the common elements (a vertex or edge) between the two adjacent nodes.
Gf is called the internal-face graph of G. Notice that Gf is not the dual graph of G, since in the construction of Gf the external face is not considered. Also notice that Gf is a planar graph, where its nodes represent faces from G, but it is not necessarily a tree graph. However, if Gf has a tree topology, then we achieve a relevant property for the coloring of G.
When Gf is a tree, we say that G (its corresponding planar graph) is a polygonal tree. It means that, although G has cycles, all those cycles can be arranged as a tree, whose nodes are polygons instead of single vertices of G. In this case, an order for visiting the faces of the planar graph provides efficient procedures for the 3-coloring of G. In [12] is shown that polygonal trees are 3-colorable graphs.
An algorithm for the coloring of planar graphs
We present in this section a polynomial-time heuristic for the coloring of a planar graph G based on the construction of a maximal independent set of the current sub-

graph from G. We assume that the input graph G is planar and that an embedding of G has been provided. ∀v ∈ V (G) such that δ(v) < 3, v is removed from G, since those vertices are 3-colorable (based on Lemma 3.3). This implies that more than two edges between faces are reduced to one, since the intermediate vertices have degree two. Thus, a new planar graph G is formed from the remaining vertices and edges. Afterward, the internal-face graph Gf from G is built.
The stop conditions for the algorithm are checked after coloring a vertex. Such stop conditions are:
If the resulting graph is acyclic, then the ISAT process is applied to perform a 2-coloring.
If the resulting graph is a polygonal tree, then it is 3-colorable [12].
If the resulting graph does not contain triangular faces, then it is 3-colorable according to Gr¨otzsch’s theorem.
The goal of our algorithm is to choose an initial region of G to start the process of coloring vertices. For this, we look for the region (face) fr with maximum degree in the face-graph. When such region is identified, we search for the vertex xa ∈ V (fr) of maximum degree so that it can first be colored, that is: f (xa)= color(xa); ∀y ∈ N (xa): Tabu(y)= Tabu(y) ∪ {f (xa)}.
Once the first vertex xa and a color c have been chosen, S = S ∪ {xa}; Ga = G−{xa}. An iterative process is performed with the purpose of building a maximal independent set S from Ga by starting from fr. fr is now the root node for traversing through Gf , where the order in this traversing is visiting the common edges between adjacent faces. We visit the neighboring faces during the traversing of Gf in order to build maximal paths formed by the common vertices between adjacent faces.
The main strategy in our proposal consists in building a maximal independent set S of G in order to form a color class. Afterwards, we check if (G − S) is an acyclic or a polygonal tree graph that can be colored using 3 colors at the most. At the end of the construction of S, the remaining graph (G − S) is checked. If there are not any cycles left in Gf , then G − S is 3-colorable. Otherwise, if the process returns a new graph (G − S), where there is a face of odd length and all of their incident vertices are restricted with the color 1, then the input graph G is 4-colorable.
Our proposal can be described by the following pseudo-code.



Algorithm 1 3-coloring
Require: a planar graph G.
Ensure: the graph G with a validate coloring.
1: Tag the inner faces of the graph G
2: Form the graph Gf (internal-face graph of G)
3: S = Max Ind Set(G); a maximal independent set of vertices of G which will have color 1.
4: Gj = G − S
5: if Gj is a base case (acyclic graph or a polygonal tree) then
6:	Continue.
7: else
8:	S = Max Ind Set(Gj); Gj = Gj − S.
9: end if
10: if Gj contains an odd cycle whose vertices are restricted with color 1 then
11:	X(Gj) = 4; exit
12: else
13:	Apply ISAT procedure to assign a valid coloring to Gj
14: end if
15: Join the sets Sjs with Gj keeping their corresponding colors.

Algorithm 2 Max Ind Set(G): Construction of a maximal independent set of G Require: a planar graph G and its corresponding internal-face graph Gf Ensure: S - a maximal independent set of G
1: while There is at least a vertex without color and without Tabu mark do
2:	Select x ∈ V (G) that belongs to the largest number of odd faces in G without color and without Tabu mark
3:	Select y ∈ V (Gf ) the vertex of higher degree in Gf and where x belongs to its incident vertices.
4:	Build a maximal independent set of V (G) based on x and traversing by the edges of the face y.
5:	for each u ∈ Sj the set formed in the last step do
6:	mark u with color 1.
7:	for each u the vertex just colored do
8:	mark N (u) with tabu 1.
9:	end for
10:	end for
11:	if G is a base case (acyclic graph or a polygonal tree) then
12:	Return S that is the conjunction among the partial maximal independent sets already calculated.
13:	end if
14: end while
15: Return S, which is the conjunction among the partial maximal independent sets already calculated.


Let us illustrate our proposal on the following planar graph G (Figure 1) The first step consists in labeling faces of the input graph G. Afterwards, the procedure forms the internal-face graph Gf of G using the faces’ label.



Fig. 1. Graph G with identified faces
Fig. 2. The internal-face graph Gf of G


In an iterative process, a vertex x ∈ V (G) that belongs to the largest number of odd faces in G is selected. In our example, vertex 10 ∈ V (G) is selected. Also, the vertex y ∈ V (Gf ) with higher degree in Gf and containing the selected vertex x is chosen. In our example, the face 2 ∈ V (Gf ) is selected. Then, a maximal independent set will be formed considering 10 ∈ V (G) as the first vertex. Therefore, the vertex 10 from V (G) is removed. As the resulting graph is not a base case (acyclic or a polygonal tree), the iterative step is repeated.



Fig. 3. Graph G without vertex 10
Fig. 4. The internal-face graph Gf of the graph in Figure 3

Again, the vertex x ∈ V (G) that belongs to the largest number of odd faces in G with Tabu(x) = ∅ is selected. In this case, the vertex 12 ∈ V (G) and the higher degree vertex y ∈ V (Gf ) incident to x are selected. This selects the vertex 10 ∈ V (Gf ). In the next step, we extend the partial maximal independent set considering the vertices forming face 10. In this case, the vertex 12 ∈ V (G). Thus, a partial maximal independent set is formed with the vertices 10 and 12. Those vertices are removed from G, as it is illustrated in Figure 5.


	


Fig. 5. Graph G without vertices {10, 12}
Fig. 6. The internal-face graph Gf of the graph in Figure 5

We check if the resulting graph is a base case (acyclic or a polygonal tree). Since a base case is not obtained, our procedure performs another iteration. In this case, a new independent set has to be formed, since all the remaining vertices x in G have Tabu(x) /= ∅.
We look for the vertex x that belongs to the largest number of odd faces in G. The vertex 2 ∈ V (G) holds the above condition. We remove those vertices from the graph, as it is shown in Figure 7. In this case, the resulting graph has marked all remaining vertex v in G. Then we consider to build another color class. For this, we select from the resulting graph G, the face Y ∈ Gf , because it is the vertex of higher degree in Gf . In the next step, we build a partial maximal independent set among the vertex that conform the face Y . The partial maximal independent set formed during this iteration is {4, 1, 7}.
We remove those vertices from the graph, as it is shown in Figure 8. In this case, the resulting graph is a base case. Since it is acyclic, our procedure stops and returns the two maximal independent sets formed by S1 = {10, 12, 2} and S2 = {4, 1, 7}.












Fig. 7. Graph G without vertices {10, 12, 2}
Fig.  8.	Graph  G  without  vertices
{10, 12, 2, 4, 1, 7}

Finally, the acyclic graph is colored applying the ISAT procedure. As a result, we obtain a 4-coloring for the input graph.



Fig. 9. Final coloring of G

The main contributions of our proposal, which are different to other proposals in the state of art, are:
The internal graph of faces Gf is used as a monitoring system in the selection of the best vertex to be colored, as well as to check for the algorithm’s stop conditions.
Our proposal is based on recognizing the vertices that appear in an odd number of triangular faces as critical elements to be first colored.
We apply a tabu search in order to restrict the coloring options on the vertices.
We take advantage of the fact that each color class is an independent set of the input graph. Thus, partial maximal independent sets are the base for forming a color class.
We consider another example in order to illustrate our proposal.




Fig. 11. The internal-face graph Gf of G

Fig. 10. Graph G with identified faces
A relevant strategy in our algorithm is to consider the vertices appearing in the maximum number of odd faces of G as part of the maximal independent S to be built. For example, according to the graphs in Figure 10 and 11, two maximal independent sets are: S1 = {2, 4, 6, 8} and S2 = {1, 4, 7, 11}. However, S2 contains

the vertex 11, which appears in the maximum number of odd faces of G. Thus, S2
is better option than S1.
After removing the vertices already colored, a base coloring case graph is ob- tained (applying ISAT), which makes it a 3-colorable instance.

-3

-3








Fig. 12. Assigning color 1 to the vertices of S	Fig. 13. A 2-coloring of (G − S) using ISAT

It is relevant to note that the maximal independent set must comply with the characteristics described before. If this is not done, then the number of colors used could be higher than the necessary. In order to exemplify this, consider the set S = {2, 4, 6, 8} to start the coloring of the graph, as it is illustrated in Figure 14. However, the resulting subgraph (G − S) is a 3-colorable instance, as it is shown in Figure 15.













Fig. 14. Assigning color 1 to the vertices of S	Fig. 15. A 3-coloring of (G − S)

The graph in Figure 15 shows that (G − S) is a 3-colorable graph; thus, 4 colors are used to color G. Notice that the arbitrary construction of the set S may cause a conflict, since it may leave an odd cycle with the same color restriction for all of its vertices. This generates an increase in the number of colors used in the coloring of the graph G.
We compare our proposal to a well-known algorithm by Nishizeki et al. [14], which guarantees to color planar graphs with five colors at the most. Nishizeki

proposes an algorithm based on the recognition of vertices of degree five. If those vertices cannot be found, then it is recursively colored from the vertices of higher degree. The colored vertices are removed from the graph. The process is repeated until the graph has only 5 vertices in order to grant an arbitrary coloring. The exe- cution of this algorithm is shown below in Figure 17. It can be seen that Nishizeki’s algorithm performs a 4 coloring when it is not necessary. Meanwhile, our proposal grants a three coloring.

Fig. 16. Final coloring of G using our algorithm














Fig. 17. Final coloring of G using Nishizeki’s algorithm



Time-Complexity analysis
Let us consider an input graph G = (V, E) with n = |V | and m = |E|. We analyze the time-complexity for the algorithm 2 (Max Ind Set procedure). The recognition of the parities of the cycles in G can be performed in time of order O(m + n), based on a depth-first search on G. In order to select the face formed by x (step 3), it requires a time of order O(f ). In the worst case, it is of order O(m), when a face of G has maximal length.
The two for’s in algorithm 2 require to visit all vertex of G at the most, and this process has an order O(n). In order to recognize if a graph G has odd cycles or if it represents a base case of our proposal, it can be done in linear-time on the size of

G, because it is based on the application of a depth first search on the graph G and the recognition of the basic cycles in G. The most expensive step in this procedure is to check for the constraints of the independence property on all the vertices of the partial maximal independent sets. In the worst case, it requires a time of O(n2). Then, the algorithm 2 has a polynomial time complexity of order O(n2).
Algorithm 1 involves the construction of the internal-face of G, which is known to require a time of O(m + n). In order to check the restriction on all the vertices of odd cycles, it can be done in time O(n), based in the tabu sets. The most expensive time-procedure in our proposal is the procedure Max Ind Set, whose time-complexity is of order O(n2). Our proposal performs at the most two calls to Max Ind Set. Thus, our proposal has a time-complexity of O(n2) on the size of the input graph G.
Our proposal, as well as the Nishizeki’s algorithm, have an order of O(n2) time complexity. However, the Nishizeki’s algorithm focuses on coloring planar graphs with five colors at the most, while our proposal tries to use a minimum number of colors based on the decomposition from the input planar graph to a planar graph, whose internal-face graph has a tree topology.
Conclusion
An algorithm with a time-complexity of order O(n2) (where n is the number of vertices) for coloring planar graphs has been presented. Our proposal is based on the computation of a maximal independent set S from the input graph G. The maximal independent set S has some characteristics. One of those is that S contains the vertex that appears in the maximum number of odd faces of G. Also, the construction of S considers the internal-face graph of the input graph G in order to select each vertex belonging to a maximal number of odd faces of G.
A set of partial maximal independent sets on the internal-face of the graph is computed. The union of those partial maximal independent sets forms the maximal independent set S of G. It allows us to color first the vertices that are crucial for decomposing the input planar graph in a graph Gj, where two colors are enough for coloring Gj. I.e. (G − S) would be 2-colorable, or in other case, our procedure recognizes that G is 4-colorable.

References
K. Appel and W. Haken. Every planar map is four colourable, part I: discharging. Illinois Journal of Mathematics, volume 21, pp.429—490, 1977.
K. Appel, W. Haken, and J. Koch. Every planar map is four colourable, part II: Reducibility.Illinois Journal of Mathematics, volume 21, pp.491—567, 1977.
J.M. Byskov. Exact algorithms for graph colouring and exact satisfiability. Ph.D. thesis, University of Aarbus, Denmark, 2005.
P. Cortese and M. Patrignani. Planarity Testing and Embedding, Press LLC, 2004.
T. D˜osli´c and F. Maloy. Chain hexagonal cacti: matchings and independent sets.Discrete Mathematics, volume 310, pp. 1676-–1690, 2010.


Z. Dvora´k, D. Kr´al and R. Thomas. Three-coloring triangle-free graphs on surfaces. In: Proceedings of 20th ACM-SIAM Symposium on Discrete Algorithms, pp. 120—129, 2009.
H. Gr¨otzsch. Ein Dreifarbensatz fu¨r dreikreisfreie Netze auf der Kugel. Wiss. Z. Martin-Luther-Univ. Halle-Wittenberg Math.-Natur. Reihe 8, pp. 109-120, 1959.
F. Haray and W. T. Tutte. A dual form of Kuratowski’s theorem. Canadian Mathematical Bulletin, volume 8, pp.17—20, 1965.
D. Johnson. The NP-Completeness Column: An Ongoing Guide. Jour. Of Algorithms 6, pp.434-451, 1985.
K. Kawarabayashi and K. Ozeki. A simple algorithm for 4-coloring 3-colorable planar graphs.
Theoretical Computer Science, volume 411, pp. 2619–2622, 2010.
K. Kuratowski. Sur le probleme des courbes gauches en topologie.Fund. Math., volume 15,271—283, 1930.
C. Lopez, G. De Ita and A. Neri. Modelling 3-Coloring of polygonal trees via Incremental Satisfiability.
Pattern Recognition of LNCS 10880, Springer Verlag, 93-104, 2018.
G.B. Mertzios and P.G. Spirakis, Algorithms and almost tight results for 3-colorability of small diameter graphs. Technical report. 2012, arxiv.org/pdf/1202.4665v2.pdf.
T. Nishizeki and N. Chiba. Planar graphs: Theory and algoritms.Elsevier, volume 32, pp. 83-87, 1988.
A. Proskurowski and M. Syslo. Efficient vertex- and edge-coloring of outerplanar graphs, Siam J. Alg. Disc. Metho., volume 7, 1, pp.131–136, 1986.
N. Robertson, D.P. Sanders, P.D. Seymour, and R. Thomas.The four color theorem. Journal Combinatorial Theory Ser. B, volume 70, pp.2—44, 1997.
W.C. Shiu. Extremal Hosoya index and Merrifield-Simmons index of hexagonal spiders. Discrete Applied Mathematics, volume 156, 2978—2985, 2008.
J. Stacho. 3-colouring AT-free graphs in polynomial time. In: Cheong, O., Chwa, K.-Y., Park, K. (eds.) Algorithms and Computation, ISAAC - LNCS 6507, pp. 144—155, 2010, URL:https://doi.org/10.1007/978-3-642-17514-5.
S. Wagner and I. Gutman. Maxima and minima of the Hosoya index and the Merrifield-Simmons index.
Acta Applicandae Mathematicae, volume 112, 323—346, 2010.
