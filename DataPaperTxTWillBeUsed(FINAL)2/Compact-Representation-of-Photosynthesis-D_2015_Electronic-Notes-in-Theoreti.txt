Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 316 (2015) 17–27
www.elsevier.com/locate/entcs

Compact Representation of Photosynthesis Dynamics by Rule-based Models 1
L. Brim, J. Niˇznan, D. Sˇafra´nek
Faculty of Informatics, Masaryk University Brno, Czech Republic

Abstract
Traditional mathematical models of photosynthesis are based on mass action kinetics of light reactions. This approach requires the modeller to enumerate all the possible state combinations of the modelled chemical species. This leads to combinatorial explosion in the number of reactions although the structure of the model could be expressed more compactly. We explore the use of rule-based modelling, in particular, a simplified variant of Kappa, to compactly capture and automatically reduce existing mathematical models of photosynthesis. Finally, the reduction procedure is implemented in BioNetGen language and demonstrated on several ODE models of photosynthesis processes.
Keywords: Biological models, model annotation, systems biology, simulation, database


Introduction
Photosynthesis is one of the most important biophysical processes driving life on Earth. Most life forms, including humans, depend on photosynthesis that trans- forms energy of solar radiation into energy-rich organic matter, releases oxygen that we breathe, and removes excess carbon dioxide from the atmosphere that would threaten the Earth’s energy balance. Adding to the relevance of photosynthesis, sig- nificant expectations emerged lately in connection with potential human interven- tions in the global carbon cycle – among the considered alternatives are the higher generation biofuels [1] or biomineralization by point-source carbon capture [11].
Current coarse-grained mathematical models of photosynthesis [13] cover the known parts of the entire process. They build up the light reactions dynamics from simplified interactions on and inbetween complicated protein complexes involved in the transfer of the energy from light into the cell. Many different local modifications at these protein structures are traversed after reception of the photon. To capture

1 The work has been supported by the EC OP project No. CZ.1.07/2.3.00/20.0256.

http://dx.doi.org/10.1016/j.entcs.2015.06.008
1571-0661/© 2015 The Authors. Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

the process mechanistically, many elementary chemical reactions connect together to form the model. Each effective structure combination has to be enumerated in order to assign the appropriate kinetic laws. This inevitable expansion then leads to combinatorial explosion in the number of possible complexes.
In [20] we have developed an online repository for mathematical models of pho- tosynthesis. That effort has opened many questions regarding the differing levels of available models and the problem of their formal representation in a single suitably expressive formalism. After several years of interactions with modellers targeting photosynthesis, we now attempt to move towards practical applications of state-of- the-art formal methods in that field.
Rule-based modelling [8,5,4] is an approach that has been developed to tackle primarily the complexity of cell signalling systems where combinatorial explosion comes from configurations of phosphate bindings to specific sites of a protein. In particular, it allows us to compactly represent complicated models that would be tedious to specify using traditional reaction-based methods [6,12]. The interactions between proteins are represented using rules at the level of functional components. In photosynthesis, there occurs a number of specific protein complex modifications that are in abstract essence similar to phosphorylation though crucially different at the side of physics. The two most well-known representatives of rule-based modelling languages are Kappa [8] and BioNetGen Language [9].
On the theoretical side, we contribute to the increasing set of algebraic-based modelling efforts by employing a simplified version of Kappa calculus to compact a set of domain-specific models coming from biophysics of photosynthesis. We do not construct the models from the scratch but we rather take several existing kinetic models of photosynthesis-related processes and reformulate them in the algebraic framework. At the level of compositional representation, we formulate syntactic reductions of the models that preserve behavioural equivalence.
On the practical side, we employ BioNetGen language (BNGL) and related tools [9,19] to implement the models. We contribute by automatising our reduction procedure in Python. By applying reductions to the considered models we show the power of process-algebraic framework to compactly represent combinatorially exploding systems of light reactions.
The paper shows the importance of process-algebraic description for the domain of photosynthesis. To the best of our knowledge, the application of such techniques in the field of systems biology of photosynthesis is still at its beginning and we believe our contribution is useful to help to establish rule-based modelling in the domain.
Related Work
There are many applications of rule-based modelling available (see [4] for an overview). However, applications to photosynthesis are very rare. In [21], the authors provide a model of chlorophyll a fluorescence induction kinetics that is simulated in the rule-based framework by means of Monte Carlo simulation. The work is unique in the sense it pioneers rule-based approach for photosynthesis models. The contri-

bution brings a stochastic simulation algorithm that reflects the differing context where the context-free rules appear. This is important, since the quantitative rates of electron transfers are modulated by aggregation of several modifications of the protein complex, i.e., the photosystem. The considered model is comparable to Lazar model [15] we use for our case study.
Automatic reduction of rule-based model is available in the tool complx. It is able to automatically perform so-called decontextualization transformation on Kappa models [7]. This automatic reduction works differently than our method and yields different results for the photosynthetic models.
In [3], the problem of combinatorial complexity in models where the quantitative semantics cannot be generated is addressed. Several frameworks for abstracting the models at the level of semantics have been developed for Kappa.

Background
We define simplified Kappa using a process-like notation as is presented in [7], syntax and the notions of structural equivalence and matching are entirely take from [7]:
expression	E ::= ∅ | a, E	site	s ::= nλ
agent	a ::= N (σ)	site name	n ::= x ∈S agent name	N ::= A ∈A	internal state	ι ::= ϵ | m ∈ V interface	σ ::= ∅ | s, σ	binding state	λ ::= ϵ | i ∈ N
where A is a finite set of agent names, S is a finite set of site names, V is a finite
set of values representing modified states of the sites. An agent is denoted by its name and its interface. Interface consists of a sequence of sites. xλ denotes a site x with internal state ι and binding state λ. If the binding state is ϵ then the site is free, otherwise it is bound. By convention, when a binding or internal site is not specified, ϵ is considered.
Note that full Kappa is richer. It allows a binding state meaning a free or bound site, denoted by a question mark. We also omit rates from the rules.
Definition 2.1 An expression is well-formed if a site name occurs only once in an interface and if each binding state (/= ϵ) present in the expression occurs exactly twice. The set of all well-formed expressions is denoted as E. The set of all well- formed expressions that can be generated from the literal a is called the set of all well-formed agents and is denoted as Ea. Similarly, Eσ denotes the set of all well- formed interfaces and Es the set of all well-formed sites.
Next, we define some notations we use throughout the text.
Notation 2.2 expressions E, Ej ∈ E; agents a, aj ∈ Ea; agent name A ∈ A; interfaces σ, σj  ∈  Eσ; sites s, sj  ∈  Es; site name x  ∈  S; internal state ι ∈ {ϵ} ∪ V; specific internal state m ∈ V; binding state λ ∈ {ϵ} ∪ N;
Next, we provide inductive definitions of some useful mappings.

Definition 2.3 Agent name is a mapping name	:	Ea	→	A deﬁned as
name(A(σ)) = A.
We deﬁne agent sites as a mapping sites : Ea → 2E such that sites(A()) = ∅,
sites(A(xλ)) = {x}, and sites(A(s, σ)) = sites(A(s)) ∪ sites(A(σ)).
Agent internal state is a mapping state : Ea → (V ∪{ϵ})E deﬁned as state(A()) =
∅, state(A(xλ)) = {(x, ι)}, and state(A(s, σ)) = state(A(s)) ∪ state(A(σ)).
Definition 2.4 Structural equivalence ≡⊆ E × E is deﬁned as a relation satisfying the following properties:
Reflexivity:	E ≡ E
The order of sites in interfaces does not matter:
E, A(σ, s, sj, σj), Ej ≡ E, A(σ, sj, s, σj), Ej
The order of agents in an expression does not matter:
E, a, aj, Ej ≡ E, aj, a, Ej
Binding states can be injectively renamed:	E[i/j] ≡ E
where i, j ∈ N and i does not occur in E.
Solution [E] ∈ 2£ denotes the equivalence class of E in ≡. L is a set of all solutions.
Definition 2.5 A rule is a pair of expressions El, Er (usually written as El → Er). The set of all rules is denoted as R.
The left hand side El of the rule describes the solution taking part in the reaction and the right hand side Er describes the effects of the rule. The rule can be either a binding rule or a modification rule. A binding (unbinding) rule binds two free sites together (or unbinds two bound sites). A modification rule modifies some internal state [7].
Definition 2.6 Matching is a relation denoted as |=⊆ E ×E and deﬁned inductively in the left column below. Replacement is a function E× E → E deﬁned in the right column.
nλ |= nλ	nλ[nλr ]= nλr
ι	ι	ι	ιr	ιr
nλ |= nλ	nλ[nλr ]= nλr
ι	ι	ι
σ |= ∅	σ[∅]= σ

s |= sl	σ |= σl
s, σ |= sl, σl
	σ |= σl	
N (σ) |= N (σl)
s, σ[sr, σr]= s[sr], σ[σr]
N (σ)[N (σr)] = N (σ[σr])

E |= ∅	E[∅]= E

a |= al	E |= El
a, E |= al, El
(a, E)[ar, Er]= a[ar], E[Er]

A replacement can be applied only if the corresponding matching is satisfied. In order to apply a rule El → Er toa solution [E] the expression E representing

the solution must first be reordered to an equivalent expression Ej that matches El (according to the definition of matching stated above). Ej is then replaced with Ej[Er] (also defined above).
Definition 2.7 Rule application is a mapping τ : L×R →L such that τ ([E], (El, Er)) = [Ej[Er]] whenever ∃Ej ∈ [E].Ej |= El.
Rules yield a transition system between solutions containing an edge [E] →El,Er
[Ej[Er]] whenever ∃Ej ∈ [E].Ej |= El.
Definition 2.8 An agent signature (Σ,I) is a pair of mappings Σ : A → 2E and
I : A×S → 2V.
Informally, Σ restricts for each agent name A ∈ A the set of site names that can occur in an agent with name A. And I restricts the set of internal states a particular site can attain.
Definition 2.9 E satisﬁes agent signature (Σ,I), denoted (Σ,I) ▶ E, if E satisﬁes one of the following conditions:
E ≡∅ 
E ≡ A() and A ∈ dom(Σ)
E ≡ A(xλ) and x ∈ Σ(A)
E ≡ A(xλ ) and x ∈ Σ(A) and m ∈ I(A, x)
E ≡ A(s, σ) where (Σ,I) ▶ A(s) and (Σ,I) ▶ A(σ)
E ≡ El, A(σ) where (Σ,I) ▶ El and (Σ,I) ▶ A(σ)
If r = (El, Er) ∈R and (Σ,I) ▶ El and (Σ,I) ▶ Er then (Σ,I) ▶ r. If R ⊆R and ∀r ∈ R.(Σ,I) ▶ r then (Σ,I) ▶ R.
Definition 2.10 An agent a is complete with respect to signature (Σ,I), denoted
(Σ,I) |= a, if sites(a)= Σ(name(a)) ∧ ∀x ∈ sites(a).state(a)(x) ∈ I(name(a), x).
An expression E is complete with respect to signature (Σ,I), denoted (Σ,I) |= E, if it satisﬁes one of the following conditions:
E ≡∅ 
E ≡ a, Ej where a ∈ Ea, Ej ∈E and (Σ,I) |= a and (Σ,I) |= Ej
E(Σ,I) = {E ∈ E|(Σ,I) |= E} is a set of all expressions that are complete with respect to signature (Σ,I) .
Definition 2.11 A rule-based model M is a tuple (Σ,I, R) that satisﬁes the con- dition (Σ,I) ▶ R. We use the notation Signature(M) = (Σ,I), Rules(M) = R, M ▶ E ⇐⇒ (Σ,I) ▶ E for E ∈ E, M |= E ⇐⇒ (Σ,I) |= E for E ∈ E, and En = E(Σ,I).
Definition 2.12 An initialised model M is a pair (M, Ei) where M is a rule-based model and Ei is an expression representing the initial solution such that M |= Ei.
Definition 2.13 A state space of an initialised model M = (M, Ei) is a pair
(Solutions(M ) ⊆ L, Reactions(M ) ⊆L × L) deﬁned inductively as follows:

[Ei] ∈ Solutions(M )
[E] ∈ Solutions(M ) and ∃r ∈ Rules(M).τ ([E], r)= [Ej]
if and only if [Ej] ∈ Solutions(M ) and ([E], [Ej]) ∈ Reactions(M )
Definition 2.14 Initialised models M1 = (M1, E1) and M2 = (M2, E2) are struc- turally equivalent, denoted M1 ≡ M2, if and only if Solutions(M1)= Solutions(M2) and Reactions(M1)= Reactions(M2).
Definition 2.15 Models M1 and M2 are structurally equivalent, denoted M1 ≡ M2, if and only if ∀Ei ∈ En1 ∪ En2 .(M1, Ei) ≡ (M2, Ei).
In BNGL, agents are called molecules and they are specified in a similar manner as in the simplified Kappa. An example of a molecule is A(x~n!1) where the site x has an internal state n (separated from the site by a tilde) and a binding state is 1 (separated by the exclamation mark). The BNGL alternatives to agent signa- tures are called molecule types they are defined using the notation demonstrated in the following example: A(x~n~b, y~n~a). Here, the allowed internal states of the individual sites are separated by tildes (site x can have an internal state n or b). Rules are described by the lhs -> rhs notation (or lhs <-> rhs in the case of reversible rules). The individual model components (molecule types, reaction rules, seed species, observables) are in BNGL separated by the begin keyword and end keyword pairs.
Model Reductions
In this section, we formally define several syntactic operations that can be used to reduce rule-based models.
Definition 3.1 Model M1 and model M2 are in relation context enumeration elimination, ((M1, M2) ∈ ρcee) , iff Signature(M1)= Signature(M2)= (Σ,I) and
∃ A ∈ A,x ∈ S,λ ∈ {ϵ}∪ N, El, Er ∈ E, σl, σr ∈ Eσ such that
Rules(M1) \ Rules(M2) = {(Em, Em)|m ∈ I(A, x)} where ∀m ∈ I(A, x) :
l	r
Em ≡ El, A(σl, xλ ) and Em ≡ Er, A(σr, xλ ),
l	m	r	m
Rules(M2)\Rules(M1)={(Ej, Ej )} where Ej ≡ El, A(σl, xλ) and Ej ≡Er, A(σr, xλ).
l	r	l	є	r	є
Theorem 3.2 Context enumeration elimination preserves structural equivalence of models. If (M1, M2) ∈ ρcee then M1 ≡ M2.
Proof. Let (M1, M2) ∈ ρcee. Then En1 = En2 . Let Ei ∈ En1 , M1 = (M1, Ei) and M2 = (M2, Ei). We prove that M1 ≡ M2 by induction through the structure of their state spaces. Without a loss of generality we can fix the variables used in Definition 3.1.
From Definition 2.13: [Ei] ∈ Solutions(M1), [Ei] ∈ Solutions(M2)
Completeness:
Let [E] ∈ Solutions(M1) and r ∈ Rules(M1).τ ([E], r)= [Ej]. From induction we have [E] ∈ Solutions(M2).
r ∈ Rules(M1) ∩ Rules(M2). Then we have r ∈ Rules(M2).

r ∈ Rules(M1) \ Rules(M2). So ∃m ∈ I(A, x).r = (Em, Em).
l	r
Let rj = (Ej, Ej ) ∈ Rules(M2)\Rules(M1) and e ∈ [E].e |= Em. Then from
l	r	l
Definition 2.6 we have e |= Ej and e[Em]= e[Ej ]. Therefore, τ ([E], rj)= 

[Ej].
l	r	r

Thus Solutions(M1) ⊆ Solutions(M2), Reactions(M1) ⊆ Reactions(M2).
Soundness:
Let [E] ∈ Solutions(M2) and r ∈ Rules(M2).τ ([E], r)= [Ej]. From induction we have [E] ∈ Solutions(M1).
r ∈ Rules(M2) ∩ Rules(M1). Then we have r ∈ Rules(M1).
r ∈ Rules(M2) \ Rules(M1). So r = (Ej, Ej ). Let e ∈ [E].e |= Ej. Then
l	r	l

there must be xλ
in e that gets matched to the xλ part Ej. It must

be that m ∈ I(A, x) and so rj = (Em, Em) ∈ Rules(M1) \ Rules(M2).

l
From Definition 2.6 we have e |= Em
r
and e[Em] = e[Ej ].  Therefore,

τ ([E], rj)= [Ej].
l	r	r

Thus Solutions(M2) ⊆ Solutions(M1), Reactions(M2) ⊆ Reactions(M1).
2


Definition 3.3 Model M1 is in relation generic unbound context elimination with model M2, (M1, M2) ∈ ρguce, iff Signature(M1)= Signature(M2) and ∃A ∈ A,x ∈ S, El, Er ∈ E, σl, σr ∈ Eσ such that
Rules(M1) \ Rules(M2) = {(E1, E1)} where E1 ≡ El, A(σl, xє) and E1 ≡

Er, A(σr, xє),
l	r	l	є	r

Rules(M2)\Rules(M1)= {(E2, E2)} where E2 ≡ El, A(σl) and E2 ≡ Er, A(σr).
l	r	l	r
This reduction is useful in models where the removed contexts are guaranteed not to be bound.
Definition 3.4 Model M1 is in relation specific unbound context elimination with model M2, (M1, M2) ∈ ρsuce, iff Signature(M1)= Signature(M2) and ∃A ∈ A,x ∈ S, El, Er ∈ E, σl, σr ∈ Eσ,m ∈ V such that
Rules(M1) \ Rules(M2) = {(E1, E1)} where E1 ≡ El, A(σl, xє ) and E1 ≡

Er, A(σr, xє ),
l	r	l	m	r

Rules(M2)\Rules(M1)= {(E2, E2)} where E2 ≡ El, A(σl) and E2 ≡ Er, A(σr).
l	r	l	r
This reduction can be used if the set of reachable solutions in an intialized model to which this rule can be applied is not affected by the reduction.
Sometimes it may be useful to eliminate a rule from a model. Reasons for doing so can be different. For example, one might want to see how the behaviour of a model changes after the rule is removed. Or if the rule is not reachable in an initialised model then it can be removed to reduce the size of the model description.

Definition 3.5 Model M1 is in relation rule elimination with model M2, denoted (M1, M2) ∈ ρre, if and only if Signature(M1) = Signature(M2) and ∃r ∈ R such that Rules(M1) \ Rules(M2)= {r} and Rules(M2) \ Rules(M1)= ∅.

If a rule is not reachable in some initialised model then we can safely remove it without affecting the semantics of the initialised model.
Application to Photosynthesis Models
In this section, we describe the application of the reductions to several models of photosynthesis. If the model is reaction-based, we first rewrite it to rule-based form.

Implementation
We used the library PySB [16] for the specification of the photosynthetic models and to automatise their export to BNGL. The scripts that implement syntactic operations have been written in Python. We used BioNetGen for constructing and simulating the models. The scripts are available at https://github.com/jniznan/ rbm-photosynthesis.
We search the space of possible models that can be constructed by applying syntactic operations to the original model by depth-first search. We stop when we find a model that cannot be further reduced. There can be multiple models that cannot be further reduced. Our algorithm finds only one. We apply the syntactic operations in a given order: (i) context enumeration elimination, (ii) generic/specific context elimination, (iii) rule elimination. This approach is a heuristic that attempts to maximize the number of reductions.

Photosynthesis
Light-dependent reactions begin in photosystem II where the photons hit and ex- cite the antenna molecules. The excitation then travels via a chain of proteins until it arrives to chlorophyll a. Or a photon can directly excite chlorophyll a. This excitation causes the primary electron acceptor (pheophytin) to accept an electron from chlorophyll a species called P680 – the primary electron donor. The electron is exchanged by multiple protein molecules until it reaches plastoquinone. The elec- tron missing from chlorophyll a is replenished through a tyrosine residue from so called oxygen-evolving complex that strips electrons from water molecules, produc- ing molecular oxygen and hydrogen protons into the lumen.
After plastoquinone accepts two electrons, it is converted to its PQH2 form by accepting two hydrogen protons from the chloroplast stroma. Then it travels to cytochrome b6f where it is converted back to its original PQ form, leaving the two electrons in the cytochrome and the two hydrogen protons in the lumen. After that, plastoquinone returns to photosystem II, ready to accept other electrons. As is shown in Figure 1, the electrons travel through plastocyanin, photosystem I, ferre- doxin to ferredoxin-NADP reductase where they are used for converting NADP+ to NADPH. The process of the electrons travelling from the oxygen-evolving complex to the ferredoxin-NADP reductase is known as the Z-scheme of light. Hydrogen protons that are left in the lumen are pumped back into the chloroplast stroma by powering ATP synthase which uses that energy to convert ADP into ATP.



Fig. 1. Schema of the thylakoid membrane where light-dependent reactions occur.
Comprehensive Model of Photosystem II
Photosynthesis is well-adapted for spatially and temporally heterogeneous environ- ments [17]. The light conditions under which photosynthesis occurs are constantly changing for many reasons, including day-night cycle, moving clouds or changing seasons. Mechanisms lying behind the adaptability of photosynthesis are not yet fully understood [18]. Evidence confirms that photosynthesis in fluctuating light is more dynamic than simply adapting to the light extremes.
Rules are used to informally capture the model, but no existing formal rule-based language is employed. This fact makes the CMS a perfect candidate for rewriting it into an RBM format. Since the reaction rates are not available the model is worked out at a qualitative level of view.
The original model contains 22 rules. By applying several syntactic operations we are able to reduce the model size to just 17 rules with smaller contexts.
We have also considered a reduced variant of the model that concentrates on light absorption by electron transfers inside PSII. That allowed the authors [10] to introduce a fully specified kinetic model. By employing the reductions we were able to compact the model rules but not to decrease their number. See [2] for details of the model and its reduction.
Integrated Model of Light-reactions
We consider a reaction-based model by Laz´ar [14] that encompasses not only pho- tosystem II but also the other parts of thylakoid membrane participating in the Z-scheme of light. The model contains the following complexes and their parts: photosystem II (with parts P680, Qa, Qb); oxygen evolving complex (with states Si where i = 0, 1, 2, 3); PQ,PQH - plastoquinone; cytochrome b6f (with parts bL, bHc, f); Pc - plastocyanin; photosystem I (with parts P700, Fb); Fd - ferredoxin; ferredoxin-NADP reductase.
The following molecule types are considered:
begin molecule types PSII(P680~n~p,Qa~n~m,Qb~n~m~2m) PQ()


PQH()
S(x~0~1~2~3) CytB6F(bL~n~m,bHc~n~m~2m,f~n~m) Fd(x~n~m)
Pc(x~n~p) PSI(P700~n~p,Fb~n~m) FNR(x~i~a~am~a2m)
end molecule types
The model has many rules that are perfect candidates for reduction using context enumeration elimination, such as the following three charge separation rules:
PSII(P680~n,Qa~n,Qb~n) -> PSII(P680~p,Qa~m,Qb~n) PSII(P680~n,Qa~n,Qb~m) -> PSII(P680~p,Qa~m,Qb~m) PSII(P680~n,Qa~n,Qb~2m) -> PSII(P680~p,Qa~m,Qb~2m)
These rules can be reduced to the following single charge separation rule:
PSII(P680~n,Qa~n,Qb) -> PSII(P680~p,Qa~m,Qb)
After applying all context enumeration eliminations we are able to reduce the model size from 69 rules down to just 22 rules. Since the model is not using any binding sites, we can automatically apply generic unbound context eliminations to further reduce the model. The rule stated above is reduced to the following form:
PSII(P680~n,Qa~n) -> PSII(P680~p,Qa~m)
We managed to reduce the model significantly. The original ideas of the author are much more obvious in this reduced model. The reduced model is much easier to modify and extend than its original version. We have also elaborated on several variants of PSII part of the model and demonstrated the compositionality of rule- based approach. The details are presented in [2].

Conclusions
We have demonstrated the unsuitability of traditional reaction-based modelling approaches for modelling complex biochemical processes, such as photosynthesis. We explored existing models of photosynthesis and described the simplifications that were made in those models in order to battle the problem of combinatorial explosion. We showed how these simplifications are undesirable. Rule-based modelling allows us to compactly model the processes of photosynthesis in their full mechanistic complexity without the need for such simplifying assumptions.
We set on to naively reformulate selected representative models of photosynthesis as rule-based models. These reformulated models were unnecessarily large, not exploiting the advantages of the rule-based format. Therefore, we formally defined several intuitive syntactic operations that can be used to reduce the size of these models. We provided a case study where we implemented these operations so they can be performed automatically and we managed to achieve large reductions in the size of the models. The order in which we applied the reductions turned out to be satisfactory.
We believe that in the future, the communities of biologists who are mod- elling photosynthesis consider the use of rule-based modelling. Rule-based mod- elling brings in many advantages and eliminates the reason of some artificial model simplifications.

References
Brennan, L. and P. Owende, Biofuels from microalgaea review of technologies for production, processing, and extractions of biofuels and co-products, Renewable and Sustainable Energy Reviews 14 (2010),
pp. 557 – 577.
Brim, L., J. Niˇznan and D. Sˇafr´anek, Compact representation of photosynthesis dynamics by rule-based models (full version), CoRR arXiv:1410.3632 (2014).
Camporesi, F., J. Feret, H. Koeppl and T. Petrov, Combining model reductions, Electronic Notes in Theoretical Computer Science 265 (2010), pp. 73–96.
Chylek, L. A., L. A. Harris, C.-S. Tung, J. R. Faeder, C. F. Lopez and W. S. Hlavacek, Rule-based modeling: a computational approach for studying biomolecular site dynamics in cell signaling systems, Wiley Interdisciplinary Reviews: Systems Biology and Medicine 6 (2014), pp. 13–36.
Chylek, L. A., E. C. Stites, R. G. Posner and W. S. Hlavacek, Innovations of the rule-based modeling approach, in: A. Prokop and B. Csuks, editors, Systems Biology, Springer Netherlands, 2013 pp. 273– 300.
Danos, V., Agile modelling of cellular signalling (invited paper), Electron. Notes Theor. Comput. Sci.
229 (2009), pp. 3–10.
Danos, V., J. Feret, W. Fontana and J. Krivine, Abstract interpretation of cellular signalling networks, in: F. Logozzo, D. Peled and L. Zuck, editors, Verification, Model Checking, and Abstract Interpretation, Lecture Notes in Computer Science 4905, Springer Berlin Heidelberg, 2008 pp. 83–97.
Danos, V. and C. Laneve, Formal molecular biology, Theoretical Computer Science 325 (2004), pp. 69– 110.
Hlavacek, W. S., J. R. Faeder, M. L. Blinov, R. G. Posner, M. Hucka and W. Fontana, Rules for modeling signal-transduction systems, Science Signaling 2006 (2006), p. re6.
Holzwarth, A., M. Mu¨ller, M. Reus, M. Nowaczyk, J. Sander and M. R¨ogner, Kinetics and mechanism of electron transfer in intact photosystem ii and in the isolated reaction center: pheophytin is the primary electron acceptor, Proceedings of the National Academy of Sciences 103 (2006), pp. 6895–6900.
Jansson, C. and T. Northen, Calcifying cyanobacteriathe potential of biomineralization for carbon capture and storage, Current Opinion in Biotechnology 21 (2010), pp. 365 – 371, energy biotechnology Environmental biotechnology.
Koeppl, H., M. Hafner and V. Danos, Rule-based modeling for protein-protein interaction networks
- the cyanobacterial circadian clock as a case study, in: International Workshop on Computational Systems Biology 2009, 2009.
Laisk, A., L. Nedbal and Govindjee, “Photosynthesis in silico,” Springer, 2009.
Lazar, D., Modelling of light-induced chlorophyll a fluorescence rise (o-j-i-p transient) and changes in 820 nm-transmittance signal of photosynthesis, Photosynthetica 47 (2009), pp. 483–498.
Laz´ar, D. and J. Jablonsky´, On the approaches applied in formulation of a kinetic model of photosystem II: Different approaches lead to different simulations of the chlorophyll a fluorescence transients, Journal of theoretical biology 257 (2009), pp. 260–269.
Lopez, C. F., J. L. Muhlich, J. A. Bachman and P. K. Sorger, Programming biological models in python using pysb, Molecular systems biology 9 (2013).
Nedbal, L., J. Cˇerveny´, U. Rascher and H. Schmidt, E-photosynthesis: a comprehensive modeling approach to understand chlorophyll fluorescence transients and other complex dynamic features of photosynthesis in fluctuating light, Photosynthesis research 93 (2007), pp. 223–234.
Rascher, U. and L. Nedbal, Dynamics of photosynthesis in fluctuating light, Current opinion in plant biology 9 (2006), pp. 671–678.
Smith, A., W. Xu, Y. Sun, J. Faeder and G. E. Marai, Rulebender: integrated modeling, simulation and visualization for rule-based intracellular biochemistry, BMC Bioinformatics 13 (2012), p. S3.
Sˇafr´anek, D., J. Cˇerveny´, M. Klement, J. Posp´ıˇsilov´a, L. Brim, D. Laza´r and L. Nedbal, E-
photosynthesis: Web-based platform for modeling of complex photosynthetic processes, BioSystems 103
(2011), pp. 115–124.
Xin, C.-P., J. Yang and X.-G. Zhu, A model of chlorophyll a fluorescence induction kinetics with explicit description of structural constraints of individual photosystem ii units, Photosynthesis Research 117 (2013), pp. 339–354.
