Electronic Notes in Theoretical Computer Science 194 (2008) 51–67	
www.elsevier.com/locate/entcs

Spatial Networks of Hybrid I/O Automata for Modeling Excitable Tissue
Ezio Bartocci,a,b,1 Flavio Corradini,a,2 Maria Rita Di Berardini,a,3 Emilia Entcheva,c,4
Radu Grosub,5 and Scott A. Smolkab,6
a Department of Mathematics and Computer Science University of Camerino
Camerino (MC), 62032, Italy
b Department of Computer Science Stony Brook University
Stony Brook, NY, 11794, USA
c Department of Biomedical Engineering Stony Brook University
Stony Brook, NY, 11794, USA


Abstract
We propose a new biological framework, spatial networks of hybrid input/output automata (SNHIOA), for the efficient modeling and simulation of excitable-cell tissue. Within this framework, we view an excitable tissue as a network of interacting cells disposed according to a 2D spatial lattice, with the electrical behavior of a single cell modeled as a hybrid input/ouput automaton. To capture the phenomenon that the strength of communication between automata depends on their relative positions within the lattice, we introduce a new, weighted parallel composition operator to specify the influence of one automata over another.
The purpose of the SNHIOA model is to efficiently capture the spatiotemporal behavior of wave propagation in 2D excitable media. To validate this claim, we show how SNHIOA can be used to model and capture different spatiotemporal behavior of wave propagation in 2D isotropic cardiac tissue, including normal planar wave propagation, spiral creation, the breakup of spirals into more complex (potentially lethal) spatiotemporal patterns, and the recovery of the tissue to the rest via defibrillation.
Keywords: Computational Systems Biology, Spatial Networks of Hybrid I/O Automata, excitable cell, excitable tissue



1 Email: ezio.bartocci@unicam.it
2 Email: flavio.corradini@unicam.it
3 Email: mariarita.diberardini@unicam.it
4 Email: emilia.entcheva@sunysb.edu
5 Email: grosu@cs.sunysb.edu
6 Email: sas@cs.sunysb.edu

1571-0661 © 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2007.12.005

Introduction

Systems biology is a multidisciplinary field whose goal is to provide a systems-level understanding of biological phenomena by uncovering their structure, dynamics and control methods [19]. A main focus of systems biology is to devise math- ematical or formal models that capture significant aspects of in vitro or in vivo experimental data, while remaining amenable to both quantitative and qualitative analysis. Currently, the most popular modeling approach is to use complex systems of nonlinear differential equations, describing in great detail the underlying biologi- cal phenomena. Equation-based models, however, are not particularly amenable to formal analysis, and impose high computational demands on simulation, especially in large-scale 2D and 3D networks. Simulation at the organ or even the cell level is thus rendered impractical.
Considering this state of affairs, systems biology could greatly benefit from the development of techniques that given a system of nonlinear differential equation, (semi-automatically) constructs a more abstract model that preserves the properties of interest. One promising approach is based on the use of Hybrid Automata [16,22] as a modeling formalism for complex biological processes. Hybrid Automata (HA) are an extension of finite automata that allows one to associate a continuous be- havior with each state. They have been used as mathematical models for a variety of embedded systems, including automated highway systems [10], air traffic man- agement [20] and real-time circuits [1].
More recently, HA have been used to model the behavior of biological sys- tems [2,3,13,23]. In particular, Ye et al. [23] demonstrated the feasibility of using cycle linear hybrid automata (CLHA) to model the behavior of several representa- tive excitable cells, basing their derivation on the biological interpretation of these cells’ action potential. Note that the focus of this work is on using HA to model the behavior of a single cell.
To model excitable tissue, one should take into account the behavior of a network of spatially distributed components (cells), which have the ability to propagate electrical signals without damping. An impulse over a certain threshold initiates a wave of activity moving across the excitable tissue. As each cell undergoes an excursion from its resting potential, it causes its neighbors to move over threshold at a rate determined by the diffusion coefficient (a property of the tissue), the distance from the stimulated cells, and the rate of rise of the excited cell.
In this paper, we introduce spatial networks of hybrid I/O automata (SNHIOA), which extend CLHA with the concepts of space and synchronization based on shared variables. Within the SNHIOA framework, we view an excitable tissue as a network of interacting cells disposed according to a 2D spatial lattice, with the electrical behavior of a single cell modeled as a (cycle-linear) hybrid input/ouput automaton. To capture the phenomenon that the strength of communication between automata depends on their relative positions within the lattice, we introduce a new, weighted parallel composition operator to specify the influence of one automata over another.
The purpose of the SNHIOA model is to efficiently capture the spatiotemporal

behavior of wave propagation in 2D excitable media. To validate this claim, we show how SNHIOA can be used to model and capture different spatiotemporal be- havior of wave propagation in 2D isotropic cardiac tissue, including normal planar wave propagation, spiral creation, the breakup of spirals into more complex (poten- tially lethal) spatiotemporal patterns, and the recovery of the tissue to the rest via defibrillation.
The rest of this paper is organize as follows. Section 2 provides the biological background on excitable cells. Section 3 discusses related work. Section 4 and 5 describe the HA model and its extension with I/O variables as advocated in [22]. Section 6 introduces the concept of a space lattice, while Section 7 extends HIOA with the concept of space. Section 8 provides a model of an isotropic cardiac tissue of neonatal rat using SNHIOA. Section 9 shows the results of the cardiac tissue simulation. Section 10 offers our concluding remarks and directions for future work.

Biological Background
An excitable cell has the ability to propagate an electrical signal—known at the cellular level as the Action Potential (AP)—to surrounding cells. An AP corre- sponds to a change of potential across the cell membrane, and is caused by the flow of ions between the inside and outside of the cell. The major ion species involved in this process are sodium, potassium and calcium; they flow through multiple voltage-gated ion channels as pore-forming proteins in the cell membrane. Excita- tion disturbances can occur in the behavior of these ion channels at the cell level, or in the propagation of the electrical waves at the cell-network level.
Generally, an AP is an externally triggered event: a cell fires an action potential as an all-or-nothing response to a supra-threshold stimulus, and each AP follows the same sequence of phases and maintains the same magnitude regardless of the applied stimulus. During an AP, generally no re-excitation can occur. The early portion of an AP is known as “absolute refractory period” due to its non-responsiveness to further stimulation. The “relative refractory period” is the interval immediately following during which an altered secondary excitation event is possible if the stimu- lation strength or duration is raised. Figure 1 shows the shape of a neuron’s Action Potential. Examples of excitable cells are neurons, cardiac myocytes and skeletal muscle cells.
Despite differences in AP duration, morphology and underlying ion currents, the following major AP phases can be identified across different species of excitable cells: resting, rapid upstroke, early repolarization phase, plateau and late repolarization, and ﬁnal repolarization (identical to the resting phase due to the cyclic nature of an AP). The resting state features a constant transmembrane potential (difference between the inside and outside potential of the cell) that is about -80 mV for most species of cardiac cells; i.e. the membrane is polarized at rest. During the AP upstroke, the transmembrane potential rapidly changes, from negative to positive;
i.e. the membrane depolarizes. This is followed by an early repolarization phase. A slower, plateau phase is present in most mammalian action potentials, during



Fig. 1. Action Potential of a neuron

which calcium influx facilitates muscle contraction. After this phase, a faster final repolarization brings the potential back to the resting state. Due to the universal nature of these AP phases among species and regions, as shown in [24], it is possible to use them as a guide in the construction of HA models.
Excitable-cell networks are important in the normal functioning and in the pathophysiology of many biological processes. In cardiac cells, on each heart beat, an electrical control signal is generated by the sinoatrial node, the heart’s internal pacemaking region. Electrical waves then travel along a prescribed path, excit- ing cells in atria and ventricles and assuring synchronous contractions. Of spe- cial interest are cardiac arrhythmias: disruptions of the normal excitation pro- cess due to faulty processes at the cellular level, single ion-channel level, or at the level of cell-to-cell communication. The clinical manifestation is a rhythm with altered frequency—tachycardia or bradycardia—or the appearance of multiple frequencies—polymorphic Ventricular Tachycardia (VT)—with subsequent deterio- ration to a chaotic signal—Ventricular Fibrillation (VF). VF [18] is a typically fatal condition in which there is uncoordinated contraction of the cardiac muscle of the ventricles in the heart. As a result, the heart fails to adequately pump blood, and hypoxia may occur.

Related Work
An excitable tissue is generally modeled in terms of reaction-diffusion systems. Thus, a typical continuous representation would involve partial differential equa- tions (PDEs) for the diffusing species (typically the transmembrane potential), and a system of nonlinear ordinary differential equations describing all other state vari- able that are normally considered non-diffusing.  These may include ion-channel

gating variables and ion concentrations. The first mathematical model of ionic pro- cesses that underly cell excitation was empirically developed in 1952 by Hodgkin and Huxley (HH) for a squid giant axon [17]. This provided the basis for subse- quent models of increasing complexity, using multiple continuous state variables (voltage, ion-channel gates, ion concentrations) to describe APs in different cell types [6,11,21]. Current models of cardiac cells include more than 20 such state vari- ables and a large number of fitted parameters. Detailed models of cardiac excitation are perceived as over-determined systems and, as such, make both qualitative—i.e. checking general properties—and quantitative analysis—i.e. by simulation—at the organ or even tissue level impractical.
At the opposite end of the spectrum, completely discrete models based on cel- lular automata (CA) have emerged [8,12]. The first generation of CA models used nearest-neighbor diffusion modeling (Neumann and Moore neighborhoods) and a small number of few discrete states, resulting in unrealistic AP shape and wave propagation. Second-generation CA models [12] focused on correct representation of wavefront curvature effects by employing more complex neighborhood functions, such as Gaussian, circular templates or randomized lattices. Furthermore, the tran- sitions rules for the relaxation states were updated to reflect a higher threshold for excitation and to effectively represent the relative and absolute refractory period. The latest generation is exemplified by Barkley’s model [5], in which a standard finite-difference method is used to calculate the diffusive term, but CA-like rules govern the kinetics of the two model variables, with adjustable thresholds.
Recently, modified CA models have been used to study cardiac excitability and for comparison with experimental data [8,9]. A body of literature provides clear links between the classical continuous PDE representation and the more ad hoc CA-based approach as an alternative description of reaction-diffusion systems. The purely discrete nature of CA presents some difficulties in capturing subtle non- stepwise features of excitation.

Hybrid Automata
In this section we briefly report some basic definitions—mostly taken from [22]— that are useful to describe the discrete and continuous behavior of a system. For the aims of this paper, we introduce the key notions of variables, static and dynamic types for variables, and trajectories. More details can be found in [22].
We fix a time axis T which is the group (R, +), the real numbers with addition; T≥0 is defined to be the set {t ∈ T | t ≥ 0}. If K ⊆ T and t ∈ T, we define K + t = {t' + t | t' ∈ J}. Similarly, for a function f with domain K, we define f + t
to be the function with domain K + t and such that (f + t)(t') = f (t' − t), for each
t' ∈ K + t.
Definition 4.1 (Variables and types for variables) Assume a universal set of vari- ables V . A variable may represent either a location within a state (internal variable) or a location where information flows from one component of the system to another (external variable). For each v ∈ V , we distinguish a (static) type, which represents

the set of values it may take on, and a dynamic type, which represents the set of trajectories v may follow. In more detail: 1) the (static) type of v, denoted by type(v), is a nonempty set of values; 2) the dynamic type of v is the set of functions from left-closed intervals of T to type(v) satisfying the following properties:
(Closure under time shift) For each f ∈ dtype(v) and t ∈ T, f + t ∈ dtype(v).
(Closure under subinterval) For each f dtype(v) and J dom(f ), f J , the restriction of f to the subinterval J , is in dtype(v).
(Closure under pasting) Let f0, f1, f2,... a sequence of functions in dtype(v) such that, for each i 0, fi not the final function of sequence implies dom(fi) right- closed and max(dom(fi)) = min(dom(fi+1)). Then, the function f defined by f (t) = fi(t), where i is the smallest index such that t ∈ dom(fi), is in dtype(v).
Definition 4.2 (Trajectories) Let V a set of variables. A valuation v for V is a function that associate to each v  V a value in type(v). We write val(V ) to denote the set of all valuations for V . Let J a left-closed interval of T with left end-point equal to 0. A J-trajectory for V is a function τ : J   val(V ) such that, for each v  V , τ  v  dtype(v) (i.e. the projection of τ on the variable v is in the set of the trajectories that v may follow). A trajectory for V is a J -trajectory, for any J . The set of all possible trajectories for V is denoted by trajs(V ).
If τ is a trajectory, then τ.ltime, the time limit of τ , is the supremum of dom(τ ). Moreover we define the first evaluation of τ , τ.fval, to be τ (0) and, if τ is closed (meaning that its domain is a finite closed-interval), we define the last evaluation of τ to be τ (τ.ltime).
Definition 4.3 A Hybrid automaton (HA for short, see [22]) is a tuple A = (W, X, Q, Θ, E, H, D, T ) where:
W is a set of external variables and X is a set of internal variables; we assume that W and X are disjoint from each other and write V = W ∪ X.
Q ⊆ val(X) is a set of states and Θ ⊆ Q is a nonempty set of initial states.
E and H are disjoint sets of external and internal actions, respectively. We write A = E ∪ H
D ⊆ Q×A×Q is a set of discrete transitions. We use x −→a A x' as a shorthand for (x, a, x') ∈ D. We say that the action a is enabled in x if there exists an x' such that x −→a A x'.
T is a set of trajectories for V such that τ (t)[X ∈ Q for every τ ∈ T and t ∈ dom(τ ). Given a trajectory τ ∈T we denote τ.fval[X by τ.fstate and, if τ is closed, we denote τ.lval[X by τ.lstate.
We require that the set of trajectories T satisfies the following axioms:
T1 (Preﬁx Closure) For every τ ∈T and every τ ' ≤ τ , τ ' ∈T .
T2 (Suffix Closure) For every τ ∈T and every t ∈ dom(τ ), τ Ḏ t ∈T .
T3 (Concatenation Closure) Let τ0, τ1, τ2,... be a sequence of trajectories in T such

that for every index i, τi.lstate = τi+1.fstate. Then τ0 -
τ1 -
τ2 -
... ∈T .

For our aims it suffices to only consider HA and pre-HIOA (see Definition 5.1) with real-valued variables (i.e. for each v ∈ V , type(v) = R).

Notation: Let τ be a trajectory over some set of variables V and v  V . As in [22], we sometimes use v as shorthand for the function τ  v : dom(τ ). Similarly, we can view any expression e containing variables from V as a function with domain dom(τ ). These conventions allow us to say that τ satisfies the algebraic equation


t	dom(τ ), v(t) = v(0) + equation v˙ = e.
t e(t')dt', we can say that τ satisfies the algebraic

Definition 4.4 (Weighted Trajectories ) Let e be an expression containing vari- ables from a universal set of variables V .  Here, we assume V partitioned into

n + 1 ≥ 2 disjoint subsets V1, V2,..., Vn,V − Z, where Z =

i=1
Vi. For any index

i [1, n], we denote with ei = e Vi the subexpression of e (if any) containing only variables from Vi. Moreover, we write e Z¯ to denote the subexpression of e (if any) containing only variables from V   Z and (possibly) constant subterms. Finally,
let w =  w1, w2,..., wn   R be a set of real-valued weights, where each wi is the
weight associated with the variables in Vi. We define (w e) Z to be the expression we obtain from e by replacing each subexpression ei = e Vi with wi ei. More formally:
if e = e[Z¯ (i.e. if e does not contain variables from Z),

(w · e)[Z = e
if e = ei0 op0 ei1 op1 ... opm−1 eim , where i0, i1,..., im are indexes from [1, n], (w · e)[Z = (wi0 · ei0 ) op0 (wi1 · ei1 ) op1 ... opm−1 (wim · eim )
if e = ei0 op0 ei1 op1 ... opm−1 eim opm e Z¯, where again i0, i1,..., im are in- dexes from [1, n],
(w · e)[Z = (wi0 · ei0 ) op0 (wi1 · ei1 ) op1 ... opm−1 (wim · eim ) opm e[Z¯ Finally, if τ is a trajectory over V satisfying the equation v = e (v˙ = e), we define the
weighted trajectory (w · τ )[Z to be the trajectory over V that satisfies the algebraic equation v = (w · e)[Z (v˙ = (w · e)[Z, respectively).

Hybrid Input/Output Automata
Definition 5.1 A pre-hybrid I/O automaton (pre-HIOA for short, see [22]) is a tuple A = (H, U, Y,I, O) where:
- H = (W, X, Q, Θ, E, H, D, T ) is an hybrid automaton.

U and Y partition W into input and output variables, respectively. Variables in Z = X ∩ Y are called locally controlled. Again, we write V = W ∪ X.
I and O partition E into input and output actions, respectively. Actions in
L = H ∩ I are called locally controlled. Again, we write A = E ∪ H.
A hybrid I/O automaton (HIOA for short) is a pre-HIOA satisfying the following additional axioms:
E1 (Input action enabling) For every x ∈ Q and every a ∈ I there exists x' such
that x −→a x'.
E2 (Input trajectory enabling) For every x ∈ Q and every v ∈ trajs(U ), there exists τ ∈ trajs(V ) such that τ.fstate = x, τ ↓ U ≤ v and either (1) τ ↓ U = v or (2) τ is closed and some l ∈ L is enabled in τ.fstate

In [22], it has been proved that the parallel composition of two HIOA (or pre- HIOA) is guaranteed to be a pre-HIOA, but property E2 is not necessarily preserved by the parallel composition operator. Again in [22], it has been shown that to en- sure the preservation of such a property some “strong compatibility” assumption is needed. For the aims of this paper, it suffices to consider pre-HIOA and composition of pre-HIOA.

Weighted Composition of Hybrid Input/Output Automata
In this subsection, we introduce a new operation of parallel composition for pre- HIOA. Since a typical hybrid system consists of a collection of HIOA located in 2D space, we first extend the binary parallel composition operator defined in [22] in order to describe the behavior of a set i i [1, n] of HIOA running in parallel. Moreover, since communication between components of such systems also depends on their positions (meaning that flow of information between a given component and its “neighbors” may be somehow influenced by their relative distance), the parallel composition operator w  i (Definition 5.2) uses a real-valued, weight function w to specify the influence of communication between pairs of automata. We say that two pre-HIOA A1 and A2 are compatible if (1) H1 ∩ A2 = H2 ∩ A1 = ∅, X1 ∩ V2 = X2 ∩ V1 = ∅ (i.e. if H1 and H2 are compatible) and (2) Y1 ∩ Y2 = O1 ∩ O2 = ∅.
Definition 5.2 (Weighted Composition of pre-HIOA) Let {Ai | i ∈ [1, n]} be a finite set of pairwise compatible pre-HIOA and let w : [1, n] × [1, n] → R be a weight function such that (i) w(i, i) = 0 for each i ∈ [1, n] and (ii) w(i, j) = w(j, i) for each i, j ∈ [1, n]. In the following, let wi denote the set of weights wi = {w(i, j) | j ∈
[1, n]}.	¨
The weighted parallel composition ¨w Ai is the tuple A = (H, U, Y,I, O) where:

Y =
n

i=1
n
Yi, U = ( 
i=1
Ui) − Y , O =
n

i=1
n
Oi, I = ( 
i=1
Ii) − O

If, for i ∈ [1, n], the HA Hi = (Wi, Xi, Qi, Θi, Ei, Hi, Di, Ti), then H is the tuple (W, X, Q, Θ, E, H, D, T ) defined as follows:


- W =
n
Wi
i=1
and X
n
=
i=1
Xi;

Q = {x ∈ val(X) | for each i ∈ [1, n], x[Xi ∈ Qi};
Θ = {x ∈ Q | for each i ∈ [1, n], x[Xi ∈ Θi};

E =
n
Ei
i=1
and H
n
=
i=1
Hi;

for each x, x' ∈ Q and each a ∈ A = E ∪ H, x −→a A x' iff, for each i ∈ [1, n],
either (1) a ∈ Ai and x[Xi −→a A x'[Xi or (2) a ∈/ Ai and x[Xi = x'[Xi;
T ⊆ val(V ) is given by τ ∈ T iff, for each i ∈ [1, n], there exists τi ∈ Ti such that τ ↓ Vi = (wi · τi)[Ii ∩ O ∈ Ti.
The composed hybrid automaton H and its discrete transitions −→a A are built
starting from the hybrid automata Hi and their discrete transitions −→a A  exactly
as in [22]. On the contrary, w.r.t. to [22], we provide a different rule for building
trajectories of the pre-HIOA w i. Intuitively speaking, a trajectory τ	is obtained by combining weighted trajectories of its components in a such way that
the value of each variable v ∈ Ii ∩ O (i.e. an input variable of a given Ai that is an output variable of some other component Aj) also depends on the weight w(i, j) and, hence, on the distance between Ai and Aj.
Spatial Lattices in 2D
Each point in a polar coordinate system can be described with the two polar co- ordinates, the radial coordinate r and the angular coordinate θ. The r coordinate represents the radial distance from the pole, and the θ coordinate represents the counterclockwise angle from the 0 degree ray (sometimes called the polar axis), known as the positive x-axis on the Cartesian coordinate plane.
Definition 6.1 We define a generic 2D spatial lattice as a function γ(r, n) = S such that:
γ : R>0 × N → P(R≥0 × [0, 2π)).
r ∈ R>0 is the minimum distance between a couple of points.
n ∈ N is the dimension of the lattice.
S	R [0, 2π) is a set of coordinates identified by the lattice in a polar coordinate system.
 
Definition 6.2 We define a square 2D spatial lattice as a function γ such that:
⎧ {(0, 0)}∪ 

⎪⎨
γ (r, n) = 
⎪	π
⎪ γ (r, n − 1) ∪ {(nr, k 2 ) 0 ≤ k ≤ 3}∪

s, kπ	θi	s	r√i2 +
⎪⎩ n {(	±	)  =
n2 ≤
nr, tg(θi
) = i , 0 ≤ k
≤ 3} if
n > 1




 
Fig. 2. Square 2D Spatial lattice generated by γ (r, 3)
 
Proposition 6.3 The cardinality of γ (r, n) is:


 
| γ (r, n)| = 9 +
Σ
k=2
8k = 9+ 4(n2
+ n − 2) = 4n2
+ 4n + 1 = (2n + 1)2

Δ

Definition 6.4 We define a triangular 2D spatial lattice as a function γ such that:
⎧⎪ {(0, 0)}∪

Δ	⎨ Δ	3

γ (r, n) = 
γ (r, n − 1)∪

⎪ {(s, θ) s = r√n2 − ln + l2,θ = l  π
+ k  π , if n > 1

⎪⎩ 0 ≤ l < n, 0 ≤ k ≤ 5}
Δ
3n	3n

Proposition 6.5 The cardinality of γ (r, n) is:

Δ
| γ (r, n)| =
Σ
k=1
6k + 1 = 6 Σ
k=1
k = 3n2
+ 3n +1 

Spatial Network of Hybrid Input/Output Automata
A spatial network of HIOA is a set of HIOA running in parallel (by taking their weighted composition) and placed in a 2D lattice.




Δ
Fig. 3. Triangular 2D Spatial lattice generated by γ (r, 3)

Definition 7.1 A spatial network of hybrid input/output automata is a tuple (S, γ, −→p , w) where:
is a set	= (	)	[1	] a set of	2 mutual pairwise compatible pre-HIOA. This a networks behaves as ¨w Ai.
A set of positions −→p = {pi | i ∈ [1, n]} in a polar coordinate system; each pi = (si, θi) ∈ γ that represents the position in a 2D spatial of the automaton Ai. Moreover, we assume that there exists nmax ∈ N≥0 such that m = |γ(r, nmax)|.
w is weight function w : [1, n] × [1, n] → R such that (i) w(i, i) = 0 for each i ∈ [1, n], (ii) w(i, j) = w(j, i) for each i, j ∈ [1, n]. We can model the fact that Ai and Aj are too far to influence each other by setting w(i, j) = w(j, i) = 0.

Modeling Cardiac Tissue with SNHIOA
In this section we provide a model, using SNHIOA, of a cardiac tissue behavior assuming for ease an isotropic arrangements of the cells: this means that the diffu- sion of electrical signal is uniform in all directions. In this model each single hybrid automaton represents the behavior of the AP of a single cell. A Triangular lattice has been chosen to mimic the isotropic arrangements. Input/output variables per- mit the exchange of values between automata. A distance-based weight function mediates this interaction.
Definition 8.1 Let r be the minimal distance between a pair of cells, n the lattice dimension and D the diffusion constant. We can define an isotropic cardiac tissue,

Δ
using SNHIOA, as a set of cells (myocytes) arranged in a triangular lattice γ . Cells
interact through I/O variables mediated by an exponential distance-based function wdmax , which assigns a non-zero weight to each pair of cells within distance dmax of each other:

Tissue = (Cells, γ (r, n), −→p , wdmax )
where:
- Cells = {Cell = (AP ,U ,Y ,I ,O ) i ∈ [1, |	(r, n)|]}
i	i	i	i  i	i	γ
⎧⎨  −d(pi,pj )2
⎩ 0	 if i = j ∨ d(pi, pj) > dmax	
√

Ii = {stimulatedi, stimulatedi}
Oi = ∅
in	out	Δ
Ui = {stimulusi }∪ {(voltagek  )|k ∈ [1, | γ (r, n)|],k /= i}
Yi = {voltageout}
i = (Wi, Xi, Qi, Θi, Ei, Hi, Di, i) is the HA modeling the AP of a single cell such that:
Wi = Ui ∪ Yi,
Xi = {vx, vy, vz, βx, βy, βz, dx, cx, v, μ},
Qi is a subset of valuations of Vi = Wi ∪ Xi,
Ei = Ii ∪ Oi
Hi = {upstroke, plateau, resting}
Θi consists of one valuation which assigns 0 to vx, vy, vz, the resting potential constant (-80 mV for cardiac cell) to v , α1 to βx, α1 to βy, α1 to βz, 1 to cx and

0 to dx.
x	y	z

Di
stimulated
−−−−−−−→APi


stimulated
−−−−−−−→APi
upstroke
−−−−−→APi
plateau
−−−−→APi

x',x resting	'	'
−−−−→APi x } such that x, x ∈ Xi and:

x −s−ti−m−u−la−te−d→i
APi
x' performs the following updates 7 :






stimulated
−−−−−−−→APi x
v' = v, μ = v'/VR, dx = 1, βx = 0	(1) performs the following updates:
dx = 0, βx = α1f (μ) if v < g(VT )	(2)



7 Here we use the standard convention that v denotes the value of the variable in the start state of a discrete transition, and v’ denotes the value in the end state.

upstroke
x −−−−−→APi x
performs the following updates:

cx = 0, dx = 0, βx = α2, βy = α2, βz = α2 if v ≥ g(VT )	(3)


plateau
x
x	y	z

−−−−→APi x
performs the following updates:

cx = 0, dx = 0, βx = α3, βy = α3, βz = α3 if v ≥ h(VO)	(4)


resting
x
x	y	z

−−−−→APi x
performs the following updates:

cx = 1, dx = 0, βx = α1f (μ), βy = α1, βz = α1 if v ≤ VR	(5)
where f (μ) = 1+ 2μ, g(VT ) = VT · (1+ 1.45√6 μ), h(VO) = VO − 40√μ)
Set Ti consists of all trajectories that satisfy:



v˙x

= βxvx

+ c D (
x r2
Δ
|γ (r,n)|

k=1,k/=i

voltageout − vx
Δ
|γ (r,n)|

j=1


wdmax

(i, j)) + dx

stimulusin

(6)


v˙y = βyvy	(7)

v˙z = βzvz	(8)

v = vx − vy + vz	(9)

Instantiating the cardiac tissue model
In this subsection, we instantiate the cardiac-tissue model of Definition 8.1 to the neonatal rat (NNR) AP. We refer the reader to [24] for the details of the NNR CLHA model. Figure 4 shows the AP waveform for a single NNR cell. All parameters used are reported in Table 1 and are obtained using curve-fitting techniques. The HIOA model chosen performs five actions: stimulatedi, stimulatedi, upstroke, plateau, resting, which have the following biological explanations. Initially, the cell is in the resting state. When (externally) stimulated with an action stimulatedi the cell becomes stimulated and updates its voltage adding the current stimulus according to the Equations 1, 6.
Upon termination of the stimulation, via action stimulatedi, with a sub- threshold voltage (v < g(VT )), the cell performs the variables updates according to Equation 2 and returns back to resting state without firing AP. If the stimulus is supra-threshold, i.e., (v g(VT )) holds, the excited cell will generate an action po- tential by progressing to the upstroke state and performing an upstroke action and variables updates according to the Equation 3. This transition could be happen also when the cell is in resting and the sum of the contribute of voltage of its neighbors is supra-threshold. During the upstroke the cell enter in the “absolute refractory period”, so dx and cx are setting to 0, avoiding any further stimulation. When the


Table 1
Parameters definition for NNR model

voltage reaches an overshoot voltage (v  h(VO)) the cell starts the repolarization and performs a plateau action and variables updates according to the Equation 4. Then the recovery course of the cell follows the transitions to resting state with an action resting and performs variables updates according to the Equation 5 when v ≤ VR.


stimulus in.

Celli



voltageout



voltage out k≠i




Fig. 4. Hybrid I/O Automata representing the AP of a neonatal rat cardiac cell


Simulation Results
We have developed CellExcite [7], a simulation environment for excitable-cell net- works 8 . CellExcite allows the user to sketch a tissue of excitable cells, plan the stimuli to be applied during simulation, and customize the arrangement of the cells selecting the appropriate lattice. CellExcite adopts SNHIOA as the computational model in order to efficiently capture both discrete and continuous excitable-cell be- havior. Figure 5 shows the simulation results of a cardiac tissue of 400x400 cells of a neonatal rat, stimulated three times during the simulation in different regions. The results of this simulation demonstrate the feasibility of SNHIOA to capture and mimic different spatiotemporal behavior of a wave propagation in 2D isotropic cardiac tissue such as the normal propagation of a wave along the tissue (1-150 ms); the creation of dangerous spirals (200-250 ms); the break-up of such spirals into more complex spatiotemporal patterns, meaning the transition to ventricular fibrillation, a lethal type of arrhythmia (250-400 ms); the recovery of the tissue to the rest with the destruction of all waves through an electrical shock, i.e. defibrilla- tion (400-500 ms). Figure 6 shows the difference in wave propagation using a square lattice (see the squarish wave) and using a triangular lattice (see the rounder wave). The triangular lattice was found very suitable to represent the isotropic behavior of

8 The simulator is available at http://www.cs.sunysb.edu/~eha/download.htm

a excitable tissue, but other lattices could also be designed to customize the specific cells disposition.


Continuous behavior

Fig. 5. Snapshots during simulation of cardiac tissue stimulation using a Spatial Network of Hybrid I/O Automata

Wave propagation using a 2D square lattice	Wave propagation using 2D triangular lattice


Fig. 6. Example of wave propagation using square or triangular lattices


Conclusions
In this paper we propose a new biological modeling framework based on Hybrid I/O Automata, but extended with the concept of space. This approach was found very suitable to better model the spatiotemporal behavior of electrical waves in a 2D cardiac tissue. Our approach naturally evolved as an attempt to combine the benefits of purely continuous PDE methods and computationally efficient CA methods. Previous works [24,25] derived a cycle-linear hybrid automata (CLHA)

for several representative excitable cells that approximates with reasonable accuracy their electrical properties. This derivation was made firstly manually [24,25] and then automatically [14] by learning the biological interpretation of their AP.
The term cycle was used to highlight their cyclic structure and the fact, while in each cycle they exhibit linear dynamics, the coefficients of the corresponding linear equations and mode-transition guards may vary in interesting ways from cycle to cycle. The simulation of excitable cells using CLHA models exhibits [24] a nearly eight-fold speed-up in a simulation of 400 by 400 cell network.
Furthermore models based on HA are amenable to formal analysis. Symbolic reachability analysis is a well-established technique in the model checking of lin- ear hybrid systems and are now supported by several tools such as d/dt [4] and HyTech [15]. We are interested to extend these technique from linear to cycle linear hybrid automata. The study of spatial properties of hybrid automata networks is relative new. Following this direction the work in [13] performed automatic reach- ability analysis on a HA model for the Delta-Notch signaling network.
In our case study, spatial and temporal properties could be i.e. the spiral detec- tion, the presence or absence—a safety property—of a fatal arrhythmia as fibrilla- tion. Predicting spirals in the pure continuous models is more complicated than use a discrete structure given by the distribution of modes in a SNHIOA. To achieve this goal, we are investigating some model analysis techniques that help us to pre- vent the state-explosion problem during the model checking but able to capture the spatial properties of interest.

Acknowledgement
Research supported in part by the Italian FIRB-MIUR LITBIO: Laboratory for Interdisciplinary Technologies in Bioinformatics, by UNICAM ASSICOS and by NSF Faculty Early Career Award CCR01-33583 and NSF Award CCF05-23863.

References
Alur, R., R. Grosu, Y. Hur, V. Kumar and I. Lee, Modular specifications of hybrid systems in charon., in: In Hybrid Systems: Computation and Control, Third International Workshop, LNCS 1790, 2001,
pp. 6–19.
Amonlirdviman, K., R. Ghosh, J. Axelrod and C. Tomlin, A hybrid systems approach to modelling and analyzing planar cell polarity., in: Proceedings of the International Conference on Systems Biology, 2002.
Antoniotti, M., B. Mishra, C. Piazza, A. Policriti and M. Simeoni, Modeling cellular behavior with hybrid automata: Bisimulation and collapsing., in: Computational Methods in Systems Biology, First International Workshop, CMSB 2003, Rovereto, Italy, February 24-26, 2003, Proceedings, LNCS 2602,
2003, pp. 57–74.
Asarin, E., T. Dang and O. Maler, The d/dt tool for verification of hybrid systems., in: CAV, 2002, pp. 365–370.
Barkley, D., A model for fast computer-simulation of waves in excitable media., Physica D 49 (1991),
pp. 61–70.
Barkley, D., M. Knees and L. Tuckerman, Spiral-wave dynamics in a simple-model of excitable media
- the transition from simple to compound rotation., Physica Review A 42 (1990), pp. 2489–2492.

Bartocci, E., F. Corradini, E. Entcheva, R. Grosu and S. A. Smolka, Cellexcite: A tool for simulating in-silico excitable cells, BMC Bioinformatics (2007), p. submitted.
Bub, G., L. Glass, N. G. Publicover and A. Shrier, Bursting calcium rotors in cultured cardiac myocyte monolayers., Proc Natl Acad Sci U S A 95 (1998), pp. 10283–10287.
Bub, G. and A. Shrier, Propagation through heterogeneous substrates in simple excitable media models., Chaos 12 (2002), pp. 747–753.
Deshpande, A., D. Godbole, A. Gollu and P. Varaiya, Design and evaluation of tools for automated highway systems., in: In Hybrid Systems III: Verification and Control, LNCS 1066 (1996), pp. 138–148.
Di Francesco, D. and D. Noble, A model of cardiac electrical activity incorporating ionic pumps and concentration changes., Philos Trans R Soc Lond B Biol Sci 307 (1985), pp. 353–398.
Gerhardt, M., H. Schuster and J. J. Tyson, A cellular automation model of excitable media including curvature and dispersion., Science 247 (1990), pp. 1563–1566.
Ghosh, R., A. Tiwari and C. Tomlin, Automated symbolic reachability analysis; with application to delta- notch signaling automata., in: Hybrid Systems: Computation and Control, 6th International Workshop, HSCC 2003 Prague, Czech Republic, April 3-5, 2003, Proceedings, 2003, pp. 233–248.
Grosu, R., S. Mitra, P. Ye, E. Entcheva, I. V. Ramakrishnan and S. A. Smolka, Learning cycle-linear hybrid automata for excitable cells., in: HSCC, 2007, pp. 245–258.
Henzinger, T., P. Ho and W. Howard, Hytech: A model checker for hybrid systems., in: CAV, 1997, pp. 460–463.
Henzinger, T. A., The theory of hybrid automata., in: In Proceedings of the 11th IEEE Symposium on Logic in Computer Science, 1996, pp. 278–293.
Hodgkin, A. L. and A. F. Huxley, A quantitative description of membrane currents and its application to conduction and excitation in nerve, J Physiol 117 (1952), pp. 500–544.
Karma, A., New paradigm for drug therapies of cardiac fibrillation, Proc Natl Acad Sci U S A 97
(2000), pp. 5687–5689.
Kitano, H., Computational systems biology, Nature 420 (2003), pp. 206–210.
Lividas, C., J. Lygeros and N. A. Lynch, High-level modeling and analysis of tcas., in: In IEEE Real- Time Systems Symposium, 1999, pp. 115–125.
Luo, C. H. and Y. Rudy, A dynamic model of the cardiac ventricular action potential. i. simulations of ionic currents and concentration changes, Circ Res 74 (1994), pp. 1071–1096.
Lynch, N., R. Segala and V. F.W., Hybrid i/o automata, Information and Computation 185 (2003),
pp. 105–157.
Ye, P., E. Entcheva, R. Grosu and S. A. Smolka, Efficient modeling of excitable cells using hybrid automata., Computational Methods in Systems Biology (2005), p. (Sumbitted).
Ye, P., E. Entcheva, R. Grosu and S. A. Smolka, Efficient modeling of excitable cells using hybrid automata., in: In Proc. of CMSB’05, Computational Methods in Systems Biology Workshop, Edinburgh, UK, 2005.
Ye, P., E. Entcheva, M. True, R. Grosu and S. A. Smolka, A cycle-linear approach to modeling action potentials., in: In EMBC06, the IEEE International Conference of the Engineering in Medicine and Biology Society, IEEE, New York City, NY, 2006.
