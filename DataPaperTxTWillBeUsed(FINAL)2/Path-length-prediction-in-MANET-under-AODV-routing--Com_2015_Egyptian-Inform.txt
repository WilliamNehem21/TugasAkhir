
ORIGINAL ARTICLE
Path length prediction in MANET under AODV routing: Comparative analysis of ARIMA and MLP model

Arindrajit Pal a,*, Jyoti Prakash Singh b, Paramartha Dutta c

a Dept. of Computer Science and Engineering, Academy of Technology, West Bengal, India
b Dept. of Computer Science and Engineering, National Institute of Technology Patna Bihar, India
c Department of Computer and System Sciences, Visva-Bharati University, West Bengal, India

Received 18 February 2014; accepted 5 January 2015
Available online 7 February 2015

Abstract Mobile Ad-hoc network (MANET) is infra-structure less collection of mobile nodes which can communicate with each other through single hop or multi-hop technique. The hop count also known as path length plays a crucial role in packet delivery, routing load, delay, etc. The path length between source destination pair nodes depends upon factors such as the mobility patterns of nodes, routing algorithm, transmission range, etc. In this article, we have tried to predict the path length between a source destination pair in MANET using Autoregressive Integrated Moving Aver- age (ARIMA) and multilayer perceptron (MLP) models. The path length data are collected from MANETs using three different mobility models namely (i) Manhattan Grid Mobility Model (MHG), (ii) Random Way Point mobility model (RWP) and (iii) Reference Point Group Mobility Model (RPGM). This paper evaluates the predictive accuracy in forecasting the path length between source and destination nodes for Ad hoc On-Demand Distance Vector AODV routing in MANET using ARIMA model and MLP. It is found that neural networks can be effectively used in forecasting path length between mobile nodes better than statistical model and the MLP based neural network models are found to be better forecaster than ARIMA model.
© 2015 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information,
Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.
org/licenses/by-nc-nd/4.0/).





* Corresponding author.
E-mail addresses: arindrajit@gmail.com (A. Pal), jps@nitp.ac.in (J.P. Singh), paramartha.dutta@gmail.com (P. Dutta).
Peer review under responsibility of Faculty of Computers and Information, Cairo University.


http://dx.doi.org/10.1016/j.eij.2015.01.001
Introduction

A mobile ad hoc network (MANET) is a collection of mobile devices which can communicate with each other through wire- less communication without support of any infrastructure [1]. Two or more mobile nodes can communicate with each other directly if they are within their transmission range. Otherwise, a packet from source node uses several numbers of intermediate hops to reach the destination. The intermediate nodes along

1110-8665 © 2015 Production and hosting by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

104	A. Pal et al.


with the destination node form a path from the source node. The path length is measured in terms of the number of hops between the communicating pair of nodes [2]. The movement of mobile nodes disturbs the communication links regularly. The physical movement of mobile nodes and its statistical behavior are described through different mobility models. The popular mobility models are Random Way Point (RWP) [3,4], Manhattan Grid (MHG) [5], Reference Point Group Mobility Model (RPGM) [6,7], etc. Camp et al. [8] provided a good survey of the most frequently used mobility models in MANETs. The routing protocols in ad-hoc network play a very critical role in communication in MANET. The nodes in MANET normally operate with limited battery power limiting their transmission range. So, the multi-hop transmission is a common attribute in MANETs. There are mainly three types of routing protocols followed in MANETs. They are proactive, reactive and hybrid. In this article, we consider the AODV [11] routing protocol which is a reactive routing protocol. It uses a broadcast query-reply cycle to determine routes between a pair of nodes only when required. Artificial neural network (ANN) has been widely used in studies of complex time series forecast- ing [9], including business, engineering, economics, weather and stock market forecasting, inventory and production control, signal processing, and many other fields. ANNs are mostly computer algorithms that simulate the information processing capability of biological nervous system. The most distinguish- ing feature of ANNs is their ability to learn [10]. The major advantage of neural networks is its flexible non-linear modeling capacity. ANNs can represent a highly non-linear process, under certain conditions with a complex structure better than many other empirical models. Once ANNs are developed with appropriate weight coefficients, then they can provide a quick response to new input. These characteristics of ANN motivated us to use them to forecast the path length of the mobile nodes. In this article, we have put the path length variation between a source destination pair of mobile nodes of MANET in the time series framework. ARIMA and ANN based models are used for prediction of path length of mobile nodes of MANETs. The order (p, d, q) of the ARIMA model is determined through statistical analysis. The optimal number of neuron and learning rate is also determined for ANN based model. We also compare the modeling and prediction capability of both ARIMA and ANN based models in terms of certain statistical performance evaluation criteria.















Figure 1 Travelling pattern of mobile nodes on Manhattan Grid Mobility Model.
The rest of this paper is organized as follows. In Section 2.1, we describe different mobility models. Section 2.2, contains a brief description of AODV routing in MANET. Section 2.3 contains brief discussion about Time series analysis. In Section 2.4, we describe the ARIMA model. The model development based on artificial neural network and Multilayer Perceptron Network is given in Section 2.5. Section 3 contains the related works. Our approach to develop the work is given in Section 4. Performance evaluation is in Section 5. Section 6 includes the simulation settings followed by results. We conclude the article in Section 7 with some suggestions regarding future directions.

Prerequisite Knowledge

Mobility models

We describe a few frequently used mobility models which we shall consider in course of our study in the present article. This is for the sake of completeness.

Manhattan Grid Mobility Model (MHG)
The Manhattan Grid Mobility Model uses a grid road topol- ogy as shown in Fig. 1. The network is assumed to be divided into several grids where the square blocks on the grid are all equal to the block length. The nodes are placed on the different roads randomly at the starting of the simulation [8]. The mov- ing direction of the nodes is decided by the initial location in the road and the starting position of the node. Node’s position and the selected movement direction determine the distance to the next intersection or crossover of the road. When a node reaches one of the intersections of the road, then its position is corrected to remove round-off errors and the new direction of movement is randomly chosen. In general the node leaves the scenario and re-enters at a randomly chosen new road point. However, each outgoing node is replaced by a newly arrived node, which enters the scenario at a randomly chosen crossover point. The node density of the mobility scenario keeps the same even if nodes are replaced constantly. In this mobility model, the mobile nodes are placed anywhere along the street and the movement of a node is decided one step hor- izontally or vertically at a time. Initially, each node may choose any of the streets. The center nodes may move in four possible directions, such as north, south, east, and west. That means a node would have a 25% chance of moving in one of the directions, leaving another node for moving west, east or south. The velocity of a mobile node at a time slot is totally dependent on its velocity at the previous instant of time. In the Manhattan mobility model, the velocity of a node is always limited by the velocity of the node preceding it on the same lane of the street.

Reference Point Group Mobility Model (RPGM)
The real applications where Reference Point Group Mobility Model (RPGM) may be used properly are the mobility behav- ior of the soldiers moving together in a group in the battle field. There is a logical center or group leader in each group. The movement of the group leader determines the mobility behavior of all other members in the group. Initially, each member of the group is uniformly distributed in the neighborhood of the group leader [6]. At every time instant, each node has its own

Path length prediction in MANET	105

speed and direction randomly which has deviated from that of the group leader. This model realizes the spatial dependency of each node of a group with logical center. The movement of the
needed, the node uses a broadcast route request (RREQ) to find a route to the destination. Nodes that receive the RREQ find out whether they are the destination or whether they have

group leader at time t can be represented by motion Vt
. Not
a fresh route to the destination. Then they respond to the

only does it define the motion of the group leader itself, but also provides the general motion trend of the whole group. Each member of this group deviates from this general motion Vt
RREQ by unicasting a route reply (RREP) back to the source node. A route can be determined when the request reaches either the destination itself, or an intermediate node with a

to some extent. The motion vector Vt
can be randomly cho-
fresh enough route to the destination. Since each node receiv-

sen or carefully designed based on certain predefined paths. The movement of group members is significantly affected by the movement of the group leader. For each node, mobility is assigned to a reference point that follows the group movement. Based on this predefined reference point, each mobile node could be randomly placed in its neighborhood. Formally, the motion vector Vt of group member i at time t, can be described as
t	t	t
i	group	i

where the motion vector R × Mt is a random vector deviated by group member i from its own reference point.

Random Way Point mobility model (RWP)
The Random Way Point mobility [3,8] model is simple and is widely used to evaluate the performance of MANET. The Random Way Point mobility model contains pause time between changes in direction and/or speed. Once a mobile node begins to move, it stays in one location for a specified pause time. After the specified pause time is elapsed, the mobile node randomly selects the next destination in the sim- ulation area, chooses a speed uniformly distributed over the minimum speed usually taken as 0 and maximum speed and travels with a speed v whose value is uniformly chosen in the interval (0, Vmax). Vmax is some parameter that can be set to reflect the degree of mobility. Then, the mobile node continues its journey toward the newly selected destination at the chosen speed.

Ad hoc On-demand Distance Vector (AODV) routing

The Ad hoc On-demand Distance Vector (AODV) proposed by Perkins and Royer [11] is a popular example of an on- demand routing protocol. This is one type of reactive routing algorithm. The mobile hops do not gather the complete sce- nario of the network topology. Whenever a path from source to destination is needed, then a path is searched and estab- lished. In AODV, each node maintains at most one route per destination. Being a single path protocol, it has to invoke a new route discovery when the only path from the source to the destination fails. When topology changes frequently, route discovery needs to be initiated again and again which can turn very inefficient. AODV maintains a destination sequence num- ber generated by the receivers and determines an up-to-date path to the destination. A node updates its route information only if the destination sequence number of the current packets received is greater than the destination sequence number stored at the node. It indicates the freshness of the route accepted by the source. To prevent multiple broadcast of the same packet, AODV uses a broadcast identifier number that ensures loop freedom. This is because the intermediate nodes only forward the first copy of the same packet and discard the duplicate copies. When a route to a new destination is
ing the request keeps track of a route back to the source of the request, the RREP reply can be unicast back from the destina- tion to the source, or from any intermediate node that is able to satisfy the request back to the source.

Time series analysis

The time series forecasting techniques can estimate the future data set of the series based on past observations either from the series itself or from exogenous data. A time series model is a specification of the joint distributions of the random vari- ables Xt of which the observed data set xt is a sample. It is a sequence of points of data dependent on equidistant time nor- mally. It can be expressed as
Xt = {xt ∈ R|t = 1; 2; 3; ... ; N}	(2)
where t is the temporal index. N is the number of observations
in the series. xt is a sequence of temporal observations equally spaced. The correct choice of the time lags is the crucial factor for a good forecasting performance [9]. An important compo- nent of time series modeling is to remove trend and seasonal components to get a (weakly) stationary time series. Infor- mally, a time series Xt is stationary if it has statistical proper- ties similar to those of the time-shifted series Xt+h for each positive integer h.

ARIMA model

Autoregressive Integrated Moving Average (ARIMA) process proposed by Box et al. [12] is a stochastic process which is used to analyze the time series. An ARIMA model is denoted by the notation ARIMA (p, d, q) where, p denotes the orders of auto- regression, d means the integration (differencing) and q repre- sents the order of the moving average respectively. If the data set is stationary then the difference d is considered as zero, otherwise one has to compute the value of d. For instance, a time series process yt of a first order auto-regressive process is denoted by AR(1) and is expressed as
yt = l + /1yt—1 + et	(3)
and AR(p) of p order can be defined as
yt = /1yt—1 + /2yt—2 + ... + /pyt—p + et	(4)
The first order moving average MA(1), can be expressed as
yt = l — /1et—1 + et	(5)
and the q order of MA(q) can be defined as
yt = et — h1et—1 — h2et—2 — ... — hqet—q	(6)
So, the higher order ARIMA (p, 0, q) can be defined as
yt = /1yt—1 + /2yt—2 + ... + /pyt—p — h1et—1 — h2et—2
— .. . — hqet—q + et	(7)

106	A. Pal et al.


mean and constant variance r2 for t = 1; 2; .. ., n. In ARIMA where e is independently and normally distributed with zero model, the autocorrelation function (ACF) and partial ACF
of the time series. The ACFq(k) at lag k of the series yt, is (PACF) are very important to analyze the internal structure k      =      0;    1;    2    ..    . the linear correlation coefficient between yt and yt—k, for
So, the autocorrelation at lag k is
This allows a smooth transition between the low and high output of the neuron. The error is the difference between the actual and the preferred output. The error depends on the weights. So, the weights are adjusted in order to minimize the error.

Related work

Pn—k(y — y¯)(y
— y¯)
Neural network techniques have been applied in various areas

k	n
t=1
(y — y¯)2
ward neural network is used for call admission control. The relationship between different classes of packets and their

Artificial neural network (ANN) and training algorithms

An ANN model typically has an input layer, hidden layer(s) and an output layer. The basic computational unit of a neural network is neuron. A neural network can be used to extract an estimation of the autoregressive structure hidden in realiza- tions of a time series. In this approach, the neural network learns the characteristics of the dependency by optimizing the weights [13,9].
There are several steps for designing and training ANN network:
Select number of variables.
Gather and pre-process data set.
Neural network paradigms.
Number of hidden layers.
Number of neurons in each hidden layers.
Transfer function.
Select training method.
Number of iteration, learning rate and momentum.
Find a optimal solution.
Multilayer perceptron (MLP)
The MLP network has one or more hidden layers of neurons followed by an output layer of linear neurons. The back-prop- agation algorithm uses supervised learning where the set of the inputs and outputs is provided to the network to learn. Multi- ple layers of neurons with non-linear transfer functions allow the network to learn non-linear and linear relationships between input and output vectors. The linear output layer lets the network produce values outside the range 1 to +1. For multiple-layer networks we use the number of the layers to determine the superscript on the weight matrices. The activa- tion function of the artificial neurons in ANNs implementing the back-propagation algorithm is a weighted sum which is the sum of the inputs xi multiplied by their respective weights wij as shown in Fig 2:
n
Aj(x¯; w¯)=  (xi; wij)
i=0
The most common output function of back-propagation is
the sigmoid function:
1
Oj(x¯; w¯)= 1 + e—Aj (x¯;w¯)
mean per-packet delays is learned by the neural network. By
using a large window of previous observations and multi-start optimization method for training, such a neural network was shown to have good control accuracy with only a negligible number of calls slightly violate the objective. Senthil Kumaran
[15] proposed a method for early congestion detection tech- niques and adaptive routing protocol in MANET. Guo et al.
proposed a delay prediction mechanism and integrated that prediction mechanism with a proactive ad hoc network routing protocol called Optimized Link State Routing (OLSR). They used queuing delay only and showed that queu- ing delay can be modeled as a non-stationary time series. They used Multilayer Perceptron (MLP) and Radial Basis function to predict the non-stationary time series model of queuing delay in MANET. The delay prediction mechanism proposed by them is independently distributed and uses only previous delay values to predict the future delay value. Singh and Dutta
pointed out the importance of neighbor count of a mobile node and modeled that information using Autoregressive model (AR). They showed through extensive simulation that the distribution of neighbor count of a node Ni under a thresh- old value of speed, range and sampling time for different mobility models is well correlated and can be represented by AR(p) model for suitable choice of order p. They also calcu- lated the order of Autoregressive model and used that model to predict the neighbor count values. In [7], Singh and Dutta have modeled the link load distribution of a link between two nodes using an Autoregressive AR(p) model and evaluated the order p of the AR model. They have also predicated the link loads between two nodes in future time frames and found that the prediction is close enough to actual value. In [18], Singh and Dutta compared the routing protocols with respect to their path lengths across different mobility models and found that DSDV achieves the shortest path length across all mobility models considered there. They have also tried to model the path length distribution between two nodes using a Autoregressive AR(p) model. They found through their experiments that path length distribution between two nodes under all four mobility models is well correlated and can be represented by AR(p) model for suitable value of p. They have also predicated the path length between two nodes in future time frames and found that the prediction is close enough to the actual values.

Simulation parameters and our approach

Our target in the experiment is to forecast the path length between source and destination pair of mobile nodes in MANET using statistical model ARIMA and ANN model

Path length prediction in MANET	107











Figure 2	The multilayer perceptron.


using MLP network. For generating different mobility sce- nario we use Bonn-Motion [19] tool. Bonn-Motion is a Java based software that creates and analyzes mobility scenarios. The generated scenarios are then exported to ns-2. The mobil- ity models we have considered in our experiments include
observed and predicted path lengths respectively between a source destination pair in MANET at ith time. N is the total number of data sets.
Root Means Squared Error (RMSE):
vuﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ

RWP, MHG and RPGM. The routing algorithm used is AODV. We have used ns-2 [20] for network simulation and traces are generated in new trace format. The cbrgen tool is
RMSE =
1 N
N i=1
(Oi — Pi)
(9)

used to generate constant bit rate (CBR) traffic. The path
lengths between different nodes are extracted from the trace file using suitable AWK scripts. The path length between a source destination pair of nodes is then represented as a time series. We consider the autocorrelation (ACF) and partial autocorrelation function (PACF) to check whether the time series data are stationary or not. If it is stationary, then we
RMSE is the most well known measure of error. It defines
the inconsistency between the actual and predicted values. An RMSE value close to zero indicates better performance of the model.
Mean Squared Error (MSE):
1 N
MSE =   (O — P )	(10)

orders. The ACF(k) i.e. the ACF at lag k, is the linear Pearson
correlation between observations k lags apart. If the ACF(k) differs significantly from zero, the serial dependence among


Mean Absolute Error (MAE):
1 XN



300 data are used for model building and 200 data are used for testing. Similarly, we have also taken 500 data sets for MLP network in which 300 for training and 200 for testing. The following steps are executed to forecast the path length value between the mobile nodes.
Phase I (determine the p, d and q of ARIMA model): Check whether the data set is stationary or not using ACF. The value of d is zero if the series is stationary. The p and q values are then determined using Akaike Information criterion (AIC) and Bayesian information criterion (BIC) values. The (p, d, q) values obtained represent the order of the ARIMA model which fits the said time series.
Phase II (determine the path length using MLP network model): Find the optimal number of hidden neurons for MLP network. Also find the optimal learning rate for training of the MLP network.
Phase III (comparison between ARIMA and MLP network): Evaluate the performance of ARIMA and MLP network model for data set of path length in MANET for each mobility model. Use the best model for path length forecasting.

Performance evaluation

The different performance evaluation criteria used to compare various models are Mean Squared Error (MSE), Root Mean Squared Error (RMSE) and Mean Absolute Error (MAE). The formulae to calculate this performance evaluation crite- rion are given below in Eqs. (9)–(11). Oi and Pi are the
MAE is the metric applied to estimate the error of predic-
tion. MAE is widely used statistical metrics that calculate the error of prediction by measuring the deviation between actual and forecast value. Smaller values of this indicate higher accu- racy in forecasting.

Results and discussion

In our experiment, we consider the MLP networks with one hidden layer having h neurons. The number h is increased from 5 to 50 in steps of 5 units. Here we process the model for dif- ferent mobility models with the lag value which is already eval- uated in ARIMA model. For each architecture, the networks are trained on the training sets. The other parameters are the defaults for MLP networks library. We have also observed the effect of variation of learning rate of the MLP network to predict the path length between the mobile nodes. That is why we apply different learning rate from 0.01 to 1.0 and cal- culate the RMSE under three different mobility patterns such as RWP, MHG and RPGM.

Forecasting path length under MHG mobility model

The data set of path length of a MANET whose nodes follow Manhattan Grid mobility patterns is found to be stationary as the ACF and PACF graphs are sinusoidal in nature as plot- ted in Fig. 3. This stationary confirms that the difference com- ponent d of ARIMA model is zero. Next, we proceed to




108	A. Pal et al.




Figure 3 ACF and PACF of ARIMA (2, 0, 2) for MHG mobility model.



















Figure 4 Effect of RMSE on changing the learning rate in MHG mobility model.

calculate the p and q parameters of ARIMA model. We calcu- late the AIC and BIC values of said time series for different p and q as indicated boldfaced in Table 1. The lowest AIC and BIC values in Table 1 for p and q value are 2. Hence, for the said data set the ARIMA model is of order (2, 0, 2) as shown in boldfaced entry in Table 1. The said model is used to predict the future path length as shown in Fig. 5. The next result is by neural network model. We construct training data set for MLP network with original path length and lagged path length suggested by ARIMA model. MLP network is trained with the said training data set and tested with testing sample. To find the optimal number of neurons in MLP network, we have varied the number of neurons from 5 to 50 with step of 5. The statis- tical performance measures with different number of neurons are shown in Table 2. From Table 2 (indicated in boldface), it is evident that MLP network with 25 numbers of neurons is bet- ter model for the said data set. We further investigate the effect of learning rate on the prediction accuracy. The learning rate is varied from 0.1 to 1 with step of 0.1 and found that the RMSE increases as the learning rate increases as per Fig. 4. For our case, we have chosen the learning rate l is 0.4, which shows low RMSE as well as low number of epochs. The prediction results on same data set by ARIMA model and MLP network
model are given in Fig. 5. The MLP network performs better prediction than ARIMA as shown in Table 3 and the corre- sponding graph is depicted in Fig. 5.

Forecasting path length under RWP mobility model

The data set of path length of a MANET whose nodes follow Random Way Point mobility (RWP) patterns is found to be stationary as the ACF and PACF graphs are sinusoidal in nat- ure as plotted in Fig. 6. Since, the series is stationary; the dif- ference component d of ARIMA model is zero. Next, we try to calculate the p and q parameters of ARIMA model. We find out the AIC and BIC values on the said data sets for different p and q as in Table 4. To decide on p and q values, we evaluate AIC and BIC value of the said series for different orders. The lowest AIC and BIC value in Table 4 is for p and q value of 2 and 1 respectively (indicated in bold faced entry). Hence, for the said data set the ARIMA model is of the order (2, 0, 1). The said model is used to predict the future path length as illustrated in Fig. 8. We construct training data set for MLP network with original path length and lagged path length sug- gested by ARIMA model. MLP network is trained with the said training data set and tested with testing sample. To find the optimal number of neurons in MLP network, we have time varied the number of neurons from 5 to 50 with step of 5.
The statistical performance measure with different number of neurons is shown in Table 5. From Table 5 (bold faced entry), it is evident that the MLP network with 25 numbers of neurons is better model for the said data set. We further investigate the effect of learning rate on the prediction accu- racy. The learning rate is varied from 0.1 to 1 with step of
0.1 and found that the RMSE increases as the learning rate increases as evident from Fig. 7. In our case, we have fixed the learning rate l at 0.3, which shows low RMSE as well as the low number of epochs. The prediction results on the same data set by ARIMA model and MLP network model are given in Fig. 8. We have shown the graphical comparison between the original path length and predicted path length by MLP net- work and ARIMA model and Table 6 shows the performance between ARIMA and MLP network for RWP mobility model. Here the performance of both the models is almost same.

Forecasting path length under RPGM model

The data set of path length of a MANET whose nodes follow Reference Point Group mobility patterns is found to be

Path length prediction in MANET	109














Figure 5	Actual, ARIMA and MLP network fitted path lengths of mobile nodes in MHG mobility model.





















Figure 6 ACF and PACF of ARIMA (2, 0, 2) for RWP mobility model.
stationary as the ACF and PACF graphs are sinusoidal in nat- ure as plotted in Fig. 9. This stationary confirms that the dif- ference d component of ARIMA model is zero. Next we proceed to calculate the p and q parameters of ARIMA model.
We find out the AIC and BIC values on the said data sets for different p and q as shown in Table 7. The lowest AIC and BIC value in Table 7 is for p and q value of 2 and 1 respectively ( shown in bold faced). Hence for the said data set the ARIMA model is of order (2, 0, 1).
The said model is used to predict the future path length as shown in Fig. 11. We construct a training data set for MLP network with original path length and lagged path length sug- gested by ARIMA model. MLP network is trained with the said training data set and tested with testing sample. To find the optimal number of neurons in MLP network, we have time varied the number of neurons from 5 to 50 with step of 5. The statistical performance measure with different number of neu- rons is shown in Table 8. It is evident that the MLP network with 15 numbers of neurons is better model for the said data set as shown by boldfaced entry in Table 8. We further




110	A. Pal et al.


















Figure 8	Actual, ARIMA and MLP network fitted path lengths of mobile nodes in RWP mobility model.

Figure 10	Effect of RMSE on changing the learning rate in RPGM mobility model.














Figure 9	ACF and PACF of ARIMA (1, 0, 1) for RPGM mobility model.
investigate the effect of learning rate on the prediction accu- racy. The learning rate is varied from 0.1 to 1 with step of
0.1 and found that the RMSE increases as the learning rate increases as evident from Fig. 10. In our case, we have chosen the learning rate l is 0.3, which shows low RMSE as well as the low number of epochs. The prediction results on same data set by ARIMA model and the MLP network model are provided in Fig. 11. The MLP network performs better prediction than ARIMA as shown in Table 9 and the corresponding graph is shown in Fig. 11.
From our experimental results, we observe that MLP net- work performs better than the statistical model ARIMA for

Path length prediction in MANET	111













Figure 11	Actual, ARIMA and MLP network fitted path lengths of mobile nodes in RPGM mobility model.





MHG and RPGM networks and it is almost same for RWP mobility model. Our study established in the forecasting of path lengths between source and destination mobile nodes that MLP network offers considerably better result in 15–25 hidden units.

Conclusion

In this article, we have framed the path length variation in time series framework and then modeled them using ARIMA with suitable parameters (p, d, q). The series is always found to be stationary with estimated d value being 0. The p and q values were found to lie within the range 1–2. So, ARMA model is adequate for our experiment. The MLP network uses the lagged path length and predicts the future path lengths. The optimal number of neurons in the MLP network is found to be in the range of 15–25 hidden units in our experiment.

References

Hekmat R. Ad-hoc networks: fundamental properties and net- work topologies. AA Dordrecht, The Netherlands: Springer; 2006.
Banerjee A, Dutta P. Limited area route discovery for mobile ad hoc networks. J Sci Indust Res 2011;70(4):264–9.
Bettstetter C. Topology properties of ad hoc networks with random waypoint mobility. ACM SIGMOBILE Mobile Comput Commun Rev 2003;7(3):50–2.
Lassila P, Hyyti E, Koskinen H. Connectivity properties of random waypoint mobility model for ad hoc networks. In: MedHoc-Net, le de Porquerolles; 2005. p. 159–68.
Pucha H, Das SM, Hu YC. The performance impact of traffic patterns on routing protocols in mobile ad hoc networks. Comput Networks 2007;51:3595–616.
Hong X, Gerla M, Pei G, Chiang C-C. A group mobility model for ad hoc wireless networks. In: Workshop on modelling and simulation of wireless and mobile systems (MSWiM); 1999. p. 53– 60.
Singh JP, Dutta P. Temporal modeling of link characteristic in mobile ad hoc network. J Comput Inf Technol 2011;19(3):143–54. http://dx.doi.org/10.2498/cit.1001734.
Camp T, Boleng J, Davies V. A survey of mobility models for ad hoc network research, wireless communications and mobile computing (WCMC): special issue on mobile ad hoc networking: research. Trends Appl 2002;2(5):483–502.
Ferreira TAE, Vasconcelos GC, Adeodato PJL. A new intelligent system methodology for time series forecasting with artificial neural networks. Neural Process Lett 2008:113–29.
Fausset L. Fundamentals of neural networks. 1st ed. Englewood Cliffs: Prentice Hall; 1994.
Perkins CE, Royer EM. Ad-hoc on-demand distance vector routing. In: 2nd IEEE workshop on mobile computing systems and applications; 1997. p. 90–100.
Box GEP, Jenkins GM, Reinsel GC. Time series analysis forecasting and control. 3rd ed. New Jersy: Prentice Hall; 1994.
Zhang GP, Patuwo BE, Hu MY. Forecasting with artificial networks: the state of the art. Int J Forecast 1998:35–62.
Morris RJT, Samadi B. Neural network control of communica- tions systems. IEEE Trans Neural Networks 1994;5(4):639–50.
Senthil Kumaran VST. Early congestion detection and adaptive routing in MANET. Egyptian Informatics J 2011;12(3):165–75.
Guo Z, Sheikh S, Al-Najjar C, Kim H, Malakooti B. Mobile ad hoc network proactive routing with delay prediction using neural network. Wireless Network 2010;16:1601–20. http://dx.doi.org/ 10.1007/s11276-009-0217-7.
Singh JP, Dutta P. Temporal modeling of node mobility in mobile ad hoc network. J Comput Inf Technol 2010;18(1):19–29. http:// dx.doi.org/10.2498/cit.1001412.
Singh JP, Dutta P. The temporal effect of mobility on path length in MANET. Int J Wireless Inf Networks 2012;19(1):38–48. http:// dx.doi.org/10.1007/s10776-011-0163-z.
U. of Bonn, Bonnmotion – a mobility scenario generation and analysis tool. <http://www.cs.uni-bonn.de/IV/bomonet/Bonn- Motion.htm>.
McCanne S, Floyd S. ns network simulator. <http://www.isi.edu/ nsnam/ns/>.
