

Electronic Notes in Theoretical Computer Science 218 (2008) 209–229
www.elsevier.com/locate/entcs

Presenting Dcpos and Dcpo Algebras
Achim Junga,1	M. Andrew Moshierb,2	Steve Vickersa,3
a School of Computer Science The University of Birmingham Birmingham, United Kingdom
b Department of Mathematics & Computer Science Chapman University
Orange, CA, USA

Abstract
Dcpos can be presented by preorders of generators and inequational relations expressed as covers. Algebraic operations on the generators (possibly with their results being ideals of generators) can be extended to the dcpo presented, provided the covers are “stable” for the operations. The resulting dcpo algebra has a natural universal characterization and satisfies all the inequational laws satisfied by the generating algebra. Applications include known “coverage theorems” from locale theory.
Keywords: Dcpo algebras, dcpo presentations, d-topology, μ-topology, coverage theorems


Introduction
The importance of algebraic theories in semantics was first emphasized by Hennessy and Plotkin in [4] and more recently — in the context of “computational effects” — by Plotkin and Power, [9]. Mathematically, it necessitates the ability to construct free algebras over semantic spaces. For continuous domains, a general theory was developed by Abramsky and the first author in [1, Section 6] making use of the concept of an “abstract basis.” There it was also stated that free algebras exist for the more general category DCPO; however, the construction was not concrete but reference was made to the Freyd Adjoint Functor Theorem. The results presented in this paper amend this situation and allow us to give a fairly concrete description of free dcpo algebras.
In order to give an overview of the paper we need to fix some terminology and notation. An algebraic theory is given by a set Ω of operation symbols, an arity

1 Email: A.Jung@cs.bham.ac.uk
2 Email: moshier@chapman.edu
3 Email: S.J.Vickers@cs.bham.ac.uk

1571-0661 © 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2008.10.013

function α : Ω → N, and a set E of equations. An algebra for a theory (Ω, α, E) consists of a carrier set A together with maps ωA : Aα(ω) → A for each ω ∈ Ω. We usually suppress the arity function and use “ω” for both the operation symbol and the concrete operation on A. We call an algebra preordered if A carries a preorder и with respect to which the operations are monotone; we call it a dcpo algebra if (A; и)
is a directed complete order and the operations are Scott-continuous.
We are concerned with two questions: How to define a notion of presentation for dcpo algebras, and how to compute the dcpo algebra defined by a presentation. We begin by reviewing the classical case of ordinary algebras. A presentation consists of a set G of generators and a set R of relations, expressed as equations between terms built up from generators and function symbols. It is to be understood in the context of an algebraic theory (Ω, E). For example, in the context of groups, G = {a} and R = {a ◦ a ◦ a = e} presents the group Z3.
In the classical case, the construction of the presented algebra is quite simple; one first generates all Ω-terms starting from G and then factors this algebra by the smallest congruence containing all relations in R and all instances of equations in E. The technique works equally well for preordered algebras. Instead of factoring by the smallest congruence one equips the set of terms with the smallest preorder containing all inequational relations in R and all instances of inequations from E. In addition, one forces all operations to preserve the preorder. Note that in either case, the presented algebra is constructed from the set of all Ω-terms over G.
For dcpo algebras the situation is quite different because for an ordered set to be a dcpo requires the existence of certain elements. Hence we can not hope to be able to make do with finitary terms alone. A reasonable strategy is to construct first the generated preordered algebra and then to complete the resulting preorder to a dcpo, for example by taking the ideal completion. However, at this stage further requirements could be stipulated, for example, one could require that two directed sets have the same supremum. This is indeed what is needed in applications so in addition to R we allow a set C of covers to be specified in a dcpo algebra presentation. Each cover has the form (x, S) with the intended meaning that in the presented dcpo algebra x should be below the directed supremum of S.
It is quite natural to believe that the free dcpo with respect to a set of covers can be constructed as a quotient of the ideal completion. This, however, is the wrong intuition; in the contrary, the more covers have been stipulated, the more elements may need to be added to the given preorder to turn it into an ordered structure that is both a dcpo and satisfies the covers. In general, the completion becomes a transfinite process. Once this is realized, one might then begin to worry about extending the operations to all these extra elements but our results say that (subject to a compatibility condition) the order-theoretic completion is in fact the only hurdle: not only can the operations be lifted to the completion, they will also continue to satisfy the (in)equations of the theory.
The structure of the paper follows logically from these observations. In Section 2 we study in detail the completion of a preorder with respect to a set of covers. The technique we employ is inspired by and very closely related to that of [6], but we

also include three alternative views on the construction, two of a topological nature and one that makes precise the transfinite induction alluded to above. In the next section we then show that finitary operations on the generating preordered algebra lift to the completion so that the dcpo constructed in Section 2 already yields the dcpo algebra with the required universal property. In Section 4 we show that the extended operations continue to satisfy the inequations that hold in the generating algebra. Here the topological explanations of the completion process allow for a very slick argument. In Section 5 we consider the case where the given operations return ideals rather than elements. This generalization is motivated by one of our applications and the reader may wish to skip this part on first reading. In Section 6 we exhibit a number of uses for dcpo algebra presentations, and it could be attractive to read this material before attempting the technical development in sections 2–5. Particular emphasis is placed on applications in locale theory, which is appropriate as we are drawing heavily on the techniques pioneered for this special case.

DCPO presentations
We first show that dcpo presentations by generators and relations do indeed present: in other words, there is a dcpo with the universal property specified in the pre- sentation. This was essentially proved in [11, Section 2.1], using the techniques (originally used for preframes) of [6]. Our development here generalizes theirs in two ways. First, we allow the generators to form a preorder rather than a poset. Second, [11] used equational relations of the form, “directed join = directed join.” We shall instead use inequational relations, of the form, “element ± directed join.” This is equivalent to the equational relations in the semilattice contexts of [11], but not more generally.
Definition 2.1 A dcpo presentation consists of
a set P of generators;
a preorder и on P ;
a subset C of P × P(P ), whose elements are called covers and written a a U , subject to the requirement that U is directed with respect to и. (Without the
directedness requirement, we shall refer to C as a cover set.)
The goal is to show that every dcpo presentation gives rise to a dcpo with the appropriate universal property.
Definition 2.2 An order preserving map f : (P ; и,C) → D from a dcpo pre- sentation to a dcpo D preserves covers if for all a a U in C it is true that
f (a) ± .↑	f (x).

Definition 2.3 A dcpo P is freely generated by the dcpo presentation (P ; и,C) if there is a map η : P → P that preserves covers, and every map f from P to a dcpo D that preserves covers factors through η via a unique Scott-continuous

map f : P → D:



η


Definition 2.4 Let (P ; и,C) be a preorder with cover set. A C-ideal I is a subset of P which is downward closed and closed under all covers, to wit, U ⊆ I implies a ∈ I for all a a U in C.
If S is any subset of P then ⟨S⟩ denotes the smallest C-ideal containing S. The set of all C-ideals is denoted by C-Idl(P ).
This is the same definition as in [5, Section II-2.11], however, our presenting preorder is not assumed to be a meet semilattice. Trivially, C-Idl(P ) is a complete
lattice as S '→ ⟨S⟩ is a closure operator on the powerset of P . Specifically, .k∈K Ik =
⟨  k∈K Ik⟩ for any set {Ik | k ∈ K} of C-ideals.
Now, C-Idl(P ) is not the free dcpo generated by a dcpo presentation (because it is always a complete lattice, even if P is just a finite poset and C the empty set) but it plays a crucial role in our construction. Indeed, we shall be particularly interested in C-Idl(P ) as a sup-lattice (or complete join semilattice). As objects, sup-lattices and complete lattices are the same, but sup-lattice homomorphisms are only required to preserve all joins.
Proposition 2.5 Let (P, и) be a preorder and C a cover set on it. Then C-Idl(P )
~	и
is the free sup-lattice generated by (P ; ∼,C).
Proof. (From [2]) If Q is a sup-lattice and f : P → Q a monotone function that preserves covers, then define f : C-Idl(P ) → Q by
f (I)= . f (p).
p∈I

This is clearly monotone and satisfies f ◦ η = f , so only the preservation of suprema needs to be shown. By monotonicity we have

f ( . Ik)=	.
f (p) ± .
. f (p) =: x

k∈K
p∈F Ik
k∈K p∈Ik

For the other inequality note that f −1(↓x) is downward closed by the monotonicity
of f , closed under covers because these are assumed to be preserved by f , and a superset of all Ik. Hence .k∈K Ik = ⟨ k∈K Ik⟩ ⊆ f −1(↓x) and f (.k∈K Ik) ± x. 
We shall also need the following lemma.
Lemma 2.6 Let D be a dcpo. Then the sup-lattice Σ(D) of Scott closed subsets of
D is the free sup-lattice over D qua dcpo.

Proof. A proof was sketched in [11] but we can also apply the preceding proposition by considering the dcpo presentation (D, ±,C) where C contains all covers a a U 
where a ± .↑U in D. Then the set of C-ideals coincides with the set of Scott-
closed subsets, and any monotone function f : D → E which preserves covers is in fact Scott-continuous.	 
Note that for a constructive treatment we must define “Scott closed” to mean down-closed and closed under directed joins, not the complement of a Scott open. Note also that η : D → C-Idl(D)= Σ(D) takes each a ∈ D to the corresponding principal ideal ↓a, and therefore is an order embedding. In the following we denote
it by ↓, rather than η.
To return to the task of determining the dcpo generated by a given dcpo presentation, we let P be the smallest sub-dcpo of C-Idl(P ) containing all ⟨p⟩ for p ∈ P , and define η : P → P as p '→ ⟨p⟩.  This is order-preserving be-
cause C-ideals are lower sets. For the preservation of covers let a a U . Then

↑
x∈U
⟨x⟩ ⊆ ⟨  ↑
⟨x⟩⟩ = .↑
⟨x⟩ and this contains a (and hence ⟨a⟩) be-

cause C-ideals are closed under covers.
Theorem 2.7 P together with the map η : P → P is
dcpo⟨P (qua preorder) | a ± . U whenever a a U ⟩.
Proof. Let D be a dcpo and f : P → D a monotone function that preserves covers. The composite function ↓ ◦f : P → Σ(D) also preserves covers and hence factors via a sup-lattice homomorphism f ' : C-Idl(P ) → Σ(D). In other words, we have the following commuting diagram
⊂	) C-Idl(P )

f '
↓	v
⊂	) Σ(D)
and the idea is to pull back f ' along ↓. For this note that the image of ↓ is a sub-dcpo of Σ(D) and since f ' preserves suprema, Xf := f '−1(↓(D)) is a sub-dcpo of C-Idl(P ). Because the diagram commutes, η(P ) is a subset of Xf and then the same is true for P . If follows that f ' can be restricted to P giving us a Scott- continuous map f '' from P to ↓(D) ⊆ Σ(D). Since ↓(D) is order-isomorphic to D, f := ↓−1 ◦ f '' is a Scott-continuous map from P to D with f = f ◦ η.
This is unique because if we had two such maps then their equalizer would be a sub-dcpo of P that includes P and hence equal to P .	 
It is worthwhile to point out that this result generalizes the usual ideal comple- tion of a preorder, which is obtained by letting the set of covers be empty. Similarly to the ideal completion it is true in the general case that although the empty set is always a C-ideal, it is never a member of P .

We conclude this section with the following result which will turn out to be the crucial ingredient in our study of dcpo algebra presentations.
Proposition 2.8 Let (Pi, и, Ci), i = 1,... , n, be a ﬁnite family of dcpo presenta-
  	∼
		

Proof. Certainly i Pi is a sub-dcpo of i C-Idl(Pi) that includes i η(Pi). Now suppose D is any such sub-dcpo. Suppose for some i (0 ≤ i ≤ n) we have

η(P1) × ··· × η(Pi) × Pi+1 × ··· × Pn ⊆ D.

This is certainly true for i = n. Let S = {a ∈ Pi | η(P1) × ··· × η(Pi−1) × {a}× Pi+1 × ··· × Pn ⊆ D}. S is a sub-dcpo of Pi that includes η(Pi), and hence is the whole of Pi. We deduce that η(P1) × ··· × η(Pi−1) × Pi × ··· × Pn ⊆ D, and it follows by induction on n − i that  i Pi ⊆ D.	 

Since the transition from P to P (with respect to a set C of covers) is the main operation in this paper, we give three alternative descriptions.

The d-topology
Consider the d-topology on a dcpo having sub-dcpos as its closed sets. 4 Then obviously P is just the d-closure of the image η(P ) in C-Idl(P ). The two noteworthy properties of the d-topology are that it is Hausdorff on any dcpo (as any set of the form ↓x is open and closed), and that a map between dcpos is Scott-continuous if and only if it is d-continuous and order-preserving.

The μ-topology
Recall Keye Martin’s μ-topology of a dcpo, generated by the subbasic open sets
↓x ∩ O with O a Scott-open subset, [7, Chapter 3]. Alternatively, μ is the join of the lower Alexandrov and the Scott topologies. 5 Like the d-topology, it is guaranteed to be Hausdorff on any dcpo, and for the same reason: every set of the form ↓x is open and closed. Scott-continuous functions are also μ-continuous; for the converse one needs to require monotonicity in addition to μ-continuity to get Scott-continuity, [7, Prop. 3.2.1].

Proposition 2.9 The smallest sub-dcpo P of a subset P of a dcpo D is contained in the μ-closure of P. Furthermore, for every element x ∈ P and Scott-open set O containing x there exists x' ∈ P with x' ∈ O and x' ± x.
Proof. For the supremum of a directed set A to belong to a subbasic μ-open set
↓x ∩ O, all elements of A must be below x. Because O is Scott-open, some element of A must meet it and this element will then be in ↓x∩O. This shows that D\(↓x∩O) is a sub-dcpo of D, and hence that P belongs to the μ-closure of P .	 

4 This appears to have been considered first by Oswald Wyler in [12].
5 Martin’s original definition was for continuous domains. In [8] it is defined for arbitrary posets as the topology generated by the Scott-open and the Scott-closed subsets but the result is the same.

The two need not be the same, even when the ambient dcpo D is continuous:
Example 2.10 Let D be the powerset of N. For the elements of P choose the set of Ai, i ∈ N where Ai = N \ {i}. These are pairwise incomparable, so the dcpo closure of P is P itself. On the other hand, every μ-neighbourhood of N, the largest element of PN, contains a subset ↑F with F a finite set. Clearly, ↑F contains almost all Ai, so N is in the μ-closure of P .

Iterated ideal completion
For every preorder P we have the ideal completion Idl(P ) consisting of directed lower sets of P . It is the free dcpo over P . Given a dcpo presentation (P ; и,C) we have the order-preserving map η : P → C-Idl(P ) which therefore factors through
the ideal completion Idl(P ): η = .↑◦↓. Let’s call the image P1. It is not necessarily
a sub-dcpo of C-Idl(P ) but the process can be repeated: the inclusion of P1 into C-Idl(P ) extends to a continuous map from Idl(P ) to C-Idl(P ). The image of this we call P2. And so on. At a limit ordinal λ we set Pλ := α<λ Pα. Eventually this sequence stabilizes at P .
Each of these descriptions is useful in its own way but we must leave open the general problem of finding an intrinsic characterization of those subsets of P that are elements of P .
Operations
For (P ; и,C) a dcpo presentation, we now show how a monotone operation on P can be lifted to a Scott-continuous operation on the presented dcpo P . As one may suspect, this will require a compatibility condition between the operation and the set of covers.
So let ω : Pn → P be an n-ary monotone operation on the preorder P . We say that C is stable for ω (or simply ω-stable) if for every 1 ≤ i ≤ n, ai a U in C, and a1,... , ai−1, ai+1,... , an  ∈ P , the cover ω(a1,... , an) a
{ω(a1,... , ai−1, x, ai+1,... , an) | x ∈ U } is also in C. All our results require sta- bility and so from now on this is always assumed even if it is not explicitly stated. The operation can be lifted to subsets in the obvious, pointwise fashion: For
Ai ⊆ P (1 ≤ i ≤ n) set
ω(A1,... , An) := {ω(a1,... , an) | ai ∈ Ai}.
Lifting it to C-ideals requires the application of the associated closure operator: if
Ii ∈ C-Idl(P ) (1 ≤ i ≤ n) set
ω(I1,... , In) := ⟨{ω(a1,... , an) | ai ∈ Ii}⟩.
Proposition 3.1 For any a1,... , ai−1, ai+1,... , an ∈ P and T ⊆ P the following holds
ω(a1,... , ai−1, ⟨T ⟩, ai+1,... , an) ⊆ ⟨ω(a1,... , ai−1,T, ai+1,... , an)⟩.

Proof. Let us write S for the right-hand side above, and let
T ' = {x ∈ P | ω(a1,... , ai−1, x, ai+1,... , an) ∈ S}.
By definition of S, we have T ⊆ T '. We show that T ' is a C-ideal. Suppose a a U is a cover in C and U ⊆ T '. By stability, ω(a1,... , ai−1, a, ai+1,... , an) a ω(a1,... , ai−1, U, ai+1,... , an), and since the right-hand side belongs to the C- ideal S, so does the left-hand side. It follows that a ∈ T ' and therefore ⟨T ⟩ ⊆ T '. 
Proposition 3.2 As a function from C-Idl(P )n to C-Idl(P ), ω preserves all joins in each argument.
Proof. Clearly, ω is monotone. Fixing some i, we must show
ω(I1,... , . Jλ,... , In) ± . ω(I1,... , Jλ,... , In).
λ	λ
Let us write K for the right-hand side. Then we must show
ω(I1,... , . Jλ,... , In) ⊆ K:
λ
in other words, if, for each j /= i, we have aj ∈ Ij, then
ω(a1,... , . Jλ,... , an) ⊆ K.
λ
Putting T =  λ Jλ in Proposition 3.1, we have
ω(a1,... , . Jλ,... , an) ⊆ ⟨ω(a1,... ,  Jλ,... , an)⟩

= ⟨  ω(a1,... , Jλ,... , an)⟩
λ
Since K is a C-ideal and trivially for each λ,
ω(a1,... , Jλ,... , an) ⊆ ω(I1,... , Jλ,... , In) ⊆ K.


we have
⟨  ω(a1,... , Jλ,... , an)⟩ ⊆ K
λ

which completes the argument.	 
As a corollary, ω preserves all directed joins in each argument, and hence is jointly Scott continuous, and hence Scott continuous.
Lemma 3.3 If Ai ⊆ P (1 ≤ i ≤ n) then
ω(⟨A1⟩,... , ⟨An⟩)= ⟨ω(A1,... , An)⟩.

Proof. That the right-hand side is included in the left-hand side is just monotonic- ity. For the other inclusion we apply Proposition 3.1 n times to get the chain of inequalities
ω(⟨A1⟩, ⟨A2⟩,... , ⟨An⟩) ⊆ ⟨ω(A1, ⟨A2⟩,... , ⟨An⟩)⟩ ⊆ ... ⊆ ⟨ω(A1,... , An)⟩
Applying the C-ideal closure operator to the leftmost and rightmost term gives the result.	 
Corollary 3.4 The map η : P → C-Idl(P ) is a homomorphism with respect to the operation ω, in other words, if a1,... , an ∈ P then
ω(η(a1),... , η(an)) = η(ω(a1,... , an)).
Proposition 3.5 ω maps Pn to P.
Proof. We must show that Pn ⊆ ω−1(P ). Since ω is Scott continuous, ω−1(P ) is a sub-dcpo of C-Idl(P )n, and by Corollary 3.4 it includes (η(P ))n. Hence by
n
Proposition 2.8 it includes P .	 
Theorem 3.6 Let D be a dcpo and let ωD : Dn → D be a continuous operation. Let further f : P → D be a monotone and cover preserving homomorphism with respect to ω. Then the extension f : P → D (deﬁned in the proof of Theorem 2.7) is also a homomorphism.
Proof. Consider the set
{(I ,... ,I ) ∈ Pn | ω (f (I ),... , f (I )) = f (ω(I ,... ,I ))}.
1	n	D	1	n	1	n

n
This is a sub-dcpo of P
because it is the equalizer of the two Scott-continuous

n
functions ωD ◦ f
and f
ω. It includes the image of Pn under ηn since


	
ωD(f (η(a1)),... , f (η(an))) = ωD(f (a1),... ,f (an)) (f is a homomorphism)	= f (ω(a1,... , an))
= f (η(ω(a1,... , an))) (Corollary 3.4)	= f (ω(η(a1),... , η(an)))

Hence it equals P .	 
From a topological point of view, we can say the following about the algebra P .

The d-topology
Since a function between dcpos is Scott-continuous if and only if it is monotone and d-continuous, it then follows from Proposition 3.2 that the extended operation ω is d-continuous in every argument. Although it is also jointly Scott-continuous, it need not be jointly d-continuous, however, since the d-topology on C-Idl(P )n may be weaker than the product topology. This is nevertheless sufficient for us

because a function f : Xn → Y that is only continuous in each argument, still satisfies f (cl(An)) ⊆ cl(f (An)) for all A ⊆ X. We apply this observation to the subalgebra η(P ) of C-Idl(P ) and conclude that P , the d-closure of η(P ) is also a subalgebra. 6

The μ-topology
As with the d-topology, we get from Proposition 3.2 that the operation ω is μ-continuous in each argument on C-Idl(P )n. Hence the μ-closure P of η(P ) is also a subalgebra. By Proposition 2.9 it contains P .

Inequations
We are ready to embark on the main result of this paper, namely, that the free dcpo algebra P satisfies all inequations that are valid in the preordered algebra P . The setting is slightly more general than in the previous section: we assume we are given a dcpo presentation (P ; и,C) and a signature Ω of operation symbols, each of finite arity. We further assume that P is a preordered Ω-algebra, which means that for every ω ∈ Ω with arity n a monotone map ωP : Pn → P has been specified. (Below we will no longer distinguish between the function symbol ω and the concrete operation ωP .) We also assume that C is stable with respect to all operations ωP , ω ∈ Ω.
Definition 4.1 For Ω a set of function symbols, an inequation is a first-order for- mula of the form (∀x)t1 ± t2, where t1 and t2 are Ω-terms whose variables all appear in the vector x.
The notion of algebra (model) for an inequational theory can be defined in any preorder-enriched category with products. For the purposes of this paper, we are interested in the categories Pre (of preorders) and dcpo.
Proposition 4.2 Let (P ; и, Ω) be a preordered Ω algebra and C a set of covers
 ∼	и
stable for all ω ∈ Ω. Let P be the dcpo algebra presented by (P ; ∼,C) with Scott-
continuous operations ω (ω ∈ Ω) as deﬁned in the previous section. Then any
inequation that is valid in P also holds in P.
Proof. Let (∀x)t1 ± t2 be an inequation that is valid in P . The terms t1 and t2
define n-ary monotone operations on P , hence extend to n-ary Scott-continuous
n
operations t1, t2 on P by Proposition 3.5. The set X of tuples a in P	for which
t (a) ± t (a) holds, is a sub-dcpo of Pn. It includes (η(P ))n because the inequation
1	2
holds in P and η is a monotone homomorphism by Corollary 3.4. By Proposition 2.8,
n
X is the whole of P .	 
Note that the analogous statement for the ambient algebra C-Idl(P ) is false in general. An example is easily given. Let P be trivially ordered and carry a binary operation that satisfies x∗x = x; let the set C of covers be empty. The set of C-ideals

6 We acknowledge the anonymous referee who pointed out a gap in our original argument.

consists of all subsets of P . Clearly, forming the product A ∗ A of a subset A ⊆ P
with more than one element may contain elements not belonging to A.
Definition 4.3 For Ω a set of function symbols, an inequational theory is simply a set E of inequations over Ω. A preordered algebra supporting all operations in Ω is called a (Ω, E)-algebra if it satisfies the inequations in E. We often abbreviate the pair (Ω, E) to T.
Theorem 4.4 Let T = (Ω, E) be an inequational theory and P a preordered T- algebra. Let C be a set of covers stable for all operations in Ω. Then η : P → P makes P freely generated as a dcpo-T-algebra that respects the T-algebra structure of P and preserves the C-covers.

Proof. That P is a dcpo-T-algebra follows from the preceding proposition. Freeness was shown in Theorem 3.6.	 
The phenomenon reported in this theorem was first noted by Abramsky and Vickers for a special algebraic theory; it is the essence of their “coverage theorem” in [2]. We believe that it is the “general unifying account” that is asked for in [11, page 301]. We will examine how the various coverage theorems in the literature follow from it in Section 6 below. In the remainder of the present section we indicate how Theorem 4.4 could have been established by other means.

The d-topology
C-Idl(P ) is almost a topological algebra with respect to the d-topology, except that in general the operations are only continuous in each argument. This is suf- ficient, however, to conclude that the inequations that hold in η(P ) also hold in cl(η(P )) = P because the d-topology is Hausdorff.

The μ-topology
The μ-topology is also Hausdorff and hence the closure P of η(P ) with respect to it yields a subalgebra that also satisfies the inequations holding in P but in general is larger than P . This shows that P can not be characterized as the largest extension of η(P ) belonging to the same variety as P .

Iterated ideal completion
Yet another way to establish our main theorem is via the transfinite genera- tion process described at the end of Section 2. One first shows the following result directly (rather than relying on the fact that it is the special case C = ∅ in Propo- sition 4.2):
Proposition 4.5 An inequational law that is valid in P also holds in Idl(P ).
Then it is easy to see that inequations are preserved at every stage of the trans- finite process.

Extensions
The phenomenon we are reporting in this paper is very robust and can be extended in a number of ways. First of all, the restriction to single-sorted algebras was purely for the sake of expository simplicity — the results of sections 3 and 4 hold equally well in the many-sorted case. Of course, one then deals with a dcpo presentation for each sort separately.
More interesting is the case where we are given an operation that takes values in Idl(P ) rather than P . This situation arises frequently in domain theory and also in the “flat site” coverage theorem at the end of this paper. We show how this case can be reduced to the standard one, so let ω : Pn → Idl(P ) be a monotone map. By
setting
ω'(A) :=  {ω(a) | a ∈ A}
we obtain a monotone operation of the usual kind on the ordered set Idl(P ). The idea is now to complete Idl(P ), rather than P itself. We lift the given set C of covers to a set C' of covers on Idl(P ) through the following two rules:


(a a U ) ∈ C
(↓a a {↓U }) ∈ C' (lift)
A = .↑Ai in Idl(P )
		i∈I	 (cont) (A a {Ai | i ∈ I}) ∈ C'

Proposition 5.1 The dcpo P presented by (P ; и,C) is isomorphic to Idl(P ) pre-
sented by (Idl(P ); ⊆,C').

Proof. We show that Idl(P ) has the required extension property. Consider the following diagram:






where we assume that D is a dcpo and f preserves covers. The function f ' is the unique Scott-continuous map for which f = f ' ◦ ↓. We show that it preserves the covers in C'. For covers created by the (lift)-rule, we compute:

f '(↓a) = f (a)
(f preserves covers in C) ± .↑{f (x) | x ∈ U }
= .↑{f (x) | x ∈ ↓U }
= .↑{f '(↓x) | x ∈ ↓U }
(f ' is continuous) = f '(.↑{↓x | x ∈ ↓U })
= f '(↓U )

Covers created by the (cont)-rule are preserved because f ' is continuous. It follows that the extension f ' exists and satisfies

f ' ◦ (η ◦ ↓)= f ' ◦↓ = f

If we had another continuous map g : Idl(P ) → D with g ◦ (η ◦ ↓) = f , then g ◦ η would be another continuous map into D extending ↓ and so would have to be equal to f '. (Here we are using that η is Scott-continuous, which is enforced by the covers created through the (cont)-rule.) However, g ◦ η = f ' forces g = f ' by the universal property of Idl(P ).	 
In order to apply our theory of Section 3 we need to find a suitable requirement on C that ensures that C' is ω'-stable. Since ω' is Scott-continuous, stability for the covers created by the (cont)-rule is automatic.
Ensuring stability for the covers created by the (lift)-rule would lead to an awkward condition on ω, but luckily, the situation becomes much more malleable through the following concept:
Definition 5.2 For C a set of covers on a preorder (P ; и) define the satura-
tion sat(C) of C by the following rules:

(a a U ) ∈ C


(a a U ) ∈ sat(C)

(inc)
 a' и a	(a a U ) ∈ sat(C)	↓U ⊆ ↓U '
(mon)
(a' a U ') ∈ sat(C)



(a a U ) ∈ sat(C)	∀b ∈ U.(b a V ) ∈ sat(C) (a a V ) ∈ sat(C)
(trans)

It is clear that a monotone function that preserves the covers in C also preserves those in the saturation, and therefore that (P ; и,C) and (P ; и, sat(C)) present the
∼	∼
same dcpo P .
Definition 5.3 Let ω : Pn → Idl(P ) be a monotone operation. A set of covers C is called ω-stable if whenever we have p ∈ ω(a1,... , an) and ai a U belongs to C, then p a U ' for some U ' ⊆ ω(a1,... , U,... an).
Proposition 5.4 If C is ω-stable for ω : Pn → Idl(P ) then sat(C') is ω'-stable for
ω' : Idl(P )n → Idl(P ).
Proof. Let ↓a a {↓U } be a cover in C' created by the (lift)-rule. Given any vector of directed ideals A1,... , Ai−1, Ai+1,... , An we need to show that
ω'(A1,... , ↓a,... , An) a ω'(A1,... , ↓U,... , An)
belongs to sat(C'). This will follow from (cont) and (trans) if we can show
↓p a ω'(A1,... , ↓U,... , An)
for every p ∈ ω'(A1,... , ↓a,... , An) =  a ∈A ω(a1,... , a,... , an). However, by
ω-stability of C we have p a U ' for some directed set U ' ⊆ ω(a1,... , U,... , an) ⊆

ω'(A1,... , ↓U,... , An) and the desired cover belongs to sat(C') by rules (mon), (lift), and (cont).	 
To complete the translation from P to Idl(P ) observe that if an inequation (∀x)t1 ± t2 is valid in P then it also holds in Idl(P ). By the extension Theorem 4.4 it will then also hold in the presented dcpo-algebra Idl(P ).

Applications
Quotients and colimits in DCPO
Given a dcpo D we may wish to force certain inequalities to hold. The results of Section 2 show how this can be done, namely by collecting the inequations into a set of covers C, but they also show that the process of forming the quotient is non-trivial; this is because the naive (preorder) quotient may contain directed sets that did not exist before.
One application of quotienting is the construction of the coequalizer in DCPO. Coproducts are just disjoint unions, so together we have a fairly concrete description of colimits in DCPO.

Free dcpo algebras
Let T be an inequational theory. One of our main results, Theorem 4.4, shows that from a T-algebra (P ; и) in Pre, equipped with a dcpo presentation that is stable for the operations in T, the dcpo P presented is a free T-algebra in dcpo over P . In this section we shall use the result to construct, given a dcpo D, a free T-algebra over D in dcpo. In other words, we are constructing a left adjoin to the forgetful functor AlgT(dcpo) → dcpo. (For simplicity we are assuming here that T is single-sorted. However, the extension to many-sorted theories is easy. It will give a left adjoint to the forgetful functor AlgT(dcpo) → dcpoSort, where Sort is the set of sorts for T.)
Let D be a dcpo. We shall assume D is presented as P for some given dcpo
presentation (P ; и,C). In a sense this is unnecessary, since D has a canonical presentation in which P = D and C has a cover for every directed subset of D. However, there is some advantage in knowing how the construction can be made in terms of presentations. We proceed in a number of steps.
First, let PT be the term algebra, the set of all terms made from elements of P
and operators in T.
Second, let и be the smallest congruence preorder on PT that includes и and
satisfies the inequational laws in T. By congruence preorder, we mean a preorder
with respect to which the operations are monotone. That is to say, if b и	c
и	∼T
then ω(a1,... , b,... , an) ∼T ω(a1,... , c,... , an) for any operator ω and elements
ai. (PT; и ) is a T-algebra in Pre.
Third, let CT be the smallest dcpo presentation on PT that includes C and is stable for all the operators in T.

Theorem 6.1 Let (PT, и
, CT) be as above. Then P T is the free dcpoT-algebra

over D.

Proof. Let E be a dcpoT-algebra, and let f : D → E be a continuous map. By definition of dcpo presentation, f is equivalent to a monotone, cover-preserving function f : P → E. This extends uniquely to a homomorphism fT : PT → E. The
inverse image of ±E is a congruence preorder on PT that includes и and satisfies
~	и
the inequational laws in T, and it follows that fT is monotone with respect to ∼T.
Similarly, by considering those pairs (a, U ) ∈ PT × PPT, with U directed, such that
fT(a) ± .↑	fT(u), we see that fT preserves the CT-covers. Hence by Theorem 4.4
fT extends uniquely to a homomorphism f T : P T → E.	 

Coverage theorems

The content of Theorem 4.4 is that it shows that the same structure (P ) can be presented by generators and relations in two different ways: either as a dcpo,
dcpo⟨P | a ±  ↑ U (a a U )⟩
or as a dcpo-T-algebra,
dcpoT⟨P (qua T-algebra) | a ±  ↑ U (a a U )⟩.
Presenting as a dcpo-T algebra would, other things being equal, create a larger structure since all the T-terms have to be generated. But this is compensated for by the “qua T-algebra”, in effect extra relations, which constrain the newly generated terms to relate to what already exists in P .
This is the typical pattern of the “coverage theorems” known from locale theory. In fact the underlying question is seen more widely in mathematics. One example from ring theory is the basic property of ideals. If R is a ring and I an ideal, then we have
Ring⟨R (qua ring) | a =0 (a ∈ I)⟩
∼= Ab⟨R (qua Abelian group) | a =0 (a ∈ I)⟩.
The ideal property RIR ⊆ I may be seen as a “multiplication stability” of the subgroup I.
The original locale-theoretic coverage theorem is that of [5], which describes the construction of the frame of C-ideals on a site, a meet-semilattice equipped with a meet-stable coverage (not necessarily a dcpo presentation). It was also shown that the frame of C-ideals was freely generated over the semilattice, with respect to transforming covers to joins. In fact the constructions there underlie much of the present paper. However, something that was not explicit in [5] was the fact that, even without the meets structure, the set of C-ideals could be presented as a sup-lattice (complete join semilattice). This was stated and exploited in [2]. If

(S, C) is the site, then
Fr⟨S (qua ∧ -semilattice) | a ±  U (a a U )⟩
∼= SupLat⟨S (qua poset) | a ±   U (a a U )⟩,
with both isomorphic to the set of C-ideals. There are two directions in which this can be used. One is that if a frame is presented by generators and relations (in other words, it is the Lindenbaum algebra for a propositional geometric theory), then the presentation can be manipulated into site form and then the result shows how to define sup-lattice homomorphisms from the frame. This was particularly useful in the context of [2], which involved quantales and modules over them, which are sup-lattices but not frames in general. The other direction was that it shows how to generalize the coverage theorem to get presentations for structures other than frames, specifically quantales and their modules.
A specific aspect of the technique is that once the existence of the sup-lattice SupLat⟨S (qua poset)| a ± U (a a U )⟩ is known, one can forget its concrete representation as a set of C-ideals. Its universal property as sup-lattice can be used to define meet on it as a bilinear (with respect to joins) operation, and then show that the operation gives meet with respect to the sup-lattice order. This is similar to the way in which we here extend operations from the preorder to the dcpo.
In [6] those same ideas were developed with sup-lattices replaced by preframes – a preframe is a dcpo with finite meets, binary meet distributing over directed joins. It was shown how frame presentations in a certain form could be reduced to preframe presentations. This time, the set of generators was a join-semilattice. The relations were all of the form S ≤ ↑ Ti, with a certain join-stability property. Again, once the presented preframe was known to exist (this was a substantial result of the paper), its frame structure could be proved from the universal properties.
[11] combines those “sup-lattice” and “preframe” coverage theorems to prove a “double” coverage theorem that relates frame presentations to dcpo presentations. In fact it is a direct corollary of our Theorem 4.4.
[11] summarizes the coverage theorems in a cubical diagram

Each arrow here represents a forgetful functor that has a left adjoint, a free algebra functor. Note that some of the arrows are between finitary theories, and there are already non-trivial coverage theorems for those. However, our main Theorem, 4.4, is about dcpos and the coverage theorems for the central square.
Immediate applications
The following two results in [11] are immediate corollaries of Theorem 4.4. Note that [11] deals with equations: each “directed relation” is an equation between two joins of directed families. Our inequational form is normally more general, but in the case of semilattices each inequation can be expressed as an equation.
Proposition 6.2 Let P be a join semilattice and R a join-stable set of directed relations on it. Then
Sup⟨P (qua ∨ -SemiLat) | R⟩ ∼= dcpo⟨P (qua poset) | R⟩.
Proof. [11] says, “The standard technique applies.” What is meant by this is that once the RHS is known to exist then its universal property can be used to define ∨. The task then is to show that the operation so obtained turns the RHS into a sup-lattice, and to prove the sup-lattice universal property required by the left-hand side. Our Theorem 4.4 works differently; the operation ∨ on P extends to an operation ∨ for the general reasons explained in Section 3, and it satisfies all inequations that ∨ satisfies. This is enough to show that ∨ is the sup-operation on the ordered set P , or more precisely, that A ⊆ B holds if and only if A∨B = B for all C-ideals A, B ∈ P .
Assume A ⊆ B. Then A∨B ⊆ B∨B = B by monotonicity and idempotence, and B ⊆ A∨B holds because it holds for ∨ on P .
Conversely, assume A∨B = B. Then A ⊆ A∨B = B, again using that (∀x, y)x ≤
x ∨ y holds in the sup-lattice P .	 
Theorem 6.3 (Double Coverage Theorem) If (P, R, ...) is a DL-site, then
Fr⟨P (qua DL) | R⟩ ∼= dcpo⟨P (qua poset) | R⟩
Proof. “DL-site” means that P is a distributive lattice and each relation in R is in the form of an equation between two joins of directed families in P . Moreover, the equation set is join- and meet-stable. Each equation can be expressed as a pair of inequations, so the whole site can be rephrased as a join- and meet-stable dcpo presentation.
The order on P is linked to the join operation as in the previous proposition, and to meet by equations. Hence the order on P is linked to ∨ as before and also to ∧ because the equations are preserved.	 
Proposition 6.4 Let P be a meet semilattice and R a meet-stable set of directed relations on it. Then
PreFr⟨P (qua ∧ -SemiLat) | R⟩ ∼= dcpo⟨P (qua poset) | R⟩.



Proof. The proof that the order on P is given by ∧ is analogous to the one given for ∨ above.	 
As a corollary of Proposition 6.2, we get the following. It illustrates a typical technique of expanding the generator set with operations that are preserved, and expanding the relation set to ensure stability.
Corollary 6.5 Let P be a preorder and C a coverage on it (not necessarily di- rected). Then
Sup⟨P (qua preorder) | a ±  U (a a U)⟩
is isomorphic to


dcpo⟨FP (qua и
-preorder) |

B ∪ {a}±  ↑{B ∪ U ' | U ' ∈ FU } (B ∈ FP, a a U)⟩.


Here FP is the ﬁnite powerset, and the lower preorder и is deﬁned by A и
B if

∼L	∼L
for every a ∈ A there is some b ∈ B with a и b.
Proof. One first shows that Sup⟨P (qua preorder)| a ±  U (a a U )⟩ is isomorphic to
SupLat⟨FP (qua ∪ -semilattice) |
B ∪ {a} ±  ↑{B ∪ U ' | U ' ∈ FU } (B ∈ FP, a a U )⟩.
This uses straightforward calculations with presentations. In one direction a maps to {a}, while in the other A maps to A. The relations are ∪-stable, and then Proposition 6.2 can be applied.	 

The standard coverage theorems
The original coverage theorem was that if (S, C) is the site, then
Fr⟨S (qua ∧ -semilattice) | a ±  U (a a U )⟩
∼= SupLat⟨S (qua poset) | a ±   U (a a U )⟩.
Using Corollary 6.5, the RHS can be reduced to a dcpo presentation in which the
generators are FP preordered by и . These already form a distributive lattice,
with A ∧ B = {a ∧ b | a ∈ A, b ∈ B}, and this allows us to deduce by the same means that the dcpo presented can be given a frame presentation, which can then be proved isomorphic to the LHS.
[6] proves a preframe coverage theorem.
Theorem 6.6 Let S be a ∨-semilattice, and let R be a set of preframe relations of
the form  A ±  ↑	  Bi, where the Bis form a directed family with respect to the
и	i∈I и
upper order ∼U . (A ∼U B if for every b ∈ B there is some a ∈ A with a ± b.)

Suppose also that the set of relations is ∨-stable, in the sense that if  A ±  ↑
  Bi

is in R, and x ∈ S, then the relation
{x ∨ y | y ∈ A}±	↑
i∈I


  {x ∨ y | y ∈ Bi}

is also in R. Then
Fr⟨S (qua ∨ -semilattice) | R⟩ ∼= PreFr⟨S (qua poset) | R⟩.
Proof. We have PreFr⟨S (qua poset)| R⟩ ∼= PreFr⟨FS (qua ∪ = ∧-semilattice)|
R⟩, and FS/ и is a distributive lattice. The preframe presented is in turn isomor-
phic to




PreFr⟨FS (qua ∪ = ∧-semilattice) | C ∪   Aj
j=1
m
↑
ij
j=1
| ij

∈ Ij}

(C ∈ FS,  Aj
±	↑
i∈Ij
  Bi
in R⟩,

and the relations here are both ∧-stable and ∨-stable. We can now use Theorem 4.4 to see that


dcpo⟨FS (qua и


-preorder) | C ∪  Aj
j=1
m
↑
ij
j=1
| ij

∈ Ij}

(C ∈ FS,  Aj
±	↑
i∈Ij
  Bi
in R⟩

is isomorphic both to the preframe presented above and to the frame




Fr⟨FS (preserving ∪ and ∧ ) | C ∪   Aj
j=1
m
↑
ij
j=1
| ij

∈ Ij}

(C ∈ FS,  Aj
±	↑
i∈Ij
  Bi
in R⟩


which in turn is isomorphic to Fr⟨S (qua ∨-semilattice)| R⟩.	 

Flat sites
We discuss here the original sup-lattice coverage theorem in a slightly generalized form.
A flat site is defined in [10] as a triple (P, и, a0) where (P, и) is a preorder and
~	и	∼
a0 is a subset of P × PP such that if a a0 U and b ∼ a, then b a0 V for some
V ⊆ b ↓ U . (We write A ↓ B for (↓ A) ∩ (↓ B), ↓ A for the down-closure of A.)
In fact, this is just re-notation for the inductively generated formal topologies

of [3]. Each flat site presents a frame Fr⟨P, и, а0⟩, defined as
Fr⟨P (qua preorder) | 1 ±   P
a ∧ b ±  (a ↓ b)
a ±  U (a а0 U )⟩.
This generalizes the [5] notion of site, though in a way that is already understood from the way Grothendieck topologies are used in topos theory. If P is a meet- semilattice then the condition on the coverage is equivalent to meet stability, and the first two relations given, together with “qua preorder”, are equivalent to preservation of finite meets of P .
Theorem 6.7
Fr⟨P, и, а0⟩ ∼= SupLat⟨P (qua preorder) | a ±  U (a а0 U)⟩.
Proof. By Corollary 6.5, the RHS in the statement is isomorphic to


dcpo⟨FP (qua и
-preorder) |

B ∪ {a}±  ↑{B ∪ U ' | U ' ∈ FU } (B ∈ FP, a а
U )⟩.



FP is already a semilattice, with ∪ providing a join with respect to и
. But it

also has a meet operation ∧ : FP × FP → Idl(FP ),
A ∧ B = {S ∈ FP | (∀s ∈ S)(∃a ∈ A)(∃b ∈ B)s ∈ a ↓ b}

= {S ∈ FP | S и
A, S и
B}.

Extending these to operations on Idl(FP ), we find they make it a distributive lattice.
Notably, A∧(B1∨B2)= (A∧B1)∨(A∧B2). For if S и A and S и B1∪B2 then we
и	∼L	∼L
can find S = S1 ∪S2 with Si ∼L Bi, and this suffices to show S ∈ (A∧B1)∨(A∧B2).
The coverage as it stands is obviously ∨-stable. However, for ∨-stability we shall need to extend it. By induction on n one sees that the dcpo as presented is isomorphic to
dcpo⟨FP (qua и -preorder) |
n
B ∪ {a ,... ,a }±  ↑{B ∪ U ' | U ' ∈ F(  U )}
1	n	i
i=1
(B ∈ FP, n ≥ 0, ai а0 Ui for 1 ≤ i ≤ n)⟩.
This is still ∨-stable. For ∧-stability, suppose we have B ∪ {a1,... , an} а {B ∪ U ' |

U ' ∈ F(  n
Ui)}, deriving from B ∈ FP and ai а0 Ui. Suppose S ∈ C ∧ (B ∪
и

{a1,... , an}) = (C ∧ B) ∨ (C ∧ {a1,... , an}), so S = S1 ∪ S2 with S1 ∼L B and
и {a1,... , an}. If S2 = {b1,... , bm} then for each j we have bj и ai for some

i, so bj a0 Vj ⊆ bj ↓ Ui. Then
m	n
{B ∪ V ' | V ' ∈ F(  Vj)}⊆ C ∧ {B ∪ U ' | U ' ∈ F(  Ui)}
j=1	i=1
as required for ∧-stability.
We can now apply Theorem 4.4 to see that this dcpo is isomorphic to
Fr⟨FP (qua и  -preorder) | ∨, ∧ , 1 and 0 preserved,
n
B ∪ {a ,... ,a }±  ↑{B ∪ U ' | U ' ∈ F(  U )}
1	n	i
i=1
(B ∈ FP, n ≥ 0, ai a0 Ui for 1 ≤ i ≤ n)⟩,
which in turn is isomorphic to Fr⟨P, и, a0⟩.	 

References
Abramsky, S. and A. Jung, Domain theory, in: S. Abramsky, D. M. Gabbay and T. S. E. Maibaum, editors, Semantic Structures, Handbook of Logic in Computer Science 3, Clarendon Press, 1994 pp. 1–168.
Abramsky, S. and S. Vickers, Quantales, observational logic and process semantics, Mathematical Structures in Computer Science 3 (1993), pp. 161–227.
Coquand, T., G. Sambin, J. Smith and S. Valentini, Inductively generated formal topologies, Annals of Pure and Applied Logic 124 (2003), pp. 71–106.
Hennessy, M. C. B. and G. D. Plotkin, Full abstraction for a simple parallel programming language, in:
J. Be¸cvar, editor, Mathematical Foundations of Computer Science, Lecture Notes in Computer Science
74 (1979), pp. 108–120.
Johnstone, P., “Stone Spaces,” Number 3 in Cambridge Studies in Advanced Mathematics, Cambridge University Press, 1982.
Johnstone, P. and S. Vickers, Preframe presentations present, in: A. Carboni, M. Pedicchio and
G. Rosolini, editors, Category Theory – Proceedings, Como 1990, number 1488 in Lecture Notes in Mathematics (1991), pp. 193–212.
Martin, K., “A Foundation for Computation,” Ph.D. thesis, Tulane University (2000).
Martin, K. and P. Panangaden, A technique for verifying measurements, in: A. Bauer and M. Mislove, editors, 24th Conference on Mathematical Foundations of Programming Semantics, Electronic Notes in Theoretical Computer Science (2008).
Plotkin, G. D. and J. Power, Computational effects and operations: an overview, in: M. Escardo´ and A. Jung, editors, Proceedings of the Workshop on Domains VI, Electronic Notes in Theoretical Computer Science 73 (2004), pp. 149–163.
Vickers, S., Compactness in locales and in formal topology, Annals of Pure and Applied Logic 137
(2006), pp. 413–438.
Vickers, S. and C. Townsend, A universal characterization of the double powerlocale, Theoretical Computer Science 316 (2004), pp. 297–321.
Wyler, O., Dedekind complete posets and Scott topologies, in: B. Banaschewski and R.-E. Hoffmann, editors, Continuous Lattices, Lecture Notes in Computer Science 871 (1981), pp. 384–389.
