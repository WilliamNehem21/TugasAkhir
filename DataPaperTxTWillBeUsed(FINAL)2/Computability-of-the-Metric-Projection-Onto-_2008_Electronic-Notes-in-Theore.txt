

Electronic Notes in Theoretical Computer Science 221 (2008) 45–60
www.elsevier.com/locate/entcs

Computability of the Metric Projection Onto Finite-dimensional Linear Subspaces
Ruth Dillhage1
Computability & Logic Group Department of Mathematics and Computer Science
University of Hagen Hagen, Germany
Vasco Brattka2
Laboratory of Foundational Aspects of Computer Science Department of Mathematics & Applied Mathematics University of Cape Town, South Africa

Abstract
We show that given a computable Banach space X and a finite-dimensional subspace U of X the set of elements of best approximation of x ∈ X (by elements of U ) can be computed as a compact set with negative information. If X is uniformly convex, we can even compute the (unique) element of best approximation. Furthermore, given a uniformly convex computable Banach space X the mapping U '→ PU that maps each finite dimensional linear subspace to the corresponding (single-valued) metric projection is computable.
Keywords: Computable functional analysis, best approximation, metric projection.


Introduction
In approximation theory the problem of best approximation can also be studied using the methods of functional analysis [10]. In this paper we will study some parts of the problem of best approximation in Banach spaces by elements of closed convex sets and by elements of finite-dimensional linear subspaces from the view of computable analysis using the representation based approach of Weihrauch [11].
Given a normed space X the problem of best approximation is the problem of finding, for a given subset G ⊆ X and a point x ∈ X, a point g0 ∈ G that is the

1 Email: Ruth.Dillhage@FernUni-Hagen.de
2 Email: Vasco.Brattka@uct.ac.za

1571-0661© 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2008.12.006

nearest point to x among all elements of G, that is


 x − g0  = inf
g∈G
x − g  = dist(x, G)	(1)

where dist(x, G) denotes the distance between a point x ∈ X and a subset G ⊆ X. In general the existence of such an element g0 is not guaranteed nor has it to be unique since every element of G with the property of equation (1) is an element of best approximation of x in G. Therefore, by PG(x) we denote the set of all elements of best approximation of an element x ∈ X in a subset G ⊆ X, that is


PG(x) := {g0 ∈ G | x − g0  = inf
g∈G
 x − g  } = {g0 ∈ G | x − g0  = dist(x, G)} .

Then g0 is an element of best approximation of x in G if and only if g0 ∈ PG(x). For a given subset G and an element x, the set PG(x) may be empty or have got more than one element.  If X is an uniformly convex Banach space and G a closed convex subset of X then PG(x) consists of exactly one element for all x ∈ X. In this case a single-valued total function PG : X → X can be defined by PG(x) := g0 : ⇐⇒ PG(x) = {g0}. PG maps each element of X to its uniquely defined best approximation in G. PG is called the metric projection onto G.
In this paper we will present some conditions under that the mappings G → PG
and G → PG become computable in some sense defined later.
The problem of best approximation has also extensively been studied in con- structive analysis. We mention, in particular, the results in [6], [7], [1, pp. 309–313], and [5, pp. 88–92]. It seems that our Theorem 4.5(i) and Corollary 6.1 could also be derived from those results via realizability theory. However, we are not aware of any counterpart of Theorem 5.2 and Theorem 6.2 in constructive analysis.
In the next section we briefly define some concepts from computable analysis that we will need to present our results. In section 3 we formulate some technical results about finite linear combinations and linear independence that we use in the following sections. In section 4 we define a representation of finite-dimensional subspaces that is used to present the computability results about best approximation in finite-dimensional subspaces. Furthermore, we compare our representation with further representations for finite-dimensional subspaces that can be derived from known representations for closed subsets. In section 5 we present a first result about the computability of the metric projection in case of closed convex subsets. In section 6 we prove some better results about the computability of PG(x) and PG(x) for finite-dimensional linear subspaces G, which are special closed convex subsets. In the last section we briefly summarize our result about the computability of the metric projection.

Computable Banach Spaces
In this section we briefly define some concepts from computable analysis. Com- putability on Banach spaces is extensively studied by Pour-El and Richards in their

book [9]. We will study this subject using the representation based approach to computable analysis of Weihrauch [11]. The representation based approach is es- sentially compatible to the sequential approach of Pour-El and Richards, but it can more flexibly be adapted to higher degrees of uniformity. We refer the reader to
[11] for all concepts that are left undefined here. In the following we assume that Banach spaces are defined over the field F, which might either be R or C.
Definition 2.1 [Computable Banach space] A computable normed space (X,  , e) is a separable normed space (X,  ) together with a fundamental sequence e : N → X (that is the linear span of range(e) is dense in X) such that the induced metric space is a computable metric space. A computable Banach space is a computable normed space that is a Banach space, that is complete.

The induced computable metric space is the space (X, d, αe) where d is given by
d(x, y) :=  x−y  and αe : N → X is defined by αe⟨k, ⟨n0,..., nk⟩⟩ := Σk	αF(ni)ei.
Here αF is a standard numbering of QF where QF = Q in case of F = R and QF = Q[i] in case of F = C. We assume that there is some n ∈ N with αF(n) = 0. The linear operations (vector space addition and scalar multiplication) are automatically computable for any computable normed space.
In general, a space (X, d, α) is called a computable metric space, if (X, d) is a metric space with a dense sequence α such that d ◦ (α × α) is a computable double sequence. If not mentioned otherwise, then we assume that all computable Banach spaces X are represented by their Cauchy representation δX (of the induced metric space). The Cauchy representation δX :⊆ Σω → X of a computable metric space X is defined such that a sequence p ∈ Σω represents a point x ∈ X, if it encodes a sequence (α(ni))i∈N, which rapidly converges to x, where rapid means that d(α(ni), α(nj)) < 2−j for all i > j. Here Σω denotes the set of infinite sequences over some finite set Σ (the alphabet ) and Σω is endowed with the product topology with respect to the discrete topology on Σ.
In general a representation of a set X is a surjective map δ :⊆ Σω → X. Here the inclusion symbol “⊆” indicates that the corresponding map might be partial. Given representations δ :⊆ Σω → X and δ' :⊆ Σω → Y , a map f :⊆ X → Y is called (δ, δ')-computable, if there exists a computable map F :⊆ Σω → Σω such that δ'F (p) = fδ(p) for all p ∈ dom(fδ). Analogously, one can define computability for multi-valued functions f :⊆ X ⇒ Y . In this case the equation above has to be replaced by the condition δ'F (p) ∈ fδ(p). Here a function F :⊆ Σω → Σω is called computable if there exists a Turing machine which computes F . Similarly, one can define the concept of continuity with respect to representations, where the computable function F is replaced by a continuous function.
Cauchy representations of computable metric spaces X are known to be admissi- ble and for such representations continuity with respect to representations coincides with ordinary continuity. If X, Y are computable metric spaces, then we assume that the space C(X, Y ) of continuous functions f : X → Y is represented by [δX → δY ], which is a canonical function space representation. This representation satisfies two characteristic properties, evaluation and type conversion, which can be performed

computably (see [11] for details). If Y = F, then we write for short C(X) = C(X, F).
We say that a representation δ is computably reducible to another representation δ' of the same set, in symbols δ ≤ δ', if there is a computable function F :⊆ Σω → Σω such that δ(p) = δ'F (p) for all p ∈ dom(δ). This is equivalent to the fact that the identity id : X → X is (δ, δ')-computable. Two representations are said to be computably equivalent, if they are mutually computably reducible to each other, in symbols δ ≡ δ'.
In the following we have to deal with closed and compact subsets of normed and metric spaces. Given a metric space X we denote the set of all closed subsets of X by A(X) and the set of all compact subsets of X by K(X). To represent these spaces we use the representations for closed and compact subsets of metric spaces that are defined and studied by Brattka and Presser in [4].

For closed subsets, we will use the representations δ>
<
dist
=
dist
, which

represent closed subsets by their distance functions with negative, positive, and full information, as well as the representations δrange, which represents a closed subset by a dense sequence, and δfiber, which represents a closed subset by a total function such that the set is the preimage of {0}. For compact subsets, we will use the representations δcover and δmin-cover, which represent a compact subset by all finite “rational” covers of the set and by all minimal finite “rational” covers of the set, respectively. For further information about these representations we refer the reader
to [4].
If X and Y are normed spaces, we denote the set of all bounded linear operators from X to Y by B(X, Y ) and assume B(X, Y ) is represented as subset of C(X, Y ) by the restriction of [δX → δY ] to B(X, Y ). By SX (a, r) we denote the sphere in X with center a ∈ X and radius r ≥ 0. By BX (a, r) we denote the corresponding closed ball. In case of a = 0 and r = 1, we denote the unit sphere and closed unit ball by SX and BX , respectively.

Linear Combinations and Linear Independence
In this section we summarize some results about finite linear combinations and linear independence that we need in the following sections. To formulate our results, we first introduce two representations for finite tuples and functions on finite tuples.
Given a represented 3  space (X, δ), we denote the set of all finite tuples
(x1,..., xk) for some k ∈ N and x1,..., xk ∈ X by X∗ =  n∈N Xk. We equip X∗ with the canonical representation δ∗ that represents an element (x1,..., xk) of X∗ by the number k of elements and a name of the tuple as an element of Xk.
Definition 3.1 [Finite tuples] Let (X, δ) be a represented space. By

X∗ :=		Xk k∈N

3 In the following this will usually be a metric or normed space with the corresponding Cauchy represen- tation.

we denote the set of all finite tuples over X. We equip X∗ with the representation
δ∗ :⊆ Σω → X∗ defined by
δ∗⟨p, q⟩ = x¯ : ⇐⇒ δN(p) = k, x¯ ∈ Xk and δk(q) = x¯ where δk is the standard representation of the product space Xk.
If not mentioned otherwise, Xk and X∗ are equipped with δk and δ∗ respectively. Given another represented space (Y, δ'), we denote the set of all continuous functions f : Xk → Y for some k ∈ N by C∗(X, Y ) :=  k∈N C(Xk,Y ). We equip C∗(X, Y )
with the canonical representation δ∗ that represents an element f : Xk → Y of
C∗(X, Y ) by the dimension k of the source space X and a name of the function as element of C(Xk,Y ).
Definition 3.2 Let (X, δ) and (Y, δ') be represented spaces. By

C∗(X, Y ) :=	C(Xk,Y )
k∈N

we denote the set of all continuous functions f : Xk → Y for some k ∈ N. We equip
C∗(X, Y ) with the representation δ∗ defined by

δ∗ ⟨p, q⟩ = f : ⇐⇒ δN(p) = k, f ∈ C(Xk,Y ) and [δk → δ'](q) = f . 

If not mentioned otherwise, C(Xk,Y ) and C∗(X, Y ) are equipped with [δk → δ'], the standard representation of the function space C(Xk,Y ), and δ∗ , respectively.
Now we are prepared to formulate the above mentioned computability results about finite linear combinations and linear independence. Given a computable normed space X, finite linear combinations are computable in the following uniform way. By B(Fk,X) we denote the set of all bounded linear operators from Fk to X.
Proposition 3.3 Let X be a computable normed space. We deﬁne a mapping
LC : X∗ → C∗(F,X) by
LC(x¯) ∈ C(Fk,X) : ⇐⇒ x¯ ∈ Xk


and

k
LC(x1,..., xk)(α1,..., αk) :=	αixk
i=1

for all (x1,..., xk) ∈ X∗ and α1,..., αk ∈ F.
LC is (δ∗ , δ∗ )-computable.
X	→
LC(x1,..., xk) ∈ B(Fk,X) for all (x1,..., xk) ∈ X∗.
Proof. The claims directly follow from the definition of LC and the fact that X is a computable normed space.	 

Given a normed space X, by INDX we denote the set
INDX := {(x1,..., xk) ∈ X∗ | (x1,..., xk) is linearly independent}
of all finite tuples that consist of linearly independent elements of X. 4 INDX is a r. e. open subset of X∗ (see also [9, Effective Independence Lemma] and [13, Lemma 10]).
Proposition 3.4 Let X be a computable normed space.
There exists a (δ∗ , δR)-computable function F : X∗ → R such that
F (x1,..., xk) = 0 ⇐⇒ (x1,..., xk) is not linearly independent or equivalently
F−1[{0}] = X∗ \ INDX .
INDX is an r. e. open subset of X∗.
In the proof of Proposition 3.4, we use the following technical lemma, which we will also use in the proof of Proposition 3.6.
Lemma 3.5 Let X be a computable normed space. We deﬁne mappings F1 : X∗ →
R and F2 : X∗ → R by
F1(x1,..., xk) := max { LC(x1,..., xk)(α1,..., αk)  | (α1,..., αk)  = 1}
and
F2(x1,..., xk) := min { LC(x1,..., xk)(α1,..., αk)  | (α1,..., αk)  = 1}
for all (x1,..., xk) ∈ X∗. Then F1 and F2 are (δ∗ , δR)-computable.
Proof. The compact unit sphere Sk := {(α1,..., αk) ∈ Fk | (α1,..., αk)  = 1} of Fk is computable as a compact set for all k ∈ N. Since the image of a compact set under a continuous function and the minimum and maximum of a compact set of real numbers are computable [12,11] the computability of F1 and F2 follows. 
Proof. [Proof of Proposition 3.4]
We define F := F2 where F2 : X∗ → R is the (δ∗ , δR)-computable function of
Lemma 3.5. Then we have
(x1,..., xk) is not linearly independent ⇐⇒ F (x1,..., xk) = 0 for all (x1,..., xk) ∈ X∗. It follows
(x1,..., xk) ∈ F−1[{0}] ⇐⇒ (x1,..., xk) ∈ X∗ \ INDX .

4 We call a tuple (x1,..., xk) ∈ X∗ linearly independent if Pk

αixi = 0 for α1,..., αk ∈ F implies

αi = 0 for all i = 1,..., k.

As we have shown in the previous item, X∗ \ INDX is co-r. e. closed in X∗. It follows that INDX is r. e. open in X∗
 
Given a computable normed space X, the function LC(x¯) is injective if x¯ consists of linearly independent elements of X, that is if x¯ ∈ INDX . In this case, the partial inverse of LC(x¯) exists and is computable. To prove this result, we first prove that the norm of LC(x¯) is computable in a uniform way and that the norm of the partial inverse (LC(x¯))−1 is computable in the same way if x¯ ∈ INDX .
Proposition 3.6 Let X be a computable normed space.
The mapping
N : X∗ → R, N (x¯) :=  LC(x¯) 
is (δ∗ , δR)-computable.
The mapping
Ninv :⊆ X∗ → R, Ninv(x¯) :=  (LC(x¯))−1 
with dom(Ninv) := INDX is (δ∗ , δR)-computable.
Proof.
We have N = F1 where F1 : X∗ → R is the (δ∗ , δR)-computable function of
Lemma 3.5.
Given (x1,..., xk) ∈ dom(Ninv) = INDX we have F2(x1,..., xk) > 0 where F2 : X∗ → R is the (δ∗ , δR)-computable function of Lemma 3.5. Furthermore, in this case the inverse operator (LC(x1,..., xk))−1 exists as a linear bounded operator and we have
 (LC(x1,..., xk))−1 
= (min { LC(x1,..., xk)(α1,..., αk)  | (α1,..., αk)  = 1})−1
= (F2(x1,..., x2))−1 .
It follows Ninv(x1,..., xk) = (F2(x1,..., x2))−1 if (x1,..., xk) ∈ dom(Ninv),
and Ninv(x1,..., xk) and (F2(x1,..., x2))−1 are undefined if (x1,..., xk) ∈/
dom(Ninv). We obtain Ninv = F2 and Ninv is (δ∗ , δR)-computable.
 
Proposition 3.7 Let X be a computable normed space. We deﬁne a mapping


'
inv
:⊆ X∗ × X → F∗, LC'
(x¯, y) := (LC(x¯))−1(y)

with dom(LC' ) := {(x¯, y) ∈ X∗ × X | x¯ ∈ INDX and y ∈ range(LC(x¯))}

LC' (x¯, y) ∈ Fk for all (x¯, y) ∈ dom(LC'
LC'	is (δ∗ , δX, δ∗)-computable.
) with x¯ ∈ Xk.

inv	X	F
Proof.
This claim directly follows from the definition of LC'  .

Given x¯ = (x1,..., xk) ∈ INDX , we can compute LC(x¯) and the norm
 (LC(x¯))−1  = Ninv(x¯).  Furthermore, LC(x¯) is injective in this case and
we have range(LC(x¯)) = span{x1,..., xk}.  Let L ∈ N such that 2L ≥  (LC(x¯))−1  . We can effectively find such an L. Given additionally y ∈ X, for each k ∈ N we can effectively search some (α1,..., αk) ∈ F∗, such that  LC(x¯)(α1,..., αk) − y  ≤ 2−k−L. If y ∈ range(LC(x¯)) we will find such a
tuple (α1,..., αk) at some time, otherwise (x¯, y) ∈/ dom(LC' ) and our search
procedure will never stop. In the first case, we have

'
inv
(x¯, y) − (α1,..., αk) 
≤  (LC(x¯))−1  · y − LC(x¯)(α1,..., αk) 
≤ 2−k .

Hence given (x¯, y) ∈ dom(LC' ) we can compute a sequence in F∗ that con-
verges fast to LC' (x¯, y).

Finite-dimensional Linear Subspaces
Given a normed space X, we denote the set of all k-dimensional linear subspaces of X by L(k), the set of all finite-dimensional linear subspaces by L(∗), and the set

of all linear subspace by LX . Obviously, we have L(∗) = 
X
L(k), and LX = L(∗)

holds if and only if X has finite dimension. If X is a computable normed space with standard representation δX , we equip X∗ with the canonical representation δ∗ that represents an element (x1,..., xk) of X∗ by the number k of elements and a name of the tuple as an element of Xk. If not mentioned otherwise, Xk and X∗
are equipped with δk, the standard representation of the product space Xk, and δ∗, respectively.
Since every finite-dimensional linear subspace of a normed space X is a closed subset of X, that is L(∗) ⊆ A(X), we can use the representations for closed subsets of metric spaces that are defined in [4] as representations for L(∗). Additionally, we define the following representation for L(∗), which represents finite-dimensional
linear subspaces by a basis of the subspace.
Definition 4.1 [Basis representation] Let X be a computable Banach space. We define a representation δbasis of L(∗) by
δbasis(p) = U : ⇐⇒ dim(U ) = k, δ∗ (p) = (x1,..., xk) ∈ INDX and span{x1,..., xk} = U
of the set L(∗) of all finite-dimensional linear subspaces of X.
Since a δbasis-name of a finite-dimensional linear subspace U encodes a basis of
U , we can compute the dimension and a basis of U from such a name.
Lemma 4.2 Let X be a computable normed space.

The mapping

dim : L(∗) → N, U '→ dim(U )

that maps each ﬁnite-dimensional subspace to its dimension is (δbasis, δN)- computable.
The multi-valued mapping




deﬁned by
basis : L(∗) ⇒ X∗

x¯ = (x1,..., xk) ∈ basis(U ): ⇐⇒ dim(U ) = k and
{x1,..., xk} is a basis of U
is (δbasis, δ∗ )-computable.
The single-valued right inverse
basis−1 :⊆ X∗ → L(∗), (x1,..., xk) '→ span{x1,..., xk}
with dom(basis−1) = INDX of basis is (δ∗ , δbasis)-computable.
Using δbasis as representation, we can computably embed L(∗) into A(X). By
A(X) we denote the set of all closed subsets of X and equip A(X) with the repre-

sentations δ=
defined in [4]. δ=
represents a closed set by its distance function.

Proposition 4.3 Let X be a computable normed space. The embedding
in : L(∗) ‹→ A(X), U '→ U


of L(∗) into A(X) is (δbasis, δ=
)-computable.

X	dist
Proof. Given a δbasis-name of a finite-dimensional linear subspace U , we can com- pute a basis {x1,..., xk} of U . It remains to show that given a basis {x1,..., xk}, we can compute the distance function of the linear subspace U = span{x1,..., xk} as a closed subset of X. For x ∈ X we know that dist(x, U ) ≤ x  and that there exists some z ∈ U with dist(x, U ) = x − z  . 5 Thus there exists some z ∈ U with dist(x, U ) = x − z  and z  ≤ 2 x  . By Proposition 3.6(ii) given linearly independent x1,..., xk ∈ X, we can compute α :=  (LC(x1,..., xk))−1  . It holds

, k

i=1

k
α2 = (α ,..., α ) ≤ (LC(x ,..., x ))−1 · 
¨ i=1

αixi¨ = α  y 



k i=1
i=1
αixi ∈ U . As z ∈ U ∩ BX (0, 2  x  ), there exists (α1,..., αk) ∈ Fk
αixi and (α1,..., αk)  ≤ α · z  ≤ 2α  x  .  Thus there exists



5 Finite-dimensional subspaces of normed spaces are always proximinal, that is every element of the normed space has a proximum in the subspace [10].

some (α1,..., αk) ∈ BFk (0, 2α  x  ) with z = LC(x1,..., xk)(α1,..., αk) or equiva-
lently z ∈ LC(x1,..., xk)[BFk (0, 2α x )].Given (x1,..., xk) ∈ INDX and x we can compute the closed ball BFk (0, 2α x ) with center 0 and radius 2α  x  as a com- pact subset of Fk and thus also V := LC(x1,..., xk)[BFk (0, 2α  x  )] as a compact set with full information.  Since we have BX (0, 2  x  ) ∩ U ⊆ V ⊆ U it follows
dist(x, U ) =  z − x  = dist(x, V ). dist(x, V ) can be computed because we have got
V as a compact set with full information. Hence given (x1,..., xk) ∈ INDX and x ∈ X we can compute dist(x, span{x1,..., xk}) = dist(x, U ). By type conversion it follows that given (x1,..., xk) ∈ INDX with U = span{x1,..., xk} we can compute
the distance function of U . This is equivalent to computing a δ= -name of U .	 
A corresponding result in constructive analysis is Proposition 2.1 in [6].
Using some results of Brattka and Presser [4] about computable reducibility between the different representations for closed set, we immediately get the following corollary. Here by δfiber and δrange we denote the representations defined in [4] that represent a closed set A by a function f : X → R such that A = f−1{0} and a sequence g : N → X such that range(g) is dense in A, respectively.
Corollary 4.4 Let X be a computable normed space. The embedding
in : L(∗) ‹→ A(X), U '→ U

of L(∗) into A(X) is (δbasis, δfiber)-computable. in is also (δbasis, δrange)-computable if X is a Banach space.
In the following we will compare our new representation δbasis with the repre- sentations of closed subsets restricted to L(∗).
Theorem 4.5 Let X be a computable normed space. Then we have
=  L(∗)
δbasis ≤ δdist| X ,
L(∗)

δbasis ≤ δrange|
X  if X is a Banach space,

L(∗)
δbasis ≤ δfiber| X .
Proof. The given reductions follow from Proposition 4.3 and Corollary 4.4.	 
Theorem 4.5 generalizes some results in [13, Theorem 11] about representations of linear subspaces of Rn.
L(∗)
In the following we often omit “| X ” when we use the restricted representations
of A(X) to simplify the presentation. It will always be clear if the representation of A(X) or the restriction to L(∗) is meant.

Metric Projections onto Convex Subsets
A subset U of a normed space X is called convex if λx + (1 − λ)y ∈ U holds for all
x, y ∈ U and 0 ≤ λ ≤ 1. A normed space X is called rotund or strictly convex if

 tx1 + (1 − t)x2  < 1 whenever x1, x2 ∈ SX , x1 /= x2, and 0 < t < 1 [8]. Here by SX we denote the unit sphere of X. If X is a normed space with a strictly convex norm, the modulus of convexity mc : [0, 2] → [0, 1] of the norm  is defined by


mc(ε) := inf{1
− 
(x + y)  | x, y ∈ SX
, x − y  ≥ ε} .


The norm   is called uniformly convex if mc(ε) > 0 for 0 < ε ≤ 2.
Every finite-dimensional normed space is uniformly convex if and only if it is strictly convex [8, Prop. 5.2.14] and every uniformly convex Banach space is known to be reflexive (the Milman-Pettis theorem, see for example [8, Thm. 5.2.15]).
Given a normed space X, a subset G ⊆ X of X and an element x ∈ X, we define the set
PG(x) := {z ∈ G | x − z  = distG(x)}
of all elements of best approximation of x by elements of G. G is called 6
a proximinal set or set of existence if PG(x) /= ∅, that is PG(x) contains at least one element, for all x ∈ X,
a semi-Chebyshev set or set of uniqueness if PG(x) contains at most one element for all x ∈ X,
a Chebyshev set if PG(x) contains exactly one element for all x ∈ X.
If a subset G ⊆ X of a normed space X is a Chebyshev set we can define a total and single-valued function that maps every x ∈ X to its uniquely defined best approximation in G.
Definition 5.1 [Metric projection] Let X be a normed space and G ⊆ X a Cheby- shev set. We define the metric projection PG : X → X onto G by

y = PG(x) : ⇐⇒ PG(x) = {y}

for all x ∈ X.
The norm of a normed space X is strictly convex if and only if every nonempty (closed) convex subset of X is a set of uniqueness [8, Theorem 5.1.18]. If every nonempty closed convex subset of a normed space X is a set of existence, then X is reflexive. Additionally, a normed space X is reflexive and has got a strictly convex norm if and only if every nonempty closed convex subset is a Chebyshev set [8]. It follows that every nonempty closed convex subset of a uniformly convex Banach space X is a Chebyshev set, that is the metric projection onto it is a total and single-valued function.
If the modulus of convexity of the uniformly convex Banach space X is (δR, δR)- computable we can even compute the metric projection of a given nonempty convex subset.

6 For further information about these notions we refer the reader to [10,8].

Theorem 5.2 (Metric projection) Let X be a computable Banach space with a uniformly convex norm and a (δR, δR)-computable modulus of convexity mc. We deﬁne a mapping


with
P^ :⊆ A(X) × X → X, (G, x) '→ PG(x)

dom(P^) := {G ∈ A(X) | G /= ∅ is convex}× X

that maps every nonempty convex subset G of X to the corresponding metric pro-
jection. Then P^ is (δ= , δX, δX )-computable.
Proof. Since every nonempty closed convex set in a uniformly convex Banach space is a Chebyshev set, P is well-defined as a single-valued function. We have to show that given a nonempty closed convex set G ⊆ X, some x ∈ X, and k ∈ N, we can effectively find some z ∈ X with PG(x) − z  < 2−k . In the following we will show even more as we can even find some z ∈ G (and not only z ∈ X) with PG(x) − z  < 2−k .
Since the norm of X is uniformly convex, we have mc(ε) > 0 for ε > 0, hence mc(2−k ) > 0 for all k ∈ N. Furthermore, the mapping k '→ mc(2−k ) is (δN, δR)- computable. Let G ⊆ X be a nonempty closed convex set and x ∈ X. Let g0 ∈ G be the uniquely determined best approximation of x in G, that is we have  x − g0  = dist(x, G) =: r ≥ 0. Furthermore, r = dist(x, G) =  x − g0  can be computed from the given information of G and x.
Let k ∈ N. Then we have r < 2−k−2 or r > 2−k−3 > 0. We test both inequalities simultaneously and stop if we have proved one of them to be true. Since both cases are overlapping, this can be done effectively. How we continue depends on the chosen case.
“r < 2−k−2”:
In this case the intersection between B(x, 2−k−1) and G is not empty and open in
G. Since δ=	≤ δrange holds for computable Banach spaces we can effectively find
some g ∈ G such that  x − g  < 2−k−1, that is g ∈ B(x, 2−k−1) ∩ G. Then we have
for g
 g − g0  ≤  g − x  + x − g0 
= g − x  + r
< 2−k−1 + 2−k−2
< 2−k
“r > 2−k−3”:
Let δ := min 2−k−1, 2r · mc( 1 · 2−k−1) . Since mc is computable and we have already computed r, we can compute δ. As we have δ > 0, hence r + δ > r, the intersection between B(x, r + δ) and G is not empty, and it is open in G. Since

=
dist
≤ δrange holds for computable Banach spaces we can effectively find some g ∈ G

such that x−g  < r+δ. We prove that g−g0  < 2−k holds in this case. Therefore,

let δ' := x − g − r < δ and g' := g − δ'  (g − x). Then we have


  '
¨g − g¨ = r + δ'

g − x = δ'	(2)

  
¨g − x¨ = r + δ'
g − x  = r =  x − g0 
(3)

1
¨  (g
1
+ g) − x¨ ≥ r	( as we have	(g
+ g) ∈ G )	(4)

¨ 2	0	¨	2	0
1	1	 ¨	1 ¨	¨	1
¨ (g + g) −	g + g'	=	g − g' =	δ'	(5)
 ¨ 2	0	2	0	¨	2 ¨	¨	2


It follows
1
r ≤ ¨ 2 (g0
g0 − g ≤ ¨g0 − g'¨ + ¨g' − g¨ = ¨g0 − g'¨ + δ'	(6)


+ g) − x¨

1
≤ ¨ 2 (g0
+ g) − 1 g + g' ¨ + ¨ 1 g + g' − x¨

= ¨ 1 g + g' − x¨ + 1 δ'
¨ 2	0	¨	2



¨ 1 g
+ g' − x¨ ≥ r − 1 δ' > r − 1 δ

¨ 2	0	¨	2		2
≥ r − r · mc  1 · 2−k−1 
so that we get
¨g0 − g'¨ < 2−k−1
Now we can derive the desired result for g
 g0 − g  ≤ g0 − g'  + δ' <  g0 − g'  + δ < 2−k−1 + 2−k−1 = 2−k

In both cases we can find effectively some g ∈ G such that  g − g0  < 2−k and our proof is complete.	 
In the next section we show that in case of finite-dimensional linear subspaces, which are particularly nonempty closed convex sets, we can get the same result under less restrictive conditions.
Metric Projection onto Linear Subspaces
Given a finite-dimensional linear subspace U of a computable Banach space X and an element x of X, we can compute the set PU (x) of all elements of best approximation of x in U as a compact set with negative information. By K(X) we denote the set of all compact subsets of X and equip K(X) with the representations δmin-cover (full information) and δcover (only negative information), see also [4].

First, we mention a computability result about metric projections onto linear subspaces that is a simple corollary of the result about nonempty closed convex sets that we have proved in the previous section.
Corollary 6.1 (Metric projection onto subspaces) Let X be a computable Banach space with a uniformly convex norm and a (δR, δR)-computable modulus of convexity mc. We deﬁne a mapping
PL : L(∗) × X → X, (U, x) '→ PU (x)
that maps every ﬁnite-dimensional linear subspace of X to the corresponding metric projection. Then PL is (δbasis, δX, δX )-computable.
Proof. Every finite-dimensional subspace U of X is a nonempty closed convex

subset of X. Since δbasis ≤ δrange and δbasis ≤ δ=
>
dist
we have δbasis ≤ δ>  H

δrange. Now we can apply Theorem 5.2.	 
A corresponding result in constructive analysis is Theorem 3.1 in [6].
Since finite-dimensional linear subspaces are very special nonempty closed con- vex subsets, it arises the question if we can for example get a result without de- manding a computable modulus of convexity. In fact, this is possible and we can get some better computability results about metric projections in this case. Given a finite-dimensional linear subspace U of a Banach space X and an element x of X, we can compute the set PU (x) of all best approximations of x in U as a compact set with negative information. 7
Theorem 6.2 (Metric projection onto subspaces) Let X be a computable Ba- nach space. We deﬁne a mapping
P set : L(∗) × X → K(X), (U, x) '→ PU (x)
L	X
that maps every ﬁnite-dimensional linear subspace U and element x to the corre- sponding compact set of elements of best approximation. Then the mapping P set is

=
dist
, δX, δcover)-computable and also (δbasis, δX, δcover)-computable.

Proof. Given a δbasis-name of a finite-dimensional subspace U of X, we can com-

pute a δ=
-name of U . Thus it suffices to prove the (δ=
, δX, δcover)-computability.

Using the given δ= -name of U in combination with the given x ∈ X, we can
compute a [δX → δR]-name of the function f : X → R defined by f (z) :=
|x − z  − dist(x, U )| for z ∈ X. It holds f (z) = 0 ⇐⇒ z ∈ S(x, dist(x, U )) for all z ∈ X. Hence f represents a δfiber-name of the sphere with center x and radius
dist(x, U ). Since every element of best approximation of x in U has got the distance dist(x, U ) from U it holds PU (x) = U ∩S(x, dist(x, U )) ⊆ S(x, dist(x, U )). We have dist(x, U ) ≤  x  because of 0 ∈ U . Thus we have PU (x) ⊆ BX (0, 2  x  ) ∩ U = BU (0, 2  x  ). Since BU (0, 2  x  ) is a finite-dimensional compact subset of X, we can

7 Since the set of all best approximations is closed and bounded, it is compact in case of finite-dimensional subspaces.

compute a δmin-cover-name of BU (0, 2  x  ). Given a closed set with negative informa- tion and a compact set with negative information, we can compute the intersection of these two sets with negative information. Thus we can compute a δcover-name of PU (x) = S(x, dist(x, U )) ∩ BU (0, 2  x  ).	 
By some results of Brattka [3,2] it is possible to compute the unique element x of the set {x} assumed that we have got negative information of {x} as a compact set. This fact leads us to the following result.
Theorem 6.3 (Metric projection) Let X be a computable Banach space with a uniformly convex norm. We deﬁne a mapping
PL : L(∗) × X → X, (U, x) '→ PU (x)
that maps every ﬁnite-dimensional linear subspace of X to the corresponding met-
ric projection.	Then PL is (δ= , δX, δX )-computable and also (δbasis, δX, δX )-
computable.
Proof. By Theorem 6.2 given a finite-dimensional subset U and an element x we can compute a δcover-name of PU (x). If X is uniformly convex PU (x) consists of the single point PU (x). We can compute a δX -name of PU (x) from the δcover-name of PU (x) = {PU (x)} as it is possible to convert the negative information of a singleton as compact set to a name of its unique element [3,2].	 
Thus, in the special case of finite-dimensional subspaces we do not need the computable modulus of convexity that we used in the more general case of convex subsets in Theorem 5.2.
Given a computable Banach space X, we can also define a (partial) mapping

P unique :⊆ L(∗) × X → X, (U, x) '→ PU (x)
L	X

with
dom(P unique) := (U, x) ∈ L(∗) × X | |PU (x)| = 1,
that maps every finite-dimensional linear subspace U and element x with a unique element of best approximation in U to its best approximation. Using Theorem 6.2
and the already used results from [3,2], we obtain that the mapping P unique is

=
dist
, δX, δX )-computable and (δbasis, δX, δX )-computable. It seems that this result

could also be derived from [7, Theorem 1] (also [1, Chapter 7, Theorem 2.12] and
[5, Theorem 4.2.1]) via realizability theory.

Conclusions
In this paper we have studied the computability of the metric projection onto closed convex sets and finite-dimensional linear subspaces of computable Banach spaces X, which is equivalent to computing the best approximation of an element in a given subset. In uniformly convex Banach spaces with computable modulus of convexity

we can compute the (unique) best approximation of a given element of X in an also given nonempty closed convex subset of X. In case of finite-dimensional linear subspaces of Banach spaces, which are special closed convex subsets, we can omit the requirement of a computable modulus of convexity. Without the condition of uniform convexity we can compute the set of best approximations as a compact subset. If we additionally assume uniform convexity the we can compute the unique element of this compact subset, that is the metric projection.
Acknowledgement
We thank Douglas Bridges and the referees for pointing us to related work in con- structive analysis.

References
Bishop, E. and D. S. Bridges, “Constructive Analysis,” Grundlehren der Mathematischen Wissenschaften 279, Springer, Berlin, 1985.
Brattka, V., Borel complexity and computability of the Hahn-Banach Theorem, Archive for Mathematical Logic 46 (2008), pp. 547–564.
Brattka, V., Plottable real number functions and the computable graph theorem, SIAM Journal on Computing 38 (2008), pp. 303–328.
Brattka, V. and G. Presser, Computability on subsets of metric spaces, Theoretical Computer Science
305 (2003), pp. 43–76.
Bridges, D. and L. Vˆı¸ta˘, “Techniques of Constructive Analysis,” Springer, New York, 2006.
Bridges, D. S., On the foundations of best-approximation theory, Journal of Approximation Theory 28
(1980), pp. 273–292.
Bridges, D. S., A constructive proximinality property of finite-dimensional linear subspaces, The Rocky Mountain Journal of Mathematics 11 (1981), pp. 491–497.
Megginson, R. E., “An Introduction to Banach Space Theory,” Graduate Texts in Mathematics 183, Springer, New York, 1989.
Pour-El, M. B. and J. I. Richards, “Computability in Analysis and Physics,” Perspectives in Mathematical Logic, Springer, Berlin, 1989.
Singer, I., “Best Approximation in Normed Linear Spaces by Elements of Linear Subspaces,” Die Grundlehren der mathematischen Wissenschaften 171, Springer, Berlin, 1970.
Weihrauch, K., “Computable Analysis,” Springer, Berlin, 2000.
Weihrauch, K., Computational complexity on computable metric spaces, Mathematical Logic Quarterly
49 (2003), pp. 3–21.
Ziegler, M. and V. Brattka, Computability in linear algebra, Theoretical Computer Science 326 (2004),
pp. 187–211.
