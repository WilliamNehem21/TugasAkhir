Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 286 (2012) 213–227
www.elsevier.com/locate/entcs

A Representation Theorem for Unique Decomposition Categories
Naohiko Hoshino1
Research Institute for Mathematical Sciences Kyoto University
Kyoto, Japan

Abstract
Haghverdi introduced the notion of unique decomposition categories as a foundation for categorical study of Girard’s Geometry of Interaction (GoI). The execution formula in GoI provides a semantics of cut- elimination process, and we can capture the execution formula in every unique decomposition category: each hom-set of a unique decomposition category comes equipped with a partially defined countable summation, which captures the countable summation that appears in the execution formula. The fundamental property of unique decomposition categories is that if the execution formula in a unique decomposition category is always defined, then the unique decomposition category has a trace operator that is given by the execution formula. In this paper, we introduce a subclass of unique decomposition categories, which we call strong unique decomposition categories, and we prove the fundamental property for strong unique decomposition categories as a corollary of a representation theorem for strong unique decomposition categories: we show that for every strong unique decomposition category C, there is a faithful strong symmetric monoidal functor from C to a category with countable biproducts, and the countable biproducts characterize the structure of the strong unique decomposition category via the faithful functor.
Keywords: Geometry of interaction, unique decomposition category, traced monoidal category, representation theorem

Introduction
Girard introduced Geometry of Interaction (GoI) [3], which aims to capture se- mantics of cut-elimination process rather than invariant under cut-elimination like usual denotational semantics. GoI interprets proofs as square matrices, and if a proof reduces to another proof via cut-elimination, then the execution formula
,A B⎞	Σ

Ex ⎝	⎠ := A +

BDnC


provides an invariant under the cut-elimination.

1  Email:naophiko@kurims.kyoto-u.ac.jp

1571-0661 © 2012 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2012.08.014

Work by Hyland, Abramsky, Haghverdi and Scott [4,1] showed that traced sym- metric monoidal categories [11] play important roles in modeling the execution formula. Especially, in [4,5], Haghverdi and Scott got much closer to the original execution formula by using unique decomposition categories. The notion of unique decomposition categories introduced by Haghverdi is a generalization of partially additive categories [15]. The main point of unique decomposition categories is that in a unique decomposition category, we can uniquely decompose a morphism f : X ⊗ Z → Y ⊗ Z into four components
,fXY : X → Y	fZY : Z → Y ⎞
⎝fXZ : X → Z	fZZ : Z → Z ⎠
and each hom-set comes equipped with a partially defined countable summation. For example, we can partially define the standard trace formula [5]:
∞
n  ◦ fXZ : X → Y.
n=0
The following fundamental property of unique decomposition categories connects the standard trace formula with categorical trace operators.
Proposition 1.1 ([4,5]) If the standard trace formula is deﬁned for any morphism of the form f : X ⊗ Z → Y ⊗ Z, then the standard trace formula provides a trace operator of the unique decomposition category.
In the proof of the proposition, there are certain implicit assumptions aside from the definition of unique decomposition categories (see Appendix B in [8]), and a suf- ficient condition would be to require quasi projections and quasi injections, which is a part of data of unique decomposition categories, to be “natural” and “compat- ible with monoidal structural isomorphisms”. The main motivation of this paper is to explicitly describe a subclass of unique decomposition categories that enjoys the fundamental property. Our idea is to find a subclass of unique decomposition categories that provides “good” embedding of unique decomposition categories in the subclass into categories with countable biproducts. We consider categories with countable biproducts because countable biproducts always provide a trace operator given by the execution formula (see Section 5). Although we found a subclass of unique decomposition categories, namely strong unique decomposition categories, in this paper by trial and error, organization of this paper is top-down:
In Section 2, we recall Kleene equality, biproducts and categorical traces.
In Section 3, we recall the definition of Σ-monoids and embed each Σ-monoid into a total Σ-monoid.
In Section 4, we introduce strong unique decomposition categories, and we embed a strong unique decomposition category into a total strong unique de- composition category via the embedding in (ii). We give examples of strong unique decomposition categories.

In Section 5, we embed a total strong unique decomposition category into a category with countable biproducts by matrix construction [13]. Then, we give a representation theorem for strong unique decomposition categories (Theo- rem 5.3). The fundamental property for strong unique decomposition cate- gories is a corollary of the representation theorem.
Consequences of the representation theorem are:
A proof of Proposition 1.1 in which we do not need to be careful with partiality of summations on hom-sets of strong unique decomposition categories.
We show that all strong unique decomposition categories are partially traced.
Related work
The paper by Malherbe, Scott and Selinger [14] is closely related to our work. They gave an embedding of partially traced symmetric monoidal categories intro- duced in [6] into traced symmetric monoidal categories. Since our result tells us that every strong unique decomposition category is partially traced (Corollary 5.4), we can embed a strong unique decomposition category into a traced symmetric monoidal category by their result. On the other hand, our result also provides an embedding of a strong unique decomposition category into a traced symmetric monoidal category since a category with countable biproducts is traced (Theorem 3 in [16]). As we concentrate only on strong unique decomposition categories, our em- bedding tells us further information on strong unique decomposition categories: an explicit description of their trace operators, for example. However, there are some other partially traced symmetric monoidal categories that are not strong unique decomposition categories. At this point, we do not know clear comparison between our work and their work.
Preliminary
Kleene equality
For expressions e and ej that possibly include partial operations, we write e ≤ ej if e is defined, then ej is defined, and they denote the same value. We use  for the Kleene equality : we write e  ej when we have e ≤ ej and ej ≤ e. For example, the following Kleene equality holds for all real numbers x and y.


x · 3 · 1
· y	3 .

x2	y2
x · y

Biproducts
Definition 2.1 Let C be a category. For a set I, an I-ary biproduct of a fam-

πi :  i∈I Xi   Xi : κi
i∈I such that




Xi with {πi}i∈I forms a product of {Xi}i∈I.
Xi with {κi}i∈I forms a coproduct of {Xi}i∈I.
For each fi : Xi → Yi, the tupling ⟨fi ◦ πi⟩i∈I :  i∈I Xi →  i∈I Yi coincides with

A zero object 0 is a ∅-ary biproduct, and a binary biproduct of X0 and X1 is a
{0, 1}-ary biproduct of {Xi}i∈{0,1}, for which we write X0 ⊕ X1.
We use countable to mean at most countable. We say that C has countable (ﬁnite) biproducts when for every countable (finite) set I and every I-indexed family of C-objects, there exists an I-ary biproduct of the family.
Definition 2.2 Let F : C → D be a functor between categories with finite biprod- ucts. We say that F preserves ﬁnite biproducts when for any objects X0, X1 ∈ C, the canonical morphisms [Fκ0,Fκ1]: F X0 ⊕ FX1   F (X0 ⊕ X1): ⟨F π0,Fπ1⟩ and F 0  0 form isomorphisms.
The definition of biproducts is from [9]. Definition 2.1 depends on neither abelian-group enrichment as in [13] nor existence of zero morphisms defined through a zero object as in [10]. The above definition of finite biproducts is equivalent to the definition of finite biproducts in [10].
Partial trace operators
Let C be a symmetric monoidal category (for the definition, see [13]). We recall the definition of partial trace operators in [6] that is a generalization of trace operators introduced in [11].
Definition 2.3 A partial trace operator of C is a family of partial maps


Z X,Y
: C(X ⊗ Z, Y ⊗ Z) ~ C(X, Y )}X,Y,Z∈C

subject to the following conditions:
(Naturality) For g : Xj → X, h : Y → Y j and f : X ⊗ Z → Y ⊗ Z,


h ◦ trZ
(f ) ◦ g ≤ trZ ′
′ ((h ⊗ idZ) ◦ f ◦ (g ⊗ idZ)).

(Dinaturality) For f : X ⊗ Z → Y ⊗ Zj and g : Zj → Z,


Z X,Y
((idY
⊗ g) ◦ f )  trZ′
(f ◦ (idX
⊗ g)).



(Vanishing I) For f : X ⊗ I → Y ⊗ I,
I
X,Y


f.

(Vanishing II) For f : X ⊗ Z ⊗ W → Y ⊗ Z ⊗ W ,


trW
(f ) is defined =⇒ trZ⊗W (f ) trZ
(trW
(f )).

X⊗Z,Y ⊗Z
X,Y
X,Y
X⊗Z,Y ⊗Z

(Superposing) For f : X ⊗ Z → Y ⊗ Z,


idW ⊗ trZ
Z
W ⊗X,W ⊗Y
(idW ⊗ f ).



(Yanking)

X X,X

(σX,X)  idX .

Here we omit several coherence isomorphisms. Although our superposing rule is weaker than the original superposing rule in [6], we can derive the original super- posing rule from the above axioms. A trace operator is a partial trace operator con- sisting of total maps. We say that a partial trace operator is uniform when for any f : X⊗Z → Y ⊗Z, g : X⊗Zj → Y ⊗Zj and h : Z → Zj, if (idY ⊗h)◦f = g◦(idX ⊗h),
then trZ	(f )  trZ′  (g).
Σ-monoids
We recall the definition of Σ-monoids from [4]. For a set X, a countable family on X is a map x : I → X for a countable set I. We denote such a family x by
{xi}i∈I. A countable partition of a set I is a countable family {Ij}j∈J consisting of pairwise disjoint subsets of I such that  j∈J Ij = I. We define X∗ to be the set of countable families on X whose indexing sets are subsets of the set of natural numbers N = {0, 1, 2, ··· }. This restriction on indexing sets is to define Σ in the following definition to be a set theoretic partial map.
Definition 3.1 A Σ-monoid is a non-empty set X with a partial map Σ : X∗ ~ X 
subject to the following axioms:
If I is a singleton {n}, then Σ{xi}i∈I  xn.
If {Ij}j∈J is a countable partition of I ⊂ N indexed by a subset J ⊂ N, then for every countable family {xi}i∈I on X, we have Σ{xi}i∈I  Σ Σ{xi}i∈Ij j∈J .
A countable family {xi}i∈I is summable when Σ{xi}i∈I is defined. We say that a Σ-monoid (X, Σ) is total when the operator Σ is a total map.
In the following, we simply say that X is a Σ-monoid without mentioning its sum operator, and we write  x for Σ{x } . We informally write x + x + ··· for i∈N xi and x0 + x1 + ··· + xn for i∈{0,1,··· ,n} xi. By the definition of Σ- monoids, every subfamily of a summable countable family is summable. Especially, the empty family ∅ is summable. The zero element 0 :=  ∅ behaves as a unit of the summation:  i∈I xi    j∈{i∈I|xi/=0} xj. We note that Σ{xi}i∈I  Σ{yj}j∈J
when there is a bijection θ : I → J such that xi = yθ(i) for every i ∈ I. For a proof,
see [7].

For every countable set S, we can define S-indexed summation choosing a bijection θ : I → S for some subset I ⊂ N: we define
s∈S xs by
s∈S xs to

be	i∈I xθi. The definition does not depend on our choice of I and the bijection
θ : I → S since the summation is independent of renaming of indexing sets. Hence, the definition is well-defined. In the following, we implicitly extend summations in

this way.
Example 3.2 Let M be a commutative monoid that does not have non-trivial subgroup. M forms a Σ-monoid by the following summation:


Σi∈I
xi :=
i∈I′ xi	 (Ij := {i ∈ I | xi /= 0} is finite) undefined	(otherwise).

Examples are the set of natural numbers and the set of non-negative reals associated with the addition. Another example is M/N where M is a commutative monoid, and N is the submonoid of M consisting of invertible elements in M . Generally, if an element of a Σ-monoid is invertible, then it is equal to the zero element:
x = x +0+0+ ··· = x + (−x)+ x + (−x)+ x + ··· = 0.
Example 3.3 A bounded complete poset D forms a Σ-monoid:



xi
i∈I
:=		i∈I xi	 ({xi ∈ D | i ∈ I} is bounded) undefined	(otherwise).


The category of Σ-monoids
We define a category M of Σ-monoids: objects are Σ-monoids, and a morphism
f : X → Y is a map f : X → Y such that for each summable countable family
{xi}i∈I on X, the summation  i∈I fxi is defined to be f ( i∈I xi). In this section, we show that M is a symmetric monoidal closed category. Due to lack of space, proofs of propositions in this section are in [8].
Definition 3.4 For a positive natural number n and Σ-monoids X1, ··· , Xn and
Y , we say that a map f : X1 ×· · · × Xn → Y is n-linear when
f (x1, ··· , xk−1, −, xk+1, ··· , xn): Xk → Y

is an M-morphism for all k = 1, 2, ··· ,n and x1 ∈ X1, ··· , xn ∈ Xn. We write M(X1, ··· , Xn; Y ) for the set of n-linear morphisms of the form f : X1 ×··· ×Xn → Y .
Proposition 3.5 A functor M(X, Y ; −): M → Set is representable, i.e., there is an object X ⊗ Y such that M(X, Y ; −) ∼= M(X ⊗ Y, −).
We define I to be a Σ-monoid {0, 1} associated with a summation


Σ xi :=
,,,⎨

({i ∈ I | xi = 1} is empty)
({i ∈ I | xi = 1} is a singleton)

i∈I

For Σ-monoids X and Y , we define a Σ-monoid [X, Y ] := M(X, Y ) by



fi
i∈I
:=	λx.	i∈I fix	i∈I fix is defined for all x ∈ X
undefined	(otherwise).
(1)

Proposition 3.6 (M, I, ⊗, [−, −]) is a symmetric monoidal closed category.
A reflective full subcategory Mt
We define Mt to be the full subcategory of M consisting of total Σ-monoids.
Lemma 3.7 The inclusion functor U : Mt → M has a left adjoint functor.
Proof. For X ∈ M, let S be the set of total Σ-monoids whose underlying sets are quotients of X∗. We show that S satisfies the solution set condition: for each morphism f : X → Y whose codomain Y is in Mt, there exists a morphism s : X → A and a morphism h : A → Y for some A ∈S such that f = h◦ s. We define a map
p : X∗ → Y by p{xi}i∈I := Σi∈I fxi. Let A be the quotient of X∗ by an equivalence
image of p is closed under the summation of Y , the total Σ-monoid structure of Y
induces a total Σ-monoid structure of A, and we obtain a monomorphism h : A → Y . Since the image of f is in the image of h, there exists a morphism s : X → A such that f = h ◦ s. Hence, S satisfies the solution set condition. Since Mt is small complete [8], and U preserves all limits, U has a left adjoint functor by the adjoint functor theorem [13].	2
For a category C,a reflective full subcategory of C is a full subcategory of C such that the inclusion functor has a left adjoint functor. For a symmetric monoidal closed category (C, I, ⊗, [−, −]) and its full subcategory B, we say that B is an exponential ideal of C when for any X ∈ C and Y ∈ B, the exponential [X, Y ] is a B-object.
Theorem 3.8 ([2]) Let B be a reflective full subcategory of a symmetric monoidal closed category C. If B is an exponential ideal of C, then B has a symmetric monoidal closed structure, and the adjunction is symmetric monoidal.
By the definition (1) of the exponential [−, −] of M, it is easy to check that Mt
is an exponential ideal of M.
Corollary 3.9 Mt is a symmetric monoidal closed category, and the adjunction between M and Mt is symmetric monoidal with respect to the structures.
Let T be the symmetric monoidal monad on M induced by the symmetric monoidal adjunction. We show several properties of the unit ηX : X → TX.
Definition 3.10 We say that an M-morphism f : X → Y reflects summability when for every countable family {xi}i∈I on X if i∈I fxi is summable and is in the image of f , then {xi}i∈I is summable.

Lemma 3.11 The unit ηX : X → TX is monic and reflects summability.
Proof. We define a total Σ-monoid Xj by Xj := X + {⊥} with a summation


Σ yi :=
,,,⎨ inl Σ



i∈I

for each i ∈ I, yi is of the form inl(xi),
i
and {xi}i∈I is summable

i∈I
,,,
inr(⊥)	(otherwise)

where inl(−) is the left injection, and inr(−) is the right injection. We define an M-morphism h : X → Xj by hx := inl(x). Since an M-morphism is monic if and only if its underlying map is injective, h is monic. Let k : TX → Xj be the unique morphism such that h = k ◦ ηX. Since h : X → Xj is monic, the unit ηX is also monic. For a countable family {xi}i∈I on X, if  i∈I ηX xi is in the image of ηX, then we have
Σ hxi = Σ kηX xi = k  Σ ηX xi  ∈ image(k ◦ ηX) = image(h),

which means that {xi}i∈I is summable. Hence, ηX reflects summability.	2
Although our construction of T is abstract, for some Σ-monoids X, we can concretely describe TX via the universality of T .
Example 3.12 For countable sets A and B, let Pfn(A, B) be the set of partial maps from A to B. The set Pfn(A, B) forms a Σ-monoid by the union of graph relations:

fi
i∈I
:=		i∈I fi		i∈I fi represents a partial map undefined	(otherwise).

Let Rel(A, B) be the set of relations between A and B, which forms a total Σ- monoid by the union of graphs. There is an obvious inclusion h : Pfn(A, B) → Rel(A, B) between Σ-monoids. For a total Σ-monoid X and an M-morphism f : Pfn(A, B) → X, there is an M-morphism g : Rel(A, B) → X given by g(R) := (a,b)∈R f (δa,b) where δa,b := {(a, b)}. Since every partial map in Pfn(A, B) is equal to a sum of partial maps of the form δa,b, we obtain g ◦ h = f . Such g is
unique since g must satisfy the following equation.

g(R)= g ,
(a,b)∈R
δa,b⎞ =
(a,b)∈R
g(δa,b)= 
(a,b)∈R
gh(δa,b)= 
(a,b)∈R
f (δa,b).

By the universality of T , we see that T Pfn(A, B) is isomorphic to Rel(A, B).
Example 3.13 For a countable set A, we define sets A٨ and A÷ by
A٨ := {x : A → N | dom(x) is finite},	A÷ := Set(A, N ∪ {∞})

where dom(x) := {a ∈ A | x(a) /= 0}. The sets A٨ and A÷ are Σ-monoids with the pointwise summations. The Σ-monoid A÷ is total. As in Example 3.12, we can show that TA٨ is isomorphic to A÷.

Unique decomposition categories
M-categories
With respect to the symmetric monoidal structure of M, we consider M-enrichment [12]. By Proposition 3.5, we can say that an M-enriched category (M-category ) C is a category with a Σ-monoid structure on each hom-set C(X, Y ) such that for any summable countable families {fi : X → Y }i∈I and {gj : Y → Z}j∈J , the summation (i,j)∈I×J gj ◦ fi is defined to be ( j∈J gj) ◦ ( i∈I fi), i.e., the composition distributes over the summations if they exist. We write 0X,Y : X → Y
for the zero element in the Σ-monoid C(X, Y ) and call 0X,Y a zero morphism. By the definition of M-categories, the composition of a morphism with a zero morphism is a zero morphism.
For M-categories C and D, an M-enriched functor (M-functor ) F : C → D is a functor from C to D such that for any X, Y ∈ C, the map F : C(X, Y ) → D(FX, FY ) is an M-morphism. We say that F : C → D reflects summability when F : C(X, Y ) → D(FX, FY ) reflects summability for all X and Y in C.
By symmetric monoidal M-category, we mean an M-category with a symmetric monoidal structure on its underlying category. We do not assume that the sym- metric monoidal structure is compatible with the M-enrichment. For symmetric monoidal M-category C and D, a symmetric monoidal M-functor from C to D is an M-functor from C to D that is symmetric monoidal.

Strong unique decomposition categories
We recall the definition of unique decomposition categories in [4], and we give a subclass of unique decomposition categories.
Definition 4.1 A unique decomposition category is a symmetric monoidal M- category such that for all i ∈ I, there are morphisms called quasi projections ρi : i∈I Xi → Xi and quasi injections ιi : Xi → i∈I Xi subject to the following axioms:

ρ ◦ ι
=  idXi	(i = j)


Σ ι ◦ ρ

  idN	.

Definition 4.2 A strong unique decomposition category C is a symmetric monoidal
M-category C such that
The identity on the unit I is equal to 0I,I.
idX ⊗ 0Y,Y + 0X,X ⊗ idY is defined to be idX⊗Y .
We say that C is total when every hom-object is a total Σ-monoid.

The class of strong unique decomposition categories forms a subclass of unique decomposition categories: a strong unique decomposition category has binary quasi projections and binary quasi injections given as follows:


ρX,Y
:= X ⊗ Y  idX⊗0Y,I Xz,⊗ I  ∼= Xz,ρj
:= X ⊗ Y
0X,I⊗idY
Iz⊗,Y
∼=
Yz,

ιX,Y
:= X  ∼=  Xz,⊗ I  idX⊗0I,Y  Xz,⊗ Y
j
X,Y
:= Y  ∼= Iz⊗,Y  0I,X⊗idY Xz,⊗ Y .

We can similarly define quasi projections and quasi injections for general cases. It is easy to check that a strong unique decomposition category with the above morphisms forms a unique decomposition category.
Remark 4.3 As the main point of unique decomposition categories is their unique decomposition of morphisms into matrices of morphisms via quasi projections and quasi injections (Proposition 4.0.6 in [4]), it would be better to employ quasi projec- tions and quasi injections as primal data for strong unique decomposition categories. We choose the above definition of strong unique decomposition categories because of its compactness. At this point, we do not know “equivalent” definition that em- ploys quasi projections and quasi injections as primal data, which would consist of a series of equalities that require quasi projections and quasi injections to be natural and compatible with monoidal structural isomorphisms. In fact, the above quasi projections and quasi injections satisfy naturality and compatibility with monoidal structural isomorphisms; see Proposition 4.8 for the case of total unique decompo- sition categories.
Example 4.4 All the examples of unique decomposition categories in [5] are strong unique decomposition categories. For example, sets and partial injections, sets and partial maps, sets and relations are strong unique decomposition categories.
Example 4.5 The opposite category of a strong unique decomposition category is a strong unique decomposition category.
Example 4.6 A category C with countable biproducts is a total strong unique decomposition category, c.f. [4]. For a countable family {fi}i∈I on C(X, Y ), we define its summation by


fi
i∈I

:= X 	δX	z ,

       

i∈I

Y 	γX	zY ,

where δX and γX are the diagonal morphisms. Since the composition distributes over the summation, we obtain an M-enrichment of C. We take the finite biproducts as a symmetric monoidal structure of C. By these data, C forms a strong unique decomposition category. Concrete examples are: sets and relations, sup-complete lattices and continuous maps, and Mt.
Example 4.7 Let F : C → D be a faithful functor from a symmetric monoidal category C to a category D with countable biproducts. We say that F : C → D is downward-closed when for every countable family {fi : X → Y }i∈I on C-morphisms,

if the summation   Ff : FX → FY is in the image of F , then for every subset J ⊂ I, the summation i∈J Ffi : FX → FY is also in the image of F . If the faithful functor F : C → D is downward-closed, then C forms a strong unique decomposition category: for a countable family {f }  on C(X, Y ), we define   f to be f when
i∈I Ffi is equal to Ff ; when Σi∈I Ffi is not in the image of F , we do not define
Proposition 4.8 If a strong unique decomposition category is total, then it has ﬁnite biproducts: the unit is a zero object, and X ⊗ Y with morphisms

(ρX,Y , ρj
, ιX,Y , ιj
) forms a biproduct of X and Y . Furthermore, the symmetric

monoidal structure coincides with the symmetric monoidal structure derived from the ﬁnite biproducts.
Proof. In every strong unique decomposition category, the unit is a zero object since the identity on the unit is a zero morphism. When the strong unique decom-

position category is total, (X ⊗ Y, ρX,Y , ρj
) forms a product of X and Y , and

(X ⊗ Y, ιX,Y , ιj
) forms a coproduct of X and Y . For f : X → Y and g : Z → W ,

the tupling ⟨f ◦ ρX,Z,g ◦ ρj
⟩ is ιY,W ◦ f ◦ ρX,Z + ιj
g ◦ ρj
, which is equal

to the cotupling [ιY,W ◦ f, ιj
g]. Hence, (X ⊗ Y, ρX,Y , ρj
, ιX,Y , ιj
) forms

a biproduct of X and Y . By the universality of biproducts, we can check that coherence isomorphisms of the symmetric monoidal structure of the strong unique decomposition category coincide with the symmetric monoidal structure derived from the biproducts.	2

A representation theorem
For a strong unique decomposition category C, since T is a symmetric monoidal functor (Corollary 3.9), we can define a new M-category T∗C by the action of T : objects are objects of C, and T∗C(X, Y ) := T (C(X, Y )). Furthermore, the unit ηX : X → TX induces an M-functor H : C → T∗C given by HX := X and Hf := ηC(X,Y )(f ) for f : X → Y .
Proposition 5.1 T∗C is a total strong unique decomposition category, and H is a faithful strong symmetric monoidal M-functor that reflects summability.
Proof. We give a symmetric monoidal structure on the underlying category. For objects, we employ the symmetric monoidal structure of C. For f : X → Y and g : Z → W in T∗C, we define f ⊗ g : X ⊗ Z → Y ⊗ W to be
HιY,W ◦ f ◦ HρX,Z + Hιj	◦ g ◦ Hρj	.
Functoriality of ⊗ follows from M-enrichment of H. For example,


idX ⊗ idY	=  H(ιX,Y ◦ ρX,Y + ιj
j
X,Y
)  =  H(idX⊗Y )  =  idX⊗Y .

We can similarly check that ⊗ is compatible with the composition of C. By M- enrichment of H again, we can check that ⊗ with HλX ,HρX ,HαX,Y,Z and HσX,Y

provide a symmetric monoidal structure on T∗C where λX : X ⊗ I → X, ρX : I ⊗ X → X, αX,Y,Z : X ⊗ (Y ⊗ Z) → (X ⊗ Y ) ⊗ Z and σX,Y : X ⊗ Y → Y ⊗ Z are the coherence isomorphisms of C. The identity on the unit is the zero morphism. In fact, HidI = H0I,I = 0I,I. We also have


idX ⊗ 0Y,Y + 0X,X ⊗ idY = HιX,Y ◦ HρX,Y + Hιj
j
X,Y
= idX ⊗ idY = idX⊗Y

in T∗C. Therefore, we see that T∗C is a strong unique decomposition category. Since T constructs total Σ-monoids, T∗C is total. By the definition of symmetric monoidal structure of T∗C, we see that H is strong symmetric monoidal. The M-functor H is faithful and reflects summability by Lemma 3.11.	2
Since H : C → T∗C is faithful and reflects summability, H completely character- izes the summation of C-morphisms:
Σ fi is defined to be f ⇐⇒ Hf = Σ Hfi	in T∗C(X, Y ).

We go a bit farther so as to give an embedding into a category that is more familiar to us than total strong unique decomposition categories. For a total strong unique decomposition category A, we define a category B(A) by:
An object is a countable family on the set of A-objects.
A morphism f : {Xi}i∈I → {Yj}j∈J is a family {fi,j : Xi → Yj}(i,j)∈I×J .
The identity id{Xi}i∈I on {Xi}i∈I and the composition g ◦ f are given by



 id{Xi}i∈I

i,i′ :=
idXi 0
(i = ij) (i /= ij),
(g ◦ f )i,k :=
Σ gj,k ◦ fi,j .

Xi,Xi′
j∈J

B(A) has countable biproducts: a biproducts i∈I {Xij}j∈Ji of a countable fam- ily {{Xij}j∈Ji }i∈I is {Xij}(i,j)∈ i∈I Ji whose i-th projection and i-th injection πi :  i∈I {Xij}j∈Ji  {Xij}j∈Ji : κi for i ∈ I are given as follows:


πi((ij, jj), j) :=
 idXij	((i, j)= (i , j ))
j	j

0Xi′j′ ,Xij	(otherwise),


κi(j, (ij, jj)) :=
 idXij	((i, j)= (i , j ))
j	j

0Xij ,Xi′j′	(otherwise).
The induced summation of a countable family {fk : {Xi}i∈I → {Yj}j∈J }k∈K is pointwise: the (i, j)-th entry of  k∈K fk is  k∈K(fk)i,j. By Example 4.6, B(A) is a total strong unique decomposition category. A similar construction appears in
[13] called matrix construction.
We define a fully faithful functor K : A → B(A) by KX := {X} and Kf :=
{f} where we simply write {x} for a family indexed by a singleton {•} such that
{x}• = x.

Lemma 5.2 K is a fully faithful strong symmetric monoidal M-functor.
Proof. Since summations on hom-sets of B(A) are pointwise, the functor K pre- serves summations, i.e., K is an M-functor. K is fully faithful by the defini- tion. It remains to see that K is strong symmetric monoidal. Since the sym- metric monoidal structure of A is given by the finite biproducts (Proposition 5.1 and Proposition 4.8), we show that K preserves finite biproducts.  There are

canonical morphisms ϕ := ⟨KρX,Y , Kρj
⟩ : K(X ⊗ Y ) → KX ⊕ KY  and

ψ := [KιX,Y , Kιj
] : KX ⊕ KY → K(X ⊗ Y ). By the universality of biprod-

ucts and M-enrichment of K, we see that ϕ ◦ ψ = idKX⊕KY  and ψ ◦ ϕ =

K(ιX,Y ◦ ρX,Y )+ K(ιj
j
X,Y
) = idK(X⊗Y ).  It is easy to check that KI is a 

zero object of B(A).	2
Now, we obtain a representation theorem for strong unique decomposition cat- egories by composing two embeddings K and H.
Theorem 5.3 For every strong unique decomposition category C, there is a category D with countable biproducts and a faithful strong symmetric monoidal M-functor F : C → D that is downward-closed and reflects summability.
Proof. By Proposition 5.1 and Lemma 5.2, for every strong unique decomposition category C, the category B(T∗C) has countable biproducts, and we have a faithful strong symmetric monoidal M-functor KH : C → B(T∗C) that reflects summability. Downward-closedness of KH follows from the axioms of Σ-monoids and that KH reflects summability.	2
The faithful functor KH characterizes the Σ-monoid structure on C(X, Y ):
Σ fi is defined to be f ⇐⇒ KHf = Σ KHfi.

So as to prove the fundamental property of strong unique decomposition categories, we construct a trace operator following the argument in [16]. Let D be a category with countable biproducts. For f : X ⊕ Z → Y ⊕ Z in D, we define fXY : X → Y , fXZ : X → Z, fZY : Z → Y and fZZ : Z → Z by:
fXY := π0 ◦ f ◦ κ0,	fXZ := π1 ◦ f ◦ κ0,	fZY := π0 ◦ f ◦ κ1,	fZZ := π1 ◦ f ◦ κ1.
By Theorem 3 in [16] and the argument in the paper, D has a uniform trace operator given by



Z X,Y
:= X  ⟨X,∞⟩ zX,⊕ 

i∈N
X  X⊕uf zX,⊕ Z   f	zY ,⊕ Z   π0	zY ,

where ∞ : X →  i∈N X is the diagonal morphism, and uf :  i∈N X → Z is
 
calculation, we see that the obtained trace operator is equal to the standard trace

formula: trZ
(f ) = fXY + Σ

i∈N
fZY ◦ f i
fXZ.

Corollary 5.4 Every strong unique decomposition category C has a uniform partial

trace operator. If the summation ExZ
(f ) := fXY +Σ

i∈N
fZY ◦f i
fXZ is deﬁned

for all X, Y, Z ∈C and f : X ⊗ Z → Y ⊗ Z, then Ex is a uniform trace operator of
C.
Proof. By the above argument, B(T∗C) has a uniform trace operator given by the standard trace formula. Since KH : C → B(T∗C) is strong monoidal and reflects

summability, Ex provides a uniform partial trace operator of C. If ExZ
(f ) is

defined for all X, Y, Z ∈ C and f : X ⊗ Z → Y ⊗ Z, then by the definition of trace operators, Ex is a trace operator of C.	2
Acknowledgement
The author would like to thank Masahito Hasegawa and Shin-ya Katsumata for comments and advice. The author also thank Esfandiar Haghverdi and Philip Scott for helpful comments and advice on the definition of unique decomposition cate- gories.

References
Abramsky, S., E. Haghverdi and P. J. Scott, Geometry of interaction and linear combinatory algebras., Mathematical Structures in Computer Science 12 (2002), pp. 625–665.
Day, B., A reflection theorem for closed categories, Journal of Pure and Applied Algebra 2 (1972),
pp. 1–11.
Girard, J.-Y., Geometry of interaction I: Interpretation of System F, in: S. V. R. Ferro, C. Bonotto and A. Zanardo, editors, Logic Colloquium ’88 Proceedings of the Colloquium held in Padova, Studies in Logic and the Foundations of Mathematics 127, Elsevier, 1989 pp. 221–260.
Haghverdi, E., “A Categorical Approach to Linear Logic, Geometry of Proofs and Full Completeness,” Ph.D. thesis, University of Ottawa (2000).
Haghverdi, E. and P. J. Scott, A categorical model for the geometry of interaction, Theoretical Computer Science 350 (2006), pp. 252–274.
Haghverdi, E. and P. J. Scott, Towards a typed geometry of interaction, Mathematical Structures in Computer Science 20 (2010), pp. 473–521.
Hines, P. and P. J. Scott, Conditional quantum iteration from categorical traces (2007), manuscript.
Hoshino, N., A representation theorem for unique decomposition categories (2012), available at
http://www.kurims.kyoto-u.ac.jp/~naophiko/paper/rtudc.pdf.
Hoshino, N. and S. Katsumata, Int construction and semibiproducts (2009), RIMS preprint 1676.
Houston, R., Finite products are biproducts in a compact closed category, Journal of Pure and Applied Algebra 212 (2008).
Joyal, A., R. Street and D. Verity, Traced monoidal categories, Mathematical Proceedings of the Cambridge Philosophical Society 119 (1996), pp. 447–468.
Kelly, G. M., Basic concepts of enriched category theory, Theory and Applications of Categories 10
(2005).
MacLane, S., “Categories for the Working Mathematician (Second Edition),” Graduate Texts in Mathematics 5, Springer, 1998.
Malherbe, O., P. J. Scott and P. Selinger, Partially traced categories, To appear in Journal of Pure and Applied Algebra (2011).


Manes, E. G. and M. A. Arbib, “Algebraic Approaches to Program Semantics,” Springer-Verlag New York, Inc., 1986.
Simpson, A. and G. Plotkin, Complete axioms for categorical fixed-point operators, in: Proceedings of the 15th Annual IEEE Symposium on Logic in Computer Science, LICS ’00 (2000), pp. 30–41.
