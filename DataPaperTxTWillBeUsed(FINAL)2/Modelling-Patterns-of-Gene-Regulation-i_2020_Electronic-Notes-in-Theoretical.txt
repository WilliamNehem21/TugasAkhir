Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 350 (2020) 117–138
www.elsevier.com/locate/entcs

Modelling Patterns of Gene Regulation in the bond-calculus
Thomas Wright1,3 Ian Stark2
Laboratory for Foundations of Computer Science, School of Informatics, University of Edinburgh, UK

Abstract
The bond-calculus is a language for modelling interactions between continuous populations of biomolecular agents. The calculus combines process-algebra descriptions of individual agent behaviour with affinity patterns, which can specify a wide variety of patterns of interactions between the sites of different agents. These affinity patterns extend binary molecular affinities to multiway reactions, general kinetic laws, and cooperative interactions. In this paper we explore bond-calculus modelling of gene regulation at both the molecular and network levels. At the molecular level, we show how affinity patterns can succinctly describe the λ-switch, a prototypical example of cooperative regulation. Moving to the network level, we develop a general model of gene regulatory networks using affinity patterns and an expanded Hill kinetic law. We illustrate the approach with a specific example: the complex plant circadian clock. We analyse these models via the bond-calculus’s differential equation and stochastic semantics, and validate our results against existing models from the literature.
Keywords: process algebra, gene regulation, biochemical networks, multiway


Introduction
Early applications of process calculi to biochemical modelling followed Regev et al’s process-as-molecule approach, representing individual molecules as processes and reactions as binary message-passing (send and receive) with reaction rates following the rule of mass action [70, 73]. However, whilst many case studies demonstrated the ability of this framework to model a wide range of biological systems [12, 23, 52, 55, 60], these also revealed that common features of biological

1 Email: thomas.wright@ed.ac.uk
2 Email: ian.stark@ed.ac.uk
3 Thanks to Jane Hillston, Stephen Gilmore, and the rest of the Edinburgh PEPA group for invaluable discussions and feedback during the development of the bond-calculus, and to our anonymous reviews for their thorough comments. Thanks also go to Juliet Cooke and Jos Gibbons for commenting on a draft of this paper. This work was supported by grant EP/L01503X/1 for the University of Edinburgh School of Informatics Centre for Doctoral Training in Pervasive Parallelism (http://pervasiveparallelism.inf.ed.ac.uk/) from the UK Engineering and Physical Sciences Research Council (EPSRC).

https://doi.org/10.1016/j.entcs.2020.06.007
1571-0661/© 2020 The Author(s). Published by Elsevier B.V.
This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).

systems do not easily fit within this style of interaction, requiring complex encod- ings to model effectively. For example, gene regulation networks involve multiway interactions and general kinetic laws at the network level, as well as contextual (cooperative) interactions between multiple sites at the molecular level. These challenges spurred the development of new languages for biochemical modelling: such as process algebras with communication mechanisms that better model bio- logical interactions [28, 49, 54]; and rule-based languages [10, 30, 35, 64] that replace an agent-based viewpoint with schemes of reactions specified via pattern match- ing. Some later languages have also adopted a population-level process-as-species abstraction [28, 57], in which processes represent not individual molecules as in the process-as-molecule abstraction, but representative individuals of continuous popu- lations of chemical species. Each approach leads to a different modelling style and new perspectives on the systems studied [20], motivating the continued investiga- tion of a mixed population of modelling formalisms and their application to different types of biological systems.
The bond-calculus [87] is a process algebra for modelling complex interactions in biological systems, with a novel communication mechanism based on affinity pat- terns which capture the interaction capabilities of reaction sites in the presence of multiway and contextual reactions. The concept of reaction site affinity typically refers to the degree of compatibility between pairs of reaction sites, and binary forms of affinity based communication has been proposed as an extension to the name/coname based communication of π-style process calculi [33, 71]. As well as better matching our conceptual model of protein reaction sites, this has several other practical advantages, such as separating the kinetic constants of a model from its agents, and making it possible to study the evolution of sites alongside the evolution of molecular agents. The bond-calculus goes further, and allows affinity patterns, which use pattern matching to specify the overall rate of more complex patterns of interaction, involving clusters of sites spanning several molecules according to a general kinetic law. This provides a more realistic model of molecular site affinity reflecting the importance of context dependant and multiway interactions in real biological systems. This approach gains some of the flexibility of rule based mod- elling in expressing contextual interactions, however, retains the agent based style of traditional process calculi, since interactions are still built up by pairwise communi- cations between agents whilst affinity patterns merely specify compatibility between sites. Affinity patterns also correspond to a natural graphical representation of site affinity, extending the affinity networks of the continuous π-calculus [57].
In this paper we present the syntax of the bond-calculus and explore its use in expressing common patterns of interaction in gene regulation. To this end we will start by demonstrating the ability of the bond-calculus to model cooperative interactions at the λ-switch based on the classical stochastic π-calculus model of Kuttler and Niehren [55]. This is a key case study of the importance of contextual interactions in transparently modelling biological systems, and has subsequently been used to demonstrate different communication operations in a number of other languages [7, 24, 25, 49]. Next we turn to the network level modelling and demon-

strate the ability of the bond-calculus to combine a general purpose process based model of gene regulation with affinity patterns specifying the structure of a par- ticular network. Finally, we give an example of this with a compact model of the complex plant circadian clock [31, 32, 68]. We also demonstrate the ability of the bond-calculus to simulate these models using its continuous differential equations semantics and a stochastic semantics based on chemical reaction networks. We hope by exploring new ways of modelling these well known and important biologi- cal systems to explore appropriate modelling styles for capturing common patterns of interaction in the bond-calculus, and enable easier comparison to existing frame- works and models [7, 28, 39, 49, 54, 55, 72, 79].
The structure of this paper is as follows. Section 1 contains this introduction and the related work. Section 2 briefly introduces the syntax of the bond-calculus. Section 3 contains our model of the λ-switch. Section 4 turns to general modelling of gene regulatory networks. Section 5 discusses conclusions and future work.

Related work
Gene regulation has been modelled at a number of different levels across existing process algebras and in rule based languages. Existing molecular levels of gene regulation include [7, 24, 52, 53, 55]. Blossey and Cardelli [11] proposed a general compositional approach to network-level modelling of gene regulation in stochas- tic π, where processes represent regulatory interactions rather than individual genes and use mass action kinetics; extensions of this model include [12, 47, 66, 74]. Whilst individual-level nondeterministic or stochastic semantics are most common among biological process algebras, there has been much work to develop population level semantics based on Ordinary Differential Equations (ODEs) or chemical reac- tions [15, 22, 38, 42, 45, 51, 59, 80, 83]. Most rule based languages — being based on
chemical reactions — also support population level ODE semantics [10, 21, 35, 64].
Affinity was first used in β-binders [33, 71] to quantify compatibility between protein sites, and are also included in its extension BlenX [34]. The continuous π-calculus [57] also includes a graphical form of affinity network, and has been used to study molecular evolution through mutations of both agents and affinity networks [56, 58]. These languages are both restricted to binary communication, although BlenX has been extended with quantitative transactions as a means of combining binary interactions to form atomic multiway reactions [26]. On the other hand, languages with CSP style multiway synchronisation such as PEPA [44] are able to directly model n-way interactions and have been applied to modelling bio- chemical networks [19]. Bio-PEPA [28] is an extension of PEPA explicitly designed for biochemical modelling and has been applied to modelling many gene regula- tory networks [28, 68] using general kinetic laws. The communication mechanisms of PEPA/Bio-PEPA are quite different from that of the bond-calculus, relying on CSP-style synchronization on shared actions rather than matching of compatible channels/sites representing protein domains, and these languages do not include a mechanism for dynamic complex formation. The link-calculus [13] is one of the few agent based calculi which mix mobility with multiway synchronisation, and has

been applied to modelling membranes interactions [14]. Being based on chemical re- actions, rule-based languages also directly support modelling of multiway reactions and dynamic complex formation [10, 30, 35].
Contextual interactions have also been studied extensively in rule based lan- guages, and have been cited as a major advantage to rule based approaches in mod- elling gene regulation [53]. On the other hand, a number of agent based languages have applied more expressive communication operations as a means of more directly expressing biochemical interactions [48, 49, 84]. Under one light, languages with affinity based communications such as the bond-calculus can be seen as an interme- diate step, since they combine agent based species definitions with sites governed by global rules, however, we argue that they are closer to traditional agent based languages since reactions still arise via pairwise communication between agents, and affinity patterns simply define the interaction capabilities of sites [87]. There has long been an exchange of ideas between process algebras and rule based lan- guages including languages such as κ admitting process calculi style semantics and a translation into the π-calculus when restricted to binary interactions [30], whilst the addition of hyperedges and reaction constraints allows the rule based language React(C) to transparently encode the stochastic π-calculus [50]. Nevertheless, each approach leads to a very different style of modelling, and a different perspective on the systems modelled, motivating continued investigation of different formalisms and modelling styles.
Modelling in the bond-calculus
In this section we will briefly introduce the bond calculus. Since the main focus of this paper is exploring the modelling capabilities of the bond-calculus, we will focus on summarising the syntax of the language, and refer the interested reader to [87] for a more complete introduction to the language and its semantics.
The chief component of a bond-calculus model is a mixture:
M , [A1] A1  ...  [An] An .
This represents a chemical solution of different species A1,..., An at real valued concentrations [A1] ,..., [An] ∈ R≥0 respectively. Species are described by process- algebraic terms that indicate their potential behaviour. In particular, species offer interaction at certain sites s, e, p,.. ., which may also be annotated with locations l, m, ... that indicate spatial proximity on a molecular complex.
The declaration of which sites are compatible and the quantitative rates of in- teraction between them appears in a separate affinity network,
A , { γ1 @ L1,..., γn @ Ln }
which is made up of affinity patterns γ @ L. Each affinity pattern combines a pattern γ of reaction sites with a general kinetic law L : Rm → R for the corre- sponding reaction rate. Patterns themselves are structured γ = p1  ...  pm where

each component is either a single site pi = s, or a cluster of multiple colocated sites pi = (s1| ... |sti ). For example, a simple pattern a  b  c allows chemical reactions to occur between three distinct molecules presenting sites a, b, and c respectively; whilst the pattern a  (b|c) allows reactions between site a on one molecule with sites b and c on another; and a pattern (a|b|c) allows unimolecular reactions involving a, b, and c all on a single molecular complex.
The process-algebra terms describing the species in a model are given as a series of definitions D(l1,..., ln) , A, parameterized by locations l1,..., ln. The species bodies A, B in these definitions have the following grammar:
A, B ::= 0 | π1.A1 + ... + πn.An | A | B | (ν l1,..., ln)A | D(l1,..., ln)
These are in turn: the empty species 0; a choice π1.A1 + ... + πn.An of different species A1,..., An, guarded by preﬁxes π1,..., πn; a parallel composition A | B of species A and B, a restriction (ν l1,..., ln)A of locations l1,..., ln in a species A; or finally, an application D(l1,..., ln) of the definition D at locations l1,..., ln.
The prefixes here capture possible interactions offered by species: each prefix
πi is either a site s, possibly located s@l, or a binding preﬁx s(m1,..., mn). Re-
striction (ν l)(... ) expresses formation of a complex of colocated molecules; and where sites are annotated with locations this can determine the type of their in- teractions: sites at different locations interact via chemical reactions between dif- ferent molecules, whilst sites at the same location interact allosterically within a molecule. Furthermore, the division of species into distinct molecular complexes is governed by connectivity of locations, using a structural congruence ≡ which includes rules for equivalence of species and mixture, along with a compatibility condition [A] A ≡ [A] B  [A] C if A ≡ B | C. For example, given compatible sites a and b, two agents,
A , a(l1).a∗@l1.A	B , b(l2).b∗@l2.B
may react to dynamically form the bimolecular complex
C , (ν l)(a∗@l.A | b∗@l.B) .
Locations l1 and l2 are replaced by l in a form of simultaneous agreement inspired by the πI-calculus [76], whilst the resulting shared location l binds the two half of the parallel composition | into a complex which cannot be broken down into distinct species. This form of communication models the symmetric nature of molecular bonding, and extends naturally to multiway reactions.
Suppose we want to complete this with a description of quantitative reaction rates following the law of mass action, defined by 4
MAk([X1] ,..., [Xn]) , k [X1] ... [Xn] .

4 Here we assume the units in units concentration, so there is no explicit dependency on the cellular volume
V — kinetic laws are given assuming different sites on independent species and the bond-calculus will adjust the rates [87] depending on the combinatorics of sites similarly to [10, 21].

We can use affinity pattern a  b @ MAk1 to declare that sites a and b are com- patible and interact at rate MAk1 ([a] , [b]) = k1[a][b] where [a] and [b] are the total concentrations of species carrying sites a and b respectively — the sites in the affin- ity pattern are associated to the arguments of the rate law in a positional manner indicating that in this case the concentrations of a and b correspond to the first and second arguments of the rate law respectively. Finally, we can specify the initial state of the system as a mixture M , [A] A  [B] B.
The semantics of the language is described in [87] via a compositional transition semantics for individual species, which is extended to a compositional population level semantics for mixtures. This semantics then allows us to directly define the evolution of the system as a vector field of mixtures (equivalent to a system of differential equations), or, indirectly extract a chemical reaction network allowing a broader range of simulation methods including stochastic simulation. We have a preliminary implementation [86] which can perform numerical simulation of ex- tracted ODEs, or stochastic simulation via the StochPy [62] library.
For example, in the mixture M specified above, A offers site a and B offers site b: which are compatible according to the pattern a  b; this results in the reaction, A  B →k1 C which consumes species A and B whilst producing species C at overall rate MAk1 ([A], [B]) = k1[A][B], or the differential equations


d[C]
= −
dt
d[A]
= −
dt
d[B]
dt  = k1[A][B] .

Similarly, we can introduce and unbinding reaction C →k−1 A  B by using the affinity pattern (a∗|b∗)@ MAk  , where sites a∗ and b∗ are now colocated on C.

Molecular level modelling: cooperativity at the λ- switch
In this section we will demonstrate how the bond-calculus can be used to build detailed mechanistic models of gene regulation, through the running example of the lysis-lysogenesis decision circuit of λ-phage infected E. Coli (the λ-switch). The λ- phage is a bacteriophage which infects E. Coli cells by inserting the λ-switch genetic circuit into their DNA, placing them into one of two growth phases: the lysogenic phase in which the viral DNA is passively reproduced by the normal reproduction of the E. Coli cells, and the lytic phase when the virus reprograms the cell to produce many copies of the phage which are released upon the initiation of lysis breaking down the cell wall (see Fig. 2).
The λ-switch has been the subject of a number of mathematical models including [1, 4, 40, 41, 63, 77, 79, 81], and has became a standard benchmark for modelling gene regulation. Kuttler and Niehren’s model of the λ-switch is a classic model of cooperative gene regulation in the stochastic π-calculus [55] and provides the basis of our model. Unlike individual level stochastic process calculi, the bond- calculus takes a continuous view of biological systems, modelling the state of a system via the concentration of each species of agents. Hence, a bond-calculus


	


Fig. 1. Schema of E. Coli infection by phage λ.
Fig. 2. Gene regulation at the λ-switch.

model allows us to analyse a system not only via stochastic simulation, but also by extracting a system of differential equations: in this section we will focus on these differential equations to compare them to the stochastic simulations from the original model [55]. Since π-based process calculi rely on a binary communication mechanism, they require cooperative interactions involving multiple sites of the operator region to be modelled as internal state updates with instantaneous reaction rates (modelled via update channels [24, 25, 49, 55] or the visitor pattern [54]) — other potential methods of modelling such interactions include transactions [29] or priorities [84]. This raises a question of how to model the switch in continuous process calculi such as continuous π [57] and the bond-calculus whose differential equation semantics do not include instantaneous rates, however, we will see that affinity patterns are expressive enough to capture cooperativity directly as a type of multiway synchronisation. This is somewhat similar to how rule-based languages capture cooperativity using schemes of reaction rules spanning multiple sites [7, 53], however, whilst rules specify the whole effect of the reaction, affinity patterns are more narrowly focused on the interaction capacities of sites, leaving the effect of reactions to be determined by the agents involved, similarly to traditional process calculi.

The basics of the model
The mechanisms of transcription regulation at the λ-switch underlying Kuttler and Niehren’s model are described in depth in [55]; here we will recall some of the key features of the switch. The dynamics of gene regulation at the λ-switch should implement a bistable switch [77] based on the levels of the two proteins, Rep and Cro, exhibiting either high levels of Rep and the exclusion of Cro (leading to lysogeny ), or high levels of Cro and the exclusion of Rep (leading to lysis). The protein Rep is produced from the gene cI by the binding of RNA Polymerase (RNAP) to its promoter region PRM, whilst the protein Cro is produced by the binding of RNAP to its promoter region PR (Fig. 2). The proteins Rep and Cro form into dimers which act as repressors by binding to each of the three operator regions OR1, OR2, and OR3 which overlap with the promoter sites for PR and PRM, so that the binding of repressors at OR3 and RNAP at PRM are mutually exclusive, and the binding of repressors at OR1 and OR2 and RNAP at PR are mutually exclusive. The final key component of the switch is cooperative binding : the binding of a Rep dimer at









Fig. 3. Schematic of dimerization.
Fig. 4. Affinity network ARep for dimerisation reactions.

OR1 significantly increases the affinity for the Rep dimer at OR2; in this way a Rep dimer at OR1 recruits another at OR2.
All values of the model’s rate parameters are taken from [55, Fig. 4], with the exception of three new parameters defined by,
Kd_OR2_boost , Kd_OR2_rep − Kd_OR2_rep_coop = 3.835
Kf_prm_boost , Kf_prm_promoted − Kf_prm	= 0.081
Kd_rep , 0.0.
To allow direct comparison between our model and the existing stochastic model, we will assume throughout that our units of concentration have been rescaled to coincide with copy numbers; under these units the macroscopic and stochastic rate parameters coincide.
Modelling autoreactive sites: repressor dimerization
A key feature of λ-switch is the binding of pairs of Rep proteins (or equally pairs of Cro proteins) to form dimers, which then act as repressors. The schema of reaction among Rep proteins is shown in Fig. 3. The unbound Rep protein can either degrade by interacting on the degradeRep site, causing it to decay into nothing, or bind to another copy of itself by interacting on the joinRep site. This type of homodimerization reaction in gene regulation, plays an important role in controlling noise, and can be one source of cooperativity at binding sites [18]. Despite the ubiquity of this mechanism, it is not a particularly natural fit for the communication mechanisms of traditional π-based calculi [55], since the symmetrical nature of the reaction needs to be broken into two halves modelling Rep by an agent such as
Rep , joinRep!.Rep2 + joinRep?.0
which offers itself a choice between sending on the joinRep! site or receiving on the joinRep? site. This departs from the underlying chemistry firstly in breaking the symmetry of the underlying reaction, but also, once we add in the quantitative reaction rate KaRepDimer, splitting the reaction site into two might be expected to result in twice the reaction rate expected from the law of mass action [50, 51, 67] 5 .

5 Some stochastic process calculi semantics including the original reduction semantics for stochastic π (but not subsequent versions of the language [67, 72]) remedy this with a special rule for homodimerizations,

In contrast, in the bond-calculus we are able to model the Rep protein as agents representing the bond/unbound state of the protein,
Rep , degradeRep.0 + joinRep(l).RepD(l)
RepD(l) , unjoinRep@l.Rep + bindRep@l.0
On dimerization each Rep agent and its binding partner will agree on a shared location l and each will transition into the bound state RepD(l): overall this will result in a dynamic complex, Rep2 , (ν l)(RepD(l) | RepD(l)), as a parallel com- position (|) of two bound subunits held together by a shared location l. In its bound state, RepD(l), a Rep molecule may either become unbound from the dimer by com- municating on joinRep, or bind again, this time to an operator of the λ-switch 6 . The interactions capacities of these agent’s reaction sites follow the affinity network,
ARep =  joinRep  joinRep	@ MA2×KaRepDimer,
unjoinRep | unjoinRep	@ MAKdRepDimer,
degradeRep	@ MAKdRep}
Here the pattern joinRep  joinRep specifies that the joinRep is compatible with itself, resulting in a dimerization reaction between two separate molecules containing a joinRep site, whilst the pattern unjoinRep | unjoinRep results in an undimerization reaction involving a single molecule with two parallel components, each having a unjoinRep site. Importantly, since our model faithfully captures the fact that the dimerization reaction is between multiple instances of a single site on a single species, our semantics halves the resultant rate in accordance with the law of mass action, and accordingly our rate parameter is twice that specified in the stochastic π model.
We can also view the affinity network graphically as the hypergraph in Fig. 4, by considering each cluster of sites as a node, and patterns as hyperedges (this directly generalises the affinity networks of continuous π, which are labelled graphs).
The above model demonstrates how the combination of affinity patterns and our communication mechanism based on location agreement can capture the symmetri- cal nature of dimerization. Another advantage of this symmetry is that it allows us to, for example, consider variants of the mechanism such as replacing dimerization with tetramerization (as considered in [17]) simply by replacing the patterns for binding/unbinding with,
joinRep  joinRep  joinRep  joinRep @ MAk1
unjoinRep|unjoinRep|unjoinRep|unjoinRep @ MAk−1
without the need to modify the definitions of the agents involved in the reactions.

however, this approach breaks the strict correspondence between channels (or rather, channel ends) and protein domains, and does not extend to multiway interactions.
6 For simplicity, we will not model dynamic binding of Reps to operators explicitly, as we have done for dimerization and as is done in [55].


20	200

15	150

10	100

5	50


0
0.0	0.5	1.0	1.5	2.0	2.5	3.0
Time (sec)
0
0.0	0.5	1.0	1.5	2.0	2.5	3.0
Time (sec)


Fig. 5. Rep, starting from low level (left) and a high level (right); this reproduces the concentration dependent equilibrium of Rep and matches [55, Fig. 25].




Thus, affinity patterns effectively separate how agents respond to communication at given sites, and the patterns of interaction these sites engage in.
We may use the bond-calculus tool to perform stochastic simulation, or extract a system of ODEs describing the dynamics of dimerization. Two ODE simulation results showing how the equilibrium shifts depending on whether we start at low or high Rep concentration are shown in Fig. 5; these graphs are consistent with the stochastic simulation results shown in [55, Fig. 25].
The definitions for Cro and its affinity network ACro are nearly identical to those for Rep except the sites are renamed appropriately.




Modelling the switch: agents

We now get to the heart of the model, the λ-switch itself. Just as in Fig. 2, the λ-switch is described as consisting of the three operators, OR1, OR2, OR3, and the two promoters, PRM and PR; this is captured in our model as a parallel composition of individual agents representing each of these operators and promoters, bound together at a shared location l,


Switch , (ν l)(PRM(l) | OR3(l) | OR1(l) | OR2(l) | PR(l))


We must now give definitions for each of these constituent agents. We start with the operators ORi (i = 1, 2, 3). These will each have three possible states: the unbound state ORi, and the bound states ORiRep and ORiCro for Rep and Cro

respectively.

ORi(l) , bindORiCro@l(m).ORiCro(m)
+ bindORiRep@l(m).ORiRep(m)
+ unboundORi@l.ORi(l)
+ noRepORi@l.ORi(l)
ORiRep(l) , unbindORiRep@l(m).(ORi(l) | RepD(m) | RepD(m))
+ boundORi@l.ORiRep(l)
+ hasRepORi@l.ORiRep(l)
ORiCro(l) , unbindORiCro@l(m).(ORi(l) | CroD(m) | CroD(m))
+ boundORi@l.ORiCro(l)
+ noRepORi@l.ORi(l)

Note that unlike in previous models, we have a single uniform definition for each operator, which makes no mention of the reaction rates, or updates of neighbour- ing sites; this is because we will describe all of the quantitative features of the operators in the affinity network. We should note that as well as the sites for bind- ing/unbinding, operators indicate their binding status to the other sites using their boundORi/unboundORi sites, and, more specifically, whether they are bound to a Rep molecule using their hasRepORi/noRepORi sites. Next we describe the agent for the promoter PRM,

PRM(l) , bindPRM @l.PRMBound(l)
+ unboundPRM @l.PRM(l)
PRMBound(l) , unbindPRM @l.(PRM(l) | RNAP)
+ transcribeRep@l.(MRNAcI | PRM(l) | RNAP)

The agent for the promoter PR is defined nearly identically (with appropriately renamed channels). Finally, the RNAP agent is defined as

RNAP , bindRNAP.0


Modelling the switch: affinity network
It now remains to give affinity networks, specifying the dynamics of interac- tions at the λ-switch. Interactions at the operators are specified in the networks AOR1 , AOR2 , and AOR3 . For example, Rep2 binding is specified via the pat- terns in Fig. 6, allowing Rep dimers to bind to the sites at OR1, OR2, and OR3, whilst ensuring mutual exclusion with RNAP at PR/PRM by matching against the

unboundPR/unboundPRM sites. The full affinity network for OR1 is,
AOR1 = bindOR1Cro|unboundPR  bindCro|bindCro @ MAKa_protein, bindOR1Rep|unboundPR  bindRep|bindRep @ MAKa_protein, unbindOR1Rep	@ MAKd_OR1_rep,
unbindOR1Cro	@ MAKd_OR1_cro }
Here, in addition to the patterns for Rep/Cro binding, we have unary patterns bindOR1Rep @ MAKd_OR1_rep and bindOR1Cro @ MAKd_OR1_cro which specify the rates of unbinding for Rep/Cro dimers.




Ka_protein





Fig. 6. Affinity patterns for binding of Rep dimers to the operators.

The full affinity network for OR2 is,
AOR2 = bindOR2Cro|unboundPR  bindCro|bindCro @ MAKa_protein, bindOR2Rep|unboundPR  bindRep|bindRep @ MAKa_protein, unbindOR2Rep	@ MAKd_OR2_rep,
unbindOR2Rep|noRepOR1	@ MAKd_OR2_boost,
unbindOR2Cro	@ MAKd_OR2_cro }

Here the pattern unbindOR2Rep|noRepOR1 @ MAKd_OR1_boost captures cooperativ- ity at OR2 by decreasing the dissociation rate by Kd_OR1_boost whenever Rep is not bound at OR1. The affinity network AOR3 is analogous to AOR1 except that binding is mutually exclusive with PRM rather than PR (Fig. 6) so we will not list it in full.

Fig. 7. Affinity patterns for RNAP binding.

Finally, interactions at the promoters are specified in the two networks APR and APRM . The key elements of these are the patterns for RNAP binding shown in Fig. 7, which specify that RNAP may bind to PR whenever both OR1 and OR2 are unbound, and to PR whenever both OR3 is unbound. The full network for PR is

defined as
APR =  bindPR|unboundOR1|unboundOR2  bindRNAP @ MAKa_RNAP,
unbindPR	@ MAKd_PR_RNAP,
transcribeCro	@ MAKf_pr }
which has additional patterns for the unbinding of RNAP and for the transcription of Cro, whilst the full network for PRM is defined as,
APRM =  bindPRM |unboundOR3  bindRNAP	@ MAKa_RNAP,
unbindPRM	@ MAKd_PRM_RNAP,
transcribeRep	@ MAKf_prm,
transcribeRep|hasRepOR2	@ MAKf_prm_boost, }
In the network APRM , the extra pattern transcribeRep|hasRepOR2 @ MAKf_prm_boost captures cooperative modification by increasing the Rep transcription rate by Kf_prm_boost whenever Rep is bound at OR2.
Overall model
We can put together the components of our model by defining the mixture


M , 1 · Switch
[Cro] · Cro	[Rep] · Rep
[RNAP] · RNAP

and defining the overall affinity network containing the patterns for each component,
A , ARep ∪ ACro ∪ AOR1 ∪ AOR2 ∪ AOR3 ∪ APR ∪ APRM .
We can then use this bond-calculus description to generate more conventional math- ematical models for simulation and analysis. Our tool translates this particular model into a chemical reaction network with 47 species and 181 reaction rules: of the 47 species, 40 correspond to the different possible binding states of the right operator of the λ-switch, and these match the states enumerated combinatorially in [79, Table 2]. The tool also generates from this bond-calculus model a system of coupled ODEs. These differential equations should be viewed with caution since the low copy numbers of molecules involved in gene regulation (especially the switch itself) mean that stochastic or hybrid stochastic models [16] might give a more faith- ful view of the dynamics. We also note that for more practical analysis analysis of the system these ODEs could be reduced via appropriate equilibrium assumptions as in [7, 79], or by network level modelling using general kinetic laws as considered in the next section. Nevertheless, these ODEs give a useful indication of the mean behaviour of the switch under similar assumptions to existing thermodynamic mod- els [1, 77]. In Fig. 8 we see the binding curves for repressors at each operator of the switch, computed by simulation of the ODEs at different levels of Rep concentra- tion; this matches [55, Fig. 28], which records the mean behaviour of the original stochastic π model.

1.0

0.8

0.6

0.4

0.2

0.0
100	101	102	103
[Rep]

Fig. 8. The mean occupancy of each operator over 5000 seconds, given initial Rep concentration [Rep], and no RNAP or Cro. Based on numerical simulation of bond-calculus ODEs: this matches [55, Fig. 28], which was generated using stochastic simulation.

Network level modelling
In Section 3 we saw how gene regulation can be modelled at a molecular level, by modelling all possible binding states of the regulatory region. This level of detail is not, however, necessary to give a useful model of the regulatory interactions in a network. In this section we will give a general purpose, high level model of gene transcription and translation in the bond-calculus, and show how affinity patterns and general kinetic laws may be used to capture the patterns of regulation which interconnect them. We will then look at the specific example of the Plant Circadian Clock [32].

Modelling the central dogma
To begin our modelling of gene regulation we need to define species capturing the agents involved in the production of a generic protein which we will denote X. To
this end we will define three species: GeneX which denotes the gene encoding X,
mRNAX which denotes the RNA form of X, and ProteinX which denotes the protein form of X. We define these species as follows,
GeneX , cX.(GeneX | mRNAX )
mRNAX , dM X.0 + tX.(mRNAX | ProteinX )
ProteinX , dX.0 + iX.ProteinX.

These species can interact at a number of sites according to the central dogma of molecular biology : interaction at site cX causes GeneX to be transcribed into its RNA form mRNAX , whilst interaction at site tX causes mRNAX to be translated into its protein form ProteinX . We also allow the mRNAX to decay by inter- acting at site dMX and for ProteinX to decay by interacting at site dX . Finally, ProteinX has an additional site iX (influence) which does not change its state, but will allow it to act as an activator or repressor for other reactions.

Gene gates via general kinetics and affinity patterns
In order to model the dynamics of concrete gene regulatory networks, we need to supplement the skeletal model of translation and transcription given in the previous section with an affinity network which specifies the dynamics of the network accord- ing to general kinetic laws. If we have a detailed knowledge of the mechanism of binding (similar to our model in Section 3), it is possible to derive suitable kinetic laws based on the probability of binding at equilibrium [1, 8, 9], however, in prac- tice, since this knowledge is rarely available, a more pragmatic approach is pursued where kinetic laws are used as phenomenological models to fit experimental data. One common such model derives from the Hill equation [43], which approximates the occupancy of an operator O by a protein P as
 [P ] n

[P ]n
f[P ],K,n = Kn + [P ]n =
K


1+  [P ] n


where K ∈ R≥0 is the protein concentration producing 50% operator occupancy, and the Hill coefficient n ∈ R which measures the degree of cooperativity. Whilst the Hill equation was originally derived as an equilibrium model for cooperative binding at n binding sites [43], in practice the Hill coefficient n is used to capture many different types of positive cooperativity and rarely corresponds precisely to the number of binding sites [85].
We may then define the general kinetic laws,


+
v,K,n
—
v,K,n
([G] , [P ]) , vf[P ],K,n [G]
([G] , [P ]) , v(1 − f[P ],K,n) [G]

which give the rate of transcription of a gene G under positive or negative regulation by protein P respectively.
For example, this allows us to model a simple gene regulatory network where transcription of B is activated by A and A is repressed by B (Fig. 9) using the affinity patterns,

cA  iB @ Hill+	,
cB  iA @ Hill−	,


plus extra patterns to account for degrada- tion and translation, and the mixture defined by,
Fig. 9: A simple gene regulatory network, exhibiting positive and negative regulation.

Π , [A] GeneA  [B] GeneB.
For the case of a general gene gate with n activators A1,..., An and m inhibitors


	

Fig. 10. Compact gene regulation network for the plant circadian clock of [32, Fig. 1]: each gene rep- resents two genes of the underlying network.
Fig. 11. Affinity pattern for transcription regula-
tion at P97 where v = (v2A, v2B), l = (K3), and
k = (K4, K5).

I1,..., Im, we can use generalised Hill-type laws 7 such as [32],
v [A1] s1 +...+v





 [Am] sm

1	l1
m	lm

v0 +
1+ [A1] s1 +...+ [Am] sm

Hill
([G]; [A ] ,..., [A
]; [I ] ,..., [I
]) ,
l1	lm
[G]

v;l;k;s;t	1
m	1	n
1+ [I1] tn
1
+ ... +
[In] tn kn

Here we have a vector of parameters v = (v0, v1,..., vm) for the activation veloc- ities, l = (l1,..., lm) and k = (k1,..., kn) for the activation/repression fractional occupancies, and s = (s1,..., sm) and t = (t1,..., tn) for the Hill coefficients for activators/inhibitors. For the remainder of this paper we will consider only Hill coefficients s1 = ... = sm = t1 = ... = tn = 2, and write simply, Hillv;l;k for the corresponding kinetic laws.

Example: compact plant circadian clock
In this section we will look at the plant circadian clock, a complex genetic circuit consisting of at least a dozen genes sustaining regular oscillations through a number of interconnected positive and negative transcriptional feedback loops [65]. The circadian clock of model organism Arabidopsis thaliana in particular has been the subject of a series of increasingly sophisticated mathematical models over the last decade [36, 61, 68, 69, 78, 88]. Bio-PEPA has been used to analyse the stochastic properties of plant circadian clock [39] starting from Pokhilko et al’s continuous model [68], along with several other clocks [2, 3, 5, 28], whilst the Kai-based (non- transcriptional) circadian clock [5,57] is a standard case study for continuous π. Here we will take as our basis the compact model of [31, 32] which expresses qualitative behaviour of the clock using only four species (Fig. 10), and for simplicity we restrict our model to constant daylight conditions (the original model includes separate rates for light/dark conditions [31] which can be modelled either as discrete events [27,37] or smooth transition functions [39, 75]).
We start our model with a mixture covering all of the genes in the network,

7 Here we have used the same form of Hill-type function as [32], however, there are many variants in use in the literature e.g. [8, 46, 69, 82].



4

3

2

1

0
0	12	24	36	48	60	72 0	12	24	36	48	60	72
Time (h)	Time (h)

Fig. 12. Plant circadian clock protein levels, with ODE simulation on the left (with parameter values based on [32]), and stochastic simulation with discrete levels of step size h = 0.01 on the right.
constructed by instantiating the species defined in Section 4.1.
M , 1 · GeneCL  1 · GeneP97  1 · GeneP51  1 · GeneEL
These species only represent the various agents implementing the mechanism of gene regulation. The main regulatory interactions between the various genes are specified separately via the affinity network,
AReg =  cCL  iP97  iP51	@ Hill(v1);;(K1,K2),
cP97  iCL  iP51  iEL	@ Hill(v2A,v2B);(K3);(K4,K5), cP51  iCL  iP51	@ Hill(v3);();(K6,K7),
cEL  iCL  iP51  iEL	@ Hill(v4);();(K8,K9,K10) }

These patterns assign sites as the arguments of the kinetic law in a positional manner so, for example, the affinity pattern cCL  iP97  iP51 @ Hill(v1);();(K1,K2) indicates that the transcription of the CL mRNA is inhibited by the P97 and P51 proteins whilst the affinity pattern cP97  iCL  iP51  iEL @ Hill(v2A,v2B );(K3);(K4,K5) (displayed graphically in Fig. 11) indicates that the transcription of the P97 mRNA is activated by the CL protein and is inhibited by the P51 and EL proteins (as in Fig. 10). Additionally the degradation and translation rates are captured in the network,
ARest =  dM CL @ MAk1L ,	dCL @ MAd1 ,	tCL @ MAp1T , dM P97 @ MAk2 ,	dP97 @ MAd2L ,	 tP97 @ MAp2 , dM P51 @ MAk3 ,	dP51 @ MAd3L ,	 tP51 @ MAp3 ,
dM EL @ MAk4 ,	dEL @ MAd4L ,	tEL @ MAp4 }
This demonstrates the ability of bond-calculus to capture a general model of gene regulation as agents, whilst the affinity network captures the specific interactions in the network with dynamics following a general kinetic law.
Generating ODEs from this bond-calculus model gives a system of differential

equations that coincides with the model of [32] under constant daylight conditions; Fig. 12 (left) shows the result of numerical simulation. This give a reasonable agreement with a single run of stochastic simulation in Fig. 12 (right), also generated from the bond-calculus model.
Conclusion
In this paper we applied the bond-calculus to modelling gene regulation, at the molecular and network levels. At the molecular level, we saw that affinity patterns are able to succinctly capture cooperative interactions at the λ-switch, and that sim- ulation results from the bond-calculus’s differential equation semantics reproduces the mean behaviour of previous stochastic process algebra models (Fig. 2). At the network level, we showed how the bond-calculus is able to model general gene reg- ulatory networks using affinity patterns and general kinetic laws, and looked at the specific case of the Plant Circadian Clock [32]. Through these examples we see how the bond-calculus is able to adopt modelling styles to effectively capture common patterns of interaction in gene regulatory networks. Whilst these draw upon the modelling styles of several existing biochemical process algebras [28,55,57,71,72,84] and also of rule-based languages [7,53], we argue that the overall style of our models is quite distinctive: the agents model each component of the system and their inter- nal evolution, whilst affinity patterns describe contextual interactions between sites without reference to the internal structure of agents or specifying how agents should respond to interactions, and correspond to a natural graphical representation of the interactions between sites (Fig. 6 and Fig. 11).
So far we have focused on expressing models in the bond-calculus, however, more work needs to be done to develop techniques to analyse these models. One approach would be to extend the Logic of Behaviour in Context (LBC) [6], which can verify properties of continuous π models using temporal logic and continuous π’s ODE semantics. This includes both standard temporal operators and a context operator M D ϕ, allowing us to ask whether a temporal property ϕ holds once the system is composed with a context mixture M. This makes it possible to carry out quantitative experiments which modify the context of a model over time, and to express quite general questions about its behaviour under perturbation [6]. We could also extend LBC with new types of context operators which extend or modify the affinity network of the system, which would, for example, offer a new way to reason about the entrainment [27, 32, 39] of the plant circadian clock to night/day cycles.

References
Ackers, G. K., A. D. Johnson and M. A. Shea, Quantitative model for gene regulation by lambda phage repressor, Proceedings of the National Academy of Sciences 79 (1982), pp. 1129–1133.
Akman, O., F. Ciocchetta, A. Degasperi and M. Guerriero, Modelling biological clocks with Bio-PEPA: stochasticity and robustness for the neurospora crassa circadian network, in: Computational Methods in Systems Biology, Springer, 2009, pp. 52–67.


Akman, O. E., M. L. Guerriero, L. Loewe and C. Troein, Complementary approaches to understanding the plant circadian clock, in: E. Merelli and P. Quaglia, editors, Proceedings Third Workshop From Biology To Concurrency and back, Paphos, Cyprus, 27th March 2010, Electronic Proceedings in Theoretical Computer Science 19 (2010), pp. 1–19.
Arkin, A., J. Ross and H. H. McAdams, Stochastic kinetic analysis of developmental pathway bifurcation in phage λ-infected escherichia coli cells, Genetics 149 (1998), pp. 1633–1648.
Banks, C., A. Clark, A. Georgoulas, S. Gilmore, J. Hillston, D. Milios and I. Stark, Stochastic modelling of the Kai-based circadian clock, Electronic Notes in Theoretical Computer Science 296 (2013), pp. 43 – 60.
Banks, C. and I. Stark, A Logic of Behaviour in Context, Inf. Comput. 236 (2014), pp. 3–18.
Beica, A., C. C. Guet and T. Petrov, Efficient reduction of kappa models by static inspection of the rule-set, in: International Workshop on Hybrid Systems Biology, Springer, 2015, pp. 173–191.
Bintu, L., N. E. Buchler, H. G. Garcia, U. Gerland, T. Hwa, J. Kondev, T. Kuhlman and R. Phillips, Transcriptional regulation by the numbers: applications, Current Opinion in Genetics & Development 15 (2005), pp. 125 – 135, chromosomes and expression mechanisms.
Bintu, L., N. E. Buchler, H. G. Garcia, U. Gerland, T. Hwa, J. Kondev and R. Phillips, Transcriptional regulation by the numbers: models, Current Opinion in Genetics & Development 15 (2005), pp. 116 – 124, chromosomes and expression mechanisms.
Blinov, M. L., J. R. Faeder, B. Goldstein and W. S. Hlavacek, BioNetGen: software for rule-based modeling of signal transduction based on the interactions of molecular domains, Bioinformatics 20 (2004), pp. 3289–3291.
Blossey, R., L. Cardelli and A. Phillips, A compositional approach to the stochastic dynamics of gene networks, in: C. Priami, L. Cardelli and S. Emmott, editors, Transactions on Computational Systems Biology IV (2006), pp. 99–122.
Blossey, R., L. Cardelli and A. Phillips, Compositionality, stochasticity, and cooperativity in dynamic models of gene regulation, HFSP journal 2 (2008), pp. 17–28.
Bodei, C., L. Brodo and R. Bruni, Open multiparty interaction, in: N. Mart´ı-Oliet and M. Palomino, editors, Recent Trends in Algebraic Development Techniques: 21st International Workshop, WADT 2012, Salamanca, Spain, June 7-10, 2012, Revised Selected Papers (2013), pp. 1–23.
Bodei, C., L. Brodo, R. Bruni and D. Chiarugi, A flat process calculus for nested membrane interactions, Scientific Annals of Computer Science 24 (2014), p. 91.
Bortolussi, L. and A. Policriti, Stochastic concurrent constraint programming and differential equations, Electronic Notes in Theoretical Computer Science 190 (2007), pp. 27 – 42, proceedings of the Fifth Workshop on Quantitative Aspects of Programming Languages (QAPL 2007).
Bortolussi, L. and A. Policriti, Hybrid dynamics of stochastic programs, Theoretical Computer Science
411 (2010), pp. 2052 – 2077, hybrid Automata and Oscillatory Behaviour in Biological Systems.
Bundschuh, R., F. Hayot and C. Jayaprakash, Fluctuations and slow variables in genetic networks, Biophysical journal 84 (2003), pp. 1606–1615.
Bundschuh, R., F. Hayot and C. Jayaprakash, The role of dimerization in noise reduction of simple genetic networks, Journal of Theoretical Biology 220 (2003), pp. 261–269.
Calder, M., S. Gilmore and J. Hillston, Modelling the influence of RKIP on the ERK signalling pathway using the stochastic process algebra PEPA, in: C. Priami, A. Ing´olfsd´ottir, B. Mishra and H. Riis Nielson, editors, Transactions on Computational Systems Biology VII (2006), pp. 1–23.
Calder, M. and J. Hillston, Process algebra modelling styles for biomolecular processes, in: Transactions on computational systems biology XI, Springer, 2009 pp. 1–25.
Camporesi, F., J. Feret and K. Q. Ly´, KaDE: A tool to compile Kappa rules into (reduced) ODE models, in: J. Feret and H. Koeppl, editors, Computational Methods in Systems Biology (2017), pp. 291–299.
Cardelli, L., On process rate semantics, Theoretical Computer Science 391 (2008), pp. 190 – 215, converging Sciences: Informatics and Biology.
Cardelli, L., E. Caron, P. Gardner, O. Kahramanog˘ulları and A. Phillips, A process model of actin polymerisation, Electronic Notes in Theoretical Computer Science 229 (2009), pp. 127 – 144, proceedings of the Second Workshop From Biology to Concurrency and Back (FBTC 2008).


Ciobanu, G., From gene regulation to stochastic fusion, in: International Conference on Unconventional Computation, Springer, 2008, pp. 51–63.
Ciobanu, G., General patterns of interaction in stochastic fusion, Natural Computing 12 (2013),
pp. 429–439.
Ciocchetta, F., The BlenX language with biological transactions, in: C. Priami, editor, Transactions on Computational Systems Biology IX (2008), pp. 114–152.
Ciocchetta, F., Bio-PEPA with events, in: C. Priami, R.-J. Back and I. Petre, editors, Transactions on Computational Systems Biology XI (2009), pp. 45–68.
Ciocchetta, F. and J. Hillston, Bio-PEPA: A framework for the modelling and analysis of biological systems, Theoretical Computer Science 410 (2009), pp. 3065 – 3084.
Ciocchetta, F. and C. Priami, Biological transactions for quantitative models, Electronic Notes in Theoretical Computer Science 171 (2007), pp. 55 – 67, proceedings of the First Workshop on Membrane Computing and Biologically Inspired Process Calculi (MeCBIC 2006).
Danos, V. and C. Laneve, Formal molecular biology, Theoretical Computer Science 325 (2004), pp. 69– 110.
De Caluw´e, J., J. R. F. de Melo, A. Tosenberger, C. Hermans, N. Verbruggen, J.-C. Leloup and D. Gonze, Modeling the photoperiodic entrainment of the plant circadian clock, Journal of theoretical biology 420 (2017), pp. 220–231.
De Caluw´e, J., Q. Xiao, C. Hermans, N. Verbruggen, J.-C. Leloup and D. Gonze, A compact model for the complex plant circadian clock, Frontiers in plant science 7 (2016).
Degano, P., D. Prandi, C. Priami and P. Quaglia, Beta-binders for biological quantitative experiments, Electronic Notes in Theoretical Computer Science 164 (2006), pp. 101 – 117, proceedings of the 4th International Workshop on Quantitative Aspects of Programming Languages (QAPL 2006).
Dematt´e, L., C. Priami and A. Romanel, The BlenX language: A tutorial, in: Proceedings of the Formal Methods for the Design of Computer, Communication, and Software Systems 8th International Conference on Formal Methods for Computational Systems Biology, SFM’08 (2008), pp. 313–365.
Fages, F., Modelling and querying interaction networks in the biochemical abstract machine BIOCHAM, Journal of Biological Physics and Chemistry 4 (2002), pp. 64–73.
Fogelmark, K. and C. Troein, Rethinking transcriptional activation in the arabidopsis circadian clock, PLOS Computational Biology 10 (2014), pp. 1–12.
Galpin, V., Modelling a circadian clock with HYPE, in: Proceedings of the 9th workshop on process algebra and stochastically timed activities (PASTA), 2010, pp. 92–98.
Geisweiller, N., J. Hillston and M. Stenico, Relating continuous and discrete PEPA models of signalling pathways, Theoretical Computer Science 404 (2008), pp. 97 – 111, membrane Computing and Biologically Inspired Process Calculi.
Guerriero, M. L., A. Pokhilko, A. P. Fern´andez, K. J. Halliday, A. J. Millar and J. Hillston, Stochastic properties of the plant circadian clock, Journal of The Royal Society Interface (2011).
Hasty, J., F. Isaacs, M. Dolnik, D. McMillen and J. J. Collins, Designer gene networks: Towards fundamental cellular control, Chaos: An Interdisciplinary Journal of Nonlinear Science 11 (2001),
pp. 207–220.
Hasty, J., J. Pradines, M. Dolnik and J. J. Collins, Noise-based switches and amplifiers for gene expression, Proceedings of the National Academy of Sciences 97 (2000), pp. 2075–2080.
Hayden, R. A. and J. T. Bradley, A fluid analysis framework for a markovian process algebra, Theoretical Computer Science 411 (2010), pp. 2260 – 2297.
Hill, A., The possible effects of the aggregation of the molecules of haemoglobin on its dissociation curves, J Physiol (Lond) 40 (1910), pp. 4–7.
Hillston, J., Compositional Markovian modelling using a process algebra, in: Computations with Markov chains, Springer, 1995 pp. 177–196.
Hillston, J., Fluid flow approximation of PEPA models, in: Proceedings of the Second International Conference on the Quantitative Evaluation of Systems, QEST ’05 (2005), pp. 33–.

Hofmeyr, J.-H. S. and H. Cornish-Bowden, The reversible Hill equation: how to incorporate cooperative enzymes into metabolic models, Bioinformatics 13 (1997), pp. 377–385.
Imada, J. and B. J. Ross, Evolutionary synthesis of stochastic gene network models using feature-based search spaces, New Generation Computing 29 (2011), pp. 365–390.
John, M., C. Lhoussaine and J. Niehren, Dynamic Compartments in the Imperative Pi Calculus,, 5688 (2009), pp. 235–250.
John, M., C. Lhoussaine, J. Niehren and A. M. Uhrmacher, The attributed pi calculus, in: M. Heiner and
A. M. Uhrmacher, editors, Computational Methods in Systems Biology: 6th International Conference CMSB 2008, Rostock, Germany, October 12-15, 2008. Proceedings (2008), pp. 83–102.
John, M., C. Lhoussaine, J. Niehren and C. Versari, Biochemical reaction rules with constraints, in:
European symposium on programming, Springer, 2011, pp. 338–357.
John, M., H.-J. Schulz, H. Schumann, A. M. Uhrmacher and A. Unger, Constructing and visualizing chemical reaction networks from pi-calculus models, Formal Aspects of Computing 25 (2013), pp. 723– 742.
Kuttler, C., Simulating bacterial transcription and translation in a stochastic π calculus, in: C. Priami and G. Plotkin, editors, Transactions on Computational Systems Biology VI (2006), pp. 113–149.
Kuttler, C., C. Lhoussaine and M. Nebut, “Rule-Based Modeling of Transcriptional Attenuation at the Tryptophan Operon,” Springer Berlin Heidelberg, Berlin, Heidelberg, 2010 pp. 199–228.
Kuttler, C., C. Lhoussaine and J. Niehren, A stochastic pi calculus for concurrent objects, Ab 4545
(2007), pp. 232–246.
Kuttler, C. and J. Niehren, Gene regulation in the pi calculus: Simulating cooperativity at the lambda switch, in: C. Priami, A. Ing´olfsd´ottir, B. Mishra and H. Riis Nielson, editors, Transactions on Computational Systems Biology VII (2006), pp. 24–55.
Kwiatkowski, M., “A formal computational framework for the study of molecular evolution,” Ph.D. thesis, Edinburgh (2010), supervised by Ian Stark.
Kwiatkowski, M. and I. Stark, The continuous π-calculus: A process algebra for biochemical modelling, in: Computational Methods in Systems Biology: Process of the Sixth International Conference CMSB 2008, number 5307 in Lecture Notes in Computer Science (2008), pp. 103–122.
Kwiatkowski, M. and I. Stark, On executable models of molecular evolution, in: Proceedings of the 8th International Workshop on Computational Systems Biology WCSB 2011, number 57 in TICSP Report (2011), pp. 105–108.
Larcher, R. and C. Priami, From BlenX to chemical reactions via SBML, Technical report, University of Trento (2008).
Lecca, P., C. Priami, C. Laudanna and G. Constantin, A biospi model of lymphocyte-endothelial interactions in inflamed brain venules, in: Biocomputing 2004, World Scientific, 2003 pp. 521–532.
Locke, J., A. Millar and M. Turner, Modelling genetic networks with noisy and varied experimental data: the circadian clock in Arabidopsis thaliana, Journal of Theoretical Biology 234 (2005), pp. 383 – 393.
Maarleveld, T. R., B. G. Olivier and F. J. Bruggeman, StochPy: A comprehensive, user-friendly tool for simulating stochastic biological processes, PLOS ONE 8 (2013), pp. 1–10.
McAdams, H. H. and A. Arkin, Stochastic mechanisms in gene expression, Proceedings of the National Academy of Sciences 94 (1997), pp. 814–819.
Nagasaki, M., S. Onami, S. Miyano and H. Kitano, Bio-calculus: Its concept and molecular interaction, Genome Informatics 10 (1999), pp. 133–143.
Nagel, D. H. and S. A. Kay, Complexity in the wiring and regulation of plant circadian networks, Current Biology 22 (2012), pp. R648 – R657.
Paulev´e, L., M. Magnin and O. Roux, Refining dynamics of gene regulatory networks in a stochastic π-calculus framework, in: Transactions on computational systems biology xiii, Springer, 2011 pp. 171– 191.
Phillips, A. and L. Cardelli, A correct abstract machine for the stochastic pi-calculus, In Bioconcur’04. ENTCS (2004).

Pokhilko, A., S. K. Hodge, K. Stratford, K. Knox, K. D. Edwards, A. W. Thomson, T. Mizuno and
A. J. Millar, Data assimilation constrains new connections and components in a complex, eukaryotic circadian clock model, Molecular Systems Biology 6 (2010).
Pokhilko, A., P. Mas and A. J. Millar, Modelling the widespread effects of TOC1 signalling on the plant circadian clock and its outputs, BMC Systems Biology 7 (2013), p. 23.
Priami, C., Stochastic π-calculus, The Computer Journal 38 (1995), pp. 578–589.
Priami, C. and P. Quaglia, Beta binders for biological interactions, in: V. Danos and V. Schachter, editors, Computational Methods in Systems Biology: International Conference CMSB 2004, Paris, France, May 26-28, 2004, Revised Selected Papers (2005), pp. 20–33.
Priami, C., A. Regev, E. Shapiro and W. Silverman, Application of a stochastic name-passing calculus to representation and simulation of molecular processes, Information Processing Letters 80 (2001),
pp. 25 – 31.
Regev, A., W. Silverman and E. Shapiro, Representation and simulation of biochemical processes using the π-calculus process algebra, , 6, 2001, pp. 459–470.
Ross, B. J., Using multi-objective genetic programming to evolve stochastic logic gate circuits, in: 2015 IEEE Conference on Computational Intelligence in Bioinformatics and Computational Biology (CIBCB), 2015, pp. 1–8.
Salazar, J. D., T. Saithong, P. E. Brown, J. Foreman, J. C. Locke, K. J. Halliday, I. A. Carr´e, D. A. Rand and A. J. Millar, Prediction of photoperiodic regulators from quantitative gene circuit models, Cell 139 (2009), pp. 1170 – 1179.
Sangiorgi, D., π-calculus, internal mobility, and agent-passing calculi, Theoretical Computer Science
167 (1996), pp. 235–274.
Santilla´n, M. and M. C. Mackey, Why the lysogenic state of phage λ is so stable: a mathematical modeling approach, Biophysical journal 86 (2004), pp. 75–84.
Schmal, C., J.-C. Leloup and D. Gonze, Modeling and simulating the Arabidopsis thaliana circadian clock using XPP-AUTO, in: D. Staiger, editor, Plant Circadian Networks: Methods and Protocols, Springer New York, New York, NY, 2014 pp. 337–358.
Shea, M. A. and G. K. Ackers, The OR control system of bacteriophage lambda: A physical-chemical model for gene regulation, Journal of molecular biology 181 (1985), pp. 211–230.
Stefanek, A., M. Vigliotti and J. T. Bradley, Spatial extension of stochastic pi calculus, in: 8th Workshop on Process Algebra and Stochastically Timed Activities, 2009, pp. 109–117.
Tian, T. and K. Burrage, Bistability and switching in the lysis/lysogeny genetic regulatory network of bacteriophage lambda, Journal of Theoretical Biology 227 (2004), pp. 229 – 237.
Ting-Chao, C. and P. TaLaLay, Generalized equations for the analysis of inhibitions of Michaelis- Menten and higher-order kinetic systems with two or more mutually exclusive and nonexclusive inhibitors, European journal of biochemistry 115 (1981), pp. 207–216.
Tribastone, M., S. Gilmore and J. Hillston, Scalable differential analysis of process algebra models, IEEE Transactions on Software Engineering 38 (2012), pp. 205–219.
Versari, C. and R. Gorrieri, π@:A π-based process calculus for the implementation of compartmentalised bio-inspired calculi, in: M. Bernardo, P. Degano and G. Zavattaro, editors, Formal Methods for Computational Systems Biology: 8th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2008 Bertinoro, Italy, June 2-7, 2008 Advanced Lectures (2008), pp. 449–506.
Weiss, J. N., The Hill equation revisited: uses and misuses., The FASEB Journal 11 (1997), pp. 835–841.
Wright, T., Bond calculus workbench repository.
URL https://github.com/twright/bondwb
Wright, T. and I. Stark, The Bond-Calculus: A process algebra for complex biological interaction dynamics, arXiv preprint arXiv:1804.07603 (2018).
URL https://arxiv.org/abs/1804.07603
Zeilinger, M. N., E. M. Farr´e, S. R. Taylor, S. A. Kay and F. J. Doyle, A novel computational model of the circadian clock in Arabidopsis that incorporates PRR7 and PRR9, Molecular Systems Biology 2 (2006).
