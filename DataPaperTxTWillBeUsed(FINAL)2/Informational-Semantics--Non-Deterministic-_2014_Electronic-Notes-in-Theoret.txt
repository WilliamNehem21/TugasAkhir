Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 305 (2014) 35–52
www.elsevier.com/locate/entcs

Informational Semantics, Non-Deterministic Matrices and Feasible Deduction
Marcello D’Agostino1,2
Department of Economics and Management University of Ferrara
Ferrara, Italy

Abstract
We present a unifying semantic and proof-theoretical framework for investigating depth-bounded approx- imations to Boolean Logic in which the number of nested applications of a single structural rule, repre- senting the classical Principle of Bivalence (classical cut), is bounded above by a fixed natural number. These approximations provide a hierarchy of tractable logical systems that indefinitely converge to classical propositional logic. The operational rules are shared by all approximation systems and are justified by an “informational semantics” whereby the meaning of a logical operator is specified solely in terms of the information that is actually possessed by an agent.
Keywords: Classical Propositional Logic, Informational Semantics, Non-deterministic matrices, Computational Complexity, Natural Deduction, Semantic Tableaux.


Introduction
According to the received view, classical logic is informationally trivial : the informa- tion carried by its conclusion is included in the information carried by its premises. This intuitively clashes with the known results that first-order logic is undecidable and classical propositional logic is NP -hard. The fundamental question is:


do we actually possess the information that the conclusion of an inference is true whenever we possess the information that its premises are true?
(1)

The lack of a general decision procedure strongly suggests that the intuitive answer is “no” in the domain of classical first-order logic: there is no guarantee that we are in a position to recognize the truth of a valid consequence A of a set Γ of sentences

1 This paper elaborates on ideas and results stemming from my collaboration with Marcelo Finger, Luciano Floridi and Dov Gabbay. I wish to thank Maribel Fernandez and Marcelo Finger for inviting me to present this work at LSFA2013 and all the participants for the stimulating discussion.
2 Email: dgm@unife.it

http://dx.doi.org/10.1016/j.entcs.2014.06.004
1571-0661/© 2014 Elsevier B.V. All rights reserved.

in all situations in which we recognize the truth of the sentences in Γ. Moreover, despite the existence of decision procedures for classical propositional logic, the widely believed conjecture that P /=NP , makes it highly improbable that there exists a feasible one. Therefore, if we construe the notion of “actually possessing” a piece of information as having access to it in practice, and not only in principle, a positive answer to (1) sounds highly counterintuitive even in the restricted domain of propositional logic. Hence, there is a tension between the received view that logic is informationally trivial and the intuitive, commonsense, interpretation of this view underlying the simple question raised in (1).
In this contribution, we elaborate on ideas and results presented in a series of previous papers [16,21,17,20,18,19], to address the following problem: for which subsystems of classical propositional logic does it make intuitive sense to give a positive answer to (1)? As argued in [20,19], a rather natural solution stems from an alternative way of characterizing the meaning of the Boolean operators, that we call informational semantics, whereby the meaning of a logical operator is specified solely in terms of the information that is actually possessed by an agent. This seman- tics leads to a hierarchy of tractable logical systems that indefinitely approximate classical propositional logic. The informational meaning of the logical operators is the same for all approximations and is captured by an intuitive semantics based on non-deterministic matrices or, equivalently, on a set of natural introduction and elimination rules for the logical operators. The increasing inferential power of each approximation depends only on a single structural rule and on the depth at which its application is allowed. This structural rule is, in essence, a classical cut rule — closely related to the classical Principle of Bivalence — that governs the manipula- tion of “virtual information”, i.e., information that we do not actually possess, but we temporarily assume as if we possessed it. 3 Suppose that our current informa- tion state includes the information that A V B and чA V B are both true, but no information about A and B. However, our (metaphysical) notion of truth implies that A is either true or false. Then, we can conclude that, in either case, the infor- mation that B is true belongs to any virtual extension of our current information state that includes definite information about A:
If we were informed that A is true, then we would be informed that
B is true
If we were informed that A is false, then we would be informed that B is true
We are informed that B is true
But neither of the two pieces of information concerning A is actually included in our current information state. This is why we call this “virtual information”. A reasoning agent (whether human or artificial) that actually possesses the informa-

3 Logicians are familiar with virtual information from the so-called “discharge rules” of natural deduction systems. However, in Gentzen-style natural deduction the use of virtual information is essential in some of the inference rules that fix the (classical or intuitionistic) meaning of the logical operators. In our approach, on the other hand, virtual information plays no role in the explication of their informational meaning and its use is governed by a single structural rule (see Section 4 below).

tion that AVB and чAVB are both true, does not thereby possess the information that B is true, unless it is able to simulate virtual information states that are richer than its current one. This is a non-trivial step both from the computational and the cognitive viewpoint and the depth at which the iterated use of such virtual information is required may be an interesting measure of the computational and cognitive effort involved in extracting the information that is implicitly contained in the premises.
The approximation of depth 0 is the one in which no use of virtual information is allowed and valid inferences are those that can be justified directly by the informa- tional semantics for the logical operators. This basic system enjoys the subformula property and admits of a simple polynomial time decision procedure. A k-depth approximation is obtained when at most k nested applications of the structural rule for virtual information are allowed. 4 Each k-depth system enjoys the subformula property and admits of a polynomial time decision procedure whose complexity increases with k.
In our approach, therefore, the answer to (1) isa matter of degree and depends on the minimum depth at which the conclusion can be deduced from the premises. We maintain that this “incremental” view of classical propositional logic, which takes it as the limit of a sequence of tractable subsystems of increasing inferential power (and increasing computational complexity), can be useful in a variety of computing applications as well as in all research areas that require a non-idealized approach to the inferential power of human or artificial reasoning systems.

Informational meaning of the Boolean operators
The classical meaning of the logical operators is usually specified by the familiar truth-tables that fix the conditions under which a sentence is true or false in terms of the truth or falsity of its immediate constituents. The underlying notions of truth and falsity are assumed to obey the two classical principles of Bivalence (any sentence is either true or false independent of our holding any information about it) and Non-Contradiction (no sentence can be at the same time true and false). This way of fixing the meaning of a logical operator is perfectly in tune with the classical, information-transcendent, notions of truth and falsity and with the traditional view of logical inference as a truth-transmission device; but it is at odds with the equally widespread view of logical inference as an information-processing device. To abide by the latter view we need a semantics based on informational notions. In particular, in order to define subsystems of classical logic that justify a positive answer to (1), we need a semantics based on the notion of actual information, i.e., to put it with Jaakko Hintikka, information that “we actually possess (as distinguished from the information we in some sense have potentially available to us) and with which we

4 This hierarchy can be interestingly compared to similar hierarchies based on different semantic and proof- theoretical characterizations, as the ones proposed in [9,25,26,13,38,28,29,31,32,30]. The proof-theoretical characterization is closely related to St˚almarck’s method [38]; for a more detailed discussion of this relation see [20]. We stress that such hierarchies cannot be naturally obtained from Gentzen-style characterizations of classical logic.

can in fact operate” [33, p. 229].
The primary notions of this semantics are not truth and falsity, but informational truth and informational falsity, namely holding the information that a sentence is true, respectively false. Here, by saying that an agent x holds the information that A is true (respectively false) we mean that this is information that is practically available to x and with which x can operate. 5 Unlike classical truth and falsity however, these informational notions do not satisfy the informational version of the Principle of Bivalence: it may well be that for a given A, we neither hold the information that A is true, nor do we hold the information that A is false. In this paper we assume that they satisfy the informational version of the Principle of Non- Contradiction: no agent can actually possess both the information that A is true and the information that A is false, as this would be deemed to be equivalent to possessing no definite information about A. 6 We may use the values 1 and 0 to denote, respectively, informational truth and falsity. When a sentence takes neither of these two defined values, we say that it is informationally indeterminate. It is technically convenient to treat informational indeterminacy as a third value that we denote by “⊥”. 7 The three values are partially ordered by the relation ≤ such that v ≤ w (“v is less defined than, or equal to, w”) if, and only if, v = ⊥ or v = w for v, w ∈ {0, 1, ⊥}.
Note that the old familiar truth tables for ∧, V and ч are still intuitively sound under this informational reinterpretation of 1 and 0. 8 However, they are no longer exhaustive: they do not tell us what happens when one or all of the immediate constituents of a complex sentence are assigned the value ⊥.
So, we only need to conservatively extend the classical truth-tables with new entries to accommodate the third value ⊥. More precisely, for every n-ary Boolean operator  , whose classical meaning is fixed by a truth-function f٨, we want to
specify its informational meaning as given by some sort of function fˆ٨ satisfying:
fˆ٨(z1,..., zn)= f٨(z1,..., zn), whenever z1,..., zn ∈ {0, 1}.	(2)
Given our interpretation of the third value ⊥ as informational indeterminacy, a rea- sonable requirement is also that our logical operators are monotonic in the following sense:
v1 ≤ w1 and ... and vn ≤ wn =⇒ fˆ٨(v1,..., vn) ≤ fˆ٨(w1,..., wn)	(3) Let us, from now on, restrict our attention to the logical operators ∧, V, ч. Under

5 We do not need to engage in a discussion about what “true” and “false” may mean in a given application context, but just to assume that these two words “true” and “false” have been given a definite meaning (which may well be the classical one) that obeys the principles of Bivalence and Non-Contradiction.
6 It is, of course, possible to investigate variants of the semantics proposed in this paper in which this informational version of the Principle of Non-Contradiction is relaxed.
7 This is the symbol for “undefined”, the bottom element of the information ordering, not to be confused with the “falsum” logical constant.
8 For example, if we hold the information that A is true and the information that B is true, then we thereby hold the information that A ∧ B is true. If we hold the information that A is true or the information that B is true, we thereby hold the information that A ∨ B is true, etc.


Table 1
Kleene’s 3-valued matrices.

the requirements (2) and (3), the matrices of Kleene’s (strong) 3-valued logic [34,
§64], shown in Table 1, may appear as the most natural candidates to represent their informational meaning. However, while the matrix for negation appears perfectly in tune with our informational interpretation of the three values, the matrices for
∧ and V are not, in that they clash with some of our intuitive judgments. This intuitive counterevidence is well expressed in the following quotations from Willard
V.O. Quine taken from his book The Roots of Reference and concerning what he there calls “the primitive meaning of the logical operators”:
Conjunction has its blind spot [...] when neither component commands assent or dissent. There is no direct way of mastering this quarter. In some such cases the conjunction commands dissent and in others it commands nothing. This sector is mastered only later, in theory-laden ways. Where the components are “it is a mouse” and “it is a chipmunk”, and neither is affirmed nor denied, the conjunc- tion will still be denied. But where the components are “it is a mouse” and “it is in the kitchen”, and neither is affirmed nor denied, the conjunction will perhaps be left in abeyance.
[...]
Alternation, like conjunction, has its blind quarter where neither component com- mands assent or dissent. We might assent to the alternation of “it is a mouse” and “it is chipmunk” or we might abstain. 9
In general, when we are faced with a conjunction A ∧ B in which both A and B are informationally indeterminate, the value of the conjunction may be either informational falsity 0, or informational indeterminacy ⊥, depending on whether or not we hold the information that A and B cannot be simultaneously true. And the value of A V B may be either informational truth 1 or informational indeterminacy
⊥, depending on whether or not we hold the information that at least one of A and B must be true. For example, when I suffer from fuzzy vision, I may well hold the information that the the digit at which the optician is pointing is either a 5 or a 7 as well as the information that it is not both a 5 and a 7, although the sentences “it is a 5” and “it is a 7” are both informationally indeterminate.
As far as the operator V is concerned, its informational meaning we are trying to characterize clearly departs from its intuitionistic meaning, according to which

9 [36, p. 77].

a disjunction A V B is intuitionistically true (roughly speaking, provable 10 ) if and only if either A is intuitionistically true or B is intuitionistically true. This is the so-called disjunction property of intuitionistic logic. While this property is appropriate for (constructive) mathematics, it is quite at odds with ordinary usage outside mathematics. As Michael Dummett puts it:
I may be entitled to assert “A or B” because I was reliably so informed by someone in a position to know, but if he did not choose to tell me which alternative held good, I could not apply an or-introduction rule to arrive at that conclusion. [. . . ] Hardy may simply not have been able to hear whether Nelson said “Kismet hardy” or “Kiss me Hardy”, though he heard him say one or the other: once we have the concept of disjunction, our perceptions themselves may assume an irremediably disjunctive form. 11
Indeed, this appears to be a distinctive feature of the down-to-earth kind of infor- mation with which we practically operate in most non-mathematical contexts:
Unlike mathematical information, empirical information decays at two stages: in the process of acquisition, and in the course of retention and transmission. An attendant directing theatre-goers to different entrances according to the colours of their tickets might even register that a ticket was yellow or green, without registering which it was, if holders of tickets of either colours were to use the same entrance; even our observations are incomplete, in the sense that we do not and cannot take in every detail of what is in our sensory fields. That informa- tion decays yet further in memory and in the process of being communicated is evident. In mathematics, any effective procedure remains eternally available to be executed; in the world of our experience, the opportunity for inspection and verification is fleeting. 12
This discussion strongly suggests that Kleene’s 3-valued matrices are not apt to capture the informational meaning of the logical operators V and ∧ and that, indeed, no system of standard deterministic matrices can do any better. Quine’s suggestion, reported in the above quotations, leads to the following non-deterministic matrices for ∧ and V:
Here, the entries in which both arguments are ⊥ yield two alternative possible val- ues, meaning that the value of the compound sentence is not uniquely determined by the values of its immediate constituents, but can be either of the two values

10 This is somewhat of a simplification. For a more accurate discussion of intuitionistic truth, see [37].
11 [27], pp. 266–267, my emphasis.
12 [27], pp. 277–278.


Table 2
Informational 3-valued matrices for the Boolean operators.

shown. In other words, the “function” fˆ٨ that fixes the informational meaning of a binary operator is a non-deterministic truth-function. 13 These non-deterministic matrices where independently rediscovered by Crawford and Etherington [13] and used to provide a semantic characterization of unit-resolution. The general the- ory of non-deterministic matrices has been brought to the attention of the logical community and extensively investigated by Arnon Avron (see [3,4,1,5,2,6] among others).
A non-deterministic matrix for the informational meaning of the Boolean con- ditional can be obtained in the obvious way. The informational 3-valued matrices for the four Boolean operators are recapitulated in Table 2.

The 0-depth logic
We start by characterizing the 0-depth logic whose inferences are justified by the only means of the informational meaning of the logical operators and no use of virtual information is allowed. Let F be the set of all Boolean formulae.
Definition 3.1 A 3ND-valuation is a mapping V : F → {0, 1, ⊥}, satisfying the following conditions for all A, B ∈ F:
V (чA)= fˆ¬(V (A))
V (A ◦ B) ∈ fˆ◦(V (A),V (B))
where ◦ is ∧, V or →, fˆ¬ is the deterministic truth-function defined by the informa- tional 3-valued matrix for ч, and fˆ◦ is the non-deterministic truth-function defined by the informational 3-valued matrix for ◦.
A 3ND-valuation can be seen as describing an information state that is closed under the implicit information that stems from the informational meaning of the logical operators. The claim is that such an information state contains information that we actually possess and with which we can operate, in the precise sense that we have a feasible procedure to decide, for every formula A, whether the information that A is true, or the information that A is false, or neither of them actually belongs to our information state. This claim will be substantiated in Proposition 3.8 below, by showing that all the implicit information that stems from the informational

13 This is just convenient jargon for a function V n → 2V \ ∅, with V the set of truth-values.

meaning of the logical operators can be feasibly recognized. 14
In what follows we shall make use of signed formulae (S-formulae for short), namely expressions of the form T A or F A with the intended meaning of “A is informationally true” and “A is informationally false”. This choice allows us to express a 3ND-valuation V as a set of S-formulae, namely the set {T A | V (A)= 1}∪
{F A | V (A)= 0}. We shall use “ϕ, ψ, θ, . . .”, as variables ranging over S-formulae and “A, B, C,.. .” as variables ranging over usual unsigned formulae. We shall also use “X, Y, Z,. . . ”, as variables ranging over sets of S-formulae and “Γ, Δ, Λ,.. .”, as variables ranging over sets of unsigned formulae.
Let us say that a 3ND-valuation V satisﬁes an S-formula T A if V (A)=1 and an S-formula F A if V (A)= 0.
Definitions 3.2 For every set X of S-formulae and every S-formula ϕ, we say that:
ϕ is a 0-depth consequence of X if V satisﬁes ϕ for every 3ND-valuation V such that V satisﬁes all the S-formulae in X.
X is 0-depth inconsistent if there is no 3ND-valuation V such that V satisﬁes all the S-formulae in X.
We use the symbol “▶0” for the 0-depth consequence relation and write “X ▶0 ϕ” for “ϕ is a 0-depth consequence of X”. The notions of 0-depth consequence and 0-depth inconsistency can be extended to unsigned formulae by stipulating that an unsigned formula A is a 0-depth consequence of a set Γ of unsigned formulae if and only if T Γ ▶0 T A and that Γ is 0-depth inconsistent if and only if T Γ is 0- depth inconsistent. In [20] (Proposition 2.49) it is shown that 0-depth consequence and 0-depth inconsistency cannot be characterized by any set of finitely valued deterministic matrices.
Note that, according to our definitions, as they stand, ▶0 is explosive just like classical logic: when X is 0-depth inconsistent, X ▶0 ϕ for every ϕ, since there is no 3ND-valuation V that satisfies all the formulae in X. However, 0-depth incon- sistency is stricter than classical inconsistency — a set X of S-formulae may well be 0-depth consistent but classically inconsistent — and, more importantly, can be feasibly detected (see Proposition 3.8 below and the following comment).
It is not difficult to show that he relation ▶0 is a Tarskian consequence rela- tion, that is, it satisfies reflexivity, monotonicity and cut. We remark that ▶0, like Kleene’s 3-valued logic [34, §64] and Belnap’s 4-valued logic [7,8], has no tautolo- gies. This is not so surprising if one thinks that a tautology is usually described as “a consequence of the empty set of premises”. Since the 0-depth logic is the logic that uses no virtual information, there is no way of extracting information from the empty information state without simulating possible non-empty extensions of it. Accordingly, tautologies make their appearance only at depth > 0, when virtual information is introduced, and the set of provable tautologies increases with the depth at which its use is allowed.

14 Clearly this is not the case of the implicit information that stems from their classical meaning.

A natural proof-theoretical characterization of the 0-depth consequence relation
▶0 is obtained by means of a set of introduction and elimination rules (intelim rules) for the logical operators. These rules are shown in Tables 3 and 4 and are expressed in terms of S-formulae. A version of these rules for unsigned formulae is obtained by removing all the occurrences of the sign T and replacing all the occurrences of the sign F with the negation sign ч.
Definitions 3.3 Given a set X of S-formulae:
An intelim sequence for X is a sequence ϕ1,... ϕn of S-formulae such that, for every i = 0,..., n, either ϕi ∈ X or is the conclusion of the application of an intelim rule to preceding formulae.
An intelim sequence is closed when it contains both T A and F A for some A.
An intelim refutation of X is a closed intelim sequence for X.
A intelim proof of ϕ from X is an intelim sequence for X such that ϕ is the last S-formula in the sequence.
X is intelim-refutable if there is a closed intelim sequence for X.
An S-formula ϕ is intelim deducible from X if there is an intelim proof of ϕ from
X.
We use the symbol “▶0” to denote the relation of intelim-deducibility and write “X ▶0 ϕ” for “ϕ is a 0-depth deducible from X”.
Again, we can extend the notions of intelim deducibility and refutability to unsigned formulae by stipulating that an unsigned formula A is intelim deducible from a set Γ of unsigned formulae if T A is intelim deducible from T Γ and that a set Γ of unsigned formulae is intelim refutable if T Γ is intelim refutable.
Before showing that ▶0 and ▶0 are co-extensional we show that ▶0 is explosive like its semantic counterpart ▶0 (and like classical logic).
Proposition 3.4 If X is intelim refutable, than X ▶0 ϕ for every ϕ.
Proof. If X is intelim refutable, then there is an intelim sequence for X that contains both T A and F A for some A. Then, for every B: (i) an intelim proof of T B is obtained in two steps as follows: from premise T A derive T AVB by TV-I1; then from premises F A and T A V B derive T B by TV-E 2; 15 (ii) an intelim proof of F B s obtained in two steps as follows: from premise F A derive F A ∧ B by F∧-I1; then from premises T A and F A ∧ B derive F B by F∧-E 1.	2
Proposition 3.5 For every set X of S-formulae and every S-formula ϕ,
X is 0-depth inconsistent if and only if X is intelim refutable;
X ▶0 ϕ if and only if X ▶0 ϕ.
Proof (Sketch) The reader can check that the intelim rules are all sound with respect to the informational 3-valued matrices. For example, the rule TV-E 1 can be read off the informational 3-valued matrix for V, simply by noting that, whenever
15 This is Lewis’s argument for ex-falso quodlibet.

the value of the disjunction is 1 and that of one of the two disjuncts is 0, the value of the other disjunct must be 1. As for completeness, 16 consider the set X∗ = {ψ | X ▶0 ψ}. For the first claim, suppose that X is not intelim refutable. Then, for no formula A, T A and F A are both in X∗. Next, show that the function
V defined as follows:
⎧⎪⎨1	if T A ∈ X∗
⎪⎩⊥	otherwise
is a 3ND-valuation. Here we just outline a typical case. Suppose V (A)= V (B)= ⊥. Then F A V B /∈X∗. Otherwise, if F A V B ∈ X∗, then by definition of X∗ and by the rules FV-E , F A and F B should also be in X∗; therefore, by definition of
V , V (A) = V (B) = 0 against our assumption. Hence V (A V B) /= 0. Moreover,
T A V B, may or may not belong to X∗, and so V (A V B)=1 or V (A V B)= ⊥.
Finally, observe that ψ ∈ X∗ for all ψ ∈ X and so, by definition of V , V satisfies all ψ ∈ X. Hence X is 0-depth consistent. For the second claim, suppose X b0 ϕ. Observe that, in this case, X is not intelim refutable, otherwise, by Proposition 3.4, X ▶0 ϕ against the hypothesis. Moreover, ϕ /∈X∗. So, for the 3ND-valuation V defined above, V satisfies all ψ ∈ X and V does not satisfy ϕ. Hence X $0 ϕ.  2
The unsigned part of an S-formula is the unsigned formula that results from it by removing the sign T or F . Given an S-formula ϕ, we denote by ϕu the unsigned part of ϕ.
Definition 3.6 We say that an intelim proof of ϕ from X (an intelim refutation of X) has the subformula property (SFP) if, for every S-formula ψ occurring in it, ψu is a subformula of θu for some θ in X ∪ {ϕ} (in X).
For an intelim sequence π, let |π| denote the length of π.
Proposition 3.7 (Subformula Property)
For every intelim proof π of ϕ from X:
if π is an open intelim sequence, π can be transformed into an intelim proof
πj of ϕ from X such that πj has the SFP and |πj|≤ |π|;
if π is a closed intelim sequence, there is an intelim refutation πj of X such that πj has the SFP and |πj|≤ |π|.
For every intelim refutation π of X, π can be transformed into an intelim refutation πj of X such that πj has the SFP and |πj|≤ |π|.
A detailed proof of the above proposition can be found in [20]. The subformula property of intelim proofs and refutations paves the way for a feasible decision procedure for intelim deducibility and refutability. The following proposition is also proven in [20].

16 An indirect proof is given in [20] where the 0-depth consequence relation ▶0 is characterized in terms of another semantics (called “modular semantics”) that is shown to be equivalent to the informational 3-valued semantics.



F A 
T чA

T ¬-I
T A 
F чA

F ¬-I


F A 



T A T A V B

T ∨-I1
T B T A V B

T ∨-I2
F B F A V B

F ∨-I




F A F A ∧ B




F ∧-I1

F B F A ∧ B




F ∧-I2
T A T B 
T A ∧ B




T ∧-I




F A T A → B




T→-I1

T B T A → B




T→-I2
T A F B 
F A → B




F→-I


Table 3
Introduction rules for the standard Boolean operators.

Proposition 3.8 Whether or not X ▶0 ϕ (X is 0-depth refutable) can be decided in time O(n2) where n is the total number of occurrences of symbols in X ∪ {ϕ} (in X).
Proposition 3.8 suggests that the explosivity of 0-depth consequence is far less serious a problem then the explosivity of classical consequence. For, we can always feasibly detect that our premises are 0-depth inconsistent and, therefore, we may as well abstain from drawing bizarre conclusions on their basis. 17 Unlike hidden classical inconsistencies, that may be hard to discover even for agents equipped with powerful (but still bounded) computational resources, 0-depth inconsistency lies, as it were, on the surface. So, we always have a feasible means to ensure that our premises are 0-depth consistent, in which case the consequence relation ▶0 is not explosive, even if these premises are classically inconsistent.
Tractable k-depth approximations to Boolean logic
As argued in the previous section, we can think of a 3ND-valuation as a most basic kind of information state: a collection of pieces of information closed only under the implicit information that stems from the informational meaning of the logical

17 As Michael Dummett puts it: “Obviously, once a contradiction has been discovered, no one is going to go through it: to exploit it to show that the train leaves at 11:52 or that the next Pope will be a woman.” [27, p. 209].



T чA F A 

T ч-£
F чA T A 

F ч-£



T A V B F A T B 




T V-£ 1
T A V B F B T A 




T V-£ 2

F A V B F A 




F V-£ 1

F A V B F B 




F V-£ 2



F A ∧ B T A F B 




F Λ-£ 1
F A ∧ B T B F A 




F Λ-£ 2

T A ∧ B T A 




T Λ-£ 1

T A ∧ B T B 




T Λ-£ 2



T A → B T A T B 




T→-£ 1
T A → B F B F A 




T→-£ 2

F A → B T A 




F→-£ 1

F A → B F B 




F→-£ 2


Table 4
Elimination rules for the four standard Boolean operators

operators. The 0-depth consequence relation ▶0 is a tractable subsystem of classical propositional logic obtained by replacing the notion of “possible world” with this weaker notion of information state, which makes no direct reference to the classical information-transcendent notions of truth and falsity of classical semantics, but only to their informational counterparts — informational truth and informational falsity
— that are taken as primary semantic notions. 18
What about the classical inferences that are not valid under this informational semantics? For example, consider the classically valid inference AVB, чAVB/B dis- cussed in the introduction. This inference cannot be justified by virtue of the 3ND- matrices. A counterexample is any 3ND-valuation V such that V (A)= V (B)= ⊥ and V (A V B) = V (чA V B) = 1. 19 In order to validate the above inference, we need to restrict our attention to the refinements V j of V such that V j(A) /=⊥. It is easy to check that V j(B) = 1 for every such refinement of V . In other words, we need to go beyond the information that we actually possess and simulate virtual

18 The notions of informational truth and informational falsity (holding the information that a sentence is true, respectively false) may make indirect reference to information-transcendent notions of truth and falsity, that may well (but need not) be the classical notions, but the latter play no role in the justification of logical inference, since all the inference rules are based only on the informational notions. In classical logic, on the other hand, the truth-tables entries are all sound under the informational interpretation, but the Principle of Bivalence, which plays an essential role in justifying the validity of classical inferences, is not.
19 Recall that if V (A)= ⊥, then V (чA)= ⊥ and that when the value of both disjuncts is ⊥, the value of the disjunction may be either 1 or ⊥.

information states in which we hold definite information about the truth or falsity of A.
Given a set of formulae Γ, we use the notation Sub(Γ) to denote the set of all subformulae of the formulae in Γ.
Definitions 4.1 For all k ∈ N+,
X ▶k ϕ if and only if X ∪ {T A} ▶k−1 ϕ and X ∪ {F A} ▶k−1 ϕ for some
A ∈ Sub(Xu ∪ {ϕu});
X is k-depth inconsistent if and only if X ∪ {T A} and X ∪ {F A} are both
k − 1-depth inconsistent for some A ∈ Sub(Xu).
Observe that, since ▶0 is monotonic, ▶j⊆▶k whenever j ≤ k. The transition from
▶k to ▶k+1 corresponds to an increase in the depth at which the nested use of virtual information is allowed. It is not difficult to show that:
Proposition 4.2 The relation ▶∞=	k∈N |=k is the consequence relation of clas- sical propositional logic.
Given Proposition 3.5 and the definitions of k-depth consequence ▶k and k- depth inconsistency given above, the corresponding notions of k-depth deducibility and k-depth refutability for k ∈ N+, are trivially defined as follows:
Definition 4.3 For all k ∈ N+,
X ▶k ϕ if and only if X ∪ {T A} ▶k−1 ϕ and X ∪ {F A} ▶k−1 ϕ for some
A ∈ Sub(Xu ∪ {ϕu});
X is k-depth refutable if and only if X ∪ {T A} and X ∪ {F A} are both
k − 1-depth refutable for some A ∈ Sub(Xu).
As before, we extend the relations ▶k and ▶k to unsigned formulae by stipulating that Γ ▶k A (Γ ▶k A) if and only if T Γ ▶k T A (T Γ ▶k T A). Similarly, we stipulate that Γ is k-depth inconsistent (k-depth refutable) if and only if T Γ is k-depth inconsistent (k-depth refutable).
While deductions of depth 0 are represented by intelim sequences, deductions of depth k > 0 may be aptly represented in the format of intelim trees. For this purpose it is sufficient to add to the intelim rules the following branching rule: 20
/	\	PB
T A	F A 
Each application of this rule allows us to introduce virtual information concerning an arbitrary formula A by appending both T A and F A as sibling nodes at the end of any branch of the tree, generating two new branches. The formula A involved in a specific application of the rule is called PB-formula. The S-formulae T A and F A are called virtual assumptions. Such a step invites us to consider information states that, besides containing all the information expressed by the preceding S-formulae

20 “PB” stands for “Principle of Bivalence”.

in the branch, also contain definite information about the truth or falsity of the PB-formula A.
Definition 4.4 An intelim tree for X is a tree T of S-formulae such that, for every S-formula ϕ in a branch of T , either
ϕ ∈ X, or
ϕ is obtained from preceding S-formulae in the same branch by an application of an intelim rule, or
ϕ is a virtual assumption introduced by an application of the branching rule PB.
We say that a branch of an intelim tree is closed if it contains both T A and F A 
for some formula A, otherwise it is open.
Definition 4.5 The depth of an intelim tree T is the maximum number of virtual assumptions occurring in a branch of T .
Definitions 4.6 For all k ∈ N,
A k-depth intelim proof of ϕ from X is an intelim tree T for X of depth k
such that ϕ occurs in all open branches of T ;
A k-depth refutation of X is an intelim tree T for X of depth k such that every branch of T is closed.
For each intelim tree T , let us denote by PB(T ) the set of all PB-formulae occurring in T .
Proposition 4.7 For all k ∈ N,
Every k-depth intelim proof T of ϕ from X can be transformed into a k+j-depth (with j ≥ 0) intelim proof T j of ϕ from X such that PB(T j) ⊆ Sub(Xu ∪ ϕu).
every k-depth refutation T of X can be transformed into a k + j-depth (with
j ≥ 0) T j of X such that PB(T j) ⊆ Sub(Xu).
A proof of the above proposition can be adapted from [16]. Let us say that an intelim proof T of ϕ from X (an intelim refutation T of X) has the subformula property (SFP) if ψu ∈ Sub(Xu ∪ ϕu) (ψu ∈ Sub(Xu)) for every S-formula ψ occurring in T . It follows from Propositions 3.7 and 4.7 that
Proposition 4.8 For all k ∈ N,
Every k-depth intelim proof T of ϕ from X such that PB(T ) ⊆ Sub(Xu ∪ ϕu) can be transformed into a k-depth intelim proof T j of ϕ from X such that T j has the SFP.
Every k-depth refutation T of X such that PB(T ) ⊆ Sub(Xu) can be trans- formed into a k-depth refutation T j of X such that T j has the SFP.
Then, it is easy to show that:
Proposition 4.9 For all k ∈ N,

X ▶k ϕ if and only if, for some j ≤ k, there is a j-depth intelim proof T of ϕ
from X such that T has the SFP;
X is k-depth refutable if and only if for some j ≤ k, there is a j-depth intelim refutation T of X such that T has the SFP.
An example of an intelim proof of depth 2 with the SFP is given in Figure 1. This is an intelim proof of T H from premises 1–6. The reader can check that each S-formula that is not a premise either is obtained from previous S-formulae on the same branch by an application of one of the intelim rules in Tables 3 and 4, or is one of the virtual assumptions introduced by the branching rule PB. All the open branches end with the S-formula T H. The rightmost branch is closed since it contains both T C and F C. Each open branch isa 0-depth intelim proof of T H from the union of the initial premises 1–6 plus the virtual assumptions introduced by the rule PB on that branch. Given Propositions 3.8 and 4.9 it is not difficult to show that, for each fixed k, ▶k admits of a feasible decision procedure:
Proposition 4.10 For each k ∈ N, whether or not X ▶k ϕ (X is k-depth refutable), can be decided in time O(nk+2), where n is the total number of occurrences of symbols in X ∪ {ϕ} (in X).
For unbounded k, the method of intelim trees is a proof system for full classical propositional logic that enjoys the subformula property. 21 If unbounded applica- tions of PB are allowed, the introduction rules become redundant, since they can be easily derived from the elimination rules with the help of PB. The system consist- ing only of the elimination rules plus unbounded applications of PB is a complete system for classical propositional logic that enjoys the SFP, since the applications of PB can be restricted to subformulae and the elimination rules obviously preserve the SFP. This system, known as KE, was originally proposed as a refutation system akin to Smullyan’s semantic tableaux but essentially more efficient. It was shown that KE has an exponential speed-up on semantic tableaux and on Gentzen’s cut- free sequent calculus even if we consider its “analytic restriction” that yields only refutations with the SFP [14,24,15]. The unbounded method of intelim trees can be seen as an extension of KE, obtained by adding suitable introduction rules for the logical operators that are all easily derivable from the elimination rules and PB. So, intended as a method for full classical propositional logic, intelim trees still have an exponential speed-up on Smullyan’s semantic tableaux and on cut-free sequent proofs even when we consider only intelim proofs and refutations with the SFP.
Conclusions and further work
The relations ▶k and ▶k provide an infinite sequence of tractable depth-bounded ap- proximations to classical propositional logic. The method of intelim trees combines

21 However, this presentation of classical logic allows also for representing proofs that do not have the subformula property simply by removing the restriction to subformulae in the applications of the rule PB. On the connection between the rule PB and the cut rule of Gentzen’s sequent calculus, as well as on the advantages of cut-based formalizations of classical logic, see [14,15].


T A → B

F чA ∧ C

T (B V D) → (E → H)

T (B V D) → (чH → E)

T ч(C ∧ D) → (G → H)

T чC → (чG → (A V C))
//	 

T A 
T B T B V D T E → H

T чH → E
/	 
T E	F E 

T H	F чH T H 
F A 
T чA F C 
F C ∧ D T ч(C ∧ D) T G → H

T чC

T чG → (A V C)
/	 

T G	F G 
T H		T чG T A V C

T C 
×

Fig. 1. An intelim proof of depth 2.
features of Natural Deduction (it is based on introduction and elimination rules that satisfy a form of the inversion principle [16]) and of Smullyan’s Semantic Tableaux (it is a tree method with no discharge rules 22 that can be used as a refutation system), but is essentially more efficient than both. It appears to be heuristically interesting for further developments in a variety of areas. Possible topics of future research include:
providing alternative characterizations of classes of inferences whose validity can (or cannot) be shown at a given depth k;

22 The role played by the discharge rules in Gentzen-style natural deduction is played here by the structural rule PB, which is the only branching rule.

extending the notions of depth-bounded consequence and depth-bounded incon- sistency to non-classical logics by relativizing the primary semantic notions of informational truth and informational falsity to points of some structured space (e.g., possible worlds, information states, etc., equipped with an accessibility re- lation); 23
investigating depth-bounded approximations for the logics of formal inconsistency
[11] and, more in general, for paraconsistent logics [35];
exploring the connections between depth-bounded consequence and the polyno- mial ring calculus [10,12].

References
Avron, A., Non-deterministic matrices and modular semantics of rules, in: J.-Y. Beziau, editor, Logica Universalis, Birk¨auser, 2005 pp. 155–174.
Avron, A., A non-deterministic view of non-classical negation, Studia Logica 80 (2005).
Avron, A. and I. Lev, Canonical propositional Gentzen-type systems, in: R. Gore, A. Leitsch and
T. Nipkov, editors, Automated Reasoning: First Joint International Conference (IJCAR), Lecture Notes in Artificial Intelligence, 2083 (2001), pp. 529–544.
Avron, A. and I. Lev, Non-deterministic multiple-valued structures, Journal of Logic and Computation
15 (2005), pp. 241–261.
Avron, A. and A. Zamansky, Cut elimination and quantification in canonical systems, Studia Logica
82 (2006), pp. 157–176.
Avron, A. and A. Zamansky, Non-deterministic semantics for logical systems, in: D. Gabbay and
F. Guenthner, editors, Handbook of Philosophical Logic, vol. 16, Springer Verlag, 2011, 2nd edition pp. 227–304.
Belnap Jr., N. D., How a computer should think, in: G. Ryle, editor, Contemporary Aspects of Philosophy, Oriel Press, 1976 pp. 30–55.
Belnap Jr., N. D., A useful four-valued logic, in: J. M. Dunn and G. Epstein, editors, Modern uses of multiple-valued logics, Reidel, Dordrecht, 1977 pp. 8–37.
Cadoli, M. and M. Schaerf, Approximate reasoning and non-omniscient agents, in: TARK ’92: Proceedings of the 4th conference on Theoretical aspects of reasoning about knowledge (1992), pp. 169–183.
Carnielli, W., Polynomial ring calculus for many-valued logics, in: Proceedings of the 35th International Symposium on Multiple-Valued Logic, IEEE Computer Society, Calgary, Canada, 2005, pp. 20–25.
Carnielli, W., M. Coniglio and J. Marcos, Logics of formal inconsistency, in: D. Gabbay and
F. Guenthner, editors, Handbook of Philosophical Logic, vol. 2, Springer-Verlag, 2007 pp. 15–107.
Carnielli, W. and M. Matulovic, Non-deterministic semantics in polynomial format, in: M. Fernandez and M. Finger, editors, Pre-Proceedings of LSFA 2013. 8th Workshop on Logical and Semantic Frameworks, with Applications, S˜ao Paulo, Brazil, 2013, pp. 101–114.
Crawford, J. and D. Etherington, A non-deterministic semantics for tractable inference, in:
AAAI/IAAI, 1998, pp. 286–291.
D’Agostino, M., Investigations into the complexity of some propositional calculi, PRG Technical Monographs 88, Oxford University Computing Laboratory (1990).
D’Agostino, M., Tableau methods for classical propositional logic, in: D’Agostino et al. [23] pp. 45–123.

23 From the proof-theoretical point of view, this involves shifting from intelim trees of S-formulae to intelim trees of labelled signed formulae. For example, depth-bounded systems for substructural logics could possibly be developed along the lines of the KE-like systems discussed in [22].

D’Agostino, M., Classical natural deduction., in: S. Art¨emov, H. Barringer, A. d’Avila Garcez, L. Lamb and J. Woods, editors, We Will Show Them! (1), College Publications, 2005 pp. 429–468.
D’Agostino, M., Tractable depth-bounded logics and the problem of logical omniscience, in: F. Montagna and H. Hosni, editors, Probability, Uncertainty and Rationality, CRM series, Springer, 2010 pp. 245– 275.
D’Agostino, M., Semantic information and the trivialization of logic: Floridi on the scandal of deduction, Information 4 (2013), pp. 33–59.
URL http://www.mdpi.com/2078-2489/4/1/33

D’Agostino, M., Analytic inference and the informational meaning of the logical operators, Logique et Analyse (2014), forthcoming.
D’Agostino, M., M. Finger and D. Gabbay, Semantics and proof-theory of Depth-Bounded Boolean Logics, Theoretical Computer Science 480 (2013), pp. 43–68.
D’Agostino, M. and L. Floridi, The enduring scandal of deduction. Is propositionally logic really uninformative?, Synthese 167 (2009), pp. 271–315.
D’Agostino, M., D. Gabbay and K. Broda, Tableau methods for substructural logics, in: D’Agostino et al. [23] pp. 397–468.
D’Agostino, M., D. Gabbay, R. Ha¨hnle and J. Posegga, editors, “Handbook of Tableau Methods,” Kluwer Academic Publishers, 1999.
D’Agostino, M. and M. Mondadori, The taming of the cut, Journal of Logic and Computation 4 (1994),
pp. 285–319.
Dalal, M., Anytime families of tractable propositional reasoners, in: Proceedings of the Fourth International Symposium on AI and Mathematics (AI/MATH-96), 1996, pp. 42–45.
Dalal, M., Anytime families of tractable propositional reasoners, Annals of Mathematics and Artificial Intelligence 22 (1998), pp. 297–318.
Dummett, M., “The logical basis of metaphysics,” Duckworth, London, 1991.
Finger, M., Polynomial approximations of full propositional logic via limited bivalence, in: 9th European Conference on Logics in Artificial Intelligence (JELIA 2004), Lecture Notes in Artificial Intelligence 3229 (2004), pp. 526–538.
Finger, M., Towards polynomial approximations of full propositional logic, in: A. Bazzan and S. Labidi, editors, XVII Brazilian Symposium on Artificial Intel ligence (SBIA 2004), Lecture Notes in Artificial Intel lingence 3171 (2004), pp. 11–20.
Finger, M. and D. Gabbay, Cut and pay, Journal of Logic, Language and Information 15 (2006),
pp. 195–218.
Finger, M. and R. Wassermann, Approximate and limited reasoning: Semantics, proof theory, expressivity and control, Journal of Logic and Computation 14 (2004), pp. 179–204.
Finger, M. and R. Wassermann, The universe of propositional approximations, Theoretical Computer Science 355 (2006), pp. 153–166.
Hintikka, J., “Logic, language games and information. Kantian themes in the philosophy of logic,” Clarendon Press, Oxford, 1973.
Kleene, S., “Introduction to Metamatehmatics,” North-Holland, Amsterdam, 1952.
Priest, G., Paraconsistent logic, in: D. Gabbay and F. Guenthner, editors, Handbook of Philosophical Logic, vol. 6, Kluwer Academic Publishers, Dordrecht, 2002, 2nd edition pp. 287–393.
Quine, W., “The Roots of Reference,” Open Court, 1973.
Raatikainen, P., Conceptions of truth in intuitionism, History and Philosophy of Logic 25 (2004),
pp. 131–145.
Sheeran, M. and G. St˚almarck, A tutorial on Stalmarck’s proof procedure for propositional logic, Formal Methods in System Design 16 (2000), pp. 23–58.
