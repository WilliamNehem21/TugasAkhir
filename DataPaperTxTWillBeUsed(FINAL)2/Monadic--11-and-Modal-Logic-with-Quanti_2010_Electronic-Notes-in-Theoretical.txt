

Electronic Notes in Theoretical Computer Science 262 (2010) 173–188
www.elsevier.com/locate/entcs


Monadic Σ1
and Modal Logic with Quantified Binary Relations

Lauri Hella1,3 and Antti Kuusisto2,3,4
Department of Mathematics and Statistics University of Tampere
Tampere, Finland

Abstract
We investigate the expressive power of a range of modal logics extended with second-order prenex quan- tification of binary and unary relations. Our principal result is that Σ1(BML=), i.e., Boolean modal logic extended with the identity modality and existential prenex quantification of binary and unary relations, translates into monadic Σ1. We also briefly discuss a variety of decidability results in multimodal logic
implied by our result.
Keywords: Monadic Σ1, Boolean modal logic, expressive power, decidability.


Introduction
Modal correspondence theory concerns itself with the classification of formulae of modal logic according to whether they define elementary classes of Kripke frames. On the level of frames, modal logic can be regarded as a fragment of monadic Π1, also known as ∀MSO . Hence correspondence theory studies a special fragment of ∀MSO . When inspecting a modal formula from the point of view of frames, one universally quantifies the proposition symbols occurring in the formula. It is therefore rather natural to ask what happens if one also quantifies binary relation symbols occurring in (the standard translation of) a modal formula. This question is studied in [10], where the focus is on the expressive power of multimodal logic with universal prenex quantification of (not necessarily all of the) binary and unary relation symbols occurring in a formula. It is natural to ask whether there exists

1 Email: lauri.hella@uta.fi
2 Email: antti.j.kuusisto@uta.fi
3 Affiliated with the European Science Foundation project Logic for Interaction (LINT).
4 Supported by the MALJA Graduate School in Mathematical Logic, Academy of Finland grant 118815.

1571-0661 © 2010 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2010.04.013

any class of multimodal frames definable in this logic, let us call it Π1(ML), but not definable in monadic second-order logic (MSO ). This can be regarded as a question of modal correspondence theory. In this case, however, the correspondence language is MSO rather than FO . In addition to [10], modal logic with quantification of binary relations is investigated for example in [2,11,15].
In the current paper we study two systems of multimodal logic with existential second-order prenex quantification of binary and unary relation symbols. We warm up by showing that formulae of Σ1(ML), i.e., ordinary multimodal logic with ex- istential second-order prenex quantification of binary and unary relation symbols, translate into EMSO (MLE ), i.e., multimodal logic with the universal modality and existential second-order prenex quantification of only unary predicate symbols. The method of proof is based on the definition of the accessibility relation in a largest ﬁltration (see [1] for the definition). We then push the method and establish that Σ1(BML=), i.e., Boolean modal logic with the identity modality and existential second-order prenex quantification of binary and unary relation symbols, translates into monadic Σ1, also known as EMSO . Note that both of these results directly imply that Π1(ML) translates into 6MSO , and therefore show that MSO would be a dull correspondence language for correspondence theory of Π1(ML).
It could be argued that {ч, ∪, ∩, ◦, ∗, ×, E, /=} is, more or less, the core collec- tion of operations on binary relations used for defining extensions of modal logic for the purposes of applications. Here ч, ∪, ∩, ◦, ∗, and × denote the complement, union, intersection, composition, transitive reflexive closure, and converse opera- tions, respectively. E and /= denote the constant operations universal modality and difference modality. Logics where these operations are used (possibly together with other operations) include for example PDL [3,7], Boolean modal logic [4,12], de- scription logics [8,14], modal logic with the universal modality [5], and modal logic with the difference modality [17]. The fact that BML= subsumes a large number of typical extensions of modal logic is one of the motivations for our study.
We describe a possible application of our result concerning Σ1(BML=) (cf. The- orem 4.11).  Let Ð be a class of Kripke frames (W, R1), and consider the class C = { (W, R1, R2, ...) | Ri ⊆ W × W, (W, R1) ∈Ð } of multimodal Kripke frames. Assume that the 6MSO -theory of Ð, that is, the 6MSO -theory of the class of R1- reducts of structures in C, is decidable. For example, we could assume that C is the class of countably infinite frames (W, R1, R2...), where R1 is a dense linear ordering without endpoints (see [16]). Assume we wish to know whether the satisfiability problem of multimodal logic (perhaps extended with, say, the difference modal- ity) with respect to C is decidable. By Theorem 4.11 below, we immediately see that, indeed, it is. Theorem 4.11 implies a whole range of decidability results for multimodal logic. We note that there exists a large body of knowledge concerning structures and classes of structures with a decidable MSO- (and therefore 6MSO -) theory, see [18] for example.
Another motivation for our study is related to descriptive complexity theory [9]. FO2 is the fragment of first-order logic, where the use of only two variables is allowed.  Σ1(FO2) is the extension of this logic with existential second-order

prenex quantification. In [6], Gra¨del and Rosen pose the question whether there exists any class of finite directed graphs definable in Σ1(FO2), but not definable in EMSO . Lutz, Sattler, and Wolter show in [13] that BML= extended with the converse operator is expressively complete for FO2. Therefore, in order to show that Σ1(FO2) translates into EMSO , one would have to modify our proof such that it takes into account the possibility of using the converse operation. We have succeeded neither in this, nor in finding a Σ1(FO2) definable class of directed graphs that is not definable in EMSO . However, we find modal logic a promising framework for working on this problem.

Preliminaries
In this section we introduce technical notions that occupy a central role in the rest of the discourse.

Syntax and Semantics
With a model we mean a model of predicate logic. A pointed model is a pair (M, w), where M is a model and w ∈ Dom(M ). We only consider models associated with a relational vocabulary containing unary and binary relation symbols. If V is a vocabulary, we let V1 and V2 denote the sets of unary and binary relation symbols in V , respectively. The following BNF determines the set MP (V2) of modal parameters over V2:
M ::= id | R | чM | (M∩ M)
Here R ∈ V2 and id /∈ V is a constant relation symbol.  The following BNF
determines the set of formulae of BML= over vocabulary V :

ϕ ::= P | чϕ | (ϕ ∧ ϕ) | ⟨M⟩ϕ

Here P ∈ V1 and M ∈ MP (V2). Operators ⟨M⟩ are called diamonds. The modal depth of a formula ϕ, or Md(ϕ), is the maximum number of nested diamonds in ϕ.
Let M be a model.  The extension MM of a modal parameter M over M is a binary relation over Dom(M ). The extension of R ∈ V2 over M is simply the interpretation RM of the symbol R. The extension idM of the symbol id is
{(w, w) | w ∈ Dom(M )}. Other modal parameters are interpreted recursively such that чMM = (Dom(M ) × Dom(M )) \ MM and (M∩ N )M = MM ∩ NM . The satisfaction relation H of BML= is defined as follows:

(M, w) H P	⇔ w ∈ PM ,
(M, w) H чϕ	⇔ (M, w) /H ϕ,
(M, w), H ϕ ∧ ψ	⇔ (M, w) H ϕ and (M, w) H ψ,
(M, w) H ⟨M⟩ ϕ ⇔ Eu ∈ Dom(M ) such that (w, u) ∈ MM and (M, u) H ϕ.

For each formula ϕ, we let ||ϕ||M denote the set {w ∈ Dom(M ) | (M, w) H ϕ}. The set ||ϕ||M is called the extension of ϕ over M . We write ϕ H ψ if (M, w) H ϕ ⇒ (M, w) H ψ for all pointed models (M, w).
A formula ϕ of Σ1(BML=) of vocabulary V is a formula of type ES1...ESnEP1...EPm(ψ), where the variables Si are binary and Pi unary relation symbols, and ψ is a BML= formula of vocabulary V ∪ {S1, ..., Sn, P1, ..., Pm}. We define (M, w) H ϕ if there exists an expansion M' = (M, SM' , ..., SM' ,PM' ,PM' )
1	n	1	m
of the model M such that (M', w) H ψ.  We define the logic Π1(BML=) simi-
larly, but with universal second-order quantifiers instead of existential ones. ML is the fragment of BML=, where the modal parameters are required to be atomic binary relation symbols in the vocabulary under discourse. MLE is the extension of ML with the universal diamond ⟨E⟩, i.e., the diamond ⟨ч(id ∩ чid)⟩. The logics Σ1(ML) and Σ1(MLE ) are defined in the natural way. EMSO (MLE ) is the frag-
1	1
ment of Σ1(MLE ), where we only allow second-order quantifiers quantifying unary
relation symbols.
We assume the reader is familiar with the systems EMSO (i.e., monadic Σ1) and
6MSO (i.e., monadic Π1) of predicate logic. We write M, u v |= ϕ(x, y), if M satisfies
1	x y
the formula ϕ(x, y) of predicate logic under the assignment x '→ u ∈ Dom(M ), y '→ v ∈ Dom(M ). A modal formula ϕ and a formula ψ(x) of predicate logic are called equivalent if for all pointed models (M, w), (M, w) H ϕ ⇔ M, w |= ψ(x).

Types
Let V be a finite vocabulary.  Let U be a set of size |V2| + 1 such that for all T ∈ V2, exactly one of T and чT is in U , and exactly one of id and чid is in U . Let M∈ MP (V2) be an intersection consisting of all the members of U . Note that if |V2| /= 0, there are several such intersections corresponding to U . Therefore, for each U , we always assume some standard ordering and bracketing of the related modal parameter M, so that there is a one-to-one correspondence between the sets U and the related modal parameters. We call such modal parameters access types (over V ). We let ATP V denote the set of access types over V .
Let M be an access type over V , and let T ∈ V2 ∪ {id}. We write T ≤M if T occurs in M, i.e., чT does not occur in M. Let U ⊆ V be a finite vocabulary and N an access type over U . We say that M is consistent with N (or alternatively, N is consistent with M), if for all symbols T ∈ U2 ∪ {id}, T ≤M iff T ≤ N .
Let (M, w) be a pointed model of vocabulary V . We define


0
(M,w)
:=	 
P ∈ V1 ,
(M,w) H P

P	∧	 
Q ∈ V1 ,
(M,w) /H Q

чQ.

Formula τ 0	is the type of modal depth 0 of (M, w). We choose formulae τ 0

such that if τ 0
0
(N,v)
are equivalent for some pointed models (M, w) and

(N, v), then actually τ 0
0
(N,v)
. We let TP 0
be the set containing exactly the

formulae τ such that for some pointed model (M, w) of vocabulary V , τ is the type

of modal depth 0 of (M, w). Clearly the set TP 0 is finite. Now assume we have
defined the formulae τn	for all pointed models (M, w), and that the set TPn is
a finite set containing exactly all these formulae. We then define


n+1 (M,w)
n
(M,w)
∧   { ⟨M⟩σ | M ∈ ATP V , σ ∈ TPn , (M, w) H ⟨M⟩σ}

∧  { ч⟨M⟩σ | M ∈ ATP V , σ ∈ TPn , (M, w) /H ⟨M⟩σ}.




Again we assume some standard ordering of the conjuncts and some standard brack-
eting, so that there is exactly one formula τn+1 . Also, we choose these formulae

such that if τn+1
n+1 (N,v)
are equivalent, then in fact τn+1
= τn+1 . Formula

n+1 (M,w)
is the type of modal depth n + 1 of (M, w). We let TPn+1 be the set contain-

ing exactly the formulae τ such that for some pointed model (M, w) of vocabulary
V , τ is the type of modal depth n + 1 of (M, w). We see that TPn+1 is finite.
We then list a number of properties of types that are straightforward to prove. Let (M, w) be a pointed model of vocabulary V and let U ⊆ V be a finite vocabulary. Let n ∈ N. Firstly, (M, w) satisfies exactly one type in TPn . Also, for all τ ∈ TPn
U	U
and all m ≤ n, there exists exactly one type σ ∈ TPm such that τ H σ. Let α ∈ TPn
U	U
and let ψ be an arbitrary formula of vocabulary U and of modal depth m ≤ n. Then
either α H ψ or α H чψ, and also, for all points u, v ∈ Dom(M ) ∩ ||α||M , we have
(M, u) H ψ iff (M, v) H ψ. Finally, ψ is equivalent to  {τ ∈ TPn | τ H ψ}.



Σ1(ML) ≤ EMSO (MLE )
In this subsection we show how to translate Σ1(ML) formulae to equivalent formulae of EMSO (MLE ). We begin by fixing a Σ1(ML) formula ϕ and show how to translate it to an equivalent formula ϕ∗(x) of EMSO . We then show that the first-order part of ϕ∗(x) translates to an equivalent MLE formula.
Let ϕ = Q(ψ), where Q is a vector of existential second-order quantifiers and ψ
a formula of ML. We let V ψ and V ψ denote the sets of unary and binary relation
1	2
symbols, respectively, that occur in ψ. We define V ψ = V ψ ∪ V ψ. We let Qψ and
1	2	1
Qψ denote the sets of unary and binary relation symbols, respectively, that occur
in Q. We define Qψ = Qψ ∪ Qψ. We let SUBψ denote the set of subformulae of ψ.
1	2
We then fix a fresh (i.e., not occuring in ϕ) symbol Pα for each α ∈ SUBψ. Before
fixing the translated formula ϕ∗(x), we define a number of auxiliary formulae. We begin by defining the following formulae for all P, чα, (β ∧ γ), ⟨R⟩ρ, ⟨S⟩σ ∈ SUBψ,

where P ∈ V ψ, R ∈ V ψ \ Qψ and S ∈ Qψ:
1	2	2	2









where

ψP := 6x PP (x) ↔ P (x) ,
ψ¬α := 6x P¬α(x) ↔ чPα(x) ,
ψ(β∧γ) := 6x P(β∧γ)(x) ↔ (Pβ(x) ∧ Pγ(x)) , ψ⟨R⟩ρ := 6x P⟨R⟩ρ(x) ↔ Ey(R(x, y) ∧ Pρ(y)) ,
ψ⟨S⟩σ := 6x P⟨S⟩σ (x) ↔ Ey(AccessS (x, y) ∧ Pσ(y)) ,


AccessS (x, y) :=	 
(S⟩χ ∈ SUBfi

 Pχ(y) → P⟨S⟩χ(x) .



Finally, we define

δψ :=	 
α ∈ SUBfi


ψα,	and	ϕ∗(x) := Q∗(δψ ∧ Pψ(x)),


where Q∗ is a vector of existential quantifiers quantifying all the predicate symbols
P ∈ Qψ and also all the symbols Pα, where α ∈ SUBψ.
We then establish that (M, w) H ϕ implies M, w |= ϕ∗(x). We therefore assume that (M, w) H ϕ, whence there exists some expansion M2 of M by interpretations of the binary and unary symbols in Qψ such that (M2, w) H ψ. We then define an expansion M1 of M by interpretations of the unary predicate symbols occurring in Q∗. We let PM1 = PM2 for all P ∈ Qψ. For all Pα, where α ∈ SUBψ, we define
PM1 = ||α||M2 .
Lemma 3.1 Let ⟨S⟩σ ∈ SUBψ, where S ∈ Qψ. Let v ∈ Dom(M ). We have
(M2, v) H ⟨S⟩σ iff M1, v |= Ey(AccessS(x, y) ∧ Pσ(y)).
Proof. Assume that (M2, v) H ⟨S⟩σ. Therefore (v, u) ∈ SM2 for some u ∈ ||σ||M2 =
PM1 . In order to establish that M1, v |= Ey(AccessS(x, y) ∧ Pσ(y)), it therefore
σ	x
suffices to show that for all ⟨S⟩χ ∈ SUBψ, if u ∈ PM1 , then v ∈ PM1 . Therefore
χ	⟨S⟩χ
assume that u ∈ PM1 for some ⟨S⟩χ ∈ SUBψ. As ||χ||M2 = PM1 , we conclude that
χ	χ
u ∈ ||χ||M2 . As (v, u) ∈ SM2 , we have (M2, v) H ⟨S⟩χ. As ||⟨S⟩χ||M2 = PM1 , we

have v ∈ PM1 , as desired.
Assume then that M1, v

|=  Ey(AccessS(x, y) ∧ Pσ(y)).	Thus M1, v u  |=

AccessS(x, y) for some u ∈ PM1  = ||σ||M2 .	By the definition of the formula
AccessS(x, y), we see immediately that v ∈ PM1 .  As ||⟨S⟩σ||M2 = PM1 , we
⟨S⟩σ	⟨S⟩σ
conclude that v ∈ ||⟨S⟩σ||M2 . Thus (M2, v) H ⟨S⟩σ, as desired.	 
Lemma 3.2 (M, w) H ϕ implies M, w |= ϕ∗(x).

Proof. We prove the claim by establishing that M1, w |= δψ ∧Pψ(x). As (M2, w) H
ψ and ||ψ||M2 = PM1 , we have M1, w |= Pψ(x). Hence we only need to establish
ψ	x
that M1 |= δψ.  The non-trivial part of this is showing that M1 |= ψ⟨S⟩σ for an
arbitrary ⟨S⟩σ ∈ SUBψ, where S ∈ Qψ. This follows directly from Lemma 3.1, as

M1
⟨S⟩σ
= ||⟨S⟩σ||M2 .	 

We then show that M, w |= ϕ∗(x) implies (M, w) H ϕ. Therefore we assume
that M, w |= ϕ∗(x), whence there exists an expansion M' of M by interpretations
x	1
of the unary predicate symbols occurring in Q∗ such that M1, w |= δψ ∧ Pψ(x).
We then define an expansion M' of M by interpretations of the binary and unary
symbols occurring in Q. For all P ∈ Qψ, we let PM' = PM' . For all S ∈ Qψ, we

let (v, u) ∈ SM'
1
if and only if M' , v u |= Access
2	1	2
(x, y).

1 x y	S
Lemma 3.3 Let α ∈ SUBψ and v ∈ Dom(M ). We have (M' , v) H α if and only
if M' , v |= Pα(x).
1 x
Proof. We prove the claim by induction on the structure of α. As M' |= δψ, the
claim holds trivially for all atomic formulae P ∈ V ψ. Also, the cases where α is of type чβ, (β ∧ γ) or ⟨R⟩β, where R ∈ V ψ \ Qψ, are straightforward to deal with, as
2	2
M' |= δψ.
We assume that (M' , v) H ⟨S⟩σ, where S ∈ Qψ and ⟨S⟩σ ∈ SUBψ.  Thus
2	2
(	M'	M'	v u
v, u) ∈ S  2 for some u ∈ ||σ|| 2 . Hence M1, x y |= AccessS (x, y) by our definition
of SM' . By the induction hypothesis, we have PM' = ||σ||M' . Therefore u ∈ PM' ,
2	σ	2	σ 1
whence M' , v |= Ey(Access (x, y) ∧ Pσ(y)). Therefore, as M' |= ψ⟨S⟩σ , we conclude
1 x	S	1

'
1
⟨S⟩σ
For the converse, assume that M' , v

|= P⟨S⟩σ (x). As M' |= ψ⟨S⟩σ , we conclude

1 x	1
'
that M' , v |= Ey(Access (x, y) ∧ P (y)).  Therefore there exists some u ∈ PM
1 x	S	σ	σ
such that M' , v u |= Access (x, y). We now have (v, u) ∈ SM' by our definition of

x y
M'	M'
2
S
M'	M'

S  2 . As u ∈ Pσ 1 and as ||σ|| 2 = Pσ 1 by the induction hypothesis, we therefore
conclude that (M' , v) H ⟨S⟩σ, as desired.	 
By Lemma 3.3 we immediately see that M, w |= ϕ∗(x) implies (M, w) H ϕ.
This, combined with Lemma 3.2, justifies the following conclusion:
Theorem 3.4 Each formula of Σ1(ML) is expressible in EMSO.
It is easy to see that ϕ∗(x) is expressible in EMSO (MLE ): Let S ∈ Qψ and let A be the subset of SUBψ of formulae of type ⟨S⟩α. Formula Ey(AccessS (x, y) ∧Pσ(y)) is equivalent to the following formula of MLE :

 

B ⊆ A
 	 

(S⟩χ ∈ B

P⟨S⟩χ  ∧ ⟨E⟩ Pσ ∧	 
(S⟩χ ∈ B

Pχ ∧	 
(S⟩χ ∈ A\B

чPχ 

Thus we see that each formula ψα, where α ∈ SUBψ, can be expressed in MLE . We may therefore draw the following conclusion:

Theorem 3.5 Each formula of Σ1(ML) is expressible in EMSO (MLE ).
Σ1(BML=) ≤ EMSO
In this section we prove that each formula of Σ1(BML=) can be translated to an
equivalent formula of EMSO .
A translation from Σ1(BML=) into EMSO
In this subsection we define a translation of Σ1(BML=) formulae to equivalent for- mulae of EMSO . For this aim, we fix a Σ1(BML=) formula ϕ and show how it is translated. Let ϕ = Q(ψ), where Q is vector of existential second-order quan- tifiers and ψ a formula of BML=. For technical reasons, we assume w.l.o.g. that Md(ψ) ≥ 2. We let V ψ and V ψ denote the sets of unary and binary relation sym-
1	2
bols, respectively, that occur in ψ. We define V ψ = V ψ ∪ V ψ. We let Qψ and Qψ
1	2	1	2
denote the sets of unary and binary relation symbols, respectively, that occur in Q.
We define Qψ = Qψ ∪ Qψ. We let ATP ψ denote the set of access types over V ψ.

1	2
Let n ∈ N. We let TPn
denote the set of types of modal depth n over V ψ, and

define TPψ =  i≤Md(ψ) TPi .
We then define fresh (i.e., not occuring in ϕ) unary predicate symbols. We fix a unique symbol Pτ for each τ ∈ TPψ. We also fix a symbol P(α, M, β) for all
α ∈ TPMd(ψ), M∈ ATP ψ, β ∈ TPMd(ψ)−1.
ψ	ψ
The translation ϕ∗(x) of ϕ will be the formula

 EP 


P ∈ Qψ

 EPτ 


τ ∈ TPψ

 EP(α, M, β) 



α ∈ TPMd(fi) ,
n ∈ ATP fi,
β ∈ TPMd(fi)−1
  ψ∗(x)  ,

where ψ∗(x) is a first-order formula in one free variable, x. We let Q∗ denote the above vector of monadic existential second-order quantifiers.
The main idea in the translation is that we can use the symbols Pτ in order to encode information about the extensions of types τ over models of vocabulary V ψ.
The symbols P(α, M, β), in turn, will help us fix formulae that encode information about the extensions of access types M ∈ ATP ψ.  Before fixing the translation
ϕ∗(x) of ϕ, we define a number of auxiliary formulae. The first formula we define ensures that for all n ∈ {0, ..., Md(ψ)}, the extensions of the predicate symbols Pτ , where τ ∈ TPn , always cover all of the domain of a model and never overlap. We

define



ψuniq := 6x	 
0 ≤ i ≤ Md(ψ)

 	 

τ ∈ TPi



 Pτ (x) ∧	 
σ ∈ TPi , σ /= τ



чPσ(x)   .

The next formula asserts that each predicate symbol Pβ, where β ∈ TPMd(ψ)−1,

must be interpreted such that for all symbols Pτ , where Md(τ ) < Md(β), the extension of Pβ is either wholly included in the extension of Pτ , or does not overlap with it. We let



ψpack := 6x6y	 
β ∈ TPMd(fi)−1
 (Pβ(x) ∧ Pβ(y)) →

	(Pτ (x) ↔ Pτ (y)) .
τ ∈ TP<Md(fi)−1

We then define formulae that encode information about access types connecting points in models of vocabulary V ψ:

AccessM(x, y) :=	 
α ∈ TPMd(fi) , β ∈ TPMd(fi)−1
 Pα(x) ∧ Pβ(y) ∧ P(α, M, β)(y) .

Next we define formulae for all τ ∈ TPn , 0 ≤ n ≤ Md(ψ) that recursively force the
interpretations of Pτ to match the extensions of τ over models of vocabulary V ψ. First, let τ ∈ TP 0 . We define


χτ (x) :=	 
P ∈ V fi, τ H P

P (x)	∧	 
Q ∈ V fi, τ /H Q

чQ(x).

Now let τ ∈ TPn+1, where 0 ≤ n ≤ Md(ψ) − 1. We define


χ+(x) :=	 
n ∈ ATP (ψ), σ ∈ TPn ,
τ H (n⟩σ

Ey(AccessM(x, y) ∧ Pσ(y)),




χ−(x) :=	 

чEy(AccessM(x, y) ∧ Pσ(y)),




and
n ∈ ATP fi, σ ∈ TPn ,
τ H ¬(n⟩σ





χτ (x) := Pτ' (x) ∧ χ+(x) ∧ χ−(x),

τ	τ
where τ' is the unique type in TPn such that τ H τ'.
Let A ⊆ ATP ψ, A /= ∅.  Let α ∈ TPMd(ψ) and β ∈ TPMd(ψ)−1.  The next
formula encodes information about the sets of access types connecting points in
extensions of α to points in extensions of β in models of vocabulary V ψ. We define





ψ(α, A, β)(x) := Pα(x) ∧	 
n ∈ A

Ey(AccessM(x, y) ∧ Pβ(y)).


The next two formulae ensure that information about the access types realized in models of vocabulary V ψ is consistent with the interpretation of the access types R ∈ ATP V ψ\Qψ , i.e., the access types describing non-quantified binary relations. We define a linear ordering on ATP ψ. Let A(k) denote the kth member of a set
A ⊆ ATP ψ with respect to this ordering, and let χA(k)(x, yk) denote a first-order
formula stating that x and yk are connected according to the unique access type in
ATP V ψ\Qψ consistent with the access type A(k) ∈ A. We define



ψcons := 6x	 
A ⊆ ATP fi, A /= $, α ∈ TPMd(fi) ,
β ∈ TPMd(fi)−1

	ψ(α, A, β)(x) →


Ey1, ..., y|A|	 
i, j ∈ {1 ,..., |A|}, i /= j
yi /= yj ∧

 

k ∈ {1 ,..., |A|}
(χA(k)(x, yk) ∧ Pβ(yk))   .


For each R ∈ ATP V ψ\Qψ , we let c(R) denote the set A ⊆ ATP ψ of access types that are consistent with R. We define



'
cons

:= 6x	 
Y ∈ ATP V fi\Qfi , β ∈ TPMd(fi)−1
 Ey(ψR(x, y) ∧ Pβ(y)) →


	Ey(AccessM(x, y) ∧ Pβ(y))   ,
n ∈ c(Y)


where ψR(x, y) denotes a first-order formula stating that x and y are connected according to the access type R.
Finally, we define



δψ := ψuniq ∧ ψpack ∧ ψcons ∧ ψ'

∧	 
τ ∈ TPfi

6x Pτ (x) ↔ χτ (x) 

and


ϕ∗(x) := Q∗	δψ	∧	 
α ∈ TPMd(fi) , α H ψ


Pα(x)	 .

We then fix an arbitrary pointed model (M, w) of vocabulary V ψ \ Qψ. In the next subsection we establish that (M, w) H ϕ if and only if M, w |= ϕ∗(x).


Σ1(BML=) ≤ EMSO
We first show that (M, w) H ϕ implies M, w


|= ϕ∗(x).  Thus we assume that

(M, w) H ϕ. Therefore there exists some expansion M2 of M by interpretations of the binary and unary symbols in Qψ such that (M2, w) H ψ.
We then define an expansion M1 of M by interpreting the unary variable symbols

in Qψ, and also the symbols Pτ and P
(α,M,β)
for all τ ∈ TPψ, α ∈ TPMd(ψ),

M ∈ ATP ψ, β ∈ TPMd(ψ)−1.  For all P ∈ Qψ, we define PM1 = PM2 .  For
ψ	1
all τ ∈ TPψ, we let PM1 = ||τ||M2 . We choose exactly one point from each set
||α||M2 ⊆ Dom(M ), where α ∈ TPMd(ψ) and ||α||M2 /= ∅. We call such a point the selector of ||α||M2 and denote it by vα. We use selectors in order to fix extensions of the predicate symbols P(α, M, β).  For each α ∈ TPMd(ψ), M ∈ ATP ψ, and
β ∈ TPMd(ψ)−1, where ||α||M2 /= ∅, we define

M1
(α, M, β)
= {u ∈ Dom(M ) | (vα, u) ∈ MM2 , u ∈ PM1 }.

If ||α||M2 = ∅, we define PM1	= ∅.
Next we prove a number of auxiliary lemmata, and then establish that M1, w |=
ψ∗(x). The first two lemmata follow directly from the above definitions.
Lemma 4.1 Let α ∈ TPMd(ψ) and M∈ ATP ψ. Let u ∈ Dom(M ). Then (vα, u) ∈ MM2 if and only if M1, vα u |= AccessM(x, y).
Lemma 4.2 Let α ∈ TPMd(ψ) and M ∈ ATP ψ. Let v ∈ PM1 . Then, for all
u ∈ Dom(M ), M1, v u |= AccessM(x, y) if and only if M1, vα u |= AccessM(x, y).
x y	x y
We then show that the formula AccessM(x, y) captures all the relevant infor- mation about the action of the diamond ⟨M⟩ on M2:
Lemma 4.3 Let τ ∈ TP<Md(ψ) and M ∈ ATP ψ. Let v ∈ Dom(M ). Then
(M2, v) H ⟨M⟩τ if and only if M1, v |= Ey(AccessM(x, y) ∧ Pτ (y)).
Proof. Assume that (M2, v) H ⟨M⟩τ . Let α be the type in TPMd(ψ) such that
v ∈ ||α||M2 .  As (M2, v) H ⟨M⟩τ , also (M2, vα) H ⟨M⟩τ .  Therefore there ex-
ists some u ∈ ||τ||M2 such that (vα, u) ∈ MM2 .  We conclude that M1, vα u  |=
AccessM(x, y) by Lemma 4.1, and therefore M1, v u |= AccessM(x, y) by Lemma

As u ∈ ||τ||M2 = PM1 , we have M1, v u |= AccessM(x, y) ∧ Pτ (y), whence
τ	x y
M1, v |= Ey(AccessM(x, y) ∧ Pτ (y)), as desired.
Assume M1, v |= Ey(AccessM(x, y) ∧ Pτ (y)). We conclude, using Lemma 4.2,
that M1, vα u |= AccessM(x, y)∧Pτ (y) for some u ∈ PM1 . Therefore (vα, u) ∈ MM2
x y	τ
by Lemma 4.1. As PM1 = ||τ||M2 , we conclude that (M2, vα) H ⟨M⟩τ , and therefore (M2, v) H ⟨M⟩τ .	 
Interpretations of the formulae χτ (x) and the predicate symbols Pτ coincide:
Lemma 4.4 Let v ∈ Dom(M ) and τ ∈ TPψ. Then M1, v |= Pτ (x) iff M1, v |=
χτ (x).
Proof. As ||P ||M2 = PM1 for all P ∈ V ψ, the claim follows directly for all τ ∈ TP 0 .
1	ψ
Therefore we may assume that τ ∈ TP≥1. Throughout the proof, we let τ' denote
the unique type in TPMd(τ)−1 such that τ H τ'.
Assume that M1, v |= Pτ (x). As PM1 = ||τ||M2 , we have (M2, v) H τ . As τ H τ',

x
we have (M , v) H τ'. Since PM1
τ
= ||τ '||M2 , we conclude that M , v
|= P ' (x).

τ'	1 x	τ
We still need to establish that M1, v |= χ+(x) ∧ χ−(x). Therefore assume that
x	τ	τ
τ H ⟨M⟩σ, where M ∈ ATP ψ and σ ∈ TPMd(τ)−1.  As (M2, v) H τ , we have
(M2, v) H ⟨M⟩σ.  Therefore M1, v |= Ey(AccessM(x, y) ∧ Pσ(y)) by Lemma 4.3.
Similarly, if τ H ч⟨M⟩σ, we conclude that M1, v |= чEy(AccessM(x, y) ∧ Pσ(y)) by
Lemma 4.3. Thus M1, v |= χ+(x) ∧ χ−(x), as desired.
x	τ	τ

Assume then that M1, v |= χτ (x). In order to show that M1, v
|= Pτ (x), we

will establish that (M2, v) H τ . This suffices, as PM1 = ||τ||M2 . We immediately

see that (M , v) H τ', as M , v |= P ' (x) and P
= ||τ '||M2 . Assume then that

2	1 x	τ	τ'
τ H ⟨M⟩σ, where M ∈ ATP ψ and σ ∈ TPMd(τ)−1. As M1, v |= χ+(x), we have
ψ	x	τ
M1, v |= Ey(AccessM(x, y) ∧ Pσ(y)), and therefore (M2, v) H ⟨M⟩σ by Lemma
Similarly, if τ H ч⟨M⟩σ, then, as M1, v |= χ−(x), we conclude that M1, v |=
x	τ	x
чEy(AccessM(x, y) ∧ Pσ(y)), and therefore (M2, v) H ч⟨M⟩σ by Lemma 4.3. Thus (M2, v) H τ , and hence M1, v |= Pτ (x), as desired.	 
We then conclude the first direction of the proof:
Lemma 4.5 If (M, w) H ϕ, then M, w |= ϕ∗(x).
Proof. We establish the claim by showing that M1, w |= ψ∗(x).
Let ψ' denote a disjunction of all types α ∈ TPMd(ψ) such that α H ψ.  As
ψ and ψ' are equivalent, we have (M2, w) H ψ'. Therefore (M2, w) H α for some

α ∈ TPMd(ψ)
occurring in the disjunction.  Hence, as ||α||M2 = PM1 , we have

M1, w |= Pα(x).
We then show that M1 |= ψcons.  Let v ∈ Dom(M ) and assume M1, v  |=
ψ	(x) for some α ∈ TPMd(ψ), A ⊆ ATP ψ, β ∈ TPMd(ψ)−1. Recall that we
(α, A, β)	ψ	ψ
may write A = {A(1), ..., A(|A|)}, where A(k) refers to the kth member of the set A
w.r.t. the ordering of ATP ψ we fixed. As M1, v |= ψ(α, A, β)(x), we see by Lemma
that (M2, v) H ⟨A(k)⟩β for all k ∈ {1, ..., |A|}. Thus there must exist distinct

points u1, ..., u|A| ∈ ||β||M2 = PM1 such that (v, uk) ∈ A(k)M2 for each k. Let Rk be the type in ATP V ψ\Qψ consistent with A(k). Recall that χA(k)(x, yk) is a first-order
formula stating that x is connected to yk by Rk. We have (v, uk) ∈ RM2 = RM1
k	k
for each k, and thus M1, v uk |= χA(k)(x, yk) ∧ Pβ(yk) for each k.
We then show that M1 |= ψ'	.  Let v ∈ Dom(M ) and assume M1, v u |=

ψR(x, y) for some u ∈ PM1
with β ∈ TPMd(ψ)−1 and some R ∈ ATP
ψ\Q
ψ . Let

M be the access type in ATP ψ such that (v, u) ∈ MM2 . Thus (M2, v) H ⟨M⟩β, whence M1, v |= Ey(AccessM(x, y) ∧Pβ(y)) by Lemma 4.3. Clearly M is consistent
with R. Therefore M1 |= ψ'	.
We have M1 |= ψuniq ∧ ψpack directly by properties of types. Therefore, in order to conclude the proof, we only need to establish that for all τ ∈ TPMd(ψ) and all v ∈ Dom(M ), M1, v |= Pτ (x) ↔ χτ (x). This follows directly from Lemma 4.4. 
We then show that M, w |= ϕ∗(x) implies (M, w) H ϕ. Thus we assume that
M, w |= ϕ∗(x). Therefore there exists an expansion M' of M by interpretations of
x	1
the unary symbols Pτ and P(α, M, β) for all τ ∈ TPψ, α ∈ TPMd(ψ), M ∈ ATP ψ,
β ∈ TPMd(ψ)−1, and also the symbols P ∈ Qψ, such that M' , w |= ψ∗(x).
ψ	1	1 x
We then define an expansion of M by interpreting all the relation symbols, unary
and binary, in Qψ. We call the resulting expansion M' . For all P ∈ Qψ, we define

M'	M'	M'
2	1
Md(ψ)−1

P  2 = P
1 . Let v ∈ Pα 1 and β ∈ TPψ	. Let A ⊆ ATP ψ be the set of access

'
types M such that M' , v u |= Access	(x, y) for some u ∈ PM . As M'
satisfies

x y	M	β	1
'
the formula ψ	, we see that there exists a bijection f from A to a set B ⊆ PM

cons
such that for all M ∈ A, we have (v, f (M)) ∈ RM' , where R
β
is the access type

M	M
in ATP	consistent with M. Let S ∈ Qψ. We define (v, f (M)) ∈ SM' if

V ψ\Qψ
2	2
M'	M'

S ≤ M. We then consider the points in Pβ 1 \ B. Thus let u ∈ Pβ 1 \ B. Let T be

the access type in ATP
such that (v, u) ∈T M' . As M' satisfies ψ'
, we see

V ψ\Qψ
1	1	cons

that there exists some M∈ ATP
consistent with T and some u' ∈ PM' such that

M' , v u'
|= Access
ψ
(x, y). We define, for all S ∈ Qψ, (v, u) ∈ SM'
β
if S ≤ M. We

1 x y	M	2	2
go through each α ∈ TPMd(ψ) and β ∈ TPMd(ψ)−1, and construct the extensions
ψ	ψ
SM'	ψ	'
2 of the symbols S ∈ Q2 in the described way. As M1 satisfies ψuniq, each pair in Dom(M ) × Dom(M ) becomes associated with exactly one access type in ATP ψ.
Therefore M' is well defined.
We first prove a number of auxiliary lemmata, and then establish that (M' , w) H
ψ. The following lemma is a direct consequence of the way we define the extensions
SM'	ψ
2 of the relation symbols S ∈ Q2 .
Lemma 4.6 Let β ∈ TPMd(ψ)−1 and M ∈ ATP ψ.  Let v ∈ Dom(M ).  Then
'	'
(v, u) ∈ MM' for some u ∈ PM iff M' , v u' |= Access	(x, y) for some u' ∈ PM .
1	1
x y	M	β
We then show that the diamond ⟨M⟩ captures relevant information about the relation that the formula AccessM(x, y) defines over M' :

'
Lemma 4.7 Let τ ∈ TP<Md(ψ) and M∈ ATP . Assume that ||τ||M' = PM
and

1
ψ	ψ	τ
let v ∈ Dom(M ). Then (M' , v) H ⟨M⟩τ iff M' , v |= Ey(AccessM(x, y) ∧ Pτ (y)).
1 x
'
Proof. Assume (M' , v) H ⟨M⟩τ . Thus (v, u) ∈ MM' for some u ∈ ||τ||M' = PM .
2	2	2	τ 1

As M'
'
|= ψ	, there is a unique β ∈ TPMd(ψ)−1 such that u ∈ PM . Therefore

1
M' , v u'
uniq
|= Access
ψ
(x, y) for some u' ∈ PM'
β
by Lemma 4.6. Since M'

|= ψ

1 x y	M	β
1	pack

and as u ∈ PM' ∩ PM' and u' ∈ PM' , we have u' ∈ PM' .  Therefore M' , v |=

1	1	1
τ	β	β
1
τ	1 x

Ey(AccessM(x, y) ∧ Pτ (y)).
For the converse, assume M' , v |= Ey(AccessM(x, y) ∧ Pτ (y)). Thus M' , v u |=
1 x	1 x y
M'	M'	'
AccessM(x, y) for some u ∈ Pτ 1 = ||τ|| 2 .  As M1 |= ψuniq, there is a unique

Md(ψ)−1	M'
'	M'

β ∈ TPψ	such that u ∈ Pβ 1 . By Lemma 4.6, we therefore have (v, u ) ∈M 2

for some u' ∈ PM' . Since M' |= ψ
and as u ∈ PM' ∩ PM' and u' ∈ PM' , we

1
β	1	pack
1	1	1
τ	β	β

have u' ∈ PM' . As PM' = ||τ||M' , we conclude that (M' , v) |= ⟨M⟩τ .	 
τ 1	τ 1	2	2
Next we show that extensions of the types τ ∈ TPψ and interpretations of the predicate symbols Pτ coincide, and then conclude the section.
Lemma 4.8 Let τ ∈ TPψ and v ∈ Dom(M ). Then (M' , v) H τ iff M' , v |= Pτ (x).
2	1 x
Proof. We prove the claim by induction on the modal depth of τ . If τ ∈ TP 0 ,
then, as M' |= 6x(Pτ (x) ↔ χτ (x)), the claim follows immediately.
Assume that (M' , v) H τ for some τ ∈ TPn+1 with n ≥ 0. We will show that
2	ψ
M' , v |= Pτ' (x) ∧ χ+(x) ∧ χ−(x), where τ' is the type of modal depth n such that
1 x	τ	τ
τ H τ'. This directly implies that M' , v |= Pτ (x), since M' |= 6x(Pτ (x) ↔ χτ (x)).
x	1
As τ H τ', we have (M' , v) H τ'. Therefore M1, v |= Pτ' (x) by the induction
x
hypothesis. In order to establish that M' , v |= χ+(x) ∧ χ−(x), let τ H ⟨M⟩σ, where

1 x	τ	τ
n	'
M'	M'

σ ∈ TPψ and M ∈ ATP ψ. Therefore (M2, v) H ⟨M⟩σ. Since ||σ|| 2 = Pσ 1 by
the induction hypothesis, we conclude that M' , v |= Ey(AccessM(x, y) ∧ Pσ(y)) by
1 x
Lemma 4.7. Similarly, if τ H ч⟨M⟩σ, then M' , v |= чEy(AccessM(x, y) ∧ Pσ(y))
1 x
by Lemma 4.7 and the induction hypothesis. Thus M' , v |= χ+(x) ∧ χ+(x).
x	τ	τ
Assume then that M' , v |= Pτ (x), where τ ∈ TPn+1. Now, since M' |= δψ, we
1 x	ψ	1
conclude that M' , v |= χτ (x). Therefore M' , v |= Pτ' (x), where τ' is the type of
1 x	1 x
modal depth n such that τ H τ'. Thus (M2, v) H τ' by the induction hypothesis.
Assume then that τ H ⟨M⟩σ, where σ ∈ TPn and M∈ ATP ψ. As M' , v |= χτ (x),
ψ	1 x
we have M' , v |= χ+(x), and therefore M' , v |= Ey(AccessM(x, y) ∧ Pσ(y)). Hence,
1 x	τ	1 x

as ||σ||M'
'
σ 1 by the induction hypothesis, we conclude that (M' , v) H ⟨M⟩σ

by Lemma 4.7. Similarly, if τ H ч⟨M⟩σ, we conclude that (M' , v) H ч⟨M⟩σ using Lemma 4.7 and the induction hypothesis. We have therefore established that (M' , v) H τ , as required.	 
Lemma 4.9 If M, w |= ϕ∗(x), then (M, w) H ϕ.
Proof. We prove the claim by showing that (M' , w) H ψ.  As M' , w |= ψ∗(x),
1 x
we have M' , w |= Pα(x) for some type α ∈ TPMd(ψ) such that α H ψ. Therefore
1 x

(M' , w) H α by Lemma 4.8. As α H ψ, we have (M' , w) H ψ, as desired.	 
2	2
The following theorem is a direct consequence of Lemmata 4.5 and 4.9:
Theorem 4.10 Each formula of Σ1(BML=) translates to an equivalent formula
of EMSO.
Theorem 4.10 implies a range of decidability results:
Theorem 4.11 Let V and U ⊆ V be sets of indices. Let Ð be a class of Kripke frames (W, {Rj}j∈U ). Consider the class C = { (W, {Ri}i∈V ) | (W, {Rj}j∈U ) ∈Ð } of Kripke frames. Now, if the 6MSO-theory of Ð is decidable, then the satisﬁability problem for BML= w.r.t. C is decidable.
Proof. Given a formula ϕ of BML=, we existentially quantify all the relation sym- bols occurring ϕ, except for those in {Rj}j∈U . We end up with a Σ1(BML=) formula, which we then effectively translate to an equivalent EMSO formula ϕ∗(x), applying our result. We then modify this formula to an EMSO sentence χ equiva- lent to Ex(ϕ∗(x)). Using the decision procedure for the 6MSO -theory of Ð, we then check whether the sentence χ is satisfiable w.r.t. Ð. If yes, then ϕ is satisfiable
w.r.t. C, and if not, then ϕ is not satisfiable w.r.t. C.	 

5  Conclusions
We have investigated the expressive power of modal logics with prenex quantification of binary relations. We have shown that Σ1(BML=) translates into EMSO , and also that Σ1(ML) translates into EMSO (MLE ). We have briefly discussed how these results can be used in order to prove decidability results for (extensions of) multimodal logic.
It remains to be seen whether our investigations provide a stepping stone towards settling the question about the existence of any class of directed graphs definable in Σ1(FO2) but not definable in EMSO .

References
Blackburn P., M. de Rijke and Y. Venema, “Modal Logic,” Cambridge University Press, 2001.
Costello T. and A. Patterson, Quantifiers and Operations on Modalities and Contexts, in Proc. of KR’98, 1998, pages 270-281.
Fischer M. and R. Ladner, Propositional Dynamic Logic of Regular Programs, Journal of Computer and System Sciences 18 (1979), pages 194-211.
Gargov G., S. Passy and T. Tinchev, Modal environment for boolean speculations, in D. Skordev, editor, Mathematical Logic and its Applications, 1987, pages 253-263.
Goranko V. and S. Passy, Using the Universal Modality: Gains and Questions, Journal of Logic and Computation 2 (1992), pages 5-30.
Gr¨adel E. and E. Rosen, Two-Variable Descriptions of Regularity, in Proc. of LICS 1999, pages 14-23.
Harel D., D. Kozen and J. Tiyrun, “Dynamic Logic,” MIT Press, 2000.


Hustadt U. and R. A. Schmidt, Issues of Decidability for Description Logics in the Framework of Resolution, in Proc. of FTP 1998, pages 191-205.
Immerman N., “Descriptive Complexity,” Graduate Texts in Computer Science, Springer-Verlag, 1999.
Lehtinen S., “Generalizing the Goldblatt-Thomason Theorem and Modal Definability,“ Ph.D. thesis, Acta Universitatis Tamperensis, University of Tampere, 2008.
Leivant D., Propositional Dynamic Logic with Program Quantifiers, Electronic Notes in Theoretical Computer Science 218 (2008), pages 231-240.
Lutz C. and U. Sattler, The Complexity of Reasoning with Boolean Modal Logics, In Proc. of AiML 2000, pages 329-348.
Lutz C., U. Sattler and F. Wolter, Modal Logic and the Two-Variable Fragment, Proc. of CSL 2001, pages 247-261.
Massacci F., Decision Procedures for Expressive Description Logics with Intersection, Composition, Converse of Roles and Role Identity, in Proc. of IJCAI 2001, pages 193-198.
Pesonen R., “Propositional State Transition Logics,“ Thesis in Minor Subject, University of Tampere, 2008.
Rabin M. O., Decidability of second-order theories and automata on infinite trees, Transactions of the American Mathematical Society 141 (1969), pages 1-35.
de Rijke M., The Modal Logic of Inequality, Journal of Symbolic Logic 57 (1992), pages 566-584.
Thomas W., Constructing Infinite Graphs with a Decidable MSO-Theory, in Proc. of MFCS 2003, pages 113-124.
