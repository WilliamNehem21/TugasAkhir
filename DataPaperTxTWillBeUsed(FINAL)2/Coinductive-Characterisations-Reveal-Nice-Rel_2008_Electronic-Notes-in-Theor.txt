	Electronic Notes in Theoretical Computer Science 212 (2008) 149–162	
www.elsevier.com/locate/entcs

Coinductive Characterisations Reveal Nice Relations Between Preorders and Equivalences
David de Frutos Escrig1 ,3	Carlos Gregorio Rodr´ıguez 2 ,4
Miguel Palomino1 ,5
Departamento de Sistemas Informa´ticos y Computacio´n Universidad Complutense de Madrid

Abstract
There are two ways to define a semantics for process algebras: either directly by means of an equivalence relation or by means of a preorder whose kernel is the desired equivalence. We are interested in the relation- ship between these two presentations. Using our characterisation of the behaviour preorders by means of simulations up-to we were able to generate the canonical preorders corresponding to each behaviour equiv- alence. The axiomatizations of these preorders can be obtained by adding to the axioms of the equivalence that of the appropriate simulation. Aceto, Fokkink and Ing´olfsd´ottir have presented an algorithm that goes in the opposite direction, constructing an axiomatization of the induced equivalence from that of a given preorder. Following a different path we were able to get a correct proof and an enhanced algorithm. In this paper we present an shorter and simpler proof of this result, based on our coinductive characterisations of the behaviour preorders, and in particular in the existence of the canonical preorders. More important, we also present further generalisations of the result, since our coinductive characterisations are not only valid for the semantics coarser than the ready simulation.
By means of these new proofs and results we hope to contribute to a better knowledge of the semantics of processes and to better understand the tight relations between preorders and equivalences that define them.
Keywords: processes, semantic preorders, simulations up-to, linear time-branching time spectrum.


Introduction
Whenever a semantics of a formal language is defined, a corresponding equiva- lence relation that is simply defined as having the same semantics is induced. The converse is also true, so that we can define a semantics by means of an adequate

1 Partially supported by the MCyT project DESAFIOS TIN2006-15660-C02-02 and the project PROMESAS-CAM S-0505/TIC/0407.
2 Partially supported by the MCyT project WEST TIN2006-15578-C02.
3 Email: defrutos@sip.ucm.es
4 Email: cgr@sip.ucm.es
5 Email: miguelpt@sip.ucm.es

1571-0661 © 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2008.04.059

equivalence relation. In many simple cases there is a single, natural choice for the semantics of a language, but in the case of concurrent systems we actually have lots of possibilities. Most of the popular semantics for concurrent processes appear in [1], where Rob van Glabbeek presented his famous linear time-branching time spectrum. We are interested in the systematic study of all these process semantics and in common features and properties that would allow to develop general results which can be proved for all at the same time.
As can be observed in [1], and in general in all the extensive literature on the subject, in addition to using directly the equivalence that induces any of these semantics we can also consider a natural preorder whose kernel is the desired equiv- alence. For instance, if a semantics is characterised by means of observations two processes are equivalent when they have exactly the same, while we have p ± q
when process p has less or the same observations as q.
It is also well known that most of these process equivalences and preorders can be (finitely) axiomatized by a complete system of (possibly conditional) (in)equations, so that we can study the properties of these semantics using algebraic techniques. Once again, in [1] one can find the axiomatizations for all the semantics in the ltbt-spectrum that are coarser than ready simulation semantics [5]. However, the axiomatizations for both the preorders and the equivalences were obtained in an independent way and no connections between them were established.
Recently, in [2,3] we have proved that by means of our characterisation of the be- haviour preorders using simulations up-to we can generate the canonical preorders corresponding to each behaviour equivalence. These canonical preorders have some nice properties, in particular we can generate their complete axiomatizations by adding to the the axioms of the equivalence that of the appropriate simulation. Then, Aceto, Fokkink and Ingo´lfsdo´ttir [4] have presented an algorithm that goes in the other direction, constructing an axiomatization of the induced equivalence from that of a given preorder for the semantics in the spectrum coarser than ready simulation. Unfortunately their proof of the correctness of the algorithm was wrong, but following a different path we have been able to develop a correct one [2,6] us- ing purely algebraic arguments. Once we had established the completeness of the axiomatizations produced by the application of that algorithm we were also able to develop an enhanced version of the algorithm that generated smaller axiomatiza- tions. Still, our proof was a bit involved and only valid for semantics coarser than the ready simulation.
In this paper we present a direct proof of the correctness of these last axiom- atizations that is surprisingly short and simple. It requires the application of our coinductive characterisations of the behaviour preorders and is based on the exis- tence of the canonical preorders. Moreover, since our coinductive characterisations are quite general and valid not only for the semantics coarser than the ready simu- lation, we obtain further generalisations which in particular include some intricate semantics such as possible futures and the nested simulations.
Hence, we have not only generalised and proved in a simple way some very inter- esting results about the relationship between the preorders and equivalences defining

the semantics for concurrency, but have also shown the interest of having a uniform characterisation for process semantics, such as our coinductive characterisations, in order to prove general results on semantics.

Preliminaries
Since the main results in this paper are related to complete axiomatizations of finite processes we will only consider the basic process algebra BCCSP, that has repeatedly been used to algebraically represent that class of processes. However, let us also recall that most of our previous results on the characterisations of process semantics, in particular our coinductive characterisations of both the equivalences and the preorders defining these semantics, are valid for arbitrary finitary transition systems, as explained in [7,3].
Definition 2.1 Given a set of actions Act, the set BCCSP(Act) of processes is defined by the following BNF-grammar:
p ::= 0 | ap | p + q
where a ∈ Act; 0 represents the process that performs no action; for every action in Act, there is a prefix operator; and + is a choice operator.
Adding variables representing unknown or arbitrary processes we get as usual the corresponding class of open terms.
a	a	'	a	'

ap −→ p	 p −→ p	 p + q −a→ p'
 q −→ q	 p + q −a→ q'

Fig. 1. Operational Semantics for BCCSP Terms
The operational semantics for BCCSP terms is defined in Figure 1. As usual,
a	a
we write p −→ if there exists a process q such that p −→ q.
Many different semantics for these non-deterministic processes have been de- fined in the literature. The most important and popular semantics appear in Van Glabbeek’s spectrum [1]. One indirect way to capture any semantics is by means of the equivalence relation induced by it: given a formal semantics  ·), we say
that processes p and q are equivalent iff they have the same semantics, that is,
p ≡ q ⇔ p) = q). Also, these semantics can be defined by means of adequate observational scenarios, or by logical characterisations that introduce natural pre- orders whose kernels are the semantic equivalences.
Both equivalences and preorders have been axiomatized for most of these scenar- ios, as shown in [1], but in some cases, only (finite) conditional axiomatizations are possible, as discussed in [8]. In particular, bisimilarity can be axiomatized by means of the four simple axioms in Figure 2. These axioms state that the choice operator
is commutative, associative and idempotent, having the empty process as identity
element. These axioms also justify the use of the notation Σ	api for processes,
i
where the commutativity and associativity of the choice operator is used to group
together the summands whose initial action is a. We will also write p|a for the

(sub)process we get by adding all the a-summands of p; that is, if p = Σ Σ api ,
Σ	i	a	i	a

then p|a =
i apa.


(B1)	x + y  y + x
(B2) (x + y)+ z  x + (y + z) (B3)	x + x  x
(B4)	x + 0  x

Fig. 2. Axiomatization for the (Strong) Bisimulation Equivalence


The initial offer of a process is the set I (p)= {a | a ∈ Act and p −a→}. This is a simple, but quite important observation function that plays a central role in the definition of the most popular semantics in the linear time-branching time spectrum. We will also denote by I the relation expressing the fact that two processes have
the same initial offer: pIq ⇔ I (p)= I (q).
Along the paper there appear different order relations. We use ± to denote semantic preorders (behaviour preorders) and, for the sake of simplicity, we use the symbol ± to represent the preorder relation ±−1. With ≡ we denote the corre- sponding equivalence (that is, ± ∩ ±). To refer to a specific preorder in the linear time-branching time spectrum we shall append the initials of the intended semantics as subscripts to the symbol ± (±RS for ready simulation, ±F for failures and so on). A similar convention applies to the kernels of the preorders (≡RS, ≡F , .. .) and to the bisimulation equivalence ≡B. For the inequalities and equations that define the axiomatizations we use, respectively, the symbols ≤ and  . We write E ▶ t ≤ u or E ▶ t  u for the (in)equations that can be derived from the (in)equations in E using the standard rules of (in)equational logic, where the symmetry rule can be ap- plied in the equational derivations, but not in the inequational ones. We eventually use  and ≈ to denote any preorder and equivalence relation.
But besides the semantics in the spectrum, we are interested in a general study
covering any reasonable semantics coarser than bisimilarity. Since we will use pre- orders to characterise these semantics we introduce the following definitions that state the desired properties of those reasonable preorders.
Definition 2.2 A preorder relation ± over processes is a behaviour preorder if
it is weaker than bisimilarity, i.e. p ≡B q ⇒ p ± q, and
it is a precongruence with respect to the prefix and choice operators, i.e. if p ± q
then ap ± aq and p + r ± q + r.
Definition 2.3 A behaviour preorder ± is initials preserving when p ± q implies I (p) ⊆ I (q). It is action factorised (or just factorised ) when p ± q implies p|a ± q|a, for all a ∈ I (p).

Coinductive Characterisations of Preorders
In this section we recall some of our previous results on I-simulations up-to [9] that provide coinductive characterisations of preorders. These characterisations will be the foundation for obtaining our new results in Section 4.
Most of the important semantics in the spectrum are coarser than ready simu- lation [5], which can be axiomatized with the single axiom
(RS)	ax ≤ ax + ay .
In this section we concentrate on those semantics that can precisely be characterised with I-simulations up-to. Next, in Section 5 we will extend our results to the general case.
Definition 3.1 Given a behaviour preorder ±, we say that a binary relation S over processes is an I-simulation up-to ± if S ⊆ I (that is, pSq ⇒ pIq) and S is a simulation up-to ±. Or, equivalently, in a coinductive way, whenever we have pSq, we also have:

For every a, if p −a→ p' there exist q', q'
such that q ± q' −a→ q' and p' Sq' ;

a	a
pIq.
a	a	a

We say that process p is I-simulated up-to ± by process q, or that process q

I-simulates process p up-to ±, written p иI
±
q, if there exists an I-simulation up-to

±, S, such that pSq.
For the sake of simplicity, we sometimes just write иI , instead of иI , when the
∼	∼±
behaviour preorder is clear from the context.
Proposition 3.2 For every behaviour preorder ± verifying the axiom (RS) and

± ⊆ I, we have p иI
q if and only if p ± q.

It is interesting to observe that we can use the kernel of such a behaviour preorder to characterise it, as the following proposition states:
Proposition 3.3 For every behaviour preorder ± verifying the axiom (RS) and

± ⊆ I, we have that the relations ±, иI
and иI
are the same.

These results led us to investigate what characterisations we could get starting from arbitrary behaviour equivalences, that extend the notion of behaviour preorder to equivalence relations.
Definition 3.4 An equivalence relation ≡ over processes is a behaviour equivalence when it is weaker than bisimulation equivalence, i.e. p ≡B q ⇒ p ≡ q, and it is a congruence with respect to the preﬁx and choice operators, i.e. if p ≡ q then ap ≡ aq and p + r ≡ q + r.
Those behaviour equivalences that are coarser than the ready simulation equiv- alence satisfy the axiom that characterises this last relation,
(RS≡)   I (x)= I (y) ⇒ a(x + y)  a(x + y)+ ay

and can be characterised by mutual I-simulations up-to themselves. Due to the fact that I is a very simple relation we have also an equivalent non conditional version of this axiom, b(ax + ay + z)  b(ax + ay + z)+ b(ax + z).
Proposition 3.5 For every behaviour equivalence ≡ satisfying (RS≡) and ≡ ⊆ I,
we have p ≡ q ⇔ p иI q ∧ p NI q.
This characterisation tells us that behaviour equivalences can be defined by means of simulations up-to. Besides, and this is even more important, in this way a preorder is defined whose kernel is the original equivalence. Moreover, this preorder satisfies some interesting properties.
Proposition 3.6 For every behaviour equivalence ≡ satisfying (RS≡) and ≡ ⊆ I,

we have that иI
the kernel of иI
is a behaviour preorder that satisﬁes (RS), is included in I, and is ≡.

Combining propositions 3.6 and 3.3 above we conclude that such a preorder is unique, so that we can talk about the canonical preorder generated by ≡ with respect to ready simulation.
Theorem 3.7 For every behaviour equivalence ≡ satisfying (RS≡) and ≡ ⊆ I, the

preorder иI
is the only behaviour preorder that satisﬁes (RS) and is contained in

I, whose kernel is ≡.
This canonical preorder can be characterised in a simple way in terms of the corre- sponding equivalence and the relation I.
Corollary 3.8 For every behaviour equivalence ≡ satisfying (RS≡) and ≡ ⊆ I, the preorder deﬁned as p ± q ⇔ q ≡ q + p ∧ I(p)= I(q) is another characterisation of the canonical preorder generated by ≡.
Moreover, we can axiomatize the canonical preorders as follows.
Proposition 3.9 For every behaviour equivalence ≡ satisfying (RS≡) and ≡ ⊆ I, for which we have an axiomatization AE, we have that AP = AE ∪ {ax ≤ ax + ay} is an axiomatization of the relation иI .
Since all the behaviour preorders defining the semantics in the spectrum between failure semantics and ready simulation are contained in I, they are indeed the canonical preorders for the corresponding equivalences.
From Behaviour Preorders to Equivalences
In [4], Aceto, Fokkink, and Ingo´lfsdo´ttir presented an algorithm to generate a com- plete axiomatization of the semantics in the spectrum that are coarser than ready simulation from that of the behaviour preorders that define them.
Algorithm ([4])
Consider a preorder ± in the linear time-branching time spectrum that contains the ready simulation preorder. Let E be a sound and complete inequational axioma-

tization for BCCSP(Act) modulo ±. Without loss of generality it can be assumed that the axioms B1–B4 in Figure 2 are present in E together with the defining inequational axioms for ready simulation equivalence for each a ∈ Act:
ax ≤ ax + ay .
The axioms B1–B4 are included in A(E). Furthermore, for each inequational axiom
t ≤ u in E we add to A(E):
t + u  u; and
b(t + x)+ b(u + x)  b(u + x) (for all b ∈ Act, and some x that does not occur in
t + u).
Theorem 4.1 ([4]) Let ± be a preorder in the linear time-branching time spectrum with ±RS ⊆ ±. Let E be a sound and complete inequational axiomatization for BCCSP(Act) terms modulo ±. Then the equational axiomatization A(E) is sound and complete 6 for BCCSP(Act) modulo ≡.
The theorem above is indeed correct, but as we pointed out in [6] the proof in
[4] would need some reworking to polish some gaps. However, following a purely algebraic approach that can be applied to any semantics fulfilling some simple hy- potheses (in particular, to those in the spectrum considered by the theorem above), we were able to prove a more general theorem.
Theorem 4.2 ([6]) Let ± be an initials preserving behaviour preorder with ±RS ⊆
±. Let E be a sound and complete inequational axiomatization for the terms in BCCSP(Act) modulo ±. Then the equational axiomatization A(E) is sound and complete for BCCSP(Act) modulo ≡.
Our proof of Theorem 4.2 in [6] is indeed much simpler and general than the failed proof in [4]. Moreover, we provided an enhanced version of the algorithm that generates even smaller axiomatizations than those of the original algorithm.
The simpliﬁed algorithm
Given an inequational system of axioms E defining a preorder ± on BCCSP(A), we define the axiomatization ARS (E) as follows:
Axioms B1–B4 are in ARS (E).
For each axiom t ≤ u ∈ E we have u  u + t ∈ ARS (E).
The ready similarity axiom b(ax + ay + z)  b(ax + ay + z)+ b(ax + z) is in
ARS (E).
We also use algebraic arguments to prove the following theorem
Theorem 4.3 ([6]) Let ± be a behaviour preorder that satisﬁes ±RS ⊆ ± ⊆ I. Let E be a sound and complete inequational axiomatization for BCCSP(Act) terms

6 In [4] the authors also consider ω-completeness. In order to simplify the presentation we will just con- centrate on ordinary completeness, which is called ground completeness in [4].

modulo ±. Then the equational axiomatization ARS (E) is sound and complete for BCCSP(Act) modulo ≡.
Next we will present an alternative proof of Theorem 4.3. This new proof is based on the existence of canonical preorders (Section 3) and some new general results relating preorders and equivalences that we present below. The new proof is even shorter and simpler than that in [6]. What is even more important, this proof can be generalised to cover a much wider range of process semantics, as we will see in Section 5.
We present a couple of general results relating plain preorders and equivalences.
Proposition 4.4 Let  and  ' be a couple of preorders on the same set with  ⊆
 ', and their respective kernels ≈ and ≈'. If we consider the preorder '' generated by  ∪ ≈', that is, the transitive closure of this union, Closure( ∪ ≈'), we have that the kernel ≈'' of  '' coincides with ≈'.
Proof. Since ≈' ⊆ '' we immediately have ≈' ⊆ ≈''. For the opposite inclusion, note that '' = Closure(  ∪ ≈') ⊆ Closure( ' ∪ ≈')=  ' and therefore ≈'' ⊆ ≈'. 
Corollary 4.5 Let  be a preorder and ≈ its kernel, ≈' an equivalence relation on the same set, and ≈'' deﬁned by Closure(≈ ∪ ≈'). Then, if there is some preorder
  '' whose kernel is the equivalence relation ≈'' and such that  ⊆  '', we have that
≈'' is also the kernel of the preorder generated by the union  ∪ ≈'.
Proof. We apply Proposition 4.4 to the pair of preorders  and  '', and use the fact that Closure(  ∪ ≈') and Closure(  ∪ ≈'') are equal since ≈ ⊆  .	 
The following theorem is just 7 the particular case of Theorem 4.3 when the axiomatization of the given preorder is expressed by the axiom (RS) ax ≤ ax + ay, together with a set of (possibly conditional) equational axioms.
Theorem 4.6 Let E be a collection of (possibly conditional) equations p q com- patible with I, which means 8 I(p)= I(q). If Q = {B1–B4, (RS)}∪ E is a complete axiomatization of a behaviour preorder ±Q, then E = {B1–B4, (RS≡)} ∪ E is a complete axiomatization of the kernel of ±Q, ≡Q.
Proof. We apply Corollary 4.5 to the ready simulation preorder ±RS and to the equivalence relation ≡' axiomatized by the set E; hence, the corresponding relation
≡'' is just the equivalence ≡'. By Theorem 3.7, the canonical preorder иI	gener-
ated by ≡'' also satisfies (RS), and thus the hypotheses of the corollary are fulfilled. Therefore, E is an axiomatization of the kernel of the preorder generated by the union of ±RS and ≡', which is ≡Q.	 
In order to extend the result of the previous theorem to arbitrary axiomatiza- tions, we next prove that any axiomatization of a behaviour preorder coarser than

7 To be exact, by applying Theorem 4.3 we would obtain for each axiom p  q in E the pair of equations p  p + q and q  p + q, but obviously these two axioms together are equivalent to the original equation p  q that we keep in E.
8 More precisely, I(σ(p)) = I(σ(q)) for all ground instantiations.

ready simulation can be translated into an equivalent axiomatization of the form required by Theorem 4.6, by applying the same transformation used to get the equations in ARS (Q).
Proposition 4.7 Let Q = {B1–B4, (RS)} ∪ E be a complete axiomatization of a behaviour preorder ±RS ⊆ ±Q ⊆  I. Then, for the set of axioms E = {p + q q | p ≤ q ∈ E} we have that {B1–B4, (RS)}∪ E is an alternative axiomatization of
±Q.
Proof. It is just the particular case of Theorem 5.6 in the following section when
C is I.	 
By combining Proposition 4.7 and Theorem 4.6 we immediately get the desired new proof of Theorem 4.3, since the transformation needed in the proposition is in fact the same used in our algorithm ARS (Q).
Extending to General Constraints
The results in Section 4 can only be applied to semantics defined by preorders coarser than the ready simulation and included in I. This excludes both finer semantics (such as possible [10] and impossible futures [11]), but also other coarser preorders not included in I, such as the trace and complete trace preorders. In order to also cover these cases we will use results on general constrained simulations that we have developed in [12].
C-constrained simulations are just plain simulations to which we impose that their pairs should also be related by the constraint C.
Definition 5.1 Given a relation C over BCCSP processes, a relation SC is a C- constrained simulation, if pSCq implies:
For every a, if p −a→ p' there exists q' such that q −a→ q' and p'SCq', and
pCq.
We say that process p is C-simulated by process q, or that q C-simulates p, written
p и C q, whenever there exists a C-constrained simulation SC such that pSCq.
Since we want to characterise behaviour preorders by using C-simulations, it is reasonable to impose on these simulations the condition of being behaviour pre- orders themselves; that is guaranteed whenever the constraints are also behaviour preorders. Given that the operators in our basic algebra BCCSP are those gener- ating finite trees, this condition is quite natural and the results we will prove based on it are indeed rather general.
C-constrained similarity, и C , can be conditionally axiomatized in a simple way.
For any constraint C we just need to consider the axiom
(PC )	xCy ⇒ x ≤ x + y. 
We define the axiomatization PC as the set of axioms obtained by adding the ax- iom (PC ) to the set of axioms that characterises bisimulation equivalence (Figure 2),

PC = {B1–B4, (PC )}. PC is sound and complete with respect to и C .
Proposition 5.2 For every constraint C being a behaviour preorder,
PC ▶ p ≤ q ⇐⇒ p и C q. 
Most of the interesting constraints are also equivalence relations. Whenever this happens we can axiomatize the equivalence relation induced by и C , that we denote
C
with ← , by considering the axiom
(EC)	xCy ⇒ a(x + y)  a(x + y)+ ay and the set E = {B1–B4, (EC )}.
Proposition 5.3 For every constraint C being a behaviour equivalence,
C
EC ▶ p  q ⇐⇒ p ←  q. 
Constrained simulations up-to a preorder are defined in a similar way to I- simulations up-to. They allow a coinductive characterisation of the preorders ful- filling the constraint C.
Proposition 5.4 For every behaviour preorder ± and every behaviour equivalence
C such that и C ⊆ ± ⊆ C, we have p иC q ⇐⇒ p иC q ⇐⇒ p ± q.
→	∼±	∼≡
From a behaviour equivalence we can also induce the corresponding canonical preorder.
Proposition 5.5 For every behaviour equivalence ≡ and for every constraint C
→C	иC
that is a behaviour equivalence such that ← ⊆ ≡ ⊆ C, the preorder ∼≡ is the only
behaviour preorder that satisﬁes и C ⊆ иC ⊆ C and whose kernel is ≡. Therefore,
→	∼≡
it can be said to be the canonical preorder under the constraint C that induces the
equivalence ≡.
From Behaviour Preorders to Equivalences for General Constraints
We can now generalise Proposition 4.7 to any constrained simulation, when the constraint is a behaviour equivalence, thus paving the way for Theorem 5.7, the main result of this paper.
Proposition 5.6 Let C be a behaviour equivalence and Q = {B1 − B4, (PC )}∪ E an axiomatization of a behaviour preorder ±Q such that ±RS ⊆ ±Q ⊆ C. Then, for the set of axioms E = {p + q  q | p ≤ q ∈ E} we have that Q' = {B1–B4, (PC )}∪ E is an alternative axiomatization of ±Q.
Proof. First we prove that every axiom of Q' can be inferred from the axioms in
Q. For each p + q  q ∈ E we have that p ≤ q ∈ E and therefore Q ▶ p + q ≤ q. Besides, if p ≤ q ∈ E then 9 C(p, q), and, given that C is symmetric, we also have Q ▶ q ≤ p + q and therefore Q ▶ p + q  q.

9 To be precise, this argument holds for every possible ground instantiation σ(p) ≤ σ(q).

Now we prove that every axiom of Q can be inferred from the axioms in Q'. For every axiom p ≤ q ∈ E we have p + q  q ∈ E; since C(p, q), we can use (PC ) and Q' ▶ p ≤ p + q and therefore Q' ▶ p ≤ q.	 
Proposition 5.5 allows us to obtain the following theorem which generalises The- orem 4.6
Theorem 5.7 Let E be a collection of (possibly conditional) equations p q com- patible with C, that is, C(p, q). If Q = {B1–B4, (PC )} ∪ E is a complete axiom- atization of a behaviour preorder ±Q, then E = {B1–B4, (EC )}∪ E is a complete axiomatization of the kernel of ±Q, ≡Q.
Proof. Analogous to Theorem 4.6. Let ≡'' be the union of the kernel of и C and the equivalence ≡' generated by E; ≡'' is just ≡'. By Proposition 5.5, the canonical
preorder иC  generated by ≡'' also verifies и C ⊆ иC  and thus the hypotheses of

∼≡''
→	∼≡''

Corollary 4.5 are fulfilled. Therefore E is an axiomatization of the kernel of the
preorder generated by the union of и C and ≡', which is ≡Q.	 
Certainly, our results on the semantics coarser than ready simulation presented in Section 4 are just a particular case of the general Theorem 5.7, simply taking I as the constraint C. Let us now consider the case of trace semantics. The classic trace preorder defined by trace inclusion can be axiomatized with the following axioms
(S)	x ≤ x + y
(T≡)	a(x + y)  ax + ay .
The first one is the axiom of the plain simulation preorder, which corresponds to a simulation constrained by the universal relation U that relates all pairs of processes. Then, we can prove the following corollary.
Corollary 5.8  (i) Trace equivalence ≡T can be axiomatized by the set of axioms
{B1–B4, (S≡), (T≡)} with (S≡) a(x + y)  a(x + y)+ ax.
(ii) {B1–B4, (T≡)} is also a complete axiomatization of ≡T .
Proof. The first part follows from Theorem 5.7 by noting that (EU ) is equivalent to (S≡). The second is a consequence of (S≡) being a particular case of (T≡). 
It is interesting to observe that (T≡) is included in I, so that instead of the
classic preorder ±T we could consider the canonical preorder corresponding to con-

dition I, иI
T
, which by Proposition 3.9 can be axiomatized by the set of axioms

{B1–B4, (RS), (T≡)}. Obviously this preorder is finer than I, while the classic trace
preorder ±T is not, hence the former is finer than the last. By definition of the

canonical preorders we already know that иI
T
also generates trace equivalence.

We can prove this fact in an alternative way by applying our Theorem 5.7. Since
(T≡) implies (RS≡), we can remove (RS≡) from the obtained axiomatization of the

kernel of иI
T
, thus obtaining the classic axiomatization of trace equivalence.

Complete simulations can be defined by means of the termination constraint M , defined by M (x, y) = (x = 0 ⇔ y = 0). It is easy to see that the conditional axiom (PM ) can be alternatively presented as the inequational axiom (M≤) ax ≤ ax + y. Then the complete traces preorder can be axiomatized by the set of axioms
{B1–B4, (PM ), (CT≡)} where (CT≡) is a(bx + u)+ a(cy + v)  a(bx + cy + u + v).
Corollary 5.9 (i) Complete trace equivalence ≡CT can be axiomatized by the set of axioms {B1–B4, (EM ), (CT≡)}.
(ii) {B1–B4, (CT≡)} is also a complete axiomatization of ≡CT .
Proof. Since M (a(bx+u)+a(cy+v), a(bx+cy+u+v)), the first result is consequence of Theorem 5.7. For the second, note that (CT≡) implies (EM ): the case for x =0 = y is trivial, and bx + u and cy + v are just patterns to express that the corresponding processes have not terminated.	 

Semantics not Coarser than Ready Simulation
Possible futures is the finest semantics in the ltbt-spectrum, apart from bisimulation. It has been proved [13] that it cannot be finitely axiomatized using non-conditional axioms, neither as an equivalence nor as a preorder. However, using conditional axioms we can axiomatize the possible futures preorder ±PF by means of
(PT ) T (x)= T (y) ⇒ x ≤ x + y
(PF ) T (x) ⊇ T (y) ⇒ a(x + y)+ ax + a(y + z)  ax + a(y + z) where T (p) is the set of traces of process p.
Corollary 5.10 {B1–B4, (ET ), (PF )} is a complete axiomatization of ≡PF .
Proof. Since p ±PF q implies T (p)= T (q), it follows from Theorem 5.7.	 
The case of impossible futures is more interesting. It was introduced in [11] and probably everyone expected that it was not finitely axiomatizable, just like possible futures semantics. However, Chen and Fokkink [14] have recently proved that the impossible futures preorder ±IF can be axiomatized by means of the axioms
(ND)	a(x + y) ≤ ax + ay
(IF )	a(x + y)+ ax + a(y + z)  ax + a(y + z) .
Surprisingly, they have also proved that the induced equivalence cannot be finitely axiomatized using non-conditional equations. This fact does not contradict the applicability of our Theorem 5.7. Certainly, we cannot directly apply it because we have no simulation axiom in the given axiomatization. However, from the definition
of impossible futures, or more directly, from the fact that ±PF ⊆ ±IF we can infer that ±IF also satisfies the axiom (PT ), so that {B1–B4, (ND), (IF ), (PT )} would also be a complete axiomatization of ±IF . From this we can easily conclude the following proposition.
Proposition 5.11 {B1–B4, (IF ), (PT )} is a complete axiomatization of ±IF .

Proof. Let us see that (ND) is indeed a redundant axiom in the axiomatization above. Since T (a(x + y)) = T (ax + ay), we can apply (PT ) to obtain a(x + y) ≤ a(x + y)+ ax + ay and then (IF ), with z = 0, to get a(x + y) ≤ ax + ay. 
Now, exactly as we did for possible futures, we can apply Theorem 5.7 to obtain the following corollary.
Corollary 5.12 {B1–B4, (ET ), (IF )} is a complete axiomatization of ≡IF .
Since the combination of (ND) and (IF ) is as powerful as that of (PT ) and (IF ) one could think that by defining in an adequate way the equivalence axiom generated by (ND) we could get a finite non-conditional axiomatization of ≡IF . But this is not possible, mainly because (ND) by itself is not equivalent to (PT ).

Conclusions and future work
Contrary to our own expectations when we proved the existence of the canonical preorders that generate semantic equivalences and showed that their axiomatiza- tions could be easily obtained from those of the corresponding equivalences, we were much closer than we thought from the resolution of the converse problem. When- ever we have a “reasonable” axiomatization, either there is in it, or we can add to it, an appropriate simulation axiom (PC ) so that we can transform the rest of inequalities into equations to obtain an equivalent axiomatization. Then we are in a position to apply Theorem 5.7 to obtain a complete axiomatization of the induced equivalence, simply by substituting the axiom (PC ) by (EC ).
The fact that we can apply all these results not only to the semantics coarser than ready simulation, which can be characterised as I-simulations up-to, but to any semantics coarser than some suitable C-similarity, makes the results extremely general. In particular, they are valid for all semantics in the ltbt-spectrum.
It is true that, in principle, the axiomatizations we obtain are conditional since the general axioms characterising the constrained simulation (PC ) and the corre- sponding equivalence (EC) are governed by the corresponding constraint C. How- ever, if a non-conditional axiomatization is possible it is usually straightforward to transform the conditional axiomatization to obtain the former. Besides, all the constraints we need to cover the semantics in the spectrum are very simple and can be finitely axiomatized by non-conditional axioms, so that by combining the corresponding sets of axioms we get finite axiomatizations of both the preorders and the equivalences defining all these semantics.
We have found a nice application of our coinductive characterisations of the rea- sonable semantics, that shows that the coalgebraic properties of these semantics fit very well with their algebraic properties, so that we can establish the relationship between the axiomatizations of the preorders and the equivalences defining them. Besides, the fact that we could apply these results to all the semantics in the spec- trum has provided a new insight about the essential similarities between all of them and has led to our general work on the unification of all the semantics, that we are currently close to conclude.

References
R. J. v. Glabbeek, Handbook of Process Algebra, Elsevier, 2001, Ch. The Linear Time – Branching Time Spectrum I: The Semantics of Concrete, Sequential Processes, pp. 3–99.
D. de Frutos-Escrig, C. Gregorio-Rodr´ıguez, Algebraic and coinductive characterizations of semantics provide general results for free (short extended abstract), in: E. Johnsen, O. Owe, G. Scheneider (Eds.), 19th Nordic Workshop on Programming Theory, Universitetet i Oslo, Institutt for informatikk, 2007,
pp. 96–98, research report 366.
D. de Frutos-Escrig, C. Gregorio-Rodr´ıguez, (Bi)simulations up-to characterise process semantics, Information and Computation (to appear).
L. Aceto, W. Fokkink, A. Ing´olfsd´ottir, Ready to preorder: get your BCCSP axiomatization for free!, in: Proc. 2nd Conference on Algebra and Coalgebra in Computer Science - CALCO’07, Vol. 4624 of Lecture Notes in Computer Science, Springer, 2007, pp. 65–79.
B. Bloom, S. Istrail, A. R. Meyer, Bisimulation can’t be traced, Journal of the ACM 42 (1) (1995) 232–268.
D.	de	Frutos-Escrig,	C.	Gregorio- Rodr´ıguez, M. Palomino, Ready to preorder: an algebraic and general proof. Submitted to Journal of Logic and Algebraic Programming. http://maude.sip.ucm.es/∼ miguelpt/bibliography.html

D. de Frutos-Escrig, C. Gregorio-Rodr´ıguez, Bisimulations up-to for the linear time-branching time spectrum, in: CONCUR 2005 - Concurrency Theory, 16th International Conference, Vol. 3653 of Lecture Notes in Computer Science, Springer, 2005, pp. 278–292.
L. Aceto, W. Fokkink, A. Ing´olfsd´ottir, B. Luttik, Finite equational bases in process algebra: Results and open questions., in: Processes, Terms and Cycles, Vol. 3838 of Lecture Notes in Computer Science, Springer, 2005, pp. 338–367.
D. de Frutos-Escrig, C. Gregorio-Rodr´ıguez, Simulations up-to and canonical preorders (extended abstract), in: Structural Operational Semantics SOS 2007, Vol. 192 of Electronic Notes in Theoretical Computer Science, Elsevier, 2007, pp. 13–28.
W. Rounds, S. Brooks, Possible futures, acceptances, refusals, and communicating processes, in: 22nd Foundations of Computer Science Annual Symposium, IEEE, 1981, pp. 140–149.
M. Voorhoeve, S. Mauw, Impossible futures and determinism., Information Processing Letters 80 (1) (2001) 51–58.
D. de Frutos-Escrig, C. Gregorio-Rodr´ıguez, Coinductive characterizations of process semantics. Submitted.
L. Aceto, R. v. Glabbeek, W. Fokkink, A. Ing´olfsd´ottir, Nested semantics over finite tree are equationally hard, Information and Computation 191 (2) (2004) 203–232.
T. Chen, W. Fokkink, On the axiomatizability of impossible futures: Preorder versus equivalence. Personal communication (2007).
