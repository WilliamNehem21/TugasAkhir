Available online at www.sciencedirect.com
ScienceDirect

AASRI Procedia 6 (2014) 26 – 33


2013 2nd AASRI Conference on Computational Intelligence and Bioinformatics
Hurricane-based Optimization Algorithm
Isamil Rbouh, Abdelhakim Ameur El Imrani*
Concpetion and Systems Laboratory, Faculty of Sciences, Mohammed V-Agdal Univeristy, Rabat, Morocco




Abstract

This paper introduces a new meta-heuristic optimization technique called Hurricane-based Optimization algorithm (HOA). The underlying concepts and ideas behind the proposed method are inspired from nature and based on the observation of hurricanes, radial wind and pressure profiles. In HOA, wind parcels move in a spiral course outward from a low-pressure zone called the eye emulating hurricanes in the real world. During this process, wind parcels search for a lower pressure zone (new eye), which is considered as the optimal solution. The HOA is tested with several benchmark functions frequently used in the area of optimization. The obtained results exhibit the high performance of the proposed method.
© 2014 The Authors. Published by Elsevier B. V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/3.0/).
Peer-review under responsibility of Scientific Committee of American Applied Science Research Institute
Keywords : Nature inspired Algorithm; Global optimization; Metaheuristic.


1. I troduction

In order to obtain accurate solution for large-scale optimization problems, exact optimization algorithms are not efficient enough to provide an appropriate solution with a high-dimensional search space. Therefore, to overcome these limitations, new optimization technics have been developed, most of them based on a metaphor of some natural or man-made process. The main goal is to find a good feasible solution that is at least reasonably close to being optimal.




* Corresponding author. Tel.: +212661202191; fax: +0-000-000-0000 .
E-mail address: elimrani.hakim@gmail.com.










2212-6716 © 2014 The Authors. Published by Elsevier B. V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/3.0/).
Peer-review under responsibility of Scientific Committee of American Applied Science Research Institute doi:10.1016/j.aasri.2014.05.005


During the last few years, Nature inspired algorithms have been experiencing extremely rapid growth in the industrial world, where they have been shown to be very effective in solving real-world optimisation problems [1].
As an example of the huge and growing variety of heuristic approaches: Genetic Algorithm [6], Simulated Annealing [7], Ant Colony Search Algorithm [8], and Particle Swarm Optimization [9].
However, these algorithms suffer from a major shortcoming, i.e. being trapped in local minima. In order to overcome these limitations, many other optimization technics have been developed. Some of these technics are Gravitational Search Algorithm (GSA) [10], Cuckoo Optimization Algorithm (COA) [11].
In this paper we introduce a new optimization algorithm named as Hurricane-based Optimization Algorithm (HOA), based on wind and pressure profiles in a hurricane. During the search process, wind parcels search for a lower pressure zone (the eye), which is considered as the optimal solution.
This paper is organized as follows: Section 2 provides a brief review of hurricanes as a meteorological phenomenon and the concepts and ideas behind HOA in details. In Section 3 the experimental results are demonstrated. Finally, conclusions are given in Section 4.

Hurricane-based Optimization Algorithm

Hurricanes

A hurricane is a low-pressure zone with a warm core that forms over tropical and subtropical oceans. The center of the hurricane is known as the eye (Figure 1). Immediately outside of the eye is the Eyewall region, an area of vigorous tall/deep clouds, and the strongest observed winds. The surrounding spiral bands, called Rainbands, are localized areas of tall/deep clouds, heavy rain, and high winds.


Fig. 1. Low-pressure system swirls off the southeastern coast of Greenland

Basic Concepts

The idea of the proposed algorithm is based on the observation of hurricane and how wind parcels move in the surrounding atmosphere.


A variety of equations have been suggested to model this phenomenon. The first one presents a straightforward description of the wind field. This model called Rankine-combined (or modified Rankine vortex) was applied to hurricanes by Depperman [12].
The Rankine vortex model is a simple two-equation parametric description of a swirling flow. In the inner radial region about the center the flow is in solid rotation. While the outer region is free of vortices:


V  V	r	if r  R
(1)

max Rmax

 R	X
max

V  Vmax  max 
if r  Rmax	(2)

	r	

where V is the tangential wind with maximum value Vmax at r = Rmax, and the parameter X allows the shape of the wind field outside the (Rmax) to be modified to fit available data. The proposed method uses this model to control velocity variation over the search space.
The interaction of the natural forces in a hurricane makes the wind parcels start spiraling outward. Therefore, the top horizontal surface of the hurricane can be approximated by a logarithmic (log) spiral pattern. Log spirals, which can be formulated as follows:


r(θ )  a exp(b θ ), x(θ )  r(θ )  cos(θ )  ex
y(θ )  r(θ )  sin(θ )  e

(3)

	y

r and ș are radial and angular coordinate respectively in polar coordinates; (x, y) is the location in Cartesian coordinates; the real numbers (ex, ey) are the coordinates of the spiral center (eye). The real number a > 0; b controls how tightly the spiral whirls and in which direction. In the extreme case that b= 0, the spiral becomes a circle of radius a.
In the proposed algorithm, the eye (lower pressure) corresponds to the best solution. Its pressure is determined using problem fitness function.

The proposed HOA

Consider a system with N parcels. The position of the ith parcel is Xi  (x1,..., xd ,..., xn ) for i  1,2,3,...,N.
xd presents the position of ith parcel in the dth dimension, and n the search space dimension. Wind parcels are divided into j (=n-1) groups, whereas each parcel Xi ∈ Gk (k = i mod (n-1)).

Consider the parcel Xi ∈ Gk denoted ( Xi ) , the components xi
from the eye position , as follows:
(j = 1, 2, 3, ..., n) are calculated, starting



ri (t)  cos(φ i
 φi (t))  e j
if j  k

	initial

x j  r (t)  sin(φ i	 φ (t))  e
if j  k  1
(4)

i	i	initial	i	j


e j otherwise

ri (t )  R0  exp(rand  φi (t ))


(5)


Where ri and φi are radial and angular coordinate respectively in polar coordinates. At t = 0, φi (0)  0
and r (0)  R Eq. (6). This means that at t = 0, R and ϕi	are the initial polar coordinates, R0 is the eye
i	0	0	initial
radius, which is a user parameter in the interval [0,+]
The values ϕi  (i =1, 2, 3, …, N) is generated randomly in the interval [0, 2ʌ]. ej presents the jth component of the eye, and rand is a random number in the interval [0,1].
In other words, each parcel Xk from the group Gk moves along a spiral path in the plane formed by the two dimensions k and k+1. Parcels need velocity to start and keep moving. Therefore, the velocity of a parcel Xk is considered as a rate of change of angular displacement (angular velocity) added to its angular
coordinate ϕi :

φi (t  1)  φi (t )  ω ; if ri  Rmax


	 Rmax 
rand
(6)

φi (t  1)  φi (t )  ω  		; if ri  R max
		r	

where Ȧ is the angular velocity defined by the user, within the interval [0, 2ʌ]. Rmax is the radius of the maximum wind speed. This parameter is defined in the interval  0,  . Under the constraint R0 < Rmax. rand is a uniform random variable in the interval [0, 1].
Each time parcel Xk changes position. If Pi < Peye, the eye moves to the parcel position in order to keep the lower pressure at the eye. Pi and Peye are defined as follows:


Pi  fiti  f ( x1,..., xd ,..., xn )
(7)



	arg min

fit (t) ;minimization


P
eye
  i  1,..., N
-  arg max
 i  1,..., N
i

fiti (t) ;maximization

(8)


where fiti(t) represents the fitness value of the parcel Xk at time ‘t’.




Fig. 2. Different variables and parameters (red) of HOA

HOA pseudo code

n ĸ :=the search space dimension
size ĸ desired wind parcels number itMax ĸ maximum number of iterations Ȧ ĸ angular velocity
R0 ĸ eye radius
Rmax ĸ the radius of maximum speed
ϕi	:=initial angles in polar coordinates
–→initial
eye ĸ random position
For i from 1 to size Do
ϕi	ĸ random in the interval [0, 2ʌ]
End
For j from 1 to itMax Do
For i from 1 to size Do
ri  R 0  exp(rand()  φi )

X i  eye
k  i mod (n  1)
xk  r  cos(φ i	 φ )  e
i	i	initial	i	k
xk1  r  sin(ϕi	 ϕ )  e

i	i	initial	i
k1

If is Out( xk ) Or is Out( xk +1 ) Then
j	j
ϕi	ĸ random in [0, 2ʌ]
ϕi :=0




Else If Pressure(Xj)pressure(eye) Then
–→	–→
eye : Xi

Else

If ri  Rmax Then Else
φi  φi  ω

 R	 rand ()
φi  φi  ω   max  



End If End For
End For–→ Return eye

End If
  ri  


The function isOut(c) checks if the passed component c is within search space boundaries. Rand() generates a uniform random number in the interval [0, 1].
The algorithm starts with a random eye position. After the parameters initialization, the algorithm generates iteratively wind parcels by modifying the eye position according to Eq. (5). Each time a new wind
parcel is generated, the algorithm considers 3 cases:
The parcel is out of the search space, the algorithm resets the parcel parameters ( φi	and φ ).
initial	i
The algorithm compares pressures, if the parcel pressure is lower than the eye pressure; the parcel position becomes the new eye.
The parcel moves to the next position according to Eq. (7).
After achieving a predetermined number of iterations (itMax), the algorithm returns the eye position, which is considered as the optimal solution.

Experimental Results

To validate the performance of the proposed method, HOA is applied to optimize a number of benchmark functions listed in Table 1, where n presents the dimension of the function. All benchmark functions are minimization problems.
The values of parameters used in HOA are, Ȧ = ʌ/10, Rmax = 0.2, R0 = 10-5. Wind parcels number is 100, and the maximum number of iterations is 20000. All experiments are averaged over 20 independent runs.
Table 1. The benchmark functions used in tests

Function	Mathematical description	Search domain

Sphere	f = ∑𝑛
𝑥2 ∑𝑛
𝑥2
[-100, 100]n

1	𝑖=1 𝑖	𝑖=1 𝑖

Rosenbock	f2 = ∑𝚗−1[100(x𝚒+1−x2) + (x𝚒 − 1)2]
[-10, 10]n

𝚒=1	𝚒

Rastrigin	f3 = ∑𝑛
(𝑥2 − 10 coS 2𝑛𝑥𝑖 + 10) ∑𝑛
(𝑥2 − 10 coS 2𝑛𝑥𝑖 + 10)
[-5.12, 5.12]n


Michalewicz
𝑖=1  𝑖
𝑛

𝑖𝑥2
𝑖=1  𝑖

f5 = − ∑𝑖=1 Sin(𝑥𝑖) Sin2𝑚 ( 𝑖 ); 𝑚 = 10	[0, ʌ]n


n	f7 = ∑𝑛
(𝑥4 − 16𝑥2 + 5𝑥𝑖)

[-5, 5]n

2 nima
𝑖=1  𝑖	𝑖






Table 2. Minimization results of benchmark functions


Table 2 presents the experimental results of HOA in terms of the average final best value (Avg) and the standard deviation (SD). In this table, x* is the optimum for the problem, and f(x*) is the best achievable fitness for that function. According to experimental results HOA shows a great performance in solving some benchmark functions. In general the results are close to the global optimum. The small standard deviation values prove the convergence of HOA.

Conclusion

In this paper, HOA as a new nature-inspired algorithm is proposed to tackle optimization problems. The underlying concepts and ideas behind HOA are based on the observation of hurricanes and the radial wind and pressure profiles.
In HOA, wind parcels start spiraling outward from the eye. The velocities are controlled by a predefined model. In this process, wind parcels search for a lower pressure zone (new eye position). Once new lower pressure is discovered, its position becomes the eye and the process starts all over again.
To prove its performance, HOA is tested with several benchmark functions with different dimensions. The statistical results show the effectiveness of the proposed method in solving various nonlinear functions. In further work, HOA should be compared to other metaheuristic optimization algorithms.


References
J. Alami and A. E. Imrani, “Dielectric composite multimodal optimization using a multipopulation cultural algorithm,” Intell. Data Anal., vol. 12, no. 4, pp. 359–378, Jan. 2008.
Z. Beheshti, S. Mariyam Hj, and Shamsuddin, “A Review of Population-based Meta-Heuristic Algorithm,” Int. J. Adv. Soft Comput. Its ApplicMar2013 Vol 5 Issue 1 P1.
A. El Imrani, A. Bouroumi, H. Zine El Abidine, M. LImouri, A. Essaid. “A fuzzy clustering-based niching


approach to multimodal function optimization”. Cognitive System Research, vol. 1, no. 2, pp. 119–133, Jun. 2000.
J. Alami, A. E. Imrani, and A. Bouroumi, “A multipopulation cultural algorithm using fuzzy clustering,” Appl. Soft Comput., vol. 7, no. 2, pp. 506–519, Mar. 2007.
L. Benameur, J. Alami, and A. E. Imrani, “A hybrid discrete particle swarm algorithm for solving the fixed-spectrum frequency assignment problem,” Int. J. Comput. Sci. Eng., vol. 5, no. 1, p. 68, 2010.
J. H. Holland, Adaptation in Natural and Artificial Systems. Ann Arbor, MI: University of Michigan Press, 1975.
S. Kirkpatrick, C. D. Gelatt, and M. P. Vecchi, “Optimization by Simulated Annealing,” Science, vol. 220, no. 4598, pp. 671–680, May 1983.
M. Dorigo, V. Maniezzo, and A. Colorni, “Ant system: optimization by a colony of cooperating agents,” IEEE Trans. Syst. Man Cybern. Part B Cybern., vol. 26, no. 1, pp. 29–41, 1996.
J. Kennedy and R. Eberhart, “Particle swarm optimization,” in , IEEE International Conference on Neural Networks, 1995. Proceedings, 1995, vol. 4, pp. 1942–1948 vol.4.
E. Rashedi, H. Nezamabadi-pour, and S. Saryazdi, “GSA: A Gravitational Search Algorithm,” Inf. Sci., vol. 179, no. 13, pp. 2232–2248, Jun. 2009.
R. Rajabioun, “Cuckoo Optimization Algorithm,” Appl. Soft Comput., vol. 11, no. 8, pp. 5508–5518, Dec. 2011.
R. C. E. Depperman, “Notes on the origin and structures of Philippine typhoons,” Bull. Am. Meteorol. Scociety, vol. 28, pp. 399–404, 1947.
