Electronic Notes in Theoretical Computer Science 100 (2004) 49–64  
www.elsevier.com/locate/entcs


Topological (Bi-)Simulation
P.J.L. Cuijpers1 ,2	M.A. Reniers3
Department of Mathematics and Computer Science Technische Universiteit Eindhoven (TU/e) Eindhoven, The Netherlands

Abstract
In this paper, we reason that simulation and bisimulation are not adequate in the context of hybrid systems as they are only capable of comparing states that are reachable in a finite number of tran- sitions. To solve this problem we extend labelled transition systems with a topology on the state space. We define topological versions of simulation and bisimulation that are also capable of com- paring accumulation states of infinite sequences of transitions. We show that for transition systems with an indiscrete topology, topological (bi-)simulation and standard (bi-)simulation coincide. A similar result is obtained for finite transition systems with a discrete topology.
Keywords: Labelled transition system, (bi-)simulation, topology, accumulation, topological (bi-)simulation.


Introduction
The semantics of many of the techniques used in computer science rely on labelled transition systems, structures containing a set of objects representing the physical state of a system (hence the objects are called states), and labelled transitions, representing the behavior that brings a system from one state into another.
Since the work of van Glabbeek [11] there is a general agreement within computer science that bisimulation [18,16] is the strongest notion of equiv-

1 We would like to express our gratitude to Progress/STW (Grant EES5173), Philips-CFT and Assembleon, for their financial and material support of this project.
2 Email: P.J.L.Cuijpers@tue.nl
3 Email: M.A.Reniers@tue.nl



1571-0661 © 2004 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2004.08.017


alence of interest on labelled transition systems. However, for example in the field of hybrid systems the need is felt for a stronger kind of equivalence than bisimulation. There, the problem of Zeno-behavior (an infinite number of events occurring in a finite time interval [20,6,3,13], also called supertask in philosophy [19,22]), gives rise to labelled transition systems that are con- sidered different, but cannot be distinguished using bisimulation.
Although there is philosophical debate about the existence of Zeno-behavior in reality, there are some reasons why such a phenomenon arises in the mod- elling of hybrid systems. Next, we explain two such reasons by means of small examples taken, in both cases, from [13].
Zeno-behavior typically arises from modelling abstractions employed for the purpose of simplification of modelling hybrid systems. A simple example is the bouncing ball. A ball bounces on a surface elastically, with each bounce losing a fraction of its energy. In a simple model of such a bouncing ball, one might wish to abstract from the dynamics in case of a bounce of the ball on the surface and simply model it as a discrete event. As it turns out, in a finite amount of time, an infinite amount of bounces occur. Hence, the simple bouncing ball model employs Zeno-behavior.
Zeno-behavior also arises in models of hybrid systems as a result of apply- ing certain control policies. This phenomenon is often referred to as infinitely fast switching between control modes. In [13] the example of the water tank system is given. The water tank system consists of two water tanks (see Fig- ure 1). Water flows out each of these tanks with some constant rate (v1 and v2 respectively). At each moment, water flows into one (and precisely one) of the tanks with rate w. The objective is to keep the water volumes (x1 and x2 respectively) of the water tanks above some specified levels (r1 and r2 respectively). This is achieved by switching the inflow between the tanks at appropriate times: whenever x1 ≤ r1 the inflow is switched to tank 1 and whenever x2 ≤ r2 the inflow is switched to tank 2. If the inflow is bigger than each of the outflows (w > v1 and w > v2) and smaller than the sum of the outflows (w < v1 + v2), the system shows infinitely fast switching. This form of Zeno-behavior occurs frequently in models of hybrid systems due to the ap- plication of control policies such as chattering and relaxed control. Again, the Zeno-behavior is the consequence of a well-considered simplification of reality. In many formalisms (such as hybrid automata [12]), the Zeno-behaviors that result from such modelling simplifications are neglected. It is not al- ways clear what the implications are with respect to analysis and verification steps performed on such models especially in cases where properties are ana-
lyzed/verified that depend on the notion of reachability of states.
Bisimulation only regards a single transition at a time and is not capable of








x1
x2
r1	r2

v1	v2
Fig. 1. Water tank system.

Fig. 2. Bisimilar labelled transition systems.
distinguishing between infinitely long sequences. For example, the sequences shown in Figure 2 are considered bisimilar. To be able to handle Zeno- and other kinds of infinite behavior, we need to define to which (set of) states an infinitely long sequence of states leads. This is possible in a natural way if a topological structure on the state space of the labelled transition system is given. Topology is a field of mathematics in which general definitions of accumulation of sequences have been developed (see e.g. [9,10]).
In this paper, we consider labelled transition systems where the state space is structured using a topology. Then, we define topological simulation and topological bisimulation. These notions extend the traditional ones by con- sidering not only single steps but arbitrary long (accumulating) sequences of steps in the transfer (zig-zag) conditions. We prove that these notions are a pre-order and an equivalence respectively and that they are stronger than the non-topological notions. We also prove that they are invariant under isomor- phism.
We study two specific topologies in more detail, viz. the indiscrete topology and the discrete topology. It turns out that for labelled transition systems with the indiscrete topology, (bi-)simulation and topological (bi-)simulation coincide under certain conditions. Also, for the discrete topology, the notions coincide provided that the state spaces are finite. The proofs that are omitted can be found in [5].

Preliminaries
In this section, we introduce some basic definitions and facts with respect to topology. Furthermore, we present the definition of the well-known notion of (bi-)simulation on labelled transition systems, but, for ease of comparison with the topological notions defined in the following section, already equipped with a topology (that is however not used yet).
Topology
Given a set X, a topology T ⊆ 2X is a way of adding structure to this set. Roughly speaking, a topology defines which points U ⊆ X are in the neighborhood of a point x ∈ U . In literature from the field of computer science, structure on sets is usually added by giving a metric. In [6,14,13], this metric is defined on the state space, while [2,4] use a metric to define structure on the labels. This was, to our knowledge, never used with respect to bisimulation equivalence. Note that giving a metric on a set is only one way of inducing a topology. Alternatively, for example, a complete partial order gives rise to a topology as well [10,17]. The following definitions are taken from [9].
Definition 2.1 Let X be a set, then T ⊆ 2X is a topology on X if and only if ∅ ∈ T , X ∈ T , every finite intersection of elements of T is again an element of T , and every arbitrary union of elements of T is again an element of T .
The elements of T are called open sets. An open set U ∈ T containing x ∈ U is called a neighborhood of x. The pair (X, T ) is called a topological space. Two special topologies are the indiscrete topology TI(X) = {∅,X} and the discrete topology TD(X) = 2X. They prove useful later on. As an example, the usual topology on the real numbers R is the arbitrary union of all the sets {x ∈ R | x− < x < x+ with x−, x+ ∈ R} (i.e. the arbitrary union of open intervals (x−, x+)).
Definition 2.2 Let (X, T ) be a topological structure. A set B ⊆ T is a basis for T if and only if each non-empty element of T is the union of elements of B.
In Section 3, we use the concept of accumulation to expand the notion of bisimulation with.
Definition 2.3 Let (X, T ) be a topological space, and →x : N → X a sequence over X. This sequence →x accumulates at y ∈ X according to the topology T ,
T
denoted →x   y, if and only if for all neighborhoods U of y (y ∈ U ∈ T ) and
all l ∈ dom(→x) there exists m ∈ dom(→x) such that l ≤ m and →x(m) ∈ U .

Note that a sequence may accumulate in multiple accumulation points.
Furthermore, a finite sequence accumulates at least at its endpoint.
Definition 2.4 Let (X, T ) and (X',T ') be topological spaces. A mapping f : X → X' is continuous if and only if f −1(U ') ∈ T for each U ' ∈ T '. The inverse image f −1 : 2X' → 2X of f is for all V ' ∈ 2X' defined as f −1(V ') = 
{v ∈ X | f (v) ∈ V '}.
In this paper, for functions f : Y → Z and g : X → Y , the function composition f ◦ g : X → Z is defined as (f ◦ g)(x)= f (g(x)) for all x ∈ X.
Lemma 2.5 Let (X, T ) and (X',T ') be arbitrary topological spaces and let
f : X → X' be an arbitrary continuous mapping. For any sequence →x over X,
T	T '
and any xω ∈ X: if →x  xω, then f ◦ →x  f (xω).
T	T '
Proof. Suppose that →x   xω. We have to prove that f ◦ →x   f (xω). Let
U ' ∈ T ' be an arbitrary neighborhood of f (xω) and let l ∈ dom(f ◦ →x). Since f is a continuous mapping between the topological spaces, we have the existence of a neighborhood f −1(U ') ∈ T of xω. Furthermore, by definition, we have
T
that dom(→x) = dom(f ◦ →x). From →x   xω we then have that there exists
m ∈ dom(→x) such that l ≤ m and →x(m) ∈ f −1(U '). Then, there also exists
m ∈ dom(f ◦ →x) such that l ≤ m and (f ◦ →x)(m) ∈ f (f −1(U ')).	 

Labelled Transition Systems and (Bi-)Simulation
Definition 2.6 A labelled transition system is a tuple ⟨(X, T ), Σ, → ⟩, where (X, T ) is a topological state space, Σ is the set of labels describing behaviors, and → ⊆ X × Σ × X is the transition relation. As an abbreviation we write
x →σ y for (x, σ, y) ∈ → .
In the remainder, we assume that M , M1, and M2 are the labelled tran- sition systems ⟨(X, T ), Σ, → ⟩, ⟨(X1, T1), Σ, →1 ⟩ and ⟨(X2, T2), Σ, →2 ⟩, re- spectively.
Traditionally, states from labelled transition systems may be compared using simulation and bisimulation. A state x from some labelled transition system is said to be simulated by a state y from another labelled transition system, if the branching structure and the behavior of x can be mimicked by
y. The inductive structure of the definition makes sure that all finite runs are considered, although only single steps are compared.
Definition 2.7 A binary relation R ⊆ X1 × X2 is a simulation if and only if for all x1 ∈ X1 and x2 ∈ X2 such that x1Rx2



if x  →σ	x' for some σ ∈ Σ and x' ∈ X , then there exists x' ∈ X
such

1	1σ 1  '	'	'	1	1	2	2
that x2 →2 x2 and x1Rx2.
A state x1 ∈ X1 of M1 is simulated by a state x2 ∈ X2 of M2, denoted M1, x1 “ M2, x2, if and only if there exists a simulation R ⊆ X1 × X2 such that x1Rx2.
Two states x1 ∈ X1 of M1 and x2 ∈ X2 of M2 are bisimilar, denoted M1, x1 ↔ M2, x2, if and only if there exists a binary relation R ⊆ X1 × X2 such that x1Rx2 and both R and R−1 are simulations.
Simulation is a pre-order and bisimulation is an equivalence on the states of a system (see [11]). These notions can be lifted from states to systems as follows.
Definition 2.8 The labelled transition system M1 is simulated by the labelled transition system M2 if and only if for any state x1 ∈ X1 there is a state x2 ∈ X2 such that M1, x1 “ M2, x2. The labelled transition system M1 is bisimilar to the labelled transition system M2 if and only if for any state x1 ∈ X1 there is a state x2 ∈ X2 such that M1, x1 ↔ M2, x2, and vice versa, for any state x2 ∈ X2 there is a state x1 ∈ X1 such that M1, x1 ↔ M2, x2.
Often, when comparing different systems, also sets of initial states I1 and I2 are given. In such a case, we say that M1 is simulated by M2 if and only if every initial state in I1 is simulated by an initial state in I2. In the remainder of this article, we do not consider initial states.

Topological Bisimulation
Recall that bisimulation is a way of comparing states of labelled transition systems by looking at the branching structure and the possible behavioral sequences. The formal definition of bisimulation regards two subsequent states and the label describing the behavior that accomplishes a transition from the first state into the second. Because this definition only compares single transitions at a time, finite sequences of labels and states are compared as well, but infinite sequences are not. The transitions in a labelled transition system give rise to sequences of states and labels, called runs.
Definition 3.1 A run of M is a pair (→x, →σ) of sequences →x : N → X and
→σ : N → Σ such that
either dom(→x) = dom(→σ) = N (for infinite runs), or dom(→x) = [0,N + 1) and dom(→σ)= [0,N) for some N ∈ N (for finite runs), and
→σ(n)
for all n ∈ dom(→σ): →x(n) → →x(n + 1).



Fig. 3. Visualization of topological (bi-)simulation.
The length of a run (→x, →σ) is the cardinality of the domain of →σ.
Topology was introduced as a structuring mechanism on the state space in order to define the states where an infinite run accumulates. Next, we present topological versions of simulation and bisimulation that require that also the infinite behavior of the transition systems is taken into account by comparing the accumulation points of infinite runs.
Definition 3.2 A binary relation R ⊆ X1 × X2 is a topological simulation if and only if for all x1 ∈ X1 and x2 ∈ X2 such that x1Rx2
for all runs (r→1, →σ) of M1 and for all y1 ∈ X1 such that r→1(0) = x1: if
T1
r→1  y1, then there exists a run (r→2, →σ) of M2 and there exists y2 ∈ X2 such
T2
that r→2(0) = x2, r→2  y2, y1Ry2, and r→1(n)Rr→2(n) for all n ∈ dom(r→1).
A state x1 ∈ X1 of M1 is topologically simulated by a state x2 ∈ X2 of M2, denoted M1, x1 “top M2, x2, if and only if there exists a topological simulation R ⊆ X1 × X2 such that x1Rx2.
Two states x1 ∈ X1 of M1 and x2 ∈ X2 of M2 are topologically bisimilar , denoted M1, x1 ↔top M2, x2, if and only if there exists a binary relation R ⊆ X1 × X2 such that x1Rx2 and both R and R−1 are topological simulations.
Observe that besides the accumulation point of the infinite runs also all intermediate states need to be related (see Figure 3). Since runs of length 1 are considered in the definition of topological (bi-)simulation, topological (bi-)simulation is a stronger notion than (bi-)simulation, which is proven in the next section.
To illustrate the usefulness of topological bisimulation we now consider again the example of the bouncing ball. The labelled transition systems in Figure 4, represent two versions of the bouncing ball. In these transition systems the state space consists of the non-negative reals (representing for example the energy of the ball) with the normal topology on those. The label



Fig. 4. Labelled transition systems for bouncing balls.
b represents a bounce of the ball on the ground and the label k represents the ball being kicked up again. In the upper labelled transition system, once the ball comes to a rest, it is kicked up so that it starts bouncing again. In the lower labelled transition system, the ball is not kicked. The result is that no more actions occur. With respect to bisimulation, these transition systems are equivalent as the state where the difference occurs, is not reachable in a finite number of transitions. Our intuition about such a bouncing ball however is that we actually observe a difference between these two models. Using our notion of topological bisimulation, the difference between these labelled transition systems becomes manifest.

Properties
In this section, we give a number of properties of topological simulation and topological bisimulation. We start with proving that these notions are a pre- order and an equivalence respectively. Then, we discuss the relation between the non-topological and topological notions. We show that the topological notions are stronger than the non-topological ones. Finally, we show that the notions are indeed topological [9], i.e., invariant under isomorphism.
Theorem 4.1 Topological simulation (“top) is a pre-order. Topological bisim- ulation (↔top) is an equivalence.
Next, we study the relations between the standard notions of simulation and bisimulation and their topological counterparts. As it turns out, the topological versions are stronger than the standard ones.
Theorem 4.2 “top⊆“ and ↔top⊆↔.
On topological spaces the notion of isomorphism is defined in order to cap- ture that the spaces have a corresponding structure. We show that topological simulation and topological bisimulation are topologically invariant.
Definition 4.3 A mapping f : X1 → X2 is a transition morphism if and only
if for all x , x' ∈ X and σ ∈ Σ: if x →σ	x' , then f (x ) →σ	f (x' ).

1	1	1
1	1  1
1	2	1


Definition 4.4 [Isomorphism] The labelled transition systems M1 and M2 are isomorphic if and only if there exists a bijective mapping f : X1 → X2 such that both f and f −1 are continuous transition morphisms. Sometimes, we call such labelled transition systems f -isomorphic.
Lemma 4.5 Let f : X1 → X2 be a transition morphism. For any run (→r, →σ)
of M1, (f ◦ →r, →σ) is a run of M2.
Theorem 4.6 Let f : X1 → X2 be a continuous transition morphism. Then,
M1, x1 “top M2,f (x1) for all x1 ∈ X1.
Proof. Define R = {(x1,f (x1)) | x1 ∈ X1}. We prove that R is a topological simulation. Thereto, consider an arbitrary pair (x1,f (x1)) ∈ R. Let (→r, →σ) be
T1
an arbitrary run of M1 such that →r(0) = x1. Let y ∈ X1 such that →r   y.
From the fact that (→r, →σ) is a run of M1 and the fact that f is a transition morphism, we obtain, by Lemma 4.5, that (f ◦ →r, →σ) is a run of M2. Moreover
T1
(f ◦ →r)(0) = f (→r(0)) = f (x1). From the fact that →r   y and the fact that
T2
f is continuous, we obtain, by Lemma 2.5, that f ◦ →r   f (y). Note that by
definition yRf (y) and →r(n)Rf (→r(n)) for all n ∈ dom(→r). This proves that R
is a topological simulation.	 
Theorem 4.7 For any two f-isomorphic M1 and M2 and any state x1 ∈ X1
we have M1, x1 ↔top M2,f (x1).
Proof. As f : X1 → X2 is a continuous transition morphism, we have that R = {(x1,f (x1)) | x1 ∈ X1} is a topological simulation as is proven in the proof of the previous theorem. Similarly, as f −1 : X2 → X1 is a continu- ous transition morphism, we have that S = {(x2,f −1(x2)) | x2 ∈ X2} is a topological simulation. As S = R−1, R is a topological bisimulation. 

Extreme Topologies
In the previous section, we have seen that the topological notions of simu- lation and bisimulation are stronger than their non-topological counterparts. An interesting question is whether there are topologies for which the notions coincide. We investigate this question for both the indiscrete and the discrete topology.
Indiscrete Topology
We show that for labelled transition systems with indiscrete topologies, called indiscrete labelled transition systems, the topological and non-topological no- tions of (bi-)simulation coincide provided that, non-topologically speaking,


each state has a (bi-)similar state in the other labelled transition system. The reason for these provisions is that by moving from normal (bi-)simulation to topological bisimulation, some states become relevant (the accumulation points) that might not have been relevant in the non-topological setting. We require that for such states at least there is a related state in the other la- belled transition system. This is captured by the notions of simulation and bisimulation on labelled transition systems as given in Definition 2.8.
Theorem 5.1 For indiscrete M1 and M2 such that M1 is simulated by M2, we have that for any x1 ∈ X1 and x2 ∈ X2: if M1, x1 “ M2, x2, then M1, x1 “top M2, x2.
Proof. We prove that R' = {(y1, y2) ∈ X1 × X2 |M1, y1 “ M2, y2 } is a topo- logical simulation with x1R'x2. Note that R' is a simulation. Now, consider arbitrary y1 ∈ X1 and y2 ∈ X2 such that y1R'y2. Let (r→1, →σ) be a run of M1
T1
and z1 ∈ X1 such that r→1(0) = y1. Suppose that r→1  z1. Now, we have to
prove the existence of a run (r→2, →σ) of M2 and z2 ∈ X2 such that r→2(0) = y2,
T2	'	'	'
r→2  z2, z1R z2, and r→1(n)R r→2(n) for all n ∈ dom(r→1). From y1R y2 and the
fact that R' is a simulation, we obtain the existence of a run (r→2, →σ) such that r→2(0) = y2 and r→1(n)R'r→2(n) for all n ∈ dom(r→1). Furthermore, a special prop- erty of T1 is that every sequence accumulates to every point in X1. Because M1 is simulated by M2 we have the existence of a z2 ∈ X2 such that z1R'z2.
T2
The indiscrete topology on X2 then guarantees that r→2  z2. This concludes
the proof.	 
Theorem 5.2 For indiscrete M1 and M2 such that M1 is bisimilar to M2, and for any x1 ∈ X1 and x2 ∈ X2: if M1, x1 ↔ M2, x2, then M1, x1 ↔top M2, x2.
As a direct consequence of the previous two theorems and Theorem 4.2, we have that for indiscrete labelled transition systems, the non-topological and topological notions coincide (of course with the same provisions).
Discrete Topology
In this section, we consider labelled transition systems where the state space is structured by a discrete topology, hence the name discrete labelled transition systems. For discrete labelled transition systems, we do not have that the non- topological and topological notions coincide! Consider the labelled transition system and the relation R on the states of the labelled transition system given in Figure 5.
The relation R = {(1, n), (n, 1) | n ∈ N∧n > 1}, as depicted (suggestively) in the figure, is a witness for the following non-topological facts:



Fig. 5. A labelled transition system.

state 1 is simulated by state 2, i.e., 1 “ 2;
state 2 is simulated by state 1, i.e., 2 “ 1;
the states 1 and 2 are bisimilar, i.e., 1 — 2.
Note that the bisimilarity of states 1 and 2 does not follow immediately from the simulations 1 “ 2 and 2 “ 1 because for bisimilarity the relation witnessing the simulations have to be each others inverse. The weaker equivalence “
∩ “−1 is called similarity in the literature [11] and it does not have this requirement.
Observe that we are now comparing states from the same labelled tran- sition system. Hence, there can be no misunderstanding about the labelled transition system from which the states originate. Hence, we omit the labelled transition system from the notations.
Now, consider the topological notions under the assumption that the state space X of this labelled transition system is structured by means of the discrete topology TD(X)= 2X. State 2 is still simulated by state 1: 2 “top 1. This is due to the following observations. State 2 has no infinite runs that accumulate. Hence, the infinite run does not have to be mimicked by such a run from state
1. In this setting, however, state 1 is not simulated by state 2: 1 /“top 2. State 1 has an infinite run that accumulates in state 1. Hence, state 2 should also have such a run and moreover it should accumulate in a state related to state 1. However, the run from state 2 does not accumulate at all. The same observations lead to the conclusion that state 1 and state 2 are not topologically bisimilar: 1 ~top 2.
Traditionally, in computer science, systems are assumed to be discrete and
finite. Above we have shown that the assumption that the state spaces are structured by means of the discrete topology is not sufficient for concluding that the topological and non-topological notions coincide. Based on this, the reader might be tempted to believe that for labelled transition systems with a finite state space and an arbitrary topology, the non-topological and topo- logical notions coincide. Again, this is not the case. Consider the labelled


	

Fig. 6. Labelled transition system with a finite state space.
transition system depicted in Figure 6. The state space of this labelled tran- sition system is finite: X = {1, 2, 3, 4, 5, 6}. Considering the non-topological notions, we observe that the states 2 and 3 simulate each other and are bisim- ilar.
Assume that the topology on this state space is given by the basis
B = {{1, 2}, {3, 4}, {5}, {6}}.
The open sets from this basis with more than one element are clustered in the figure. Now, due to the topological structure imposed on the state space, there is an infinite run (→x, →σ) with, for n ∈ N, →x(n) = 2 and →σ(n) = a that accumulates in state 1. In order for state 2 to be topologically simulated by state 3, this must mean that there is also an infinite run (→y, →σ) with →y(0) = 3 that accumulates in a state that is related to state 1. The only candidates for this accumulation are the states 3 and 4. But, neither of these can be related to state 1, as state 1 can execute the action b and states 3 and 4 cannot. A similar reasoning shows that state 3 cannot be simulated by state
2. Therefore, we have 2 /“top 3 and 3 /“top 2. As a consequence, the states are also not topologically bisimilar.
If the state space of a discrete labelled transition system is finite, however, the notions of (bi-)simulation and topological (bi-)simulation coincide.
Theorem 5.3 For discrete M1 and ﬁnite M2, we have that for all x1 ∈ X1
and x2 ∈ X2: M1, x1 “top M2, x2 if and only if M1, x1 “ M2, x2.
Proof. The proof that the topological simulation implies the ordinary simu- lation follows from Theorem 4.2. It suffices to prove that ordinary simulation implies topological simulation. Suppose that M1, x1 “ M2, x2 is witnessed by the simulation Y. We prove that Y is also a topological simulation. Thereto,
T1
let (→r, →σ) be a run of M1 with →r(0) = x1 and let y ∈ X. Suppose that →r  y.
Let, for all n ∈ dom(→σ), σ→n : N → Σ be defined by σ→n(k)= →σ(k) for all k < n, and undefined otherwise. Hence, dom(σ→n)= [0, n).
First, we show, by induction on the natural number n, that there exists


a run (r→n, σ→n) of M2 of length n with r→n(0) = x2 such that for all k ≤ n we have →r(n)Yr→n(n). For n = 0, we need to prove →r(0)Yr→0(0). Using →r(0) = x1, r→0(0) = x2, and x1Yx2, this follows immediately. Now, suppose there exists a run (r→n, σn) such that r→n(0) = x2 and →r(k)Yr→n(k) for all k ≤ n (the induction
→σ(n)
hypothesis). As →r(n)Yr→n(n), →r(n) → →r(n + 1) and Y is a simulation relation
→σ(n)
we have the existence of z ∈ X2 such that r→n(n) → z and →r(n + 1)Yz. Define
rn→+1 by rn→+1(i)= r→n(i) for all i ≤ n, rn→+1(n + 1) = z, and undefined otherwise. Then we have the existence of a run (rn→+1, σn→+1) of M2 such that →r(k)Yrn→+1(k) for all k ≤ n + 1.
All that remains to be proven is the existence of an accumulation point
T2
z ∈ X2 such that →y   z and yYz. Obviously, under the discrete topology,
if →y is finite, the last element is the accumulation point. On the other hand,
T1
if →y is infinite, then, using the facts that →r   y and that T1 is the discrete
topology, we find that y itself occurs infinitely often in →r. Furthermore, each of those occurrences is bisimilar to the corresponding position in the sequence
→y. As there are only finitely many different states, at least one of the states bisimilar to y occurs infinitely often. Hence, it is an accumulation point, say z, which obviously satisfies yYz.	 
Theorem 5.4 For discrete and ﬁnite M1 and M2, we have that for all x1 ∈ X1
and x2 ∈ X2: M1, x1 —top M2, x2 if and only if M1, x1 — M2, x2.
Proof. The theorem follows immediately from the previous theorem. 

Conclusive remarks
We may conclude that the general agreement, that bisimulation is the strongest notion of equivalence of interest on labelled transition systems, common since the work of van Glabbeek [11], holds, as long as there is no topological struc- ture on the state space. When phenomena like Zeno-behavior in hybrid sys- tems are a reason to introduce and study accumulation points of sequences, a topological structure on the state space is a prerequisite. Choosing such a topology is a creative process, although it is often guided by knowledge of the application domain. In this paper, we have given definitions of topological simulation and bisimulation to answer this need. Amongst others, we have shown that a discrete topology results in the normal bisimulation for finite state spaces, while other topologies make it possible to differentiate between infinite behaviors, like Zeno-behavior.
The notion of topological bisimulation considered in this paper is only capable of discriminating labelled transition systems based on first-order ac-


cumulation points. In [7], a reformulation of topological (bi-)simulation is presented that also deals with higher-order accumulation points. A crucial difference between that research and the research presented in this paper is that in [7] the concept of a run (over natural numbers) is replaced by the concept of a hybrid run (over ordinal numbers).
The type of labelled transition systems considered in this paper is rather limited. In the literature, labelled transition systems not only have a transition relation but also one or more predicates are defined on the state space to indi- cate, for example, initial and final states. Future research may be concerned with how to deal with predicates on labelled transition systems in general.
Bu¨chi automata and other types of automata on infinite words [15] are usually equipped with one or more acceptance sets and a more sophisticated notion of acceptance of infinite words. We conjecture that, neglecting the fact that Bu¨chi automata only consider infinite words, a topology can be used to encode the acceptance set in Bu¨chi automata. The Bu¨chi acceptance set then forms the basis of the topology. Topological bisimulation in itself captures the infinite aspects of Bu¨chi automata. It is a stronger notion than language equivalence for infinite words. Further research is needed to substantiate those claims.

Related Work
In the literature from the field of computer science, structure on sets is usually added by giving a metric. In [6,14,13], this metric is defined on the state space, while [2,4] use a metric to define structure on the labels. Fur- thermore, this was, to our knowledge, never used with respect to bisimulation equivalence.
In [4], both the state space and the label space are endowed with metrics. The purpose is in proving operational models defined in terms of labelled transition systems equal to denotational semantics.
In [8], bisimulation is characterized using a specific (Alexandroff) topology as continuity of the transition relation. In other words, the author shows that the Alexandroff topology as a structure fits normal bisimulation. We, on the other hand, adapt the notion of bisimulation to take the topological structure of the state space into account.
In [1], the state space of a Kripke model for propositional modal logic is extended with a topology. This topology defines the accessibility relation between points in the model and hence defines the meaning of the modal operators. Consequently, bisimulation is also defined in terms of the open sets of this topology. These open sets play the role of our transition relations, rather than being an additional structure on the state space. The relation


between their notion of bisimulation and our notion of topological bisimulation is not clear yet.
In [21], also, a relation between transition systems and topology is studied. Amongst others, a definition is given for the limit of a sequence of transition systems. The strength of this work is that it allows for reasoning about ap- proximate equality between systems. Still, this is a different approach to limits than the one we have chosen in this paper.

Acknowledgement
We acknowledge Jan Friso Groote, Ka Lok Man, MohammadReza Mousavi, Erik de Vink, Marc Voorhoeve, and Hans Zantema for interesting discussions and reading preliminary versions of this paper. Their comments have been very helpful.

References
M. Aiello, J. van Benthem, and G. Bezhanishvili. Reasoning about space: The modal way. Technical Report PP-2001-18, University of Amsterdam, 2001.
J.W. de Bakker and E.P. de Vink. Control Flow Semantics. Foundations of Computing Series. MIT Press, 1996.
B. B´erard and C. Picaronny. Accepting Zeno words: a way toward timed refinements. Acta Informatica, 37(1):45–81, 2000.
F. van Breugel. A theory of metric labelled transition systems. In S. Andima, B. Flagg,
J. Itzkowitz, Y. Kong, R. Kopperman, and P. Misra, editors, Papers on General Topology and Applications: 11th Summer Conference at the University of Southern Maine, volume 806 of Annals of the New York Academy of Sciences, pages 67–87, Gorham, August 1995. The New York Academy of Sciences.
P.J.L. Cuijpers and M.A. Reniers. Topological (bi-)simulation. Technical Report CSR 02-04, Technische Universiteit Eindhoven (TU/e), Eindhoven, The Netherlands, 2002.
P.J.L. Cuijpers, M.A. Reniers, and A.G. Engels. Beyond Zeno-behaviour. Technical Report CSR 01-04, Technische Universiteit Eindhoven (TU/e), Eindhoven, The Netherlands, 2001.
P.J.L. Cuijpers, M.A. Reniers, and W.P.M.H. Heemels. Hybrid transition systems. Technical Report CSR 02-12, Technische Universiteit Eindhoven (TU/e), Eindhoven, Netherlands, 2002.
J.M. Davoren.	Topologies, continuity and bisimulations.	Theoretical Informatics and Applications, 33(4/5):357–381, 1999.
J. Dugundji. Topology. Allyn and Bacon, Inc., Boston, 1966.
R. Engelking. General Topology. Heldermann Verlag, 1989.
R.J. van Glabbeek. The linear time – branching time spectrum I. The semantics of concrete sequential processes. In J.A. Bergstra, A. Ponse, and S.A. Smolka, editors, Handbook of Process Algebra, chapter 1, pages 3–99. Elsevier Science Publishers B.V., Amsterdam, 2001.
T.A. Henzinger. The theory of hybrid automata. In Proceedings of the 11th Annual IEEE Symposium on Logic in Computer Science (LICS 1996), pages 278–292. IEEE Computer Society Press, 1996.


K.H. Johansson, M. Egerstedt, J. Lygeros, and S. Sastry. On the regularization of Zeno hybrid automata. System and Control Letters, 38:141–150, 1999. Special issue on Hybrid Systems.
R. Kennaway, J.W. Klop, M.R. Sleep, and F.-J. de Vries. Transfinite reductions in orthogonal term rewriting systems. In R.V. Book, editor, Proceedings of the Fourth International Conference on Rewriting Techniques and Applications, volume 488 of Lecture Notes in Computer Science, pages 1–12, Como, Italy, April 1991. Springer-Verlag.
J. van Leeuwen, editor. Handbook of Theoretical Computer Science, volume B: Formal Models and Semantics. Elsevier Science Publishers B.V., Amsterdam, 1990.
R. Milner. A Calculus of Communicating Systems, volume 92 of Lecture Notes in Computer Science. Springer-Verlag, 1980.
M.W. Mislove. Algebraic posets, algebraic cpo’s and models of concurrency. In G.M. Reed,
A.W. Roscoe, and R. Wachter, editors, Topology and Category Theory in Computer Science, pages 75–111. Clarendon Press, 1991.
D.M.R. Park.  Concurrency and automata on infinite sequences.  In P. Deussen, editor,
Proceedings 5th GI Conference, volume 104 of Lecture Notes in Computer Science, pages 167–
183. Springer-Verlag, 1981.
W. Salmon, editor. Zeno’s Paradoxes. Bobbs-Merril, Indianapolis, 1970.
A.J. van der Schaft and J.M. Schumacher. An Introduction to Hybrid Dynamical Systems, volume 251 of Lecture Notes in Control and Information Sciences. Springer-Verlag, London, 2000.
M. Ying. Topology in Process Calculus: Approximate Correctness and Inﬁnite Evolution of Concurrent Programs. Springer-Verlag, 2001.
E.N. Zalta, editor. Stanford Encyclopedia of Philosophy. The Metaphysics Research Lab, CSLI, Stanford University, 2001. http://plato.stanford.edu.
