Egyptian Informatics Journal 24 (2023) 100405








Decomposition-based interval multi-objective evolutionary algorithm with	 adaptive adjustment of weight vectors and neighborhoods
Yaqing Jin, Zhixia Zhang, Liping Xie, Zhihua Cui ‚àó
Shanxi Key Laboratory of Big Data Analysis and Parallel Computing, Taiyuan University of Science and Technology, Taiyuan, 030024, Shanxi, China


A R T I C L E	I N F O	A B S T R A C T

	

Keywords:
Decomposition-based multi-objective evolutionary algorithm
Interval parameter Weight vector Neighborhood adjustment
Interval multi-objective optimization problems (IMOPs) are one of the most critical optimization problems in practical applications. However, compared to deterministic multi-objective optimization problems (MOPs), there are few researchs addressing IMOP. In addition, the uncertainty contained in the problem makes the distribution of the population more challenging. Therefore, this paper proposed a decomposition-based interval multi- objective evolutionary algorithm with adaptive adjustment of weight vectors and neighborhoods (IMOEA/D- AWN). Firstly, an interval sparsity level function (ISL) is constructed to measure the density of individuals, and a comprehensive ranking of interval sparsity ranking and interval uncertainty ranking is proposed. For the purpose of improving the distribution of the population while reducing its uncertainty, based on the above comprehensive ranking, a new adaptive adjustment weight vector strategy guided by interval elite population is designed. Besides, an adaptive adjustment neighborhoods strategy is designed. This strategy adjusts individuals‚Äô neighborhood size according to the number of iterations to improve the eÔ¨Éciency of evolution. Finally, the IMOEA/D-AWN is evaluated on 17 interval benchmark test problems and a collaborative computation oÔ¨Ñoading optimization problem, and compared with four advanced multi-objective evolutionary algorithms with interval parameters (IMOEAs). Experimental results show that this algorithm performs well in convergence, diversity, and uncertainty.





Introduction

In real-world applications, there exist various optimization problems with multiple conflicting objectives [1‚Äì3], which are known as MOPs [4‚Äì6]. Unlike single objective optimization problems, the purpose of solving MOPs is to find a set of optimal solutions which form its Pareto Front in the objective space [7‚Äì9]. Multi-objective evolutionary algo- rithms (MOEAs) can effectively solve MOPs [10‚Äì12], which are divided into three main categories: Based on Pareto [13], decomposition-based [14], and indicator-based [15]. Among them, MOEA/D is the classic decomposition-based algorithm, which decomposes MOPs into multi- ple single-objective subproblems through a uniformly distributed set of weight vectors and optimizes these subproblems collaboratively. At present, there are various improved MOEA/D algorithms that can solve MOPs well [16]. However, in real production, the parameters of the ob- jective function are usually uncertain due to various factors. Uncertain parameters can be represented as fuzzy numbers, random variables, in- tervals, etc. However, the membership function of fuzzy numbers and the distribution function of random variables are diÔ¨Écult to obtain in
advance, while the interval information of uncertain parameters is eas- ier to obtain [17]. Moreover, fuzzy numbers and random variables can be transformed to interval numbers by confidence level and cut set [18], respectively, and the interval numbers have a clear operation criterion. Therefore, IMOPs are receiving increasing attention from researchers in various fields.
Currently, there are two main approaches to solve IMOPs through evolutionary algorithms (EAs). The first method mainly transforms IMOPs into deterministic MOPs using information such as the mid- point, width, and endpoints of the interval, and solves the transformed problem using MOEAs. Zhang et al. [19] transformed IMOPs into deter- ministic MOPs by using the midpoint and width of the interval values as new objective functions. Fu et al. [20] considered the radius and midpoint of the initial objective functions as two objectives of equal im- portance and solved them using MOEA. Liu et al. [21] used nonlinear interval number programming to convert each objective function con- taining uncertain information to a deterministic single-objective prob- lem, and solved the nested optimization problems using two genetic algorithms. Li et al. [22] established the interval multi-objective opti-



* Corresponding author.
E-mail addresses: yaqingjin1@163.com (Y. Jin), 15634969919@163.com (Z. Zhang), 2001052@tyust.edu.cn (L. Xie), cuizhihua@tyust.edu.cn (Z. Cui).

https://doi.org/10.1016/j.eij.2023.100405
Received 30 June 2023; Received in revised form 15 September 2023; Accepted 21 September 2023
Available online 3 October 2023
1110-8665/¬© 2023 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Artificial Intelligence, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



mal dispatch of microgrid (MODMG) model to meet the requirements of economy, security of microgrid and power quality, and transformed the interval MODMG into MOPs by simultaneously optimizing the mid- point of each interval objective function. Guo et al. [23] designed a knowledge-induced MOEA/D to solve IMOPs by using the midpoint of the interval value as the objective. Recently, He et al. [24] used the mid- point of the interval as the objective value and reacted the robustness of the solution with the length of the interval. And designed Knee-based and Interval-based MOEA to solve portfolio optimization problem. Al- though the above approaches are simple and easy to implement, they can lead to the loss of interval information, resulting in some differences between the transformed problem and the original problem. Moreover, different transformation methods will produce different MOPs, and the final solution obtained can hardly reflect the uncertainty of the prob- lem.
The second approach designs IMOEAs by defining interval Pareto dominance relation for the direct solving of IMOPs. This method can avoid losing uncertain information and obtain more accurate solutions. Therefore, this paper mainly focuses on the second approach. Limbourg et al. [25] first defined interval Pareto dominance relation (IPDR) based
on interval order relation ‚âªùêºùëÉ , and calculated interval crowding dis-
tance (ICD) by defining the degree of contribution of individuals to the
hypervolume using interval upper and lower limits, but this approach has high computational complexity. Jiang et al. [26] defined the in- terval probability dominance relationship, subdivided the positions of two intervals into six cases, and provided specific calculations for each. Gong et al. [17] proposed an IPDR using the interval confidence level, and defined an ICD using the midpoint and volume of each interval, and overlap between the two intervals, proposing the II-MOEA algo- rithm. On this basis, Sun et al. [27] designed interval Pareto dominance relationship based possibility degree lower bound through confidence
threshold parameter ùõæ . The algorithm can obtain different Pareto fron-
tiers by adjusting the value of ùõæ , which has greater flexibility. Gong et
al. [28] developed the theory of preference polyhedron for the IMOP
and based on this, they designed the sorting of individuals. Zhang et al.
[29] analyzed the features of ùúá [30] and P [31] in sorting intervals and
proposed an integrated sorting assistance NSGA-II for IMOPs. Zhang
et al. [32] chose interval confidence as the interval ranking method and proposed interval cooperative multiobjective artificial bee colony algorithm. Sun et al. [18] proposed the IMOMA-II by integrating the lo- cal search into the existing IMOEA. The fitness function of individuals is calculated using the contribution of individuals to the hypervolume and the uncertainty of individuals in the local search stage, so that the individuals with excellent convergence, diversity and uncertainty are more likely to enter the next generation population. Liu et al. [33] defined a new interval crowding distance by the ratio of the distance between two intervals on a certain objective and the distance between the maximum and minimum intervals on this objective, and modified the interval confidence dominance method to compare each individual
the DI-ùúáMOGA algorithm. Yi et al. [34] used parallel cell entropy to in the external elite population and evolution population, and proposed
subdivide the evolutionary state to three stages, and designed different interval dominance relationships for the different stages, in addition to interval crowding distances that take into account the shape of the in- tervals.
In recent years, Sun et al. [35] proposed adaptive interval confi- dence and developed a probabilistic wind power interval prediction model. Xu et al. [36] proposed a hybrid search IMOEA that includes modified gray wolf optimization and pattern search. Zhang et al. [37] modified the calculation of interval distance in interval confidence level and proposed the InMaOEA. Chen et al. [38] proposed a modified IPDR, and ICD calculation with respect to the mixture of real values and intervals, and proposed the interval multi-objective particle swarm op- timization algorithm. Xu et al. [39] designed an angle-based ICD (ICA), providing a new way to calculate ICD. They also defined interval knee point to help decision-makers make decisions, and proposed an inter-
val elite selection strategy to generate better performance offspring. However, this algorithm is for bi-objective optimization problems only, corresponding ICA still needs to be designed when solving tri-objective optimization problems. The above algorithms all use the framework of Pareto-based IMOEAs. However, for the most IMOPs, particularly for over-concave, over-convex or discontinuous Pareto Fronts (PFs), it is hard for the above algorithms to produce the well distributed irregular PFs due to the lack of a diversity maintained mechanism for irregu- lar PFs. To solve the above problems, Gan et al. [40] proposed a new IMOEA within the framework of MOEA/D, which explored a new way of solving IMOPs. They integrate various interval Pareto dominance relationships and propose an integrated comparison strategy. Besides, an adaptive reference vectors adjustment strategy was proposed using interval crowding distance, which significantly improves the computa- tional eÔ¨Éciency, and the convergence and diversity of the population. However, the uncertain information introduced brings more challenges to the distribution of the population, and the uncertainty of the inter- val conflicts with diversity and convergence, so the algorithm does not significantly reduce the uncertainty of the population.
Currently, a large number of studies have focused on interval Pareto
dominance relations, in contrast to few studies that have considered designing interval diversity maintenance strategies [39,41]. However, the uncertainty negatively affects population diversity [40], and, for most IMOPs, especially for problems with irregular PFs, it is diÔ¨Écult to generate optimal solution sets that are uniformly distributed on the true PFs because the majority of present IMOEAs lack diversity mainte- nance methods designed for irregular PFs. IMOEA/D [40] significantly improved the diversity of the population, however, it did not signif- icantly reduce the uncertainty of the population as the uncertainty conflicted with the diversity and convergence. Thus, to better balance the three performances of IMOEA, i.e., to improve diversity and con- vergence while reducing population uncertainty, this paper proposes a decomposition-based IMOEA with adaptive adjustment of weight vec- tors and neighborhoods (IMOEA/D-AWN). In order to increase diversity while reducing population uncertainty, we introduced uncertainty in- formation when adjusting the weight vectors, and designed an adaptive weight vector adjustment strategy based on the dual ranking of inter- val sparsity ranking and interval uncertainty ranking. In addition, in order to ensure that the population converges to the true PFs, an ex- ternal archive is constructed, denoted as the interval elite population (IEP), which stores the interval Pareto non-dominant individuals. And IEP is merged with the current population prior to each adjustment of the weight vectors, picking the most appropriate solution for each of the weight vectors in order to update the current population, which indi- rectly guides the updating of the weight vectors. Furthermore, since the objective values of IMOPs are interval values rather than exact values, comparing the size of the interval values and deriving inter- val non-dominated solutions increases the computational cost, and in decomposition-based IMOEAs, a fixed-size neighborhood produces the computational resources [42]. Based on the above reasons, we design an adaptive neighborhood adjustment strategy to improve evolutionary eÔ¨Éciency.
The main contributions of this paper are as follows:

To improve the population distribution and reduce uncertainty, a dual-ranking adaptive weight vector adjustment strategy based on interval sparsity ranking and interval uncertainty ranking is pro- posed. The weights of the rankings are also discussed in detail. In addition, to ensure population convergence on the true PF, an IEP is established to update the contemporary population before adjust- ing the weight vector.
In order to improve the evolutionary eÔ¨Éciency and avoid wast- ing computational resources, an adaptive neighborhood adjustment strategy is proposed. In the early stage of evolution, individuals have large neighborhoods to accelerate global search. As the evo- lution progresses, the neighborhood size gradually decreases to


ensure local search. Reduced runtime with guaranteed algorithm performance.

The remainder of this paper is structured as follows: Section 2 in- troduces some relevant definitions. Section 3 elaborates the adaptive weight vectors adjustment strategy, the adaptive neighborhoods adjust- ment strategy, and the framework of the proposed algorithm. Experi- mental results and analysis are presented in Section 5. Finally, the main conclusions and future works of this paper are presented.

Preliminaries

Model of IMOPs


Generally, a minimization IMOP is described as [33]: min ùëì (ùë•, ùëê)= (ùëì1(ùë•, ùëê), ùëì2(ùë•, ùëê), ..., ùëìùëÄ (ùë•, ùëê))
ùë†.ùë°.  ùë• = [ùë•1, ùë•2, ..., ùë•ùëë ]‚àà ùëÜ‚äÜ ùëÖùëõ,
ùëê = [ùëê1, ùëê2, ..., ùëêùëë ]ùëá , ùëêùëó = [ùëêùëó , ùëêùëó ], ùëó = 1, 2, ..., ùêæ	(1)
where ùë• = [ùë• , ùë• , ..., ùë• ] ‚àà ùëÜ‚äÜ ùëÖùëõ is a d-dimensional decision variable. S


Fig. 1. Reference hypervolume schematic.

Where ùëò0 ‚àà 1, 2, ..., ùëÄ , if ùë•ùëñ does not dominate ùë•ùëó and ùë•ùëó does not dominate ùë•ùëñ , then ùë•ùëñ and ùë•ùëó do not dominate each other, denoted as
ùë•ùëñ ‚à• ùë•ùëó .

1  2	ùëë

is a d-dimensional decision space. ùëì (ùë•, ùëê) ‚ààŒ© ‚äÜ ùëÖ is the M-dimensional objective space. ùëìùëò(ùë•, ùëê) = [ùëìùëò(ùë•, ùëê), ùëìùëò(ùë•, ùëê)], ùëò = 1, 2, ..., ùëÄ is the k-th
component of an IMOP, and c is a vector with K parameters and its
j-th component ùëêùëó is an interval value, where ùëìùëò(ùë•, ùëê) and ùëìùëò(ùë•, ùëê) are


Definition 5. Interval distance [43]: The interval distance between two intervals is calculated as [43]:
ùê∑(ùê¥, ùêµ)= ‚àö[ùëÄ (ùê¥)‚àí ùëÄ (ùêµ)]2 + 1 [ùë§2(ùê¥)+ ùë§2(ùêµ)] ‚àí 2 [ùë§(ùê¥ ‚à© ùêµ)]2	(6)

Definitions of interval

Definition 1. Interval [34]: One interval can be expressed as A = [ùê¥, ùê¥], where ùê¥ < ùê¥ ‚àà R. ùê¥ and ùê¥ are the lower limit and the upper limit,
interval      when       ùê¥     =     ùê¥. respectively. In particular, A can regress to a point and called a point

Definition 2. Interval Arithmetic Operations [40]: For two intervals A
and B
ùê¥ + ùêµ = [ùê¥ + ùêµ, ùê¥ + ùêµ], ùê¥ ‚àí ùêµ = [ùê¥ ‚àí ùêµ, ùê¥ ‚àí ùêµ],
ùõæùê¥ = [ùõæùê¥, ùõæùê¥], ùõæ > 0; ùõæùê¥ = [ùõæùê¥, ùõæùê¥], ùõæ < 0.	(2)

Definition 3. Interval confidence level [17]: For two intervals A and
B, their minimum interval is expressed as K = [ùêæ, ùêæ], where ùêæ =
ùëöùëñùëõ{ùê¥, ùêµ, ùê¥, ùêµ} and ùêæ = ùëöùëñùëõ{{ùê¥, ùêµ, ùê¥, ùêµ}‚àñùêæ}}, respectively. The inter-
val confidence level of A min than B is defined as [17]:
where ùëÄ (ùê¥) = (ùê¥ + ùê¥)‚àï2 is the midpoint of the interval, ùë§(ùê¥) = (ùê¥ ‚àí ùê¥)‚àï2
is the width of the interval A. ùë§(ùê¥ ‚à© ùêµ) is the intersection of the interval
A and B. This definition integrates the deviation of each point in the
number of two intervals and the relationship between the positions of the interval numbers.

Interval-valued Chebyshev scalar function

IMOEA/D decomposes the IMOP into multiple subproblems and then co-optimizes the solutions of these subproblems to obtain the Pareto-optimal solutions of the IMOP [40].
As the red rectangle in Fig. 1 shows, each individual is a hypercube in objective space since the value of the function for each objective in IMOPs is an interval value. The blue curve in this figure is PF, and the blue rectangle at the bottom left is the reference hypercube, it consists of the minimum upper limit and minimum lower limit val-
ues of each objective in the population, as ùëç = ([ùëç1 , ùëç1], [ùëç2, ùëç2]) in
Fig. 1, where ùëç = (ùëç1, ùëç2) is the lower reference point and ùëç = (ùëç1, ùëç2)
is the upper reference point. Therefore, for the IMOPs, the reference

ùëÉ (ùê¥ ‚â§ ùêµ)= 	ùëë(ùêµ, ùêæ)	
ùëë(ùê¥, ùêæ)+ ùëë(ùêµ, ùêæ)
where ùëë(ùêµ, ùêæ) is the distance between B and K, calculated as [17]:
‚àö (ùêµ ‚àí ùêæ)2 + (ùêµ ‚àí ùêæ)2

hypercube is ùëç = ([ùëç1, ùëç1], .., [ùëçùëÄ , ùëçùëÄ ]), where ùëçùëò = minùëìùëò(x, ùëê), ùëçùëò =
minùëìùëò(x, ùëê), ùëò = 1, 2, ...ùëÄ . The minimization Interval-valued Tchebycheff
Scalar Function is defined as [40]:
ùëîùëñùë°ùëê(x|ùë§, ùëç)= ùëöùëéùë• {ùë§ùëò(ùëìùëò(x, ùëê)‚àí ùëçùëò)}	(7)

The calculation of ùëë(ùê¥, ùêæ) is similar to Equation (4).
Definition 4. IPDR based on the lower limit of possibility degree ùõæ [27]:
ùõæ ‚àà [0.5, 1] is the threshold, if ùëÉ (ùê¥ ‚â§ ùêµ) ‚â• ùõæ , the probability that ùê¥ is less than or equal to ùêµ can be considered to be no less than ùõæ . For two solutions ùë•ùëñ and ùë•ùëó , on any ùëò-th objective, ùëò, 1 ‚â§ ùëò ‚â§ ùëÄ , we can say that the ùë•ùëñ interval dominates ùë•ùëó , denoted as ùë•ùëñ ‚â∫ùêºùëÅ ùë•ùëó , if all of the following
conditions are met:
‚àÄùëò, ùëÉ (ùëìùëò(ùë•ùëñ, ùëê)) < ùëù(ùëìùëò(ùë•ùëó , ùëê)) ‚â• ùõæ
‚àÉùëò0, ùëÉ(ùëìùëò(ùë•ùëñ, ùëê)) < ùëù(ùëìùëò(ùë•ùëó , ùëê)) > ùõæ	(5)
where, ùë§ùëó ‚àà ùëäùëâ is the weight vector. ùëç is a reference hypercube and
ùëçùëò = [ùëçùëò, ùëçùëò] is its ùëò-th component.

Proposed approach

In this paper, we propose an IMOEA/D-AWN to improve the con- vergence and diversity of the population while reducing its uncertainty. To achieve this task, we propose an adaptive adjustment of the weight vectors (WVs) strategy based on the comprehensive ranking of interval sparsity ranking and interval uncertainty ranking to improve the diver- sity and uncertainty performance of the population. And establish an IEP to update the current population to enhance the performance of


update the contemporary population using IEP is shown in (Line 12-16). The most suitable individuals in the IEP and the current population are
selected for each weight vector, i.e., if an individual ùë¶ in the IEP can
terval value than an individual ùë• in the current population ùëÉ , replace cause the scalar function of one weight vector to obtain a smaller in-
ùë• with ùë¶ (Line 13-14), and subsequent operations to adjust the WVs are
based on this updated population.










Fig. 2. The real sparse area and discontinuous part of the discontinuous PF.

the population, and to further guide the adjustment of the WVs. In ad- dition, to improve evolutionary eÔ¨Éciency, an adaptive adjustment of neighborhood strategy from global to local search is proposed.
Algorithm 1 Adaptive adjustment of weight vectors strategy.

Input: Population ùëÉ , offspring population ùëÇ, weight vectors ùëäùëâ , interval elite pop- ulations ùêºùê∏ùëÉ , max size of IEP: ùëõùêº ùê∏ùëÉ , the maximal number of subproblems adjusted:
ùëõùë¢ùë†.
Output: Adjusted reference vectors ùëäùëâ , adjusted population ùëÉ .
1: if is empty (ùêºùê∏ùëÉ ) then // Update the interval elite populations ùêºùê∏ùëÉ
2:		Merging population ùëÉ with ùëÇ and selecting the interval non-dominated solu- tions as updated ùêºùê∏ùëÉ ;
3: else
4:		Merging ùêºùê∏ùëÉ with ùëÇ and selecting the interval non-dominated solutions as updated ùêºùê∏ùëÉ ;
5: end if
6: if ùêºùê∏ùëÉ > ùëõùêº ùê∏ùëÉ then
7:	for ùëñ =1 ‚à∂ ùëÅ do
8:	Calculate the overall ranking ùëÖ(ùëñ) of individual ùëñ;
9:	end for

Adaptive adjustment of weight vectors strategy
10:	Remove the worst ranked ùêºùê∏ùëÉ
11: end if
‚Äì ùëõùêº ùê∏ùëÉ solutions from the ùêºùê∏ùëÉ ;


Since uniformly distributed WVs do not ensure that uniformly dis- tributed optimal solutions are produced on PFs with spikes and low tails [44], and, for irregular PFs, uniform WVs can adversely affect the population distribution [40]. Therefore, to ensure the distribution of population, the WVs need to be adjusted according to their sparsity. In addition, the introduction of uncertain information has a negative impact on the distribution of the population [40]. Therefore, individ- ual uncertainty should also be taken into account when adjusting the weight vector. On the basis of the above considerations, we design an adaptive adjustment weight vectors strategy based on interval spar-
sity ranking and interval uncertainty ranking. Individuals with worse
12: for ùëó =1 ‚à∂ ùëÅ do // Update the current population by IEP
13:	if ùëîùëñùë°ùëê ùë¶ ùë§ùëó , ùëç ‚â§ùêºùëÅ ùëîùëñùë°ùëê ùë• ùë§ùëó , ùëç , ùë¶ ‚àà ùêºùê∏ùëÉ , ùë• ‚àà ùëÉ then //Refer to Eq. (7)
14:	Set ùë• = ùë¶;
15:	end if
16: end for
17: for ùëñ =1 ‚à∂ ùëÅ do //Deleting overcrowded weight vectors
18:	Calculate the overall ranking ùëÖ(ùëñ) of individual ùëñ in updated population;
19: end for
20: Delete the worst ranked ùëõùë¢ùë† individuals from the updated population;
21: Delete the ùëõùë¢ùë† weight vectors from the ùëäùëâ corresponding to the worst ranked ùëõùë¢ùë†
individuals;
22: while Remain ùë§ < ùëÅ do //Add new weight vectors to the sparse region. 23:	for ùëü =1 ‚à∂ ùëõùë¢ùë† do
24:	Generate  a  new  weight  vector  ùë§‚Ä≤ = ùë§  1‚àí 0.5 |ùëÖùëíùëöùëéùëñùëõ ùë§|‚àí1  +

sparsity ranking indicate that their neighborhood distribution is more
( 	‚àí1 )
|ùëÖùëíùëöùëéùëñùëõ ùë§|

ùë§ùëü+1
. ùëÖùëíùëöùëéùëñùëõ ùë§	;
ùëÖùëíùëöùëéùëñùëõ ùë§

dense and that individual is a dense individual, and vice versa. Individ- uals with worse uncertainty ranking have larger interval uncertainty.
25:	end |for
= ùëÖùëíùëöùëéùëñùëõ ùë§ +ùëü;

Therefore, we will delete the weight vectors corresponding to those in- dividuals with both poor sparsity ranking and uncertainty ranking, and generate new weight vectors using the weight vectors corresponding to
tion  better  distributed  on  the  true  PF  (ùëÉùêπùëáùëüùë¢ùëí ). individuals with excellent comprehensive ranking to make the popula-
However, for some discontinuous PFs (as shown in Fig. 2), more computational resources are usually required to find truly sparse area rather than pseudo-sparse area, i.e., discontinuous parts [45]. In order
to make the population distribute to the ùëÉùêπùëáùëüùë¢ùëí , IEP is established to
update the contemporary population and thus guide the deletion and



26:	ùëÖùëíùëöùëéùëñùëõ ùë§
27: end while
28: Add the solutions of the new weight vectors to the current population ùëÉ ;
29: end



The adaptive adjustment strategy of the WVs based on comprehen- sive ranking is elaborated in the following. First, the interval sparsity level function is designed according to the interval objective function
value, and for the ùëñ-th subproblem, its interval sparsity level is calcu-
lated as follows:
‚àèùëÄ ùê∑(ùëìùëò(ùë•ùëñ‚àí1, ùëê), ùëìùëò(ùë•ùëñ, ùëê)) + ‚àèùëÄ ùê∑(ùëìùëò(ùë•ùëñ, ùëê), ùëìùëò(ùë•ùëñ+1 , ùëê))

in the discontinuous part of PF [45], when the population converges to a certain level, the individuals in the IEP are considered as interval non- dominated solutions. This approach can ensure that the algorithm does not add too many new subproblems in discontinuous part. It also helps generate new subproblems in truly sparse regions so individuals can
distribute in the ùëÉùêπùëáùëüùë¢ùëí . For regular PFs, due to the use of IEP which
contains well distributed interval non-dominated solutions to update
the current population, the diversity and convergence of the popula- tion can be further enhanced. The way to update the IEP is shown in Algorithm 1 (Line 1-11). Initially, the IEP is empty, so the interval non-
dominated solutions among the current population ùëÉ and the offspring
population ùëÇ are selected as the IEP. In the later stage of evolution,
the IEP and offspring population ùëÇ are selected as the updated IEP. If the IEP is not empty, so the interval non-dominated solutions among the size of the IEP ( ùêºùê∏ùëÉ ) is larger than the predefined maximum IEP size ùëõùêº ùê∏ùëÉ , those individuals with the worst comprehensive ranking are removed from the IEP so that the |ùêºùê∏ùëÉ | is equal to ùëõùêº ùê∏ùëÉ . The way to
Where ùê∑(‚àó, ‚àó) is the same as Eq. (6). ùë•ùëñ‚àí1 and ùë•ùëñ+1 are the two nearest individuals to individual ùë•ùëñ , and ùëÄ is the number of objective func- tions. From this formula, we can know that the larger the ùêºùëÜùêø value is,
the larger the interval distance between the current individual and its neighboring individuals, and the sparser the individual and the corre- sponding weight vector of that individual. The interval sparsity ranking
ùëÖùêºùëÜùêø is obtained by sorting the ùêºùëÜùêø in descending order so that the
sparse subproblems get the top ranking, while those dense ones get the
bottom ranking.
Since IMOPs contain uncertain information: intervals, which leads to different solutions having overlapping parts in the objective space, it has a negative influence on the distribution of individuals [40]. There- fore, the uncertainty of individuals needs to be considered when adjust- ing the weight vectors. The interval uncertainty is calculated as follows:
ùëÄ
ùêº (ùëñ)=   (ùëìùëò(ùë•ùëñ, ùëê)‚àí ùëìùëò(ùë•ùëñ, ùëê))	(9)
ùëò=1



The product of the interval lengths of an individual ùë•ùëñ on every ob- jective is its uncertainty, and the smaller the value of ùêº (ùëñ), the smaller
the uncertainty of that individual. For uncertainty problems, decision makers tend to prefer solutions that can lower the uncertainty of the
algorithm. Therefore, the interval uncertainty ranking ùëÖùêº is obtained
by sorting ùêº in ascending order so that those solutions with small
uncertainty get the top ranking, while those individuals with larger un-
certainty get the bottom ranking.
Based on the above two rankings, we can obtain a comprehensive
Since the size of neighborhoods is continuously adjusted with the num- ber of iterations (Line 2), the neighborhoods of each individual are also changing (Line 5).

Algorithm 2 Adaptive adjustment of neighborhoods.

Input: Maximum number of iterations ùê∫ùëöùëéùë• , maximum neighborhood size ùëáùëöùëéùë• , neigh- bors of each weight vector ùêµ (ùëñ) = ùëñ1 , ùëñ2 , ‚Ä¶ , ùëñùëá
Output: New neighborhood size ùëá ‚Ä≤, new neighborhoods ùêµ‚Ä≤ (ùëñ).
1: while ùê∫< ùê∫ùëöùëéùë• do

ranking for each subproblem, which is calculated as:
ùëÖ(ùëñ)= ùõºùëÖùêºùëÜùêø(ùëñ)+ (1 ‚àí ùõº)ùëÖùêº (ùëñ)	(10)
2:	ùëá ‚Ä≤ = ùëáùëöùëéùë• √ó ùëí
3: end while
4: for ùëñ =1 ‚à∂ ùëÅ do
‚àí(  ùê∫  )
ùê∫ùëöùëéùë•

Where ùõº is the weight, the larger ùõº is, the more the comprehensive
is influenced by interval uncertainty. The setting and effectiveness of ùõº ranking is influenced by interval sparsity, and vice versa, the more it
will be discussed in Section 4.
The larger the ùëÖ value of the subproblem, the more dense and un-
certain it is. The denser it is, the worse the diversity of the subproblem.
tion of the population. Therefore, the ùëõùë¢ùë† subproblems with the largest The larger the uncertainty, the more negative impact on the distribu-
ùëÖ values need to be deleted, and the number of remaining WVs is noted as Remain ùë§ , Remain ùë§ = ùëÅ ‚àí ùëõùë¢ùë†, and new ùëõùë¢ùë† WVs are inserted in the sparse region. Since those subproblems with the smallest ùëÖ values
are relatively sparse and have small uncertainty, i.e., the negative im-
necessary to generate new weight vectors ùë§‚Ä≤ using these subproblems. pact on the population distribution is relatively small. Therefore, it is
of the neighboring ranked weight vectors as ùëü and ùëü +1 respectively, Select the best ranked weight vectors in turn, denote the order numbers
5:	ùêµ‚Ä≤ (ùëñ) = ùëñ1, ùëñ2, ‚Ä¶ , ùëñùëá ‚Ä≤ ;
6: end for





Algorithm flow

Algorithm 3 IMOEA/D-AWN.

Input: Maximum number of iterations ùê∫ùëöùëéùë• , maximum neighborhood size ùëáùëöùëéùë• , ratio of iterations to evolve ùëüùëéùë°ùëíùëíùë£ùëúùëô , period of updating the weight vector ùë§ùëéùëî, population size ùëÅ , interval elite population ùêºùê∏ùëÉ =‚àÖ.
Output: Population ùëÉ .
1: Initialization population ùëÉ0, uniformly distributed weight vectors ùëäùëâ ‚áí
ùë§1 ; ùë§2 ;‚Ä¶; ùë§ùëÅ , the ùëá nearest neighbors of each weight vector ùêµ(ùëñ) = ùëñ1 , ùëñ2 , ‚Ä¶, ùëñùëá , the reference hypercube ùëç;
2: ùê∫ = 1;
3: ùêºùê∏ùëÉ = ‚àÖ;
4: while ùê∫< ùê∫ùëöùëéùë• do

and then add a new weight vector ùë§‚Ä≤ between ùë§ùëü and ùë§ùëü+1 . Since the rank difference between them is 1, the newly inserted weight vector ùë§‚Ä≤ is closer to the better ranked weight vector ùë§ùëü :
5:	for ùëñ =1 ‚à∂ ùëÅ do
6:	Perform evolutionary operation in neighborhood ùêµ(ùëñ) produce offspring
ùëÇ(ùëñ);
7:	Update the reference hypercube ùëç;

ùë§‚Ä≤ = ùë§ùëü
(1‚àí 0.5
ùëÖùëíùëöùëéùëñùëõ ùë§ ‚àí1 )
|ùëÖùëíùëöùëéùëñùëõ ùë§|
+ ùë§ùëü+1
(0.5
ùëÖùëíùëöùëéùëñùëõ ùë§ ‚àí1 )
|ùëÖùëíùëöùëéùëñùëõ ùë§|
(11)
8:	for ùë•ùëó ‚àà ùêµ(ùëñ) do
9:	if ùëîùëñùë°ùëê (ùëÇ(ùëñ) ùë§ , ùëç) ‚â§
10:	Set ùë•ùëó = ùëÇ(ùëñ);

ùêºùëÅ
ùëîùëñùë°ùëê (ùë• ùë§ , ùëç) then // Refer to Eq. (7)

where ùë§ùëü is the weight vector with rank ùëü, ùë§ùëü+1 is the weight vector
with rank ùëü + 1, and ùë§‚Ä≤ is the newly generated weight vector. ùëõùë¢ùë† is the
number of adjusted WVs. Algorithm 1 is the pseudo-code for adaptively
adjusting the WVs. Lines 17-21 show the steps to delete the weight vectors, and lines 22-27 are the steps to add new weight vectors.

Adaptive adjustment of neighborhoods
Since the size of the neighborhood has an influence on the algo- rithm‚Äôs performance [44], specifically, larger neighborhoods usually increase the diversity of the population but also increase the complexity of the algorithm. Conversely, smaller neighborhoods reduce the com- plexity but tend to slip into local optima. The neighborhood size of
11:	end if
12:	end for
13:	end for
14:	ùê∫ + +;
15:	Adaptively update the neighborhood size ùëá and the neighborhoods ùêµ; // Refer
to Algorithm 2
16:	if ùê∫ ‚â• ùëüùëéùë°ùëíùëíùë£ùëúùëô ‚àó ùê∫ùëöùëéùë•
17:		Update the ùêºùê∏ùëÉ by the offspring ùëÇ based on interval non-dominance re- lations and overall ranking ùëÖ; // Refer to Algorithm 1
18:	if ùëöùëúùëë(ùê∫, ùë§ùëéùëî) == 0 then
19:	Adjust the weight vector ùëäùëâ ; // Refer to Algorithm 1
20:	Update the neighborhood ùêµ(ùëñ);
21:	end if
22:	end if
23: end while

MOEA/D always remains consistent throughout the evolutionary pro- cess, which has a negative impact on the complexity and performance
24: ùëÉ ‚Üê ùëÉùê∫
;
ùëöùëéùë•

of the algorithm.
In order to reduce the waste of computing resources and improve evolutionary eÔ¨Éciency, a neighborhoods adaptive adjustment strategy is designed. At the early stage of evolution, the setting of a large neigh- borhood is needed to accelerate the global convergence of the popula- tion. With the progression of evolution, the size of the neighborhood needs to be gradually reduced to ensure local convergence. Such a setting can eÔ¨Éciently allocate computing resources and improve evo- lutionary eÔ¨Éciency. The size of the neighborhood is adjusted according to the following formula:
‚Ä≤	‚àí(  ùê∫  )
tion ùëÉ0 of size ùëÅ and a set of uniformly distributed weight vectors ùëäùëâ Algorithm 3 is the pseudo-code for IMOEA/D-AWN. First, a popula- are initialized, the neighborhoods of each individual ùêµ(ùëñ) and the initial reference hypercube ùëç are determined, the initial number of iterations
is set to 1, and IEP is the empty set (Line 1-3). Then, evolutionary op- erations are performed for each individual in the population in turn,
and the newly produced offspring ùëÇ(ùëñ) is compared with ùëç to update
ùëç (Line 6-7). Subsequently, the interval scalar function values of the offspring ùëÇ(ùëñ) and the neighborhoods of the current individual ùêµ(ùëñ) are
calculated, and the interval confidence level is used to determine the magnitude between them to update the neighborhoods of the current

ùëá = ùëáùëöùëéùë• √ó ùëí
ùê∫ùëöùëéùë•
(12)
individual (Line 8-12). After each iteration, the neighborhood size ùëá is

where ùëá ‚Ä≤ is the adjusted neighborhood size, which is adaptively ad- justed after each iteration. ùëáùëöùëéùë• = 3 ùëá , ùëá is the size of the neighborhood,
ùëáùëöùëéùë• is the maximum neighborhood size. ùê∫ is the current number of
iterations, and ùê∫ùëöùëéùë• is the maximum number of iterations. The pseudo-
code for adaptive adjustment of neighborhood size is in Algorithm 2.
of iterations ùê∫ meets the pre-set ratio of iterations to evolve ùëüùëéùë°ùëíùëíùë£ùëúùëô , adaptively updated (Line14-15). After multiple iterations, if the number
the IEP is updated: the interval non-dominated solutions in the cur- rent population and offspring are integrated into the IEP. If the size of the IEP exceeds the predetermined size, the poorly ranked individuals


are removed from the IEP using interval sparsity ranking and uncer-
‚àö‚àëùëõ
ùëë2

ùêºùê∏ùëÉ
ùëõùêº ùê∏ùëÉ . Then, merge the updated IEP with the current population, se-
lect the most suitable individual for each weight vector as the new
meets the adjustment period ùë§ùëéùëî (Line 18), execute the adaptive WVs current population (Line 17). When the current number of iterations
neighborhoods (Line 19-20). Finally, when the ùê∫ùëöùëéùë• is reached, the op- adjustment strategy to adjust the WVs and update their corresponding
timal population is output (Line 24).

Computational complexity

val individuals using the interval Chebyshev scalar function is ùëÇ(ùëÄùëá ), In the proposed IMOEA/D-AWN. The complexity of evaluating inter- where ùëÄ is the number of objectives and ùëá is the neighborhood size;
the worst case computational complexity of interval non-dominated
ùëÉùêπùëáùëüùë¢ùëí
where ùëë2 denotes the minimum Euclidean distance from solution

ùë•ùëñ on ùëÉùêπùëáùëüùë¢ùëí to the solution in the approximate Pareto optimal so- lution set, and ùëÉùêπùëáùëüùë¢ùëí denotes the number of solutions in ùëÉùêπùëáùëüùë¢ùëí .
This metric can reflect the two performances of convergence and diversity of the population. The smaller the value, the better.
HV-metric
The hypervolume of the approximate Pareto solution set X of IMOP (Eq. (1)) is calculated as [49]:
ùêª (ùëã)= [ùêª (ùëã), ùêª (ùëã)] = Œõ(	ùë¶ ‚àà ùëÖùëõ ‚à£ ùëì (ùë•, ùëê) ‚â∫ùêºùëÅ ùë¶ ‚â∫ùêºùëÅ ùëì (ùë•ùëüùëíùëì , ùëê))
ùë•‚ààùëã
(16)
where Œõ means the Lebesgue measure; ‚â∫ùêºùëÅ is the interval Pareto

sorting when update the interval elite populations is ùëÇ(ùëÄùëÅ2), where
ùëÅ is the size of the population; the complexity of both removing and
dominance relation; and ùë•
ùëüùëíùëì
refers to the reference point. ùêª (ùëã)

adding the weight vectors are ùëÇ(ùëõùë¢ùë†ùëÄùëÅ 2), where ùëõùë¢ùë† is the number of
hood is ùëÇ(ùëáùëÄùëÅ 2). To sum up the belongings, the maximum complexity weight vectors to be adjusted; the complexity of updating the neighbor- of IMOEA/D-AWN is ùëÇ((ùëõùë¢ùë† + ùëá )ùëÄùëÅ2).

Experiments

In this section, the performance of the proposed IMOEA/D-AWN is validated. Four advanced IMOEAs were selected for comparison,
namely, II-MOEA [17] DI-ùúáMOGA [33], InMaOEA [37] and IMOEA/D
[40]. All algorithms were evaluated on 17 interval benchmark test prob-
lems.

Test problems

WFG1-9 [46], DTLZ1-4 [47], MaF1-4 [48] test problems are used to evaluate the performance of IMOEA/D-AWN. The number of objectives in the above problems is 3, and the number of variables in WFG1-9, DTLZ2-4 and MaF1-4 is 12, that in DTLZ1 is 7.
Since the objective value of the test problem is deterministic, while the objective values of IMOPs are interval values, it is necessary to add
an imprecision factor ùõø [49] to expand the deterministic values into
interval values. For the tri-objective problem [40]:
ùë†ùëñùëõ(10ùúã	ùë• )‚àï4
‚é¢	‚é•
is the worst-case hypervolume and ùêª (ùëã) is the best-case hypervol- ume. The midpoint of ùêª (ùë•) is referred to as the hypervolume [40].
Imprecision-metric
The performance of the population in uncertainty is reflected by Imprecision, which is the sum of the interval lengths of all individ- uals in the Pareto optimal solution set for all objectives [49]. The smaller the Imprecision indicator, the better.

Comparison algorithms

II-MOEA [17]: II-MOEA is a classic IMOEA based on Pareto dom- inance. Interval Pareto dominance relation based interval confi- dence level sorts individuals into different interval Pareto fronts. Then calculate the interval crowding distance according to the lo- cation and volume of the individual in the objective space. And select the optimal solution set based on the above two strategies.
DI-ùúáMOGA [33]: DI-ùúáMOGA employs the interval dominance re-
lation in [17] to compare the individuals from the evolutionary
population and the external elite population. Modified the interval crowding distances to take into account the maximum and min- imum interval values for the entire population at each objective when calculating the crowding distances of individuals.
InMaOEA [37]: InMaOEA is a variant of II-MOEA. Modified the calculation of the interval confidence level and defined the interval Pareto dominance relation based on the modified interval confi-

ùë†ùëñùëõ(40ùúã  ùëñ ùë•ùëñ)‚àï4
where ùë•ùëñ is the ùëñ-th variables, ùëñ = 1, 2, ..., ùëë.
The original optimization problem is represented as ùëìùëó (ùë•), ùëó = 1, 2, ..., ùëÄ . And the perturbed interval-valued function is denoted as
ùëìùëó (ùë•, ùõø):
ùëìùëó (x, ùõøùëó )= min ùëìùëó (x), ùëìùëó (x)+ ùõøùëó
ùëìùëó (x, ùõøùëó )= max ùëìùëó (x), ùëìùëó (x)+ ùõøùëó
Corresponding interval benchmark test problems are denoted as IWFG1-9, IDTLZ1-4, and IMaF1-4.

Performance metrics

The following three performance metrics are used to evaluate the convergence, diversity, and uncertainty performance of each algorithm.

(1) IGD-metric
as ùëÉùêπùëáùëüùë¢ùëí of each uncertainty problem. The IGD metric is computed Pareto-optimal Front of each deterministic benchmark test problem as the average Euclidean distance between ùëÉùêπùëáùëüùë¢ùëí and the midpoint
of the interval objective value of the approximate Pareto optimal solution set [17]:
based on hypervolume and overlap degree.
IMOEA/D [40]: An adaptive reference vector-based interval multi- objective evolutionary algorithm in the framework of MOEA/D. Decompose IMOP into multiple subproblems with interval param- eters, and developed an ensemble scheme for evaluating interval individuals. Then, adaptively adjusted reference vectors based on the interval crowding distance.

Parameter setting
To make sure the experiment is fair, the population size ùëÅ was set
algorithms. The neighborhood size ùëá was set to 10 for our algorithm to 105, and the maximum number of iterations was set to 900 for all
is equal to ùëÅ . Referring to [43], ratio of iterations to evolve ùëüùëéùë°ùëíùëíùë£ùëúùëô is and IMOEA/D based on the original paper [40], and the number of WVs set to 0.8, and the adjustment period ùë§ùëéùëî is set to 100, the ratio of updated weight vectors is set to 0.05, and ùëõùë¢ùë† = 0.05 ‚àó ùëÅ . The crossover
and mutation probabilities of II-MOEA, InMaOEA, and IMOEA/D are set
crossover and mutation probabilities of DI-ùúáMOGA are set to 0.8 and to 0.9 and 0.1, respectively, according to the original papers, and the
0.05, respectively, according to the original paper [33]. The generation for starting adjusting reference vectors of IMOEA/D is set to half of the maximum generation according to the original paper [40].












		
Fig. 3. Influence of parameter ùõº to IGD metric. (a) IWFG. (b) IMaF. (c) IDTLZ.


Fig. 4. Influence of Parameter ùõº to Imprecision metric. (a) IWFG. (b) IMaF. (c) IDTLZ.


Experimental results and analysis
EÔ¨Äects of diÔ¨Äerent values of ùõº
This subsection will evaluate the parameters ùõº in the comprehensive ranking. The ùõº was set to 0.1-0.9, and to avoid experimental accidents,
each group was run 30 times independently. The values of IGD and Im- precision obtained by IMOEA/D-AWN were recorded, and the average values were calculated. Fig. 3 and 4 show the IGD and Imprecision val-
ues obtained on each test problem when ùõº is taken to different values,
respectively.
As mentioned in Section 3, ùõº is the weight of interval sparsity level ranking, and (1 ‚àí ùõº) is the weight of interval uncertainty ranking. The larger ùõº is, the greater the impact of interval sparsity level on an indi-
vidual‚Äôs comprehensive ranking, and vice versa, the greater the impact of interval uncertainty. From Fig. 3, we can see that the value of IGD
keeps decreasing as ùõº gradually increases, i.e., the convergence and di-
value of ùõº can improve these two performances of the algorithm. While versity of the algorithm gradually become better, indicating that a large
ing as the weight of individual uncertainty ranking (1 ‚àí ùõº) gradually from Fig. 4, we can see that the value of Imprecision keeps increas-
becomes worse, indicating that a small value of ùõº can reduce the un- decreases, i.e., the uncertainty performance of the algorithm gradually
certainty of the population. Since the introduced uncertain information has a negative impact on the distribution of the population, to minimize the impact of uncertainty on the distribution of the population and to
reduce the uncertainty of the population at the same time, ùõº is set to
0.8 here, i.e., the weight of interval sparsity is set to 0.8 and the weight
of interval uncertainty is set to 0.2.

EÔ¨Äectiveness of Adaptive Adjustment of Weight Vectors
We designed interval uncertainty ranking ùëÖùêº in the weight vectors
adaptive adjustment strategy to enhance the uncertainty performance
of the population. And we established an IEP to guide the update of the current population and thus guide the adjust of the WVs to enhance the
Table 1
The Imprecision index of two cases.
Problem	IMOEA/D-AWN (no ùëÖùêº )	IMOEA/D-AWN

IWFG1	1.1345e+1 (3.87e+0) -	8.3446e+0 (3.29e+0) IWFG2	9.3305e+0 (2.40e+0) -	7.2199e+0 (1.31e+0) IWFG3	1.1393e+1 (1.83e+0) -	8.8723e+0 (1.38e+0) IWFG4	9.8941e+0 (1.66e+0) -	8.2720e+0 (1.19e+0) IWFG5	8.1637e+0 (1.63e+0) -	6.9317e+0 (1.19e+0) IWFG6	9.4213e+0 (1.78e+0) -	8.0609e+0 (1.59e+0) IWFG7	8.6821e+0 (1.03e+0) -	7.7405e+0 (1.10e+0) IWFG8	1.0830e+1 (2.34e+0) -	8.9499e+0 (1.43e+0) IWFG9	1.1610e+1 (1.81e+0) -	1.0105e+1 (1.71e+0) IMaF1	9.0347e+0 (2.04e+0) -	7.2441e+0 (1.02e+0) IMaF2	6.5240e+0 (2.13e+0) -	4.3213e+0 (9.44e-1) IMaF3	3.3769e+0 (2.52e+0) -	1.8819e+0 (8.50e-1) IMaF4	1.6106e+1 (4.62e+0) -	1.3612e+1 (3.24e+0) IDTLZ1	 2.0590e+0 (2.01e+0) -	1.0365e+0 (9.32e-1) IDTLZ2	 6.5894e+0 (1.38e+0) -	5.7611e+0 (1.05e+0) IDTLZ3	 5.1836e+0 (2.58e+0) -	3.9413e+0 (2.17e+0) IDTLZ4       6.4361e+0 (3.13e+0) =       5.8363e+0 (1.77e+0)
+/-/=	0/16/1




convergence and diversity of the population. The following experiments were conducted to verify the effectiveness of the above strategies:
EÔ¨Äectiveness of ranking of interval uncertainty ùëÖùêº
To verify whether the introduction of ùëÖùêº can reduce the uncertainty
of the optimal solution, the following experiments were conducted. Ta-
metrics in two cases: one case is the algorithm without the ùëÖùêº , and the ble 1 shows the experimental results of IMOEA/D-AWN on Imprecision other case is the algorithm with the ùëÖùêº . To avoid the randomness of the
experimental results, each algorithm runs 30 times independently, the
the optimal value is shown in bold. Wilcoxon signed rank test with 5% mean and standard deviation of Imprecision are listed in Table 1, where
Imprecision metric indicate that IMOEA/D-AWN without ùëÖùêº performs level of significance is performed, the symbols ‚Äò+‚Äô, ‚Äò-‚Äô, and ‚Äò=‚Äô for the

The IGD index of two cases.	The IGD index of two cases.



Table 3
The HV index of two cases.
Table 5
The HV index of two cases.




statistically better, worse, and comparably than IMOEA/D-AWN. From this table, it can be seen that IMOEA/D-AWN achieved optimal values
without ùëÖùêº in 16 test instances. For IDTLZ4, the values of Impreci- in all testing problems, and significantly outperformed IMOEA/D-AWN
IMOEA/D-AWN is still slightly better than IMOEA/D-AWN without ùëÖùêº . sion for the two cases are not statistically significantly different, but Therefore, designing the uncertainty ranking ùëÖùêº in the weight vectors
adaptive adjustment strategy can effectively reduce the uncertainty of the optimal solution.
EÔ¨Äectiveness of interval elite population IEP
This part will verify whether the strategy of IEP-guided weight vector adjustment can improve the convergence and diversity of the optimal solutions. Tables 2 and 3 show the experimental results of IMOEA/D-AWN on IGD and HV metrics in two cases, respectively. From Table 2, we can see that, for the IGD metric, IMOEA/D-AWN is signifi- cantly better than IMOEA/D-AWN without IEP on all 17 test instances. From Table 3, we can see that IMOEA/D-AWN is significantly superior to IMOEA/D-AWN without IEP on 16 test cases. In the IWFG1, there is no statistically significant difference between the HV values of the two cases. Nevertheless, the HV of IMOEA/D-AWN is slightly better than that of IMOEA/D-AWN without IEP in this problem. Therefore, using interval elite populations to guide the adjustment of the weight vectors can effectively improve the convergence and diversity of the optimal solutions.
EÔ¨Äectiveness of adaptive adjustment weight vectors to solve IMOPs
In order to verify the effectiveness of the adaptive adjustment weight vector strategy for solving IMOPs, the following comparison experi- ments are conducted. The algorithm that does not adjust the weight vectors is denoted as IMOEA/D-AWN (no AW). Table 4 shows the IGD of IMOEA/D-AWN in two cases: one is the algorithm without AW and the other is the algorithm using AW. From this table, IMOEA/D-AWN is better than IMOEA/D-AWN without adaptive weight vector adjust- ment on 16 test instances. In only one problem IDTLZ4, the IGD of IMOEA/D-AWN is slightly inferior to the algorithm without weight vector adjustment, but they are not significantly different at the statis- tical level. Table 5 shows the HV values of two cases, IMOEA/D-AWN achieved optimal values on 14 test instances, in the IWFG6 and IMaF2 problems, IMOEA/D-AWN did not achieve an optimal value, but there was no statistically significant difference between the two cases again. On the IDTLZ4 problem, the HV of IMOEA/D-AWN is inferior to that of the algorithm without weight vector adjustment. Therefore, the weight vector adjustment strategy proposed in this paper improves the con- vergence and diversity of the IMOEA which deals with IMOPs. Table 6 shows the Imprecision values of two cases, IMOEA/D-AWN achieved optimal values in 10 test problems, and IMOEA/D-AWN performed slightly worse than the algorithm without adaptive weight vectors ad- justment in the five problems: IWFG3, IWFG4, IWFG6, IWFG7, IWFG9, but there was no significant difference at the statistical level. For the

The Imprecision of two cases.



Table 7
The runtime of two cases.



IWFG8 and IMaF1 problems, IMOEA/D-AWN performs worse than the algorithm without weight vector adjustment, which may be due to the
ùõº is uniformly set to 0.2 during the weight vector adjustment, which
may be improved by adjusting the value of the ùõº for the different prob-
lems, but as a whole, the population imprecision of IMOEA/D-AWN is
better than that of the algorithm without weight vector adjustment.

EÔ¨Äectiveness of Adaptive Adjustment of Neighborhoods to solve IMOPs
This section will verify whether the adaptive adjustment neighbor- hood strategy (AN) can accelerate convergence and improve computa- tional eÔ¨Éciency. Table 7 shows the running times of IMOEA/D-AWN in two cases: one is the algorithm without AN and the other is the al- gorithm using AN. From this table, we can see that the running time of IMOEA/D-AWN is significantly smaller than IMOEA/D-AWN without AN in all 17 test problems. This shows that the adaptive adjustment of the neighborhood strategy can significantly reduce the runtime of the algorithm.
Table 8 shows the number of optimal values (denoted as Rank 1) and suboptimal values (denoted as Rank 2) obtained by IMOEA/D-AWN on the IGD and Imprecision metrics in two cases. From Table 8, we can see that, for the IGD metric, IMOEA/D-AWN without AN achieves opti- mal values in 9 of the 17 test problems, while IMOEA/D-AWN achieves optimal values in 8 problems. For the Imprecision metric, IMOEA/D- AWN without AN achieves the optimal value in 8 test problems, and
The number of Rank1-2 obtained by two cases.



IMOEA/D-AWN achieves the optimal value in 9 problems. It shows that convergence, diversity, and uncertainty are similar in both cases. Based on the above experimental results, the adaptive adjustment neighbor- hood strategy can guarantee the convergence, diversity, and uncertainty of the population while shortening the running time of the algorithm. Therefore, AN can accelerate the convergence of the population and improve computational eÔ¨Éciency.

Experimental Results Compared with Other Algorithms
[17], DI-ùúáMOGA [33], InMaOEA [37] and IMOEA/D [40] in this sub- The performance of IMOEA/D-AWN is compared with II-MOEA
of IGD, HV, and ùêº indicators over 30 independent runs of IMOEA/D- section to verify its effectiveness. The mean and standard deviation AWN and compared algorithms II-MOEA, DI-ùúáMOGA, InMaOEA, and
IMOEA/D are reported in Tables 9, 10, and 11, respectively. The op- timal values are shown in bold. Wilcoxon signed rank test is also per- formed.
Table 9 is the IGD values of different algorithms. From this table,
instances, DI-ùúáMOGA and IMOEA/D both achieved optimal values on it can be seen that IMOEA/D-AWN achieved optimal values on 13 test
two test instances each, II-MOEA and InMaOEA did not achieve opti- mal values, and IMOEA/D-AWN clearly outperformed the other four algorithms. WFG1 has irregular PF, which features a mixed and sharp
of DI-ùúáMOGA and IMOEA/D in dealing with this problem, but not tail, and the mean IGD of IMOEA/D-AWN is slightly larger than that
significantly different at the statistical level. On the IMaF3 problem, IMOEA/D-AWN performs worse than IMOEA/D on the IGD metric, but significantly better than the remaining three algorithms. MaF4 features a multi-modal and badly scaled PF, IMOEA/D-AWN handles this prob-
lem inferiorly to DI-ùúáMOGA and IMOEA/D on IGD, but better than
II-MOEA and InMaOEA. DTLZ4 has a concave and biased PF. In deal-
ing with this problem, the IGD values of IMOEA/D-AWN are all larger than those of the other four algorithms, so this problem poses a chal- lenge for IMOEA/D-AWN. However, IMOEA/D-AWN performs best for other problems with complex features, such as IWFG2-9, IMaF1-2, and IDTLZ1-3, where IWFG2 is a discontinuous PF, IWFG3, IMaF2 are irreg- ular PFs, and these irregular PFs can pose challenges to the algorithm, but IMOEA/D-AWN can deal with these problems well. This means that IMOEA/D-AWN has better convergence and diversity for most test prob- lems compared to other algorithms.
achieved the optimal value on 10 test instances, DI-ùúáMOGA on two test Table 10 is the HV index of different algorithms. IMOEA/D-AWN
instances, and IMOEA/D on five test instances. II-MOEA and InMaOEA did not achieve the optimal value. This implies that IMOEA/D-AWN has better comprehensive performance for most of the test problems compared to other algorithms. The HV values of IMOEA/D-AWN are
inferior to DI-ùúáMOGA for IWFG1, IMaF4 and IDTLZ1 problems, but
IMOEA/D-AWN outperforms DI-ùúáMOGA for the remaining 14 prob-
lems. IMOEA/D outperforms IMOEA/D-AWN on IWFG9, IMaF3-4, and
IDTLZ1,4 problems, IMOEA/D performs similarly to IMOEA/D-AWN on IDTLZ3 problems, but IMOEA/D-AWN outperforms IMOEA/D on the other 12 problems. Thus, for the HV metric, IMOEA/D-AWN signifi- cantly outperforms IMOEA/D. In addition, IMOEA/D-AWN outperforms II-MOEA and InMaOEA for all problems.
Table 11 is the Imprecision index of different algorithms. From this table, we can see that IMOEA/D-AWN achieves optimal values for all the tested problems, especially for some irregular PF problems, e.g.,


Table 9
The IGD index of different algorithm.






Table 10
The HV index of different algorithm.






Table 11
The Imprecision index of different algorithm.



		






Fig. 5. The boxplot of Imprecision on WFG series benchmark optimization problems. (a) IWFG1. (b) IWFG2. (c) IWFG3. (d) IWFG4. (e) IWFG5. (f) IWFG6. (g) IWFG7. (h) IWFG8. (I) IWFG9.


WFG1 has an irregular PF features sharp tail and mixed, WFG2 has dis- continuous PF [50], WFG3 has a degenerate PF, which is also irregular. MaF2 has concave irregular PF, MaF4 has badly-scaled and multi-modal PF [42]. This is due to the individual uncertainty that is taken into ac- count when designing the weight vector adaptive adjustment strategy. Fig. 5 is the boxplot of Imprecision on IWFG series benchmark opti- mization problems. From Fig. 5, we can see that the Imprecision values of IMOEA/D-AWN are overall significantly smaller than the other four algorithms, and the Imprecision values of the solutions obtained by it are more aggregated, except for IWFG1. For IWFG1, although the Im- precision values obtained by IMOEA/D-AWN are not as aggregated as those of IMOEA/D, their average value is apparently smaller than its of IMOEA/D. Therefore, the uncertainty performance of IMOEA/D-AWN for the IWFG series problems is significantly superior to that of the other algorithms. Fig. 6 shows the boxplot of Imprecision on IMaF se- ries benchmark optimization problems. From this figure, we can know that the Imprecision values of IMOEA/D-AWN are all overall signifi- cantly smaller than the other four algorithms, except for IMaF3. As can be seen in Table 11, for IMaF3, the Imprecision values obtained by
IMOEA/D-AWN are not statistically significantly different from those obtained by IMOEA/D, but the average value of Imprecision achieved by IMOEA/D-AWN is still slightly better than that of IMOEA/D. Fig. 7 shows the boxplot of Imprecision on IDTLZ series benchmark optimiza- tion problems. From the figure, we can see that the Imprecision values of IMOEA/D-AWN are all overall significantly smaller than the other four algorithms except for IDTLZ3. From Table 11, we can see that for IDTLZ3, the imprecision values obtained by IMOEA/D-AWN and IMOEA/D are not statistically significantly different from each other, but the average value of Imprecision gained by IMOEA/D-AWN is still slightly better than that of IMOEA/D and significantly superior to the other three algorithms. These experimental results show the superior uncertainty performance of IMOEA/D-AWN.

Application to an uncertain collaborative computation offioading opti- mization problem
In order to further verify the performance of the proposed IMOEA/D- AWN, an uncertain collaborative computation oÔ¨Ñoading optimization problem is applied in this subsection. Uncertain collaborative compu-


	




Fig. 6. The boxplot of Imprecision on MaF series benchmark optimization problems. (a) IMaF1. (b) IMaF2. (c) IMaF3. (d) IMaF4.






Fig. 7. The boxplot of Imprecision on DTLZ series benchmark optimization problems. (a) IDTLZ1. (b) IDTLZ2. (c) IDTLZ3. (d) IDTLZ4.


Table 12
Comparisons between different algorithms on a real application.



tation oÔ¨Ñoading is a two-layer edge computing framework, including the terminal layer and edge layer. The edge layer deploys edge servers to provide strong computing power support for the entire framework, while the terminal layer deploys intelligent terminal devices. Each intel- ligent terminal device generates tasks and has limited computing power, which can be used for data transmission and computing tasks. Collabo- rative computing oÔ¨Ñoading aims to fully use the remaining computing and storage capacity of various edge servers, achieve task load balanc- ing, improve the computing response speed of terminal nodes, reduce the cost of the entire computing oÔ¨Ñoading system, and make more rea- sonable use of the computing resources of the entire system. Due to uncertain factors such as network bandwidth, which results in oÔ¨Ñoad- ing delay, load balancing, and energy consumption being uncertain, so it is an IMOP.
Modeling
An interval multi-objective model of collaborative computation of- floading optimization problems is formulated as follows:
min{[ùëá , ùëá ], [ùêø, ùêø], [ùê∂, ùê∂]}	(17)

where ùëá = [ùëá , ùëá ] represents the oÔ¨Ñoading delay, ùêø = [ùêø, ùêø] represents the Load balancing, and ùê∂ = [ùê∂, ùê∂] is the energy consumption.
is defined as ùëá = ùëáùëáùëüùëéùëõùë† + ùëáùê∏ùê∫, where ùëáùê∏ùê∫ is the execution time of the Interval oÔ¨Ñoading delay function: The latency of task oÔ¨Ñoading
servers. And the communication latency of task transfer is: ùëáùë°ùëüùëéùëõùë† = (ùê∑ùëÜ ‚ãÖ task, which includes the execution time of terminal equipment and edge
ùê∑ùëñùë†)‚àïùëÖ, where ùê∑ùëÜ is the size of the data for the task, and ùê∑ùëñùë† is the
Due to uncertain factors such as bandwidth, the transmission rate ùëÖ is distance between the terminal equipment and the unloading location. uncertain, denoted as ùëÖ = [ùëÖ, ùëÖ], therefore, ùëáùë°ùëüùëéùëõùë† is an interval. So the interval oÔ¨Ñoading delay function is ùëá = [ùëá , ùëá ], where
ùëá = ùëáùë°ùëüùëéùëõùë† + ùëáùê∏ùê∫, ùëá = ùëáùë°ùëüùëéùëõùë† + ùëáùê∏ùê∫	(18)

fined as ùêø = ùêøùëáùê∏ + ùêøùê∏ùëÜ , where ùêøùëáùê∏ is the load balancing function of Interval Load balancing function: The load balancing function is de-
terminal equipment:
and communication, respectively; in which ùê∂ùë°ùëüùëéùëõùë† = ùëáùë°ùëüùëéùëõùë† ‚ãÖ ùëê, where ùëê denote the energy consumption of terminal equipment, edge servers, is the communication energy consumption, ùëáùë°ùëüùëéùëõùë† = [ùëáùë°ùëüùëéùëõùë†, ùëáùë°ùëüùëéùëõùë†] is the
consumption  function  is  ùê∂  =  [ùê∂, ùê∂],  where communication latency of task transfer. Therefore, the interval energy
ùê∂ = ùê∂ùëá ùê∏ + ùê∂ùê∏ùëÜ + ùê∂ùë°ùëüùëéùëõùë†, ùê∂ = ùê∂ùëá ùê∏ + ùê∂ùê∏ùëÜ + ùê∂ùë°ùëüùëéùëõùë†	(22)
Results and analysis
by II-MOEA, DI-ùúáMOGA, InMaOEA, IMOEA/D, and IMOEA/D-AWN on Table 12 shows the values of HV and Imprecision that are obtained
the uncertain collaborative computation oÔ¨Ñoading optimization prob- lem. It is clear from this table that the HV and Imprecision values of IMOEA/D-AWN are all the best. This implies that IMOEA/D-AWN out- performs the other four algorithms in terms of convergence, diversity, and uncertainty. In terms of the HV metric, IMOEA/D-AWN ranks first, and the other algorithms are ranked as follows: IMOEA/D, InMaOEA,
II-MOEA, and DI-ùúáMOGA. For the Imprecision metric, IMOEA/D-AWN
MaOEA, DI-ùúáMOGA, and IMOEA/D. The ranking of some of the com- also ranks first, and the other algorithms are ranked as: II-MOEA, In-
parison algorithms has changed in these two metrics, while the ranking of IMOEA/D-AWN has not changed and ranks first. This implies that IMOEA/D-AWN can better balance convergence, diversity, and uncer- tainty. This is due to that not only interval sparsity but also impreci- sion is taken into account when adjusting the weight vectors, and the interval elite population is used to update the contemporary popula- tion, further improving the performance of the population. The above experimental results and analysis illustrate that IMOEA/D-AWN can effectively solve the uncertain collaborative computation oÔ¨Ñoading op- timization problem.

Conclusions

Designing IMOEAs that can enhance population convergence and diversity while reducing population uncertainty is important for solv- ing IMOPs. This paper proposes a decomposition-based IMOEA with
adaptive adjustment of weight vectors and neighborhoods. Firstly, an

‚àö‚àö ‚àëùëÄ (



ùëáùëÜùëö ‚àí ùëáùêøùëö)2
interval sparsity function is designed, and interval sparsity ranking and interval uncertainty ranking are given based on interval sparsity and






where ùëá ùëÜùëö = [ùëá ùëÜùëö, ùëá ùëÜùëö] is the size of the task uploaded to the terminal equipment, ùëáùêøùëö is the load limit of the terminal equipment, and ùëÄ is
the number of terminal equipments.
ùêøùê∏ùëÜ is the load balancing function of edge servers,
ùêº
ùëáùëÜ ‚àí ùëáùêø
‚àö ùëñ=1
interval elite population is designed. Besides, an adaptive adjustment neighborhoods strategy is designed. This strategy focuses on global search in the early stage of evolution and gradually focuses on local search as evolution proceeds, so as to allocate computing resources rea- sonably and enhance evolutionary eÔ¨Éciency. The experimental results demonstrate that the IMOEA/D-AWN can effectively reduce the uncer- tainty of the population and enhance its convergence and diversity.
However, the changes of the parameter in the comprehensive rank-






where ùëá ùëÜùëñ = [ùëá ùëÜùëñ, ùëá ùëÜùëñ] is the size of the task uploaded to the edge server, ùëáùêøùëñ is the load limit of the edge server, ùêº is the number of
edge servers.
Summarize, the interval load balancing function is ùêø = [ùêø, ùêø], where
ùêø = ùêøùëá ùê∏ + ùêøùê∏ùëÜ , ùêø = ùêøùëá ùê∏ + ùêøùê∏ùëÜ	(21)
function is defined as ùê∂ = ùê∂ùëáùê∏ + ùê∂ùê∏ùëÜ + ùê∂ùë°ùëüùëéùëõùë† , where ùê∂ùëáùê∏, ùê∂ùê∏ùëÜ and ùê∂ùë°ùëüùëéùëõùë† Interval energy consumption function: The energy consumption
rithm. Although we have selected its appropriate value through com- parative experiments, it may not be optimal. Therefore, how to obtain its optimal value deserves further research. And the number of itera- tions to start adjusting the weight vectors is fixed, different number of generations to start adjusting will have an impact on the performance of the algorithm. Therefore, how to adaptively determine this value deserves further research. Besides, IMOEA/D-AWN can be applied to practical applications to provide more high-quality options for decision makers. However, IMOPs with interval constraints are not uncommon



in the real world. Therefore, it is our future research direction to design an eÔ¨Écient IMOEA to solve the problems mentioned above.

Declaration of competing interest

No conflict of interest exists in the submission of this manuscript, and the manuscript is approved by all authors for publication.

Acknowledgements

This work was supported in part by the National Natural Science Foundation of China [Grant NO. 61806138, NO. 61003053]; in part by the China University Industry-University-Research Collaborative In- novation Fund (Future Network Innovation Research and Application Project) [Grant 2021FNA04014]; in part by the Central Government Guides Local Science and Technology Development Funds (Grant NO. YDZJSX2021A038); in part by the Key R&D program of Shanxi Province (Grant No. 202202020101012); in part by the Taiyuan University of Sci- ence and Technology Scientific Research Initial Funding (TYUST SRIF), No. 20232087.

References

Wang J, Wang L, Xiu X. A cooperative memetic algorithm for energy-aware dis- tributed welding shop scheduling problem. Eng Appl Artif Intell 2023;120.
Panigrahi GS, Patra AK, Nanda A, Kar SK. Adaptive controller design based on grasshopper optimisation technique for bg regulation in tidm patient. Int J Autom Control 2023;17.
Wang F, Li Y, Li Y, Chen J. Bi-level programming model for post-disaster emer- gency supplies scheduling with time windows and its algorithm. Int J Autom Control 2022;16.
Hu J, Wu H, Zhan R, Li Y, Menassel R. Self-adaptive wolf pack algorithm based on dynamic population updating for continuous optimisation problems. Int J Autom Control 2021;15.
Yao B, Chen C, Shan W, Yu B. Artificial leaf-vein network optimisation algorithm for urban transportation network design. Int J Bio-Inspir Comput 2022;20(4):256‚Äì68.
Aslan S, Arslan S. A modified artificial bee colony algorithm for classification opti- misation. Int J Bio-Inspir Comput 2022;20(1).
Dong T, Zhou L, Chen L, Song Y, Tang H, Qin H. A hybrid algorithm for workflow scheduling in cloud environment. Int J Bio-Inspir Comput 2023;21(1).
Zhao X, Tian X, Li Z, Tan X, Zhang Q, Chen H, et al. Binary particle swarm optimisa- tion and the extreme learning machine for diagnosing paraquat-poisoned patients. Int J Autom Control 2021;15(1).
Yi L, Xu X, Tan M, Zhang Z, Xiao W, Fan L. Pid self-tuning method based on deep belief network and improved firefly algorithm. Int J Autom Control 2021;15(3).
Zhang X, Zhang B, Meng L, Ren Y, Meng R, Li J. An evolutionary algorithm for a hybrid flowshop scheduling problem with consistent sublots. Int J Autom Control 2022;16.
Cui Z, Xue Z, Fan T, Cai X, Zhang W. A many-objective evolutionary algorithm based on constraints for collaborative computation oÔ¨Ñoading. Swarm Evol Comput 2023;77.
Cai X, Lan Y, Zhang Z, Wen J, Cui Z, Zhang W. A many-objective optimization based federal deep generation model for enhancing data processing capability in iot. IEEE Trans Ind Inform 2023;19(1):561‚Äì9.
Deb K, Pratap A, Agarwal S, Meyarivan T. A fast and elitist multiobjective genetic algorithm: nsga-ii. IEEE Trans Evol Comput 2002;6(2):182‚Äì97.
Zhang Q, Li H. Moea/d: a multiobjective evolutionary algorithm based on decom- position. IEEE Trans Evol Comput 2007;11(6):712‚Äì31.
Zitzler E, K√ºnzli S. Indicator-based selection in multiobjective search. In: Parallel problem solving from nature - PPSN VIII; 2004. p. 832‚Äì42.
Trivedi A, Srinivasan D, Sanyal K, Ghosh A. A survey of multiobjective evolutionary algorithms based on decomposition. IEEE Trans Evol Comput 2017;21(3):440‚Äì62.
Gong D, Qin N, Sun X. Evolutionary algorithms for multi-objective optimization problems with interval parameters; 2010. p. 411‚Äì20.
Sun J, Miao Z, Gong D, Zeng X-J, Li J, Wang G. Interval multiobjective optimization with memetic algorithms. IEEE Trans Cybern 2020;50(8):3444‚Äì57.
Zhang Y, Gong DW, Zhang QY, Jiang YQ. Deterministic interpretation for un- certain optimization problems with interval constraints. Syst Eng-Theory Pract 2009;29(2):127‚Äì33.
Fu C, Liu Z, Deng J. A direct solution framework for structural optimization prob- lems with interval uncertainties. Appl Math Model 2020;80:384‚Äì93.
Liu X, Zhang Z, Yin L. A multi-objective optimization method for uncertain struc- tures based on nonlinear interval number programming method. Mech Based Des Struct Mach 2017;45(1):25‚Äì42.
Li Y, Wang P, Gooi HB, Ye J, Wu L. Multi-objective optimal dispatch of mi- crogrid under uncertainties via interval optimization. IEEE Trans Smart Grid 2019;10(2):2046‚Äì58.
Guo Y, Cheng J, Yang Z, Wang C. Knowledge-inducing moea/d for interval multi- objective optimization problems; 2016. p. 2729‚Äì35.
He Q, He Z, Duan S, Zhong Y. Multi-objective interval portfolio optimization mod- eling and solving for margin trading. Swarm Evol Comput 2022;75:101141.
Limbourg P, Aponte D. An optimization algorithm for imprecise multi-objective problem functions, vol. 1; 2005. p. 459‚Äì66.
Jiang C, Han X, Liu GR, Liu GP. A nonlinear interval number programming method for uncertain optimization problems. Eur J Oper Res 2008;188(1):1‚Äì13.
Jing S, Dunwei G. Solving interval multi-objective optimization problems using evolutionary algorithms with lower limit of possibility degree. Chin J Electron 2013;22(2):269‚Äì72.
Gong D, Sun J, Ji X. Evolutionary algorithms with preference polyhedron for interval multi-objective optimization problems. Inf Sci 2013;233:141‚Äì61.
Zhang P, Xu R, Sun X, Gong D, Zhang Y, Choi J. A synthesized ranking-assisted nsga- ii for interval multi-objective optimization. In: 2016 IEEE congress on evolutionary computation. CEC; 2016. p. 861‚Äì8.
Alolyan I. Algorithm for interval linear programming involving interval constraints. In: Ifsa world congress and nafips meeting; 2013.
Xiao J, Zhang Y, Fu C. Comparison between methods of interval number ranking based on possibility. J Tianjin Univ 2011;44(8):705‚Äì11.
Zhang L, Wang S, Zhang K, Zhang X, Sun Z, Zhang H, et al. Cooperative artificial bee colony algorithm with multiple populations for interval multiobjective optimization problems. IEEE Trans Fuzzy Syst 2019;27(5):1052‚Äì65.
Liu G, Liu S. Direct method for uncertain multi-objective optimization based on interval non-dominated sorting. Struct Multidiscip Optim 2020;62(2):729‚Äì45.
Yi J, Bai J, He H, Zhou W, Yao L. A multifactorial evolutionary algorithm for multi- tasking under interval uncertainties. IEEE Trans Evol Comput 2020;24(5):908‚Äì22.
Sun S, Wang C, Wang Y, Zhu X, Lu H. Multi-objective optimization dispatching of a micro-grid considering uncertainty in wind power forecasting. Energy Rep 2022;8:2859‚Äì74.
Xu X, Xu G, Chen J, Liu Z, Chen X, Zhang Y, et al. Multi-objective design opti- mization using hybrid search algorithms with interval uncertainty for thin-walled structures. Thin-Walled Struct 2022;175:109218.
Zhang Z, Zhao M, Wang H, Cui Z, Zhang W. An eÔ¨Écient interval many-objective evolutionary algorithm for cloud task scheduling problem under uncertainty. Inf Sci 2022;583:56‚Äì72.
Chen Z, Wu H, Chen Y, Cheng L, Zhang B. Patrol robot path planning in nuclear power plant using an interval multi-objective particle swarm optimization algo- rithm. Appl Soft Comput 2022;116:108192.
Xu Y, Pi D, Yang S, Chen Y, Qin S, Zio E. An angle-based bi-objective optimization algorithm for redundancy allocation in presence of interval uncertainty. IEEE Trans Autom Sci Eng 2023;20(1):271‚Äì84.
Gan X, Sun J, Gong D, Jia D, Dai H, Zhong Z. An adaptive reference vector-based interval multi-objective evolutionary algorithm. IEEE Trans Evol Comput 2022. https://doi.org/10.1109/TEVC.2022.3193294.
Cui Z, Jin Y, Zhang Z, Xie L, Chen J. An interval multi-objective optimiza- tion algorithm based on elite genetic strategy. Inf Sci 2023;648:119533. https:// doi.org/10.1016/j.ins.2023.119533.
Zhou X, Wang X, Gu X. A decomposition-based multiobjective evolutionary algo- rithm with weight vector adaptation. Swarm Evol Comput 2021;61:100825.
Chen ZW, Chen L, Bai X, Yang Q, Zhao FL. Interactive multi-attribute decision- making nsga-ii for constrained multi-objective optimization with interval numbers. Control Decis 2015;30(5):865‚Äì70.
Zhao Q, Guo Y, Yao X, Gong D. Decomposition-based multi-objective optimization algorithms with adaptively adjusting weight vectors and neighborhoods. IEEE Trans Evol Comput 2022.
Qi Y, Ma X, Liu F, Jiao L, Sun J, Wu J. Moea/d with adaptive weight adjustment. Evol Comput 2014;22(2):231‚Äì64.
Huband S, Hingston P, Barone L, While L. A review of multiobjective test problems and a scalable test problem toolkit. IEEE Trans Evol Comput 2006;10(5):477‚Äì506.
Deb K, Thiele L, Laumanns M, Zitzler E. Scalable test problems for evolutionary multiobjective optimization; 2005.
Cheng R, Li M, Tian Y, Zhang X, Yang S, Jin Y, et al. A benchmark test suite for evolutionary many-objective optimization. Complex Intell Syst 2017;3(1):67‚Äì81.
Gong D, Sun J, Miao Z. A set-based genetic algorithm for interval many-objective optimization problems. IEEE Trans Evol Comput 2018;22(1):47‚Äì60.
M SSR, Mallipeddi R, Das KN. A twin-archive guided decomposition based multi/many-objective evolutionary algorithm. Swarm Evol Comput 2022;71:101082.
