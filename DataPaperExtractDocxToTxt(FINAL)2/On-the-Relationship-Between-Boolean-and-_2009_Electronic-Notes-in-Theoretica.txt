

Electronic Notes in Theoretical Computer Science 252 (2009) 5–21
www.elsevier.com/locate/entcs

On the Relationship Between Boolean and Fuzzy Cellular Automata
Heather Betel1 ,2	Paola Flocchini1 ,3
School of Information Technology and Engineering University of Ottawa, 800 King Edward,
Ottawa, Ontario, K1N 6N5, Canada

Abstract
Fuzzy cellular automata (FCA) are continuous cellular automata where the local rule is defined as the “fuzzification” of the local rule of a corresponding Boolean cellular automaton in disjunctive normal form. In this paper we are interested in the relationship between Boolean and fuzzy models and we analytically show, for the first time, the existence of a strong connection between them by focusing on two properties: density conservation and additivity.
We begin by giving a probabilistic interpretation of our fuzzification which leads to two important results. First, it establishes an equivalence between convergent fuzzy CA and the mean field approximation on Boolean CA, an estimation of their asymptotic density. Second, we show that the density conservation property, extensively studied in the Boolean domain, is preserved in the fuzzy domain: a Boolean CA is density conserving if and only if the corresponding FCA is sum preserving. A similar result is established for another novel “spatial” density conservation property. Finally, we prove an interesting parallel between additivity of Boolean CA and oscillation of the corresponding fuzzy CA around its fixed point. In fact, we show that a Boolean CA has a certain form of additivity if and only if the behavior of the corresponding fuzzy CA around its fixed point coincides with the Boolean behavior.
These connections between the Boolean and the fuzzy models are the first formal proofs of a relationship between them.
Keywords: Fuzzy cellular automata, density conservation, additivity.


Introduction
Fuzzy Cellular Automata
Since the introduction of cellular automata (CA) by von Neumann [25] the study of their properties, in particular of Boolean CA, has interested various disciplines as diverse as ecology, biology, engineering and theoretical computer science (e.g., see [4,11,16,27]).

1 Work partially supported by NSERC.
2 Email: hbetel@site.uottawa.ca
3 Email: flocchin@site.uottawa.ca

1571-0661 © 2009 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2009.09.011

Fuzzy cellular automata (FCA) are a particular type of continuous cellular au- tomata where the local transition rule is the “fuzzification” of the local rule of the corresponding Boolean cellular automaton in disjunctive normal form 4 . Fuzzy cel- lular automata were introduced in [7] and some of their properties have been studied in [13,12,20,21], especially when considering finite configurations in quiescent back- grounds. Recently, they have been shown to be useful tools for pattern recognition purposes (e.g., see [18,19]), and good models for generating images mimicking nature (e.g. [9,24]).
To date, little is know about the dynamics of FCA, and the only existing re- sults concern elementary FCA (i.e., with dimension and neighbourhood one). In quiescent backgrounds, it has been shown that none of the elementary FCA has chaotic dynamics [13,20,21]. The case of circular elementary FCA has been stud- ied experimentally from random initial configurations; an empirical classification has been proposed based on these studies [12] suggesting that all elementary rules have asymptotic periodic behavior but, surprisingly, with periods of only certain lengths: 1,2,4, and n (where n is the size of the circular lattice). Analytical studies to formally confirm the proposed classification have started in [3].
In addition to the many interesting questions on the properties of fuzzy CA and their applications, a crucial research question is the nature of the relationship between fuzzy CA and Boolean CA. In fact, the dynamics of fuzzy CA might shed some light on their Boolean counter-parts, and properties of Boolean CA could be interpreted differently in light of those of fuzzy CA. If clear links between the two systems can be established, properties of Boolean CA not previously observed might be revealed by their presence in FCA. Unfortunately, until now, no such light has been shed and no such results exist. In fact, it was not even clear whether such a connection existed. To date, none of the studies on fuzzy asymptotic behavior seem to suggest any similarities between the two models. The only interesting link between them was observed in [13] for the case of elementary Boolean rule 90 (one of the most studied elementary CA rules) where it has been shown that its asymptotic behavior is identical to the dynamics of the oscillations of the corresponding fuzzy
CA around its fixed point 1 . In other words, fuzzy rule 90 eventually stabilizes on 1
2	2
oscillating around it and the oscillations follow Boolean rule 90 itself. The reasons
for such behavior and the general implications for fuzzy CA were unknown until now.
Our results
The main results of this paper is the formal proof of the existence of a strong relationship between fuzzy and Boolean CA with respect to two properties: density conservation and additivity.
We begin by showing the unique nature of our fuzzification based on a probabilis- tic interpretation that links a fuzzy value in a given location during the evolution of a FCA with the probability of a one occurring in that location in the corresponding

4 These are not to be confused with a variant of cellular automata, also called fuzzy cellular automata, where the fuzziness refers to the choice of a deterministic local rule (e.g., see [1])

Boolean CA. We show that in the case of convergent fuzzy CA, the point of con- vergence is the mean ﬁeld approximation [15] of the corresponding Boolean CA, a well known estimation of its asymptotic density.
We continue the study of density with the exploration of density conservation in the discrete and continuous models. More precisely, we consider two types of density conservation: a temporal one, which is the classical notion of number conservation and has been studied extensively in the Boolean domain (e.g., see [5,6,10,11]), and a spatial one that has not been studied before. We prove that our fuzzification pre- serves both: in other words, a one-dimensional Boolean circular cellular automaton (i.e., with periodic initial configuration) is density-conserving if and only if its corre- sponding fuzzy circular cellular automaton is sum preserving. As a simple corollary of our result, we re-discover the number conservation property of elementary rule 184 (already well known in the Boolean domain) and we find an interesting spa- tial density conservation property of another elementary rule (rule 46) that can be translated into the Boolean domain: for any configuration of even size at time t > 0, the density of the odd cells is equal to the density of the even cells.
We finish off by examining a class of fuzzy rules whose asymptotic behaviour continues to reflect that of their associated Boolean rule even as they converge to a fixed point. We call this property self-oscillation. We show that a fuzzy CA rule is self-oscillating if and only if the corresponding Boolean CA rule is an additive rule or its negation. This result fully characterizes the class of d-dimensional, infinite CA with this behavior, thus explaining the phenomenon observed in [13] for rule
90. Although for simplicity of description the rest of the paper focuses on one- dimensional CA, all the results hold for any dimension d.

Definitions
A d dimensional infinite Boolean cellular automata can be described by a quadruple C = ⟨Zd, {0, 1}, N, g⟩ where: Zd represents the set of cells; {0, 1} is the set of Boolean states of the cells; N is the neighbourhood of a cell and can be defined in different ways but usually contains the cell itself plus the neighbouring cells up to a certain radius; and g : {0, 1}|N| → {0, 1} is the local transition rule (or simply local rule) of the automaton. Given an initial configuration, C0, that is a mapping C0 : Zd → {0, 1}, cell states are synchronously updated at each time step by the local transition rule applied to their neighbourhoods. A configuration is the resulting map Ct : Zd → {0, 1} at any time t. A ﬁnite d-dimensional Boolean cellular automaton has a finite number of non-zero states in an infinite quiescent background. That is, Ct(z) = 0 for all but finitely many z ∈ Zd. Circular cellular automata can be thought of as infinite CA with a periodic repeating pattern, or as a finite circular d-dimensional grid.
In the case of one-dimensional circular Boolean cellular automata, a configura-

tion is a finite vector Xt ∈ Z{0,1} = (xt , xt ... , xt
) (Alternatively, one can think

0	,	n−1
of an infinite array containing a periodic configuration.) The neighbourhood of
a cell consists of the cell itself and its q left and right neighbours, thus the local

transition rule has the form: g : {0, 1}2q+1 → {0, 1}. The global dynamics of a one- dimensional cellular automaton composed of n cells is then defined by the global transition rule: g : {0, 1}n → {0, 1}n  s.t.  ∀X ∈ {0, 1}n, ∀i ∈ {0,... ,n − 1}, the
i-th component g(X)i of g(X) is g(X)i = g(xi−q,... , xi,... , xi+q), where all oper- ations on indices are modulo n. Cellular automata with dimension and radius one are called elementary.
The local ransition rule g of a Boolean CA is typically given in tabular form by listing the 22q+1 binary tuples corresponding to the 22q+1 possible local con- figurations a cell can detect in its direct neighbourhood, and mapping each tuple to a Boolean value ri (0 ≤ i ≤ 22q+1 − 1): (00 ··· 00, 00 ··· 01,... .. ., 11 ··· 10, 11 ··· 11) → (r0, ··· , r22q+1 ). The binary representation (r0, ··· , r22q+1 ) is often con- verted into the decimal representation  i 2iri, and this value is typically used as the decimal code of the rule (or rule number). Let us denote by di the tuple mapping to ri, and by T1 the set of tuples mapping to one. The local transition rule can also be canonically expressed in disjunctive normal form (DNF) as follows:

g(v−q
, ··· , vq)=	 
i<22q+1
ri 
j=−q:q

di,(j+q) j

where dij is the j-th digit, from left to right of di (counting from zero) and v0 (resp.

v1) stands for ¬vj
(resp. vj) i.e. 

j=−q:q
vdi,(j+q) will be equal to one precisely when

v−q ··· vq viewed as a single binary number is equal to di.
Example.  Consider, for example, elementary rule 18 whose local transi- tion rule in tabular form is given by: (000, 001, 010, 011, 100, 101, 110, 111) →
(0, 1, 0, 0, 1, 0, 0, 0). The local transition rule in DNF form is the following:
g(v−1, v0, v1)= (¬v−1 ∧ ¬v0 ∧ v1) ∨ (v−1 ∧ ¬v0 ∧ ¬v1).
A fuzzy cellular automaton (FCA) is a particular continuous cellular automaton where the local transition rule is obtained by DNF-fuzziﬁcation of the local transi- tion rule of a classical Boolean CA. The fuzzification consists of a fuzzy extension of the Boolean operators AND, OR, and NOT in the DNF expression of the Boolean rule. Depending on which fuzzy operators are used, different types of fuzzy cellular automata can be defined. Among the various possible choices, we consider the fol- lowing: (a ∨ b) is replaced by max{1, (a + b)}. (a ∧ b) by (ab), and (¬a) by (1 − a). Note that, in the case of FCA, max{1, (a + b)} = (a + b). Whenever we talk about fuzzification, we are referring to the DNF-fuzziﬁcation defined above. The resulting local transition rule f : [0, 1]2q+1 → [0, 1] becomes a real function that generalizes
the canonical representation of the corresponding Boolean CA:

(1)
f (v−q, ··· , vq)=	Σ
i<22q+1
rˆi 
j=−q:q
l(vj, di,j+q )

where l(a, 0) = 1 − a and l(a, 1) = a, and rˆi =0 if ri is false and rˆi =1 if ri is true.
Example. Consid again elementary rule 18 whose local transition rule is DNF form is g(v−1, v0, v1) = (¬v−1 ∧ ¬v0 ∧ v1) ∨ (v−1 ∧ ¬v0 ∧ ¬v1), we have that the

corresponding fuzzy local transition rule becomes:
f (v−1, v0, v1)= (1 − v−1)(1 − v0)v1 + v−1(1 − v0)(1 − v1).
Throughout this paper, we will denote local rules of Boolean CA by g and their fuzzifications for the corresponding FCA by f . For ease of notation, we will denote g(yi−q, ··· , yi, ··· , yi+q) by g[yi] and f (xi−q, ··· , xi, ··· , xi+q) by f [xi]. The corresponding global rules are denoted by G and F .

Probabilistic interpretation of fuzzification
An interesting property of the DNF fuzzification is how it relates to the probability of a one occuring at a given time in a given cell. Since the fuzzy values are in the range [0, 1], we can interpret them as probabilities, i.e., we can let a fuzzy value xt denote the probability that a cell yi of a Boolean CA assumes value 1 at time
t. Then, if the values are independent, we have that the fuzzy rule applied to a neighbourhood returns the probability of having value 1 at the next time step:


f (xt	, ··· , xt, ··· , xt
)= xt+1 = P (yt+1 = 1).

i−q	i
i+q	i	i

In the next section we will establish some basic probabilistic results resulting from this interpretation.
Preliminaries
In this section, we will introduce a property that will be needed later, relating the expectation of a Boolean local function to the fuzzy rule applied to expectations.
We will first need some notation. Given a random variable Z, let E(Z) denote its expected value. Note that when Z is a binary random variable, then E(Z) is the probability P (Z = 1). Essentially, we show that applying the fuzzification f of g to the expected values of a cell Yi and its 2q neighbouring cells, we obtain the expected value of g[Yi], the cell at the next time step.
Theorem 3.1 Let (Y0,... , Yn−1) be independent binary random variables. Then:
∀i = 0,... n − 1,  f [E(Yi)] = E(g[Yi]).

Proof. By definition, f [E(Y )] = Σ22q+1−1 r  q
l(E(Y
),d 
). If d	=

1, then
i	j=0
j	k=−q
i+k
j,k+q
i,k+q

l(E(Yi+k), di,k+q)= E(Yi+k)= P (Yi+k = dj,k+q).
Similarly, if dj,k+q = 0, then
l(E(Yi+k), dj,k+q)= 1−E(Yi+k)= 1−P (Yi+k = 1)= P (Yi+k = 0)= P (Yi+k = dj,k+q).


So we have:

f [E(Yi)] =

22q+1 −1
rj
j=0

+q k=−q


P (Yi+k = dj,k+q )

Since the variables are independent,





thus:
+q k=−q

P (Yi+k = dj,k+q)= P ((Yi−q,... , Yi+q)= dj)


22qΣ+1 −1

f [E(Yi)] =

j=0
rj · P ((Yi−q,... , Yi+q)= dj).

Recall that rj =1 if dj ∈ T1, the set of Boolean tuples mapping to one, otherwise
rj = 0, thus:
f [E(Yi)] = P ((Yi−q, ··· , Yi+q) ∈ T1)= P (g[Yi]= 1) = E(g[Yi]).


As a consequence of Theorem 3.1, we can intuitively see that the asymptotic behavior of a FCA represents a rough approximation of the asymptotic density of the corresponding Boolean CA. In the next section, we show that such an intuition is in fact correct.
Mean ﬁeld approximation
In this section, we will show the connection between the asymptotic behaviour of fuzzy CA and of one descriptor of the asymptotic behaviour of Boolean CA.
The mean field approximation is an estimate of the asymptotic density of Boolean cellular automata when no spatial correlation among cells is taken into account. Thought of another way, it is again an estimate of the probability of a one occurring in a random place in a configuration once its density has stabilized [15,28], not considering spatial correlations. Although in cellular automata spatial correla- tions play an important role and greatly influence their dynamics, the mean field approximation can give a rough indication, although sometimes quite far from the exact value, of the asymptotic density. The approximation is derived by assuming that when the asymptotic probability is reached, then the likelihood of increasing in density is equal to the likelihood of decreasing in density. More formally, we assume that for all i P (yi = 1) = p and that the yi are independent. Then we can denote the the probability of a transition from 0 to 1 as a function of p by P0→1(p). This is equal to the probability that g[yi]= 1 given that yi = 0 or P (g[yi] = 1|yi = 0). Similarly, we denote the probability of a transition from 1 to 0 by P1→0(p). A mean field approximation is any p such that P0→1(p) − P1→0(p) = 0. We show in the fol- lowing lemma that these probabilities can be evaluated as the sum of fuzzifications of the transitions from 0 to 1 evaluated at p which we denote by R0→1(p), in the first instance, and as R1→0(p) the sum of fuzzifications of the transitions from 1 to 0 also evaluated at p, in the second.
Lemma 3.2 P0→1(p)= R0→1(p) and P1→0(p)= R1→0(p).

Proof. We prove that P0→1(p) = R0→1(p), analogous proof holds for P1→0(p) = R1→0(p). First note that since in the calculation of the mean field approxima- tion we are assuming that the yi are independent, the probability of any given neighbourhood combination [yi] is the fuzzification of that neighbourhood evalu- ated at p. That is, let (v−q, ··· , vq) be a binary vector, then P ((yi−q, ··· , yi+q) = (v−q, ··· , vq)) =	j=−q:q l(p, vj) where as before l(p, 1) = p and l(p, 0) = 1 − p. By
definition P0→1(p) is the probability that [yi] ∈ τ1 given that yi = 0, so it is equal
to the sum of the fuzzifications of the transitions from 0 to 1, or R0→1(p).	 
Theorem 3.3 Given a global fuzzy rule F, if there exists an homogeneous conﬁgu- ration X = (p, ··· , p) such that F (X)= X, then a mean ﬁeld approximation of the Boolean rule G associated with F is equal to p.
Proof. Let f be the local rule associated with F and g its Boolean rule. Let R0→1(p) denote the sum of the fuzzifications of the transitions from 0 to 1 for g, evaluated at X = (p, ··· , p). Similarly, R0→0(p), R1→0(p), and R1→1(p) denote sums of fuzzifications of transitions from 0 to 0, 1 to 0, and 1 to 1 evaluated at (p, ··· , p), respectively. The sum of all these transition must be one. Since X is fixed by F , and since f (p, ··· , p)= R0→1(p)+ R1→1(p) by definition, then R0→1(p)+ R1→1(p)= p. Also, R1→0(p)+ R1→1(p)= p since this is the sum of all terms in xi (as opposed to terms in x¯i), and the result is independent of f . Combining these two results, we have
(R1→0(p)+ R1→1(p)) − (R0→1(p)+ R1→1(p)) = p − p
R1→0(p) − R0→1(p)= 0.
Thus at p, P1→0(p)= P0→1(p) by Lemma 3.2 which is the definition of the mean field approximation. Hence p is a mean field approximation, as required.
Note that if p is not unique, then the mean field approximation equation also has several possible solutions.	 
It is easy to see that also the reverse holds.
Theorem 3.4 If p is a stable density of the mean ﬁeld approximation for a Boolean rule G, then the homogeneous conﬁguration at that point is a ﬁxed point for the fuzziﬁcation F of G.

Density conservation in boolean and fuzzy CA
In this section, we explore the link between Boolean and fuzzy CA proving that there are density conservation properties that are preserved through the fuzzification process. Since such properties are defined only for finite or circular CA, throughout this section we will consider circular CA (the finite case is analogous).
Preliminaries
We now introduce a simple property of expectation that will be useful later. Given a linear function Ψ : Rn → R, by abuse of notation we denote the corresponding

map on n random variables also by Ψ.
Lemma 4.1 For n random variables Zi, and any linear function Ψ, we have:
E(Ψ(Z0, ··· , Zn−1)) = Ψ(E(Z0), ··· , E(Zn−1)).
Let C be the universe of all possible configurations for a CA (resp. FCA) of size n with local rule g and corresponding global transition function G, (f and F , resp.). Let Ct be the universe of all possible configurations at time t.
Definition 4.2 We call a property P of a CA (resp. FCA) a global property of the transition function if it holds for all configurations: i.e., P(g(Y)) is true for all Y ∈ C.

Number conservation
Number conservation is a global property that has been extensively investigated (e.g., see [5,6,10,11,14,22]) since its introduction in [23], a main focus being the study of linear time decision algorithms for the property of number conservation for finite or periodic configurations.
A Boolean CA is number conserving if the number of ones in the initial con- figuration is preserved at each subsequent iteration (we will also say that a rule is number conserving). The analogous property in fuzzy CA is that the sum of values of the initial configuration is preserved. In this section, we wish to show that using DNF-fuzzification, a Boolean CA with local rule g is number conserving if and only if the fuzzification f of the corresponding FCA is sum conserving. We will actually first prove the following more general result.
Theorem 4.3 Let Ψ be a real linear function. Then:
∀(y0,... , yn−1) ∈ {0, 1}n  Ψ(g[y0], ··· , g[yn−1]) = Ψ(y0, ··· , yn−1)
if and only if
∀(x0,... , xn−1) ∈ [0, 1]n  Ψ(f [x0], ··· ,f [xn−1]) = Ψ(x0, ··· , xn−1)
Proof. ⇒: Let Ψ(g[y0], ··· , g[yn−1]) = Ψ(y0, ··· , yn−1) be a global property of the CA with local rule g. We need to show that the property Ψ(f [x0], ··· ,f [xn−1]) = Ψ(x0, ··· , xn−1) is also global (i.e., it holds for all possible configurations). Since all possible configurations can be initial configurations (i.e., C = C0), it suffices to verify the property for all initial configurations.
We note that if the property holds for all (y0,... , yn−1) ∈ {0, 1}n, then given binary random variables Yi, we must have: Ψ(g[Y0], ··· , g[Yn−1]) = Ψ(Y0, ··· , Yn−1). Let (x0,... , xn−1) ∈ [0, 1]n be a randomly chosen initial configuration for the FCA with rule f . Let (Y0,... , Yn−1) be binary random variables such that E(Yi)= 
xi. We have:










⇐: Since the property applies to all values in [0, 1], it must apply to {0, 1} as well and the implication follows from the construction of f .
 
Note that, when Ψ is the summation of all values, we have: Σn−1 g[yi]= Σn−1 yi

i=0
∀(y0,... , yn−1) if and only if	n−1 f [xi]=	n−1 xi ∀(x0,... , xn−1), that is:
i=0

Theorem 4.4 A Boolean CA is number conserving if and only if the corresponding FCA is sum conserving.

Example:
Rule 184 is an example of a number conserving rule.
Theorem 4.5 Let f184 be fuzzy local rule 184. We have:


∀(x0,... , xn) ∈ [0, 1]n
nΣ−1

i=0
f184[xi]= 
n−1
xi
i=0



Proof. Fuzzy rule 184 has the following form: xt+1
= xt
— xt
xt + xtxt	.

Σn−1
Σn−1
Σn−1
iΣ−1 −1
i−1 i
i  i+1

i=0
Σn−1
i=0
i−Σ1 n−1 i=0
i Σi−1 1
i=0
i  i+1
−1

Σn−1

i=0
t+1

i−1
i=0	i
i=0
i i−1
i=0
i  i+1

The result for the Boolean case (which is already known) follows as a corollary, applying Theorem 4.3.
Corollary 4.6 Let g184 be elementary Boolean local rule 184. We have:
∀(y0,... , yn) ∈ {0, 1}n   n−1 g184[yi]=  n−1 yi

Spatial number conservation
We now describe another global property that is preserved by fuzzification. This property also deals with the density of configurations. Following an approach similar to the one of Theorem 4.3, we can show that in a CA, linear properties hold for the Boolean rule if and only if they hold for the corresponding FCA.

Theorem 4.7 Let g : {0, 1}2q+1 → {0, 1} be the local rule of a Boolean CA and let
f : [0, 1]2q+1 → [0, 1] be its fuzziﬁcation. Let Ψ be a real linear function.
∀(y0,... , yn−1) ∈ {0, 1}n  Ψ(g[y0], ··· , g[yn−1]) = 0
if and only if
∀(x0,... , xn−1) ∈ [0, 1]n  Ψ(f [x0], ··· ,f [xn−1]) = 0
Note that, when Ψ(z0,... , zn−1) = n−1(−1)izi and n is even, we obtain the preservation through fuzzyfication of a spatial conservation property where the sum of the even numbered cells (x2i) is equal to the sum of the odd numbered cells (x2i+1) at any time after the initial configuration:
Theorem 4.8 Let n be even. ∀(y0,... , yn−1) ∈ {0, 1}n  Σn−1(−1)ig[yi]= 0
if and only if
∀(x0,... , xn−1) ∈ [0, 1]n  Σn−1(−1)if [xi]=0	.

Example:
Rule 46 is an example of a spatially number conserving rule where the sum of the even numbered cells (x2i) is equal to the sum of the odd numbered cells (x2i+1) at any time after the initial configuration.
Theorem 4.9 Let f	be fuzzy local rule 46 in a FCA of even size. We have:
∀(x0,... , xn−1) ∈ [0, 1]n  Σn−1(−1)if46[xi]= 0.


Proof. (of Theorem 4.9)
Rule 46 is given by: xt+1 = xt + xt

— xt

xt − xtxt

, so:



nΣ−1
i


nΣ−1
i	i+1


nΣ−1
i−1
i	i


nΣ−1
i+1


nΣ−1


i=0
i
i=0
i
i=0
i+1

i=0
i−1 i

i=0
i  i+1

By a change of variables, due to circularity we have:	Σn−1(−1)ixt	=
−(Σn−1(−1)ixt), and Σn−1(−1)ixtxt	= −(Σn−1(−1)ixt	xt). So we can con-

i=0
clude:
nΣ−1
i


nΣ−1
i=0
i


nΣ−1
i+1


nΣ−1
i=0
i−1
i


nΣ−1


i=0
(−1)ixt+1 =

i=0
(−1)ixt −

i=0
(−1)ixt −

i=0
(−1)ixt
i−1
xt +

i=0
(−1)ixt
i−1
xt =0 

 

The result for the Boolean case now follows as a corollary of Theorem 4.8.
Corollary 4.10  Let g	be elementary Boolean local rule 46. We have:
∀(y0,... , yn−1) ∈ {0, 1}n Σn−1(−1)ig46[yi]=0 

Self-oscillation and additivity
In this section, we consider another property of Boolean cellular automata exten- sively studied in the literature: additivity (e.g., see [8,17,26]). We continue the investigation of the link between Boolean and fuzzy CA showing a connection be- tween additivity and a new fuzzy property that we call self-oscillation. In doing so we characterize the class of self-oscillating fuzzy CA. Although for simplicity we are considering one dimensional CAs, note that the results of this section hold for any dimension.

Preliminaries
A Boolean rule g is additive if g(y0, ··· , yq−1)⊕g(z0, ··· , zq−1)= g(y0⊕z0 , ··· , yn−1⊕ zq−1). Additive rules can be expressed as the XOR of some of their variables. An example is elementary rule 90, which can be expressed as: g90(x, y, z) = (x¯ ∧ z) ∨ (x ∧ z¯) = x ⊕ z. We now define a larger class of rules that contains additive and negation of additive rules:
Definition 5.1 A Boolean rule g is pseudo-additive if it is additive or if
g(y0, ··· , yq−1) ⊕ g(z0, ··· , zq−1) = g(y0 ⊕ z0, ··· , yq−1 ⊕ zq−1).
In general, when g is pseudo-additive, g(y0, ··· , yn−1) can be expressed as the XOR of some of its variables yi and some of their negations y¯i, which implies the following property:
Property 1 A pseudo-additive Boolean rule has the form:  g(x0, ··· , xn−1) =
i∈S xi or g(x0, ··· , xn−1)=  i∈S xi, where i ranges over S, a subset of the num- bers from 0 to n − 1.
We extend the definition of the XOR operator to fuzzy rules by defining x ⊕ y = xy¯ + x¯y. If a Boolean rule is additive (pseudo-additive), its fuzzification is also additive (pseudo-additive) and Property 1 holds for fuzzy rules as well. An example of a pseudo-additive fuzzy rule that is not additive is rule f105(x, y, z) = xyz¯+ xy¯z + x¯yz + x¯y¯z¯ = x ⊕ y ⊕ z, which is equal to x⊕ y ⊕ z¯ = x⊕ y¯⊕ z = x¯ ⊕ y ⊕ z.
A ﬁxed point P for a FCA with global transition rule F is a configuration P such that F (P)= P. A configuration P = (... , pi−1, pi, pi+1,.. .) is homogeneous if pi = pj = p, ∀i, j; in such a case obviously we also have f (p, ··· , p) = p. A global rule is said to converge to an homogeneous configuration P = (... p, p, p,.. .) if, for

all initial configurations X0 = (... , x0 , x0, x0
.. .) with ∀i x0 ∈ (0, 1), ∀ϵ > 0,

t	i−1	i	i+1	i
∃T such that ∀t > T and ∀i: |xi − p| < ϵ. In this case we will also say that the local
rule f converges to p. Note that if a rule converges to a homogeneous configuration it must be a fixed point.
We can now introduce the notion of self-oscillation for fuzzy CA. Informally, a fuzzy rule f is self-oscillating if while converging towards an homogeneous fixed point, it behaves like the corresponding Boolean rule g; in other words, when the dynamics of f around a fixed point coincides with the dynamics of g. In fact, the rule table of a fuzzy self-oscillating CA, written around its fixed point, coincides

with the Boolean rule table. This is the case, for example, of elementary fuzzy rule 90 which has been shown in [13] to behave like its Boolean counter-part around
1 . (See Table 1 where > and < respectively indicate values greater than or smaller than 1 .)

Table 1
Rule 90: fuzzy behavior around 1 (left); Boolean (right).

We now introduce the formal definition of self-oscillation. Let p be a fixed point for f .  Let (x1,... , xn−1) be an arbitrary fuzzy configuration, let xn = f (x0, ··· , xn−1), and let us define yi, for i = 0,... n, as follows:
y = ⎧⎨ 0 if xi < p 
⎩ 1 if xi > p 
Definition 5.2 Rule f is self-oscillating around p if it converges to p and if
f (x0, ··· , xn−1)= xn implies that g(y0, ··· , yn−1)= yn.
Elementary rule 90 has been shown to have this type of behavior in [13]; the other self-oscillating elementary rules have been identified using a case by case anal- ysis in [2]; however, the general implications of this behavior were left unexplained. What was clear was that self-oscillation did not occur for all fuzzy rules with an homogeneous fixed point, but a characterization of the class of rules displaying self-oscillation was lacking until now.
Equivalence between self-oscillation and additivity
In this section, we characterize the class of self-oscillating FCA proving the following result: a non-trivial fuzzy CA rule is self-oscillating if and only if the corresponding Boolean CA rule is pseudo-additive.
We begin with some lemmas. We first describe the behaviour of the fuzzification of the XOR operator (x ⊕ y = xy¯ + x¯y) around 1 , and then prove that convergence
to 1 is necessary for self-oscillation.

Lemma 5.3 xy + x¯y¯ is greater than 1 if and only if both x and y are greater than
1 or both are smaller.
Lemma 5.4 A necessary condition for a convergent non-trivial rule to be self- oscillating is for it to converge to one half.
Proof. (Sketch)
To begin we note that functions converging to either zero or one can never be self-oscillating since values are, respectively, either always greater than or always less than the point of convergence. We will now prove this lemma by induction on n, the the number of variables in f , i.e., on the size of the neighborhood.
It is easy to see that when f is a non-trivial function on two variables only the following converge to values on (0, 1): f1(x0, x1) = x0x¯1 + x¯0x1 and f2(x0, x1) = 

x0x1 + x¯0x¯1 which converge to 1
and are self-oscillating, and f3(x0, x1) =
x¯0x¯1

  √ 	2
which converges to p = 3− 5 and is not self-oscillating.
Now assume that the lemma holds for all functions in n or fewer variables and consider the function f with global rule F which converges to a fixed point p. We re-write it as: f+(x0, ··· , xn−1)xn + f−(x0, ··· , xn−1)x¯n. We wish to show that if f is convergent and non-trivial, then at least one of f+ and f− must take on values greater than and less than p. If both f+ and f− are always greater than p, then f > pxn + p(1 − xn)= p. Self-oscillation implies that f = 1. Similarly, if f+ and f− are both less than p, then f must be trivially 0. Now consider f+ always greater than p and f− always less than p. When xn = 1, f (x0, ··· , xn−1, 1) = f+(x0, ··· , xn−1) >
p. Self-oscillation implies that f (x0, ··· , xn) > p whenever x > p. When xn = 0, f (x0, ··· , xn−1, 0) = f−(x0, ··· , xn−1) < p. Again, self-oscillation implies f < p whenever xn < p. Taking the two together, we must have f (x0, ··· , xn) = xn which is not a convergent function. Similarly, if f+ < p and f− > p, we obtain f = x¯n. We conclude that at least one of f+ and f− must have some values greater than p and some smaller. Assume, without loss of generality since the proofs are analogous, that f+ is sometimes greater than p and sometimes smaller, and again consider xn = 1 so that f (x0, ··· , xn−1, 1) = f+(x0, ··· , xn−1). The function f+ is completely determined by f and so must be self-oscillating around p. By the inductive hypothesis, p = 1 .	 
As we know, given a Boolean rule g, we can derive its fuzzification f as the sum of the fuzzifications of each of its transitions to 1. In the following, we refer to each of the products in this sum as a term of f .
Lemma 5.5 If f (x0, ··· , xn−1) converges to 1 , f is the sum of 2n−1 terms.
Proof. The terms of any function evaluated at ( 1 , ··· , 1 ) are all equal to ( 1 )n. For
2	2	2
f ( 1 , ··· , 1 )= 1 , we must have 2n−1 such terms summed together.	 
2	2	2
We now prove that for a fuzzy rule on n variables to be self-oscillating, it must be balanced in xi and x¯i. That is, it must be the sum of the same number of terms in xi as in x¯i for all i.

Lemma 5.6 Let f (x0, ··· , xn−1)  be self-oscillating.	Then for all i,	if

f (x0, ··· , xn−1) is not identically xi or sum of f in xi as there are terms in x¯i.
x¯i, then there are as many terms in the

Proof. For any given xi, assume that neither of the first two conditions hold. We will show by contradiction that the third condition must hold. We begin by writing f as:
f (x0, ··· , xn−1)= 
fi+(x0, ··· , xi−1, xi+1, ··· , xn−1)xi + fi−(x0, ··· , xi−1, xi+1, ··· , xn−1)x¯i.
where fi+ is the sum of terms of the n − 1 variables x0, ··· , xi−1, xi+1, ··· , xn−1. Assume without loss of generality that more than half the terms are in f+. Let there be m > 2n−2 terms in fi+. Then, by Lemma 5.5 there must be 2n−1 − m

terms in fi−
. Then as xj
 m 
1 for all j /= i, each term of fi+
tends to 1 n−1

and thus fi+ →	n−1 , which is > 1 because we assumed m > 2n−2. Moreover,
2	2
2n−1−m	1

fi− →
n−1	< 1 . Note that this convergence happens as the xj approach
from

both directions. Choosing xj close enough to 1 , we can assume that fi+ > 1 and
2	2
fi− < 1 . Now: f (x0, ··· , xn−1)= fi+xi+fi−(1−xi)= (fi+−fi−)xi+fi−. At xi = 1, f (x0, ··· , xn−1) = fi+ > 1 . That is for all values of x0, ··· , xi−1, xi+1, ··· , xn−1 close enough to 1 , whether greater than or less than 1 , f (x0, ··· , xn−1)= fi+ > 1 .
Similarly, when xi = 0, f (x0, ··· , xn−1) = fi+ < 1 . Self-oscillation then implies that f (x0, ··· , xn−1)= xi, contradicting our initial assumption.

We are finally able to characterize the form of a self-oscillating rule. We will see that these rules are fuzzifications of Boolean rules which are the XOR of single variables or their negations.
Theorem 5.7 A rule f (x0, ··· , xn−1) is self-oscillating if and only if its correspond- ing Boolean rule is pseudo-additive.
Proof. ⇒:
We will prove that a self-oscillating rule is pseudo-additive, f (x0, ··· , xn−1) = i∈S xi or f (x0, ··· , xn−1)=	i∈S xi, (and thus the corresponding Boolean rule is pseudo-additive) by induction on |S| = m, the cardinality of the set S, the set of
possible states.
For m = 2, from Lemma 5.6, we must have one term in xi and one term in x¯i for i ∈ S giving us only two possibilities: f (xi, xj) = xix¯j + x¯ixj = xi ⊕ xj or f (xi, xj)= x¯ix¯j + xixj = x¯i ⊕ xj as required.
Now assume the hypothesis for all self-oscillating rules in less than or equal to n variables. Given a self-oscillating rule f (x0, ··· , xn), if f is not dependent on all n+1 variables, then it can be rewritten as a self-oscillating rule on n on fewer variables and the inductive hypothesis holds. So we may continue on the assumption that f is dependent on all n + 1 variables. We can write:
f (x0, ··· , xn)= [f1−(x0, ··· , xn−2)x¯n−1 + f1+(x0, ··· , xn−2)xn−1]x¯n

+ [f2−(x0, ··· , xn−2)x¯n−1 + f2+(x0, ··· , xn−2)xn−1]xn
Letting xn = 0, f (x0, ··· , xn−1, 0) is a self-oscillating rule on n variables so the inductive hypothesis applies and
f1−(x0, ··· , xn−2)x¯n−1 + f1+(x0, ··· , xn−2)xn−1 = x0 ⊕ ··· ⊕ xn−1
or
f1−(x0, ··· , xn−2)x¯n−1 + f1+(x0, ··· , xn−2)xn−1 = x¯0 ⊕ x1 ⊕ ··· ⊕ xn−1.
Specifically,	we  must  have  f1−(x0, ··· , xn−2)	=	x0 ⊕ x1 ⊕ ··· ⊕ xn−2,
f1+(x0, ··· , xn−2) = x¯0 ⊕ x1 ⊕ ··· ⊕ xn−2 or the opposite.  Setting xn to 1, we
can say the same thing about f2− and f2+.
Using the same argument, if we let xn−1 = 0, we see that f2− = f¯1−. Thus we have only two possibilities for f :
f (x0, ··· , xn)= [(x0 ⊕ ··· ⊕ xn−2)x¯n−1 + (x¯0 ⊕ ··· ⊕ xn−2)xn−1]x¯n+ [(x¯0 ⊕ ··· ⊕ xn−2)x¯n−1 + (x0 ⊕ ··· ⊕ xn−2)xn−1]xn = x0 ⊕ ··· ⊕ xn
or
f (x0, ··· , xn)= [(x¯0 ⊕ ··· ⊕ xn−2)x¯n−1 + (x0 ⊕ ··· ⊕ xn−2)xn−1]x¯n+
[(x0 ⊕ ··· ⊕ xn−2)x¯n−1 + (x¯0 ⊕ ··· ⊕ xn−2)xn−1]xn = x¯0 ⊕ x1 ⊕ ··· ⊕ xn.
⇐: We will assume that the Boolean rule corresponding to f is pseudo-additive
(and thus also f (x0, ··· , xn−1) is pseudo-additive) and proceed by induction on n to show that it is self-oscillating. When n = 2, f (x0, x1) is equal to x0 ⊕ x1 or x0 ⊕ x¯1. In either case, by Lemma 5.3 f is self-oscillating.
Now assume that for n or fewer variables pseudo-additivity implies self- oscillation and consider f (x0, ··· , xn). Without loss of generality, assume that f is not independent of xn, then we can write it as f (x0, ··· , xn)= f1(x0, ··· , xn−1) ⊕ xn for a pseudo-additive rule f1 which is self-oscillating by the induction hypothesis. Again applying Lemma 5.3, f must be self-oscillating.	 

Concluding Remarks
In this paper, we have provided the first evidence of a link between Boolean and fuzzy cellular automata by focusing on density conservation and additivity. We have formally proven that density conservation is preserved through fuzzification and that pseudo-additivity in Boolean CA is equivalent to self-oscillation in FCA. Now that there is a formal proof of strong links between the discrete and the continuous models, the next natural question is how to exploit these links to derive properties for Boolean cellular automata through their fuzzification. As a conse- quence of our results, we have started the investigation in this direction showing that density conservation in Boolean CA could indeed be easily derived from fuzzy sum preservation and, in particular, we have uncovered a spatial density conserva- tion in Boolean CA through the study of the continuous version. Furthermore, we

have shown a link between additivity in Boolean CA and the asymptotic behaviour of fuzzy CA. An interesting research direction would be to examine the link between surjectivity and injectivity in Boolean CA and the asymptotic behaviour of fuzzy CA.
Finally, the link between DNF fuzzification and mean field approximation opens intriguing research directions: when a fuzzy CA converges to an homogeneous fixed point, this is also the mean field apploximation (i.e., a rough estimate of the asymp- totic density) of the corresponding Boolean CA. What is the relationship of non- homogeneous asymptotic configurations with density ? The implications of the link between mean field approximation and asymptotic behavior of FCA on Boolean CA is now under investigation.

Acknowledgement
We would like to thank the anonymous referees whose comments have helped im- proving the presentation and the clarity of the paper.

References
A. I. Adamatzky. Hierarchy of fuzzy cellular automata. Fuzzy Sets and Systems, (62):167–174, 1994.
H. Betel and P. Flocchini. Fluctuations of fuzzy cellular automata around their convergence point. In
Proc. International Symposium on Nonlinear Theory and its Applications, Hawaii, 2009. to appear.
H. Betel and P. Flocchini. On the asymptotic behavior of circular fuzzy cellular automata, 2009. to appear in Proceedings of AUTOMATA 2009.
N. Boccara and K. Cheong. Automata network epidemic models. In Cellular Automata and Cooperative Systems, volume 396, pages 29–44. Kluwer, 1993.
N. Boccara and H. Fuks. Cellular automaton rules conserving the number of active sites. J. of Physics A: math. gen., 31:6007–6018, 1998.
N. Boccara and H. Fuks. Number-conserving cellular automaton rules. Fundamenta Informaticae, 52:1–13, 2001.
G. Cattaneo, P. Flocchini, G. Mauri, C. Quaranta-Vogliotti, and N. Santoro. Cellular automata in fuzzy backgrounds. Physica D, 105:105–120, 1997.
P. Pal Chaudhuri, D. Roy Chowdhury, S. Nandi, and S. Chattopadhyay. Theory and Applications in Additive Cellular Automata. IEEE Press, 1997.
A.M. Coxe and C.A. Reiter. Fuzzy hexagonal automata and snowflakes. Computers and Graphics, 27:447–454, 2003.
B. Durand, E. Formenti, A. Grange, and Z. R`oka. Number conserving cellular automata: new results on decidability and dynamics. Discrete Mathematics and Theoretical Computer Science, pages 129–140, 2003.
B. Durand, E. Formenti, and Z. R`oka. Number-conserving cellular automata I: decidability. Theoretical Computer Science, 299(1-3):523–535, 2003.
P. Flocchini and V. Cezar. Radial view of continuous cellular automata. Fundamenta Informaticae, 87(3):165–183, 2008.
P. Flocchini, F. Geurts, A. Mingarelli, and N. Santoro. Convergence and aperiodicity in fuzzy cellular automata: revisiting rule 90. Physica D, 42:20–28, 2000.
E. Formenti and A. Grange. Number conserving cellular automata II: dynamics. Theoretical Computer Science, 304(1-3):269–290, 2003.
Peter Grassberger. New mechanism for deterministic diffusion. Phys. Rev. A, 28:3666–3667, 1983.


C. G. Langton. Studying artificial life with cellular automata. In Evolution, Games, and Learning. North Holland, 1986.
B. Litow and P. Dumas. Additive cellular automata and algebraic series. Theoretical Computer Science, 119:345–354, 1993.
P. Maji and P. P. Chaudhuri. Fuzzy cellular automata for modeling pattern classifier. IEICE Transactions on Information and Systems, 88(4):691–702, 2005.
P. Maji and P. P. Chaudhuri. RBFFCA: A hybrid pattern classifier using radial basis function and fuzzy cellular automata. Funda. Info., 78(3):369–396, 2007.
A. Mingarelli. The global evolution of general fuzzy automata. J. of Cellular Automata, 1(2):141–164, 2006.
A. Mingarelli. A study of fuzzy and many-valued logics in cellular automata. J. of Cellular Automata, 1(3):233–252, 2006.
A. Moreira. Universality and decidability of number-conserving cellular automata.	Theoretical Computer Science, 292(3):711–721, 2003.
K. Nagel and M. Schreckenberg. A cellular automaton for freeway traffic. J. of Physics I, 2:2221–2229, 1992.
C. A. Reiter. Fuzzy automata and life. Complexity, 7(3):19–29, 2002.
J. Von Neumann. Theory of Self-Reproducing Automata. University of Illinois Press, Urbana, 1966.
B. Voorhees. Computational Analysis of One-Dimensional Cellular Automata. World Scientific, 1996.
S. Wolfram. Theory and Applications of Cellular Automata. World Scientific, 1986.
S. Wolfram. Cellular Automata and Complexity: Collected Papers. Addison-Wesley, 1994.
