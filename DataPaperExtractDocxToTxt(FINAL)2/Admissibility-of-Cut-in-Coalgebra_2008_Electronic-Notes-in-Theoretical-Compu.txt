	Electronic Notes in Theoretical Computer Science 203 (2008) 221–241	
www.elsevier.com/locate/entcs
Admissibility of Cut in Coalgebraic Logics
Dirk Pattinson1
Department of Computing Imperial College London UK
Lutz Schro¨der2
DFIK-Lab Bremen and
Department of Computer Science, Universita¨t Bremen Germany

Abstract
We study sequent calculi for propositional modal logics, interpreted over coalgebras, with admissibility of cut being the main result. As applications we present a new proof of the (already known) interpolation property for coalition logic and establish the interpolation property for the conditional logics CK and CK Id .
Keywords: Modal Logic, Coalgebraic Semantics, Proof Theory, Cut Elimination


Introduction
Establishing the admissibility of the cut rule in a modal sequent calculus often allows to establish many other properties of the particular logic under scrutiny. Given that the sequent calculus enjoys the subformula property, the conservativity property is immediate: each formula is provable using only those deductive rules that mention exclusively operators that occur in the formula. As a consequence, completeness of the calculus at large immediately entails completeness of every subsystem that is obtained by removing a set of modal operators and the deduction rules in which they occur. Moreover, cut-free sequent systems admit backward proof search, as the logical complexity of a formula usually decreases when passing from the conclusion to the premise of a deductive rule to the premise. Given that contraction is admis- sible in the proof calculus, this yields – in presence of completeness – decidability

1 Email: dirk@doc.ic.ac.uk
2 Email: Lutz.Schroeder@dfki.de

1571-0661 © 2008 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2008.05.027

and complexity bounds for the satisfiability problem associated with the logic under consideration [9,2]. Finally, a cut-free system provides the necessary scaffolding to prove interpolation theorems by induction on cut-free proofs.
For normal modal logics, sequent calculi, often in the guise of tableau systems, have therefore – not surprisingly – received much attention in the literature [1,5,16]. In the context of non-normal logics, sequent calculi have been explored for regular and monotonic modal logics [6], for Pauly’s coalition logic [7] and for a family of conditional logics [13]. All these logics are coalgebraic in nature: their standard semantics can be captured by interpreting them over coalgebras for an endofunctor on sets. This is the starting point of our investigation and we set out to derive sequent systems for logics with coalgebraic semantics and study their properties. Given a (complete) axiomatisation of a logic w.r.t. its coalgebraic semantics, we systematically derive a (complete) sequent calculus. In general, this calculus will
only be complete if we include the cut rule. We show that cut free completeness, and therefore eliminability of cut, follows if the axiomatisation is strictly one-step complete: every valid clause containing operators applied to propositional variables can be derived using a single modal deduction rule. The existence of a cut-free
sequent calculus for coalgebraic logics is then exploited to establish conservativity, complexity and interpolation for modal logics in a coalgebraic framework. While conservativity and complexity of coalgebraic logics have already been established in
[20] we believe that the results here offer additional conceptual insight. Regarding interpolation, we obtain a new proof of the interpolation property for Coalition Logic [7] while interpolation for the conditional logics CK and CK Id [4] were left
as future work in [13] and appear to be new.
On a technical level, we consider modal logics that are built from atomic propo- sitions, propositional connectives and modal operators, that is, in contrast to earlier
e.g. [10,14,21,20] we treat propositional variables as first-class citizens. This does not only provide a better alignment with standard texts in modal logic [4,3] but is moreover a prerequisite for formulating the interpolation property.
As a consequence, we are lead to work with coalgebraic models, that is, coalge- bras together with a valuation of the propositional variables, right from the start. Completeness and cut-free completeness is then proved via a terminal sequence argument, but over the extension of the signature functor to the slice category
Set/P(V ) where V is the set of propositional variables. This provides an alterna-
tive route to the shallow proof property of [20]. In this setting, we observe that strict completeness corresponds to eliminability of cut. As strict completeness can always be achieved by closure of the rule set under rule resolution, this essentially amounts to complementing the rule set so that cuts involving rule conclusions are in fact absorbed in the rule set in strong analogy with Mints’ comparison [12] between resolution and sequent proofs.
We summarise the coalgebraic semantics of modal logics in Section 2 and intro- duce modal sequent calculi in 3. Section 4 then establishes cut-free completeness and we discuss applications, in particular the interpolation property, in Section 5 before concluding with two open problems.

Coalgebraic and Logical Preliminaries
Given a category C and an endofunctor F : C → C, an F-coalgebra is a pair (C, γ) where C ∈ C is an object of C and γ : C → FC is a morphism of C. A morphism between F -coalgebras (C, γ) and (D, δ) is a morphism m : C → D ∈ C such that δ ◦ m = Fm ◦ γ. The category of F -coalgebras will be denoted by Coalg(F ).
In the sequel, we will be concerned with F -coalgebras both on the category Set of sets and (total) functions and on the slice category Set/P(V ), for V a denumerable set of propositional variables that we keep fixed throughout the paper. Working with the slice category Set/P(V ) allows a convenient treatment of propositional variables. In particular, coalgebras on Set/P(V ) play the role of Kripke models, i.e. they come equipped with a valuation of propositional variables. Recall that an object of
Set/P(V ) is a function f : X → P(V ) and a morphism m : (X → P(V )) → (Y  g
P(V )) is a commuting triangle, viz a function m : X → Y such that g ◦m = f . The projection functor mapping (X → P(V )) '→ X is denoted by U : Set/P(V ) → Set. For the remainder of the paper, we fix an endofunctor T : Set → Set and denote its extension to Set/P(V ) by T /P(V ) : (Set/P(V )) → (Set/P(V )); the functor T /P(V )
maps objects f : X → P(V ) to the second projection mapping TX×P(V ) → P(V ). Note that an object M ∈ Coalg(T /P(V )) is a commuting triangle necessarily of the form
C ¸	⟨γ,ϑ⟩	 T C  × P(V )

¸¸¸¸ϑ
¸¸¸
...
..π

¸z  . ..s 2
P(V )
or equivalently a triple (C, γ, ϑ) where (C, γ) ∈ Coalg(T ) and ϑ : C → P(V ) is a co-valuation of the propositional variables. Passing from the co-valuation ϑ : C → P(V ) to the valuation ϑ : V → P(C) induced by the self-adjointness of the powerset functor, we can view T /P(V )-coalgebras as T -coalgebras (C, γ) together with a valuation of propositional variables. The category of T /P(V )-coalgebras therefore plays the role of T-models (T -coalgebras which we see as frames, together with a valuation of propositional variables). In what follows, we will denote T /P(V )- coalgebras as triples (C, γ, ϑ) as above and use Mod(T ) to refer to the category Coalg(T /P(V )) of T -models.	If M = (C, γ, ϑ) is a T -model, then we refer to (C, γ) ∈ Coalg(T ) as the underlying frame of M .
On the syntactic side, we work with modal logics over an arbitrary modal simi- larity type (set of modal operators with associated arities) Λ. The set of Λ-formulas given by the grammar
F(Λ) e φ, ψ ::= p |⊥| φ → ψ | φ ∨ ψ | φ ∧ ψ | ♥(φ1,..., φn)
where A ∈ V and ♥ ∈ Λ is n-ary.  We abbreviate φ → ⊥ by ¬φ and ⊥ →
⊥ by T. Note that, in contrast to the earlier treatments of coalgebraic modal logic [10,14,21,20], the definition above includes propositional variables as first- class citizens. If S is a set (of formulas, or variables) then Λ(S) denotes the set
{♥(s1,..., sn) |♥∈ Λ is n-ary, s1,..., sn ∈ S} of formulas comprising exactly one

application of a modality to elements of S. We denote the set of propositional formulas over a set S by Prop(S) and write Cl(S) for the set of clauses over ele-

ments of S, i.e. formulas of the form s1 ∧ ··· ∧ sn → s'
∨ ··· ∨ s'
for n, k ∈ ω

and s1,..., sn, s' ,..., s' ∈ S. If φ ∈ Prop(S), then every valuation τ : S → P(X)
1	k
inductively defines a subset φ)τ ⊆ X by evaluation in the boolean algebra P(X)
and we write X, τ |= φ if φ)τ = X.
An S-substitution is a partial mapping σ : V - S.  We denote the result of simultaneously substituting σ(x) for every element x ∈ dom(σ) in a formula φ ∈ F(Λ) by φσ.
Formulas of F(Λ) are interpreted over T -coalgebras provided that T extends to a Λ-structure, i.e. comes equipped with an assignment of predicate liftings (natural transformations)
 ♥) : 2n → 2 ◦ T
to every n-ary modal operator ♥ ∈ Λ. Here 2 : Set → Set is the contravariant powerset functor, and for any functor F , F n denotes the n-fold product of F with itself, i.e. F n(X) = FX ×· · ·× FX. We usually leave the assignment of predicate liftings to modal operators implicit and simply use T to refer to the entire Λ- structure.
Given a Λ-structure T and M = (C, γ, ϑ) ∈ Mod(T ), the semantics of φ ∈ F(Λ) is inductively given by
 ♥(φ1,..., φn))M = γ−1 ◦  ♥)C( φ1)M ,..., φn)M )
and
 p)M = {c ∈ C | p ∈ ϑ(c)}
for p ∈ V together with the standard clauses for the propositional connectives.
If M = (C, γ, ϑ) is a T -model, semantic validity φ)M = C is denoted by M |= φ.
We write Mod(T ) |= φ if M |= φ for all M ∈ Mod(T ).
This definition of coalgebraic semantics relativises to one-step formulas, i.e.

clauses χ ∈ Cl(Λ(S)): every valuation τ : S → P(X) induces a subset χ)τ
⊆ TX 

defined inductively by ♥(s1,..., sn))τ	=  ♥)S(τ (s1),...,τ (sn)) and we write

TX, τ |= χ if χ)τ
running examples:
= TX. Our techniques will be illustrated by the following two

Example 2.1 [Coalition Logic and Conditional Logic]
Coalition logic [15] allows to reason about the coalitional power in games. We take N = {1,..., n} to be a fixed set of agents, subsets of which are called coalitions. The similarity type Λ of coalition logic contains a unary modal operators [C] for every coalition C ⊆ N . Informally, [C]φ expresses that coalition C has a collabo- rative strategy to force φ. The coalgebraic semantics for coalition logic is based on the (class-valued) signature functor C defined by
CX = {(S1,..., Sn,f ) |∅ =/	Si ∈ Set,f :  i∈N Si → X}.
The elements of CX are understood as strategic games with set X of states, i.e.

tuples consisting of nonempty sets Si of strategies for all agents i, and an outcome
  i∈C Si by SC, and for σC ∈ SC, σC¯ ∈ SC¯ , where C¯ = N − C, (σC, σC¯ ) denotes
the obvious element of	i∈N Si. A Λ-structure over C is defined by the predicate
liftings

 [C])X(A) = {(S1,..., Sn,f ) ∈ CX | ∃σC ∈ SC. ∀σC¯ ∈ SC¯ .f (σC, σC¯ ) ∈ A}.
The similarity type of the conditional logics CK and CK Id contains the single binary modal operator  (usually written as ⇒ which would conflict with the sequent notation introduced later) that represents a non-monotonic conditional. The selection function semantics of CK is captured coalgebraically via the functor CKX = (2(X) → P(X)) with → representing function space, and CK-coalgebras are standard conditional models [4]. We extend CK to a Λ-structure by virtue of the predicate lifting

  )X(A, B) = {f : 2X → PX | f (A) ⊆ B}

which induces the standard semantics of CK . The conditional logic CKId ad- ditionally obeys the (rank-1) axiom A  A and is interpreted over the functor CKIdX = {f : 2(X) → P(X) | ∀A ⊆ X.f (A) ⊆ A}; note that CKId is a sub-functor of CK. The functor CKId extends to a Λ-structure by relativizing the interpretation of  given above, i.e.

  )X(A, B) = {f ∈ CKIdX | f (A) ⊆ B}

for subsets A, B ⊆ X.

Sequent Systems for Coalgebraic Logics
Previous work on deduction in coalgebraic logics has focused on languages without propositional variables and deduction was formalised using Hilbert-style proof sys- tems where propositional variables were simulated using nullary modalities. This contrasts with our treatment here where we treat propositional variables as first- class citizens in a Gentzen-style sequent calculus. By a F(Λ)-sequent we mean a pair (Γ, Δ) (written Γ ⇒ Δ) where Γ, Δ ⊆ F(Λ) are multisets of formulas. The sequent Γ0 ⇒ Δ0 is a sub-sequent of Γ ⇒ Δ if Γ0 ⊆ Γ and Δ0 ⊆ Δ as multisets; this is denoted by Γ0 ⇒ Δ0 ⊆ Γ ⇒ Δ. If Γ ⊆ F(Λ) is a multiset, we write supp(Γ) for its set of elements, disregarding multiplicities. This is extended to sequents Γ ⇒ Δ by stipulating that supp(Γ ⇒ Δ) = supp(Γ) ⇒ supp(Δ). We identify a formula φ with the singleton multiset {φ} whenever convenient and denote the multiset union of Γ, Δ ⊆ F(Λ) by Γ, Δ.
Substitutions are applied pointwise to sequents: if σ is a substitution and Γ ⇒ Δ is a sequent, (Γ ⇒ Δ)σ = {φσ | φ ∈ Γ} ⇒ {φσ | φ ∈ Δ}. In our terminology, a

sequent rule is a tuple (E1,..., En, E0) of sequents, usually written in the form


E0	.. .	En
or	E ,...,E /E

E0	1	n	0
where we use captial letters A, B, C,... from the beginning of the alphabet to in- dicate propositional variables. We silently identify sequent rules modulo reordering of the sequents in the premise. To make the notation bearable, we allow ourselves to use additional meta-variables Γ, Δ,... to represent multisets of elements of V so that for example the introduction of conjunction on the right
Γ ⇒ Δ,A	Γ ⇒ Δ,B 
R ∧	Γ ⇒ Δ,A ∧ B
is in fact a rule schema, each instance of which is given by a choice of multisets Γ, Δ ⊆ V .
Given a set R of sequent rules, the notion of deduction is standard: the set D of R-derivable sequents is the least set that is closed under the rules in R, i.e. the least set D of sequents that satisfies E0σ ∈ D whenever E1,..., En/E0 ∈ R, σ : V → F(Λ) is a substitution and E1σ,..., Enσ ∈ D. We write R ▶ Γ ⇒ Δ if Γ ⇒ Δ is an R-derivable sequent. A sequent rule E1,..., En/E0 is R-admissible if R ▶ E0σ whenever R ▶ Eiσ for all i = 1,..., n.
We use the following system G to account for the propositional part of our calculus:
(Ax )	Γ,A ⇒ Δ,A	(L⊥)	⊥, Γ ⇒ Δ

(L∧)	A, B, Γ ⇒ Δ
A ∧ B, Γ ⇒ Δ
(L∨)	A, Γ ⇒ Δ	B, Γ ⇒ Δ
A ∨ B, Γ ⇒ Δ
(L →)	Γ ⇒ Δ,A	B, Γ ⇒ Δ
A → B, Γ ⇒ Δ
(R∧)	Γ ⇒ Δ,A	Γ ⇒ Δ,B 
Γ ⇒ Δ,A ∧ B
(R∨)	Γ ⇒ Δ, A,B 
Γ ⇒ Δ,A ∨ B
(R →)	A, Γ ⇒ Δ,B 
Γ ⇒ A → B, Δ

where Ax and L⊥ are assumed to have empty premise. This is a slight modification of the system G3c of [22] where only A ∈ V is permitted in (Ax ) and (Ax ) as formulated here is admissible. Note that exchange rules are not needed as G is formulated in terms of multisets.
Note that G is complete w.r.t.  propositional validity, i.e.  G ▶ Γ ⇒ Δ iff Γ →	Δ is a propositional tautology. Our next task is to extend G with addi- tional sequent rules to account for modal deduction. It has been shown in [17] that coalgebraic logics can always be completely axiomatised in rank 1, in particular, by
a (possibly infinite) number of one-step rules:
Definition 3.1 A one-step rule over a modal similarity type Λ is a pair (φ, ψ), usu- ally written φ/ψ, where φ ∈ Prop(V ) is a propositional formula and ψ ∈ Cl(Λ(V ))

is a clause over Λ(V ) where every propositional variable occurs at most once in ψ.
The restriction on occurrences of propositional variables in the conclusion of one- step rules is unproblematic and can always be satisfied by adding new variables, e.g. by passing from the rule φ/Oa → Va to the rule φ Λ a — b/Oa → Vb if b does not occur in φ.
We are now associating a sequent rule (E1,..., En/E0) to every one-step rule φ/ψ. The sequents E1,..., En occurring in the premise essentially represent the minimal conjunctive normal form of the premise φ of the one-step rule. The follow- ing notions are convenient for this purpose.
Definition 3.2 Suppose φ ∈ Prop(V ) is a propositional formula. A valuation for φ is a partial function τ : V - {⊥, T}; valuations are partially ordered by graph inclusion denoted by ⊆. If τ : V - {⊥, T} is a partial valuation, we deﬁne φτ = ⊥ if φτ' = ⊥ for all total valuations τ' ≥ τ. The set min(φ) of minimal falsifications of φ is the set of minimal elements of {σ : V - {⊥, T} | φσ = ⊥}. To every valuation σ with ﬁnite domain we associate a clause cl(σ) =  σ(A)=T A →  σ(A)=⊥ A.
If for example φ = p Λ (q → p Λ r) then min(φ) = {σ1, σ2} with σ1(p) = ⊥ and σ2(q) = T, σ2(r) = ⊥ and both σ1, σ2 undefined, otherwise. We obtain cl(σ1) = p and cl(σ2) = q → r resulting in the conjunctive normal form p Λ (q → r) of φ. We obtain:
Lemma 3.3 If φ ∈ Prop(V ), then min(φ) is ﬁnite and φ and {cl(σ) | σ ∈ min(φ)} are propositionally equivalent. Moreover φ → ψ is a propositional tautology iff every σ ∈ min(ψ) extends some σ' ∈ min(φ).
This allows us to associate sequents to formulas, and more generally sequent rules to one-step rules as follows:
Definition 3.4 (Associated Sequents)	(i) If χ =  n	Φi →  k	Ψj ∈ Cl(Λ(V ))
is a clause, then the associated sequent of χ is the sequent £(χ) = Φ1,..., Φn ⇒
Ψ1,..., Ψk.
If φ ∈ Prop(V ) then associated sequent set of φ is the set of sequents £(φ) = 
{£(cl(σ)) | σ ∈ min(φ)}.
Finally, if φ/ψ is a one-step rule, then £(φ/ψ) denotes the set of sequent calculus rules consisting of all rules E1,..., En, /Γ,F ⇒ Δ,G where the Ei are pairwise distinct with £(φ) = {E1,..., En} and £(ψ) = F ⇒ G.
If R is a set of one-step rules, then GR is the system consisting of the rules of
G together with the rules £(φ/ψ) for all φ/ψ ∈ R.
We note that – by virtue of the convention that Γ, Δ stand for multisets of variables A, B, C ⊆ V – every one-step rule gives rise to a set of sequent calculus rules. This is needed to absorb the structural rules of weakening. It is easy to see that all sequent rules obtained from one-step rules have a very specifc form: all premises are sequents consisting only of variables A, B, C ∈ V whereas conclusions consists of modal operators applied to meta-variables O(A1,..., An) together with context formulas.

The sole purpose of the above definitions is to define sequent calculi associated with sets of one-step rules. For our two running examples, the situation is as follows.

Example 3.5 [Coalition Logic and Conditional Logic]
Consider the set RC consisting of the one-step rules

  k	A →⊥ 

  k	Ai → B ∨  l	A'


	 

subject to the side condition that the Ci are pairwise disjoint; the second rule additionally requires that Ci ⊆ D for all i = 1,..., k. The sequent rules associated to this set are most economically presented if we abbreviate A = A1,..., Ak for A1,..., Ak ⊆ V and C = (C1,..., Ck) for C1,..., Ck ⊆ C; in this case [C]A represents the multiset [C1]A1,..., [Ck]Ak of formulas. Using this notation, we obtain the following two associated sequent rules


(A)
A ⇒∅ 


Γ, [C]A ⇒ Δ

(B)
A ⇒ B, A'


Γ, [C]A ⇒ Δ, [D]B, [N]A'

where N = N,...,N ; both rules are subject to the side condition that the coalitions appearing in C are disjoint; rule (B) moreover requires that their union is a subset of D. We refer to the calculus containing G and the rules (A), (B) above as GC.
The set RCK contains the one-step rules

  n	Bi → B0 Λ  n

(Ai — A0)

for every n ∈ ω. As above, we abbreviate B = B1,..., Bk, A = A1,..., Ak and
A   B = A1   B1,..., Ak   Bk. The sequent rules for CK then take the form
(C) B ⇒ B0	A0 ⇒ A1	.. .	A0 ⇒ Ak	A1 ⇒ A0	.. .	Ak ⇒ A0 .
Γ, A   B ⇒ A0   B0, Δ
The set of one-step rules needed to axiomatise CK Id contains the additional rule
A0 — A1 A0   A1
which induces the sequent rule
(I) A0 ⇒ A1	A1 ⇒ A0
Γ ⇒ A0   A1, Δ
The rules (C) express that the second component obeys normality whereas the first behaves like the modal  of neighbourhood frames and (I) formalises an identity law. The calculus extending G with (C) is later referenced as GCK and its exten- sion with the rule (I) as GCKId.

We note the following immediate corollary of Lemma 3.3.
Corollary 3.6 Suppose φ → ψ ∈ Prop(W ) is a propositional tautology. Then for every Γ ⇒ Δ ∈ £(ψ) there exists Γ' ⇒ Δ' ∈ £(φ) such that Γ' ⊆ Γ and Δ' ⊆ Δ.
Informally, if φ → ψ is a propositional tautology and all sequents E ∈ £(φ) are provable, the above lemma entails that we can use weakening (rather than cut, introduced next) to show that also all sequents E' ∈ £(ψ) are provable.
Convention 3.7 If R is a set of one-step rules, we denote the system that contains the rules of GR together with the Cut rule
(cut )	Γ ⇒ Δ,A	A, Γ ⇒ Δ
Γ ⇒ Δ
by GRc. The notation GR[c] indicates a statement that applies both to GR and
GRc; eg. GR[c] ▶ Γ ⇒ Δ reads as derivability both in the system GR and GRc.
As already hinted at above, the system GR absorbs the structural rules of weak- ening and contraction. The following two propositions are devoted to a syntactic proof of this fact. We will later return to this point and present an alternative argument via semantic completeness. Weakening comes first:
Proposition 3.8 The following left and right rules of weakening

(LW ) Γ ⇒ Δ
Γ,A ⇒ Δ
are admissible in GR[c].
(RW ) Γ ⇒ Δ
Γ ⇒ Δ,A 

Proof. By induction on the derivation of GR[c] ▶ φ. For admissibility of (LW ) we have to show that GR[c] ▶ Γ,A ⇒ Δ whenever GR[c] ▶ Γ ⇒ Δ for multisets Γ, Δ ⊆ F(Λ) and A ∈ F(Λ). The cases dealing with the rules of G are standard (see [22]). Suppose Γ ⇒ Δ has been derived with the help of a sequent rule associated with a one-step rule φ/ψ. Then there exists a substitution σ : V → F(Λ) such that
GR[c] ▶ Eσ for all E ∈ £(ψ)
£(ψ)σ ⊆ Γ ⇒ Δ.
This implies £(ψ)σ ⊆ Γ,A ⇒ Δ so that the same rule also derives Γ,A ⇒ Δ. Applications of the cut rule follow directly from the induction hypothesis.	 
The syntactic proof of admissibility of contraction is slightly involved and re- quires a few lemmas. Recall that the support supp(E) of a sequent disregards multiplicities in antecedent and succedent.
Lemma 3.9 Suppose τ : V → V satisﬁes τ (B) = A for some A, B ∈ V and τ (C) = C for all C /= B. Then, for all φ ∈ Prop(V ) and all E ∈ £(φτ ) there exists E∗ ∈ £(φ) such that supp(E٨τ ) ⊆ E.
Proof. Let E ∈ £(φτ ). Then there exists ρ : V - {T, ⊥} ∈ min(φτ ) such that (φτ )ρ = ⊥ and E = {C ∈ dom(ρ) | ρ(C) = T} ⇒ {C ∈ dom(ρ) | ρ(C) = ⊥}.

Note that B ∈/ dom(ρ) as B does not occur in φτ . If A ∈/ dom(ρ) then ρ ∈ min(φ) and we are done. So suppose A ∈ dom(ρ). If ρ' : V - {⊥, T} extends ρ by mapping B '→ A, i.e.  ρ'(B) = A and ρ'(C) = ρ(C) for all C /= B, we have φρ' = ⊥. Take a minimal falsification ρ'' ⊆ ρ' of φ whence φρ'' = ⊥ and put E∗ = {C | ρ''(C) = T} ⇒ {C | ρ''(C) = ⊥}. Then E∗ ∈ £(φ). To see that supp(E٨τ ) ⊂ E first pick τ (C) that occurs positively in E∗τ . Case 1. τ (C) /= A. The C = τ (C) and ρ''(C) = T whence ρ(C) = T and C occurs positively in E. Case 2. τ (C) = A. Then C ∈ {A, B}. In both cases, ρ''(C) = T whence ρ(A) = T so A occurs positively in E; note that A will only occur once in E. The cases where τ (C) occurs negatively in E∗τ are symmetric.	 
Lemma 3.10 Suppose τ : V → V satisﬁes τ (B) = A for some A, B ∈ V and τ (C) = C for C /= B and let φ ∈ Prop(V ), σ : V → J(Λ). If GR ▶ supp(Eτ )σ for all E ∈ £(φ) then GR ▶ Eσ for all E ∈ £(φτ ).
Proof. Pick E ∈ £(φτ ). By the above lemma, we can find E٨ ∈ £(φ) such that supp(E٨τ ) ⊆ E. By assumption, GR ▶ supp(E٨τ )σ. Since supp(E٨τ ) ⊆ E we have supp(E٨τσ) ⊆ Eσ. Since supp(E٨τ )σ is derivable the admissibility of weakening implies GR ▶ Eσ.	 
For admissibility of contraction, we have to rely on an additional property of the set of one-step rules:
Definition 3.11 (Definition 5.1 of [18]) A clause χ over Λ(V ) is contracted if all its literals are distinct and a one-step rule φ/ψ is contracted if its conclusion ψ is contracted. A set R of one-step rules is contraction closed, if, for every σ : V → V and every φ/ψ ∈ R there exists σ' : V → V and φ'/ψ' ∈ R such that ψ'σ is contracted, ψσ is propositionally implied by ψ'σ and and φ'σ is a propositional consequence of φσ.
Proposition 3.12 The following left and right rules of contraction

(LC ) A, A, Γ ⇒ Δ
A, Γ ⇒ Δ
(RC ) Γ ⇒ Δ, A,A 
Γ ⇒ Δ,A 

are admissible in GRc. If moreover R is contraction closed, then they are also admissible in GR.
Proof. Admissibility of (LC ) and (RC ) in GRc is just an application of the cut rule. We focus on admissibility in GR. For the admissibility of (LC ) we have to show that GR ▶ Γ,A ⇒ Δ whenever GR ▶ Γ, A,A ⇒ Δ where again Γ, Δ ⊆ J(Λ) are multisets of formulas and A ∈ J(Λ). We proceed by induction over the derivation of Γ, A,A ⇒ Δ where the applications of rules of G is standard. So suppose that a rule £(φ/ψ) associated with a one-step rule φ/ψ ∈ R has been applied in the derivation of Γ, A,A ⇒ Δ; assume that £(ψ) = Γ1 ⇒ Δ1. Then there exists a substitution σ : V → J(Λ) and two subsets Γ0, Δ0 ⊆ J(Λ) such that
GR ▶ Eσ for all E ∈ £(φ)
Γ, A,A ⇒ Δ = Γ0, Γ1σ ⇒ Δ0, Δ1σ.

If A ∈ Γ0 then putting Γ' = Γ \ {A} allows to derive Γ,A ⇒ Δ using the same rule,
so suppose that A ∈/ Γ0 whence {A, A}⊆ Γ1σ as multisets.
As ψ is contracted as a conclusion of a one-step rule, there exist two distinct elements B0, B1 ∈ V such that σ(B0) = σ(B1). Consider the substitution τ : V → V with τ (B1) = B0 and τ (C) = C otherwise. By contraction closure, we can find a one-step rule φ'/ψ' ∈ R and a substitution τ' : V → V such that ψ'τ' is contracted, and both formulas ψ'τ' → ψτ and φσ → φ'σ' are tautologies. As ψ'τ' is contracted, we can assume w.l.o.g. that τ' is a bijection.
By assumption, we have GR ▶ Eσ for all E ∈ £(φ). As Eσ = Eτσ we conclude that GR ▶ Eτσ for all E ∈ £(φ). By induction hypothesis, we have GR ▶ supp(Eτ )σ and by Lemma 3.10 GR ▶ Eσ for all E ∈ £(φτ ) Since φτ → φ'τ' is a tautology, Corollary 3.6 allows us to conclude that GR ▶ Eσ for all E ∈ £(φ'τ'). Since τ' is a bijection, this immediately gives derivability of Eτ'σ for all E ∈ £(φ') as {Eτ' | E ∈ £(φ')} = £(φ'τ ). If F = £(ψ'), the sequent rule associated with φ'/ψ' now implies derivability of Fτ'σ.  Since ψ'τ' → ψτ is a tautology we have
£(ψ'τ') ⊆ £(ψτ ). It follows that GR ▶ Γ,A ⇒ Δ by admissibility of weakening as
ψ'τ' is contracted.	 

Soundness and Completeness
We now study the relationship between GR-derivability and semantic validity. As in previous work, both soundness and completeness will be implied by one-step completeness of the rule set R. However, we want to point out two subtle differences:
our proof deals with propositional variables directly and (b) it sheds light on the structure of proofs. In particular, we will see that a one-step complete rule set necessitates the use of cut to obtain completeness and eliminability of cut amounts to strict one-step completeness. We recall the definition of one-step soundness and one-step completeness:
Definition 4.1 A set R of one-step rules is one-step sound w.r.t a Λ-structure T if, whenever φ/ψ ∈ R, we have TX, τ |= ψ for each set X and each P(X)- valuation τ such that X, τ |= φ. The set R is (strictly) one-step complete if, whenever TX, τ |= χ for a set X, χ ∈ Cl(Λ(V )), and a P(X)-valuation τ, then χ is (strictly) provable over X, τ, i.e. propositionally entailed by clauses (a clause) ψσ where φ/ψ ∈ R and σ is a Prop(V )-substitution such that X, τ |= φσ.
It is an easy exercise to show that GR[c] is sound provided the rule set R is one-step sound. To align the coalgebraic semantics of J(Λ) with the system GR, we define the interpretation of a sequent Γ ⇒ Δ w.r.t. M = (C, γ, ϑ) ∈ Mod(V ) to be the semantics of the associated propositional formula, i.e.  Γ ⇒ Δ)M =   Γ →

Theorem 4.2 (Soundness) Suppose R is one-step sound for T. Then Mod(T ) |= Γ ⇒ Δ if GR[c] ▶ Γ ⇒ Δ.
Proof. We proceed by induction over the length of the derivation, where the only interesting cases are applications of rules £(φ/ψ) for φ/ψ ∈ R. So suppose

(C, γ, ϑ) ∈ Mod(T ) and Γ ⇒ Δ has been derived via an application of £(φ/ψ). That is, there is a substitution σ : V → J(Λ) such that GR ▶ Eσ for all E ∈ £(φ) and
£(ψ)σ ⊆ Γ ⇒ Δ. By induction hypothesis Eσ)M = T for all E ∈ £(φ) and conse- quently φσ)M = T by definition of the associated sequent rule. Consider the У(C)- valuation τ (A) = σ(A))M . We obtain C, τ |= φ in the one-step sense and one-step soundness implies TC, τ |= ψ. Consequently, Γ ⇒ Δ) ≥ £(ψ)σ)M = ψσ)M = T which concludes the proof.	 
Completeness can now be established in either of the three following ways:
syntactically by relating the sequent system GR to a Hilbert system containing all rules of R.
by applying the shallow proof property [20] of a tableau system induced by the rules of R and simulating propositional variables by nullary modalities, or
by a direct semantical proof that treats propositional variables as first-class citizens.
In this paper, we adopt the latter approach and prove completeness using a terminal sequence argument in the style of [14]. As we are dealing with models, i.e. coalgebras equipped with a valuation, we consider the terminal sequence of the endofunctor T /У(V ) in the category Set/У(V ). We briefly recapitulate the terminal sequence construction, as used in [14], but phrased in a general categorical setting.
If F : C → C is an endofunctor on a category C with terminal object 1, the finitary part of the terminal sequence of F is the diagram consisting of
the objects F n1 for n ∈ ω where F n denotes n-fold application of F , and
the morphisms pi : F i1 → F j1 defined by pi+1 = F i(! : F 1 → 1) and pn+k =

n+k n+k−1
j	i	n
◦· · · ◦ pk+1.

Every F -coalgebra (C, γ) gives rise to a canonical cone (C, (γn)n∈ω) where γn :
C → F n1 over the finitary part of the terminal sequence by stipulating that γ0 =
! : C → F 01 = 1 where ! is the unique arrow given by finality of 1 ∈ C and γn+1 = Fγn ◦ γ. We use the terminal sequence construction for the functor F = T /У(V ), the terminal sequence of which is visualised in the following diagram.


S0	p1=!
S1	p2=T p1×id
S2	p3=T p2×id

¸, 0
× У V
π2
J 
¸,1	0
TS0 × У(V )
π2
J 
1¸,1
TS1 × У(V )
π2
J 
... 

У(V )	У(V )	У(V ) 	 ... 

The key technique in the proof of completeness via a terminal sequence argument is to associate to every formula of modal rank ≤ n an n-step semantics φ)n over the n-th approximant (T /У(V ))n1 of the terminal sequence. In our case, we take a predicate over (T/У(V ))n1 to be a subset of Sn = U ((T /У(V ))n1). The formal definition is as follows:

Definition 4.3 The stratification of J(Λ) is the sequence Jn(Λ) ⊆ J(Λ) of sets of formulas deﬁned inductively by
J0(Λ) = Prop(V ) and Jn(Λ) = Prop(Λ(Jn−1(Λ)) ∪ V ).
The n-step semantics of φ ∈ Jn(Λ) ⊆ Sn is inductively deﬁned by S0 = У(V ) and
 p)0 = {S ∈ У(V ) | p ∈ S}
for n = 0 and Sn = T Sn−1 × У(V ) together with
 p)n = π−1({S ∈ У(V ) | p ∈ S})


and

 O(φ1,..., φk))n = π−1 ◦ M )S



n−1

( φ1)n−1,..., φk)n−1)

for φ1,..., φk ∈ Jn−1(Λ) and O∈ Λ an n-ary modality.
Note that Sn = U ((T /У(V ))n1). We can mediate between the n-step semantics and the semantics w.r.t Mod(T ) as follows:
Lemma 4.4 Suppose φ ∈ Jn(Λ) and M = (C, γ, ϑ) ∈ Mod(T ). Suppose (M, (γn)n∈ω) is the canonical cone of M over the terminal sequence of T /У(V ). Then φ)M = (Uγn)−1( φ)n) for all φ ∈ Jn(Λ).
Proof. By induction on n. For n = 0 we have Uγ0 = ϑ and ϑ−1( p)0) = ϑ−1({S ⊆
V | p ∈ S}) = {c ∈ C | p ∈ ϑ(c)} = p)M . For n > 0, we obtain inductively U γn =
⟨TUγn−1 ◦ γ, ϑ⟩ : C → TSn−1 × У(V ). This gives (Uγn)−1( p)n) = (π2 ◦ ⟨TU γn ◦ γ, ϑ⟩)−1({S ⊆ V | p ∈ S}) = ϑ−1({S ⊆ V | p ∈ S}) = {c ∈ C | p ∈ ϑ(c)} = p)M as above. For modal formulas O(φ1,..., φk) with φ1,..., φk ∈ Jn−1(Λ) we obtain
(U γn)−1( O(φ1,..., φk)n))

=⟨TUγn−1 ◦ γ, ϑ⟩−1 ◦ π−1( O)S

n−1
( φ1)n−1,..., φk)n−1))

=γ−1 ◦ (TUγn−1)−1 ◦ O)Sn−1 ( φ1)n−1,..., φk)n−1)
=γ−1 ◦ O)C ◦ (U γn−1)−1 ×· · · × (U γn−1)−1( φ1)n−1,..., φk)n−1)
=γ−1 ◦ O)( φ1)M ,..., φk)M )
= O(φ1,..., φk))M

using the induction hypothesis and naturality of O.	 
We recall the following lemma, whose proof directly translates to a general cat- egorical setting, from [14]:
Lemma 4.5 Suppose that f 0 : 1 → F 1 is a morphism of C and let f n = Ff n−1
inductively. Then f n = idF n1 for all n ∈ ω.
This immediately implies that semantical validity of a sequent Γ ⇒ Δ, with Γ, Δ ⊆ Jn(Λ) is equivalent to validity w.r.t the n-step semantics.

Corollary 4.6 Suppose Γ ⇒ Δ is a sequent with Γ, Δ ⊆ Jn(Λ). Then Mod(T ) |= Γ ⇒ Δ iff Γ ⇒ Δ)n = T.
Proof. The ‘if’-part is a consequence of Lemma 4.4 above.
For the ‘only if’-part assume that Mod(T ) |= Γ ⇒ Δ and pick f 0 : 1 → (T /У(V )1) ∈ Set/У(V ) where 1 is a terminal object of Set/У(V ). Consider M = (C, γ) ∈ Coalg(T /У(V )) where C = (T /У(V ))n and γ = (T /У(V ))n(f 0). As Mod(T ) |= Γ ⇒ Δ we have that M |= Γ ⇒ Δ and Lemma 4.4 above implies that
 Γ ⇒ Δ)n = T.	 
The proof of completeness (and later cut-free completeness) relies on a stratifi- cation of the provability predicate of GR[c]. We introduce an auxiliary provability judgement GR[c] ▶n Γ ⇒ Δ, indexed by modal depth. Both GR and GRc contain the rules

(Pn
)	GR[c] ▶n E1	.. .	GR[c] ▶n Ek
GR[c] ▶n+1 E0

for all rules P = E1,..., Ek/E0 associated with one-step rules φ/ψ ∈ R together
with the rules

(Rn
) GR[c] ▶n E1	.. .	GR[c] ▶n Ek
GR[c] ▶n E0

for all rules S = E1,..., Ek/E0 of G. Application of the rules (Pn), (Rn) and (Cut n) is restricted to substitutions σ : V → Jn(Λ).
For GRc we have the additional rule

(Cut
) GRc ▶n Γ ⇒ Δ, A	GRc ▶n A, Γ ⇒ Δ
n	GRc ▶n Γ ⇒ Δ

whose application is also substitutions to valuations σ : V → Jn(Λ).
The following proposition is the key stepping stone in the completeness proof and relates validity in the n-step semantics to derivability in rank n.
Proposition 4.7 Let Γ ⇒ Δ be a sequent where Γ, Δ ⊆ Jn(Λ). Then Γ ⇒ Δ)n = T implies that GRc ▶n Γ ⇒ Δ. If moreover R is strictly one-step complete and reduction closed, then GR ▶n Γ ⇒ Δ.
Proof. By induction on n. If n = 0 the statement follows from semantic complete- ness of G. For n > 0, it suffices to consider Γτ ⇒ Δτ )n = T for τ : V → Jn−1(Λ) and
Γ = O1q1,..., Oiqi, p1,..., pj and Δ = O' qs ,..., O'' qs, p' ,..., p' '
1 1	i  i	1	j
for qk ∈ V n if Oi is n-ary and analogously for qs . By definition of ·)n and elemen-
tary boolean algebra, we deduce that either

i	i'	j	j'
   Okqkτ →   O' qs τ )n = T or   pk →   p' )n = T



holds. In the latter case,  j	pj
j'
k=1
' is a propositional tautology and the

result follows from semantical completeness of G.  So assume that the left-hand

identity above holds. Consider the clause

χ =  Γ →  Δ

and write τn−1 for the У(Sn−1) valuation p '→ τ (p))n−1. Then T Sn−1,τ |= χ. By one-step completeness, there exist one-step rules φ1/ψ1,..., φr, ψr and substitutions σ1,..., σr : V → Prop(V ) such that
Sn−1, τn−1 |= φkσk for k = 1,..., r, and

r
k=1
ψkσk → χ is a propositional tautology.

Consequently, for k = 1,...,r we have that φkσkτ )n−1 = T. Suppose that £(ψk) = Γk ⇒ Δk. By induction hypothesis, we have that GR[c] ▶n−1 E for all E ∈ £(φk) and all k = 1,..., r. Applying the sequent rule associated with φk/ψk, we obtain GR[c] ▶n Γτ, Γkσkτ ⇒ Δτ, Δkσkτ for all k = 1,...,r which entails that GR[c] ▶n
Γτ ⇒ ψkσkτ, Δτ again for all k = 1,...,r and therefore ▶n Γτ ⇒ ( r	ψkσk), Δτ .

r k=1
ψkσk → χ is a propositional tautology we have that


r
GR ▶n Γτ, (	ψkσk) ⇒ Δτ
k=1

and an application of the cut rule now gives GR ▶n Γτ ⇒ Δτ as required.
If moreover R is strictly one-step complete and contraction closed, we can assume r = 1 in the above so that ψ1σ1 → χ is a propositional tautology and χσ contracted. By Corollary 3.6 £(χ) ≥ £(ψ1σ1) so that (Γ ⇒ Δ)τ = £(χτ ) ≥ £(ψ1)σ1τ proving that GR ▶n (Γ ⇒ Δ)τ .	 
Note that we needed the power of the cut rule at precisely one point in the above proof: To conclude χτ from the sequent ψ1σ1τ, ..., ψrσrτ – the need for cut is eliminated if we use strictly complete and contracted rule sets. Moreover, closure under contraction is needed as we can only assert that χ is a propositional consequence of ψ1σ1 which makes no assertion about the multiplicity of literals in either ψ1σ1 or χ.
Completeness is now an easy corollary.
Corollary 4.8 (Completeness and cut free completeness) Suppose R is one- step complete for T and Mod(T ) |= Γ ⇒ Δ for a sequent Γ ⇒ Δ over J(Λ). Then GRc ▶ Γ ⇒ Δ. If moreover R is contraction closed and strictly complete, then GR ▶ Γ ⇒ Δ.
As a corollary, we have admissibility of cut.
Corollary 4.9 Suppose R is contraction closed and strictly complete. Then the cut rule is admissible in GR.
Note that we have not used admissibility of weakening and contraction in the above completeness proof. Therefore (cut-free) completeness yields an alternative, semantic proof.

Corollary 4.10 Suppose R is one-step sound and one-step complete. Then weak- ening and contraction are admissible in GRc. If moreover R is strictly one-step complete and contraction closed, then weakening and contraction are admissible in GR.
Proof. Via soundness and completeness w.r.t. Mod(T ).	 
Note that the above semantical proof yields a slightly weaker result than the syntactic proofs of Section 3 as we pre-suppose soundness and completeness w.r.t. a given Λ-structure. However, for every rank-1 logic we can always construct a Λ-structure for which the given rule set is one-step sound and strictly one-step complete [19]. We conclude the section by re-visiting our two running examples.
Example 4.11 (i) It has been shown in [18] that the set of one-step rules RC is both strictly one-step complete and resolution closed. As a consequence, the cut rule is admissible in GC and GC is complete for Mod(C).
(ii) We give a direct proof of the fact that the rule set RCK is strictly one-step complete. This then implies completeness and admissibility of cut also for GCK.

Suppose χ =  i∈I
(Ai   Bi) → 
j∈J
(A'
   B' ) and let τ be a У(X)-valuation

such that TX, τ |= χ. We claim that there exists j ∈ J and I0 ⊆ I such that
τ (Ai) = τ (A' ) for all i ∈ I0

 

i∈I0
τ (Bi) ⊆ τ (B' ).

Assume, for a contradiction, that this is not the case.  Then, for every j ∈ J,
defining Ij = {i ∈ I | τ (Ai) = τ (A' )}} yields	τ (Bi) /⊆ τ (B' ). Define the



f (S

) =   i∈Ij
τ (Bi)	S = τ (A' )

∅	otherwise.

Then f (τ (Ai)) ⊆ τ (Bj) but for all j ∈ J we have that f (τ (A' )) /⊆ B'


by construc-

j	j
tion, contradicting CK,τ |= χ. We can therefore assume the claim and pick j ∈ J

claim follows as	Bi → B' Λ	Ai — A' /	(Ai   Bi) → (Aj   Bj) is
substitution instance of a one-step rule above the premise of which is valid under τ . It is easy to see that also the rule set RCKId is strictly one-step complete for
CKId: if χ is as above, one shows that either A' = B' for some j ∈ J or there exists
j	j
j ∈ J and I0 ⊆ I as above; in the latter case we proceed as above. If the former is the case, then the result follows by instantiating the rule A0 — A1/A0  A1. It is easy to see that both RCK and RCKId are one-step sound and closed under reduction, hence GCK is complete w.r.t Mod(CK) and cut is admissible in GCK; the analogous statement holds for GCKId.
Some remarks are in order. Strictly complete rule sets can always be systemati- cally constructed by closing arbitrary one-step complete rule sets under rule resolu- tion. In a nutshell, if φ1/ψ1 and φ2/ψ2 are one-step rules where Oa occurs positively in φ1 and negatively in φ2, one adds the rule φ1 Λ φ2/ψ where ψ is the resolvent

of ψ1 and ψ2 at Oa assuming that the rules share no other propositional variables. This is detailed in Theorem 3.15 of [18] where it is also shown that resolution closed rule sets are automatically strictly one-step complete. In this light, the proof sys- tem itself absorbs all the cuts involving rule conclusions, which suffices to prove cut-free completeness. Indeed, the rule sets in our examples have been obtained by systematically resolving the rules of given, one-step complete systems.

Applications
This section presents, from a syntactic viewpoint, some applications of cut-free completeness of GR for a strictly complete and resolution closed set R of one-step rules. The first application, the subformula property, is immediate:
Theorem 5.1 Suppose R is strictly one-step complete and contraction closed. Then GR has the subformula property, i.e. every deduction GR ▶ Γ ⇒ Δ only mentions subformulas of formulas occurring either in Γ or Δ.
Proof. By induction on the derivation of GR ▶ Γ ⇒ Δ where both the case of propositional connectives and the application of a sequent rule associated with φ, ψ ∈ R is immediate by the rule format.	 
As a consequence, we obtain alternative proofs of two results of [18] regarding conservativity and complexity of coalgebraic logics.
Corollary 5.2 (Conservativity) Suppose Λ0 ⊆ Λ is a sub-similarity type and R is strictly one-step complete and contraction closed for a Λ-structure T. If R0 only contains those (φ, ψ) ∈ R for which ψ is a clause over Λ0(V ) then GR0 is complete for T.
Proof. Suppose Γ ⇒ Δ is a valid sequent over J(Λ0). Then GR ▶ Γ ⇒ Δ. By the subformula property, any derivation of Γ ⇒ Δ only contains subformulas of Γ ⇒ Δ and hence no rules of R \ R0 are ever applied.	 
As the design of the system GR is such that the logical complexity of the formula strictly decreases when passing from conclusion to premise, these systems can be used to establish both decidability and complexity of the satisfiability problem. Simply put, proof search in GR terminates if for every sequent E there are only finitely many substitution instances of rule conclusions equal to E with different premises.
Polynomial bounds on the size of such rules imply decidability in polynomial space using depth-first search.
This allows us to re-prove the main theorem of [18] (to which we refer for the definition of PSPACE -tractable) in the setting of sequent calculi:
Theorem 5.3 Suppose R is strictly one-step complete, resolution closed and PSPACE- tractable. Then the satisﬁability problem for J(Λ) w.r.t. T is decidable in polyno- mial space.

Proof. As R is PSPACE -tractable, there are only finitely many (rule, substitution)- pairs of polynomial size that allow to derive any given sequent and the depth of the search tree is polynomial in the size of the input formulas.	 


Cut-free proof calculi also provide all the necessary scaffolding to prove Craig interpolation by induction on cut-free proofs. To aid the formulation of the inter- polation property, we write FV(φ) for the set of propositional variables occurring in φ ∈ J(Λ) and extend to multisets and sequents by FV(Γ) = ∪{FV(φ) | φ ∈ Γ} and FV(Γ ⇒ Δ) = FV(Γ) ∪ FV(Δ). Interpolation then takes the following form:
Definition 5.4 J(Λ) has the Craig Interpolation Property (CIP) with respect to Mod(T ) if Mod(T ) |= φ → ψ for φ, ψ ∈ J(Λ), then there exists an interpolant θ ∈ J(Λ) such that Mod(T ) |= φ → θ, Mod(T ) |= θ → ψ and FV(θ) ⊆ FV(φ) ∩ FV(ψ).
Syntactic proofs of the CIP proceed by induction on cut-free proofs. The fol- lowing definition introduces the necessary terminology.
Definition 5.5 A split sequent is a quadruple (Γ0, Γ1, Δ0, Δ1), written as Γ0 | Γ1 ⇒ Δ0 | Δ1. We say that Γ0 | Γ1 ⇒ Δ0 | Δ1 is a splitting of Γ ⇒ Δ if Γ = Γ0, Γ1 and Δ = Δ0, Δ1.
A formula F is an interpolant of a split sequent Γ0 | Γ1 ⇒ Δ0 | Δ1 if GR ▶ Γ0 ⇒ F, Δ0 and GR ▶ F, Γ1 ⇒ Δ1 and FV(F ) ⊆ FV(Γ) ∩ FV(Δ). We say that a sequent Γ ⇒ Δ admits interpolation if every splitting of Γ ⇒ Δ has an interpolant.
The system GR has the Craig interpolation property (CIP) if every derivable sequent admits interpolation.
The idea of the syntactic proof of Craig interpolation [22, Chapter 4], in contrast to the semantic proofs via amalgamation (see [11] for the case of normal modal logics and [8] for monotone modal logic) is to construct interpolants inductively – clearly this fails in the presence of the cut-rule. Completeness gives the link between both the syntactic and the semantic versions of the CIP.
Proposition 5.6 Suppose that R is one-step sound and strictly one-step complete
w.r.t the Λ-structure T. If moreover R is contraction closed, then GR has the CIP iff Mod(T ) has the CIP.
We are not yet in the position of presenting a generic proof of the CIP for coalgebraic logics in general; this is left for future work. Instead, we show that the systems used in our running examples, coalition logic and conditional logic have the CIP. For coalition logic, this is not a new result [7] but our proof is shorter due to the smaller number of modal proof rules. For the conditional logics CK and CK Id the CIP is – to the best of our knowledge – a new result which was left as future work in [13] where a substantially different proof calculus is presented.
The proof of the CIP in both examples benefits from the following notions.
Definition 5.7 A sequent rule E1,..., En, E0 supports interpolation if, for every substitution σ : V → J(Λ), E0σ admits interpolation provided all of E1σ,..., Enσ admit interpolation.

It is well known (and shown e.g. in [22]) that all rules of G support interpolation. The special format of the sequent rules associated with one-step rules allows us to restrict ourselves to those instances without context formulas.
Lemma 5.8 A sequent rule E1,..., En/E0 associated with a one-step rule φ/ψ of R
supports interpolation if and only if the rule E1,..., En/£(ψ) supports interpolation.
Proof. Suppose E1,..., En/E0 is a sequent rule associated with the one-step rule φ/ψ and suppose that £(ψ) = F ⇒ G whence E0 = Γ,F → Δ, G. Pick a substitution σ : V → J(Λ) and assume that Eiσ admits interpolation for all i = 1,..., n; we have to show that E0σ admits interpolation. So suppose that S = Γ0σ, F0σ | Γ1, σF1σ ⇒ Δ0σ, G0σ | Δ1σ, G1σ is a splitting of E0σ for some σ : V → J(Λ) where Γ = Γ0, Γ1 and similarly for Δ,F and G. Then S = F0σ | F1σ ⇒ G0σ, G1σ is a splitting of £(ψ)σ. By assumption, S has an interpolant I,
i.e. F0σ → I, G0σ and F1σ, I ⇒ G1σ are derivable. By admissibility of weakening, both F0σ, Γ0σ ⇒ I, G0σ, Δ0σ and I, F1σ, Γ1σ → G1σ, Δ1σ are GR-derivable. It is obvious that I satisfies the restriction on variable occurrences.	 
The above lemma simplifies the proof of the CIP as we can ignore context formulas for sequent rules that are induced by one-step rules. We turn to our main running examples:
Theorem 5.9 Coalition logic, i.e. the system GC, has the CIP.
Proof. By induction on the derivation of Γ ⇒ Δ. As all the rules of G support interpolation, we focus on applications of sequent rules induced by one-step rules where we can assume w.l.o.g. that the set of context formulas is empty.
Rule (A). If S = [C]A | [C']A' ⇒ ∅ | ∅ is a splitting of the (substituted) rule
conclusion and I is an interpolant of A | A' →∅| ∅, then ¬[∪C']¬I is an interpolant of S.
Rule (B). First consider the splitting
S = [C]A | [C']A' ⇒ [D]B, [N]B | [N]B'
of the rule conclusion. If I is an interpolant of A | A' ⇒ B, B | B' then ¬[∪C']¬I
is an interpolant of S.
Now consider the splitting
S = [C]A | [C']A' ⇒ [N]B | [D]B, [N]B'
of the rule conclusion. In this case, if I is an interpolant of A | A' ⇒ B | B, B'
then ¬[∪C]¬I is an interpolant of S.	 
By a similar argument we establish the CIP for the conditional logics CK and
CK Id .
Theorem 5.10 The conditional logics CK and CK Id have the CIP.
Proof. First consider GCK; again we have to show that every rule supports inter- polation. Rule (K). We first show that the rule (C) support interpolation. First

suppose that S = A  B | A'  B' ⇒ A  B | ∅ is a splitting of the rule conclusion. If I is an interpolant of B | B' ⇒ B | ∅ then ¬(A  ¬I) interpolates
S. Now consider the splitting S = A  B | A'  B'  ∅ | A  B | ∅. If I interpolates B | B' ⇒ ∅ | B then A  I interpolates S. Applications of the rule (Id) are straightforward.	 
Conclusions
We have argued that strict one-step completeness of a system of one-step rules automatically results in a sequent system that is cut free and complete. The inter- polation property still provides a challenge, as we were unable to present a proof that simultaneously applies to a large class of logics. Instead, we have established the CIP by separate inductions for our two running examples. It is worthwhile to point out that for coalition logic, the inductive step is not entirely straight for- ward as the newly constructed interpolant uses a modality that does not necessarily appear in one of the rules. We leave this question as
Open Problem 6.1 Does the interpolation property hold in general for all coalge- braic modal logics?
Our second observation pertains to our proof of cut-free completeness, which is heavily based on semantical notions. While we strongly believe that this theorem could also have been obtained purely syntactically, i.e. by comparison of different proof systems, we are as of yet unsure whether these methods extend beyond rank
1. In particular, can cut always be absorbed into the modal proof rules, for example via resolution closure as described at the end of section 4? We formulate this as
Open Problem 6.2 To what extent can resolution closure be used to absorb the cut rule into a system of modal proof rules?
We conjecture that this is possible at least for all logics axiomatised by formulas of modal rank ≤ 1 but presently lack intuition concerning arbitrary rank.

References
M. Amerbauer. Cut-free tableau calculi for some propositional normal modal logics. Studia Logica, 57(2–3):359–371, 1996.
D. Basin, S. Matthews, and L. Vigan`o. A new method for bounding the complexity of modal logics. In
G. Gottlob, A. Leitsch, and D. Mundici, editors, Computational Logic and Proof Theory (Proceedings of the 5th Kurt Go¨del Colloquium, KGC’97), pages 89–102. Springer-Verlag, Berlin, 1997.
P. Blackburn, M. de Rijke, and Y. Venema. Modal Logic. Cambridge University Press, 2001.
B. Chellas. Modal Logic. Cambridge, 1980.
R. Gor´e. Cut-free sequent and tableau systems for propositional diodorean modal logics. Studia Logica, 53:433–457, 1994.
Guido Governatori and Alessandro Luppi. Labelled tableaux for non-normal modal logics. Lecture Notes in Computer Science, 1792:119–130, 2000.
H. Hansen. Tableau games for coalition logic and alternating-time temporal logic, 2004. Master’s Thesis Computer Science, Universiteit van Amsterdam.


H. H. Hansen and C. Kupke. A coalgebraic perspective on monotone modal logic. In Coalgebraic Methods in Computer Science, volume 106 of ENTCS, pages 121–143. Elsevier, 2004.
A. Heuerding. Sequent Calculi for Proof Search in Some Modal Logics. PhD thesis, University of Bern, 1998.
Alexander Kurz. Specifying coalgebras with modal logic. Theoretical Computer Science, 260(1-2), 2000.
L. Maksimova. Amalgamation and interpolation in normal modal logic. Studia Logica, 50:457–71, 1991.
G. Mints. Gentzen-type systems and resolution rules. part I. propositional logic. In COLOG-88: Proceedings of the international conference on Computer logic, pages 198–231. Springer, 1990.
N. Olivetti, G. Pozzato, and C. Schwind. A sequent calculus and a theorem prover for standard conditional logics. ACM Trans. Comput. Log., 8(4), 2007.
D. Pattinson. Coalgebraic modal logic: Soundness, completeness and decidability of local consequence.
Theoret. Comput. Sci., 309:177–193, 2003.
M. Pauly. A modal logic for coalitional power in games. J. Logic Comput., 12(1):149–166, 2002.
W. Rautenberg. Modal tableau calculi and interpolation. Journal of Philosophical Logic, 12:403–423, 1983.
L. Schr¨oder. A finite model construction for coalgebraic modal logic. In Foundations Of Software Science And Computation Structures, volume 3921 of LNCS, pages 157–171. Springer, 2006.
L. Schr¨oder and D. Pattinson. PSPACE reasoning for rank-1 modal logics. In Logic in Computer Science, LICS 06, pages 231–240. IEEE, 2006.
L. Schr¨oder and D. Pattinson. Rank-1 modal logics are coalgebraic. In W. Thomas and P. Weil, editors,
Proc. STACS 2007, number 4393 in LNCS, pages 573–585, 2007.
L. Schr¨oder and D. Pattinson. PSPACE-bounds for rank-1 modal logics. ACM Trans. Comput. Log., 2008. to appear.
Lutz Schr¨oder. A finite model construction for coalgebraic modal logic. J. Log. Algebr. Program., 73(1-2):97–110, 2007.
A. Troelstra and H. Schwichtenberg. Basic Proof Theory. Number 43 in Cambridge Tracts in Theoretical Computer Science. Cambridge University Press, 1996.
