	Electronic Notes in Theoretical Computer Science 171 (2007) 187–196	
www.elsevier.com/locate/entcs

Communication via Mobile Vesicles in Brane Calculi
Antonio Vitale 1	Giancarlo Mauri 2
Dipartimento di Informatica, Sistemistica e Comunicazione Università degli Studi di Milano-Bicocca
Via Bicocca degli Arcimboldi 8, 20126 Milano, Italy

Abstract
P systems and Brane calculi are two (families of) computational models inspired by the structure and the functioning of living cells. Although they have different goals there is a recent growing of interests in results that bridge the two research areas.
Here we consider an important kind of communication based on the natural budding of mobile membranes (e.g., Golgi apparatus) that is already defined for P systems and we show how to construct an analogous
communication in the basic Phago/Exo/Pino Brane calculus.
Keywords: Membrane Computing, Brane Calculi, Systems Biology, Gemmating P systems


Introduction
Both P systems [6] and Brane calculi [4] have been introduced as (families of) com- putational models inspired by the structure and the functioning of the living cell, starting from the key observation that the various processes taking place in the living cell can be regarded as computations.
Although they have common bases, they have different goals: the main objective of P system’s area of research is the formal investigation of the computational nature and power of various features of membranes, while Brane calculi’s main goal is to create a model capable of a faithful and intuitive representation of the biological reality.
To better clarify the different goals we quote from [5]:
“While membrane computing (i.e., P systems) is a branch of natural computing, which tries to abstract computing models, in the Turing sense, from the structure

1 Email: vitale@disco.unimib.it
2 Email: mauri@disco.unimib.it

1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2007.05.016

and the functioning of the cell, making use especially of automata, languages, and complexity theoretic tools, Brane calculi pay more attention to the fidelity to the biological reality, have as primary target systems biology, and use especially the framework of process algebra.”
In P systems the cell organization is simulated by a membrane structure form- alized with a Venn diagram of nested membranes, while the chemicals swimming in the solution delimited by a compartment are represented with a multiset of sym- bols/objects from a given alphabet. The multiset notion perfectly simulates the unordered structure of floating chemicals.
In the basic variant of P systems the objects evolve according to evolution rules, locally associated to the compartments, that transform multisets of symbols into multisets of symbols. The interaction between compartments is realized by allowing evolution rules to move objects between directly nested membranes. Such rules are generally applied non-deterministically in a maximally parallel manner: the rules to be used and the objects to evolve are randomly chosen, and, in each step all objects which can evolve must do it.
While in Brane calculi we have a membrane structure, too, membranes are not simple separators of compartments as in P systems but they are coordinators and active sites of major activity. In Brane calculi a computation happens on the mem- brane and not inside of it. So we no longer make use of multisets of objects but work with processes that reside on membranes. The operations of the two basic Brane calculi proposed in [4] are directly inspired by biologic processes such as endocyt- osis, exocytosis and mitosis. Another difference with P systems is that generally Brane calculi evolve using an interleaving semantics (sequential single instruction execution).
Only recently P systems have been applied to model biological systems and proce- sses (in particular at cellular level). The common background of the two formalisms and the recent shift of interests of P systems toward System Biology have raised the natural question of bridging the two research areas.
Various formal results have already been achieved. In [3] the computational power of two basic Brane calculi proposed in [4] is investigated. In [5] is inspected a variant of P systems inspired by the interactions of a basic Brane calculus defined in [4]. A parallel semantics for Brane calculi, inspired by the maximal parallelism semantics of P systems, is considered in [2]. Finally in [7] two variants of P systems whose interactions are inspired by the two basic Brane calculi defined in [4] are studied.
The present paper does not investigate formal properties such as computational power or complexity and should be considered as a (simple) test of expressiveness and usability of Brane calculus for biologic modelling purposes.
Specifically we consider a special kind of communication based upon the natural budding of mobile vesicles/membranes in a cell which is already defined in P systems with gemmation of mobile membranes [1], and we show how to model an analogous communication in the basic Phago/Exo/Pino Brane calculus in a simple and elegant way.

The rest of the paper is organized as follows. In section 2 we introduce all the formal notions we will need in the rest of the paper. In section 3 we show how to model mobile membranes communication with Phago/Exo/Pino actions. In section 4 we report some final remarks and we give some perspectives for future work.
Preliminaries
The notions of formal language theory we use are basic, and can be found in every monograph in this area (e.g., [8]).
The key function of a biological membrane in a living cell is to define a com- partment and its interaction with the surrounding environment (including other compartments). In both P systems and Brane calculi we have a membrane struc- ture where the membrane concept is used as a logic separator between processes and resources. The membrane structure can be seen as a tree like structure, a Venn diagram or a correctly matching parentheses string and it should be clear that we can have nested membrane structures; each pair of matching parentheses identifies a membrane. The height of the tree defines the depth of the structure.
The most external membrane of a system is called skin membrane and a mem- brane not containing other membranes it is said to be elementary. The space defined by a membrane is called region or compartment. A biologic membrane contains various substances and we use the multiset notion to formalize them. A multiset W over a set X is a mapping W : X → N and can be represented with a string (e.g., a3bc2 = abacac = baccaa = ... ). The multiset data structure lets us directly formalize the multiplicities and the unordered structure of floating chemicals.
Gemmating P systems
Generally speaking a P system is a computational model based on a membrane structure 3 that processes locally multisets of symbols in a parallel and distributed manner. Each membrane identifies a compartment (or region) that contains a set of evolution rules and a multiset of symbols from a given alphabet. Given a compart- ment the symbols contained evolve according to the set of rules contained. Typically the rules are used in a non-deterministic, maximally parallel way; at each step of computation we non-deterministically choose rules and objects (symbols) until no further choice can be made and then simultaneously apply the chosen rules to the chosen symbols. A computation is successful if it halts and a simple way to define the output is to consider the number of objects in a predefined compartment. There exist many variants of the basic model and an up-to-date bibliography can be found at the web address http://psystems.disco.unimib.it/.
P systems with gemmation of mobile membranes (briefly Gemmating P systems) were the first variant to introduce a non direct communication among membranes. Based upon biological processes they define a “secure” communication between not nested membranes.

3 Usually a hierarchic structure, but a net structure exists, too.

Cellular membranes result permeable only to substances like water, ions and some small molecules that freely cross membranes by means of diffusion. Other substances require a specific molecular pump or channel in order to cross a membrane. Finally, bigger substances as proteins or protein complexes can be communicated inside or outside a cell only by means of vesicles. The substance to be communicated is enclosed in a freshly created vesicle that exits the source membrane through a gemmation process. The vesicle freely floats until it fuses with its target membrane releasing the transported substance inside of it.
The Golgi apparatus is an example of cellular compartments that use this kind of communication: a stack of elementary membranes that, in sequence, modify a set of proteins and send it to the next Golgi-region. The send part of the process is achieved by means of vesicles. That’s exactly the biologic communication the Gemmating P systems are inspired from.
In order to closely resemble the biologic reality only simple membrane structures are considered and the operations used are of a biochemical inspirations; the skin membrane contains only elementary membranes (i.e., depth = 2) and, formally, there are three types of operations: mutation rm : a → u, replication rr : a → u1||u2 and splitting rs : a → u1 : u2, with a ∈ V , u ∈ V ∗ and u1, u2 ∈ V +.
Here we just say that replication and splitting increment the number of strings while mutation can delete symbols. For complete formal definitions of rules we refer to [1, page 3].
As usual each region i = 0, 1,... ,n of a membrane structure μ has associated a multiset of finite support over V ∗. Moreover each region i of μ has associated a set of classical evolution rules Ci and a set of pre-dynamical rules Di. A meta-priority is defined between the two sets: all applicable rules in Ci must be executed before any rule in Di.
Ci is a set of mutation, replication and splitting rules where the resulting strings are defined as usual over (V × {here, out}) if i = 1,... , n, or over (V × {here, out}) ∪ (V × {in1,... , inn}) if i = 0. Di is a set of mutation, replication and splitting rules where u and at least one between u1, u2 are strings over (({@j }· V ∗) × {here}) or ((V ∗ · {@j}) × {here}), where @j is a special symbol not present in V and j is a membrane index such as j /= i.
Concretely, a pre-dynamical rule can introduce the symbol @j only at the ends of a string w, and that means the string w is going to be transported via a mobile vesicle to membrane j. The symbol @j, once appended to a string w, has two functions: it defines which substance must be transported and where it should go. The communication is a two step process realized by the following two rules:
(1)
(2)
Clearly w represents the substance we want to transport, while i, j defines respect- ively the source and the target membranes. The mobile vesicle is formalized by a

matching couple of round brackets.
For our purpose the notions introduced suffice but for further details on Gem- mating P system you should refer to the original paper [1].
Brane calculi
Brane calculi are a family of process calculi proposed for modelling the various cell dynamics together with the behaviour of biological membranes.
The main difference with regard to P systems is that here active entities are tightly coupled to membranes and this endows membranes with the (correct) biolo- gical role of support of biochemistry; we have that computation happens on mem- brane and not inside of it. Another difference with P systems is that generally Brane calculi evolve using an interleaving semantic (sequential single instruction execution).
Biologic membranes are formed by a lipid bilayer that actually behaves as a fluid that lets both structural components and embedded substances like proteins freely move into the region delimited by the lipid layers. Membranes themselves are immersed into an aqueous solution where they can freely float. Such fluid within fluid structure directly inspires the basic structure of Brane calculi: two commutative monoids with a replication operator, each representing a kind of fluid. We have
a monoid representing the lipid bilayer:  (Membranes, |, 0)
where | is the membranes’ composition and 0 the unit (empty process);
and a monoid representing the aqueous solution:  (Systems, ◦, ⬦)
where ◦ is the systems’ composition and ⬦ the unit (empty system).
Both monoids use the replication operator ! to model the notion of a “multitude” of components of the same type (parallel composition of an unbounded number of components).
A system consists of nested membranes and each membrane represents a com- bination of actions (a process) that define its behaviour. Formally, the basic syntax is described by table 1.

Systems	P,Q ::= ⬦ ¦P ◦ Q ¦ !P ¦ σ ⟨P⟩	nested membranes Membranes	σ, τ ::= 0 ¦ σ|τ ¦ !σ ¦ a.σ	membrane processes Actions	a, b ::= ...	see table 3

Table 1
Basic syntax of Brane calculi

With σ ⟨P ⟩ we denote a generic system whose behaviour is characterized by process σ and that contains the system P . With a.σ we denote a guarded process: the process behaves as σ after the execution of the action a. We use the following abbreviations: a for a.0, ⟨P ⟩ for 0 ⟨P ⟩, and σ ⟨⟩ for σ ⟨⬦⟩. Both systems and processes have a structural congruence relation defined over them (table 2).
The generic reactions of table 4 on the next page are valid for any Brane calcu-



P ◦ Q ≡ Q ◦ P	σ|τ ≡ τ |σ
P ◦ (Q ◦ R) ≡ (P ◦ Q) ◦ R	σ|(τ |ρ) ≡ (σ|τ )|ρ
P ◦⬦ ≡ P	σ|0 ≡ σ

!⬦ ≡ ⬦	!0 ≡ 0
!(P ◦ Q) ≡ !P ◦ !Q	!(σ|τ ) ≡ !σ|!τ
!!P ≡ !P	!!σ ≡ !σ
!P ≡ P ◦ !P	!σ ≡ σ|!σ

0 ⟨⬦⟩ ≡ ⬦
Table 2
Structural congruence relation for systems and membranes

lus, but each calculus has to define its own specific reactions providing the relative reaction rules.
2.2.1	The Phago/Exo/Pino Brane calculus
The Phago/Exo/Pino Brane calculus (briefly PEP) is defined by three actions in- spired by the biological processes of endocytosis and exocytosis. The endocytosis process is specialized into two actions: phagocytosis (phago), which consists in the process of a cell engulfing exactly one external membrane, and pinocytosis (pino), which engulfs only external fluid and no membranes at all. The exocytosis is repres- ented by the exo action and consists in the reverse process of endocytosis: a single internal membrane irreversibly mixes with the external one while pushing its content outside of it.



Actions	a,b ::= phagon
⊥
phagon
¦ exon ¦ exo⊥
¦ pino(ρ) ¦ budn ¦ bud⊥(ρ)



Table 3
PEP, plus bud, actions’ syntax

Besides these three basic actions we will use the composite action bud to model the budding (gemmation) process: it is a specialization of cellular fission and consists in the splitting off exactly one internal membrane. The bud action can be encoded with a sequence of pino, phago and exo actions (see equations 3 and 4).
For each action that involves two membranes we use a co-action to identify the second membrane. Such co-actions are obtained appending the symbol ⊥ to the action name. Moreover we can index our actions in order to precisely couple an action with the correct co-action. Tables 3 and 5 provide the syntax and reaction rules for PEP plus the bud action.



P Q ⇒ P ◦ R  Q ◦ R P Q ⇒ σ ⟨P ⟩  σ ⟨Q⟩
'	'	'	'
P ≡ P ∧ P Q ∧ Q ≡ Q ⇒ P Q
We use ∗ to denote the transitive and reflexive closure of  4 .

Table 4 Generic reaction rules



Phago
⊥
phagon .σ|σ0 ⟨P ⟩◦ phagon (ρ).τ |τ0 ⟨Q⟩
⊥
 τ |τ0
⟨ρ ⟨σ|σ0
⟨P ⟩⟩ ◦ Q⟩

Exo	exon .τ |τ0 ⟨exon .σ|σ0 ⟨P ⟩◦ Q⟩  P ◦ σ|σ0|τ |τ0 ⟨Q⟩
Pino	pino(ρ).σ|σ0 ⟨P ⟩  σ|σ0 ⟨ρ ⟨⬦⟩ ◦ P ⟩

⊥	∗
Bud	budn (ρ).τ |τ0 ⟨budn .σ|σ0 ⟨P ⟩◦ Q⟩ 
ρ ⟨σ|σ0 ⟨P ⟩⟩ ◦ τ |τ0 ⟨Q⟩



Table 5
Reaction rules for PEP plus the composite bud action


Actions phagon
and phago⊥
will synchronize to achieve the engulfing of one
⊥

membrane into the other, while exon and exon will synchronize to obtain the reverse
process. Actions budn and bud⊥ will synchronize to split one nested membrane.

Actions pino and	⊥
n
come with a parameter ρ which represents the membrane

process of the new membrane created by the reaction.
For the sake of clarity we explicit the encoding of the bud action
budn .σ  phagon .σ

bud⊥ (ρ) .τ  pino phago⊥ (ρ) . exo '	⊥
(3)

along with its complete reaction
⊥
budn (ρ) .τ |τ0 ⟨budn .σ|σ0 ⟨P⟩◦ Q⟩ =
⊥	⊥	pino

⊥	⊥	 phagon

(4)

exon' .τ |τ0 ⟨exon' ⟨ρ ⟨σ|σ0 ⟨P⟩⟩⟩ ◦ Q⟩ 
ρ ⟨σ|σ0 ⟨P⟩⟩ ◦ τ |τ0 ⟨Q⟩

4 Roughly speaking this means that the reaction is not an elementary transition but is composed by a sequence of elementary reactions.

Modelling communication via mobile vesicles in PEP
As previously stated we will use PEP Brane calculus, plus the composite action bud, to model a communication via a mobile vesicle.
We work in the same scenario as in Gemmating P systems: a mobile vesicle containing the substance to be transmitted springs from a membrane source and eventually fuses with a membrane target releasing its content inside of it.
Desired properties of this communication are:
security : the “message” should be accessible only to the target membrane.
the communication process should not interfere with normal system evolution. We encode the two membranes with the following systems
Source   ! bud⊥ (vesicle) | ωSource ⟨X⟩

Target  ! phago⊥ (exo⊥) | ωT arget ⟨⟩
vesicle   phagon2 . exo
(5)

where X stands for the substance (system) we want to communicate. As in Gem- mating P systems we consider only a simple, though realistic, membrane structure: a two level hierarchy where a skin contains various membranes all at the same level. Let’s consider the following minimal system:
G  ωG ⟨Source ◦ Target⟩
Clearly ωG stands for the skin membrane process. If X  ωx ⟨⬦⟩ and ωx does not contain an accessible budn1 action our system G does not evolve. So let’s see what happens if we add a budn1 action in parallel to the membrane process of X:
G = ωG ⟨Source ◦ Target⟩

⊥	 ←− X + budn1 −→ 
  budn1



⇒ ωG 
∗
Source	◦ vesicle ⟨X⟩◦ Target

∗  ←− mobile vescicle −→
←−−−−−−− T arget −−−−−−−→  phagon2



⇒ ωG

∗
Source

⊥	⊥
! phagon2 (exo

) | ωT arget
exo⊥ ⟨exo ⟨X⟩⟩  exo

⇒ ωG

∗
Source

⊥	⊥
! phagon2 (exo
) | ωT arget
⟨X ◦ 0 ⟨⬦⟩⟩ structural congruency

 ←−− Source − (X+budn1 ) −−→  ←−−−−−− T arget+X −−−−−−→ 
 	 

The substance X enriched with the action budn1 initiates the communication process by causing the gemmation of a mobile vesicle containing exactly X: the budn1 action

5 With T ∗ we denote system T generically modified.

is consumed by the process. This is the PEP calculus counterpart to rule (1) of the Gemmating P system. The mobile vesicle then fuses with membrane Target by means of phagon2 and exo actions: this corresponds to rule (2).
With the exception of the action budn1 we observe that X moved from membrane Source to membrane Target. Action budn1 defines an ad hoc added behaviour that, as the special symbol @ in Gemmating P systems, “marks” the substance to transmit and initiates the communication process. For that analogy we define the following special action:
@m1  budm1	(7)
The only difference with Gemmating P systems is that here the information (i.e., the index) about the Target membrane is contained in the mobile vesicle and not directly in the marker @m1 .
In (6) we assumed that X already had the proper action @m1 needed to initiate the communication process, now we concisely discuss how to add the communication marker to a substance. In Gemmating P systems it is a pre-dynamical rule that marks a substance for transmission by appending the special symbol @ to the string encoding the substance itself. Here we suggest a more general approach. In PEP we can add the proper action @i to a substance (system) in different ways:
when the substance is generated;
after the substance enters the Source.
We should choose the first case if we have a subsystem Sub of Source producing instances of substance X and if all such substances should eventually be communic- ated via a mobile vesicle to a specified membrane: one communication channel per substance type.
If otherwise Source can communicate substance X to different membranes we must delay the marking process remanding it to specific parallel processes: many communication channels per substance type.
New composite actions: send and receive
We finally provide two new composite actions in order to simplify the usage of the communication via a mobile vesicle.
(8)
(9)
Now we can model the transmission of substance X between two membranes in a cleaner and more compact way:

send1 A ◦
←− X −→
@1| ωX ⟨⬦⟩

··· ◦ receive2 ⟨B⟩
transmi∗ssion
(10)

1	←− X −→ 

Conclusion
We have done a simple modelling test showing that it is possible to model an im- portant kind of biologic communication in the PEP Brane calculus with very little effort. We worked in a simple and minimal scenario as the one used in Gemmating P systems in order to stress out the different expressive powers of the two mod- elling approaches. The PEP calculus lets us model the communication via mobile membranes with less effort than that required in Gemmating P systems.
We plan to further investigate this kind of communication in Brane calculi by studying an extension that should let any two membranes of a system communicate via mobile membranes without the limitation of the two-level hierarchy. We are also interested in evaluating the biological significance of such an extension.
Acknowledgements
This work has been partially supported by the Italian Ministry of University (MIUR) under the project PRIN-04 “Systems Biology: modellazione, linguaggi e analisi (SYBILLA)”.
References
Besozzi, D., C. Zandron, G. Mauri and N. Sabadini, P Systems with gemmation of mobile membranes, in: A. Restivo, S. Ronchi-Della-Rocca and L. Roversi, editors, Theoretical Computer Science. 7th Italian Conference, ICTCS 2001, Torino, Italy, October 4-6, 2001. Proceedings., Lecture Notes in Computer Science 2202 (2001), pp. 136–153.
Busi, N., On the computational power of the mate/bud/drip brane calculus: Interleaving vs. maximal parallelism, in: Pre-Proc. of Sixth International Workshop on Membrane Computing (WMC6), Vienna, June 18-21, 2005, 2005, pp. 235–252.
Busi, N. and R. Gorrieri, On the computational power of brane calculi, CMSB 2005 (2005), pp. 106 – 117.
Cardelli, L., Brane calculi: Interactions of biological membranes., in: V. Danos and V. Schachter, editors,
CMSB, Lecture Notes in Computer Science 3082 (2004), pp. 257–278.
Cardelli, L. and G. Păun, An universality result for a (mem)brane calculus based on mate/drip operations, in: Proceedings of the ESF Exploratory Workshop on Cellular Computing (Complexity Aspects), Sevilla (Spain), January 31st - February 2nd, 2005, pp. 75–94.
Păun, G., Computing with membranes, Technical Report 208, Turku Center for Computer Science-TUCS (1998), (www.tucs.fi).
Păun, G., One more universality result for P systems with objects on membranes, in: Proceedings of the Third Brainstorming Week on Membrane Computing, Sevilla (Spain), January 31st - February 4th, 2005, pp. 263–274.
Rozenberg, G. and A. Salomaa, “Handbook of Formal Language,” Springer Verlag, Berlin Heidelberg, 1997.
