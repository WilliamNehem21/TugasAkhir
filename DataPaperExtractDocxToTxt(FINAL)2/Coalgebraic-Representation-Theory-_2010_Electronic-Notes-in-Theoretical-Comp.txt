

Electronic Notes in Theoretical Computer Science 265 (2010) 351–368
www.elsevier.com/locate/entcs

Coalgebraic Representation Theory of Fractals
Ichiro Hasuo
RIMS, Kyoto University, Japan
PRESTO Research Promotion Program, Japan Science and Technology Agency
Bart Jacobs
Radboud University Nijmegen, the Netherlands
Milad Niqui1
Centrum Wiskunde & Informatica (CWI), the Netherlands

Abstract
We develop a representation theory in which a point of a fractal specified by metric means (by a variant of an iterated function system, IFS ) is represented by a suitable equivalence class of infinite streams of symbols. The framework is categorical: symbolic representatives carry a final coalgebra; an IFS-like metric specification of a fractal is an algebra for the same functor. Relating the two there canonically arises a
representation map, much like in America and Rutten’s use of metric enrichment in denotational seman- tics. A distinctive feature of our framework is that the canonical representation map is bijective. In the technical development, gluing of shapes in a fractal specification is a major challenge. On the metric side we introduce the notion of injective IFS to be used in place of conventional IFSs. On the symbolic side we employ Leinster’s presheaf framework that uniformly addresses necessary identification of streams—such as .0111 .. . = .1000 .. . in the binary expansion of real numbers. Our leading example is the unit interval
I = [0, 1].
Keywords: Fractal, Coalgebra, Category Theory, Denotational Semantics, Real Number Computation


Introduction
A fractal is described by Mandelbrot [19] as “a rough or fragmented geometric shape that can be split into parts, each of which is (at least approximately) a reduced- size copy of the whole.” Fractals have fascinated general audiences through their aesthetic merits; they have also found engineering applications e.g. in computer graphics [21].

1 Supported by the Netherlands Organisation for Scientific Research (NWO).

1571-0661 © 2010 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2010.08.021

However, fractals (in the above broader sense of Mandelbrot’s) are not restricted to queer shapes like the Koch snowflake, the Sierpin´ski triangle or the British coast- line. Basic shapes like the (closed) unit interval I = [0, 1] are also examples; the
unit interval is the union of two shrunk copies of itself, namely [0, 1 ] and [ 1 , 1].
2	2
Now it is not hard to see a connection between this fractal view of I = [0, 1] and
the binary representation of real numbers: given x ∈ I, if x lies in the first copy [0, 1 ] then we take 0 as the first digit; if x ∈ [ 1 , 1] then we take 1. Continuing this
2	2
way we obtain an (infinite) stream over 2 = {0, 1}. From this example we derive a general principle: fractal structure of a certain shape enables us to symbolically represent the shape, using infinite streams. The current paper is all about making this principle formal.
We are interested in the kind of a “fractal” that is introduced by an iterated function system (IFS) [13], as its unique attractor —a compact and non-empty fixed point. 2 An IFS is defined on a complete metric space, and the existence of an attractor hinges on the metric structure. We shall thus refer to a fractal of this kind as a metric fractal.
Our initial observation is that the set of streams—which shall represent such a metric fractal—carries a ﬁnal coalgebra. A final coalgebra can be seen as a “fractal” in a broad sense, too, being a fixed point of the relevant functor.
Our goal is a canonical bijective correspondence between this coalgebraic fractal and a metric fractal. The former consists of streams hence is of symbolic nature; a stream is a standard way to represent infinitary data in computer science, like for exact computation with real numbers in effective analysis [26, 7]. Hence one way of the envisaged correspondence—from a metric fractal to a coalgebraic one—carries a point in a metric space to something more familiar and easier to handle. It is like in representation theory in (mainstream) algebra where an element of some exotic group is mapped to a matrix which is easier to study. With this intuition, we shall call the map a representation map. 3 The other way of the correspondence carries a symbolic entity to a mathematical entity that is denoted by it; we call it a denotation map like in “denotational semantics.”

(1)

Towards our goal, however, gluing of shapes emerges as a major technical chal- lenge. For the coalgebraic fractal side, Leinster’s presheaf framework [16, 17] uni- formly addresses necessary modding of streams. For the metric side, we discard IFSs as means to specify fractals because they are not capable of carrying explicit information on gluing of shapes. Instead we introduce the notion of injective IFS (IIFS) which is also based on presheaves.

2 Another common kind of “fractal” is introduced by a recurrence relation (like fc(z)= z2 + c) where the fractal is the Mandelbrot set, the Julia set, etc.
3 The word “representation” is used in so much divergent meanings in different fields; it can also mean our “denotation map.” We believe there is a good reason for our choice of terminologies.

Most proofs as well as some constructions are omitted due to the lack of space.
They are found in the appendix of the extended version [10] of this article.


Related Work
For the purpose of exact computation with real numbers [26, 7], it is standard to employ a “representation” of real numbers which is a surjective map r : A → I with
A ⊆ Nω (see [15]). This “representation” goes in the opposite direction compared
to ours, carrying symbolic representatives to points in I.
A more important difference between the “representations” in [15] and ours is that the former are not necessarily bijective. An example is in the binary expan- sion of real numbers where two streams 1000 ... and 0111 ... “represent” the same

point 1
∈ I. In our current framework this correspondence is forced to be bijec-

tive: we suitably mod out the streams and take the equivalence classes, not the streams themselves, as representatives. We believe our establishment of such bi- jective correspondences is at least of a mathematical interest. We are also keen to pursue its computational use by formalizing the notion of computation on top of our representation theory, towards general theory of exact computation over fractals.
Many authors have studied fractals from the domain theory viewpoint: see
e.g. [12, 6, 23]. Roughly speaking, an IFS on a complete metric space X induces a continuous map on the dcpo U X of non-empty compact subsets of X equipped with the reverse inclusion order; this allows one to approximate the attractor by the Kleene fixed point theorem. Our results here are distinguished in two aspects. Firstly, in the domain-theoretic literature a bijective representation is not the main concern. Secondly, it is the idea of reasoning about infinitary processes purely in categorical terms—avoiding use of order-theoretic or metric arguments—that has put forward the theory of coalgebra and coinduction [22]. Although metric struc- ture is indispensable, we stick to this motivation which is eminent e.g. in our proof of uniqueness of attractors (Thm. 5.6).
Categorical/coalgebraic properties of a (version of) real line have been studied
e.g. in [20, 8]; this work brings a fractal viewpoint to this topic, following Freyd’s observation (see §3.1). Conversely, canonical metric structure on a final coalgebra has been studied e.g. in [3, 1].

Leading example I: the Cantor set
To describe our goal more concretely, we start with the simple				 “gluing-free” example of the Cantor set C. It is obtained by	  repeatedly removing the “middle thirds” from the unit interval	 
I, as shown on the right. The Cantor set is a “fractal” in an obvious way: it is the same as the disjoint union of two copies of itself, each shrunk by the factor 1/3.
In this paper we are interested in iterated function systems (IFSs) [13] as a standard way for specifying fractals. For the Cantor set we can use the following

IFS on the complete metric space I, the unit interval. It consists of two functions
ϕ0(x)= x/3 ,	ϕ1(x)= (2 + x)/3 .	(2)
This IFS yields the Cantor set C as its unique attractor : C = ϕ0(C) ∪ ϕ1(C). This is how we obtain C by metric means, as a subset of the complete metric space I.
It is well-known (and easy to observe) that the Cantor set				
C allows symbolic representation via (infinite) binary streams.		  Given a binary stream σ = a0a1 ... ∈ 2ω—where 2 = {0, 1}—	
we assign a point Jσ) ∈ I. It goes in the following way: if a0 = 0 then Jσ) lies in
[0, 1 ]; if a0 = 1 then Jσ) lies in [ 2 , 1]; continuing the same with a1, a2,... determines
3	3
a point Jσ) ∈ I. It is intuitively clear that this assignment J ) : 2ω → I—we shall call
this the denotation map—restricts to 2ω →∼= C, and that the restriction is bijective.
Its inverse C →∼= 2ω we shall call the representation map.

Our first fundamental observation is that the set 2ω of rep-
2 · 2ω  (a , a a
.. . )

resentatives carries the final coalgebra for the functor 2 · ( ): 
Sets → Sets, as on the right (cf. [22]). This is not a mere
=∼ ι
2ω
0  1 2
a0a1 .. .

coincidence: the two-element set 2 in the functor reflects the fact that the Cantor set is two copies of itself combined together. Therefore one can think of the functor 2 · ( ) to be the combinatorial speciﬁcation of the Cantor set; and then the symbolic Cantor set 2ω arises as its final coalgebra. More generally, if a fractal is described as the disjoint union of n copies of itself, the set of its symbolic representatives is
given by the final coalgebra nω →=∼ n · nω, where n is an n-element set.

We can press this coalgebraic/categorical view on fractals further, so as to accommodate the metric way of defining frac- tals (via IFSs). Here comes our second fundamental observa-
2 · I	(0, x)	(1, x)
χ	
I	x	2+x
3	3

tion: the IFS (2) can be put together to form an algebra for the functor 2 · ( )—the same functor that we used for expressing the combinatorial specification of the Cantor set—as above on the right.
Our third crucial observation is: the denotation map J ) : 2ω → I—which we have introduced only informally—is characterized categorically using the diagram below left, bridging the symbolic fractal ι and the IFS χ. More specifically, the above informal description of J ) is equivalent to the condition that the map J ) makes the diagram commute, when put in place of J )χ in the diagram.
2 · J )χ


2 · 2ω
∼= ι
2ω


J )χ
2 · I
χ

 
(3)

For example, let us spell out the commutativity condition for the stream 10111 ... ∈
0111...)χ
2ω. By the commutativity we have J10111 .. .)χ = 2+J	; it lies in the right
shrunk copy of C, more specifically as the point represented by 0111 ... in that shrunk copy (see above right). This is how we informally introduced the map J ).
It is intuitively clear that our informal description of J ) determines the function 2ω → I uniquely; therefore it must be that there exists a unique J )χ that makes the diagram (3) commute. But how can we prove this?

The key is that the diagram (3) resembles a familiar one in denotational seman- tics, namely that of initial algebra-ﬁnal coalgebra (IA-FC) coincidence, in the sense that a final coalgebra ι plays a role of an initial algebra. The IA-FC coincidence is used as an important tool for providing denotational semantics for datatype con- structors with mixed variance (such as the function type (−) ⇒ (+)), see e.g. [9]. 4 The IA-FC coincidence occurs, intuitively, when the base category is enriched with some structure that allows “approximation of infinitary data by streams of finitary data.” Examples of such structure are cpos [24] and complete metric spaces [2].
In the current setting we do not have the IA-FC coincidence as it is; it is hard to find a common base category for the coalgebra ι (which does not have intrinsic metric structure 5 ) and the algebra χ (whose metric structure is crucial). Still the IA-FC coincidence works as a good guideline: simulating the proof of the coincidence in a metric-enriched setting (e.g. in [2]), we can prove the following.
Theorem 2.1 There exists a unique J )χ that makes the diagram in (3) commute.
Proof (Sketch) The homset Sets(2ω, I) is a complete metric space by d(f, g) = supσ d(f σ, gσ). On that set, the map Φ : f '→ χ ◦ (2 · f ) ◦ ι is a contracting map. By the Banach fixed point theorem (see e.g. [14]) Φ has a unique fixed point.	□
For our story that the final coalgebra 2ω provides a symbolic representation of the Cantor set via J )χ in (3), we still have to show: 1) the unique J )χ is injective as a function; 2) its image Im J )χ coincides with the Cantor set C ⊆ I. Both facts are obvious for the map J ) that we informally introduced. We shall prove these (and Thm. 2.1) in a far more general form, later in §5.
We now summarize the arguments so far, by presenting a general scenario.
Scenario 2.2 • The combinatorial specification for a “fractal” determines a func-
tor n · ( ): Sets → Sets. The ﬁnal coalgebra nω →=∼ n · nω for this functor is the
set of symbolic representatives for the fractal; we call it a coalgebraic fractal.
A fractal is more standardly introduced via an IFS on a complete metric space X as its unique attractor—a metric fractal. Such an IFS is identified with an algebra χ : n · X → X for the same functor.

Relating the two “fractals” there exists a unique map J )χ
n · nω	n·J )χ  n · X

which makes the diagram on the right commute. This is
the denotation map.
∼= ι
nω
χ
J )χ	X

The denotation map J )χ is injective, and its image Im J )χ coincides with the metric fractal (i.e. the attractor) specified by the IFS χ. We take its codomain
restriction nω →=∼ Im J )  and then its inverse Im J )  →∼= nω; the last is the repre-
χ	χ
sentation map carrying a point of the fractal to its symbolic representative.

4 The IA-FC coincidence has been also applied to trace semantics for coalgebras; see [11].
5 For this example the set 2ω carries standard metric structure by: d(σ, σ')= 2−n where n is the length of the longest common prefix. However it is not clear how this generalizes when gluing is present.
Another possible view of the diagram (3) is that the codomain algebra χ is a corecursive algebra [5]. In fact the proof of Theorem 2.1 can rely on the corecursiveness, instead of metric. Such adaptation of the general theory in the remainder of the paper is left as future work.

This is the (so simple!) story that we wish to convey using the rest of the paper. However there is an important piece missing so far: gluing of shapes, in other words overlaps of images of functions in an IFS. When gluing is present, by literally following the scenario we are led to a non-injective J )χ. Fortunately the main line of the scenario survives with suitable modification and generalization, to which the rest of the paper is devoted. In §3 we shall exhibit the problem of gluing using the unit interval I = [0, 1]. For the coalgebraic fractal side we employ Leinster’s presheaf framework [16] (§3). For the metric side we will introduce a central technical notion of injective IFS (IIFS) (§4). An IIFS is a variant of an IFS that is equipped with explicit information on how images overlap; this information is expressed with the help of presheaves too.

Coalgebraic Fractal
In this section we review Leinster’s framework [16, 17]. 6  It is used to obtain a
coalgebraic fractal, which is the set of symbolic representatives induced by a com-

binatorial specification, such as 2ω
→=∼
2 · 2ω in §2. Leinster’s framework suitably

addresses gluing of shapes; the corresponding mathematical shift is to move from
Sets to a presheaf category SetsA.
Presheaf and Module
It was first noticed by Freyd that the (closed) unit interval I = [0, 1] can be char- acterized as a final coalgebra (see [16]). This observation motivated Leinster’s work [16, 17], whose treatment of gluing by presheaves has inspired the current work.
We have noted in §1 that I is a “fractal,” being the union of two shrunk copies of itself. This stimulated us to denote a point x ∈ I by a binary stream σ ∈ 2ω, like we did for the Cantor set C. However I is topologically distinguishable from the Cantor set; so there must be some difference in the two denotation schemes. What is it?
The difference is, when forming I as a union of [0, 1 ] and [ 1 , 1], there occurs

2
gluing of the shrunk copies that identifies two points ( 1
2
in each copy). It is due

to this gluing that the standard denotation of x ∈ I by a binary stream is not unique—both streams 0111 ... and 1000 ... can denote 1 .
Therefore if we aim at a representation of I—that is, a mapping from I to the set of symbolic, stream-like representatives—such a representative cannot simply be a stream, but a certain equivalence class of streams. It is the framework in [16] that describes such modding of streams in a uniform, categorical manner. In the framework the necessary equivalence relation over streams is categorically induced by presheaves and modules.
First we fix a category A of types. For I we take the two-object category AI below
6 Some notations and terminologies are modified for the better fit to the current context.

left. With this AI we refine the description of I into the presheaf 7 PI : AI → Sets
below right; it singles out the two points 0, 1 ∈ I on which gluing possibly occurs.

AI =  0	l
1	 0	l

1	'−→
 {∗}	0
1
I	(4)

Our next step is to mathematically express a combinatorial speciﬁcation of a
fractal—like “the Cantor set C is the disjoint union of two copies of C.” For C it was done simply by the set 2 = {0, 1}. Its appropriate generalization—now that we must handle gluing—is given in the form of a functor M : Aop × A → Sets; a functor of such a type is called a module.
A module is also called a bimodule, a profunctor or a distributor ; it is usually
denoted by M : A −→ı  A. With modules over rings in our mind, we can think of a
(categorical) module M : Aop × A → Sets as a “family of sets with left and right A-actions.” See e.g. [4] for full-fledged expositions on modules. We shall define a combinatorial speciﬁcation to be a pair (A,M ) of a category A and a module M : Aop × A → Sets; a formal definition is deferred to Def. 3.7 since it needs some preparatory notions.
A module M that we will be employing is such that M (a, b) is a finite set, for all a, b ∈ A. Intuitively, the finite set M (a, b) represents the “multitude” in the combinatorial specification: the “outcome” space of type b has, inside it, |M (a, b)| copies of the “ingredient” space of type a. A module allows different multitudes
|M (a, b)| for different a, b ∈ A; moreover its action on arrows in A is how we express gluing that occurs in a combinatorial specification, as we see shortly. We note that when there is no gluing we take A to be the terminal category 1, in which case we can identify the finite set M (∗, ∗) with the finite set/number n in §2.
Example 3.1 [The module MI for the unit interval] The combinatorial specifi- identifying two points, one from each copy. It is made formal as the module MI cation for the unit interval I is informally: I is the union of two copies of itself, displayed below left; it is taken from [16]. The display is according to the legend
below right. For example, MI(1, 1)—the two-element set { , } whose elements we named suggestively—says that I is the same as two copies of I. The set MI(0, 1) has three elements which are again suggestively named. In the rest of this example
we often abbreviate MI by M .

0 { }  0
{	,	,	} 1
M (0, 0)
M (0,l)=l·
M (0,r)
M (0, 1)

MI = B@	1	inf sup	CA
M (l,0) M (r,0)

M (1,l)
M (l,1) M (r,1)= ·r	(5)

∅	{ , }
M (1, 0)
M (1,r)
M (1, 1)

The functions M (l, 0) and M (l, 1) shall be both denoted by  ·l ; similarly  ·r denotes the functions M (r, 0) and M (r, 1). 8 The functions  · l are called right l-actions in
7 A presheaf over a category A is a functor P : A → Sets. See e.g. [18].
8 This is compliant to the notational convention for modules over rings. Given two successive arrows
f	g
· → · → · in A, due to the contravariance of M in its first argument, we have M (g ◦ f, 0)= M (f, 0) ◦ M (g, 0) hence  · (g ◦ f )= ( · g) · f .

M ; similarly for r. In the example of MI, a right r-action  · r : M (1, 1) → M (0, 1) intuition for this right r-action is as follows: I is the union of two (= |MI(1, 1)|) is defined by  · r =  and  · r = , explaining our notation sup in (5). The shrunk copies of I, but in each shrunk copy (i.e. in an “ingredient” unit interval)
lies the singleton {∗} embedded along r, specifically on its right end. The function
· r specifies how these “ingredient” singletons (one in each of  and ) lie in the “outcome” I.
example MI, we have l ·  =  and r ·  = , explaining our notations 0 and 1 Let us turn to left l- and r-actions such as l ·  : M (0, 0) → M (0, 1). In the in (5). The intuition is as follows:  ∈ M (0, 0) represents the only way in which the
“ingredient” type-0 space (i.e. the singleton {∗}) is used in composing up the “out- come” type-0 space; but the latter is embedded via arrows l and r in the “outcome” type-1 space. Hence the “ingredient” type-0 space appears in the “outcome” type-1 space via l and r; the left action l ·  : M (0, 0) → M (0, 1) tells how this happens.
Finally, gluing in the combinatorial specification of I is hinted in the equality:
“continuous,” the module MI is purely “discrete” or “combinatorial”: it is a bunch · l =  · r = . Note that, although the notations like  come from I that is of finite sets and functions between them.
The following additional notational convention hopefully provides further intu-

ition. We shall denote a module element m ∈ M (b, a) by m : b→−ı
f : b' → b and g : a → a', we denote their left- and right-actions
a. Given F-arrows



g · m = M (b, g)(m)	by
m	g	'
and

b→−ı a → a ,

m · f = M (f, a)(m)
' f	m

by	b → b→−ı a .

These notations g ·m and m·f resemble that for composition of arrows in a category. In the sequel we sometimes suppress · in the left- and right-actions, e.g. mf for m·f .
Remark 3.2 In [16, 17] what we have called a combinatorial specification is called a self-similarity system; and the induced coalgebraic fractal (i.e. a final coalgebra) is called the solution of the self-similarity system. Their symbolic/combinatorial nature is not emphasized there.
The directions of further developments are different, too. In the current paper we focus on a metric extension, relating a coalgebraic fractal with a metric fractal induced by an IFS-like specification. In contrast, Leinster pursues mostly a topologi- cal extension: he endows a coalgebraic fractal with canonical topological structure. Based on this, in [17] Leinster presents recognition theorems: they tell if a given topological space is a solution of a certain self-similarity system or not.

Tensor Product
We have replaced a finite set n (like 2 for the Cantor set) by a module M : Fop×F →
Sets to cope with gluing; now we shall upgrade the functor n · ( ): Sets → Sets
accordingly, into M ⊗ ( ): SetsA → SetsA following [16]. Here ⊗ is an operation

of tensor product, a standard construction for modules. It is usually defined via
coends (see e.g. [4]), but we would rather describe it concretely.
Definition 3.3 [Tensor product] Given a module M : Fop × F → Sets and a presheaf P : F → Sets, the tensor product M ⊗ P : F → Sets is defined by: (M ⊗ P )a =  b∈A M (b, a) · P b /∼, where the equivalence relation ∼ is described
below.
The set M (b, a)· Pb appearing in the definition describes copies of P b—one for each
module element m : b →−ı a—summed up altogether. Hence an element of (M ⊗ P )a
m
can be written in the form [(b →−ı a, x ∈ P b)]—the pair (m, x) modded out modulo
∼—for some b ∈ F. We denote this element by m ⊗ x (like for modules over rings),
where the “mediating” object b ∈ F is implicit in m’s type m : b −→ı a.
Let us now describe the equivalence ∼ in Def. 3.3, that is, describe when we have m ⊗ x = m' ⊗ x'. It is about different choices of the mediating object b ∈ F which we want to ignore. Recall that M (b, a) is contravariant in b ∈ A while Pb is covariant in b. Assume that we have an arrow f : b → b' in F, a module element
m : b' →−ı a and x ∈ P b. Using these three building blocks we can form two elements
of b M (b, a) · P b, namely (mf, x) and (m, fx). 9 The equivalence ∼ in Def. 3.3 identifies these two: it is the equivalence generated by (mf, x) ∼ (m, fx). Therefore we have mf ⊗ x = m ⊗ fx as elements of (M ⊗ P )a, an equality familiar in modules over rings.
Example 3.4 Let us calculate the tensor product MI ⊗ PI, with MI from Expl. 3.1 and PI from (4). First we see from Def. 3.3 that an element of (MI ⊗ PI)1 can be written in either of the following forms:  ⊗ ∗,  ⊗ ∗, ⊗ ∗, and  ⊗ x,  ⊗ x
for each x ∈ I. Now the identifications caused by ∼ are the following three, the first one of which is derived by the calculation further below.

 ⊗∗ =  ⊗ 0 ,	 ⊗ 1=  ⊗∗ = ⊗ 0 ,	and	⊗ 1= ⊗∗ ;

 ⊗∗ = (0 →−ı
1) ⊗∗ = (0 →l
1 →−ı
⊗∗ (=†)
 ⊗ (l · ∗)=  ⊗ 0 .


the     set     (MI    ⊗    PI)1      looks     like: The equality (†) is the general equality mf ⊗x = m⊗fx described above. Therefore
 ⊗∗   ⊗ 0	 ⊗ 1	 ⊗∗	⊗ 0	⊗ 1	⊗∗ 
It is the union of two copies of I, with the element 1 ∈ I in the left copy identified with the element 0 in the right copy via the mediating element  ⊗ ∗. As a set this is isomorphic to the interval [0, 2], hence to I = [0, 1]. It is easy to see that
(MI ⊗ PI)0 ∼= {∗} and that MI ⊗ PI ∼= PI, too. In particular, PI is a fixed point of
MI ⊗ ( ).

9 Recall mf = (b f
m
→−ı a) is short for M (f, a)(m); similarly we let fx denote (Pf )x. These notations

are customary.

Coalgebraic Fractal
We have seen the functor M ⊗ ( ) : SetsA → SetsA express the combinatorial specification of a fractal, just like 2 · ( ): Sets → Sets for the Cantor set (§2). The
next piece in Scenario 2.2 is the set of symbolic representatives obtained as a final
coalgebra, like the symbolic Cantor set 2ω →=∼ 2 · 2ω. Leinster [16] showed that the
basic scenario carries over even in presence of gluing—but with a slight additional technicality, namely non-degeneracy.

The first observation is that for the functor MI⊗( ): SetsAI → SetsAI in §3.2, the final coalgebra is carried by the presheaf Pdeg on the right. This does not seem to yield any useful representation
of I. The trouble here is that gluing worked too much, giving rise
( 0
l


!
1 )
Pdeg

to a “degenerate” solution Pdeg. We need a way to regulate gluing, so that two points are identified only when they really need to be.
( {∗}
{∗} )
!

The non-degeneracy requirement is introduced in [16] for that purpose.
Definition 3.5 [Non-Degeneracy] A presheaf P : F → Sets is said to be non- degenerate if it satisfies the following two conditions.
Assume that two elements x ∈ Pa and x' ∈ P a' are identified by arrows f : a → b and f ' : a' → b, that is, fx = f 'x' as an element of P b. Then there exist c ∈ F, z ∈ P c, arrows g : c → a and g' : c → a' such that x = gz, x' = g'z and fg = f 'g'.
Assume that f, f ' : a ⇒ b are arrows in F, and that x ∈ Pa satisfies fx = f 'x. Then there exist c ∈ F, z ∈ Pc and g : c → a such that x = gz and fg = f 'g.
The full subcategory of SetsA with non-degenerate presheaves as objects is denoted by [F, Sets]ND.
The two conditions are best depicted in the category el(P ) of elements of P : 10
∃(c, z) '	∃(c, z)

∃g
(a, x)
∃g
(a', x')
∃g
(a, x)

f 'f

f (b, y) f'
(b, y)

What the conditions say is, intuitively: if two elements x and x' are ever to be identified (like in fx = f 'x'), then this identification is “forced” by equality of arrows in F. 11 Hence a presheaf P : F → Sets is non-degenerate if P has “no unforced
equalities.” When F = FI in (4), non-degeneracy is reduced to the following simple condition. This observation is due to [16].
Lemma 3.6 A presheaf P : FI → Sets is non-degenerate if and only if: 1) both functions P l,P r : P 0 ⇒ P 1 are injective; and 2) their images are disjoint.   □
10 An object of el(P ) is a pair (a, x) of a ∈ A and x ∈ P a; an arrow f : (a, x) → (b, y) in el(P ) is an arrow
f : a → b in A such that (Pf )x = y. See e.g. [18].
11 The non-degeneracy condition can be rephrased as a weak form of flatness of a presheaf P , or weak
cofilteredness of the category el(P ) of elements. See [16].

The above presheaf Pdeg clearly violates the condition; PI in (4) does not. In fact it is shown in [17] that PI carries the final coalgebra for MI ⊗ ( ): [FI, Sets]ND → [FI, Sets]ND, the functor MI ⊗ ( ) now restricted to the category of non-degenerate presheaves. Therefore we shall think of the final non-degenerate presheaf coalgebra
as the set of symbolic representatives.
To do that, however, we have to convince ourselves that a final non-degenerate coalgebra is of symbolic character, such as a set of streams modulo some equivalence. This was obvious when there was no gluing (§2). Fortunately it is also the case in presence of gluing, too, thanks to Leinster’s concrete “symbolic” construction [16] of a final non-degenerate coalgebra by streams modulo an equivalence.
We defer the construction to Appendix A.1 of [10], providing only hints here. Those streams which reside in the final non-degenerate coalgebra are infinite se- quences of module elements with matching types; two such streams are modded
out when they are connected via arrows in F. For FI and MI in §3.1, one of such

streams is 1	1
ı  1
·· ·
which we can think of as 100 ... ∈ 2ω. Through the

connectedness via FI-arrows there arises an equivalence relation on such streams;
it corresponds to the standard modding in the binary expansion code, such as
1000 ... = 0111 ... .
We are ready to make the technical definition which we postponed in §3.1.
Definition 3.7 A combinatorial speciﬁcation (of a fractal) is a pair (F,M ) of a small category F and a finite non-degenerate module M : Fop × F → Sets. Here a module M is said to be ﬁnite if for each a ∈ F, there are only finitely many module
m
elements b→−ı a with varying b; M is non-degenerate if for each b ∈ F, the presheaf
M (b,  ): F → Sets is non-degenerate (Def. 3.5).
It is proved in [16] that, given a combinatorial specification (F,M ), the functor M ⊗( ) preserves non-degeneracy of presheaves. Hence the functor M ⊗( ) restricts to an endofunctor on the category [F, Sets]ND of non-degenerate presheaves.
Finally, the following is our notion of “symbolic” fractal.
Definition 3.8 [Coalgebraic fractal] Let (F,M ) be a combinatorial specification. The coalgebraic fractal induced by (F,M ) is the (carrier of the) final coalgebra for the functor M ⊗ ( ) : [F, Sets]ND → [F, Sets]ND. We denote this final non-
∼=
degenerate coalgebra by ι : I → M ⊗ I; then the carrier presheaf I consists of
suitable equivalence classes of streams, due to the construction in [16].

Injective IFS
Motivation
For our aim of a bijective representation-denotation correspondence (1), the conven- tional notion of IFS as it is is not a satisfactory way of specifying a fractal. It does not provide explicit treatment of overlaps of images; this may lead to a non-injective

denotation map J )χ in (3). An example is the unit interval I and the IFS
ϕ0(x)= x/2 ,	ϕ1(x)= (1 + x)/2	(6)
which result in J011 .. .)χ = J100 .. .)χ = 1 (cf. §3.1). Roughly speaking, J )χ is not injective because the IFS χ is not injective.

Hence we cannot start from an IFS {ϕi : X → X}i∈[0,n−1] and crudely bundle them up as an algebra [ϕi] : n · X → X. Instead, the solution we propose is to start from an algebra for M ⊗ ( ) (as shown
M ⊗ X
χ
X

on the right) whose algebraic structure χ is injective. Such an algebra that we will use instead of an IFS shall be called an injective IFS, or IIFS in short.
We can look at an IIFS as a variant of an IFS, where the gluing structure is made explicit with the help of the categorical machinery (F and M ). The opposite view is that it is a combinatorial specification (F,M ) of a fractal, augmented with the information on how the symbolic fractal is to be “realized” in a complete metric space.
Let us briefly elaborate on injectivity of an IIFS. The algebraic structure χ being injective means that “(F,M ) has successfully modded out points in M ⊗ X.” That is, using the equivalence relation ∼ in M ⊗ X induced by (F,M ) (Def. 3.3), two
ϕ0 1	ϕ1 1
points in an overlap of images in an IFS—such as 1 '→ 2 and 0 '→ 2 in (6)—have
got “already identified” in the domain M ⊗ X of χ.
Metric Preliminaries
As a metric way of specifying a fractal, complete metric structure is indispensable for an IIFS. Before introducing IIFSs formally, we need some metric notions. We denote by CMetTB the category of 1-bounded 12 totally bounded 13 complete metric spaces and non-expansive functions between them.  Total boundedness is a technical condition that we need later in the proof of Prop. 4.2; imposing it is justified because all the fractals of our interest are compact, hence are totally bounded. A function f : X → Y is non-expansive if dY (fx, f x') ≤ dX (x, x') for each x, x' ∈ X; f is contracting if there is a number δ ∈ [0, 1) such that dY (fx, f x') ≤ δ · dX(x, x') for any x, x' ∈ X.
A pseudometric d is like a metric but d(x, x') = 0 need not imply x = x'. By

CPMetTB
we denote the category of 1-bounded and totally bounded complete

pseudo-metric spaces and non-expansive functions.
The tensor product construction (Def. 3.3) also applies to “presheaves” with extra structure, like a topological version which is exploited in [16]. Here we use a
metric version: given a functor P : F → CMetTB, we shall define a functor M ⊗ P . For that we shall “metrize” the coproduct and quotient operations in Def. 3.3.
The category CMetTB has a coproduct, which is a set-theoretic coproduct  i Xi

12 1-boundedness is not an essential requirement: forcing it by d'(x, y) := min{1, d(x, y)} does not change the convergence properties. Assuming it makes some proofs simpler.
13 See e.g. [14] for the relevant metric notions. Total boundedness together with completeness is equivalent to compactness.

equipped with the obvious metric: d(x, x')= dX (x, x') if x and x' are in the same summand Xi; d(x, x') = 1 otherwise. Problematic are coequalizers—i.e. taking quotients—which we do use in Def. 3.3. There is a standard way to define a metric on a quotient space, but it in general only yields a pseudometric—d(x, x') = 0 need not imply x = x'.
Definition 4.1 [Quotient pseudometric] Let (X, d) be a metric space, and ∼ be an equivalence relation on X. A path from x ∈ X to x' is a finite sequence of points x0, x1,... , x2n+1 with x = x0 and x' = x2n+1, such that: x1 ∼ x2, x3 ∼ x4,... , x2n−1 ∼ x2n. The length l(x0,... , x2n+1) of such a path is defined to be the sum d(x0, x1)+ d(x2, x3)+ ··· + d(x2n, x2n+1). Then we define a pseudometric on X/∼ to be the infimum of the length of such paths (or 1 if it exceeds 1):
d([x], [x']) =
min 1, inf{l(x0,... , x2n+1) | x0,... , x2n+1 is a path from x to x'} } .
Intuitively: the quotient pseudometric is the distance to go from x to x', where we are allowed to make a finite number of “leaps” along ∼.
Proposition 4.2 The construction indeed yields a 1-bounded pseudometric on X/∼. Moreover, if X is totally bounded and complete, then the pseudometric is also totally bounded and complete: any Cauchy sequence has a limit (which is by the way not necessarily unique).	□
The proof is found in [10, Appendix A.2]. Using the coproduct and quotient (pseudo)metrics that we have described, we can define a “metric” version of tensor products. In this paper, when it is employed, it always involves a discount factor δ ∈ [0, 1).
Definition 4.3 [Metric tensor M ⊗ δX] Given a functor X : F → CMetTB and a number δ ∈ [0, 1), we define δX : F → CMetTB to have: 1) the same underlying sets and functions as X, that is, U ((δX)a)= U (Xa) and U ((δX)f )= U (Xf ), but;
with the metric on each space discounted by δ, i.e. d(δX)a(x, x')= δ · dXa(x, x').
When we are further given a module M : Fop × F → Sets, we define the functor
M ⊗ δX : F → CPMetTB by (M ⊗ δX)a =	M (b, a) · (δX)b /∼, that is,
1	b∈A

the coproduct
b∈A M (b, a)·(δX)b equipped with the coproduct metric, quotiented

by the same equivalence ∼ as in Def. 3.3. It is straightforward that this M ⊗ δX
indeed determines a functor F → CPMetTB.
To summarize: M ⊗ δX has the same underlying sets as the presheaf M ⊗ X; those sets are equipped with pseudometrics that are essentially X’s metric, shrunk by δ. In our applications the induced pseudometrics are in fact shown to be metrics (Lem. 4.7).
Example 4.4 We can readily show that the metric space (M ⊗ 1 PI)1 is isometric (M ⊗ PI)1 in Expl. 3.4; each of its two line segments is I, now shrunk by the to the unit interval I equipped with the standard metric. Recall the picture of discount factor 1 .

Formal Deﬁnition
Definition 4.5 [Injective IFS] Let (F,M ) be a combinatorial specification and δ ∈ [0, 1) be a fixed number which we call a discount factor. An injective IFS (IIFS in short), over (F,M ) and δ ∈ [0, 1), is a pair (X, χ) such that
X : F → CMetTB is a functor which is non-degenerate, meaning that its com-

posite F →X
CMetTB →U
Sets with the forgetful functor is non-degenerate; 14

χ is a natural transformation χ : M ⊗ δX → X between functors of the type
F → CMetTB. The functor M ⊗ δX here is defined by a metric tensor (Def. 4.3).
It is subject to the following further conditions:
each component χa : (M ⊗ δX)a → Xa is an injective function;

the space Xa ∈ CMetTB
and the set Ia (Def. 3.8) are non-empty for each

a ∈ F;
for each arrow f : b → a in F and y ∈ Xb, if fy (i.e. (Xf )y) belongs to Im χa, then y belongs to Im χb. That is, (Xf )−1(Im χa) ⊆ Im χb.
Hence an IIFS is an algebra M ⊗ δX → X with additional conditions. Some explanations are in order. Cond. (i) is so that we have an injective denotation map J )χ, as explained in §4.1. Cond. (ii) is a natural one and backed up by a result in Leinster’s original work [17, Lem. 4.2]. The last Cond. (iii) might look technical but is nevertheless natural and important. Its informal reading is: a part of a fractal, upon which gluing occurs, itself has structure as a fractal. Let us study examples.
Example 4.6 [The unit interval I] The standard IFS that induces I is the one in
the subspace on C which is relevant, namely I itself. Then the data FI and MI in (6) on the complex plane C. To make its gluing structure explicit we first focus on
§3.1 naturally arises to describe the combinatorial gluing structure.
We take PI in (4) as the carrier XI of the aimed IIFS. In Expl. 4.4 we observed
1	∼=
an isomorphism MI ⊗ ( 2 XI) → XI. We take this isomorphism to be the algebra
structure χ of the aimed IIFS. It is straightforward to see that this (X, χ) satisfies
the conditions in Def. 4.5.
I) coincides with the whole domain XI1 of the IIFS, and χ is an isomorphism. This The previous example is a peculiar one, where the fractal to be defined (namely is not the case with e.g. the Cantor set C Ç I (§2). Another example of an IIFS
is the one for the Gray code coming later in Expl. 5.4. In [17] there are many other examples of “fractals” that can be described by a combinatorial specification (F,M ). Among them are the Sierpin´ski triangle, the square I×I, the n-dimensional simplex Δn and the unit circle S1. For many of them we can write down IIFSs, too.
In forming the tensor M ⊗δX (Def. 4.3) we took a quotient of a metric space; this in general results in a pseudo-metric (Prop. 4.2). In an IIFS we have the following, because (M ⊗ δX)a has a non-expansive injection χa into a metric space Xa.

14 This is the same as saying that X : A → Sets is a non-degenerate presheaf in which Xa (for each a ∈ A) and Xf (for each arrow f in A) have suitable metric structure.

Lemma 4.7 Let χ : M ⊗ δX → X be an IIFS. Then the space (M ⊗ δX)a is a (proper) metric space, for each a ∈ F.	□
Remark 4.8 An IIFS is a variant of an IFS; it is also a combinatorial specification (F,M ) together with information on how to realize it in a complete metric space. Yet another way to look at it is as follows: the existence of an IIFS is a “sanity check” for a combinatorial specification (F,M ).
First recall the principle from §1: it is a metric shape’s fractal structure that enables representation of its points by stream-like representatives. That is, in more technical terms, identification of a “suitable” (F,M ) gives rise to the set I of sym- bolic representatives (Def. 3.8) and a representation map J )χ−1 (§5 later). Such (F,M ) is often not hard to come up with (like Expl. 3.1 for I) but it is not precise what it means for (F,M ) to be “suitable.” The notion of IIFS formalizes this very point: if we find a “witness” χ (which is based on (F,M )) which satisfies the con- ditions in Def. 4.5 (some of them are subtle), then our results in §5 ensures that (F,M ) is “suitable” fractal structure that indeed results in symbolic representation.
Remark 4.9 Aside from the conceptual similarity between IFSs and IIFSs, we are yet to establish any technical relationship between them. In particular, we are not sure there is any general translation of an IFS into an IIFS, nor that there is a canonical (bijective) representation for an arbitrary IFS-based fractal. Detecting overlapping structure in an IFS and organizing it as (F,M ) seems hard for some IFS-based fractals such as a fern. An observation [17, Expl. 2.11] can lead to such a translation which, however, works only for a limited class of IFSs. A related issue which draws our interest—and is left as future work—is a characterization of those metric spaces which arise as fractals induced by IIFSs. This question is a metric version of Leinster’s (topological) recognition theorem [17, Thm. 3.1].

Representation Theory
In this section we technically develop the rest of Scenario 2.2. Specifically, we prove that: 1) an IIFS χ has a unique attractor —which we consider as a metric fractal— like an IFS does, and; 2) it has a canonical representation by the coalgebraic fractal (§3), the latter being induced by the same combinatorial specification (F,M ) on which the IIFS χ is based. Most proofs here are deferred to the appendix of [10].


The Denotation Map J )χ
First we present a result which is crucial in the sequel. Its proof goes much like the one for Thm. 2.1, using the Banach fixed point theorem; see Appendix A.3 of [10].  Notations:



M ⊗ C
γ
C




M ⊗γb



M ⊗ X
χ

given an IIFS χ : M ⊗ δX → X, by writing χ : M ⊗ X → X (without δ) we mean forgetting the metric structure; for example M ⊗ X in the latter denotes the presheaf U (M ⊗ δX), which is the same as M ⊗ UX by Def. 4.3.

Theorem 5.1 Let χ : M ⊗ δX → X be an IIFS, and γ : C → M ⊗ C be a coalgebra with C ∈ [F, Sets]ND. 15 Assume further that there exists at least one natural transformation from C to X (more precisely to UX). Then there exists a unique arrow γ^ that makes the diagram above on the right commute.	□


We obtain—much like in §2—the denotation map J )χ that goes from a coalgebraic fractal ι : I → M ⊗ I to a metric fractal. We use the previous theorem; the condition of existence of a natural transformation from
M ⊗ I
ι ∼=
I
M ⊗J )χ


J )χ

M ⊗ X
χ
X

I to UX is shown by investigation of Leinster’s construction of I [10, Appendix A.1].

Theorem 5.2 Let (X, χ) be an IIFS over a combinatorial speciﬁcation (F,M ), and ι : I → M ⊗ I be the coalgebraic fractal induced by (F,M ) (Def. 3.8). There exists a natural transformation J )χ : I → X. It makes the diagram in the above right commute; moreover by Thm. 5.1 it is the unique such.	□
In Scenario 2.2 the image Im J )χ of the map J )χ thus obtained is identified
~
with the metric fractal; and its codomain restriction I → Im J )  gives a bijective
correspondence between coalgebraic and metric fractals. For this intuition to be valid we need the following result; this is one of the main technical results of this paper. Its proof makes essential use of Cond. (iii) in Def. 4.5.
Proposition 5.3 The denotational map J )χ deﬁned in Thm. 5.2 is a mono, i.e. its components (J )χ)a are all injective functions.	□
Example 5.4 [The Gray code] The Gray code is another way of representing real numbers in I = [0, 1] by binary streams σ ∈ 2ω, other than the standard binary expansion code (see Fig. 1). Its feature is: two binary streams that denote the same point in I differ in only one digit, in contrast to the binary expansion where J011 .. .) = J100 .. .). One can also claim superiority of the Gray code in domain- theoretic terms: see [25], where computability of real number functions via a variant of the Gray code is discussed.


       
3rd digit 2nd digit
1st digit 
0	1
3rd digit 2nd digit
1st digit
0	1

Figure 1. The binary expansion code (left) and the Gray code (right)
We claim that the two codings arise from two different views on I as a fractal; they both can arise as J )χ in our framework, but with different IIFSs χ. In fact, what we have called “the IIFS for the unit interval” in Expl. 3.1 and 4.6 is more precisely for the binary expansion code of the unit interval.
An IIFS χG for the Gray code is defined as follows. We take FG = FI; a module MG is the same as MI except that we define  · l =  and  · r = . The intuition here is that, in forming I as the union of its two copies, the second copy

15 Recall that γ involves no metric structure.

is turned around. We define XG = XI (cf. Expl. 4.6) and χG : MG ⊗ XG → XG by:
 ⊗ x '→ 1 x, and ⊗ x '→ 1 − 1 x. This IIFS χG induces the Gray code via the
2	2
denotation map J )χG .
Other real number representations that can be accommodated in a similar way
include: the (standard) decimal one, the signed digit one [7], and so on. It is our future work to discuss their comparison in terms of the IIFSs that induce them.
Uniqueness of an Attractor
Finally we shall present some results that justify our identification of the image Im J )χ (Thm. 5.2) with the metric fractal induced by the IIFS. More specifically, an IIFS has a unique attractor as an IFS does; and it coincides with Im J )χ.
Definition 5.5 [Attractor] An attractor of an IIFS (X, χ) is a non-degenerate presheaf S : F → Sets and a natural transformation ε : S → X such that:
each component εa : Sa ‹→ Xa is an injection—hence S is a subobject of X. Moreover the image of εa is a closed subset of the metric space Xa;

the set Sa is non-empty for each a ∈ F;
there exists a natural isomorphism σ : S
→∼=  M ⊗ S
M ⊗ S M ⊗ε M ⊗ X
σ ∼=	χ

that makes the diagram on the right commute.
S	ε	X

Cond. (iii) says that S is a ﬁxed point of M ⊗ ( ), i.e. of the combinatorial speci- fication of the fractal. Conventionally, an attractor for an IFS is defined to be the unique non-empty compact fixed point; the corresponding restrictions can be found in Cond. (i) and (ii).
Theorem 5.6 The coalgebraic fractal ι : I → M ⊗ I with its embedding J )χ (Thm. 5.2) is an attractor. Moreover, it is a unique one up to a canonical iso- morphism.	□

Acknowledgement
Thanks are due to Kazuyuki Asada, Kiko Kawamura, Hideo Nagai, Hideki Tsuiki and the reviewers for the earlier and the current versions, for helpful discussions and comments. We are grateful to Tom Leinster for his inspiring work [16, 17] as well as helpful discussions.

References
Ad´amek, J., Final coalgebras are ideal completions of initial algebras, Journ. of Logic and Computation
12(2) (2002), pp. 217–242.
America, P. and J. J. M. M. Rutten, Solving reflexive domain equations in a category of complete metric spaces, Journ. Comp. Syst. Sci 39(3) (1989), pp. 343–375.
Barr, M., Terminal coalgebras in well-founded set theory, Theor. Comp. Sci. 114(2) (1993), pp. 299– 315, corrigendum in Theor. Comp. Sci. 124:189–192, 1994.
B´enabou,	J.,	Distributors	at	work,	Lecture	notes	taken	by	T.	Streicher	(2000),
www.mathematik.tu-darmstadt.de/~streicher/FIBR/DiWo.pdf.gz  .


Capretta, V., T. Uustalu and V. Vene, Corecursive algebras: A study of general structured corecursion, in: M. V. M. Oliveira and J. Woodcock, editors, SBMF, Lecture Notes in Computer Science 5902 (2009), pp. 84–100.
Edalat, A., Dynamical systems, measures and fractals via domain theory, Inf. & Comp. 120 (1995),
pp. 32–48.
Edalat, A. and R. Heckmann, Computing with real numbers., in: G. Barthe, P. Dybjer, L. Pinto and J. Saraiva, editors, Applied Semantics, International Summer School, APPSEM 2000, Caminha, Portugal, September 9–15, 2000, Advanced Lectures, Lect. Notes Comp. Sci. 2395 (2002), pp. 193–267.
Escard´o, M. H. and A. K. Simpson, A universal characterization of the closed Euclidean interval, in:
Logic in Computer Science (2001), pp. 115–128.
Fiore, M. P., “Axiomatic Domain Theory in Categories of Partial Maps,” Distinguished Dissertations in Computer Science, Cambridge Univ. Press, 1996.
Hasuo, I., B. Jacobs and M. Niqui, Coalgebraic representation theory of fractals, Including an appendix,
http://www.kurims.kyoto-u.ac.jp/~ichiro/ (2010).
Hasuo, I., B. Jacobs and A. Sokolova, Generic trace semantics via coinduction, Logical Methods in Comp. Sci. 3 (2007).
Hayashi, S., Self-similar sets as Tarski’s fixed points, Publ. Res. Inst. Math. Sci. 21 (1985), pp. 1059– 1066.
Hutchinson, J., Fractals and self-similarity, Indiana Univ. Math. J. 30 (1981), pp. 713–747.
Khamsi, M. A. and W. A. Kirk, “An Introduction to Metric Spaces and Fixed Point Theory,” Wiley- Interscience, 2001.
Kreitz, C. and K. Weihrauch, Theory of representations, Theor. Comp. Sci. 38 (1985), pp. 35–53.
Leinster, T., A general theory of self-similarity I (2004), arXiv:math/0411344v1 .
Leinster, T., A general theory of self-similarity II: Recognition (2004), arXiv:math/0411345.
Mac Lane, S. and I. Moerdijk, “Sheaves in Geometry and Logic. A First Introduction to Topos Theory,” Springer, New York, 1992.
Mandelbrot, B., “The Fractal Geometry of Nature,” W.H. Freeman and Company, 1982.
Pavlovi´c, D. and V. Pratt, The continuum as a final coalgebra, Theor. Comp. Sci. 280 (1-2) (2002),
pp. 105–122.
Peruggia, M., “Discrete Iterated Function Systems,” A.K. Peters, 1993.
Rutten, J. J. M. M., Universal coalgebra: a theory of systems, Theor. Comp. Sci. 249 (2000), pp. 3–80.
Scriven, A., A functional algorithm for exact real integration with invariant measures, Elect. Notes in Theor. Comp. Sci. 218 (2008), pp. 337–353.
Smyth, M. B. and G. D. Plotkin, The category theoretic solution of recursive domain equations, SIAM Journ. Comput. 11 (1982), pp. 761–783.
Tsuiki, H., Real number computation through Gray code embedding, Theor. Comput. Sci. 284 (2002),
pp. 467–485.
Weihrauch, K., Type 2 recursion theory, Theor. Comp. Sci. 38 (1985), pp. 17–33.
