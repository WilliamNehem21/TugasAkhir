


 HOSTE D BY 
egyptian journal of basic and applied sciences 3 (2016) 392–39 7 




Full Length Article
Numerical solution of quadratic Riccati differential equations
Gemechis File *, Tesfaye Aga
Department of Mathematics, Jimma University, Jimma, Ethiopia


A R T I C L E	I N F O	A B S T R A C T 



Article history:
Received 28 February 2016
Accepted 25 August 2016
Available online 6 September 2016


Keywords:
Riccati differential equation Runge Kutta method
The quadratic Riccati differential equations are part of non-linear differential equations which have many applications. This paper introduces the classical fourth order Runge Kutta method (RK4) for solving the numerical solution of the quadratic Riccati differential equations. To validate the applicability of the method on the proposed equation, some model examples have been solved for different values of mesh sizes. The numerical results in terms of point wise absolute errors presented in tables and graphs show that the present method approxi- mates the exact solution very well.
© 2016 Mansoura University. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-
nc-nd/4.0/).








Introduction

The Riccati differential equation is a well-known non linear differential equation and has different applications in engi- neering and science domains, such as robust stabilization, stochastic realization theory, network synthesis, optimal control and in financial mathematics [1]. Non linear deferential equa- tions are essential tools for modeling many physical situations, for instance, spring mass systems, resistor–capacitor–induction circuits, bending of beams, chemical reaction, pendulums, the motion of rotating mass around body and so on [2].
Thus, the problem has attracted much attention and has been studied by many authors. Recently, various methods are used like: using the method of Bezier curves, by developing the Bezier polynomial of degree n [3], the multistage varia- tional iteration method is applied as a new efficient method for solving quadratic Riccati differential equation [4], using
Legendre scaling functions consisting of expanding the re- quired approximate solution as the elements of Legendre scaling functions and the operational matrix of integral, then reducing the problem to a set of algebraic equations [5] and approximate solution of generalized Riccati differential equa- tions by iterative decomposition algorithm [6]. The solution of Riccati equation with variable co-efficient by differential transformation method (DTM) [7] has presented the absolute error between the approximated solutions which are ob- tained by DTM.
However, the above mentioned methods have some restric- tions and disadvantages. For instance, there is a big difference between the results obtained by DTM, but as we have shown in examples there is a small point wise absolute error between the numerical result obtained by RK4 and the exact value. The classical RK4 is widely used for solving initial value problems and provides approximations which converge to the true so- lution as h approaches zero [8,9].



* Corresponding author.
E-mail address: gammeef@yahoo.com (G. File). http://dx.doi.org/10.1016/j.ejbas.2016.08.006
2314-808X/© 2016 Mansoura University. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

egyptian journal of basic and applied sciences 3 (2016) 392–39 7 
393





In this paper, we introduce classical RK4 method for solving the nonlinear Riccati quadratic differential equation. The sta- bility of the method for the problem under consideration has also been investigated. The approximate solution obtained by the proposed method versus the exact solution for different values of mesh size on some nodal points has been given. To validate the efficiency of the method, four model examples are solved.
where

k1  hf ti, yy 
k2  hf  ti  h , yi  k1  k3  hf  ti  h , yi  k2  k4  hf ti  h, yi  k3 

In the determination of the parameters, since the terms up
		to Oh4  are compared, the truncation error is Oh5  and the

Formulation of the method

Consider the quadratic Riccati differential equation of the form:

dy  pt  qt y  r t y2	(1)
dt

with initial value condition
order of the method is 4.


Stability and convergence analysis

Consider Eq. (1) at the discretized point as:

f ti, yi   pti   qti  y ti   r ti  y2 ti 








(7)

y t0   	(2)

where pt, qt, r t are continuous with r t  0 , and t0, 

Further, consider the linear first order test differential equation:

are arbitrary constants for y t, which is an unknown func- tion. To describe the scheme, we denote the problem in Eq. (1)
y  y,
y t0   y0

as:
Where  is a constant, and has its solution in the form of



dy  f t, y dt

(3)
y t  y t0 ett0 
which at
t  t0  nh.


and divide the interval t , t  into N equal subintervals of mesh
The solution becomes:

length h and the mesh points given by ti  t0  ih ; i  1, 2, … n.
y t   y t enh  y eh n
(8)

To solve the problem, we apply the single step method that requires information about the solution at ti to calculate ti1 [8]. Let the general numerical solution of Eq. (1) be given as:
n	0	0


Let the non-linear quadratic Riccati differential equation of the form given in Eqs. (1)–(3) and Eq. (7) written as:



yi1  yi   wiki
i1

(4)

y  f t, y;

y t0   y0  	(9)


where

	3	
The non-linear function Eq. (9) can be linearized by ex- panding the function in Taylor series about the point t0, y0  and truncating it after the first term:

ki  hf  ti  cih, yi  aijkj  ,
j1
for
i  1, 2, 3, 4
(5)

f	f


and the parameters ci, aij for i  2, 3, 4 ; and w1,… , w4 are chosen
y  f t0, y0   t  t0  t t0, y0   y  y0  y t0, y0 
(10)

in such a way that the numerical solution yi1 approximates the exact solution y ti1 of Eq. (1) very well.
Using Eq. (7) and by the chain rule differentiation, we have y  p  q y  r y2  t  t [p  q y  q y  ry2  2r y y ]

Now, expanding k , k , k
in Taylor series about t , substi-
0	0 0	0 0
0	0	0 0	0 0	0 0
0 0 0

2  3  4
i	 q0 y0  q0y0  ry2  2r0y0y0 ]  y[q0  2r0y0y0 ]  q0y0  2r y2y	For

tuting in Eq. (4) and matching the coefficients of h, h2, h3 and h4 ,	0 0
0 0 0

we obtain the systems of equations which on solving gives us:
simplicity,	consider	pt0   p0, qt0   q0, r t0   r0, y t0 
 y0, y t0   y0 and using Eq. (2) y t0   y0    constant; Thus, y0  0.

c2  c3  1 2,
c4  1,
w2  w3  13,
w1  w4  1 6,

a21  1 2,
a31  0,
a32  1 2,
a41  a42  0,
a43  1.
 y  q0y  p0  r y2  t  t0 [p0  q0 y0  ry2 ]
(11)



Thus, Eq. (4) becomes an explicit classical fourth order Runge Kutta method and written as:
This can be written as:

y  y  c



(12)

yi1  yi  1 k1  2k2  2k3  k4 
6
(6)

where   q0, c  p0  r y2  t  t0 [p0  q0 y0  ry2 ]

394	egyptian  journal  of  basic  and  applied  sciences  3 (2016) 392–39 7 






Dividing both sides of Eq. (12) by  , we obtain If w  y   c , then we have:


c
 y 

y   c .

If h  0, then eh  1, so the fourth order RK method is rela- tively stable. If h  0, then the interval of absolutely stable is
2.78  h  0 .
The computational rate of convergence can also be ob- tained by using the double mesh principle defined below.

y  w  	(13)
Consider the numerical solution obtained by Eq. (6) and
let Zh  max yh  yh 2 , i  1, 2, … , N  1. Where yh is the numeri-

i	i	i

Substituting Eq. (13) into Eq. (12) gives:
cal  solution  on  the  mesh
tiN1  at the nodal point

ti  t0  ih, i  1, 2, , N  1 and where yh2 is the numerical so-

w  w
(14)
lution at the nodal point t1 on the mesh
ti  t0  ih2, i  1, 2,… , 2N  1 .
ti2N1 where,

which is called the linear test equation for the non-linear Eq.
(1).
In the same way one can define  Zh2 by replacing h
by h 2 and N  1 by 2N  1, that is, Zh 2  max yh2  yh4 ,

The solution of this test equation, Eq. (15), is:

w  ket

Now, by considering Eq. (6), we have:


(15)
i
i  1, 2, … , 2N  1 .
The computed rate of convergence is defined as:

Rate  log Zh  log Zh2
log 2
i








(17)

k1  hf tn, yn   hyn
k2  hy  1 h2 y  h 



h2 


 yn


Numerical examples are given to illustrate the efficiency and convergence of this method.
In Table 1, the rate of convergence for examples 2, 3 and 4

1		1	2 		h2
h3 
respectively is given at different mesh sizes.

k3  hyn  2 h h  2 h  yn  h   2  
 yn
4  

	h2  h3 

k4  hyn  h h 

2    4
 yn



Numerical examples

 
2  h3
h4 

 h  h 	
	2
 yn
4  
To validate the applicability of the method, four quadratic Riccati differential equations have been considered. For each N, the

On substituting the values for k1, k2, k3 and k4, we obtain:
point wise absolute errors are approximated by the formula,
E  y ti   yi , for i  0, 1, 2, … N and where, y ti  and yi are

y	 y  1 hy  1  h 
6	3 
h2 	
2  yn 
the exact and computed approximate solution of the given problem respectively, at the nodal point ti.

 1  
h2  h3 	

3  h 
 1  
2    4
2  h3
 yn 
h4 	
Example 1. Consider the following quadratic Riccati differen- tial equation [3].

6 
h  h   2  
4  yn 

y t  16t2  5  8ty t  y2 t,

0  t  1

	h2
h3
h4 
y 0  1

 yn1  1  h 


yn1  Eh yn
2    6
 24
 yn




(16)
where the exact solution is: y t  1  4t .

The numerical solution in terms of point wise absolute errors by the comparing with the previous method is given in Table 2.

Where
Eh  1  h 
h2

2
 h3
6
 h4
24

Example 2. Consider the following quadratic Riccati differen-

From Eq. (8), it is easily observed that the exact value of
y tn  increases for the constant    0 and decreases for
  0 with the factor eh . While from Eq. (16) the approxi- mate value of ynincreases or decreases with the factor of Eh.
tial equation [3–6].

y t  1  2y t  y2 t, y 0  0,


0  t  1

egyptian journal of basic and applied sciences 3 (2016) 392–39 7 
395





y t  1
1  t
y 0  1

 y t  y2 t,

0  t  1


with analytic solution y t   1 . Table 5 shows that the nu-
1  t
merical solution in terms of absolute error for different step size h.





where  the  exact  solution  is:	y t  1 
 0.5ln  2  1 .

2 tanh  2t

Numerical results

The following graphs (Figs. 1–4) show the numerical solu- tions obtained by the present method versus its corresponding exact solution.

The numerical solution in terms of absolute errors is given in Table 3.

Example 3. Consider the following quadratic Riccati differen- tial equation [3].


Discussion and conclusion

In this paper, we presented classical KR4 for solving qua- dratic Riccati differential equations. To further collaborate the

y t  et  e3t  2e2t y t  et y2 t, y 0  1.
0  t  1
applicability of the proposed method; tables of point wise ab- solute error and graphs have been plotted for examples 1–4 for exact solution versus the numerical solutions at different

where the exact solution is y t  et .

The numerical solution in terms of absolute errors is given in Table 4.

Example 4. Consider the following Riccati differential equation [5].
values of mesh size h. Table 2 shows that the absolute errors obtained by RK4 have been compared with absolute errors ob- tained by Ref. [3]. Tables 3–5 also show that the point wise absolute error decreases as the mesh size h decreases, which in turn shows the convergence of the computed solution. Gen- erally, the present method is computationally: stable, effective, simple to use, convergent and give accurate solution than some







396	egyptian  journal  of  basic  and  applied  sciences  3 (2016) 392–39 7 




2.8

0	2.

2.

2.
-



1.
-
1.

1.

-	1.



Fig. 1 – The graph of numerical and exact solution of example 1 for N = 30.
Fig. 3 – The graph of numerical and exact solution of example 3 for N = 30.





1.8

1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

0
0	0.1	0.2	0.3	0.4	0.5	0.6	0.7	0.8	0.9	1
1


0.9

0.8


0.7


0.6


0.5


0.4
0	0.1	0.2	0.3	0.4	0.5	0.6	0.7	0.8	0.9	1



Fig. 2 – The graph of numerical and exact solution of example 2 for N = 30.
Fig. 4 – The graph of numerical and solution exact solution of example 4 for N = 30.

egyptian journal of basic and applied sciences 3 (2016) 392–39 7 
397





previously existing methods, including the more recent method in Ref. [3].


R E F E R E N C E S 



Riaz S, Rafiq M, Ahmad O. Non standard finite difference method for quadratic Riccati differential equation, Pakistan, Punjab University. J Math 2015;47(2).
Vahidi AR Didgar M. Improving the accuracy of the solutions of Riccati equations. Int J Ind Math 2012;4(1):11–20.
Ghomanjani F, Khorram E. Approximate solution for quadratic Riccati differential equation. J Taibah Univ Sci 2015. doi:10.1016/j.jtusci.2015.04.001.
Batiha B. A new efficient method for solving quadratic Riccati differential equation. Int J Appl Math Res 2015;4(1):24–9.
Baghchehjoughi RN, Saray BN, Lakestani M. Numerical solution of Riccati differential equation using Legendre scaling functions, Iran. J Curr Res Sci 2014;2(1):149–53.
Taiwo OA, Osilagun JA. Approximate solution of generalized Riccati differential equations by iterative decomposition algorithm. Int J Eng Innovative Tech 2012;1(2).
Mukherje S, Roy B. Solution of Riccati equation with variable coefficient by differential transformation method. Int J Nonlinear Sci 2012;14(2):251–6.
Jain MK. Numerical solution of differential equations, finite difference and finite element methods. 3rd ed. New Age International Publishers; 2014.
Jain MK, Iyengr SRK, Jain RK. Numerical methods for scientific and engineering computation. 5th ed. 2007.
