	Electronic Notes in Theoretical Computer Science 167 (2007) 365–386	
www.elsevier.com/locate/entcs

On Computable Compact Operators on Banach Spaces
Vasco Brattka1 ,2
Laboratory of Foundational Aspects of Computer Science Department of Mathematics & Applied Mathematics University of Cape Town, South Africa
Ruth Dillhage3
Department of Mathematics and Computer Science University of Hagen
Hagen, Germany

Abstract
We develop some parts of the theory of compact operators from the point of view of computable analysis. While computable compact operators on Hilbert spaces are easy to understand, it turns out that these operators on Banach spaces are harder to handle. Classically, the theory of compact operators on Banach spaces is developed with the help of the non-constructive tool of sequential compactness. We demonstrate that a substantial amount of this theory can be developed com- putably on Banach spaces with computable Schauder bases that are well-behaved. The conditions imposed on the bases are such that they generalize the Hilbert space case. In particular, we prove that the space of compact operators on Banach spaces with monotone, computably shrinking and computable bases is a computable Banach space itself and operations such as composition with bounded linear operators from left are computable. Moreover, we provide a computable version of the Theorem of Schauder on adjoints in this framework and we discuss a non-uniform result on composition with bounded linear operators from right.
Keywords: Computable functional analysis, Banach spaces, compact operators.


1 This work has been partially support by the National Research Foundation (NRF) Grant FA2005033000027 on “Computable Analysis and Quantum Computing”
2 Email: BrattkaV@maths.uct.ac.za
3  Email: Ruth.Dillhage@FernUni-Hagen.de





1571-0661 © 2007 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2006.08.021

Introduction

In functional analysis an operator T : X → Y on Banach spaces X, Y is called compact, if it is a linear operator such that the closure of the image T BX of the closed unit ball BX := {x ∈ X : ||x|| ≤ 1} is compact in Y . It is easy to see that any compact operator is necessarily bounded. Compact operators are particularly important, as for infinite-dimensional X the unit ball BX is not compact and thus compactness of the operator can often compensate this “defect”.
Classically, one can prove a number of basic properties of compact opera- tors on Banach spaces, some of which are summarized here:
T, S compact =⇒ aT, T + S compact,
T compact, S linear bounded =⇒ ST, TS compact,
T compact ⇐⇒ T ' compact.
The first property basically says that compact operators are closed under linear operations, the second one says that compact operators are closed under composition with linear bounded operators and the third property, which is called the Theorem of Schauder, ensures that the adjoint T ' : Y ' → X',f '→ fT of any compact operator is compact again.
We would like to prove computable versions of these results in the frame- work of computable analysis. For the special case of Hilbert spaces this has partially been done in [4]. However, in the general case of Banach spaces the classical theory is developed using the concept of sequential convergence that is highly non-constructive. Therefore, we need a substitute for this concept in case of computable analysis. It seems that there is no obvious way how to es- tablish all the above mentioned properties for compact operators in the general case of computable Banach spaces. In particular, closure of compact operators under addition cannot easily be proved in general. However, we show that in case of Banach spaces with well-behaved computable Schauder bases, one can establish a reasonable theory of compact operators computably that includes, in particular, computable versions of most of the above mentioned properties. It was a long standing open question in functional analysis, called Banach’s basis problem, whether every infinite-dimensional separable Banach space has a Schauder basis and for all natural examples of spaces this seems to be the case. In particular, the space C[0, 1] has a Schauder basis and it is known that any separable Banach space is a subspace of C[0, 1]. It was only proved in 1973 by Per Enflo that there exists an infinite-dimensional separable Banach space without a basis (in fact, the space is even reflexive and lacks the approximation property, see [10]). Regarding the difficulties to construct examples of such

spaces it seems not to be a too strict requirement to restrict the theory of computable compact operators to Banach spaces with bases.
We close this section with a brief survey on the organization of this paper. In the following section we recall some basic definitions regarding computable Banach spaces and compact subsets. In Section 3 we introduce Banach spaces with computable bases and we prove some elementary properties of these spaces. Moreover we discuss the special case of monotone bases and we show that in Banach spaces with computable monotone bases the natural projec- tions are computably compact and the coordinate functionals have computable norms. In Section 4 we discuss properties of the dual space and we define the concept of a computable dual basis. Moreover, we prove that any computable, computably shrinking and monotone basis is necessarily a computable dual basis. In Section 5 we introduce a representation of compact operators on computable Banach spaces that combines the information on the operator as continuous function and on the image of the unit ball as compact set. We prove some results regarding composition with bounded linear operators from left and the Theorem of Schauder. In Section 6 we study the space of compact operators as a Banach space and we provide sufficient conditions such that this space is a computable Banach space and such that the resulting Cauchy repre- sentation is equivalent to the representation introduced in Section 5. Finally, in Section 7 we discuss composition with bounded linear operators from right and we provide sufficient conditions for a non-uniform result. In the Conclu- sions we summarize all our results under assumptions that are sufficient for all results simultaneously.

Computable Banach Spaces and Compact Sets
In this section we briefly define some concepts from computable analysis and we refer the reader to [11] for some more detailed introduction. In the following we assume that Banach spaces are defined over the field F, which might either be R or C.
Definition 2.1 [Computable Banach space] A computable Banach space (X, || ||, e) is a separable Banach space (X, || ||) together with a fundamental sequence e : N → X (i.e. the linear span of range(e) is dense in X) such that the induced metric space is a computable metric space that makes the linear operations (addition and multiplication with scalars) computable.
The induced computable metric space is the space (X, d, αe) where d is given by d(x, y) := ||x − y|| and αe : N → X is defined by αe⟨k, ⟨n0, ..., nk⟩⟩ :=

k i=0
αF(ni)ei. Here αF is a standard numbering of QF where QF = Q in case

of F = R and QF = Q[i] in case of F = C. We assume that there is some
n ∈ N with αF(n)= 0.
In general, a space (X, d, α) is called a computable metric space, if (X, d) is a metric space with a dense sequence α such that d ◦ (α × α) is a computable double sequence. If not mentioned otherwise, then we assume that all com- putable Banach spaces X are represented by their Cauchy representation δX (of the induced metric space). The Cauchy representation δX :⊆ Σω → X of a computable metric space X is defined such that a sequence p ∈ Σω represents a point x ∈ X, if it encodes a sequence (α(ni))i∈N, which rapidly converges to x, where rapid means that d(α(ni), α(nj)) < 2−j for all i > j. Here Σω denotes the set of infinite sequences over some finite set Σ (the alphabet) and Σω is endowed with the product topology with respect to the discrete topology on Σ.
In general a representation of a set X is a surjective map δ :⊆ Σω → X. Here the inclusion symbol “⊆” indicates that the corresponding map might be partial. Given representations δ :⊆ Σω → X and δ' :⊆ Σω → Y , a map f :⊆ X → Y is called (δ, δ')–computable, if there exists a computable map F :⊆ Σω → Σω such that δ'F (p) = fδ(p) for all p ∈ dom(fδ). Analogously, one can define computability for multi-valued functions f :⊆ X ⇒ Y . In this
case the equation above has to be replaced by the condition δ'F (p) ∈ fδ(p).
Here a function F :⊆ Σω → Σω is called computable if there exists a Turing machine which computes F . Similarly, one can define the concept of continuity with respect to representations, where the computable function F is replaced by a continuous function.
Cauchy representations of computable metric spaces X are known to be admissible and for such representations continuity with respect to representa- tions coincides with ordinary continuity. If X, Y are computable metric spaces, then we assume that the space C(X, Y ) of continuous functions f : X → Y is represented by [δX → δY ], which is a canonical function space represen- tation. This representation satisfies two characteristic properties, evaluation and type conversion, which can be performed computably (see [11] for details). If Y = F, then we write for short C(X)= C(X, F).
We say that a representation δ is computably reducible to another represen- tation δ' of the same set, in symbols δ ≤ δ', if there is a computable function F :⊆ Σω → Σω such that δ(p)= δ'F (p) for all p ∈ dom(δ). This is equivalent to the fact that the identity id : X → X is (δ, δ')–computable. Two represen- tations are said to be computably equivalent, if they are mutually computably reducible to each other, in symbols δ ≡ δ'.
Since we want to handle compact operators, we also have to represent compact subsets. For any metric space X we denote by K(X) the set of non-

empty compact subsets of X. A straightforward way to obtain a representation of K(X) is to use the Cauchy representation δK(X) which is induced by the computable metric space that is given by the Hausdorff metric

dH : K(X) × K(X) → R, (A, B) '→ max  sup distB(a), sup distA(b) 
	
If (X, d, α) is a computable metric space, then we can use as a dense subset of K(X) the set of finite subsets of range(α). We obtain the following result.
Proposition 2.2 Let (X, d, α) be a computable metric space and let αF be a standard numbering of the ﬁnite subsets of range(α). Then (K(X), dH, αF ) is a computable metric space.
A proof of this result, several characterizations and other results on repre- sentations of compact subsets of metric spaces can be found in Corollary 4.11 and Theorems 4.12 and 4.13 in [5]. In the following we assume that K(X) is endowed with the Cauchy representation of (K(X), dH, αF ). A compact subset K ⊆ X of a computable metric space X is called recursive, if it is a computable point in K(X). There is the weaker concept of a co-r.e. compact subset K ⊆ X, which is a subset such that one can computably enumerate all finite covers consisting of rational open balls and there are corresponding weaker representations of compact subsets (see [5] for details). It is known that a set K ⊆ X is recursive compact if and only if it is co-r.e. compact and there exists a computable sequence that is dense in K.
In [8] it has been proved that a subset K ⊆ X of a computable metric space (X, d, α) is recursive compact if and only if it is closed, located and computably totally bounded. Here a set A ⊆ X is called located, if its distance function dA : X → R,x '→ infy∈A d(x, y) is computable and a set A ⊆ X is called computably totally bounded, if there exists a computable modulus of
total boundedness t : N → N that does the following: given a precision k it
determines a number t(k)= ⟨m, ⟨c0, ..., cm⟩⟩ such that A ⊆  m  B(α(ci), 2−k).
This result even holds uniformly, i.e. given a name for the distance function
and a name for the modulus of total boundedness for a compact set K, one can compute a Hausdorff name of K and vice versa. Here by B(y, r) := {x ∈ X : d(x, y) < r} we denote the open ball with center y and radius r and by B(y, r) := {x ∈ X : d(x, y) ≤ r} the closed balls. For normed spaces X we use the short notation BX := B(0, 1) for the closed unit ball, as mentioned earlier.
One essential property of compact subsets is that the continuous image of compact subsets is compact again and this result holds effectively and with respect to the stronger as well as the weaker representation of compact subsets

(see Theorem 3.3 in [12]).

Banach Spaces With Monotone Bases
Let X be a Banach space. A sequence (ei)i∈N in X is called a Schauder basis
of X (or a basis for short), if any point x can be uniquely represented as x =

∞
i=0
xiei with xi ∈ F. If X is a computable Banach space, then we will say

that (ei)i∈N is a computable basis, if it is a Schauder basis that is computable
in X. It is clear that for any computable Banach space (X, || ||, e) with computable basis f , it follows that f is a fundamental sequence in X and the space (X, || ||,f ) is a computable Banach space that is computably equivalent to the space (X, || ||, e). Here two computable Banach spaces with the same underlying set are called computably equivalent, if the corresponding Cauchy representations are computably equivalent (i.e. if the identity is computable in both directions). Any Banach space with a basis is necessarily infinite- dimensional and separable. It is easy to see that typical Banach spaces of this type, such as lp for 1 ≤ p < ∞, c0, C[0, 1] and others have bases and natural bases are typically computable.
For any Banach space with a basis (ei)i∈N there are associated linear op- erators, called natural projections:
∞	n
Pn : X → X, Σ xiei '→ Σ xiei.
The number c := supn∈N ||Pn|| is always finite and called the basis constant of the basis (ei)i∈N. The basis (ei)i∈N is called monotone, if its basis constant is c = 1. For any Banach space with basis (ei)i∈N one can define the coordinate functionals

' : X → F,
∞
xiei '→ xn.
i=0

It is well-known that ||e'|| · ||ei|| ≤ 2c for all i.
The following result shows that the natural projections and coordinate functionals are always computable.
Proposition 3.1 Let X be a computable Banach space with computable ba- sis e. Then the corresponding sequence of natural projections (Pn)n∈N is a computable sequence in C(X, X) and the corresponding sequence (e' )n∈N of
coordinate functionals is a computable sequence in C(X).
Now we consider Banach spaces with monotone bases and we prove that in this case the natural projections are not only computable operators, but

computably compact operators in some sense, defined later. Moreover, we will be able to conclude that the norms of the coordinate functionals form a computable sequence. In order to prove these results, we need some further preparation. The first observation is that the unit ball BX of every computable Banach space X is always located, i.e. its distance function dBX : X → R is computable. The next observation is that compactness can be transferred effectively from subspaces to the whole space. We say that a subspace Y of a computable Banach space X is a computable subspace, if it is a computable Banach space with respect to some fundamental sequence that is computable in X. This is equivalent to the condition that Y is a computable Banach space and the inclusion map inY : Y ‹→ X is computable.
Lemma 3.2 Let X be a computable Banach space with a computable subspace
Y ⊆ X. Then the inclusion map in : K(Y ) ‹→ K(X),K '→ K is computable.
In the next step we mention that the unit balls Bn of the n–dimensional subspaces Xn of a computable Banach space X form a computable sequence in K(X). We leave the proof to the reader.
Lemma 3.3 Let X be a computable Banach space with a computable basis e. Then the sequence (Bn)n∈N of sets


Bn :=


x =
i=0
xiei ∈ X : ||x|| ≤ 1

is computable in K(X).
In the next step we observe that for monotone bases we obtain PnBX = Bn.
Lemma 3.4 Let X be a Banach space with a monotone basis e. Then
PnBX = Bn ⊆ BX.
Proof. We claim that PnBX = Bn. By definition of Bn it is clear that “⊇”
holds. For the other inclusion, let x = Σ∞  xiei ∈ BX. Then Pnx = Σn	xiei
and since e is monotone, one obtains ||Pnx|| ≤ ||Pn|| · ||x|| ≤ 1, i.e. Pnx ∈ Bn.
It is also clear that Bn ⊆ BX holds.	 
Now we can conclude that the natural projections are computably compact in a sense defined later. Here we express the result directly.
Corollary 3.5 Let X be a computable Banach space with a computable and monotone basis e. Then (PnBX)n∈N is a computable sequence in K(X).

¿From this corollary we are able to conclude that the coordinate functionals form a computable sequence in X'. We will prove a more general result in Proposition 6.4.
Proposition 3.6 Let X be a computable Banach space with a computable and monotone basis e. Then (||e' ||)n∈N is a computable sequence.

Dual Spaces
In this section we discuss some properties of the dual spaces X' of computable Banach spaces X. The following representation is a natural representation of X'.
Definition 4.1 [Dual space representation] Let X be a separable Banach space. We define a representation δX' of the dual space X' by
δX' ⟨p, q⟩ = f : ⇐⇒ [δX → δF](p)= f and δR(q)= ||f ||.
That is, a name of a functional f contains information on both, the func- tional f as a continuous function and its operator norm ||f ||. If not mentioned otherwise, we will assume that X' is represented by δX' . As a consequence of Proposition 3.1 and Proposition 3.6 we can conclude that the coordinate func- tionals form a computable sequence of functionals, provided the corresponding basis is monotone.
Corollary 4.2 Let X be a computable Banach space with a computable and monotone basis e. Then (e' )n∈N is a computable sequence in X' with respect
to δX' .
Unfortunately, the dual space X' of a computable Banach space is not necessarily a computable Banach space again. In [2] we have seen, for in- stance, that the dual space l∞ of l1 cannot be considered as a computable Banach space in the ordinary sense (one can either get a computable addition or a computable norm, but not both). However, the dual space X' of any computable Banach space is a general computable Banach space in some sense (see Corollary 21.30 in [2]). For our purposes here it is convenient to have the notion of a computable dual space as captured in the next definition.
Definition 4.3 [Computable dual space] Let X be a computable Banach space. We say that X has a computable dual space X', if there exists a sequence e∗ : N → X' such that
(X', || ||, e∗) is a computable Banach space,
δX' is computably equivalent to the Cauchy representation of (X', || ||, e∗).

In case of a Banach space with a basis e we have a canonical choice for e∗. Given a Banach space with basis e, the coordinate functionals e' can form a basis of X'. Actually, this is the case if and only if e is shrinking (see Proposition 4.4.7 in [10]). Here a basis e is called shrinking, if limn→∞ ||f ||(n) = 0 for all f ∈ X', where


||f ||
:= sup  |f x| : x ∈ span{e

: i > n},x /= 0 .


In case that a basis e is shrinking, one obtains a Cauchy representation of X'.
Definition 4.4 [Cauchy representation of the dual space] Let X be a Banach space with a shrinking basis e. Then the coordinate functionals e' form a basis of X' and by δC' we denote the corresponding Cauchy representation of
(X', || ||, e').
For a reflexive Banach space X any basis e is shrinking (see Theorem 4.4.15 in [10]). Now the interesting question is whether and under which conditions the representations δX' and the Cauchy representation δC' of X' are com- putably equivalent. We introduce a special type of bases for which this is the case.
Definition 4.5 [Computable dual basis] Let X be a computable Banach space. A basis e is called a computable dual basis, if
e is a computable and shrinking basis of X,
δX' ≡ δC' .
Note that the basis e has to be shrinking in order to guarantee that e' is a basis of X' and that δC' exists. A computable Banach space X with a computable dual basis, in particular, has a computable dual space X'. It would be desirable to have conditions on e and X which guarantee that conditions
(2) follows from (1). In order to prove a result in this direction we use the following notion.
Definition 4.6 [Shrinking modulus] Let X be a Banach space with basis e
and let f ∈ X'. Then m : N → N is called a shrinking modulus of f , if
||f ||(m(k)) < 2−k for all k ∈ N.
Using this notion we can define computably shrinking bases.
Definition 4.7 [Computably shrinking] Let X be a computable Banach space with a computable basis e. Then e is called computably shrinking, if there exists a (δX' , δNN )–computable map S : X' ⇒ NN such that for each fixed
f ∈ X' any m ∈ S(f ) is a shrinking modulus for f ∈ X'.

Now we can formulate the following characterization. We leave the proof to the reader.
Proposition 4.8 Let X be a computable Banach space with a computable and shrinking basis e. Then the following conditions are equivalent:
δC' ≤ δX' ,
(X', || ||, e') is a computable Banach space,
|| || : X' → R is (δC' , δR)–computable.
Moreover, the following conditions are equivalent to each other:
δX' ≤ δC' ,
e is computably shrinking.
Now we can conclude the following characterization of computable dual bases. The first two conditions are equivalent by the previous proposition, the second condition obviously implies the third condition and the third im- plies the first by the Stability Theorem 21.23 and Corollary 21.30 in [2] and Proposition 3.1.
Corollary 4.9 Let X be a computable Banach space with a computable and shrinking basis e. Then the following conditions are equivalent:
e is a computable dual basis (i.e. δC' ≡ δX' ),
(X', || ||, e') is a computable Banach space and e is computably shrinking,
(3) + : X' × X' → X' is (δX' , δX' , δX' )–computable and (||e'||)i∈N is a com-
putable sequence.
With the next result we show that for monotone and computable bases the norm on the dual space is always computable. We will prove a more general result in Proposition 6.4.
Proposition 4.10 Let X be a computable Banach space with a computable, shrinking and monotone basis e. Then || || : X' → R is (δC' , δR)–computable
and (X', || ||, e') is a computable Banach space.
This leads to the following characterization of computable dual bases in the monotone case (as a corollary of Corollary 4.9, Proposition 4.10 and Proposi- tion 3.6).
Corollary 4.11 Let X be a computable Banach space with a computable, shrinking and monotone basis e. Then the following conditions are equiva- lent:
e is a computable dual basis (i.e. δC' ≡ δX' ),

e is computably shrinking,
(3) +: X' × X' → X' is (δX' , δX' , δX' )–computable.
It is important to mention that the third condition does not depend on the basis. Therefore, for a fixed computable Banach space X either any com- putable, shrinking and monotone basis is automatically computably shrinking or no such basis has this property. We obtain the following conclusion.
Corollary 4.12 Let X be a computable Banach space. Any computable, com- putably shrinking and monotone basis e of X is a computable dual basis.
The following result provides an important criterion that is naturally sat- isfied in many applications and guarantees that our requirements on bases are satisfied.
Theorem 4.13 (Dual basis theorem) Let X be a computable Banach space with a computable and monotone basis e. If X is reflexive and has a computable dual space, then the basis e is computably shrinking (and, thus, a computable dual basis).
Proof. Any basis of a reflexive space is automatically shrinking by Theo- rem 4.4.15 in [10].  By Corollary 4.11 it remains to prove that addition
+ : X' × X' → X' is computable on the dual space X' with respect to δX' . But since X has a computable dual space, the dual space X' is a computable Banach space and its Cauchy representation is computably equivalent to δX' . Since the Cauchy representation makes the addition computable, the desired result follows.	 
The next observation is that for computable Hilbert spaces X (i.e. com- putable Banach spaces that are, additionally, Hilbert spaces) everything is satisfied automatically.
Proposition 4.14 Let X be an inﬁnite-dimensional computable Hilbert space. Then X has a computable orthonormal basis e and any such basis is a com- putable, monotone and computably shrinking Schauder basis.
Proof. Let X be an infinite-dimensional computable Hilbert space. In Lemma 3.1 of [7] it has been proved that any computable Hilbert space X has a computable orthonormal basis e. Then any point x can be uniquely
represented by its Fourier series as x = Σ∞ ⟨x, ei⟩ei. In particular, e is a
computable Schauder basis. Moreover, any Hilbert space is reflexive and any
computable Hilbert space has a computable dual space (see Theorem 4.7 in [7], which is a consequence of the computable Fr´echet-Riesz Theorem). By Theorem 4.13 the desired result follows.	 

There is an example of a computable Hilbert space with a computable Schauder basis that is not a computable dual basis. This example in particular shows that we cannot simply omit monotonicity in Propositions 3.6 and 4.10, Corollary 4.11 and Theorem 4.13. Besides Hilbert spaces there are many natural examples of Banach spaces that admit a computable dual basis. We mention the example of the lp spaces.
Example 4.15 The sequence spaces lp with computable p > 1 and equipped

with the norm ||(xn)n∈N||p := √p
∞
i=0
||xi||p and the basis e, defined by

ei(j) := δij, form a computable Banach space and the basis e is computable
and monotone. It follows from Theorem 4.13 that this basis is also com- putably shrinking, as the lp–spaces are reflexive and they admit computable dual spaces by the computable version of the Theorem of Landau (see Theo- rem 21.33.2 in [2]).
Spaces like l1 or C[0, 1] that do not have a separable dual space cannot have a computable dual basis. However, the two mentioned spaces still admit computable bases.

Computably Compact Operators
In this section we introduce a representation of compact operators on sepa- rable Banach spaces and we provide computable versions of some elementary properties of compact operators. In particular, we prove that compact oper- ators are closed with respect to composition in some sense and we provide a computable version of the Theorem of Schauder.
Definition 5.1 [Image representation] Let X, Y be separable Banach spaces. We define a representation δB∞(X,Y ) of the set B∞(X, Y ) of compact operators F : X → Y by
δB∞(X,Y )⟨p, q⟩ = F : ⇐⇒ [δX → δY ](p)= F and δK(Y )(q)= F BX.
That is, a name ⟨p, q⟩ of a compact operator F contains two types of information, a name p of F as a continuous map and a name q of the closure of the image of the unit ball as a compact set. If not mentioned otherwise, we will assume that B∞(X, Y ) is represented by δB∞(X,Y ). It follows from Proposition 3.1 and Corollary 3.5 that the projections are computably compact operators, provided the corresponding basis is monotone.
Corollary 5.2 Let X be a computable Banach space with a computable and monotone basis e. Then (Pn)n∈N is a computable sequence in B∞(X, X) with respect to δB∞(X,X).

Another operation that obviously becomes computable with respect to this representation is composition with bounded linear operators from the left.
Proposition 5.3 (Composition) Let X, Y, Z be computable Banach spaces. Then composition
:⊆ C(Y, Z) × B∞(X, Y ) → B∞(X, Z), (S, F ) '→ SF,
restricted to linear operators S, is ([δY → δZ], δB∞(X,Y ), δB∞(X,Z))–computable.
Proof. First of all, it is clear that composition of continuous operators is ([δY → δZ], [δX → δY ], [δX → δZ])–computable (see Exercise 3.3.11 in [11]). Moreover, the continuous image of compact sets can be computed (see Theo- rem 3.3 in [12]). That is (SF )BX = S(F BX) ∈ K(Z) can be computed, given a F BX ∈ K(Y ).	 
The next observation is that the computably compact operators F ∈ B∞(X, F) are exactly the computable functionals F ∈ X' and this holds uni- formly.
Proposition 5.4 (Functionals as compact operators) Let X be a com- putable Banach space. Then X' = B∞(X, F) and the representations δX' and δB∞(X,F) are computably equivalent.

Proof. For any functional f : X → F we obtain f BX = B(0, ||f ||). Since the map R : R → K(F),r '→ B(0, r) is computable and has a computable right inverse, the desired result follows.	 
¿From this result one can easily conclude that there are classically com- pact operators (in fact, functionals) that are computable but not computably compact: in Example 4.6 of [7] a computable functional f : l2 → R without computable norm ||f || is constructed. For arbitrary compact operators we get a result that, in one direction, is similar to the previous one, namely the operator bound of any compact operator can be computed. We will see below that one cannot get any similar result in the other direction.
Proposition 5.5 (Operator norm of compact operators) Let X, Y be computable Banach spaces. Then the map
|| || : B∞(X, Y ) → F,F '→ ||F ||
is computable.
Proof. For any linear bounded operator F : X → Y we obtain



||F || = sup
||x||≤1
||F x|| = sup ||F BX||.

Given a name of a compact operator F ∈ B∞(X, Y ) we can compute a name for F BX ∈ K(Y ). Since the continuous image of a compact set is computable (see Theorem 3.3 in [12]), we can also compute ||F BX|| ∈ K(R). Finally, we note that the suprema over compact subsets of R is computable (see Lemma 5.2.6 in [11]) and thus the desired result follows.	 
The previous results lead to the question whether any classically compact operator that is computable and has a computable norm is already computably compact (as it is the case for functionals). The following example shows that this is not the case, not even for Hilbert spaces.
Example 5.6 Let a = (ak)k∈N be a computable sequence of reals such that
||a||2 < 1, but ||a||2 is non-computable. We use l2 over F = R and we define a linear bounded operator F : l2 → l2 using the matrix representation
⎛⎜ 1 0 0 0 0 ··· ⎞
⎜⎝ 0 0 0 0 0 ··· ⎟
Then F is compact since its range is two-dimensional, F is obviously com-
putable as the sequence a is computable, the norm ||F || = 1 is computable, but F is not computably compact and the image F Bl2 is not even located since dT BÆ2 (e1)= 1 − ||a||2 is not computable.
As a next result we formulate a computable version of the Theorem of Schauder. The classical Theorem of Schauder states that for any compact operator F : X → Y the adjoint
F ' : Y ' → X',f '→ fF 
is compact again. In [7] we have already presented a computable version of this theorem for computable Hilbert spaces. In case of Banach spaces we have to face the problem that there are computable Banach spaces (such as l1) whose dual spaces (such as l∞) are not computable Banach spaces. In order to avoid additional technicalities, we formulate two separate results here that will give us together a computable version of the Theorem of Schauder for spaces whose dual spaces are well-behaved.
Proposition 5.7 Let X, Y be computable Banach spaces. Then the operation
C :⊆ B∞(X, Y ) × C(Y ) → X', (F, f ) '→ fF,

restricted to linear functionals f, is (δB∞(X,Y ), [δY → δF], δX' )–computable.
Proof. Given F ∈ B∞(X, Y ) and f ∈ C(Y ), we can compute fF ∈ B∞(X, F) by Proposition 5.3 and thus fF ∈ X' by Proposition 5.4.	 
Note that this result implies by type conversion that the adjoint map con- sidered as map A : B∞(X, Y ) → C(Y ', X'),F '→ F ' is computable. However, in order to get a name of F ' : Y ' → X' as a continuous map, it is sufficient that the input information f is given without the norm ||f || (i.e. it is sufficient to supply f ∈ C(Y ), not necessarily f ∈ Y '). In order to get the adjoint F ' as a compact operator, we have to compute, additionally, the image F 'BY ' as a compact set in X'. According to the previous result it is sufficient to show that BY ' is computably compact in C(Y ). This is, more or less, the statement of the computable version of the Theorem of Banach-Alaoglu. We use a version of this result provided in [3]. If we now combine the previous results, we get the following version of the the Theorem of Schauder.
Theorem 5.8 (Computable Theorem of Schauder) Let X, Y be com- putable Banach spaces with computable dual spaces X',Y '. Then the map
A : B∞(X, Y ) → B∞(Y ', X'),F '→ F '
that maps any compact operator F : X → Y to its adjoint F ', is computable.
Proof. By Proposition 5.7 we can conclude by type conversion that the ad- joint map A0 :⊆ B∞(X, Y ) → C(C(Y ), X'),F '→ F ' is computable. By the computable Theorem of Banach-Alaoglu there exists a computable metric space Z, a computable map f : Z → C(Y ) and a computably compact set K ⊆ Z such that f (Z)= BY ' . It follows from the fact that we can compute continuous images of compact sets (by Theorem 3.3 in [12]) that we can also compute F 'BY ' = F 'BY ' = F 'f (Z) ∈ K(X'). Altogether, this means that we can compute F ' ∈ B∞(Y ', X').	 

The Space of Compact Operators
In this section we want to study the space B∞(X, Y ) of compact operators somewhat further. Endowed with the operator norm this space is a Banach space itself. However, it is not necessarily separable and even in cases where it is separable, it is not clear that it is a computable Banach space. This is problematic as one would like to perform operations like addition on compact operators. We will provide conditions under which the space turns out to be a computable Banach space and the corresponding Cauchy representation is computably equivalent to the representation discussed in the previous section.

The approximation property plays a particular role in this context. A Ba- nach space X is said to have the approximation property, if for every compact set K ⊆ X and every ε > 0 there exists an operator F : X → Y of finite rank such that ||Fx − x|| < ε for every x ∈ K.
Let us assume that X, Y are separable Banach spaces. If the dual space X' or the space Y has the approximation property, then the set F(X, Y ) of finite rank operators is dense in B∞(X, Y ) (see the Theorems of Grothendieck: Theorem 1.e.4(v) and Theorem 1.e.5 in [9]). In particular, for a Banach space X with a shrinking basis e the dual space X' has the approximation property, since for such a space e' is a basis for X' and any space with a basis has the approximation property by Theorem 4.1.33 in [10]. In this situation there is a natural Cauchy representation of the set of compact operators.
Definition 6.1 [Cauchy representation] Let X be a Banach space with a shrinking basis e and let (Y, || ||,f ) be a separable Banach space. We define a numbering αef of some finite rank operators F : X → Y by

k
αef ⟨k, ⟨n0, ..., nk⟩, ⟨l0, ..., lk⟩⟩(x) :=	αe' (ni)(x)αf (li).
i=0
Then range(αef ) is dense in the set B∞(X, Y ) of compact operators.	We
denote by δC	the Cauchy representation of B∞(X, Y ) induced by αef .
It follows from the computable version of the Fr´echet-Riesz Theorem proved in [7] that for Hilbert spaces the Cauchy representation provided here is equivalent to the one introduced in [4].
The most interesting question for us is under which conditions the space (B∞(X, Y ), || ||, αef ) is a computable Banach space and when the correspond-
ing Cauchy representation δC	is equivalent to δB∞(X,Y ). We start to dis-
cuss the question when the Cauchy representation can be computably trans-
lated into δB∞(X,Y ). First of all, we extract the information on compact oper- ators as bounded operators.
Proposition 6.2 Let X be a computable Banach space with a shrinking and computable basis e and let Y be a computable Banach space. Then the injection




C
B∞(X,Y )
inj : B∞(X, Y ) ‹→ C(X, Y )
, [δX → δY ])–computable.

In a second step we want to consider the information on the image of the unit ball. Therefore it is helpful to use the following lemma.

Lemma 6.3 Let X, Y be Banach spaces and let S, F : X → Y be compact operators. Then
dH(SBX, F BX) ≤ ||S − F ||.
Now we are prepared to prove the following result. Here we have to assume that the basis of the space X is even monotone.
Proposition 6.4 Let X be a computable Banach space with a monotone, shrinking and computable basis e and let (Y, || ||,f ) be a computable Banach space. Then the image map




C
B∞(X,Y )
im : B∞(X, Y ) → K(Y ),F '→ F BX
, δK(Y ))–computable.

Proof. By the previous Lemma 6.3 it suffices to consider the case that F =
αef (n) = Σk	αe' (ni)αf (li) for some n = ⟨k, ⟨n0, ..., nk⟩, ⟨l0, ..., lk⟩⟩. We can
assume that each ni has the form ni = ⟨hi, ⟨mi0, ..., mihi ⟩⟩ and thus
k	k	hi
Fx = Σ αe' (ni)(x)αf (li)= Σ αf (li) Σ αF(mij)e' (x).

i=0
i=0
j=0



Now we let h := max{h0, ..., hk} and we claim that FPhBX = F BX. It is clear that “⊆” holds, as PhBX ⊆ BX by Lemma 3.4. For “⊇” it suffices to
prove that F BX ⊆ FPhBX, as PhBX is compact and hence FPhBX is closed.
Let y ∈ F BX. Then there exists some x = Σ∞ xiei ∈ BX with xi ∈ F and
Fx = y. With x' := Phx = Σh	xiei we obtain Fx = F x'. Since x' ∈ PhBX,
we can conclude that y ∈ FPhBX.
We prove that given n we can compute PhBX ∈ K(X). By Corollary 3.5 it holds that (PnBX)n∈N is a computable sequence in K(X). Since the continuous image of a compact set can be computed (by Theorem 3.3 in [12]) it follows that F BX ∈ K(Y ) can be computed.	 
Whenever X is a computable Banach space with a monotone, shrinking and computable basis e, then we obtain the following proposition.
Proposition 6.5 Let X be a computable Banach space with a monotone, shrinking and computable basis e and let Y be a computable Banach space.
Then (B∞(X, Y ), || ||, αef ) is a computable Banach space and δC	≤
δB∞(X,Y ).
Proof. The computable reducibility of the representations follows directly from Proposition 6.2 and Proposition 6.4. It is clear that addition and multi- plication with scalars is computable in the dense subset with respect to αef .

Moreover, the norm || || : B∞(X, Y ) → R is computable with respect to

δB∞(X,Y ) and δC
. Altogether, this implies that (B∞(X, Y ), || ||, αef ) is a

computable Banach space.	 
Now we continue to discuss the translation in the other direction. First of all, we prove that any computable Banach space with computable basis has the effective approximation property. We use the following notion for that purpose.
Definition 6.6 [Basis modulus] Let X be a Banach space with a basis and corresponding natural projections Pn. Let K ⊆ X be a subset. Then m : N → N is called a basis modulus for K, if ||Pm(k)x − x|| < 2−k for any x ∈ K.
Now we can prove the following result.
Proposition 6.7 (Effective approximation property) Let X be a computable Banach space with a computable basis e. Then there is a computable multi-valued map AP : K(X) ⇒ NN such that for each ﬁxed
K ∈ K(X) any m ∈ AP(K) is a basis modulus of K.
This result, applied to the target space Y , now allows to formulate a suffi- cient condition for the translation of the representations of the space of com- pact operators in the other direction.
Proposition 6.8 Let X be a computable Banach space with a computable and computably shrinking basis e and let Y be a computable Banach space with a
computable basis f. Then δB∞(X,Y ) ≤ δC	.
Proof. Given F ∈ B∞(X, Y ) with respect to δB∞(X,Y ) and k ∈ N, we have to compute some n ∈ N with ||F − αef (n)|| ≤ 2−k.
First of all, we can use the δB∞(X,Y )–name of F to compute a basis modulus
m : N → N for F BX ∈ K(Y ) by Proposition 6.7. Then
||Pm(k+1)F − F || = sup{||Pm(k+1)Fx − F x|| : x ∈ BX} ≤ 2−k−1
for all k ∈ N. By Proposition 3.1 we can compute Pm(k+1) ∈ C(X, X), given
k, and by Proposition 5.3 we can compute Fk := Pm(k+1)F ∈ B∞(X, Y ) with
respect to δB (X,Y ). We obtain Fkx = Σ∞ f '(Fkx)fi = Σm(k+1)(f 'Fk)xfi.
continuous functions and by Proposition 5.7 it follows that f 'Fk ∈ X' can be
computed for any i = 0, ..., m(k + 1) with respect to δX' .
Since e is computably shrinking, we can translate δX' into the Cauchy representation of (X', || ||, e') by Proposition 4.8 and thus we can compute

n0, ..., nm(k+1) ∈ N such that
'


2−k−1

||fi Fk − αe' (ni)|| < ||f || · (m(k + 1)+ 1)

and some n ∈ N such that αef (n)(x)= Σm(k+1) αe' (ni)(x)fi. Then we obtain

for all x ∈ BX


m(k+1)

||Fx − αef (n)(x)|| ≤ ||Fx − Fkx|| +	Fkx −
  
i=0
αe' (ni)(x)fi
  

≤ 2−k−1 +
m(k+1)

i=0
||f 'Fk − αe' (ni)||· ||x|| · ||fi|| < 2−k

and thus ||F − αef (n)|| ≤ 2−k.	 
Now we are prepared to prove our main result. It provides sufficient condi- tions under which our two representations for the space of compact operators are equivalent and the space is a computable Banach space itself. It is a direct consequence of Proposition 6.5 and Proposition 6.8.
Theorem 6.9 Let X be a computable Banach space with a monotone, com- putably shrinking and computable basis e and let Y be a computable Banach space with a computable basis f. Then (B∞(X, Y ), || ||, αef ) is a computable

Banach space and δC
≡ δB∞(X,Y ).

If we apply this result to the case Y = F, then it follows that the dual space representations δX' and δC' are computably equivalent. In this sense, a well-behaved dual space is necessary for a well-behaved space of compact operators. By Proposition 4.14 we can conclude that our main theorem holds, in particular, in the situation of Hilbert spaces.
Corollary 6.10 Let X and Y be inﬁnite-dimensional computable Hilbert spaces with computable orthonormal bases e and f, respectively.  Then

C
B∞(X,Y )
≡ δB∞(X,Y ) and (B∞(X, Y ), || ||, αef ) is a computable Banach space.

Biduals and Composition from Right
In this section we finally address the question whether the composition of com- pact operators with bounded operators from right is a computable operation. For this purpose we need the following definition.
Definition 7.1 [Computable reflexivity] A computable Banach space X is said to be computably embeddable into its bidual, if the partial inverse ι−1 of

the canonical map

ι : X → X'',x '→ (f '→ f x)

is (δX'' , δX)–computable. Moreover, X is said to be computably reflexive, if X
is reflexive and X is computably embeddable into its bidual.
Here we assume that
δX'' ⟨p, q⟩ = x : ⇐⇒ [δX' → δF](p)= x and δR = ||x||.
By definition a Banach space X is called reflexive, if ι is surjective. It is easy to see that the map ι itself is always (δX, δX'' )–computable. This is because evaluation on X' is computable with respect to δX' and ι is an isometry.
Now we can formulate the following result on composition from right. Since the adjoint F ' of a computable operator F is not necessarily computable (see Example 6.5 of [7]), we need an extra assumption on the adjoint in the fol- lowing result. We leave the proof to the reader.
Theorem 7.2 Let X, Y, Z be computable Banach spaces with computable dual spaces and let T ⊆ C(X, Y ) be a set of linear bounded operators such that the adjoint operation A :⊆ C(X, Y ) → C(Y ', X'),F '→ F ' is computable restricted to T . If X' and Z' have computable dual spaces and Z is computably embed- dable into its bidual then the composition
:⊆ B∞(Y, Z) × C(X, Y ) → B∞(X, Z), (S, F ) '→ SF,
restricted to T in the second component, is computable.

Conclusions
In this paper we have shown that the theory of compact operators can be developed computably for Banach spaces with bases that satisfy some reason- able additional conditions. In the following corollary we summarize our results under assumptions that are sufficient to conclude all desirable properties of compact operators simultaneously. If a Banach space has a computable, com- putably shrinking and monotone basis, then the space has a computable dual space by Corollary 4.12. Therefore, the conditions as given below are sufficient for all our results.
Corollary 8.1 Let X, Y , and Z be computable Banach spaces with com- putable, computably shrinking and monotone bases. Then the following hold:
(1) +: B∞(X, Y ) × B∞(X, Y ) → B∞(X, Y ), (F, S) '→ F + S is computable,
(2) · : F × B∞(X, Y ) → B∞(X, Y ), (a, F ) '→ aF is computable,

|| || : B∞(X, Y ) → R,F '→ ||F || is computable,
A : B∞(X, Y ) → B∞(Y ', X'),F '→ F ' is computable.
◦ :⊆ C(Y, Z) × B∞(X, Y ) → B∞(X, Z), (S, F ) '→ SF is computable.
If, additionally, X and Z are computably reflexive, then the following holds:
if F : X → Y and F ' : Y ' → X' are computable, then the operation
F : B∞(Y, Z) → B∞(X, Z),S '→ SF is computable.
All the conditions mentioned in this corollary are automatically satisfied for infinite-dimensional computable Hilbert spaces X, Y, Z (with computable orthonormal bases that always exist). In case of a finite-dimensional Banach space X, it is easy to see that the unit ball BX is computably compact and thus the representation δB∞(X,Y ) is computably equivalent to the representation [δX → δY ] in this case. All the results above can easily be proved directly in this special case.
There are a number of questions that have not been treated in this paper. For instance, it would be interesting to know whether computable compact operators could be applied in the same way as their classical counterparts, for instance, for the solution of integral or differential equations. Finally, it would be desirable to come to a better understanding of the computability conditions imposed on dual spaces and computable reflexivity. To settle the logical relations between all required notions and to construct corresponding counterexamples was beyond the scope of the present work. A particularly interesting example would be a computable Banach space X with a separable dual space X' such that addition + : X' × X' → X' is not computable with respect to δX' . It would be desirable that this space has a computable mono- tone and shrinking basis at the same time. It is not yet clear whether such an example exists at all.

References
Brattka, V., The inversion problem for computable linear operators, in: H. Alt and M. Habib, editors, STACS 2003, Lecture Notes in Computer Science 2607 (2003), pp. 391–402, 20th Annual Symposium on Theoretical Aspects of Computer Science, Berlin, Germany, February 27–March 1, 2003.
Brattka, V., Computability on non-separable Banach spaces and Landau’s theorem, in:
L. Crosilla and P. Schuster, editors, From Sets and Types to Topology and Analysis: Towards Practicable Foundations for Constructive Mathematics, Oxford University Press, 2005 pp. 316– 333.
Brattka, V., On the Borel complexity of Hahn-Banach extensions, in: V. Brattka, L. Staiger and K. Weihrauch, editors, Proceedings of the 6th Workshop on Computability and Complexity in Analysis, Electronic Notes in Theoretical Computer Science 120 (2005), pp. 3–16, 6th International Workshop, CCA 2004, Wittenberg, Germany, August 16–20, 2004.

Brattka, V. and R. Dillhage, Computability of the spectrum of self-adjoint operators, Journal of Universal Computer Science 11 (2005), pp. 1884–1900.
Brattka, V. and G. Presser, Computability on subsets of metric spaces, Theoretical Computer Science 305 (2003), pp. 43–76.
Brattka, V. and M. Schr¨oder, Computing with sequences, weak topologies and the axiom of choice, in: L. Ong, editor, Computer science logic, Lecture Notes in Computer Science 3634 (2005), pp. 462–476.
Brattka, V. and A. Yoshikawa, Towards computability of elliptic boundary value problems in variational formulation, Journal of Complexity (to appear).
Brattka, V. and N. Zhong, Computable compactness in spaces of continuous functions
(unpublished manuscript).
Lindenstrauss, J. and L. Tzafriri, “Classical Banach Spaces I, Sequence Spaces,” Ergebnisse der Mathematik und ihrer Grenzgebiete 92, Springer, Berlin, 1977.
Megginson, R. E., “An Introduction to Banach Space Theory,” Graduate Texts in Mathematics
183, Springer, New York, 1989.
Weihrauch, K., “Computable Analysis,” Springer, Berlin, 2000.
Weihrauch, K., Computational complexity on computable metric spaces, Mathematical Logic Quarterly 49 (2003), pp. 3–21.
