Available online at www.sciencedirect.com



Electronic Notes in Theoretical Computer Science 278 (2011) 47–54
www.elsevier.com/locate/entcs
The Closed Fragment of IL is PSPACE Hard
F´elix Bou1,2
Department of Probability, Logic and Statistics University of Barcelona
Barcelona, Spain
Joost J. Joosten1,3
Department of Logic, History and Philosophy of Science University of Barcelona
Barcelona, Spain

Abstract
In this paper we consider IL0, the closed fragment of the basic interpretability logic IL. We show that we can translate GL1, the one variable fragment of G¨odel-L¨ob’s provabilty logic GL, into IL0. Invoking a result on the PSPACE completeness of GL1 we obtain the PSPACE hardness of IL0.
Keywords: Interpretability Logic, computational complexity, closed fragment, PSPACE, normal forms.


Introduction
For a propositional logic L, the closed fragment –we write L0– of that logic consists of those theorems of L that do not contain any propositional variables at all. For various logics, it is known that the closed fragment is a lot easier than the full logic itself. The simplicity of the closed fragment can be captured by the complexity class of a decision procedure of theoremhood. Moreover, in all cases where L0 is known to be simpler than L in this sense, we have a set of normal forms for L0 and a normal form theorem to the effect that each closed formula can be written in a unique way as a special combination of normal form formulas.
Perhaps the most canonical example of this phenomenon is classical proposi- tional logic. Theoremhood in classical propositional logic is known to be co-NP

1 The authors thank Spanish Ministry of Education and Science (projects TASSAT TIN2010-20967- C04-01 and RYC-2008-02649), and Catalan Government (project 2009SGR-1433/34).
2 Email: bou@ub.edu
3 Email: jjoosten@ub.edu

1571-0661 © 2011 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2011.10.005

complete whereas the closed fragment is decidable in LOG-time. In this case, by definition, the only two formulas in normal form are T and ⊥. For various modal logics the situation is similar but slightly different. For the provability logic GL, theoremhood is known to be a PSPACE complete problem (see [2, Theorem 18.29]), whereas provability of formulas in the closed fragment is known to be PTIME de- cidable (see [3, Theorem 9]). Moreover, the normal form theorem ([1, Chapter 7]) states that each formula in the closed fragment is provably equivalent to a Boolean combination of formulas of the form 2n⊥ with n ∈ ω.
Interpretability logics arise as natural extensions of GL. The logic GL has only one modal operator 2A to capture that “A is provable in some basic theory T ”. Interpretability logics have an additional binary modality A D B to capture that “the theory T + A interprets the theory T + B”.
These interpretability logics are always defined as some core part IL as defined below, together with some additional principles. However, as soon as the additional principles prove some rather weak principle F, the technical details of which are irrelevant for the moment, then closed interpretability formulas can be expressed without the modality D and the normal forms are the same as those of GL: Boolean combination of formulas of the form 2n⊥ with n ∈ ω (see [5]). It is good to stress here that all interpretability logics with some interesting meta-mathematical content do contain the principle F. For logics below ILF and in particular for IL itself, it is not known if there exists a natural set of normal forms.
Not for all modal logics it is the case that the L0 is simpler than L. In particular, it is known that the minimal modal logic K and its closed fragment K0 are both PSPACE complete (see [3, Corollary 4]). The same also happens for the modal logic K4 of transitive frames (see also [3]).
We shall see in this paper that the logic IL is like these logics K and K4 in that also the closed fragment of IL is PSPACE hard thereby settling an open question in
[8] in the negative as to whether the closed fragment allows a nice characterization.

Interpretability logics
Interpretability logics have been primarily used to study in a formalized setting the notion of relativized interpretability which is captured by a binary modal operator
D. The phrase pDq is to be read as “(T together with the translation of p) interprets (T together with the translation of q)” for some base theory T . Different theories T prove different modal principles to hold. However, all theories that allow for coding of syntax and thus for formalizing the notion of interpretability do validate some core logic which is called IL.

The logic IL
We recall that GL is the normal modal logic with one modality 2 whose non-logical axioms are instantiations of the following axiom schemes.
2(A → B) → (2A → 2B)

2(2A → A) → 2A
It is well known that GL proves the transitivity axiom, that is,
2A → 22A.
The logic IL is formulated in a propositional modal logic with two modalities 2 and
D. We shall use the following reading conventions. The strongest binding operators are ¬ and 2 followed by ∨ and ∧ which in turn bind stronger than D. The weakest binding connectives are the implications ↔ and →. We shall write ϕ as shorthand for ¬2¬ϕ.
Definition 2.1 The logic IL is a normal modal logic containing GL whose rules are Modus Ponens and Necessitation and whose axioms other than all propositional tautologies are the instances of the following axiom schemes.
J1 2(A → B) → A D B
J2 (A D B) ∧ (B D C) → A D C
J3 (A D C) ∧ (B D C) → A ∨ B D C
J4 A D B → ( A →  B)
J5  A D A
It follows from J1 and J4 that 2 is expressible in terms of D within IL: IL ▶ 2A ↔ ¬A D ⊥.
The logic ILF is obtained by adding the axiom F to IL.
F :=	 A → ¬(A D  A)
This principle can be seen as a natural generalization of G¨odel’s second incomplete- ness theorem. G¨odel’s second incompleteness theorem states that any recursive theory, whenever consistent, does not prove its own consistency. The principle F states that any recursive theory, whenever consistent, does not even interpret its own consistency.
Semantics for IL
The logic IL allows for natural Kripke semantics where the binary modality D is modeled by a ternary relation. Rather than working with a ternary relation, we tend to conceive the semantics for D as a collection of binary relations.
Definition 2.2 An IL model,  also called Veltman-model,  is a quadruple
⟨W, R, {Sx : x ∈ W}, H⟩ where W is a non-empty set of worlds, R is a binary relation on W that is transitive and conversely well-founded. For each x ∈ W , the binary relation Sx is transitive and reflexive such that moreover
ySxz → xRy ∧ xRz;
xRyRz → ySxz.
The relation H is a usual forcing relation that can be conceived as a map assigning to each propositional variable p a subset v(p) of W of the worlds where p holds. We

write x H p to indicate that x ∈ v(p). The relation H is extended to the set of all formulae by stipulating that
x H 2A	e  6y (xRy → y H A);
x H A D B	e 6y(xRy Λ y H A → Ez(ySxz Λ z H B)).
It is well-known that IL is sound and complete with respect to the class of all Veltman models (see [4]).

Fragments
We shall denote by IL0 the fragment of IL that consists of those modal formulae provable in IL that contain no propositional variables. Likewise, by GL1 we shall denote those formulas in the language of GL that contain only one variable and are theorems of GL.

Translating GL1 into IL0
Let p be the variable of GL1. We shall translate this variable to some formula in the closed fragment of IL that essentially uses the D modality. It is easy to see that such formulas exist. Examples are given in [8] (Section 5.4) and in [7]. The formula that we use here is equal to the one exposed in [7].

Some motivation for our translation
In this section we shall expose a translation that reduces theoremhood of GL1 to IL0 thereby establishing PSPACE hardness of the latter. The motivation for this translation is mainly semantical.
We will code the information as to whether p holds or not in a world x by making the formula T D T true at x if and only if x H p. To this extent we can glue to each x two new worlds x1 and x2 with xRx1Rx2 and 4 x2Sxx1 e x H p. For this, all the Sx relations in IL are sufficiently independent. This idea should motivate why we translate p to  T→T D T.
Moreover, with this approach the points that we are interested in, that is, the original points, become easily definable by the formula  T. Thus, when quanti- fying over points that we are interested in, we should relativize to our old domain. This explains why we shall translate 2A to 2(  T→ A†) where A† is the trans- lation of A.
We shall see in Subsection 3.3 that we do not actually need to glue so many different new worlds to code all the behavior of the x ▶ p for all x in the model. By transitivity it suffices to add some worlds only at the top of the model.

4 We should add some more Sx relations too on the already existing part of the model. For the motivational part here, we just focus on the newly added worlds x1 and x2.

The translation
We consider the following translation † of formulas of GL1 into formulas of IL0:
⊥† = ⊥
p† =   T→ (T D  T)
(A → B)† = A† → B†
(2A)† = 2(   T→ A†)
Lemma 3.1 Let A be a formula of GL that only contains the propositional variable
p. If GL ▶ A, then IL ▶ A†.
Proof. So, suppose IL /▶ A†. Then, there is an IL model M = ⟨W, R, {Sx : x ∈ W}, H⟩ and a world w ∈ W such that M,w /H A†. Next, we consider the GL model N = ⟨Wj, Rj, Hj⟩ defined by:
Wj := {w}∪ {x ∈ W : M,x H   T},
Rj := R ∩ (Wj × Wj),
x Hj p iff M,x H p† (for every x ∈ Wj).
We point out that the union defining Wj may be a non-disjoint one. Using the definition of N it is straightforward to prove (by induction on the length of the formula) that for every formula B which only contains the propositional variable p,
N,x Hj B iff M,x H B†	(for every x ∈ Wj).
In particular, we get that N,w /Hj A. Therefore, GL /▶ A.	2
Lemma 3.1 is the easier direction of what we shall see is an equivalence. In particular, the lemma allows for an easy proof-theoretic proof.
Proof. So, suppose GL ▶ A. We know that GL has a cut-free proof π (see system G1 in [6]) which thus satisfies the sub-formula property. Consequently, each sequent in π contains at most the variable p. It is an easy check that proofs only containing p are preserved under †.	2

Construction on models
In this subsection we shall prove the converse to Lemma 3.1.
Lemma 3.2 Let A be a formula of GL that only contains the propositional variable
p. If IL ▶ A†, then GL ▶ A.
Proof. By the completeness proofs of IL and GL we know that it is sufficient to show that
6A [6IL-modelM M |= A†	=⇒ 6GL-modelN N |= A], or equivalently
6A [EGL-modelN En∈N N,n H A =⇒ EIL-modelMEm∈M M,m H A†].

To this extent we shall exhibit a transformation on GL models that yields the desired IL model. Let N := ⟨W, R, H⟩ be a GL-model for some GL-formula A at most containing the variable p. As GL is complete with respect to finite tree- like models we may indeed assume that N has is such a finite tree-like model. By E={e1,..., eL} we denote the set of end-points in N , which is of course finite. We consider two disjoint copies of E (which are also disjoint with W ), namely Eb = {eb ,..., eb} and Eq = {eq ,..., eq}. The idea is to ‘glue’ these additional
1	L	1	L
points eb and eq as a little R chain of length two above 5 the end-points ei so that
i	i
each old point in the model will satisfy   T.
As R is conversely well-founded it is the case that each x ∈ M is R=-below some
ei (here xR=y is a shorthand for “xRy V x = y”).
Now, we consider an IL model M = ⟨Wj, Rj, {Sj : x ∈ Wj}⟩ satisfying:
Wj := W  Eb  Eq,
Rj is the transitive closure of R ∪ {(e, eb): e ∈ E}∪ {(eb, eq): e ∈ E},
Sj b = {(eq, eq)} (for every eb ∈ Eb).
Sj q = ∅ (for every eq ∈ Eq).
for every x ∈ W it holds that
j is the smallest transitive and reflexive relation on {y | xRjy} that contains
both Sx and Rj restricted to {y | xRjy} such that moreover for every e ∈ E,
(eq, eb) ∈ Sj	iff	N,x H p and xR=e.
It is very easy to check that there is a unique IL model satisfying these conditions. We notice that in the definition of Wj we have used the symbol  to emphasize that these unions are indeed disjoint ones, and we have not introduced a valuation Hj in M because our purpose is only to evaluate closed formulas (like A†).
First of all we note that in M we can modally define the old points in N since
{x ∈ Wj : M,x H  T} = W . The next step is to prove that for every formula B
which only contains the propositional variable p,
N,x Hj B iff M,x H B†  (for every x ∈ W ).
The proof of this claim proceeds by an induction on the length of B.
For T or ⊥ the claim is vacuous.
If B = p we have that p† =   T → T D  T. By construction, M,x H   T. By construction, in any R-successor of x one can go by an Sx transition to some eb where  T holds. Thus, indeed, M,x H T D  T.
On the other hand, if N,x H чp, then again M,x H  T. But in this case we can go via an R-transition to some eq. By construction there is no Sx-transition from eq to any point where  T holds, whence M,x /H T D T.
The proof of the claim is trivial for both the Boolean connectives and the modal operator 2.

5 W.r.t. the R-relation of course.

Now that the claim is established the lemma follows immediately.	2

Computational complexity of IL0
First we obtain PSPACE hardness of IL.

PSPACE hardness
If we combine Lemma 3.1 and Lemma 3.2 we see that we have a reduction of GL1
to IL0. That is, for any formula A with at most one variable p we have that
GL ▶ A  e IL ▶ A†.
As it is known that GL1 is PSPACE complete (see [3, Theorem 7] and [9]) we obtain the main result of this paper.
Theorem 4.1 The computational complexity of IL0 is PSPACE hard.
If in addition to this we would know that IL is in PSPACE we would obtain PSPACE completeness. It is commonly held that indeed the complexity of full IL is PSPACE-compleet, but up to now nobody has yet proven this. It came as a bit of a surprise to the authors to find out that actually no complexity results in the field of interpretability logics are known. Thus, this short note could well be the precursor to further investigations in various interpretability logics on very natural complexity questions in the otherwise mature field of interpretability logic.

On a normal form theorem for IL0
The PSPACE completeness of IL0 does a-priori not exclude the possibility of a normal form theorem of IL. It is even conceivable that there exists some easily recognizable class of normal forms for IL0 so that each formula in the language of IL0 is equivalent to a small sized boolean combination of these normal forms. In such a case the normal forms themselves may be easy and even easily comparable but then for an arbitrary formula it still remains hard (PSPACE) to see actually what combination of normal forms it is provably equivalent to. These observations render a normal form theorem for IL0 –if it would exist– useless for most practical purposes.

References
G. Boolos. The Logic of Provability. Cambridge University Press, 1993.
A. Chagrov and M. Zakharyaschev. Modal Logic, volume 35 of Oxford Logic Guides. Oxford University Press, 1997.
A. V. Chagrov and M. N. Rybakov. How many variables does one needs to prove PSPACE-hardness of modal logics. volume 4 of Advances in Modal Logic, pages 71–82. 2003.
D. de Jongh and G. Japaridze. The logic of provability. In S.R. Buss, editor, Handbook of Proof Theory, Studies in Logic and the Foundations of Mathematics, pages 475–546. Elsevier, Amsterdam, 1998.

P. Ha´jek and V. Sˇvejdar. A note on the normal form of closed formulas of interpretability logic. Studia Logica, 50(1):25–28, 1991.
D. Leivant. On the proof theory of the modal logic for arithmetic provability. Journal of Symbolic Logic, 46(3):531–538, 1981.
V. Cˇaˇci´c and M. Vukoviˇc. A note on normal forms for closed fragment of system il. Mathematical Communications, To appear.
A. Visser. An overview of interpretability logic. Advances in Modal Logic, pages 307–359. CSLI Publications, Stanford, CA, 1997.
V. Sˇvejdar. The decision problem of provability logic with only one atom. Archive for Math. Logic, 42(8):763–768, 2003.
