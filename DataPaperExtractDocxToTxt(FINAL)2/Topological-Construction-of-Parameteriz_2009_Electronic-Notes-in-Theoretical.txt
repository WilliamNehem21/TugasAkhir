

Electronic Notes in Theoretical Computer Science 257 (2009) 55–70
www.elsevier.com/locate/entcs

Topological Construction of Parameterized Bisimulation Limit 1
Yanfang Ma 2	Min Zhang3
Shanghai Key Laboratory of Trustworthy Computing East China Normal University
Shanghai, China

Abstract
In this paper, we mainly discuss several closure constructions of parameterized limit bisimulation and establish a family of parameterized bisimulation limit topologies. These topological structures are useful for us to understand and analyze the infinite evolution of parameterized bisimulation.
Keywords: process algebra; ε−parameterized bisimulation; ε−parameterized limit bisimulation; topology


Introduction
As one of the most important and mathematically developed models of com- munication and concurrency, CCS (Communication and Concurrency System) introduced by R. Milner [1,12,13] proposes various behavior equivalences, such as strong (weak) bisimulation equivalence, observation equivalence and so on. These equivalences are useful for relating process description to different lev- els of abstraction. In [6,7], K. G. Larsen presents parameterized bisimulation equivalence in order to obtain more flexible hierarchic development methods. In Larsen’s work, bisimulation equivalence is parameterized with information

1 The work is supported by Research and Development Project of High- Technology (Grant No:2007AA01Z189), Natural Science Foundation of China (No. 90718013), Shanghai Lead- ing Academic Discipline Project (B412),PhD Programs Scholarship Fund of ECNU
2 Email: yfma@sei.ecnu.edu.cn
3 Email: mzhang@sei.ecnu.edu.cn





1571-0661 © 2009 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2009.11.026

about context called environment. Specially, in CCS model, strong bismula- tion is generalized by parameterized bisimulation equivalence.
On the other hand, in the actual application of process algebra, specifica- tion and implementation are considered as two processes. If there exists a kind of behavioral equivalence between them, then the program is treated as cor- rectness. So, it is the key to establish a certain behavioral equivalence between specification and implementation in order to show the correctness of programs. However, the implementation at the first step can not be completely equiva- lent to the specification. Hence the implementation should be modified step by step and an evolution sequence of software is produced. Sometimes, the procedure of modification of software might be parallel. In this case, steps of modification might not form a chain but a kind of partial order which appeals to the notion of nets.
In order to understand and analyze the infinite evolution of concur- rency program, Mingsheng Ying proposes the strong (weak) bisimulation limits in [8,9,10,11], proves some topological properties and establishes the strong(weak) bisimulation limit topology. The strong (weak) bisimulation limit describes the mechanism that implementation approximates its specifi- cation step by step.
As we know, the execution of a program is dependent on the environment. So, the execution environment of the program should be considered when we verify the correctness of one program. Thus, parameterized bisimulation equivalence is an appropriate choice at this point. Just like the strong bisim- ulation, we still consider the infinite evolution of parameterized bisimulation equivalence. In order to describe this infinite evolution mechanism, in the paper [14], parameterized limit bisimulation and parameterized bisimulation limit are proposed.
In this paper, we mainly extend the strong bisimulation topology to a family of parameterized bisimulation limit topologies. Bases on parameter- ized limit bisimulation, we construct some natural and reasonable topological structure which are useful for us to understand and analyze the infinite evo- lution. These topological structures are determined by behaviors of processes and so are completely extensional and observable. We mainly discuss the subnet closure, tail closure, natural extension and iteration structure of pa- rameterized limit bisimulation.
The paper is organized as follows: in section 2, we review some basic con- cepts and results which include the syntax of CCS, parameterized bisimulation, parameterized limit bisimulation and parameterized bisimulation limit. In sec- tion 3, subnet closure, tail closure, natural extension and iteration structure of parameterized limit bisimulation are proposed. The family of parameterized

bisimulation limit topologies is established in section 4. Section 5 states some conclusions.
Preliminaries
In this section, we review some basic notions which are related to this paper. First, we recall some concepts of CCS which mainly come from [1,2]. We introduce the names A, the co-namea A¯ and labels Γ = A∪ A¯. Define that
a, b, ··· range over A and a¯, ¯b, ··· range over A¯; also that l, l', ··· range over Γ.
We also introduce the silent or perfect action τ and define Act = Γ∪{τ} to the set of actions; α, β range over Act. Further, we introduce a set ℵ of processes variables and a set K of processes constants. Let X, Y, ··· range over ℵ, and A, B, ··· over K. We define ε, the set of process expressions, is the smallest set which includes ℵ, K and the following expressions: α.E;   Ei; E1 | E2;
i∈I
E\L(L ⊆ Γ); and E[f ]( f : Act → Act is a relabeling function).
In this paper, we only focus on the process expressions without process variables, called processes, denoted by P. The semantics of processes is given by the labeled transition system (S, T, {→t : t ∈ T}) which consists of a set S of states, a set T of transition labels, and a transition relation →t ⊆ S × S for each t ∈ T. In our transition system, we shall take S to be P, and T to be
Act, →α ⊆ P × P. P →α  P ' means P can execute the action α and afterward
behaves like P '. Then strong bisimulation in CCS model is defined as follows:
Definition 2.1 (Strong bisimulation [1]) A strong bisimulation R is a binary relation on P such that whenever PRQ and α ∈ Act, then

P →α
Q →α
P ' implies ∃Q' ∈P such that Q →α
Q' implies ∃P' ∈P such that P →α
Q' and P 'RQ';
P ' and P 'RQ'.

Two processes P and Q are said to be strong bisimulation if and only if there exists a strong bisimulation R such that PRQ. We write P ∼ Q.
From the definition of strong bisimulation, we can see that two processes are considered strong bisimulation equivalent if they have the same set of potential first actions and can remain having potentiality during the course of execution.
Next, we will introduce the definition of parameterized bisimulation. The motivation for parameterizing bisimulation is to parameterize the bisimulation equivalence with a special type information about context called environment. In the papers [6,7], an environment e is considered as a “process” which con- sumes the actions produced by a process. Similar to the assumption that a process may change after having performed an action, an environment may

change after having consumed an action. Thus, the environment transition system can be defined as follows:
Definition 2.2 (Environment Transition System[6]) A labeled transition sys- tem ε = (E, A, ⇒) is called environment transition system, if E is the set of environments, A is the set of actions (identical to the set of actions Act) and
⇒ is a subset of E × A × E called the consumption relation, where e ⇒α e'
is to be read “ e may consume the action α and after doing so become the environment e' ”.
Definition 2.3 (ε−parameterized bisimulation [6]) Let ε = (E, A, ⇒) be an environment transition system. Then a ε−parameterized bisimulation, R, is an E− indexed family of binary relation, Re ⊆P ×P for e ∈ E, s.t. whenever
PR Q and e ⇒α f then

if P →α
if Q →α
P ', then there exists Q', s.t. Q →α
Q', then there exists P ', s.t. P →α
Q' and P 'Rf Q';
P ' and P 'Rf Q'.

Two processes P and Q are said to be bisimulation equivalent in the envi- ronment e ∈ E if and only if there exists a ε− parameterized bisimulation R such that P ReQ. We write P ∼e Q.
Now we come to introduce parameterized limit bisimulation which de- scribes the infinite evolution of parameterized bisimulation. A key notion in the definition is net which is a generalization of sequences. The definition of net and related results mainly come from the paper [11].
Definition 2.4 (Directed set) Let D be a nonempty set. ≤ is a binary relation on D. (D, ≤) is called a directed set if ≤ satisfies the following conditions:
if m ∈ D, then m ≤ m;
if m, n and p are members of D such that p ≤ n, n ≤ m, then p ≤ m;
if m and n are members of D, then there is p in D such that m ≤ p and
n ≤ p.
Definition 2.5 (Cofinality) Let C, D be directed sets. A pair (C, N ) is called a cofinality of D, if N : C → D is a mapping such that for any n ∈ D, there is m ∈ C with Np ≥ n for any p ≥ m.
Definition 2.6 (Cofinal subset) Let C, D be directed sets and C ⊆ D. If for any n ∈ D, there is m ∈ C such that m ≥ n, i.e.,(C, inC) is a cofinality of D, then C is called a cofinal subset of D.
Definition 2.7 (Net) Let (D, ≤) be a directed set, U /= ∅. Then a mapping
S from D into U is called a net in U over D.

Usually, a net S in U over D is expressed as {Sn : n ∈ D}, where Sn =
S(n) ∈ U for every n ∈ D.
Definition 2.8 (Subnet) Let {Sn : n ∈ D} and {Tm : m ∈ C} be nets. If there exists a mapping N : C → D such that
Tm = SNm for every m ∈ C;
(C, N ) is a cofinality of D,
then {Tm : m ∈ C} is called a subnet of {Sn : n ∈ D}.

If S is a net over D and C is a cofinal subset of D, then it is easy to see that the restriction S | C = {Sn : n ∈ C} is a subnet of S.
We write PN for the class of all nets on P. Now we can define the key definition in this section.
Definition 2.9 (Parameterized limit bisimulation [14]) Let ε = (E, A, ⇒) be an environment transition system. Then a ε−parameterized limit bisimula- tion, S, is an E−indexed family of binary relation, Se ⊆ P × PN for e ∈ E,
α
s.t., whenever (P, {Qn : n ∈ D}) ∈ Se and e ⇒ f , then

if P →α P ', then there exist {Q'
: n ∈ D} and n0
∈ D such that Qn →	'

for all n ≥ n0 and (P ', {Q'
: n ∈ D}) ∈ Sf ;

if C is a cofinal subset of D, and Qm →
'  for all m ∈ C, then there
m	α

exist P ' ∈P and a cofinal subset B of C such that P → P ' and (P ', {Q' :
k ∈ B}) ∈ Sf .
From this definition, we can see that ε−parameterized limit bisimulation is the dynamic counterpart of ε−parameterized bisimulation.
Definition 2.10 (Parameterized bisimulation limit[14]) Let ε = (E, A, ⇒) be an environment transition system. If there exist a ε−parameterized limit bisimulation S and e ∈ E such that (P, {Qn : n ∈ D}) ∈ Se ⊆ P × PN , then P is called ε−parameterized bisimulation limit of {Qn : n ∈ D} in the environment e and we write P ∼e lim Qn.
n∈D
Let
∼e lim = {(P, {Qn : n ∈ D}): P ∼e lim Qn},
n∈D
for each e ∈ E. Then ∼ lim is an E−indexed family of binary relation between processes and nets of processes, and it is the greatest ε−parameterized limit bisimulation.

Closure Structures of Parameterized Limit Bisimula- tion
In this section, we will focus on the topological properties of parameterized limit bisimulation. Subnet closure, tail closure, natural extension and iteration structure are discussed. They are useful for us to understand the infinite evolution of parameterized limit bisimulation from a mathematical point.
Since we shall be dealing with E−indexed families and operations, we adopt the following convenient notation. Let ε = (E, Act, ⇒) be an environ- ment transition system. For E−indexed families R and S, let
R ⊆ S if and only if for all e ∈ E, Re ⊆ Se.
R ∩ S is an E−indexed family with (R ∩ S)e = Re ∩ Se.
R ∪ S is an E−indexed family with (R ∪ S)e = Re ∪ Se.
In order to introduce the closure structures of parameterized limit bisimu-

lation, the following notions are essential. Let t ∈ Act∗
∞
=
n=0
Actn
be an action

sequence, i.e., t = α α ··· ,α , where α
∈ Act, n ∈ N. Then P →t
P ' means

1 2	n	i

that there exist P ,P , ··· ,P , such that P →α1  P  →α2  · · · P	→αn  P
= P '.

1	2	n	1	n−1	n

Similarly, e ⇒t  f means that there exist e ,e , ··· ,e , such that e ⇒α1 e
⇒α2

αn
··· en−1 ⇒ e = f.
1	2	n	1

According to the definition of parameterized bisimulation equivalence, it is easy to notice that Iden, an E−indexed family of the identity relation Idene ⊆ P × P for e ∈ E, is a parameterized bisimulation. Naturally, we want to generalize Iden to parameterized limit bisimulation, i.e., a dynamic counterpart of it is that the relation in the environment e linking each process with the constant net of this process is ε−parameterized limit bisimulation. But, this is not true because of the nondeterminism of process. For example, let the environment transition system ε and the process P be given by the diagrams below:

Fig. 1. The example of nondeterminism of process.

Let the net of processes {Qn : n ∈ D} be the constant net of the process P ,
α
i.e., {Qn = P : n ∈ D}. If P → P1, then we should find some net of processes
{Q' : n ∈ D} and n ∈ D such that Q	→α Q' for n ≥ n and (P , {Q' :
n	0	n	n	0	1	n
n ∈ D}) belongs to some parameterized limit bisimulation. But because of
the nondeterministic choice of process P , there are three possibilities of Q' ,

i.e., Q'
= P1 for some n, Q'
= P2 for some n, or Q'
= P3 for some n.

Thus, it is difficult to obtain some constant net of processes {Q'
: n ∈ D} and

n
α	'	'
n0 ∈ D such that Qn → Qn for n ≥ n0 and (P1, {Qn : n ∈ D}) belongs to some
parameterized limit bisimulation. In order to to extend Iden to parameterized limit bisimulation, we have to impose a certain determinacy on the involved processes. Because the execution of a process is dependent on his environment, it is necessary to introduce the determinism of process in its environment.
λ−determinate in the environment
Definition 3.1 (The base in the environment e) Let ε = (E, A, ⇒) be an environment transition system. Ω ⊆ P, Θ ⊆ Ω, e ∈ E. If for any P ∈ Ω, there exists Q ∈ Θ such that P ∼e Q, then we say that Θ is the base of Ω in the environment e.
Definition 3.2 (t-derivative in the environment e) Let ε = (E, A, ⇒) be an

environment transition system. e is the environment of P . If e ⇒t
f and there

exists P ' ∈P such that P →t
P ', then P ' is called a t−derivative of P in the

environment e. If for some t ∈ Act∗ and e ∈ E, P ' is a t−derivative of P in the environment e, then P ' is called a derivative of P in the environment e.
Definition 3.3 (λ−determinate in the environment e) Let ε = (E, A, ⇒) be an environment transition system. λ is a cardinal number and P ∈ P. If, for every derivative Q of P in the environment e ( let f be the environment of Q
and f ⇒α h), the set {Q' : Q →α Q'} has a base Θ in the environment h with
|Θ| < λ, then we say that P is λ−determinate in the environment e.
The following proposition states that the λ−determinacy is closed under derivation.

Proposition 3.4 If P is λ−determinate in the environment e, e ⇒t
f and

P →t
P ', then P ' is also λ−determinate in the environment f.

The following proposition tells us the λ−determinacy is preserved by ε−
parameterized bisimulation equivalent.
Proposition 3.5 Let ε = (E, A, ⇒) be an environment transition system. P is λ−determinate in the environment e and P ∼e Q, then Q is also λ−determinate in the environment e.

Let cf (D) = inf{ |D'| : D' is the cofinal subset of D}. |D'| means the car- dinality of D'. Roughly speaking, the following ε−parameterized limit bisimu- lation consists of the pairs of cf (D)− determinate processes and their constant nets. This example extends the parameterized bisimulation Iden.
Proposition 3.6 Let ε = (E, A, ⇒) be an environment transition system. Ilim is an E−indexed family between processes and the nets of processes, for e ∈ E, let
Ilime = {(P, {Qn : n ∈ D}): P ∈P is cf (D) − determinate in the environment e, {Qn : n ∈ D}∈ PN , there exists n0 ∈ D such that Qn ∼e P for any n ≥ n0}
Then Ilim is ε−parameterized limit bisimulation.
In the following three subsections, some attendant results are given. These results are convenient tools for establishing some useful parameterized limit bisimulation.
Subnet Closure
Let ε = (E, A, ⇒) be an environment transition system. S is an E−indexed family of binary relations between processes and nets of processes, for e ∈ E, Se ⊆P × PN . Then sub(S) is also an E−indexed family of binary relations, for any e ∈ E,
sub(S)e = {(P, {Qn : n ∈ D}) : there is (P, {Rm : m ∈ C}) ∈ Se
such that {Qn : n ∈ D}is a subnet of {Rm : m ∈ C}}
The following proposition states the necessary and sufficient condition of
sub(S) being ε−parameterized limit bisimulation.
Proposition 3.7 Let ε = (E, A, ⇒) be an environment transition system.
S is an E−indexed family of binary relations on P × PN . Then sub(S) is
ε−parameterized limit bisimulation if and only if for any e ∈ E, e ⇒α f, for any (P, {Qn : n ∈ D}) ∈ Se,

if P →α
α
P ', then there exist {Q'
: n ∈ D} ∈ PN
and n0
∈ D such that

Qn → Q'
for any n ≥ n0 and (P ', {Q'
: n ∈ D}) ∈ sub(S)f .

if C is a coﬁnal subset of D, Qm →
'  for all m ∈ C, then there exist
m	α

P ' ∈ P and B which is a coﬁnal subset of C such that P → P ' and
(P ', {Q' : k ∈ B}) ∈ sub(S)f .
Proof. “ ⇒ ” If sub(S) is ε− parameterized bisimulation, then for any e ∈ E,
e ⇒α f, and (P, {Q : n ∈ D}) ∈ S , the fact S ⊆ sub(S) for any e ∈ E lead
n	e	e	e

to the conditions of Definition 2.9 hold.

“ ⇐ ” Suppose that e ⇒α
f, e ∈ E, (P, {Rm
: m ∈ C}) ∈ sub(S)e. Then

there exists (P, {Qn : n ∈ D}) ∈ Se and {Rm : m ∈ C} is the subnet of
{Qn : n ∈ D}. So there is a map N : C → D, (C, N ) is cofinal of D and Rm = QNm for all m ∈ C. Without loss of generality, we can assume that N is increasing.

If P →α
P ', then since (P, {Q : n ∈ D}) ∈ S , there exist {Q'
: n ∈ D} and

α	n	e	n
n0 ∈ D such that Qn → Q' for any n ≥ n0 and (P ', {Q' : n ∈ D}) ∈ sub(S)f .
Since (C, N ) is cofinal of D, so there is p0 ∈ C such that Np0 ≥ n0 for all p ≥ p0.

Let R'	'	for each p ∈ C, then Rp = QN →	'	' for all p ≥ p0
p
and

{R' : p ∈ C} is a subnet of {Qn : n ∈ D}. So, (P ', {R'
: p ∈ C}) ∈ sub(S)f .

If F is a cofinal subset of C and Rq →	' for all q ∈ F , then N (F )
is also a cofinal subset of D. For any q ∈ F , let Q'	= R' . Then QN  =

R  →α	'
'	for all q ∈ F . Thus there is P ' ∈ P and G which is a

cofinal subset of N (F ) such that P →α
P ' and (P ', {Q'
: r ∈ G}) ∈ sub(S)f .

Since N is increasing, so N−1(G) is also a cofinal subset of F , furthermore,

{Q'
: r ∈ G} = {R'
: q ∈ N−1(G)} and (P ', {R'
: q ∈ N−1(G)}) ∈ sub(S)f . 

Lemma 3.8 If S is a ε−parameterized limit bisimulation, then sub(S) is also a ε−parameterized limit bisimulation.
Proof. It is immediate from Proposition 3.7.

Tail Closure
Definition 3.9 (Tail [11]) Let D be a directed set and n ∈ D. Then we denote that D[n)= {m ∈ D : m ≥ n} and D[n) is a cofinal subset of D.
Definition 3.10 Suppose that ε = (E, Act, ⇒) is an environment transition system. S is an E− indexed family between processes and nets of processes, i.e., for any e ∈ E, Se ⊆ P ×PN . We define that tail(S) is also an E− indexed family between processes and nets of processes, i.e. for any e ∈ E,
tail(S)e = {(P, {Qn : n ∈ D}): (P, {Qn : n ∈ D[n0)}) ∈ Se for some n0 ∈ D}
Proposition 3.11 tail(S) is a parameterized limit bisimulation if and only if
α
for any e ∈ E, (P, {Qn : n ∈ D}) ∈ S , e ⇒ f,

if P →α
α
P ', then there exist that {Q'
: n ∈ D} and n0
∈ D such that

Qn → Q'
for any n ≥ n0 and (P ', {Q'
: n ∈ D}) ∈ tail(S)f .

if C is any coﬁnal subset of D and Qm →
'  for any m ∈ C, then there
m	α

exist P ' ∈P and B which is a coﬁnal subset of C such that P → P ' and

(P, {Q' : k ∈ B}) ∈ tail(S)f .
Lemma 3.12 If S is a ε−parameterized limit bisimulation, then tail(S) is also a ε−parameterized limit bisimulation.
Proof. It can be proved according to the Proposition 3.11.	 

Natural Extension
Definition 3.13 (Natural extension [11]) Let {Pm : m ∈ C} and {Qn : n ∈ D} be nets of processes. If (C, N ) is a cofinal of D and for any n ∈ D, Qn = Pmn for some mn ∈ C with Nmn ≥ n, then {Qn : n ∈ D} is called a natural extension of {Pm : m ∈ C}.
Definition 3.14 Let ε = (E, Act, ⇒) be an environment transition system. S is an E−indexed family between processes and nets of processes, i.e., for any e ∈ E, Se ⊆P × PN . Then we define ext(S) is also an E−indexed family between processes and nets of processes, i.e., for any e ∈ E,
ext(S)e = {(P, {Qn : n ∈ D}) : there exists {Pm : m ∈ C}∈ PN such that (P, {Pm : m ∈ C}) ∈ Se and {Qn : n ∈ D} is a natural extenstion of {Pm : m ∈ C}}
Proposition 3.15 If S is a ε−parameterized limit bisimulation, then ext(S)
is also a ε−parameterized limit bisimulation.
Iteration
In this subsection, we will present a special structure of parameterized limit bisimulation. This construction indicates that the composition of two param- eterized limit bisimulation is also a parameterized limit bisimulation. This proposition is important in the compositive execution of some programs. First, we should introduce some useful notions. For simplicity, the definition of prod- uct directed set mainly come from [11].
Let (Di, ≤i) be a directed set for each i ∈ I. Then the product of {(Di, ≤i
): i ∈ I} is defined as
×i∈I(Di, ≤i)= (×i∈IDi, ≤),
where ≤ is as follows: for any d, e ∈ ×i∈IDi, d ≤ e if and only if d(i) ≤ e(i) for every i ∈ I. It is easy to show ×i∈I(Di, ≤i) is also a directed set. Let D be a directed set, let Em be a directed set for every m ∈ D and let F = D × ×m∈DEm. If for any m ∈ D, {R(m, n): n ∈ Em} is a net over Em, then

the iteration 

m∈D
{R(m, n): n ∈ Em} of {R(m, n): n ∈ Em}(m ∈ D) is the

net {R(m, f (m)): (m, f ) ∈ F} over F .
Now let S be an E−indexed family between processes and nets of processes and Tm be an E− indexed family between processes and nets of processes for every m ∈ D. Then the composition S ◦ {Tm : m ∈ D} of S and {Tm : m ∈ D} is also defined as an E−indexed family between processes and nets of processes, i.e., for each e ∈ E,

(S ◦ {Tm : m ∈ D})e = {(P, 

m∈D
{R(m, n): n ∈ Em}) : there exist Qm ∈P 

(m ∈ D) such that (P, {Qm : m ∈ D}) ∈ Se and for each m ∈ D, (Qm, {R(m, n): n ∈ Em}) ∈ (Tm)e}
The following proposition tells us iteration of parameterized limit bisimu-
lations is also parameterized limit bisimulation.
Proposition 3.16 Let ε = (E, Act, ⇒) be an environment transition system. If S and Tm(m ∈ D) are ε−parameterized limit bisimulation, then S ◦ {Tm : m ∈ D} is also a ε−parameterized limit bisimulation.
Proposition 3.17 Let ε = (E, Act, ⇒) be an environment transition system.
If Si is a ε− parameterized limit bisimulation for each i ∈ I, then  Si is also
i∈I
a ε−parameterized limit bisimulation.

Fixed point
Now, let S be an E−indexed family between processes and nets of processes, η(S) be the E−indexed family between processes and nets of processes such that η(S)e is a subset of P× PN , i.e.

η(S) = {(P, {Q : n ∈ D}) : for all α ∈ Act, e ⇒α
in Definition 2.9 hold}
f condition (i) and (ii)

Then ε−parameterized limit bisimulations are pre-fixed points of the in- creasing functional η.
Proposition 3.18 An E−indexed family S is a ε−parameterized limit bisim- ulation if and only if S ⊆ η(S), i.e. for all e ∈ E, Se ⊆ η(S)e.
Proposition 3.19 η is a monotonic map, i.e., S1 and S2 are E−indexed families between processes and nets of processes, and S1 ⊆ S2 implies η(S1) ⊆ η(S2).
Proposition 3.20 ∼ lim is the greatest ﬁxed point of η, that is η(∼ lim) =∼ lim, and η(S)= S imples S ⊆∼ lim.

The following proposition (i) states if the nets of processes {Pn : n ∈ D} and {Qn : n ∈ D} are eventually parameterized bisimulation in the environ- ment e, i.e., there exists n0 ∈ D such that Pn ∼e Qn for all n ≥ n0, then they have the same parameterized bisimulation limit in the environment e. The proposition (ii) indicates the parameterized bisimulation limit of any net of processes is unique up to parameterized bisimulation.
Proposition 3.21 Let ε = (E, A, ⇒) be an environment system, e ∈ E.
If for some n0 ∈ D, Pn ∼e Qn for each n ≥ n0, and P ∼e lim Pn, then
n∈D
P ∼e lim Qn.
n∈D
If P ∼e lim Pn, Q ∼e lim Pn, then P ∼e Q.
n∈D	n∈D
Proposition 3.22 Let ε = {E, Act, ⇒} be an environment system. If Pn
is λ−determinate for each n ≥ n0 ∈ D and P ∼e lim Pn, then P is also
n∈D
λ−determinate.
Proof. It can be proved according to the definition of λ−determinate in the environment e and Proposition 3.21.

Parameterized Bisimulation Limit Topology
As is well known, a topology can be constructed from an existing convergence structure. In this section, we mainly construct a family of parameterized bisimulation limit topologies based on parameterized bisimulation limit. One of the main results in this section is Proposition 4.2, which states that the parameterized bisimulation limit does give rise to a convergence class, fur- thermore, it yields a topology on processes.
Let ε = {E, A, ⇒} be an environment transition system, S be an E−indexed family of binary relation between processes and nets of processes, i.e., for any e ∈ E, Se ⊆P × PN . Let p(S) stands for the property of S that
for each e ∈ E, (P, {Pm : m ∈ C}) ∈/ Se implies that there exists a subnet
{Qn : n ∈ D} of {Pm : m ∈ C} with (P, {Rp : p ∈ E}) ∈/ Se for any subnet (Rp : p ∈ E) of {Qn : n ∈ D}.
Following lemma shows that the η image of the natural extension of any relation between processes and nets of processes satisfies property p.
Lemma 4.1 Let ε = {E, A, ⇒} be an environment transition system and S be an indexed set between processes and nets of processes, i.e., for any e ∈ E, Se ⊆P × PN , then p(η(ext(S))) holds.

Proof. The proof is similar to Lemma 3.1.12 in [11]. But for the integrity of the paper, we show the proof as follows:

If (P, {Pm
: m ∈ C}) ∈/ η(ext(S)) , then for some α ∈ Act, e ⇒α
f , we have

one of the following two cases: we want to find some subnet {Qn : n ∈ D} of
{Pm : m ∈ C} with (P, {Rp : p ∈ E}) ∈/ η(ext(S))e for any subnet {Rp : p ∈
E} of {Qn : n ∈ D} in both of these cases.
case 1. There is P ' ∈P such that P →α P ' and for any {P' : m ∈ C}∈P 
m	α	N

and for any k ∈ C,{P', {P'
: m ∈ C}} ∈ ext(S)f implies that Pn ~ P ' for

some n ≥ k.
Let
Ω= {{Um : m ∈ C}∈ PN : (P ', {Um : m ∈ C}) ∈ ext(S)f }.

For any M = ({Um : m ∈ C}, k),M' = ({U ' : m ∈ C}, k') ∈ Ω × C, we define
M ≤ N if and only if k ≤ k'. Then (Ω × C, ≤) is a directed set. Now, for any M = ({Um : m ∈ C}, k) ∈ Ω × C, we know that there is nM ≥ k with
'
PnM  ~	because we are working in Case 1. We set QM = PnM for each
M ∈ Ω × C. Then {QM : M ∈ Ω × C} is a subnet of {Pm : m ∈ C}, and
it suffices to show that for any subnet {Rp : p ∈ E} of {QM : M ∈ Ω × C},
(P, {Rp : p ∈ E}) ∈/ η(ext(S))e. In fact, if (P, {Rp : p ∈ E}) ∈ η(ext(S))e,

then P →α
P ' leads to {R'
: p ∈ E}∈ PN
and p0
∈ E such that Rp →
Rp for

any p ≥ p0 and (P ', {R'
: p ∈ E}) ∈ ext(S)f . Suppose that N : E → Ω × C

is increasing, Rp = QNp for every p ∈ E, and (E, N ) is a cofinality of Ω × C.
Then (E, projC ◦ N ) is a cofinality of C, where projC is the projection from Ω × C onto C,i.e., projC(T, m)= m for any T ∈ Ω and m ∈ C. Furthermore,

we find a natural extension {V '
: m ∈ C} of {R'
: p ∈ E} with V '
= R'
for

every p ∈ E by using the Axiom of Choice. Thus, we set T0 = {V '
: m ∈ C}

and obtain (P ', T0) ∈ ext(ext(S)f ) = ext(S)f . Let m0 = projC(Np ). Then (T0, m0) ∈ Ω×C, and there is p ∈ E with Np ≥ (T0, m0). Since N is increasing,

we have p ≥ p0. On the other hand, from (P ', {V '
: m ∈ C}) ∈ ext(S)f , we

know that Rp = QNp = PnNp ~ R . This contradicts that Rp →
p ≥ p0.
Case 2, There is a cofinal subnet D of C such that Pn →
' for all
' for all
n	α

n ∈ D, and for any P ' ∈ P and for any cofinal subset B of D, P
or (P ', {P' : k ∈ B}) ∈/ ext(S)f .
~ P '

In this case, {Pn : n ∈ D} is subnet of {Pm : m ∈ C}. So we need to show only that for any subnet {Rp : p ∈ E} of {Pn : n ∈ D}, (P, {Rp : p ∈ E}) ∈/ η(ext(S))e. Suppose that N : E → D is increasing, Rp = PNp for every p ∈ E, and (E, N ) is a cofinality of D. If (P, {Rp : p ∈ E}) ∈ η(ext(S)e, then from
'	'
Rp = PNp →	for all p ∈ E, we know that there are P ∈P and a cofinal

subset of F of E with P →α
P ' and (P ', {P'
: q ∈ F}) ∈ ext(S)f
. On the

other hand, N (F ) is a cofinal subset of D because N (E) is increasing. This
leads to (P ', {P'	: q ∈ F}) ∈ ext(S)f , contradictorily.	 

Proposition 4.2 Let ε = (E, A, ⇒) be an environment transition system and
e ∈ E.
If P is cf (D)−determinate in the environment e and there exists n0 ∈ D
such that Qn ∼e P for each n ≥ n0, then P ∼e lim Qn.
n∈D
If {Qn : n ∈ D} is a subnet of {Pm : m ∈ C} and P ∼e lim Pm, then
m∈C
P ∼e lim Qn.
n∈D
If P ∼e lim Pm does not hold, then there exists a subnet {Qn : n ∈ D}
m∈C
of {Pm : m ∈ C} such that for any subnet {Rp : p ∈ E} of {Qn : n ∈ D}, P ∼e lim Rp does not hold.
p∈E
Let D be a directed set, let Em be a directed set for each m ∈ D, let
F = D × ×m∈DEm, and let R(m, f ) = (m, f (m)) for each (m, f ) ∈ F.

If for any m ∈ D, Qm ∼e  lim
n∈Em
P (m, n), and Q ∼e lim Qm, then Q ∼e
m∈D

lim
(m,f )∈F
(P ◦ R)(m, f ).


Proof. (i),(ii) and (iv) are immediate from Proposition 3.6, Lemma 3.8 and Proposition 3.16.
According to the the definition of ext(◦), it holds that ∼ lim ⊆ ext(∼ lim). Since ∼ lim is the greatest ε−parameterized limit bisimulation, Proposi- tion 3.15 asserts that ext(∼ lim) is also a ε−parameterized limit bisimulation, and we can get that ext(∼ lim) ⊆∼ lim and therefore ext(∼ lim) =∼ lim. Thus, Proposition 3.20 leads to ∼ lim = η(∼ lim) = η(ext(∼ lim)). So, (P, {Pm : m ∈ C}) ∈/∼e lim, i.e.,(P, {Pm : m ∈ C}) ∈/ η(ext(∼ lim)). Accord- ing to Lemma 4.1, we can obtain that there exists a subnet {Qn : n ∈ D} of {Pm : m ∈ C} such that for any subnet {Rp : p ∈ E} of {Qn : n ∈ D}, (P, {Rp : p ∈ E}) ∈/ η(ext(∼ lim)) =∼ lim, i.e., P ∼e lim Rp does not hold,
p∈E
and the proof is completed according.


Next, we will try to establish a family of parameterized bisimulation limit topologies. This is carried out in a standard way in point-set topology. For each e ∈ E, we writes (PD)e for the class of determinate processes in the environment e. For any U ⊆ (PD)e, we define

cle(U )= {P ∈P : there exists a net {Qn : n ∈ D} such that P ∼e lim Qn
n∈D
and for all n ∈ D, Qn ∈ U}
Then Proposition 3.22 guarantees that cle(U ) ⊆ (PD)e. According to Theorem 2.9 in [15] and Proposition 4.2, we know that cle is a closure operator on (PD)e for each e ∈ E, i.e., cle is a mapping from 2(PD )e into itself and fulfills Kuratowski’s axioms of closure:
cle(∅)= ∅
U ⊆ cle(U )
cle(cle(U )) = cle(U );and
cle(U ∪ V )= cle(U ) ∪ cle(V ).
The closure operator cle determined by parameterized bisimulation limits induces a topology for each e ∈ E,
(JPB)e = {U ∈ (PD)e : cle((PD)e − U )= (PD)e − U}
on (PD)e, called the parameterized bisimulation topology in the environment
e. Thus, for each e ∈ E, we have a topology (JPB)e. So, we can define JPB is an E−indexed family of parameterized bisimulation limit topology, i.e., for each e ∈ E, (JPB)e is a topology. Suppose (X, τ ) is a topological space, U ⊆ X and x ∈ X. If there is an open set V ∈ τ such that x ∈ V ⊆ U , then U is called a neighborhood of x. Let S = {Sn : n ∈ D} eventually in each neighborhood of x;i.e. for each neighborhood U of x, there is n0 ∈ D such that Sn ∈ U for all n ≥ n0. In this case, we write x = (τ ) lim Sn. From Theorem
n∈D
2.9 [15] and Proposition 4.2, we also know that convergence determined by this topology coincides with parameterized bisimulation limit; more explicitly, for any process P ∈ (PD)e and for any net {Pn : n ∈ D} of processes in (PD)e, P ∼e lim Pn if and only if P = (JPB)e lim Pn.
n∈D	n∈D
According to Larsen’s work, if e is an environment such that for all α ∈ Act,
e ⇒α  e, then ∼ =∼ . Thus, we can see that the family of parameterized
e
bisimulation limit topologies generalize strong bisimulation topology.
Conclusion
In this paper, we mainly discuss the topological proposition of parameterized limit bisimulation in order to characterize the infinite evolution of parameter- ized bisimulation and establish a family of parameterized bisimulation limit topology based on parameterized bisimulation limit. In the future, we will try to establish the continuous property about some composition operators which

are useful in modular design and hierarchic developments.
Acknowledgement
The authors very much appreciate the referees’ suggestion. We will try to find some applications and some examples which can illuminate the significance of parameterized bisimulation limit. Especially, we are grateful to Professor Yixiang Chen who gives us some invaluable suggestions.

References
Milner. R., “Communication and Concurrency”, Prentice Hall, New York, 1989.
Minler. R.,“Communicating and Mobile Systems: the π−calculus”, Cambridge University Press, 1999.
Hoare. C. A. R., Communicating sequential processes, Communications of the ACM, 21(1978), 666-677.
Hoare. C. A. R., “Communicating Sequential Processes”, Prentice Hall, New York, 1985.
Ying. M. S. “Topology in Process Calculus: Approximate Correctness and Infinite Evolution of Concurrency Programs”, Springer-Verlag, Berlin, 2001.
Larsen. K.G., “Context-Dependent Bisimulation Between Process”, Ph.D. thesis, Aalborg University Centre Strandvejen, 1986.
Larsen. K. G., A Context Dependent Equivalence Between Processes, Theoretical Computer Science, 49(1987), 185-215.
Ying. M. S. “Topoplogy in Process Calculus”, In S.Jahnichen, M. Lemoine, T. Maibaum and M. Wirsing, eds.,Rigorous Analysis and Design for software Intensive Systems, Dagstuhl-Seminar- Report, 258(1999),29.
Ying. M. S. Limits of Agent in Process Calculus,Fuzzy Logic and Soft Computing, Klumer Academic, Boston,(1999), 221-240.
Ying. M. S., Topology in Process Calculus(I): Limit Behavior of Agents, J. Computer Sci. Technol, 14(1999), 326-336.
Ying. M. S. “Topology in Process Calculus: Approximate Correctness and Infinite Evolution of Concurrency Programs”, Springer-Verlag, Berlin, 2001.
Hennessy. M, R. Milner.,“Algebraic Laws for Nondeterminism and Concurrency”, Tech. Rept. CSR-133-83, University of Edinburgh, Department of Computer Science, 1983.
Milner. R., “A Complete Inference System for a Class of Regular Behaviours”, CSR-11-82, University of Edinburgh, Department of Computer Science, 1982.
Ma. Y. F., M. Zhang, Y. X. Chen., “Parameterized Bisimulation Infinite Evolution Mechinism”, In procceding of the 3th International Symposium on Theoretical Aspects of Software Engineering,IEEE Computer Society(2009), 299-230.
Kelley. J. L., “General Topology”, New York Berlin Heidelberg Tokyo, Springer-Verlag, 1975.
