Available online at www.sciencedirect.com



Electronic Notes in Theoretical Computer Science 277 (2011) 15–27
www.elsevier.com/locate/entcs

A Uniform Multiscale Meta-model of BioShape

F. Buti, D. Cacciagrano, F. Corradini, E. Merelli, L. Tesei1
School of Science and Technology, Computer Science Division University of Camerino
Via Madonna delle Carceri 9, 62032 Camerino, Italy

Abstract
Existing approaches in multiscale (MS) science and engineering have evolved from a range of ideas and solu- tions that are reflective of their original problem domains. As a result, research in MS science has followed widely diverse and disjoint paths, which present a barrier to cross pollination of ideas and application of methods outside their application domains.
The status of the research environment calls for a methodological framework able to (i) provide a common language to modelling and simulating MS problems across a range of scientific and engineering disciplines and, consequently, (ii) characterize critical common issues arising in MS problems in an uniform setting. In this paper, we contribute in this sense. Taking inspiration from the Complex Automata (CxA) MS
approach, we formally define and enrich the meta-model of BioShape - put forward as a scale-independent MS simulation environment - and we exploit it to give a uniform treatment of generally defined coupling schemes, in particular the micro-macro one applied to the bone remodelling process. Similarly to CxA, also the BioShape meta-model enjoys two important features: namely, (i) a MS system can be decomposed in uniform single-scale models, each one described by a generic sequence of calls to well-defined operators, and (ii) the link between any two single-scale models can be expressed as a flow of data between a pair of these operators by well-defined coupling schemes. As a consequence, such features not only enforce and formally prove the scale-independence property of the BioShape simulator, but also makes the BioShape meta-model a common and uniform MS modelling paradigm across a range of heterogeneous application domains.
Keywords: Multiscale modelling, Multiscale simulation, Bone remodelling


Introduction
Although computational methodologies have improved vastly over the last ten years, it has become blatantly obvious that the most commonly employed techniques are not ideal for solving the challenging problems that exist at the interface of biology, chemistry, physics, and medicine.
Many of the most important events surrounding biomedical processes take place on different time and length scales, i.e., exhibit a multiscale (MS) behaviour that requires resolution of several scales and their concomitant coupled interactions.

1 Email:	{federico.buti,diletta.cacciagrano,flavio.corradini,emanuela.merelli, luca.tesei}@unicam.it


1571-0661 © 2011 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2011.09.032

State of the art in MS modelling
Conventional modelling techniques replace small scales by constitutive models and empirical closures that are incapable of capturing the complexity of coupled scale interactions. For these reasons, MS approaches to modelling complex systems are becoming increasingly important.
In the past, multiple (time and length) scales have been treated independently, except in the case of the coupling of quantum and classical (i.e., molecular mechan- ical) mechanics in a hybrid quantum mechanical/molecular mechanical (QM/MM) treatment, a scheme which was first devised by [17] with subsequent work by [16].
Efforts to date on the development of MS modelling technologies have been fo- cused primarily on specific combinations of methods to demonstrate the capability of a specific scale-coupling technology. Among the most mature of these developments are the implementations of the quasicontinuum method [15].
Other scale-coupling procedures consider the construction of operators to link continuum PDE fields to discrete atomic fields. In several cases the scale-coupling operators consider the discretised PDE form (e.g., element mesh) when constructing these operators [4]. Others define the operators at the equation level.
The heterogeneous MS methods [9] define compression operators to relate dis- crete to continuum and reconstruction operators to relate continuum to discrete scales, while the equation-free MS method [14] links statistically averaged fine-scale realizations to the coarse scale.

Towards a common and uniform MS modelling approach
Most current MS modelling approaches either (i) are restricted to the coupling of two sub-systems, with a micro-macro scale relation, while there is a growing interest for complex problems requiring the coupling of many sub-models coming from different
fields 2 , or (ii) often involve ad hoc modelling assumptions, incomplete mathematical
formulations and numerical implementations, that are inconsistent with both the mathematical and physical properties of the system.
Furthermore, MS research efforts remain in general largely disjoint across disci- plines and typically exploit (separately) two methods which consist of:
including problems that allow the application of the same continuum model at all scales, with the primary barrier to a possible simulation being computing resources;
encompassing applications where detailed physics at the atomistic-molecular level must be simulated to resolve the small scales, with the effect on and coupling to the continuum level being frequently unclear.
For example, in heterogeneous MS and some quasicontinuum methods small scales are subordinate to a conventional coarse-grain model and serve to replace em- pirical closures by more accurate estimation procedures. Likewise, ab initio molecu-

2 Biomedical systems, for instance, involve biological, chemical and physical processes evolving at different scales.

lar, atomistic and particle modelling approaches [10] focus on small scale interactions and less on their interface with coarse-grain models.
Multiformity among MS model components (i.e., single-scale models) and, conse- quently, coupling procedures based on approximation techniques have strong effects both in modelling and simulation phase. In fact:
(Modelling phase) A MS model is not necessarily more expressive 3 than a single- scale one only because it is MS. It is well-known that a MS model can be more or less expressive according to what models are taken into account (for each scale) and how they are homogenized (e.g., coupled). Homogenization is in fact a very delicate and complex task - when single-scale models are heterogeneous, as well as when systems to model admit different homogenization techniques - which can lead to loss of information between scales.
(Simulation phase) The development of tools to support MS simulations must explicitly take into account the variability of the models at different scales and the methods of communicating information between them accounting for scale coupling.

Contribution of the paper: a meta-model as a common and uniform MS mod- elling framework
Indeed, mathematical and physical issues arising in MS problems - like scale repre- sentation, scale separation and inter-scale communication - are common and occur across a wide range of scientific disciplines. Consequently, the need of describing MS problems across multiple scientific disciplines and realizing MS simulations requires a common modelling approach being able to (i) unify these common principles, (ii) support the effective combination of various single-scale models through well-defined scale coupling procedures, and consequently (iii) help to model and to simulate MS systems in a rigorous and systematic way.
Despite this widely acknowledged need, there is a scarcity of methodological papers toward this direction. The most notable exception is [13], where the Complex Automata (CxA) paradigm is introduced to solve, in a uniform, flexible and intuitive way, problems in which several different physical processes at different spatial and temporal scales interact.
Independently, BioShape 4 [6,5] has been proposed as a scale-independent MS
simulation environment based on a uniform MS model - as in the CxA case - even if no formal proof is given by the authors in [6,5] (see Section 2). Scale-independence can be viewed as a consequence of the BioShape ability to treat biological entities
of any size in a uniform way, e.g., as geometric shapes equipped with perception,
interaction and movement capabilities.
In this paper, we formally define and enrich the meta-model of BioShape (see Section 4) and we exploit it to give a uniform treatment of generally defined coupling

3 In the sense of accurate, precise, faithful to the real system which one aims at describing.
4 BioShape Project: http://cosy.cs.unicam.it/bioshape/.

schemes, in particular the micro-macro one applied to the bone remodelling [11,5], a biological process which can be considered multiscale, since macroscopic behaviour and microstructure strongly influence each other (see Subection 5.2). We explicitly take inspiration from the CxA paradigm (see Section 3), a similarity which has been already foreseen in [7] where bone remodelling has been modeled by a 2-scale CxA (see Subsection 5.1) and simulated running such a model in BioShape.
Similarly to CxA, also the BioShape meta-model enjoys two important features: namely, (i) a MS system can be decomposed in uniform single-scale models, each one described by a generic sequence of calls to well-defined operators, and (ii) the link between any two single-scale models can be expressed as a flow of data between a pair of these operators by well-defined coupling schemes.
As a consequence, such features not only enforce and formally prove the scale- independence property of BioShape simulator, but also makes the BioShape meta-
model a common and uniform MS modelling paradigm across a range of heteroge- neous application domains.

A brief overview of BioShape
BioShape is a spatial 3D simulator which has been engineered in the perspective to be a uniform, particle-based, space- and geometry-oriented multiscale modelling and simulation environment. BioShape is scale-independent since it treats biological entities of any size simply as geometric 3D shapes. A shape can be either a basic one (a polyhedron, a sphere, a cone or a cylinder) or a correctly composed one (an aggregation of shapes glued on common surfaces of contact). Every element involved in the simulated process is a 3D process, i.e., an independent entity that owns a particular 3D shape and a particular behaviour.
Every entity has associated its physical motion law. The behaviour of every entity, i.e., the way it interacts with other entities and with the environment, is defined partially through a process algebra approach, namely, the Shape Calculus [3,2,1], and partially through Java programming. The Shape Calculus is a formal language defining the structure of 3D processes with channels through which they can bind with other compatible entities. The binding can happen only if the two involved processes collide on a certain common surface in which both have active compatible channels (this is called a collision-dependent behaviour). The result is the creation of a new 3D process whose shape is the composition of the shapes of the original processes and the behaviour is a combination of the original ones. A two- phase collision detection algorithm is defined in order to establish whether shapes collide and when the first of such events (called first time of contact) happens within a timestep duration.
The Shape Calculus allows to express also the split of 3D processes, an event that can represent the division of a previously established bond or a “reaction” producing new entities with completely different behaviour. The split process determines also the split of the composed shape of the original process into smaller component shapes. The occurrence of a split is an internal decision of the process, and thus it is




Fig. 1. a. Scale Separation Map representing temporal and spatial relations between two processes, A and B; b. Main loop of an arbitrary process.

considered a non-collision-driven behaviour. It can be determined if any process is going to split and when, making it possible to calculate the first time of split within a timestep duration.
Finally, BioShape permits the definition of services, software entities that can be
communication services - within 3D processes or with system services -, information repositories - such as force fields in space, chemical gradients or perception services - or can represent diffused species, i.e. entities that the modeller chooses to represent not physically, with shapes, but simply as concentrations. This is because, for instance, they are well-diffused in the space or because their magnitude is too small
w.r.t. the scale chosen for the model. All these services are programmed software entities. Any interaction of 3D processes with them is considered a non-collision- driven behaviour.
The BioShape software architecture has been engineered from the perspective
of supporting cluster and distributed computational approaches, to satisfy the great computational power demanded for simulation.

CxA: from a uniform MS modelling approach to a uni- form MS simulation environment
In the following, we recall the basic notions of the paradigm and we also describe the associated simulation environment, referring to [12] for further details.
The main ideas of the CxA paradigm is that (i) Cellular Automata (CA) or Lattice Boltzmann (LB) models can be described by a generic sequence of calls to well-defined operators (the so-called main loop, see Fig. 1 (b)) and that (ii) the link
between any two sub-models can be expressed as a flow of data between a pair of these operators by well-defined coupling schemes (see Fig. 2).
Being the main loop of any CA-LB uniformly defined, such coupling schemes only depend on the CA-LB spatio-temporal “positions” in a Scale Separation Map (SSM), where each CA-LB is represented as an area according to its spatial and




Fig. 2. SSM and Coupling schemes.

temporal scales (see Fig. 1 (a)). Formally:
Definition 3.1 [Complex Automata (CxA)] A CxA A is a graph (V, E), where
V (vertex set)= {Ck =def ⟨Dk(Δxk, Δtk, Lk, Tk), Fk, Φk,fk , uk, Ok⟩| Ck is a CA},
E(edge set)= {Ehk|Ehk is a coupling scheme between Ch and Ck, as in Fig. 2}.
Dk is the domain, made of spatial cells of size Δxk and spanning a region of size
Lk, while the quantity Δtk is the time step and Tk/Δtk is the number of iterations
during which Ck will be run. Fk denote the set of states, fk	∈ Fk is the initial
state and any state evolves according to the update rule Φk, constrained to be in the
form of Φk = P ◦ C ◦ B. Boundary condition B and Collision C depend, possibly, on the field uk collecting the external data exchanged at each iteration between Ck and its environment, while Propagation P depends on the topology of the domain. The functional Ok, the observable, specifies the quantity we are interested in.
CxALite 5 and MUSCLE 6 are two significant tools implementing the CxA paradigm. CxALite takes care of the necessary operation to generate a CxA whereas the programmer must only define the necessary (single-scale) simulation kernels (simple Java classes) to be coupled. CxALite code-base is very small and extremely portable. On the other hand, it does not provide facilities for computa- tional distribution, kernel interfaces do not provide support for unit of measurement and no graphical user interface is available to monitor the evolution of the simulation.
MUSCLE is based on JADE 7 framework (Java Agent DEvelopment Frame- work ), a middleware for the deployment of multi-agent systems. Thanks to JADE, MUSCLE can smoothly run on several machines on which kernels are executed as displaced agents. On the other hand, the tool inherits JADE complexity and depen- dencies hence, it is more difficult to set up and also lesser portable than CxALite.

5 CxALite: http://github.com/paradigmatic/CxALite/.
6 MUSCLE: http://developer.berlios.de/projects/muscle.
7 JADE: http://jade.tilab.com/.

BioShape:	from a uniform MS simulation environ- ment to a uniform MS meta-model
Inspired by the CxA approach, we enrich the meta-model of BioShape in order to capture within a general scheme a lot of coupling mechanisms. Firstly, we formally describe the components needed to run a model and the main loop of the simulation. Then, we show how two models, specified at different scales, can be connected and made run together implementing a given coupling scheme. Finally, we introduce a general graph of interconnected models running a MS simulation.
Definition 4.1 [BioShape Model Template] A BioShape model template is a tu- ple M = ⟨σ, τ, W, P, S, Oi, Of ⟩ where σ and τ are the spatial and temporal scales (e.g. micrometers and milliseconds) of the model. W is a world space template, i.e. a geometrical shape giving the form and the magnitude of the physical world of the model. Inside this bounded space, all the 3D processes will live and interact. P is a set of 3D processes templates, i.e., the “species” of 3D processes that will populate the world. S is a set of services that can be activated in the world. Finally, Oi and Of are, respectively, a functional extrapolating observables from the configuration of the world at each step of the main simulation loop, and a functional giving observables at the final stage of the simulation.
An instance W of a given world space template W is determined by fixing a global 3D coordinate system in which the shape is placed, giving the possibility of measuring distances with the given space scale, and making it possible to create 3D processes inside the shape in specified positions. Moreover, an instance P of a 3D process template in P is constructed by creating a copy of the shape and of the behaviour, by giving it a position in the fixed coordinate system of W and by specifying its initial instant velocity. A collection of instances N is a 3D network. A 3D network must always be well-formed, i.e. there not exist two processes whose shapes interpenetrate or are located outside the boundary of W.
Definition 4.2 [BioShape Model]  A BioShape model is a tuple M  =
⟨M, Δt, W, N, S, EC⟩ where M is a model template, Δt is the maximal duration of a time step in the simulation main loop, W is an instance of W (of M ), N is a network of 3D processes obtained instantiating processes from P (of M ), S is a set of services in S (of M ) and EC is the equilibrium condition that, when satisfied, makes the main simulation loop stop. Let M denote the set of all BioShape models.
Δt can be different from the time scale τ of the model because it is constrained by the assumptions of the collision detection algorithm used in the simulation. More- over, the lower is Δt the better is the approximation of continuum motion of shapes in space, making the model more accurate. Note also that we want to impose that termination is always guaranteed, thus EC must always be a disjunction of a model- dependent condition with a condition like t ≥ Tmax, where t is the simulated time and Tmax is the maximum simulated time allowed.
A BioShape model M is directly runnable. A run correspond to a simulation of the model in which all processes are animated and interact in possibly different




Fig. 3. The BioShape simulation main loop.
ways. Non-deterministic behaviours of processes are resolved either by collisions (collision-driven behaviours) or by internal decision of the process (non-collision- driven behaviours). In each case, a certain amount of randomness may be part of the process. The main loop of the simulation of any BioShape model is shown in Fig. 3. N and S can be considered the variables of the model, as they are initialized and also changed throughout the simulation loop. All the other components can also be affected at the initialization step, but not during the simulation. At each iteration, non-collision-driven behaviours allow to determine the first time of split (possibly infinite if no split operation is foreseen within Δt), while collision-driven behaviours allow to determine the first time of contact of at least two entities within Δt (also in this case possibly infinite). Entities in collision may just bounce or decide to bind and form a new 3D process with possibly different behaviours (this depends on the channels they are exposing on their surfaces and where the collision happened). After the update of simulated time of the determined duration, all collisions and/or split operations happening exactly at that moment are resolved changing the current network of 3D processes and possibly the current services.
Definition 4.3 [Coupling Scheme] Let Mh and Mk be two BioShape models. A coupling scheme between them is a tuple Ehk = ⟨Whk, Whk, Chk, Ckh⟩ where Whk is a world space template, Whk is an instance of Whk such that Wh ∪ Wk ⊆ Whk, Chk =
⟨sendh, oph, receivek, opk⟩ and Ckh = ⟨sendk, opk, receiveh, oph⟩ are connectors. Connector Chk is a connection arrow from an operation oph of the main loop of model Mh to an operation opk of the main loop of model Mk together with two transformation functions sendh: M → D, receivek: D× M → M. D is a generic domain for data exchanging. Connector Ckh has the same structure provided that the roles of h and k are exchanged.
Two coupled models run together: the 3D coordinate system of Whk becomes a global system in which Wh and Wk are placed (internally they continue to use their local coordinate systems). Moreover, they start their main loops at the same instant and run it in parallel with points of synchronization given by the two connectors.
The send is always non-blocking, so the control flow continues with the next
operation in the main loop. In detail, whenever in a model Mi (i ∈ {h, k}) an operation opi - associated with a starting arrow labelled sendi of a connector - is

considered for execution, it is executed in Mi, the variables of the model change obtaining some Mj, and some data d = sendi(Mj) are extracted and sent through
i	i
the connector to the corresponding receive operation.
On the other side, the receive is always blocking. In detail, whenever in a model Mi (i ∈ {h, k}) an operation opi - associated with an ending arrow labelled receivei of a connector - is considered for execution, it is suspended until the corresponding send operation is executed by the main loop of the connected model. The data d, obtained through the connector upon the send is executed, are used by the receive to adapt the values of the variables of the current model: Mj = receivei(d, Mi). Then the operation opi is executed in Mj yielding Mjj. Finally, the control flow
i	i
continues with the next operation in the main loop.
Example 4.4 Figure 4 shows, graphically, two coupled models and the correspond- ing connectors. This example is the well-known micro-macro coupling scheme: time and space scales of the macro model (Mmac) are bigger than those of the micro model (Mmic). Moreover, Wmic ⊂ Wmac and the shape that constitutes Wmic can simply be a portion of the space Wmac or can even be mapped on one of the shapes in Nmac 8 . The connector from Mmac to Mmic starts from the observables of each step, i.e., at the end of each iteration the sendmac function is called to extrapolate significant data from the macro model. This information is then processed by the receivemic function in order to properly initialize the micro model. This is then run completely until the equilibrium condition is reached (the simulated duration of the whole run should be comparable with the duration of the macro step). The observables at the end of the simulation are then coded back to the macro model by the function sendmic of the other connector. This information is received at the beginning of the next step of the macro model (that was waiting for it due to the blocking receive) in order to adapt its state using the data calculated by the micro model (usually qualitative and quantitative parameters needed for the macro model).
Definition 4.5 [MS Simulation Graph] A MS simulation graph is a tuple G =
⟨V, E, WG, WG⟩ where V is a finite set of nodes each containing a BioShape model Mi, E is a finite set of edges that are coupling schemes, E = {Ehk | Mh, Mk ∈ V }, connecting nodes, WG is a world space template, and WG is an instance of WG. The latter is such that it encompasses all the world spaces of the templates in E.
Every model in G starts at the same instant and runs its main loop. Then, the synchronization points given by the connectors defined in E will determine the actual control flow of execution. When there is no synchronization any interleaving execution is admitted. The only aspect that still needs to be specified is the case in which a node in the graph is connected with more than one edge and there is a connector starting (or ending) in the same instruction opi of the main loop of the model. In this case, the execution of the multiple send (or receive) operations associated to opi is made in sequence, and any interleaving is accepted as valid. In other words, it is requested that these operations are independent w.r.t. each other:

8 In this case, the connectors may implement a sort of friction effect on the 3D processes of Nmic.



Fig. 4. The micro-macro coupling scheme in BioShape.


Fig. 5. Micro-macro coupling scheme in CxA
the merging of all their effects on the variables should never create a conflict. In case both send and receive operations are associate to opi at the same time, the send ones must be executed first in order to respect their non-blocking nature.

A case study: the bone remodelling process
As a case study, we take into account the bone remodelling. In the following, we formulate a MS model of the process respectively in terms of CxA (Subsection 5.1) and BioShape (Subsection 5.2), exploiting, in both cases, the corresponding micro- macro coupling scheme.

MS model of trabecular bone remodelling in CxA
The description of bone remodelling in term of CxA in [7] (where the reader can find the complete description) consists of a CA, whose cells are in turn CAs: the macro CA C1 models a portion of trabecular bone as a lattice of Basic Multicellular Units (BMU), while each micro CA C(i,2) (where i corresponds to the cell i in C1) models a single BMU as a lattice of osteocytes and their surrounding mineralized tissue.
Each C(i,2) is linked to C1 by the micro-macro coupling scheme (Fig. 5): upon

each C1 iteration each C(i,2) executes a complete simulation, taking input from C1. In turn, each C(i,2) output is fed into the C1 collision operator.
In any micro CA, each cell j modifies its mass according to an error signal between the mechanical stimulus and the internal equilibrium state; a local collision formula is calculated to restore the equilibrium condition when it does not hold. Consequently, the change in mass modifies the stress field in the bone and, therefore, the stimulus operating on j.
In the macro CA, a global Meshless Cell Method (MCM) [8] analysis evaluates the
stress field and defines the loading conditions operating on each i. Since i modifies the microstructure by processes of formation and adaptation of trabeculae (after a complete execution of C(i,2)), the MCM analysis is performed until there is no change in the relative densities and there is no change in the stress field.
MS model of trabecular bone remodelling in BioShape
Let us show how the same model can be expressed in BioShape with the new MS features introduced in Section 4. We will use the micro-macro coupling scheme depicted in Fig. 4. The macro model is at the tissue spatial (millimeter) and temporal (month) scale and represents a certain 3D portion of trabecular bone tissue as a lattice of cubes. Each lattice cube can contain (i) a full/void cube representing resp. a fully mineralised/fluid tissue part, and one of five basic shapes (surface polyhedrons), able to “discretize” the trabecular surface (3D version of 2D shapes in Fig.2 (C) of [5]).
To each lattice cube in the macro model we associate a micro model, representing a BMU. The micro spatial scale is micrometer, while the time scale is a day. The world space of the micro model is exactly shaped as a lattice cube in the macro model. The shapes that we use in the micro model are exactly those described in the micro model of [5], but here the coupling mechanism comes directly and automatically from the coupling scheme.
The information d that is exchanged through the connectors are also the same: the mineralization density of the bone portion, which determines whether the micro model has to be activated or not. If the cube belongs to a bone marrow region then bone remodelling does not occur: in that case, the micro model will be initialized by sendmac in such a way that it exits immediately.
We iterate the micro-macro coupling scheme for each pair (Mmac,Mi  ), where
i ∈ {1,..., n} and n is the number of lattice cubes in which the world space of
Mmac is divided. Thus, we obtain a MS simulation graph composed of 1 node for
Mmac plus n nodes for Mi  , being each one associated to a different lattice cube.
For each macro iteration, n micro complete simulations will be run, determining a new mineralization density in the associated lattice cube and, consequently, the replacement of the contained shape by another shape (that one associated to the computed mineralization density).
Note that the condition of independence at the multiple sendmac and receivemac calls (one for each of the n connectors starting from them) is respected: since every

i
mic
is associated to a disjoint region of the space, there will be no interference in

updating the data at Mmac.

Conclusion and further work
Taking inspiration from the CxA paradigm, we have formally defined and enriched the meta-model of BioShape - a scale-independent MS simulation environment - and we have exploited it to give a uniform treatment of generally defined coupling schemes, in particular the micro-macro one applied to the bone remodelling. Due to the lack of space, we have only explained how the micro-macro scheme can be implemented in BioShape, but we claim that all schemes that have been identified in the CxA framework can be treated also in the BioShape meta-model.
A final note is about the implementation of the BioShape meta-model in the simulator. BioShape is engineered to natively run a given model on a certain number of available computational platforms. Thus, this feature can be immediately used to run n models in n nodes, each of which is run on several available platforms. Each model is, in the current version, controlled by a global coordinator software agent that is responsible of the balanced distribution of the calculus on the assigned platforms and is the controller that gives the pace for the steps of the main loop.
Thus, to realize the new version, it is only needed to implement an infrastructure of communication among general coordinators that implements coupling schemes with the described synchronization mechanisms. In this way, an executor for the general MS simulation graph is obtained.

References
Bartocci, E., D. Cacciagrano, M. R. Di Berardini, E. Merelli and L. Tesei, Shape Calculus: Timed Operational Semantics and Well-Formedness, Technical report, http://arxiv.org/abs/1011.2488 (2010).
Bartocci, E., D. Cacciagrano, M. R. Di Berardini, E. Merelli and L. Tesei, Timed Operational Semantics and Well-formedness of Shape Calculus, Scientific Annals of Computer Science 20 (2010), pp. 33–52.
Bartocci, E., F. Corradini, M. R. Di Berardini, E. Merelli and L. Tesei, Shape Calculus. A Spatial Mobile Calculus for 3D Shapes, Scientific Annals of Computer Science 20 (2010), pp. 1–31.
Belytschko, T. and S. Xiao, Coupling methods for continuum model with molecular model., Int. J. Multiscale Comput. Eng. 1 (2003), pp. 227–249.
Buti, F., D. Cacciagrano, F. Corradini, E. Merelli, L. Tesei and M. Pani, Bone Remodelling in BioShape, Electronic Notes in Theoretical Computer Science 268 (2010), pp. 17–29, In Proc. of CS2Bio 2010.
Buti, F., D. R. Cacciagrano, F. Corradini, E. Merelli and L. Tesei, BioShape: a spatial shape-based scale-independent simulation environment for biological systems, Procedia Computer Science 1 (2010),
pp. 827–835, In Proc. of 7th Int. Workshop on Multiphysics Multiscale Systems (ICCS 2010).
Cacciagrano, D., F. Corradini and E. Merelli, Bone Remodelling: A Complex Automata-Based Model Running in BioShape, in: ACRI 2010, LNCS 6350, 2010, pp. 116–127.
Cristofolini, L., F. Taddei, M. Baleani, F. Baruffaldi, S. Stea and M. Viceconti, Multiscale investigation of the functional properties of the human femur, Philos Transact A Math Phys Eng Sci 366 (2008),
pp. 3319–3341.
E, W. and B. Engquist, The heterogeneous multi-scale methods, Comm. Math. Sci 1 (2002), pp. 87–132.
Fineberg, J. and M. Marder, Instability in dynamic fracture, PHYS. REP. 67 (1999), pp. 141–144.

Frost, H., Skeletal structural adaptations to mechanical usage (SATMU): 2. Redeﬁning Wolfl’s Law: the remodeling problem, Anat. Rec. 226 (1990), pp. 414–422.
Hoekstra, A. G., A. Caiazzo, E. Lorenz, J. L. Falcone and B. Chopard, Complex Automata: multi-scale Modeling with coupled Cellular Automata, in: A. G. Hoekstra, J. Krok and P. M. A. Sloot, editors, Simulating Complex Systems by Cellular Automata, Springer, 2010, 1st edition pp. 29–57.
Hoekstra, A. G., J.-L. Falcone, A. Caiazzo and B. Chopard, Multi-scale Modeling with Cellular Automata: The Complex Automata Approach, in: ACRI 2008, LNCS 5191, 2008, pp. 192–199.
Kevrekidis, I. G., C. W. Gear, J. M. Hyman, P. G. Kevrekidis, O. Runborg and C. Theodoropoulos, Equation-Free Multiscale Computation: enabling microscopic simulators to perform system-level tasks, Communications in Mathematical Sciences 1 (2003), pp. 715–762.
Shenoy, V. B. and Others, Quasicontinuum models of interfacial structure and deformation, Phys. Rev. Lett. 80 (1998), pp. 742–745.
Singh, U. C. and P. A. Kollman, A combined ab initio quantum mechanical and molecular mechanical
method for carrying out simulations on complex molecular systems: Applications to the CH3CI + CI− exchange reaction and gas phase protonation of polyethers, J. of Comp. Chem. 7 (1986), pp. 718–730.
Warshel, A. and M. Levitt, Theoretical studies of enzymic reactions: dielectric, electrostatic and steric stabilization of the carbonium ion in the reaction of lysozyme., J. of Mol. Bio. 103 (1976), pp. 227–249.
