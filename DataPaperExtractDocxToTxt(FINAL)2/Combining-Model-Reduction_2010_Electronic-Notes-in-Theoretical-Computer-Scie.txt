

Electronic Notes in Theoretical Computer Science 265 (2010) 73–96
www.elsevier.com/locate/entcs
Combining Model Reductions
Ferdinanda Camporesi1,4

Dipartimento di Scienze dell’Informazione Universit`a di Bologna
Bologna, Italy &
Laboratoire d’informatique de l’E´cole normale sup´erieure
(INRIA/E´NS/CNRS)
Paris, France


J´erˆome Feret 1,5
Laboratoire d’informatique de l’E´cole normale sup´erieure (INRIA/ENS/CNRS)
Paris, France


Heinz Koeppl2,6 Tatjana Petrov3,7

School of Computer and Communication Sciences EPFL
Lausanne, Switzerland


Abstract
Molecular biological models usually suffer from a large combinatorial explosion. Indeed, proteins form complexes and modify each others, which leads to the formation of a huge number of distinct chemical species (i.e. non-isomorphic connected components of proteins). Thus we cannot generate explicitly the quantitative semantics of these models, and even less compute their properties. Model reduction aims at reducing this complexity by providing another grain of observation. In this paper, we propose two unifying frameworks for combining model reductions: we propose a symmetric product operator for combining model reductions for stochastic semantics and we show how to abstract further existing reduced differential systems by the means of linear projections. We apply both frameworks so as to abstract further existing reduced quantitative semantics of the models that are written in Kappa, by taking into account symmetries among binding sites in proteins.
Keywords: rules-based modeling, model reduction, abstract interpretation, symmetries.


1571-0661 © 2010 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2010.08.006

Introduction
Signaling pathways describe the interactions between some proteins which are in- volved in communication between and within cells. These pathways usually suffer from a combinatorial blow-up in the number of chemical species (pairwise non- isomorphic connected components of proteins). Rules-based modeling [9,1] offers a convenient and compact solution for describing these pathways (and other molec- ular biological systems as well). The combinatorial complexity is avoided thanks to context-free rules, in which the set of all potential contexts of application for an interaction does not need to be written explicitly.
Yet, the combinatorial complexity raises again when one is interested in the quantitative semantics of rules-based models. Stochastic semantics (based on the use of CTMCs, or master equations) and differential semantics cannot be explicitly written, because the state space is a vector space the dimension of which is the number of reachable species. Model reduction [2,5,10,7,11] consists in reducing this dimension, by discovering a coarser grain of observation. Sound and automatic model reduction can be achieved by the means of formal methods. The framework in [10,7] for reducing differential semantics is based on the fact that rules cannot observe the correlation between specific parts of some chemical species. Thus these chemical species can easily be cut into fragments. In [11] backward bisimulations
[4] are used in order to ensure that rules cannot enforce correlations between the state of some identified parts of chemical species.
In this paper, we propose two generic constructions to combine model reductions, one for stochastic semantics and one for differential semantics. In Sect. 2, we give a motivating example:  we show that fragments-based model reductions can be
abstracted further by taking into account the fact that some binding sites have exactly the same capabilities of interactions (we say that these sites are symmetric). In Sect. 3, we propose a generic framework for reducing stochastic semantics and
combining these abstractions. This framework is based on the use of backward bisimulations [4] in order to prove statistical invariants, and use these invariants to reduce the state space. We propose a binary product for combining backward bisimulation-based model reductions, so as to build the least model reduction which is at least as much as abstract as each model reduction that is given as an argument of this operator. In Sect. 4, we use linear projections to abstract further model reductions for differential semantics. Interestingly, the algorithm that is used to generate the reduced model can be adapted to deal with symmetric sites on the fly. Our two frameworks are highly reusable, because they do not require much

1 The contribution of Ferdinanda Camporesi and J´erˆome Feret was partially supported by the AbstractCell ANR-Chair of Excellence.
2 Heinz Koeppl acknowledges the support from the Swiss National Science Foundation, grant no. 200020- 117975/1.
3 Tatjana Petrov acknowledges the support from SystemsX.ch, the Swiss Initiative in Systems Biology.
4 Email: campores@di.ens.fr
5 Email: feret@di.ens.fr
6 Email: heinz.koeppl@epfl.ch
7 Email: tatjana.petrov@epfl.ch

soundness assumptions about the relation between the symmetries that are used to quotient further the coarse-grained variables and the reduced models (much of proofs are made once for all in the non reduced model).
Then we apply our framework on the models written in Kappa: in Sect. 5, we give the operational semantics of Kappa. In Sect. 6 we give the definition of symmetric sites in Kappa, we review the stochastic and differential semantics, and we use symmetric sites, so as to reduce further the dimension of the state space of these semantics.

Case study
Let us start out with a simple motivating example. We consider two kinds of agents P and X. Instances of P denote phosphate ions, whereas instances of X denote copies of a given protein. We assume that each protein X has two kinds of sites: m sites x1,. . . ,xm and n sites y1,. . . ,yn (m and n are two integer parameters of our model). Each site can recruit at most one phosphate ion P and, then, dissociate from it. The state of a protein X is denoted as a (ordered) tuple of symbols among
u, p. The symbol p stands for a phosphorylated site, whereas the symbol u stands for an unphosphorylated site.  For instance, with m  2 and n  1, a protein X having the sites x1 and y1 phosphorylated and the site x2 unphosphorylated is denoted by Xp, u, p.
We assume that for each integer i between 1 and m the phosphorylation of the site xi does not depend on the phosphorylation state of the other sites. The sites x1,..., xm can all be phosphorylated at a same rate k. Nevertheless, we also assume that for each integer j between 1 and n, the phosphorylation of the site yj depends both on the index j of the site yj and on the number of sites among x1,..., xm which are currently phosphorylated in the protein X: the rate of activation of the site yj in a protein X which have exactly i phosphorylated sites among x1,..., xm is denoted by kj,i. Last, we assume that any phosphorylated site can be unphosphorylated at a same rate kd.
We give in Fig. 1 the set of reactions for the model with parameters m  2 and
n  1. In the general case, there are 2m n reachable configurations for the protein
X. Thus, when m  n gets big, we can no longer enumerate chemical species (nor reactions). We can sample stochastic semantics by using agents-based simulation algorithms [8]. But the integration of the differential semantics, or the computation of more complex properties about the distribution of traces (or states) is impossible due to the combinatorial complexity.
We notice that we can use symmetries among the sites x1,..., xm so as to reduce
the dimension of both the stochastic and the differential semantics. Indeed what is important, is not which sites xi are phosphorylated in a given protein, but how many are phosphorylated. We introduce an equivalence relation  over proteins X: we say that two proteins are -equivalent if, and only if, (i) the number of
phosphorylated sites among the list x1,..., xm is the same for both proteins, and (ii) the phosphorylation state of the sites yj is the same in both proteins, for any integer



P  Xu, u, u k Xp, u, u
kd
P  Xu, u, u k Xu, p, u
kd
k1,0
P  Xu, u, u  Xu, u, p
kd

P  Xu, u, p k Xp, u, p
kd
P  Xu, u, p k Xu, p, p
kd
k1,1
P  Xu, p, u 
kd
Xu, p, p

P  Xu, p, p
k Xp, p, p
kd
P  Xp, u, p
k Xp, p, p
kd
P  Xp, p, u
k1,1
  Xp, p, p
kd

P  Xu, p, u k Xp, p, u
kd
Phosphorylation and dephos- phorylation of the first site.
P  Xp, u, u k Xp, p, u
kd
Phosphorylation and dephos- phorylation of the second site.
k1,2
P  Xp, u, u  Xp, u, p
kd
Phosphorylation and dephos- phorylation of the third site.

Fig. 1. Chemical reactions for m  2 and n  1.



P  Xu, u, u 2k  Xp, u, u
kd
P  Xu, u, p 2k  Xp, u, p


P  Xp, u, u k
2kd
P  Xp, u, p k

Xp, p, u Xp, p, p
k1,0
P  Xu, u, u  Xu, u, p
kd
k1,1
P  Xp, u, u  Xp, u, p
kd
k1,2

kd
Phosphorylation and dephos-
2kd
Phosphorylation and dephos-
P  Xp, p, u
  Xp, p, p
kd

phorylation of the first site.
phorylation of the second site.
Phosphorylation and dephos- phorylation of the third site.

Fig. 2. Simplified chemical reactions for m  2 and n  1.


j between 1 and n. Thus the set of reachable configurations for the protein X, is quotiented into m  12n -equivalence classes. A simplified set of reactions can be proposed, by choosing a representative among each -equivalence class. Indeed, up to updating reaction rate constants, we may assume that the sites x1,..., xm are always phosphorylated in increasing order, and dephosphorylated in decreasing order. In Fig. 2, we give the set of so obtained simplified reactions (for m  2 and n  1). We can notice that whenever the sites x1 and x2 are both unphosphorylated, only the site x1 can be phosphorylated (with a rate twice as big as in the initial reaction) and that whenever the sites x1 and x2 are both phosphorylated, only the site x2 can be dephosphorylated (at a rate twice bigger than in the initial reaction). Such a simplified set of reactions can be used to compute a reduced stochastic semantics and a reduced differential semantics.
In this paper, we propose two formal frameworks so as to combine model reduc- tions for stochastic and differential semantics, and we apply these frameworks for combining existing model reductions [10,7,11] with a model reduction based on the detection of symmetric sites. Both reduced semantics can be derived automatically, without explicitly computing neither the unreduced semantics, nor any intermedi- ate semantics. For instance, the fragments-based model reduction that is proposed in [10,7] abstract away the correlation between the phosphorylation states of the sites yj (for any integer j between 1 and n), because, this correlation is tested in no reaction. This yields n2m1 fragments for the protein X. Combined with sites symmetries, we would get only 2nm 1 classes of fragments. The fragments-based approach achieves no reduction in the case of the stochastic semantics [11]: thus we can only reduce to m  12n classes of species (or fragments) in this case.

Stochastic semantics
In this section, we review the generic framework that has been proposed in [11] for reducing the stochastic semantics of weighted labeled transition systems. This reduction technique is based on the use of backward bisimulations [4] so as to prove statistical invariants. We use these invariants to lump [3] some states of the transition system together, this is a weak lumping which is sound only if the statistical invariants are satisfied by the initial distribution of states. We extend this framework with a commutative operator to combine abstractions. We show that this operator is a pushout, and that abstraction composition distributes over it.

Weighted labeled transition systems
We first introduce the notion of weighted labeled transition system.
Definition 3.1 A  weighted labeled transition system  (WLTS)  is  a  tuple
Q, L,   , w, I, π0 where: (i) Q is a set of states, (ii) L is a set of transition labels, (iii)  Q  L  Q is a relation, (iv) w is a mapping between Q  L and
R , (v) I  Q is a finite subset of states, and (vi) π	: I  0, 1 is a discrete
probability distribution.
Let us now consider Q, L,   , w, I, π0 a WLTS. A state q  I is called an initial state. Moreover, the probability that the system is in the state q  I at time t  0 is equal to π q. An element q, λ, q   denotes a transition from state q

to state q ; the symbol λ is the label of the transition. We denote by q λ
q the fact

that the tuple q, λ, q  belongs to . In the following we will assume that a label fully identifies a transition step. That is to say that given a label λ  L, and four
states q1, q2, q , q   Q such that q1 λ q  and q2 λ q , then we have q1  q2 and
1  2	1	2
q  q . We denote by Lq  L the set of labels for which there exists q  Q such
1	2

that q λ
q . Moreover, we also assume that the system is finitely branching, that

is to say that given a state q, the set Lq is finite. The function w associates each

transition q λ
q to its weight (or rate) wq, λ  R 0.

Now we define a continuous-time semantics for WLTS. This semantics is defined as a probability density distribution of the traces with k steps, for any natural number k  N. First we give the definition of finite traces as follows:
Definition 3.2 A ﬁnite trace is given by an initial state q0  I and a finite sequence

λi, ti, qi1
  i  k
 L  R   Qk of triples such that: for any integer i such that

1  i  k, we have qi
λ
 1 
qi.

Such a trace is denoted as: q
λ1,t1
0 
q1  q
λ ,t
k 1 
qk. Whenever i  1, the

non negative real number ti denotes the amount of time between the i-th transition of the system and the previous one, moreover t1 denotes the amount of time between t  0 and the first transition. Moreover, the number of transitions (here k) is called the size of the trace.

Now we define the probability density distribution of the traces of size k, for any natural number k  N. For that purpose, we introduce IR  as the set of intervals of positive real numbers.
Definition 3.3 Given a natural number k  N, an initial state q0  I and a se- quence λi, Ii, qi1ik  L  IR  Qk of tuples, the set of traces that is defined as follows:


q λ1,I1
q ...q 
λk,Ik
q  : q
λ1,t1
q ...q 
λk,tk
 
 I ,

is called a cylinder set of traces.
We denote by TIR the set of cylinder sets τ of traces. Now we define the probability of a cylinder set of traces.
Definition 3.4 Let k be a natural number in N. The probability that a trace of

size k lies in the following cylinder set of traces: q
λ1,I1
q ...q 
λk,Ik
q , is

given by the following expression:
0   1
k1  k




π q 
 wqi1, λi eaqi1infIi  eaqi1supIi 

1  i  k	,

0  0	i
aq
i1


where for any state q, aq is the activity of the system at stat e q which is defined as: aq :	λwq, λ  λ  Lq.
We notice that initial states are selected according to the distribution π0. More- over, whenever the system is in the state q, the next state is selected by computing
the transition labeled with λ  Lq with probability wq,λ and the waiting time
until a next reaction happens is chosen according to an exponential probability distribution with the parameter that is equal to the activity aq of the system.

Abstraction
The description of a system can be less or more fine grained, which leads to the notion of abstraction between WLTSs:
Definition 3.5 An abstraction between two WLTSs S : Q, L,   , w, I, π0 and S : Q, L,  , w, I, π  is a tuple S, S, βL, βQ, γQ where βL : L  L, βQ : Q  Q, and γQ : Q  0, 1 are three mappings such that the following six properties are satisfied: (i) Both mappings βL and βQ are onto. (ii) For any abstract state q  Q, the restriction of the mapping γQ to the concrete state q  Q such that βQq  q is a finite probability distribution. (iii) For any two concrete states q1, q2  Q such that βQq1  βQq2, we have aq1  aq2.
For any concrete state q1  Q, we have q1  I if, and only if, βQq1  I.

We have q λ
q, if and only if there exists a transition q λ
q such that

βQq  q, βQq  q, βLλ  λ.  (vi) For any concrete state q  I, we





Fig. 3. An abstraction between two transition systems.

have: π q  γQqπ βQq. (vii) For any abstract transition q λ


q and any

0	0
concrete state q such that βQq  q, we have:


  q  Q,λ  L s.t. q 
q, 


q,λ
γQqwq, λ
	 Q		L
 γQqwq, λ.
 

β q  q ,β λ  λ
 
In this definition, the system S is called the concrete system, whereas the system
S is called the abstract system.  Moreover, we often say that the tuple A :
S, S, βL, βQ, γQ is an abstraction between the concrete system S and the abstract system S (eg see Fig. 3), and we write preA : S and postA : S. The mappings βQ and γQ relate concrete and abstract states, whereas the mapping βL relates concrete and abstract labels. The first property ensures that any abstract transition label (resp. any abstract state) is actually the abstraction of a concrete transition label (resp. a concrete state). The second property entails that an abstract state q denotes a finite set of concrete states q  βQq  q, moreover the restriction of the mapping γQ to the states q such that βQq  βQq denotes the conditional probability that the system is in the state q knowing that it is in a state q such that βQq  βQq. The fourth property ensures that when two concrete states have the same abstraction, then the first one is an initial state if, and only if the second one is initial. In such a case, their abstraction is an abstract initial state. The fifth property ensures that the set of abstract transitions is obtained by applying the abstraction function βQ to initial and final states and the abstraction function βL to the label of each concrete transition. The third and the fifth properties state that the abstraction is indeed a backward bisimulation [4].
Let us consider an abstraction S, S, βL, βQ, γQ between a concrete system
S : Q, L,  , w, I,π  and an abstract system S : Q, L,  , w, I, π .
0	0
We want to state the correspondence between trace density distribution in these two systems.  For that purpose, we introduce the function βT which maps any

cylinder set q
λ1,I1
0 
q1  q
λ ,I
k1  qk
of concrete traces to the cylinder set

βQq0
βLλ1,I1
	β
Qq1 β
Qqk1
βLλk,Ik
	β
Qqk of abstract traces. Thus, βT
ap-

plies βQ to each state and βL to each transition label, whereas time intervals are

all preserved. Given a finite union X of cylinder sets of concrete traces, we denote by Pcq  X the conditional probability that we are in a state q knowing that we have computed a trace in the set of cylinder sets X.


Theorem 3.6 ([11]) For any cylinder set τ  : q
 λ ,I1
0
q1  q

k1
λ ,Ik
  qk
of ab-

stract traces of any length k and any sequence of steps, the following holds.
soundness. the probability P τ  of the cylinder set τ  of abstract traces is equal to the sum of the probabilities of the cylinder sets τ of traces such that βT τ   τ .
That is to say: P τ    P τ   τ  TIR  s.t. βT τ   τ .
state completeness. For any concrete state q  Q such that βQq  q ,
k	k	k
the conditional probability that the system is in the state q knowing that we have computed a trace in a cylinder set τ  TIR  such that βT τ   τ  is, when it is deﬁned, equal to γQq.
That is to say: Pcq  τ  TIR  s.t. βT τ   τ   γQq.
The soundness of the abstraction is stated in a classic way: it ensures that we can perform the computation of the probability that an abstract trace lies in a given a cylinder set τ  of abstract traces (of size k) either in the abstract, or in the concrete by summing the probabilities that a concrete trace lies in the cylinder set τ  TIR  of traces for any τ  TIR  such that βTτ   τ . Both ways will give the same result. The completeness states that, even if the computation was made in the abstract, we can recover the distribution over the concrete states that are abstracted by the final abstract state. Indeed, the distribution of the final states is given by the restriction of γQ to the states q such that βQq  q .
It follows from Def. 3.5 and Theorem 3.6.(ii) that two abstractions A1 :
S1, S, βL, βQ, γQ and A2 : S2, S, βL, βQ, γQ such that S1  S2, βQ  βQ,
1	1	1	1	2	2	2	2	1	2
βL  βL, are equal providing that for any (abstract) state q  Q, there exists a
1	2
reachable concrete state q  V  R such that βQq  q. In the following, we assume without any loss of generality that any state in a WLTS is reachable.

Composition and factorization
In this section, we remind two binary operators over abstractions, namely, the composition and the factorization of abstractions, we will introduce a new one (called product) in Sect. 3.4.
Two abstractions between the systems S and S, and between the systems S and
S, can be composed in order to form an abstraction between the systems S and
S. More precisely, let us consider six mappings βL, βQ, γQ, βL, βQ, and γQ such
1	1	1	2	2	2
that A1 : S, S, βL, βQ, γQ and A2 : S, S, βL, βQ, γQ are two abstractions.
1	1	1	2	2	2
Proposition 3.7 (composition [11]) The tuple A3	:	S, S, βL, βQ, γQ
3	3	3
where: βL : βL  βL, βQ : βQ  βQ, and γQq : γQqγQβQq, is also an

3	2	1	3	2	1	3
abstraction.
1	2	1

Moreover, the abstraction A3 is called the composition of A1 and A2, which is denoted by A3  A2  A1.
Definition 3.8 An abstraction A  S, S, βL, βQ, γQ such that S  S, and both functions βL and βQ are identity functions, is called an identity abstraction, and is denoted by Id S.
We notice that, for any abstraction A, by definitions of abstraction composition and identity abstractions, we have A  Id preA  A and Id postA  A  A. We can use abstraction composition to define the notion of isomorphism.
Definition 3.9 An abstraction A1, for which there exists an abstraction A2 be- tween postA1 and preA1 such that both A1  A2  Id postA1, and A2  A1  Id preA1 is called an isomorphism. In such a case, A2 is called the inverse of A1 and is denoted by A1.
We now introduce a factorization operator as the converse of the composition operator. Provided some compatibility requirements, one can decompose an ab- straction between the systems S and S, by providing an abstraction between the systems S and S.  More precisely, let us introduce three WLTSs S :
Q, L,  , w, I, π , S : Q, L,  , w, I,π , and S : Q, L,  , w, I, π ,
0	0	0
and let us consider six mappings βL, βQ, γQ, βL, βQ, and γQ such that A1 :
1	1	1	2	2	2
S, S, βL, βQ, γQ and A2 : S, S, βL, βQ, γQ are two abstractions such that (i)
1	1	1	2	2	2
for any q , q  Q such that βQq   βQq , we have: βQq   βQq ; and (ii)
1  2	2	1	2	2	1	1	1	2
for any λ , λ  Q such that βLλ   βLλ , we have: βLλ   βLλ .
1	2	2	1	2	2	1	1	1	2
Proposition 3.10 (factorization [11]) The tuple A3	:	S, S, βL, βQ, γQ
3	3	3
where: βLλ is deﬁned as βLλ for a given λ  L such that βLλ  λ; βQq
3	1	2	3
is deﬁned as βQq for a given q  Q such that βQq  q; and γQq is deﬁned
1	2	3
by: γQq     γQq  q  Q s.t. βQq  q , is also an abstraction.
3	q	1	2
Moreover, the abstraction A3 is called the factorization of A1 by A2, which is
denoted by A1A2.
Intuitively, the abstraction A1 can be factorized by the abstraction A2 only if the abstraction A1 is coarser than A2, that is to say that each pair of states (or transition labels) which cannot be distinguished in the abstraction A2, cannot be distinguished in the abstraction A1 either.
As expected, abstraction composition is the inverse of abstraction factorization (and conversely), as stated by the following algebraic properties:
Proposition 3.11 (Algebraic identities [11]) Let A1, A2 be two abstractions. The following properties are satisﬁed:
if A1A2 is well-deﬁned, then A1A2 A2 is well-deﬁned and A1A2 A2 
A1;
if A2  A1 is well-deﬁned, then A2  A1A1 is well-deﬁned and A2  A1A1 
A2.

Let us consider an abstraction A. The factorization AA is well-defined and is equal to Id postA (by applying proposition 3.11.(ii) with A1 : A and A2 : Id postA). Moreover, the factorization AId preA is well-defined and is equal to A (by applying proposition 3.11.(ii) with A1 : Id preA and A2 : A).

Product of two abstractions
Now we introduce a new operator to combine two abstractions. We call a span two abstractions A1 and A2 from the same WLTS S. Such a span is denoted by A1SA2, or also A1A2. Dually, we call a cospan two abstractions A1 and A2 going into the
same WLTS S, such a cospan in denoted by A1SA2 or A1A2.
Proposition 3.12 (pushout) For any span A1A2, there exists a universal
cospan A3A4 such that A3  A1  A4  A2 and for any other cospan A5A6 such that
A5  A1  A6  A2, there exists a unique abstraction u such that u  A3  A5 and u  A4  A6 (eg see Fig 4).

With these notations, the abstraction A3  A1 is called a product between the abstractions A1 and A2
6
A1

and the cospan A3A4 is called a pushout of the span	A2

A1A2.
Fig. 4: The pushout property.

Intuitively, the product of two abstractions from the same WLTS, is the ab- straction that is more abstract than these two abstractions, and which is the least abstract among all the abstractions which satisfy this property. Now let us sketch the proof of proposition 3.12.
Proof. Let A1SA2 be a span.	We denote A1  :  S, S1 , βL, βQ, γQ and
1	1	1
A2 : S, S2 , βL, βQ, γQ. Moreover, we denote S : Q, L,  , w, I,π , S1 
2	2	2	0
Q1 , L1 ,   , w1 , I1 , π1 , and S2 : Q2 , L2 ,   , w2 , I2 , π2 . We define the
1	0	2	0
equivalence relation Q over Q as the smallest equivalence relation which satisfies
q Q q whenever βQq  βQq or βQq  βQq. We also introduce the equiva-
1	1	2	2
lence relation L over L as the smallest equivalence relation which satisfies λ L λ
whenever βLλ  βLλ or βLλ  βLλ. We introduce the set Q1,2 as the set
1	1	2	2
of Q-equivalence classes, and the set L1,2 as the set of L-equivalence classes. We
denote by βQ  the function mapping any state q  Q to its Q-equivalence class,
and by βL the function mapping any transition label λ  L to its L-equivalence
class.
Given a cylinder set τ of (concrete) traces of S, we denote by βT τ  (resp. βT τ ,
1	2
resp. βT τ ), the cylinder set of traces that is obtained by replacing each state q
with the abstract state βQq (resp. βQq, resp. βQ q) and any transition label
1	2	1,2
λ with the abstract transition label βLλ (resp. βLλ, resp. βL λ).  For any
1	2	1,2
states q, q  Q such that q Q q, there exist an integer n  N0 and two sequences q1,..., qn  Qn and i1,..., in1  1, 2n1 such that: q  q1, q  qn,
and βQqk  βQqk1 for any integer k between 1 and n  1. Let us show that
ik	ik

the quantity:


Q
ik  k
k	Q


 1  k  n ,

γi qk 1
is independent from the choice of the two sequences ikk and qkk.
Let k be an integer between 1 and n  1, and τ be a cylinder set of concrete traces ending in state q (such a trace exists since we have assumed that all states were reachable).  Let τ be a cylinder set of traces such that
βT τ   βT τ. We know by Theorem 3.6.(ii) that: γQqkPcqk1  βQτ  

1,2
1,2
ik	ik

γQqk1Pcqk  βQτ . By using βQ to partition the set βT τ, it follows by

ik	ik	ik
1,2

summation that:  γQqkPcqk1  βQ τ  γQqk1Pcqk  βQ τ.  Thus,

ik
after simplification, we get that:
1,2	ik
1,2

 γik qk 1  k  n  Pcq  β1,2τ .
	

k	γQqk1
 
Pcq
 βQ τ

Thus, this quantity does not depend on the choice of the two sequences qkk and
ikk. We call this quantity, the probability ratio between q and q and we denote it by pratioq, q.
Now we consider the mapping γQ  : Q  0, 1 such that: for any q  Q,
Q				Q		Q	
 q γ1,2q   q Q q  1 and for any q, q  Q, γ1,2q  pratioq, q γ1,2q .
By definition of γQ , there exists a unique tuple 	, w1,2 , I1,2 , π1,2  such that

1,2
1,2	0

A	: S, Q1,2 , L1,2 ,	, w1,2 , I1,2 , π1,2 , βL , βQ , γQ  is an abstraction (see

1,2
1,2
0	1,2
1,2
1,2

Def. 3.5). By definition of βQ , for any concrete states q, q  Q, we have βQ q  
1,2	1,2
βQ q whenever βQq  βQq. The same way, for any concrete transition labels
1,2	1	1
λ, λ  L, we have βL λ  βL λ whenever βLλ  βLλ. By proposition 3.10,
1,2	1,2	1	1
A1,2 can be factorized by A1 and we define A3 : A1,2A1, the same way, we can define A4 : A1,2A2.
Let us now consider two other abstractions A5 and A6 such that A5  A1  A6  A2. We want to show that there exists a unique abstraction u such that A5  u  A3 and A6  u  A4.  Let us first prove that A5 can be factorized
by A3.  We denote A3 : S1, S1,2, βL, βQ, γQ, A5 : S1, S  , βL, βQ, γQ, and
3	3	3	1,2	5	5	5
A6 : S2, S , βL, βQ, γQ. Let q1 , q1   Q1 such that βQq1   βQq1 . Let
1,2	6	6	6	3	3
us consider q, q  Q such that βQq  q1 and βQq  q1 . By definition of
1	1
βQ , we have:  βQ q  βQ q.  It follows that there exist an integer n  0

1,2
1,2
1,2

and two sequences q1,..., qn  Qn and i1,..., in1  1, 2n1 such that: q  q1,
q  qn, and for any integer k between 1 and n  1, we have βQqk  βQqk1.
ik	ik

Thus βQβQqk  βQ
βQqk  βQ
βQq   βQβQq . It follows that

5	1	4ik	ik
4ik
ik  k
5	1	k

βQβQq  βQβQq.  Thus, βQq1   βQq1 .  The same way, for any
5	1	5	1	5	5
λ1 , λ1   L1 such that βLλ1   βLλ1 , we have: βLλ1   βLλ1 .  By
3	3	5	5
proposition 3.10, it follows that A5 can be factorized by A3. The same way, A6 can be factorized by A4. By proposition 3.11.(ii), this factorization is unique, it follows that A5A3  A6A4, so we can take u : A5A3. By proposition 3.11.(i), we have










A1

A2	A3
(a)

u2
A6	u1
A7
A9
A5	A7
A9
A3
(b)
u2




A7


(c)
u1

u2
A9	A9
A7
A9

(d)

Fig. 5. Proof that composition distributes over pushout.
A5  u  A3 and A6  u  A4.
Moreover, by 3.11.(ii), there is at most one abstraction u : A5A3 such that
u  A3  A6, which ensures the uniqueness of the abstraction u of Fig. 4.	 
Products and pushouts are defined up to isomorphisms. We call the ones that we have used in the proof canonical. We notice that this product operator is not the dual of the classical reduced product [6] of abstract interpretation.

Distributivity
Now we show that the pushout distributes over abstraction composition. We con- sider three abstractions A1,A2,A3 such that the composition A3  A2 is well-defined and preA1  preA2.  We introduce the five abstractions A4,A5,A6,A7,A8, and
A9 such that: (i)A4A5 is a pushout of A1A2; (ii) A6A7 is a pushout of A5A3; (iii)
A8A9 is a pushout of A1A3  A2. The following proposition is satisfied:
Proposition 3.13 There exists an isomorphism u, which satisﬁes: (i) u  A8 
A6  A4, and (ii) u1  A6  A4  A9  A3  A2.
Before proving proposition 3.13, we show the following lemma:
Lemma 3.14 The abstraction A8 can be factorized by the abstraction A4.
Proof. [Lemma 3.14] We assume, without any loss of generality, that the pushouts that we have chosen are all canonical. We denote by Q the equivalence relation over concrete states which is used to define the canonical pushout of A1A2 and by
  the equivalence relation over the concrete states which is used to define the
 
canonical pushout of A1A3  A2. We denote by βQ, βQ and βQ the abstraction
1	4	8
function over states in the abstractions A1, A4, and A8. Let q, q be two elements
in the image of βQ such that βQq  βQq. Let us consider q and q such that
1	4	4
βQq  q and βQq  q. We have q Q q. It follows that there exist n  0 and
1	1
two sequences q1,..., qn  Qn and i1,..., in1  1, 2n1 such that: q  q1, q  qn,
and for any integer k between 1 and n  1, we have βQqk  βQqk1. For any k
ik	ik
between 1 and n  1 such that ik  2, we also have βQβQqk  βQβQqk1.
3	2	3	2
So we have q  q. So βQq  βQβQq  βQβQq  βQq. The same
Q	8	8	1	8	1	8
reasoning can be used to show that, for any pair λ, λ of element in the image of

βL such that βLλ  βLλ, we have βLλ  βLλ, where βL and βL are
1	4	4	8	8	4	8
the abstraction functions for transition labels in A4 and A8.
So, by proposition 3.10, the factorization A8A4 is well-defined.	 
We can now give the proof of proposition 3.13.

Proof. [Proposition 3.13] This proof is depicted in Fig. 5. Since A8A9 is a pushout
 
of A1A3  A2, there exists a (unique) abstraction u1 such that: u1  A8  A6  A4
and u1  A9  A7 (see Fig. 5(a)). Moreover, A6A7 is a pushout of A5A3, so there exists a (unique) abstraction u2 such that: u2  A6  A8A4 and u2  A7  A9 (see Fig. 5(b)). It follows that u2  u1  A9  u2  A7  A9 (see Fig. 5(c)). By proposition 3.11.(ii), u2u1  A9A9, then u2u1  Id postA9. Moreover, u1u2A7  u2A9  A7 (see Fig. 5(d)). Thus, u1  u2  A7A7, then u1  u2  Id postA7.
It follows that both u1 and u2 are isomorphisms.	 
In Sect. 6.3, we will apply the product between abstractions of WLTSs, so as to refine the three stochastic semantics (individual-based where each instance of protein is identified, population-based where proteins indexes are abstracted away, which comes down to consider that the state of the system is a multi-set of reachable species, and fragment-based where species are cut into independent fragments, so that the state is abstracted into a multi-set of fragments) which have been proposed in [11] by taking into account symmetries between the sites of proteins. We obtain the hierarchy of semantics which is depicted in Fig. 7 on page 22. Interestingly, the notion of symmetry needs only to be defined on the most concrete of these three semantics. Moreover, distributivity ensures that this hierarchy commutes (up to isomorphisms).
Differential semantics
In this section, we first recall the generic framework which has been proposed in
[7] for defining differential semantics of rules-based models and to abstract this semantics. Then we show how we use linear projections so as abstract further an existing model reduction.
Concrete semantics
Let V be a finite set of variables. Maps from V to R form a normed vector space for a given norm  . A mapping ρ  V  R such that for any variable v  V, we have ρv  0 is called a state, and we simply write ρ  0. Moreover, given another finite set V of variable and   a norm on V  R, we say that a map φ between V  R and V  R is expansive, whenever there exists a real number α  0 such that for any state ρ  V  R, we have ρ  αφρ. Since V and V are finite, the set of expansive maps between V  R and V  R is independent from the choice of the norms   and  .
Definition 4.1 An autonomous differential system over V is given by a map F
from V  R to V  R which is continuously differentiable and an (initial) state ρ0.

By the Cauchy-Lipschitz theorem, an autonomous differential system F, ρ0 defines a unique maximal differentiable function f : 0,T   V  R such that, for any f 0  ρ0 and f   F  f , with T  . This unique f is called the solution of F, ρ0.

Exact reduction of differential semantics
Definition 4.2 A reduction of an autonomous differential system F, ρ0 is a com- muting square:
F

φ	φ


F 
where, φ is a linear positive expansive mapping between V  R and V  R, for a given finite set V of (abstract) variables; and F  is a continuously differentiable map between V  R and V  R.
Theorem 4.3 ([7]) Let f : 0,T   V  R be the solution of F, ρ0, and f  : 0,T   V  R be the solution of F , φρ0, then T  T  and f   φ  f. Moreover, if f is positive, then f  is positive as well.
Combining existing reductions with projections-based reductions
Let V and V be two finite sets of concrete and abstract variables. We assume that we are given an abstraction function φ between V  R and V  R, and two maps F and F  between V  R and V  R; and between V  R and V  R, such that the following diagram:
F

φ	φ


F 
is a model reduction.
Moreover, we assume that we are given a map P such that the following diagram:
F




commutes.
P
P	II
P
F

We also consider two maps P  and P  such that: (i) P  is a linear expansive mapping over V  R, (ii) P  is a map over V  R, and (iii) the following diagrams:
P
P 
φ	φ


P 
commute.
Theorem 4.4 Under these assumptions, the following diagram:

F


φ	φ




P 
P 


		
0
is a model reduction of the initial autonomous differential system F, ρ0.
Interestingly, we notice that no commutative diagram was required to relate the functions F  and P . As a consequence, the technical proof (diagram II) needs to be done formally once for all in the concrete.


Application
In practice, the mappings P ,P , and P 


are linear projections which are defined

thanks to the choice of a representative for each equivalence class of some given equivalence relations of concrete and abstract variables. Let S be an equivalence
relation over a set S. Let Rep  be a subset of S such that any S-equivalence
class C contains exactly one element e in Rep . In such a case, we say that e is
the representative of the equivalence class C. We introduce two linear projections P
and P0 over S  R as follows: for any function ρ between S and R and any element
e  S, whenever e is a representative in Rep , we define P ρe as the sum of
the expressions ρe for any element e  S such as e S e, and P0ρe : ρe; otherwise, we set P ρe : 0 and P0ρe : 0. The projections P and P0 have the same set of fixpoints. So P0  P  P . Moreover, the projection P is expansive. We call the pair P, P0 the pair of linear projections that is induced by the triple
S, S, Rep .
Theorem 4.4 can be used both to design new model reductions and to abstract further existing model reductions. We illustrate this on our case study (eg. see Sect. 2). We consider the set S of partial configurations for the protein X (a partial configuration is defined by a subset of sites x1,..., xm and a subset of sites y1,..., yn each of them being phosphorylated, or not). Partial configurations are ordered by an inclusion relation  : we write a  a whenever (i) a documents a subset of the sites that are documented in a, and (ii) each site s documented in a has the same phosphorylation state in a as in a. Then, we define the equivalence relation S over S, as a S a if and only if, a and a (i) document the same set of sites, (ii) have the same number of sites xi phosphorylated, (iii) have the same set of sites
yj phosphorylated. We define the set of representatives Rep as the set of partial
configurations for which there exists an integer k between 1 and m such that all the sites x1,..., xk are either phosphorylated, or not documented, and all the sites xk1,..., xm are either unphosphorylated, or not documented. We notice that for
any partial configuration a such as a  Rep , any partial configuration a such
that a  a is in the set Rep  of representatives. A set of representatives which

satisfies this property is called homogeneous.
We define the set V of variables as the set of (complete) configurations for the protein X (there are 2m n of them). The mapping F is obtained by applying mass action laws on the set of reactions that is given in Fig. 1. We denote by V the restriction of the relation S to the elements in V. We define the pair P, P0
as the pair of projections that is induced by the triple V, V , Rep  V. The
property P  F  P  F  P comes from the fact that V induces a forward (straight)
bisimulation over chemical mixtures as formalized in Sect. 6.4.
We can use theorem 4.4 to design a model reduction. We set V : V, φ : idVR, F  : F , P  : P , and P  : P0. Then, according to theorem 4.4, a model reduction is obtained by (i) applying the projection P  on the input of F , which
amounts to ignoring chemical species which are not the representative of their V - equivalence class, and (ii) applying the projection P  on the output, which amounts to collecting the contribution to the derivative of the concentrations of V -equivalent chemical species.
More interestingly, we can use Theorem 4.4 so as to abstract further an existing model reduction. By applying the framework in [10,7], we can get a model reduction by abstracting away the correlation between the phosphorylation state of the sites in the list y1,..., yn. Doing so, we define the set of abstract variables V as the set of specific partial configurations for the protein X, called fragments. In a fragment, all the sites within the list x1,..., xm are documented, whereas exactly one site within the list y1,..., yn is documented. Thus there are n2m1 fragments.
The function φ summarizes the concentration of chemical species that contain a given fragment. For any concrete state ρ  V  R and any fragment v  V, we set: φρv :   ρv  v  v. The relation V over V is defined as the
restriction of the relation S to the elements in V. We define the pair P ,P 
as the pair of projections that is induced by the triple V, V , Rep  V. The
commutative diagram (IV) comes from the definition of φ and the fact that the set

Rep
is homogeneous. As a consequence, a new model reduction can be derived.

It remains only 2m  1n fragments. The mapping P   F   P  can be computed by discarding the input which are not representative of their V -equivalence class, and by gathering the contribution of the fragments which belong to the same V - equivalence class.
We generalize this construction to any model written in Kappa in Sect. 6.4.


The Kappa language
We present a core of the Kappa language [9] in a process-like notation and we give its operational semantics. Particularly, we do not consider internal states, agent creation nor deletion, nor wild-card bond removals. These features are convenient when writing models. Yet they would raise no particular difficulties to our theoret- ical framework.

Syntax
We assume a finite set of agent names A, representing different kinds of proteins; a finite set of sites S, corresponding to protein domains; a signature map Σ from A to ℘S, listing the domains of a protein which can be bound; and a countable set of binding label L.
Definition 5.1 An agent Aσ is defined by its type A  A and its interface σ, where σ is a partial mapping between ΣA and ϵ L. A site s such that σs  ϵ is free, whereas a site s such that σs  L is bound. An interface is usually denoted as a list of sites and the binding state of each site is written in superscript. The detailed description of the syntax of an agent is given by the following grammar:

a :: N σ (agent)	s :: nλ	(site)
N :: A  A (agent name)	n :: x  S	(site name)
σ :: ϵ  s,σ (interface)	λ :: ϵ  i  L (binding state) We generally omit the superscript ϵ.
Definition 5.2 An expression E is a set of agents Aσ. Thus the syntax of an expression is defined as follows:

E :: ϵ  a, E.
Definition 5.3 A pattern is an expression which satisfies the following three con- ditions: (i) no site name occurs more than once in a given interface; (ii) each site name s in the interface of the agent A occurs in ΣA; (iii) each binding label i  L occurs exactly twice if it does at all. The set of binding labels which occur in a
pattern E is usually denoted as BLE. A mixture is a pattern that is fully speci-
fied, ie each agent A documents its full interface ΣA. A chemical species is a fully connected mixture (that is to say that a mixture a1,..., an is a species, if for any subsequence ai1 ,..., aim of agents of this mixture ai1 ,..., aim is not a mixture).
Definition 5.4 A rule r is defined by two patterns El and Er, and a rate k  R , written r : El  Er@k such that El and Er have the same number n of agents, and for any integer i between 1 and n, the i-th agent of El and Er have the same agent type and document the same set of sites (with potentially different binding states).

Moreover, a pair of rules of the form El  Er@k, Er  El@kd is usually denoted by El  Er@k, kd.

Example 5.5 Now we can refactor the case study of Sect. 2 in Kappa. The signa- ture of the model is given by A  A, P , S  s, x1, x2, y1, ΣA  x1, x2, y1, and ΣP   s. Reactions are modelled by the following rules:

Ps  , Xx1  P s1  , X x11	@k, kd
Ps  , Xx2  P s1  , X x21	@k, kd
Ps  , Xx1,x2,y1  P s1 , X x1,x2,y11	@k1,0, kd P s1 , Ps  , X x11,x2,y1  P s1 , P s2 , X x11,x2,y12	@k1,1, kd P s1 , Ps  , X x1,x21,y1  P s1 , P s2 , X x1,x21,y12	@k1,1, kd
P s1 , P s2 , Ps  , X x11,x22,y1  P s1 , P s2 , P s3 , X x11,x22,y13 @k1,2, kd

Operational semantics
We assume that we are given a set of rules R. Now we define a transition system over the set of mixtures (up-to α equivalence). This transition system will be used when defining both the stochastic and the differential semantics of the set of rules R. Moreover, each transition will be labeled by a proof that the transition is enabled and by a kinetic rate.
The application of a rule r : El  Er@k to a mixture E is performed in several steps. First, we apply α-equivalence in order not only to equate the binding labels in E and El, but also to avoid conflicts between former binding labels in E and the labels of the bonds that are created by the rule application. Then, we introduce an embedding so as to map agents of the pattern El to agents of the mixture E. The result of the application of the rules is obtained by overwriting the binding states of the sites of the mixture by the states of the corresponding sites in the rhs Er of the rule r.
Now we give a formal definition of these primitives.
Definition 5.6 The α-equivalence, α, is defined as the smallest binary equiva- lence relation between expressions such that Eij α E for any pair i, j  L2 of binding labels, such that i  BLE.
Definition 5.7 Let Alσl, Bσ be two agents, we say that the agent Bσ matches the agent Alσl, if and only if, Al  B and for any s  ΣAl such that σls is defined, then (i) σs is also defined and (ii) σs  σls.
Definition 5.8 Let El, E be two patterns. We denote by nl (resp. n) the number of agents in El (resp. in E). An embedding between the patterns El and E is denoted by an into mapping φ between the set i  N  1  i  nl and the set
j  N  1  j  n such that, for any i, the agent Aσ at position φi in E
matches the agent Alσl at position i in El. In such a case, we write El φ E. Moreover, a straight embedding, is an embedding φ between two patterns El and
E such that: whenever two agents belong to distinct connected components in El, then their image (by φ) is also mapped to agents which belong to distinct connected components. In such a case, we write El φ E.
Definition 5.9 Let Aσr and Aσ be two agents of the same type. We define the replacement of Aσ with Aσr as the agent Aσ where σ is defined for any site s such that σs or σrs is defined. In such a case, σs  σrs whenever

σrs is defined; and σs  σs otherwise. The replacement of Aσ with Aσr
is denoted by AσAσr.
Definition 5.10 Let r be a rule El  Er@k, E  a1,..., am be a pattern, and φ be an embedding such that El  φ E. We write Er  b1,..., bn. Then the result of the application of r on E along φ, which is denoted by EErφ is defined as the

mixture a ,..., a , where for any integer i such that 1  i  m, a
is defined as

1	m	m
aibj whenever there exists an integer j such that φj  i, and as ai otherwise.
Now we can define the transition system associated to a set of rules.
Definition 5.11 The states of the system are α-classes of mixtures, and the set of transitions is defined by:


E
r,E α ,φ
EE  

α  
g
r φ α

for any mixture E, any rule r  El  Er@k such that r is a rule in R and BLE  BLErBLEl  , any embedding φ between El and E, and where γ is defined as the quotient between the rate k and the number of automorphisms (i.e. embeddings between El and El), CardAutoEl, in El.

Moreover, a transition q λ
g
q, which is defined thanks to a straight embedding,

is also denoted by qλ
g
q.

We notice, that agents types and agents sites (but not their binding states) are preserved by transition application. Moreover, an agent can be tracked along a sequence of transitions thanks to its position.
Example 5.12 Let us show how to apply the rule El  Er@k1,1 to the
state Eα where: the lhs El is defined as P s	, Ps  , X x1 ,x2,y1 ; the rhs
1	  1	 
Er is defined as P s1 , P s2  , X x11,x2,y12 , and the mixture E is defined as
P s3  , P s2  , Ps  , X x13,x2,y1  , X x1,x22,y1 .
We can apply the reaction r along the embedding φ : 1  1, 2  3, 3  4. First we apply α: we replace the binding label 3 with the binding label 1, so that binding labels match, and the binding label 2 with the binding label 4, so as to avoid capture. Then we notice that El φ E31,42. Moreover E31,42Erφ is equal to the mixture E that is defined as: P s1 , P s4 , P s2 , X x11,x2,y12 , X x1,x24,y1 .

Thus we have: E
r,E α ,φ
α  
k1,1
E
(since φ is a straight embedding).

Symmetric sites in Kappa
Action of a transposition
In this section, we formalize the actions of transpositions of two sites on patterns, rules, and transition labels. Then we define when two sites are symmetric in a given set of rules.

Definition 6.1 A transposition of sites is a triple i, x, y  N  S  S.
Let t : i, x, y be a transposition of sites. Intuitively, the transposition t denotes that we want to permute the binding state of the sites x and y in the i-th agent of a pattern, or a rule. Let E : N1σ1 , ... , Nkσk be a pattern and r1 : El  Er@k be a rule.
Definition 6.2 We say that the transposition i, x, y operates on the pattern E, if and only if, i  k and x, y belongs to ΣNi. In such a case, we introduce the pattern
E : N1σ  , ... , Nkσ , where for any j between 1 and k, σ : σj whenever
k	j
j  i, and σ is defined as the interface which has the same domain definition as σi,
and which satisfies: σx : σiy, σy : σix, and σz : σiz for any site
i	i	i
z  domσix, y.
The pattern E is called the action of the transposition i, x, y on the mixture
E, and is denoted by subsi, x, E.
Definition 6.3 Whenever the transposition t operates on El, the rule r :

kCardAutosubsi, x,EÆ
subsi,  ,E   subsi,  ,E @
1
is well-defined, if and only

y	l	y	r	CardAutoEÆ
if the rule r1 is well-defined. In such a case, the rule r is called the action of the
transposition i, x, y on the rule r1, and is denoted by subsRi, x, r1.
Let λ : r2, Eα , φ be a transition label.
Definition 6.4 We assume that the transposition t operates on E.  Let r be
the rule that is defined as r2 whenever there is no integer j such as φj  i; or
subsRφ1i, x, r2 otherwise. Let E be the mixture subsi, x, E. Then φ is also

y
an embedding between the lhs of r
y
and E, we call the triple r , E
, φ the

2	α
action of the transposition i, x, y on the transition label λ, and we denote it by
subsLi, x, λ.
Proposition 6.5 We have:


Eα

λ
g

E

 subsi, x, E

subsLi, x,λ
α   
g

subsi, x, E .


Deﬁnition of symmetric sites
We consider an agent type A  A, and two sites x, y  ΣA in its interface.
Definition 6.6 The sites x and y are symmetric in A for the set of rules R, if for any rule r : N1σ1 , ... , Nlσl  Er@k in R and any integer i between 1 and l such that (i) Ni  A and (ii) the transposition i, x, y operates on r, the rule subsRi, x, r belongs to the set of rules R as well.

So as to avoid testing, for all triples A, x, y such that A  A and x,y  ΣA,

whether the condition in Def. 6.6 is satisfied, or not we preselect the potential triples thanks to a weaker property. Thus, we use the contact map which is the summary of all bonds which may appear in the rhs of a rule in R. The contact map is a graph, the set of nodes are the pairs
A, x with A  A and x  ΣA, and the set of edges are the pairs A, x, A , x  of nodes for which there exists a bond between the site x of an instance of an agent A, and the site x of an instance of an agent A in the rhs of a rule in R. As an example, we depict in Fig. 6 the contact map of our case study of Sect. 2.
X

Fig. 6: A contact map.

Proposition 6.7 If the sites x and y are symmetric in A for the set of rules R, then the nodes A, x and A, y have the same set of partners in the contact map of the set of rules R.
Application to the reduction of stochastic semantics
We review the individual stochastic semantics of Kappa and show that symmetries among sites can be used to design an abstraction of it.
We consider an initial mixture E0 : N1σ1 , ... , Nkσk. We associate the
pair R, E0 with a WLTS Q, L,   , w, I, π0. The state space Q of the system is the set of reachable mixtures (up to α-equivalence); the set of transition labels L is the set of triples r, E α , φ where r is a rule in R, E a mixture, and φ
and embedding between the lhs of r and E; the transition relation  is defined as

q λ
q  whenever there exists a transition q λ
g
q  in the operational semantics (eg

see Section 5.2), moreover the weight of this transition is defined as wq, λ : γ; the set of initial states I is defined as the singleton E0 α , and its initial probability is defined as π0E0 α  : 1.
We consider a set T of triples A, x, y such that the sites x and y in A are
symmetric for the set of rules R and E0 α subsi, x, E0 for any integer i between 1 and k such that Ni  A. We introduce the equivalence relation Q over Q as

the smallest equivalence relation such that E α
Q E 
whenever there exist

a triple A, x, y  T and an integer i such that the i-th agent in E is of type A and E α subsi, x, E. The same way, we define the equivalence relation L over L as the smallest equivalence relation such that λ L λ whenever, if we denote λ : r, E α , φ, there exist a triple A, x, y  T and an integer i, such that the i-th agent in E is of type A and λ  subsLi, x, λ.
By Proposition 6.5, the pair of equivalence relations Q, L defines a backward bisimulation [4]. That is to say that: (i) for any pair q1, q2 of Q-equivalent states in Q, we have aq1  aq2 and (ii) for any Q-equivalence class CQ of states, any
L-equivalence class CL of transition labels, any pair q , q  of states such that
1  2
q  Q q , we have: bwCQ, CL, q   bwCQ, CL, q , where for any state q   Q,
1	2	1	2
the flux bwCQ, CL, q  from the class of states CQ to the state q through the transition steps with a label in the class CL is defined as the sum of the expression



Fig. 7. Hierarchy of stochastic semantics.


wq, λ, for any state q  CQ and any transition label λ  CL, such that q λ
q .

Besides, by assumption on the initial mixture, for any pair q1, q2  Q such that q1  I and q1 Q q2, we have: q2  q1 (and thus q2  I and π0q1  π0q2). Thus, the pair Q, L induces an abstraction between the initial WLTS and a reduced
WLTS where states are quotiented by Q and transition labels are quotiented by
L.
This abstraction can be combined with other existing abstractions such as the population semantics or the fragments semantics (both defined in [11]). Since the product of abstractions distributes over the composition of abstractions, we get the hierarchy of semantics which is depicted in Fig. 7.


Application to the reduction of differential semantics
We remind the differential semantics of Kappa and show that symmetries among sites can be used to design an abstraction of it. We can combine this abstraction with fragments-based model reductions [10,7].
First, we introduce a finite set of chemical species V closed under the rules in R, which contains all species present in the system’s initial state, and has at most one representative per species isomorphism class (i.e. whenever v and v belongs to V, and v  v , then v  v ).
A state is a mapping ρ between V and R (which denotes the concentration of each species). So as to define the function F which specifies the behavior of the system, we consider the set of chemical reactions which are generated by the set of rules R. Given a rule r : El  Er@k in R, we may assume without any loss of generality that El is written as C1,..., Ck where each Ci is a connected pattern. A reaction is obtained, by choosing for any integer i between 1 and k, a reachable species Ri and an embedding φi between Ci and Ri. This way, we form a composite embedding φ :  i φi between El and R1,..., Rk. Moreover, φ is a straight embedding. The result of the application of the rule r on R1,..., Rk is, up to reordering of agents and α-conversion, a tuple of reachable species in V that we denote by P1,..., PL. Then the function F is obtained by summing the contribution

of each reaction, as follows:

	
j	i	i

F ρR   γ
ρR   1  i  k,	F ρPj   γ
i
ρR   1  i  k.
i

where γ is the quotient between k and the number of automorphisms in El, and j
ranges between 1 and k, and j between 1 and l.
A fragments-based model reduction is obtained by carefully choosing a set V of partial species (pair-wisely non isomorphic) called fragments. The abstraction function φ is defined as in our case study: φρv is defined as a linear (the number of occurrence matters) combination of the concentration ρv of the species which contain this fragment.
Now we explain how to abstract such a model reduction further, by dealing with symmetries among sites. We consider a set T of triples A, x, y such that the sites x and y in A are symmetric for the set of rules R and such that for any agent of type A in a fragment the site x is documented, if and only if, the site y is documented. We introduce the equivalence relation  over α-equivalence classes of patterns as

the smallest equivalence relation such that Eα
 E
whenever there exist a

triple A, x, y in T , and an integer i, such that the i-th agent in E is of type A,
and E α subsi, x, E. We consider Rep a set of homogeneous representatives for the -equivalence classes (i.e. such as any connected part of representative is also a representative 8 ). Let P, P0 be the pair of projections induced by the triple

V, V , RepV and P ,P  be the pair of projections that is induced by the triple
V,  , Rep	 V.  Proposition 6.5 ensures that  defines a forward (straight)
V	
bisimulation. That is to say that for any -equivalence class of states Cq , and any pair q1, q2 of -equivalent states, we have: fwq1, Cq   fwq2, Cq  where for any state q  Q, the flux fwq, Cq  is defined as the sum of the real numbers γ such
	λ	

that there exist a transition label λ and a state q
 Cq  which satisfy: q q . It
g

follows that: P  F  P  F  P . The other assumptions of Theorem 4.4 are all
satisfied, which allows to reduce the system further by considering fragments up to symmetries among sites.

Conclusion
In this paper, we introduced two generic constructions to abstract further model reductions for stochastic and differential semantics. They can be used with hierar- chies of model reductions easily, since most of the requirements is expressed in the non-reduced (concrete) model. We applied these frameworks to abstract existing fragments-based model reduction [10,7,11] so as to benefit from the fact that some sites have exactly the same capabilities of interaction.


8 We omit technical details, but some algorithms can compute such sets of representatives.

References
Blinov, M. L., J. R. Faeder and W. S. Hlavacek, BioNetGen: software for rule-based modeling of signal transduction based on the interactions of molecular domains, Bioinformatics 20 (2004).
Borisov, N. M., N. I. Markevich, B. N. Kholodenko and E. D. Gilles, Signaling through receptors and scaffolds: Independent interactions reduce combinatorial complexity, Biophysical Journal 89 (2005).
Buchholz, P., Exact and ordinary lumpability in finite Markov chains, Journal of Applied Probability
31 (1994).
Buchholz, P., Bisimulation relations for weighted automata, Theor. Comp. Science 393 (2008).
Conzelmann, H., J. Saez-Rodriguez, T. Sauter, B. N. Kholodenko and E. D. Gilles, A domain- oriented approach to the reduction of combinatorial complexity in signal transduction networks, BMC Bioinformatics 7 (2006).
Cousot, P. and R. Cousot, Systematic design of program analysis frameworks, in: POPL 1979.
Danos, V., J. Feret, W. Fontana, R. Harmer and J. Krivine, Abstracting the differential semantics of rule-based models: exact and automated model reduction, in: LICS 2010, to appear.
Danos, V., J. Feret, W. Fontana and J. Krivine, Scalable simulation of cellular signaling networks, in:
Z. Shao, editor, APLAS 2007, LNCS 4807.
Danos, V. and C. Laneve, Core formal molecular biology, Theor. Computer Science 325 (2003).
Feret, J., V. Danos, J. Krivine, R. Harmer and W. Fontana, Internal coarse-graining of molecular systems, Proc. of the National Academy of Sciences 106 (2009).
Feret, J., H. Koeppl and T. Petrov, Stochastic fragments: A framework for the exact reduction of the stochastic semantics of rule-based models, Int. Jour. of Software and Informatics To appear.
