

Electronic Notes in Theoretical Computer Science 252 (2009) 93–102
www.elsevier.com/locate/entcs

About the Garden of Eden Theorems for Cellular Automata in the Hyperbolic Plane
Maurice Margenstern 1
Laboratoire d’Informatique Th´eorique et Appliqu´ee, EA 3097, Universit´e de Metz, I.U.T. de Metz,
D´epartement d’Informatique,
ˆIle du Saulcy, 57045 Metz Cedex, France.

Abstract
The Garden of Eden theorems are well known theorems established by Moore and Myhill in the early sixties connecting injectivity and surjectivity for the global function of cellular automata in the (Euclidean) plane. In this paper, it is shown that the properties established by Moore and Myhill are no more true for cellular automata in the hyperbolic plane.
Keywords: Cellular automata, hyperbolic plane, global function of transition.


Introduction
Cellular automata are a well known model of computation, studied from already fifty years. This model is a very powerful tool for simulation of various phenomenas, from gas flows up to the circulation of crowds of pedestrians in railway stations and other physical, chemical or sociological problems of everyday life. At the same time, they are very simple dynamical systems which raise a lot of difficult theoretical questions which are far from being solved. Cellular automata are also a model of computations to which the theory of computability applies. There are a lot of results about the complexity of computations with cellular automata. There are also a lot of results on the Turing complete power of computation of this model.
In the early fifties, Moore and Myhill established an interesting property of the global function of cellular automata in the plane, in fact, the Euclidean plane. Remember that a cellular automaton A in the plane is defined by the definition of a neighbourhood, here the Moore neighbourhood, and a local transition function. For

1 Email: margens@univ-metz.fr

1571-0661 © 2009 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2009.09.016

any cell c whose address is given by a couple of integers, (c.x, c.y), c.x, c.y ∈ ZZ, the Moore neighbourhood is the set Nc of cells d for which |d.x − c.x|, |d.y − c.y| ≤ 1.

The local transition function fA is a mapping from Q9
into QA, where QA is the

finite set of states of A, which rules the change of state in the cell at each tic of the clock:
ηA(c, t+1) = fA({ηA(d, t) | d ∈ Nc}),
where ηA(c, t) is the state of the automaton at the cell c, at time t.
The global transition function GA, is defined is a mapping from QZZ into itself defined as follows. If ξ ∈ QZZ is a configuration, GA(ξ) is the configuration at the next time and it is defined by: GA(ξ)(c)= fA({ξ(d)}| d ∈ Nc}).
The theorems established by Moore and Myhill, see [20,21] state that for a cellular automaton A in the plane with Moore neighbourhood, GA is surjective if and only if it is injective on the set of finite configurations. This property was used by Jarkko Kari to establish that the injectivity, the surjectivity and the reversibility of cellular automata in the plane are undecidable, see [4].
In the nineties and very recently, a few works appeared on the question whether the question of the existence of Garden of Eden is connected with the growth func- tion of the group associated to a Cayley graphs. This function of n gives the number of elements of the group which can be represented by a product of at most n gen- erators of the group and their inverses. In [6,2,1], the question is considered in different settings of Cayley groups. In [6], a counter-example is given when the group has an exponential growth: then, there is an injective global function which is not surjective and there is a surjective global function which is not injective.
However, the techniques of Cayley graphs do not apply to infinitely many tes- sellations of the hyperbolic plane. They apply only when the generating polygon is of the form {2p, 2q}, which means that its number of sides is even and that the number of polygons around a vertex in the tiling is also even, see [3]. In the other cases, especially for polygons with an odd number of sides and with an odd num- ber of copies around a vertex, these techniques do not apply. However, for all the mentioned tessellations, whatever the parities, the technique indicated in [7] always apply: there, tools are developed which allow to locate the cells in the hyperbolic plane, facilitating the implementation of cellular automata in these contexts.
Cellular automata in the hyperbolic plane appeared for the first time in [16,17]. After the publication of [7], this study received a new impulse, see for instance [11] for references. In [10], I have shown that Hedlund’s characterization of cellular automata in the plane can be transported to cellular automata in the hyperbolic plane at the price of an additional property on the cellular automaton. I also have noticed that the proof of Moore and Myhill in the Euclidean case does not pass to the hyperbolic plane. In the light of the mentioned paper in the case of Cayley graphs, it seems plausible that the answer is that there are also counter-examples. In fact, as shown in Section 3, there are examples of an injective cellular automaton which is not surjective and of a surjective cellular automaton which is not injective, and the local transition function which we give in these examples are much more

simple than in [6].
In Section 2, we remind a few notions about cellular automata in the hyperbolic plane, also see [11].

Cellular automata in the hyperbolic plane
It is not needed to be very familiar with hyperbolic geometry to have a good rep- resentation of what happens in the hyperbolic plane. Fortunately, there are good models for that. In this paper, we make use of Poincar´e’s disc model. The hyper- bolic plane is the set of points inside a fixed open disc U of the plane and the points of ∂U , the border of U , are called the points at infinity. In this model, lines are the trace in U of diametral lines or of circles which are orthogonal to ∂U , see Fig. 1, below. The interest of this model is that the angles between lines in the model are the true angles in the hyperbolic plane.



Fig. 1. The Poincar´e’s disc model. Remark the two lines p and q. They both pass through the point A and they are both parallel to the line l. The line m passes through A and does not cut the line l, even at infinity.

Cellular automata live on regular grids. There are infinitely many ones in the hyperbolic plane. Here, we choose the simplest ones in some sense: the pentagrid and the ternary heptagrid, see [11] for a detailed study of these grids. The pentagrid is constructed on the replication of a copy of the regular pentagon with right angles in its sides and, recursively, of the images in their sides. The ternary heptagrid
2π

is constructed in a similar way starting from the regular heptagon with
angles.
as its
3

A view of these grids are given in Fig. 2 in a way which indicates how it is

possible to locate cells and which plays a key role in the proofs of the theorem of Section 3.
The important property indicated by Fig. 2 is that in the case of the hyperbolic plane, the penta- and the heptagrid are generated by a tree. The tree structure is underlined by the parts of the tiling which are detached and placed around the central tile. In the case of the pentagrid, five such regions, each one spanned by the same tree, are placed around the central tile, in a rotation symmetric way. In the case of the ternary heptagrid, we have seven regions. A remarkable property is that the generating tree is the same for the pentagrid and for the ternary heptagrid, see [11]. This tree is called Fibonacci tree as the number of its cells on a level k is f2k+1, where {fk}k∈IN is the Fibonacci sequence where f0 = f1 = 1, see [16]. From this, coordinates can be computed to locate the cells of a cellular automaton, see [7,11].




Fig. 2. On the left: the pentagrid, on the right: the underlying tree which spans the tiling.

As a consequence, except the cell which is placed at the central tile, we call it the central cell, each cell of the cellular automaton, has a father: its father as a node of the tree in the region it falls in.
This is an important point which will be used in Section 3.
The existence of a father for all cells, except the central one, plays the role of a direction in the hyperbolic plane, in the same way as the four traditional directions play a key role in the Euclidean plane.
In most formal presentations of cellular automata in the Euclidean plane − people usually say CA in the plane − the set of cells is identified with ZZ 2. This identification is so evident that it requires some effort to realize that it connects two different things and how it performs the connection.
In the Euclidean case, the above identification consists in three steps. First, we

fix a cell whose coordinates will be (0, 0), by definition. Then, we fix the directions, N orth, South, East and W est and this requires to fix two cells: the one with coordinates (1, 0) and the one with coordinates (0, 1): the second choice amounts to define what means clockwise. These three choices are arbitrary as the Euclidean plane has no privileged point and as it has no intrinsic orientation.
Now, the hyperbolic plane has no privileged point and it is intrinsically non- oriented too. Basically, we do things in a very similar way with what is performed in the Euclidean case. First we fix a cell which will be the central one. This fixes the sectors around the central cell: each neighbour of the central cell is identified with a root of the Fibonacci tree which spans the considered sector. Next, fixing in a sector which cell will be the leftmost son of the root allows us to fix what means clockwise in this context, as the leftmost son of another sector is defined by the rotation which maps this sector to the first chosen one. This correspondence between the two processes allows us to say that defining the father of all the cells, except the central one, amounts to define a direction in the hyperbolic plane.
Gardens of Eden in the hyperbolic plane
Now, we turn to the examples which we announced in the introduction.
Theorem 3.1 (Kari-Margenstern) — There is a cellular automaton A on the ternary heptagrid, or on the pentagrid, such that GA is injective but GA is not surjective. There is also a cellular automaton B on the ternary heptagrid, or on the pentagrid, such that GB is surjective but GB is not injective.
Proof. First, consider the case of A.
We assume that the ternary heptagrid, or the pentagrid, has coordinates based on a central cell x0 and the required number of sectors around it, each sector being spanned by a Fibonacci tree, as mentioned in Section 2.
Each cell x, with x /= x0, has a father which we denote by f (x). For A, we consider that there are two states, 0 and 1 and that the transition function is defined by the following relations:
ηA(x0, t+1) = ηA(x0, t),
ηA(x, t+1) = ηA(f (x), t), when x /= x0, where ηA(y, t) is the state of the cell y at time t under A.
It is not difficult to see that GA is injective. Indeed, if c1 and c2 are two
configurations with c1 /= c2, there is a cell x such that c1(x) /= c2(x). If we consider a son y of x, we have that GA(c1)(y)= c1(x) /= c2(x)= GA(c2)(y). Now, GA cannot be surjective as it cannot reach configurations in which two sons of the same node have different states.
Let us turn to the construction of B. We can give two variants of this construc- tion.
In the first variant, we assume that we have a function σl which, to each node, associates its leftmost son. If x /= x0, where x0 again denotes the central cell, σl(x)

is known by the cell from f (x). For x0, as the sectors spanned by a Fibonacci tree are numbered, we define σl(x0) as the root of the tree which received the smallest number.
Now, we define B as follows:
ηB(x, t+1) = xor(ηB(x, t), ηB (σl(x), t)), where ηB(x, t) is the state of the cell x at time t under B.
It is not very difficult to see that GB is not injective. If we define c0 by assigning
the state 0 to all cells and c1 by assigning the state 1 to each cell, it is not difficult to see that GB(c0)= GB(c1)= c0.
Now, let us check that GB is surjective. Indeed, fix a configuration c1 and we have to define a configuration c0 such that GB(c0)= c1.
Consider x0. Define c0(x0) = 0. Then, applying the definition, we have that c1(x0) = xor(0, c0(σl(x0))) = c0(σl(x0)). And so, this defines c0 at σl(x0). Define c0(x) = 0 for all the other sons of x0 than σl(x0).
By induction, assume that we have defined the level n+1 and that the surjectivity holds for all cells up to the level n, this level being included. From what we have seen, this is the case for n = 0.
On the level n+2, define all white nodes y by c0(y) = 0. Now, consider a node x of the level n+1. As c0(x) = a is defined, we have, by definition, GB(c0)(x) = xor(a, c0(σl(x))).  This always defines c0 at σl(x).  Indeed, c0(σl(x)) = c1(x) if a = 0 and c0(σl(x)) = 1—c1(x) if a = 1. And so, considering all nodes x of the level n+1, this defines c0 for all black nodes of the level n+2. Moreover, now GB(c0)(x)= c1(x) for all cells x of the level n+1 too And the definition of c0 at the level n+2 is complete.
And so, by induction, we proved that GB is surjective.
The second variant requires to know the sons of a cell. This is easy to define from f (x) for any cell x with x /= x0. For x0, we consider that all its neighbours are its sons. Now, we define GB as follows:
ηB(x, t+1) = min{xor(ηB(x, t), ηB(y, t)) | y ∈ Sx}, where Sx is the set of the sons of x.
The argument is the same as in the first variant.
Note that, in the proof of the surjectivity, we can easily see that B cannot be injective, as long as the state of many cells can be fixed arbitrarily.	 


The case of rotation invariant cellular automata
It was proved in [15] that an analog of Hedlund’s for cellular automata hold for the hyperbolic plane provided that an additional property is satisfied by the automaton, namely that the set of its rules is rotation invariant.
Intuitively, this means that if the neighbourhood of a cell is changed by a rotation of the neighbourhood around the cell, then the new state of the cell is the same as

what it was defined before the change. This informal definition can be made more precise, by fixing a way to number the neighbours of a cell or, which is equivalent, to number the sides of the polygon which supports the automaton. Let us say that for the central cell, side 1 is fixed once and for all. The other sides are numbered increasingly while counter-clockwise turning around the cell starting from side 1. For the other cells, fix side 1 to be the side shared by the cell with its father and, similarly number the other sides by counter-clockwise turning around the cell. Then, a rule of the automaton can be displayed in the following format, see [12,19,18] : η0, η1, ..., ηα → η1,
where η0 is the current state of the cell, ηi, with i ∈ {1..α}, where α =5 or α = 7, is the current state of neighbour i and η1 is the new state of the cell.
We say that a cellular automaton on the pentagrid or on the heptagrid is rotation invariant if and only if for each rule as above, the rule
η0, ηπ(1), ..., ηπ(α) → η1,
also belongs to the set of rules for any circular permutation π on {1..α}.
In what follows, s(x, t) denotes the state at x and at time t. We have the following two properties :
Theorem 4.1 (Margenstern-Kari) There is a rotation invariant cellular automa- ton on the pentagrid or on the heptagrid which is surjective but not injective.
Theorem 4.2 (Margenstern-Kari) There is a rotation invariant cellular automa- ton on the pentagrid or on the heptagrid which is surjective but not injective even on ﬁnite conﬁgurations.
Proof of Theorem 4.1. It will be enough that s(x, t) takes its values in {0, 1}. We define the transition rules in such a way that:
s(x, t + 1) =	0	if #{s(y, t) = 0} is even ,
1	if #{s(y, t) = 1} is even
where, in this formula, y denotes a neighbour of x which is not x and #{P (s(y, t))} is the number of y’s around x such that s(y, t) satisfy P . This is clearly a rotation invariant function.
Consider a configuration c and again, denote the central cell by x0. It is not difficult to see that c0(x0) can be 0 or 1 indifferently. Once it is fixed, we can fix the level 1 around x0, setting two cells at the value c(x0) and the others at 1—c(x0). Then, by induction, on each level, we have that the number of neighbours to be fixed is 3 or 2. In fact, the number is 4 for the first tile which we consider at level 1. For the others it is 3, the last one being excepted, for which it is 2. Now, having 2 or 3 cells at our disposal is enough to fix the parity of the required value to be odd. If the number of the required value is odd it is enough to give this value to one new cell and the other value to the others. If it is even, we have the choice: even to give the required value to an even number of cells, 0 or 2, we have the choice, and the other value to the other cells.
This proves that the global function is surjective. Moreover, the just above

argument shows that it is not injective: whatever the number of cells, we have a choice. Also, we already have a choice for c0(x0).	 
Proof of Theorem 4.2. The states are again 0 or 1 and we denote by N (x, t, 1) the number of neighbours y of x, with y /= x for which s(y, t) = 1, where, again, s(y, t) is the state at y and at time t. We define the transition function in such a way that:
s(x, t + 1) =	0	if N (x, t, 1) ∈ {0, 1, 4, 7} ,
1	if N (x, t, 1) ∈ {2, 3, 5, 6}
It is again clear that this transition function can be defined by rotation invariant rules.
The surjectivity comes from the fact that if we have two cells at our disposal among the neighbours of a cell x, this is enough to fix the value at x according to this rule. This can be checked by Table 1, below.
In the table, N ∗(x, t, 1) is the number of 1’s on the already fixed neighbours of x. Each entry tells us how many cells to put to 1. If the entry says 0, this means that both free cells are put to 0.
Note that if we have more free cells at our disposal, we can use the same table to fix the values: two cells a and b among the free ones are fixed according to the table and the others are fixed to 0 or to 1 in order to obtain the value N ∗(x, t, 1) of the table for the cells which are distinct from a and b.
Table 1 The values of N ∗(x, t, 1) for the example of Theorem 4.2.

Now, the configuration c0 where every cell has the state 0 is transformed into c0 and the configuration c1 where every cell has the state 1 is also transformed into c0. Accordingly, the global function is not injective. Now, it is also not injective on finite configurations.
Indeed, let us fix a cell x0. The configuration c(x0) defined by 1 at x0 and 0 everywhere else is also transformed into c0. Similarly, if we have scattered 1’s at a distance at least 4 from each other, then such a configuration is also transformed into c0. Indeed, the requirement on the distance entails that the neighbourhoods of the 1’s are disjoint. And so, we can take only finitely many of them if required. 

Conclusion
We have proved that injectivity and surjectivity are independent in the case of cellular automata in the hyperbolic plane. In the case of rotation invariant cellular automata, the problem of finding an example of an injective cellular automaton

which would not be surjective is still open.
From these results, it appears that a new argument has to be found to prove the undecidability of the surjectivity or the reversibility of cellular automata in the hyperbolic plane. For the injectivity, the problem can be proved undecidable by transferring to the hyperbolic plane the way opened by Jarkko Kari, although it is not all that easy, see [13]. It seems reasonable to conjecture that the surjectivity and the reversibility of the global function of a cellular automaton are undecidable. An argument, in favour of this conjecture is that the tiling problem for the hyperbolic plane is also undecidable, as it was proved by Maurice Margenstern and by Jarkko Kari, independently and by very different methods, see [5,8,14].


Acknowledgement
I am very thankful to Hidenosuke

Nishio for drawing my attention on the pa-

pers [6,2,1]. I am also very thankful to Jarkko Kari for very fruitful discussions on the topic.

References
Capobianco S., Surjectivity and surjectivity of cellular automata in Besicovitch topology,
AUTOMATA’2007, Toronto, Aug. 2007, (2007).
Ceccherini-Silberstein T.G., Machi A., Scarabotti F., Amenable groups and cellular automata, Annales de l’Institut Fourier, 49(2), (1999), 673-685.
H. S. M. Coxeter, W. O. J. Moser, Generators and Relations for Discrete Groups, II Ed., Springer, Berlin, (1965).
Kari J., Reversibility and surjectivity problems of cellular automata, Journal of Computer and System Sciences, 48, (1994), 149-182.
Kari J., The Tiling Problem Revisited (Extended Abstract). Lecture Notes in Computer Science, 4664, (2007), Proceedings of MCU 2007, 72-79.
Machi A., Mignosi F., Garden of Eden Configurations for Cellular Automata on Cayley Graphs of Groups, SIAM Journal of Discrete Mathematics, 6(1), (1993), 44-56.
Margenstern M.,, New Tools for Cellular Automata of the Hyperbolic Plane, Journal of Universal Computer Science 6N◦12, 1226–1252, (2000)
Margenstern M., About the domino problem in the hyperbolic plane, a new solution,
arxiv:cs.CG/070196v1,arxiv:cs.CG/070196v2, (2007), January, 60pp.
Margenstern M., The Domino Problem of the Hyperbolic Plane is Undecidable, Bulletin of the EATCS,
93, (2007), October, 220-237.
Margenstern M., On a characterization of cellular automata in tilings of the hyperbolic plane,
ACMC’07, International Workshop, (2007), Budapest, Aug., 31.
M. Margenstern, Cellular Automata in Hyperbolic Spaces, Volume 1, Theory, (2007), Old City Publishing, Philadelphia, 422p.
M. Margenstern, Cellular Automata in Hyperbolic Spaces, Volume 2, Implementation and computations, (2008), Old City Publishing, Philadelphia, 360p.
Margenstern M., The injectivity of the global function of a cellular automaton in the hyperbolic plane is undecidable, arXiv:0806.1602, (2008), June, 29p.

M. Margenstern, The domino problem of the hyperbolic plane is undecidable, Theoretical Computer Science, 407, (2008), 29-84.
M. Margenstern, On a Characterization of Cellular Automata in Tilings of the Hyperbolic Plane,
International Journal of Foundations of Computer Science, 19(5), (2008), 1235-1257.
Margenstern M., Morita K., A Polynomial Solution for 3-SAT in the Space of Cellular Automata in the Hyperbolic Plane, Journal of Universal Computations and Systems, 5, (1999), 563-573.
M. Margenstern, K. Morita, NP problems are tractable in the space of cellular automata in the hyperbolic plane, Theoretical Computer Science, 259, 99–128, (2001)
M. Margenstern, Y. Song, A new universal cellular automaton on the pentagrid, Parallel Processing Letters, to appear.
M. Margenstern, Y. Song, A universal cellular automaton on the ternary heptagrid, Electronic Notes in Theoretical Computer Science, 223, (2008), 167-185.
Moore E.F., Machine Models of Self-reproduction, Proceedings of the Symposium in Applied Mathematics, 14, (1962), 17-33.
Myhill J., The Converse to Moore’s Garden-of-Eden Theorem, Proceedings of the American Mathematical Society, 14, (1963), 685-686.
