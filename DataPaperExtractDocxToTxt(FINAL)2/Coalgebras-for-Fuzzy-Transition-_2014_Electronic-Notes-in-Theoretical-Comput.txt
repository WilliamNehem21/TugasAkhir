Available online at www.sciencedirect.com


Electronic Notes in Theoretical Computer Science 301 (2014) 91–101
www.elsevier.com/locate/entcs
Coalgebras for Fuzzy Transition Systems
Hengyang Wu1 Yixiang Chen2
1 Information Engineer College Hangzhou Dianzi University Hangzhou, 310018, China
2 MoE Engineering Research Center for Software/Hardware Co-design Technology and Application
Shanghai Key Lab for Trustworthy Computing East China Normal University
Shanghai 200062, China

Abstract
This paper studies a coalgebraic theory of fuzzy transition systems. Main conclusions include: the functor
7A for deterministic fuzzy transition systems and the functor (r ○ 7 )A for nondeterministic fuzzy transition
systems preserve weak pullbacks, and the functor 7A has a final coalgebra under some restricted conditions. Moreover, we show how to get a concrete (fuzzy) bisimulation from a coalgebraic bisimulation.
Keywords: Fuzzy transition system; Fuzzy bisimulation; Coalgebra; Weak pullback; Final coalgebra


Introduction
The notion of (deterministic) fuzzy transition system (FLTS, for short) was first proposed by Errico and Loreti in [7], which is a triple (S, A, α). In this triple, S is a set of states, A is a set of actions and α, the fuzzy transition function, is a mapping from S×A to L(S), where L(S)= {μ | μ : S → L} is the set of all lattice-valued sets with a complete lattice L as a codomain. Hence, this is a lattice-valued transition system. The same notion has appeared in [11] too. Recently, Cao et al. [2] also proposed this notion using the unit interval [0, 1] instead of the complete lattice L, and with an initial state. In this case, for any s, sj ∈ S and a ∈ A, α(s, a)(sj) means the possibility that s performs an a action to enter a successor state sj. Errico and Loreti [7] give the notion of (fuzzy) bisimulation and applied it to fuzzy reasoning.

1 The material are based upon work funded by Zhejiang Provincial Natural Science Foundation of China under Grant No. LY13F020046 and by Zhejiang Provincial Education Department of China under Grant No. Y201223001.
2 The corresponding author: wuhengy−1974@aliyun.com

http://dx.doi.org/10.1016/j.entcs.2014.01.008
1571-0661 © 2014 Published by Elsevier B.V. Open access under CC BY-NC-ND license.

Cao et al. [2] define a (fuzzy) bisimulation relation between two different FLTSs by a correlational pair based on some relation; C´iri´c and his colleagues in [4] introduce two types of simulations (forward and backward) and four types of bisimulations (forward, backward, forward-backward, and backward-forward) for fuzzy automata.
Coalgebra is an abstract theory that provides a uniform framework for vari- ous kinds of transition systems, arising as a rather recent theory within, or closely connected to category theory. Many researches on coalgebras for the classical tran- sition systems and probabilistic transition systems have been done (see for example, [5,6,13,14,15]). However, as far as we know, there are no researches on coalgebras for fuzzy transition systems.
Two issues are often concerned in investigating coalgebras. That is, a final coalgebra [8] and the preservation of weak pullback of the functor [9]. In system- theoretic terms, final coalgebras are of interest because they form so-called mini- mal representations: they are canonical realisations containing all the possible be- haviours of a system. The preservation of weak pullback of the functor is helpful devoted to a coalgebraic theory from a coalgebraic bisimulation. An important con- sequence of this property is that T -bisimulation in any T -coalgebra coincides with equality in the final coalgebra of the T .
This paper is devoted to a coalgebraic theory of fuzzy transition systems, includ- ing deterministic and nondeterministic fuzzy transition systems. We prove that the functor FA for deterministic fuzzy transition systems and the functor (P ◦ F )A for nondeterministic fuzzy transition systems preserve weak pullbacks, and the functor FA has a final coalgebra under some restricted conditions. Moreover, we show how to get a concrete (fuzzy) bisimulation from coalgebraic bisimulation.
Preliminaries
In this section, we introduce fuzzy transition systems and coalgebras.
Fuzzy Transition Systems
In this subsection, we recall some basic facts on fuzzy set theory and the notion of fuzzy transition systems.
Let X be a universal set. A fuzzy set on X is a mapping from X to the unit interval. We denote by F (X) the set of all fuzzy sets of X. The support of a fuzzy set μ is a set defined as supp(μ) = {x ∈ X : μ(x) > 0}. For any μ ∈ F(X) and U ⊆ X, the notation μ(U ) stands for supx∈U μ(x); for any e ∈ F(X×Y ),x ∈ X and
V ⊆ Y , the notation e(x, V ) stands for supy∈V e(x, y). Let (Hi∈Iμi)(x)= supi μi(x)
for any family μi(i ∈ I) of F (X) and x ∈ X. In addition, a fuzzy set μ of X is called normal if μ(X)= 1.
Definition 2.1 [2] A deterministic fuzzy labelled transition system (FLTS, for short) is a triple S = (S, A, α), where
S is a finite or infinite set of states;
A is a finite or infinite set of actions;

α, the fuzzy transition function, is a mapping from S × A to F (S). Determinism here means for each state s and label a, at most one fuzzy set
a	a[λ]	j

α(s, a) is returned by α. The symbols s −→ μ and s −−→ s
α(s, a)(sj)= λ, respectively.
denote α(s, a)= μ and

Definition 2.2 [3] A nondeterministic fuzzy labelled transition system (NFLTS, for short) is a triple S = (S, A, α) where S and A as Definition 2.1 and the transition function α is a mapping from S × A to P(F (S)), the powerset of F (S).
Nondeterminism means more than one fuzzy set may be returned by α for each
a
state s and label a. For s ∈ S and a ∈ A, if μ ∈ α(s, a), we write s ~ μ.
Category and Coalgebra
In this subsection, we introduce some notions of category theory and coalgebra. The following three functors in Set category are often used below.
The powerset functor P maps any set to the set of its subset
P(X)= {Z | Z ⊆ X}
and for a function f : X → Y , gives
P(f )(U )= f (U )= {f (x) | x ∈ U} for U ⊆ X.

Let A be a fixed set. The constant exponent functor IdA maps a set X to the set of all functions from A to X, i.e.
IdA(X)= XA = {ξ | ξ : A → X},
and it maps a function f : X → Y to the function IdA(f ): XA → Y A defined by
IdA(f )(ξ)= f ◦ ξ for ξ : A → X.
The fuzzy functor F maps a set X to F (X), and it maps a function f : X →
Y to the function F (f ): F (X) → F(Y ) such that
F (f )(μ)(y)= μ(f—1(y)) for μ ∈ F(X) and y ∈ Y. 

We will use the notation TA for the composition of IdA with a functor T , i.e. TA = IdA ◦ T . Thus, TA is a functor since the composition of functors is still a functor.
Let C be a category and T : C → C an endofunctor. A T -coalgebra is a tuple (X, α), where X is an object in C and α is an arrow in C, i.e. α : X → T (X). Sometimes, we simply call T -coalgebra α. A homomorphisms between two T -coalgebras (X, α) and (Y, β) is f : X → Y in C such that T (f ) ◦ α = β ◦ f . The class of T -coalgebras with their T -homomorphisms form a category CoalgT .

A final object in CoalgT is a T -coalgebra γ such that for each T -coalgebra α there is exactly one homomorphism from α to γ.
Now, we return to FLTS. An FLTS is just a mapping α : S → (A → F(S)), or equivalently, α : S → F(S)A. Thus, an FLTS is precisely a coalgebra (S, α) of the functor FA, which maps a function f : X → Y to the function FA(f ) : FA(X) → FA(Y ) such that for any t ∈ FA(X), y ∈ Y and a ∈ A, FA(f )(t(a))(y)= (t(a))(f—1(y)), where t(a) is a fuzzy set on X. Particularly, if the fuzzy transition system is unlabelled, then it is a coalgebra (S, α : S → F(S)) of the fuzzy functor
F . Similarly, an NFLTS is a (P ◦ F )A-coalgebra.
Definition 2.3 A T -bisimulation between two T -coalgebras (X, α) and (Y, β) is a relation R ⊆ X × Y such that there exists a coalgebra structure γ : R → T (R) making the projections π1 : R → X and π2 : R → Y coalgebra homomorphisms, satisfying α ◦ π1 = T (π1) ◦ γ and β ◦ π2 = T (π2) ◦ γ. That is, the following diagram

commutes:	X ( π1
αv
R	π2	)Y
∃γ v	β

T (X)(T (π1)
T (R)
T (π )	v
T (Y )

The arrow γ is called mediating morphism between α and β. We say that two states x ∈ X and y ∈ Y are bisimilar, and write x ∼αβ y, if they are related by some bisimulations between (X, α) and (Y, β).
This definition of bisimulation was introduced in [1]. It gives a categorical for- mulation of a notion that has various manifestations in different kinds of state- transition system.
A bisimulation relation on a coalgebra (X, α) is any bisimulation between (X, α) and itself. A bisimulation equivalence is a bisimulation on a coalgebra that is also an equivalence.
We next list some properties of bisimulation. The proofs and more details can be found in [13].
Proposition 2.4 The following properties hold:
The diagonal ΔS = {(s, s) | s ∈ S} is a bisimulation equivalence on any coalgebra with the state set S.
If R is a bisimulation between between two coalgebras (X, α) and (Y, β), then
R—1 is a bisimulation between (Y, β) and (X, α).
A function f : X → Y is a homomorphism between two coalgebras (X, α) and (Y, β) if and only if its graph Graph(f ) is a bisimulation between (X, α) and (Y, β), where Graph(f )= {(x, y) ∈ X × Y | f (x)= y}.
The bisimilarity relation between (X, α) and (Y, β) is the union of all bisimula- tions which is the greatest bisimulation. Proposition 2.4(i) shows that the bisimi- larity relation ∼α on any coalgebra α is reflexive since ΔS ⊆∼α (i.e. ∼αα), whereas
(ii) shows ∼α is also symmetric. However, it need not be transitive, thus ∼α is not
necessarily an equivalence relation.
Naturally, instantiating coalgebraic bisimulation with fuzzy functors FA and

(P ◦ F )A, we can get the corresponding coalgebraic bisimulations for FLTS and NFLTS. Moreover, FA and (P ◦ F )A -bisimulations have all properties in Propo- sition 2.4.
A pullback of functions f : X → Z and g : Y → Z is a triple (P, k : P → X, l : P → Y ) with f ◦ k = g ◦ l such that for any set Q and functions i : Q → X and j : Q → Y with f ◦ i = g ◦ j there exists a unique (so-called mediating) function h : Q → P with k ◦ h = i and l ◦ h = j, where (Z, f : X → Z, g : Y → Z) and (P, k : P → X, l : P → Y ) are called a cospan and span of objects Z and P between X and Y , respectively.
In Set, a pullback of functions f : X → Z and g : Y → Z always exists: the set
P = {(x, y) ∈ X × Y | f (x)= g(y)}
with projections π1 : P → X and π2 : P → Y , is a pullback of f and g.
A weak pullback is defined in the same way as a pullback, but without the requirement that the mediating function be unique. A functor T : Set → Set preserves weak pullbacks if applying T to a weak pullback (P, k : P → X, l : P → Y ), of functions f : X → Z and g : Y → Z yields again a weak pullback: (T (P ),T (k) : T (P ) → T (X),T (l) : T (P ) → T (Y )), now of the functions T (f ) : T (X) → T (Z) and T (g) : T (Y ) → T (Z). The functor T weakly preserves a pullback of a diagram if it transforms it into a weak pullback of the transformed diagram.
If the functor preserves weak pullback, then the following proposition holds [13].
Proposition 2.5 Assume that the functor T preserves weak pullbacks. Then:
The relational composition of two bisimulations is again a bisimulation, where the composition of relation R ⊆ X × Y and Q ⊆ Y × Z is R ◦ Q = {(x, z) | ∃y ∈ Y such that (x, y) ∈ R and (y, z) ∈ Q}.
Bisimilarity on a coalgebra is an equivalence.
Proposition 2.5 gives a sufficient condition that ∼α on any coalgebra α is an equivalence. Therefore, in order to show that FA-bisimulation and (P ◦ F )A- bisimulation have also properties given by Proposition 2.5, it suffices to prove that these two functors preserve weak pullbacks.
Weak Pullback Preservations
The following three lemmas are helpful for proving that FA and (P ◦ F )A preserve weak pullbacks. The first two are taken from [10].
Lemma 3.1 In Set, a functor T preserves weak pullbacks if and only if it weakly preserves pullbacks.
Lemma 3.2 A Set endofunctor T preserves weak pullbacks if and only if for any cospan (Z, c1 : X → Z, c2 : Y → Z) we have: Given u and v with T (c1)(u) = T (c2)(v) then there exists a w ∈ T{(x, y) | c1(x) = c2(y)} with T (π1)(w) = u and T (π2)(w)= v.

The following lemma is also necessary when we prove Theorem 3.4.
Lemma 3.3 Let μ and ν, respectively, be fuzzy sets on X and Y such that μ(X)= ν(Y ). Then there exists a fuzzy set e on the product space X × Y such that for any x ∈ X and y ∈ Y , e(x, Y )= μ(x) and e(X, y)= ν(y).
Proof. For any x ∈ X and y ∈ Y , let e(x, y)= μ(x) ∧ ν(y). Then
e(x, Y ) = supy∈Y e(x, y)
= supy∈Y μ(x) ∧ ν(y)
= μ(x) ∧ supy∈Y ν(y)
= μ(x) ∧ ν(Y )
= μ(x) ∧ μ(X)
= μ(x).
Similarly, one can prove that e(X, y)= ν(y).	 
It should be pointed out that Lemma 3.3 also holds in the probabilistic setting.
However, its proof is rather complicated, we refer the reader to [14] for details.
Theorem 3.4 The fuzzy functor F preserves weak pullback.
Proof. It can be proven by Lemmas 3.1, 3.2 and 3.3, we skip.	 
Corollary 3.5 Functors FA and (P ◦ F )A preserve weak pullbacks.
Proof. By the following facts (see Lemma 3.5.4 and Lemma 3.5.7 in [14]):
The powerset functor P and the constant exponent functor IdA preserve weak pullbacks;
the composition T ◦ G of functors T and G preserves weak pullback if T and
G preserve weak pullbacks.
It is not hard to get that FA and (P ◦ F )A preserve weak pullbacks since FA =
IdA ◦F and (P ◦ F )A = IdA ◦ (P ◦ F ).	 
Final Coalgebra
The final coalgebra is important, its members can be thought of as representing all possible “behaviours” of process, because members x and y of coalgebras α and β, respectively, are typically “behaviourally indistinguishable” precisely when they are identified by the unique homomorphisms from α and β to the final coalgebra γ. This section will investigate final FA(or F )-coalgebra.
It is well known that if (X, α) is a final T -coalgebra, then α : X → T (X) is an isomorphism in Set (see Theorem 9.1 in [13]), i.e. X ∼= T (X). However X  F (X) = [0, 1]X since the cardinal number of X is strictly smaller than the one of 2X by Cantor theorem which shows there has not an injection from 2X to

X, where 2X is the powerset of X, and the cardinal number of 2X is smaller than or equal to the one of [0, 1]X . Further, X  FA(X). Thus, in order to get a final FA(or F )-coalgebra we need to consider some restricted classes. We define

Fn(X) = {μ | μ : X → [0, 1], μ(X)= 1}
Fc(X) = {μ | μ : X → [0, 1], supp(μ) is countable}
FA(X) = {t | t : A → (X → [0, 1]), t(a)(X) = 1 for any a ∈ A}
FA(X) = {t | t : A → (X → [0, 1]), supp(t(a)) is countable for any a ∈ A}

Theorem 4.1 The normal functors Fn, FA and countable support functor Fc have ﬁnal coalgebras. Moreover, if A is countable, then the functor FA has also a ﬁnal
coalgebra.
Proof. The final coalgebras for Fn and FA are trivial, they equal the one element set, i.e. ({s}, α). In this case there is only an element μ in Fn({s}) such that μ(s) = 1 and only an element t in FA({s}) such that t(a)(s) = 1 for any a ∈ A. The final coalgebras for Fc and FA are nontrivial. They can be proven by a basic fact (Theorem∗ 10.4, [13]): any bounded functor has a final coalgebra. The functors Fc and FA are bounded (one can refer to the proof of Theorem 4.6 in [5] for detail). Hence, this conclusion holds.	 

Likewise, a final coalgebra does not exist for functor (P ◦ F )A. However, we do not know whether a final coalgebra exists for some restricted classes of functor (P ◦ F )A, for example, the functor (Pf ◦ Fc)A, where Pf is the finite powerset functor, i.e. Pf (X)= {U ⊆ X | U is finite} for any set X.
Theorem 4.2 (Full abstract) Let A be a countable set and (S, α) be an FA- coalgebra, (D, β) a ﬁnal FA-coalgebra and f : S → D the unique homomorphism from (S, α) to (D, β). For any x, y ∈ S, f (x)= f (y) if and only if x ∼α y.
Proof. Let x ∼α y. Then (x, y) belongs to some bisimulation R from α to it- self. Hence, there exists a coalgebra γ on R such that the projections give homo- morphisms π1 : R → S and π2 : R → S. Then f ◦ π1 = f ◦ π2 = the unique homomorphism R → D. So f (x)= f ◦ π1(x, y)= f ◦ π2(x, y)= f (y).
For another direction, f (x)= f (y) implies x ∼α y. First, by Proposition 2.4(iii), we have x ∼αβ f (x). Again, by Proposition 2.4 (ii), Graph—1(f ) is a bisimulation from (D, β) to (S, α), so f (y) ∼βα y. Further, by Proposition 2.5(i) and f (x)= f (y) we have x ∼α y.	 

This conclusion also holds for functors Fn, FA (A is countable) and Fc. The element f (s) in the final coalgebra can be viewed as the ‘observable behaviour’ of s.

Concrete Bisimulation
In this section, we present a way of relation lifting transforming a coalgebraic bisim- ulation to a concrete (fuzzy) bisimulation, where the notion of concrete bisimulation is due to Sokolova [14]. This approach of transforming a coalgebraic bisimulation to a concrete bisimulation also can be found in [12].
Definition 5.1 Let R ⊆ S × T be a relation. The relation R can be lifted to a relation Rel(FA)(R) ⊆ FA(S) × FA(T ) defined by
(f, g) ∈ Rel(FA)(R) ⇐⇒ ∃k ∈ FA(R), FA(π1)(k)= f and FA(π2)(k)= g. where π1 : R → S and π2 : R → T .
Proposition 5.2 A relation R ⊆ S×T is a bisimulation between the FA coalgebras
(S, α) and (T, β) if and only if
(s, t) ∈ R =⇒ (α(s), β(t)) ∈ Rel(FA)(R).	(1)

Proof. Let R be a bisimulation between the FA coalgebras (S, α) and (T, β) and let (s, t) ∈ R. Let γ be the mediating coalgebra structure for R. Then γ((s, t)) satisfies FA(π1)(γ((s, t))) = α(s) and FA(π2)(γ((s, t))) = β(t). Hence, by Definition 5.1 (α(s), β(t)) ∈ Rel(FA)(R).
For the opposite, assume R satisfies condition (3), For (s, t) ∈ R, since (α(s), β(t)) ∈ Rel(FA)(R), by Definition 5.1 we can find k ∈ FA(R) such that FA(π1)(k) = α(s), FA(π2)(k) = β(t). Let γ((s, t)) = k. Then R is a bisimulation with mediating coalgebra structure γ.	 
By Proposition 5.2 and Definition 5.1 a relation R ⊆ S × T is a bisimulation between the FA-coalgebras (S, α) and (T, β) if and only if for any a ∈ A and (s, t) ∈ R, there exists k ∈ FA(R) such that
sup{t′|(s′,t′)∈R} k(a)(sj, tj) = α(s)(a)(sj)
sup{s′|(s′,t′)∈R} k(a)(sj, tj) = β(t)(a)(tj).
We know for any a ∈ A, k(a) ∈ F(R), α(s)(a) ∈ F(S) and β(t)(a) ∈ F(T ). k(a) can be extended to a fuzzy set e in F (S × T ) defined by e(x, y)= k(a)(x, y) if (x, y) ∈ R otherwise 0. Thus, we can get a definition of relation lifting as follows:
Definition 5.3 (Relation lifting) The relation R ⊆ S × T can be lifted to a relation Rel(F )(R) ⊆ F (S) × F(T ) such that for any μ ∈ F (S),ν ∈ F (T ), (μ, ν) ∈ Rel(F )(R) iff there exists a fuzzy set e ∈ F (S × T ) satisfying the fol- lowing conditions.
e(s, T )= μ(s), for any s ∈ S;
e(S, t)= ν(t), for any t ∈ T ;
e(s, t) = 0, if (s, t) /∈ R.

Since R—1 is also a bisimulation when R is a bisimulation and Rel(F )(R—1)= [Rel(F )(R)]—1, we can get the definition of concrete (fuzzy) bisimulations.
Definition 5.4 (Concrete bisimulation) Let (S, A, α) and (T, A, β) be two FLTSs. A relation R ⊆ S ×T is called a (fuzzy) bisimulation between (S, A, α) and (T, A, β) if and only if for all (s, t) ∈ R and a ∈ A,

s −→a
t −→a
μ implies t −→a ν implies s −→a
ν such that (μ, ν) ∈ Rel(F )(R);
μ such that (ν, μ) ∈ Rel(F )(R—1), i.e. (μ, ν) ∈ Rel(F )(R).

Similarly, applying functor (P ◦ F )A to the relation lifting, we can get the con- crete (fuzzy) bisimulation between two NFLTSs.
Definition 5.5 (Concrete bisimulation) Let (S, A, α) and (T, A, β) be two NFLTSs. A relation R ⊆ S × T is called (fuzzy) bisimulation between (S, A, α) and (T, A, β) if and only if for all (s, t) ∈ R and a ∈ A,
a	a
if s ~ μ, then there exists a ν with t ~ ν and (μ, ν) ∈ Rel(F )(R);
a	a
if t ~ ν, then there exists a μ with s ~ μ and (μ, ν) ∈ Rel(F )(R).
The following theorem shows the relation between FLTS and NFLTS. Theorem 5.6 For a (P ◦ F )A-coalgebra, there exists an FA-coalgebra such that if
s and t are bisimilar in (P◦ F )A-coalgebra then they are bisimilar in FA-coalgebra.
Proof. Let (S, α) be a (P ◦ F )A-coalgebra. Define β(s)(a) = Hμ∈α(s)(a)μ for any s ∈ S and a ∈ A. Then it is easy to verify that (S, β) is an FA-coalgebra. Let s ∼α t. Then there exists a relation R containing (s, t) such that for any μ ∈ α(s)(a), there exists a ν ∈ α(t)(a) with (μ, ν) ∈ Rel(F )(R). Further, one can prove that (Hi∈Iμi, Hi∈Iνi) ∈ Rel(F )(R) provided that (μi, νi) ∈ Rel(F )(R) for any i ∈ I. Thus, s ∼β t as desired.	 
A possible application of concrete bisimulation is the following.
Example 5.7 Assume that there is an unknown classical bacterial infect. The physicians by their experience think that three drugs, i.e. u1, u2, u3, may be useful to this disease. Three possible negative symptoms, i.e. v1, v2, v3, have also been taken into account. Further, the physicians consider the patient’s condition roughly to be four cases, i.e. “poor”, “fair”, “good” and “excellent”, which are denoted as q1, q2, q3 and q4, respectively. A treatment (or a negative symptom)
u1[0.6]
may lead a state to multi-states with respective degrees. For example, q2 −−−−→ q3
(α(q2, u1)(q3) = 0.6) means that the patient’s condition is changed from “fair” to
v1[0.3]
“good” with possibility 0.6 after the drug u1 is used, whereas q2 −−−−→ q1 means
that the patient’s condition is changed from “fair” to “poor” with possibility 0.3 if the patient has the negative symptom v1. The transition possibilities of these events among states are estimated by physicians. Let S = {q1, q2, q3, q4} and A =
{u1, u2, u3, v1, v2, v3}. Then we get an FLTS (S, A, α). A patient’s initial condition may be “poor” and should become “fair”, or “good”, even “excellent” after certain treatment. When a patient’s health becomes “fair”, we naturally hope it to be

better and better, say “excellent”, instead of deteriorating. Analogously, if the patient’s condition has been “excellent”, it is desired to keep the good health and thus a supervisor is necessary to disable the events v1, v2, v3 in case they are controllable. Xing et al. [16] developed a theory by using bisimulation to solve this problem better. We refer the reader to [16] for details. We would like to use concrete bisimulation in this paper to determine whether a supervisor exists between the specification system and the controlled system. Another possible application is that one can use concrete bisimulation to determine whether the behaviour of two fuzzy automata is identical.
Conclusion and Future Work
This paper uses the approach of coalgebra to investigate fuzzy transition systems, some important properties are obtained. Indeed these conclusions also appeared some literature about probabilistic transition systems. From the research point of view, it seems necessary to point out these conclusions. Of course, more attentions should focus on the differences between fuzzy transition systems and probabilistic transition systems. Hence, further work is necessary.
Further work includes: (1) consider whether main conclusions of this paper can be generalized into more general lattice-valued transition systems and whether there is a general result based on max-plus semirings that brings theses results under a common denominator? (2) consider fuzzy coalgebraic logic following the work of Doberkat on stochastic coalgebraic logic [6]. We know that main conclusions of [6] are based on the ANL the category of analytic spaces with surjective Borel maps as morphisms. Probably, these conclusions in the fuzzy case can hold under the general Set category.

References
P. Aczel and N. Mendler, A final coalgebra theorem, in: D. H. Pitt et al. (Eds), Category Theory and Computer Science (Proceedings 1989), in: Lecture Notes in Computer Science, vol. 389, Springer- Verlag, 1989, pp. 357-365.
Y. Cao, G. Chen, and E. E. Kerre, Bisimulations for fuzzy transition systems, IEEE Transaction on Fuzzy Systems 19 (2010) 540-552.
Y. Cao and Y. Ezawa, Nondeterministic fuzzy automata, Information Sciences 191 (2012) 86-97.
M. C´iri´c, J. Ignjatovi´c, N. Damljanovi´c, and M. Basˇi´c, Bisimulations for fuzzy automata, Fuzzy Sets and Systems 186 (2012) 100-139.
E. P. de Vink and J. J. M. M. Rutten, Bisimulation for probabilistic transition systems: a coalgebraic approach, Theoretical Computer Science 221(1999) 271-293.
E. E. Doberkat, Stochastic coalgebraic logic, Springer, 2010.
L. D’Errico and M. Loreti, A process algebra approach to fuzzy reasoning, Proceedings of the Joint 2009 International Fuzzy Systems Association World Congress and 2009 European Society of Fuzzy Logic and Technology Conference, Lisbon, Portugal, 2009, pp. 1136-1141.
R. Goldblatt, Final coalgebras and the Hennessy-Milner property, Annals of Pure and Applied Logic 138(2006) 77-93.

H. P. Gumm and T. Schr¨oder, Coalgebraic structure from weak limit preserving functors, Electronic Notes in Theoretical Computer Science 33 ( 2000) 111-131.
H. P. Gumm, Functors for coalgebras, Algebra Universalis 45 (2001) 135-147.
J. Ignjatovi´c, M. C´iri´c, and V. Simovi´c, Fuzzy relation equations and subsystems of fuzzy transition systems, Knowledge-Based Systems 38 (2013) 48-61.
D. Latella, M. Massink, and E.P. de Vink, Bisimulation of labeled state-to-function transition systems of stochastic process languages, Proceedings of ACCAT 2012, EPTCS 93, 2012, U. Golas, T. Soboll (Eds.) pp. 23-43.
J. J. M. M. Rutten, Universal coalgebra: a theory of systems, Theoretical Computer Science 249 (2000) 3-80.
A. Sokolova, Coalgebric analysis of probabilistic systems, Ph.D. Thesis, Eindhoven University of Technology, 2005.
A. Sokolova, Probabilistic systems coalgebraically: A survey, Theoretical Computer Science 412 (2011) 5095-5110.
H. Y. Xing, Q. S. Zhang, and K. S. Huang, Analysis and control of fuzzy discrete event systems using bisimulation equivalence, Theoretical Computer Science 456 (2012) 100-111.
