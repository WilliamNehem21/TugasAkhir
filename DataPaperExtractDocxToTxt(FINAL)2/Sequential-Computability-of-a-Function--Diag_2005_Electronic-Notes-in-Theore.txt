Electronic Notes in Theoretical Computer Science 120 (2005) 187–199 
www.elsevier.com/locate/entcs


Sequential Computability of a Function: Diagonal Space and Limiting Recursion
Yoshiki Tsujii2	Mariko Yasugi1 ,3	Takakazu Mori4
Faculty of Science Kyoto Sangyo University
Kyoto, Japan

Abstract
We consider the real sequences in I = [0, 1) and real functions on I. A computability notion with respect to the uniformity {Un}, where Un(x)= [  k  , k+1 ) if x ∈ [ k , k+1 ), will be called D-
2n  2n	2n  2n
computability. An R-computable sequence from I will be shown to be approximated by a recursive sequence of rational numbers with a limiting recursive modulus of convergence with respect to
{Un}. Using this result, we relate two extended notions of sequential computability of a function or a function sequence, one formulated in terms of limiting recursion and one in terms of {Un}.
Keywords: Effective diagonal uniformity, Two notions of sequential computability of a function and of a function sequence, Effective uniform continuity of a function


Introduction
The standard notion of computability of a real number or of a sequence of real numbers as well as that of computability of a continuous or of a sequence of continuous functions is generally agreed. As for a continuous real function f defined on a compact interval, for example, f is called computable if the two conditions below are satisfied ([6]).

1 This work has been supported in part by Kayamori Foundations of Informational Sciences Advancement K15VIII No.157 and Science Foundations of JSPS No.16340028.
2 Email: tsujiiy@cc.kyoto-su.ac.jp
3 Email: yasugi@cc.kyoto-su.ac.jp
4 Email: morita@cc.kyoto-su.ac.jp



1571-0661 © 2005 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2004.06.044


(Sequential computability) Given a computable sequence {xm}, {f (xm)} is a computable sequence of real numbers.
(Effective uniform continuity) There is a recursive function α : N → N
with which holds that |x − y| <  1  implies |f (x) − f (y)| <  1  .
2α(p)	2p
However, we also compute values and draw graphs of some discontinuous
functions. So, we would like to attribute a certain kind of computability to some discontinuous functions. In that case, the conditions (i) and (ii) above have to be modified.
There are many theories of computation of discontinuous functions. We too have proposed some approaches to this problem. Among them, one is to express the value of a function at a jump point in terms of a “limiting recursive” modulus of convergence instead of a recursive one (Yasugi, Brat- tka, Washihara:[9]). Another is to change the topology of the domain of a function (Tsujii, Mori, Yasugi:[8]). In some cases, these two approaches are equivalent ([10]). As for a sequence of functions with varying jump points, we took up, as an example, the system of Rademacher functions {φl} (Yasugi, Washihara:[13]). In [13], it was claimed that {φl} admits a “weak computa- tion” in the following sense: input a recursive information of a computable se- quence of real numbers {xm}, a recursive sequence of rational numbers {slmn} converging to {φl(xm)} with a “limiting recursive” modulus of convergence can be produced. Such a property of a function (function sequence) will be called L∗-sequentially computable.
In [12] we presented an alternative way of expressing a notion of com- putability of the Rademacher function system by changing the topology of the real interval I = [0, 1), first by decomposing it into {[  k , k+1)}k for each ν
2ν	2ν
(k ≤ 2ν −1), and then taking a kind of the limit with respect to ν. In this way, we obtain an “effective uniform space” as the limit of an “effective sequence of uniform spaces.” The computability of a sequence from I with respect to this limit space is called “D-computatbility” (D representing “diagonal”). It is based on our theory of the effective uniform space (cf. [8], [11], [10]). In [12], it is shown that, input a D-computable sequence of real numbers, {xm}, the double sequence of values {φl(xm)} is R-computable (computable in the Euclidean topology). Such a property of a function (function sequence) will be called “D-sequentially computable.” We took up the Rademacher function system for the reason that it is the basis of Walsh analysis and fits our interest. The two notions of sequential computability of a function (a function se-
quence) appear quite apart, but they can be related as in the case of [10].
The aim of this article is to relate these two notions of sequentia com- putability, one with respect to the diagonal space and one with respect to limiting recursive functions. The domain of discourse is restricted to I. It is


first shown that an R-computable sequence of real numbers is approximated by a recursive sequence of rational numbers with a limiting recursive modulus of convergence (Section 3: Theorem 3.3). We then show that, for an effectively D-uniformly continuous (educ) function, D-sequential computability and L∗- sequential computability are equivalent (Section 4: Theorems 4.3 and 4.5). As an application, we show that the Rademacher function system is educ and is L∗-sequentially computable (Section 5: Theorem 5.3).
There are other discontinuous functions (in the Euclidean topology) which are not educ but are effectively D-continuous in some sense. This in mind, as a way of remark, we describe “locally uniformly D-computable” functions and “D-computable” functions, and give some examples for respective ones.
In Section 2, we list some definitions and notations from preceding refer- ences for the reader’s convenience.
We only list those references which have direct applications to the present work. We have consulted [3] for the uniform space and [7] for the Rademacher functions. As for some notions of computable functions on I, we have also consulted [4] and [5]. Although our subject is closely related to the Fine metric space (cf. [1],[4],[5]), we will leave investigations into their effective relationship to a later work.

Preliminaries
For details of basic definitions below, see [6] and [7]. A sequence of rational numbers {rn} is called recursive if there is a recursive way to compute rn for each n. A real number x is called computable with respect to the Euclidean topology (R-computable) if it is approximated by a recursive sequence of ra- tional numbers {rm} with a recursive modulus of convergence α. We will express such a circumstance as x ⟨rm, α(p)⟩, or for short x ⟨rm, α⟩. These definitions can be extended to a computable sequence of real numbers.
We will henceforth confine the domain of discourse to I = [0, 1).
Rademacher functions are step functions from I = [0, 1) to {−1, 1}. The
lth Rademacher function φl : I → R is defined as follows.
	1,	x ∈ [ 2i, 2i+1)
0	l
−1,	x ∈ [ 2i+1 , 2i+2 )
(l ≥ 1,i ≤ 2l − 1). {φl} will be called the Rademacher function system.
Instead of elaborating the general theory of an effective sequence of uniform spaces and its limit space (the diagonal space) as developed in [8] and [12], we will review just what is needed here.


For ν = 0, 1, 2, ··· and 0 ≤ k ≤ 2ν − 1, define subintervals of I, {Iν}, as well as a sequence of maps Uν : I → P (I) as follows, where P (I) represents

the powerset of I. Put
Iν =[ k , k +1 ,

k	2ν
2ν  )

and let k be, in particular, the unique k, 0 ≤ k ≤ 2ν − 1, such that x ∈ Iν.

Then define
Uν (x)= Iν ∩ (x − 1 ,x + 1 ).
	

n	k	2n	2n
{Uν} forms an “effective sequence of uniformities” on I (Definition 51 in [12]). The sequence {Un} will be called the diagonal sequence of {Uν }, and will be
n	n
denoted by {Un} (Definition 71 in [12]). The sequence {Un} forms an “effective
uniformity” which is topologically effectively equivalent to the “effective limit”
{Uν}νk (Proposition 71 in [12]). Notice that when y ∈ Un(x), Un(x)= Un(y). A sequence of real numbers {xm} ⊂ I is D-computable (D denoting “di- agonally”) (Definition 73 in [12]) if there is a recursive sequence {qmp} ⊂ I of rational numbers which converges to {xm} effectively with respect to {Un} in a manner that, for a recursive γ and for l ≥ γ(m, p), qml ∈ Up(xm). We will write this property as xm  D ⟨qml, γ⟩ . The definition can be extended to
multiple sequences.
The family of D-computable sequences of real numbers forms a “com- putability structure” for ⟨I, {Un}⟩ (Proposition 72 in [12]). In [12], it is shown that a D-computable sequence of real numbers is R-computable but not con- versely, while, for a single real number, two notions of computability coincide. Let r, s ≥ 0 be integers and let g and φ1, ··· , φr be recursive functions, where g : Nr+s+1 → N and φi : N → N,i = 1, 2, ··· r. The partial function h
defined as follows will be called limiting recursive (cf. Gold: [2]):
h(p1, ··· , ps) = lim g(φ˜1(n), ··· , φ˜r(n), p1, ··· , ps, n),
n
where φ˜(n) is a code for the finite sequence
⟨φ(0, p1, ··· , ps), ··· , φ(n, p1, ··· , ps)⟩ .
Subsequently when we mention a sequence (of numbers or functions), it may be a multiple sequence. For example, a recursive sequence of rational numbers may mean a single sequence {rj}j or a multiple sequence {rj}j (j = j1j2 ··· jn), as the case may be.
R-computability and D-computability
For a later use, we first prepare the following lemma.

Lemma 3.1 A recursive sequence of rational numbers is D-computable.
Definition 3.2 (Weak D-computability) Let {xm} be a sequence from I. If there are a recursive sequence of rational numbers {zmp} and a function ν : N2 → N which is (recursive or) limiting recursive, satisfying
zmp ∈ Un(xm)	for	p ≥ ν(m, n),
then we say that {xm} is weakly D-computable with respect to {zmp} and ν. 5
The first theorem claims “weak D-computability” of an R-computable se- quence.
Theorem 3.3 (From R-computability to weak D-computability) Let {xm} be an R-computable sequence from I. Then, there are a recursive sequence of rational numbers {zmp} and a function ν : N2 → N which is (recursive or) limiting recursive such that {xm} is weakly D-computable with respect to
{zmp} and ν (cf. Definition 3.2).
Proof Suppose xm  ⟨rmq, α⟩ with recursive {rmq} and α(m, q), that is, for
l ≥ α(m, q), |xm − rml| <  1  . Then define
1
zmq = rmα(m,q) + 2q .
It is obvious that {zmq} is a recursive sequence of rational numbers. By virtue of Lemma 3.1, it is D-computable. It also holds that xm < zmp < xm +  2 .

Put
k
k(m, q, n)= max{k; 2n ≤ zmq}.

k(m, q, n) is recursive. Define next l(m, q, n), also recursive, as follows.

	2n	2q
 2,	k(m,q,n)+1 −  2  < z	.
2n	2q	mq
Notice that l(m, q, n) = 1 implies q > n + 2.
We have at our disposal the following five facts.
Fact 1. If l(m, q, n)= 1, then k(m, q, n)= k(m, p, n) for any p ≥ q. Fact 2. There exists a q0 such that, for any q ≥ q0, l(m, q, n) /= 2. Fact 3. If l(m, q, n)=1 for some q, then, for any p ≥ q, l(m, p, n)= 1.

5 The term “weak D-computability” has been suggested by the referee.


Fact 4. If limq→∞ l(m, q, n) = 0, then xm = Ln(xm), where Ln(x) represents the left end point of Un(x).
Fact 5. zmq ∈ [ k(m,q,n) , k(m,q,n)+1 ).
2n	2n
We delay the proofs of Facts 1∼Fact 5, and complete the proof of the theorem using these Facts.
Define l(m, n) and ν(m, n) successively as follows.
l(m, n) = lim l(m, q, n).
q→∞
By Facts 2 and 3, limq→∞ l(m, q, n) exists, and the value is either 1 or 0. So, by definition, l(m, n) is limiting recursive.
ν(m, n)=  min{q|l(m, q, n)= 1},	l(m, n)=1 
	n + 1,	l(m, n)= 0.
By Facts 2 and 3 and the definition of l(m, q, n), ν is recursive in l(m, n), hence is limiting recursive. Let us remark that from the comment above, ν(m, n) ≥ n + 1 in either case.
Note that by the definition of zmq, xm < zmq < xm +  2  , and so zmq ∈
Un(xm) if q ≥ ν(m, n), since ν(m, n) ≥ n + 1.
Suppose first l(m, n) = 1. By the definition of ν and Fact 3, it follows successively for any p ≥ ν(m, n) (= max(min{q|l(m, q, n)= 1},n + 1)),
k(m, p, n)	4	k(m, p, n)+1	2
2n	+ 2p ≤ zmp ≤	2n	− 2p ,
k(m, p, n)	4	2	k(m, p, n)+1	2	1	1
2n	+ 2p − 2p < xm <	2n	− 2p − 2p + 2p ,
k(m, p, n)	2	k(m, p, n)+1 


This tells us that
2n	+ 2p < xm <	2n	.



Un(xm)= [
k(m, p, n)
2n	,
k(m, p, n)+1 
2n	)

and hence by Fact 5 zmp ∈ Un(xm) for p ≥ ν(m; n).
Suppose next l(m, n) = 0. Fact 4 shows that xm = Ln(xm). So,
2	1
Ln(xm)= xm < zmp < Ln(xm)+ 2p < Ln(xm)+ 2n


for p ≥ n + 1. It means that for p ≥ ν(m, n)= n + 1,
1
zmp ∈ Un(xm)= [Ln(xm), Ln(xm)+ 2n ).
This completes the proof of the theorem. Now the proofs of five facts above. Fact 1: Suppose l(m, q, n) = 1. It is sufficient to show

(1)
k(m, q, n)
2n	≤ zmp <
k(m, q, n)+1 2n

for p ≥ q, since then k(m, p, n)= k(m, q, n). l(m, q, n) = 1 implies
k(m, q, n)	4	1	k(m, q, n)+1	2	1

(2)
From (2) and
2n	+ 2q − 2q ≤ rmα(m,q) ≤
1
2n	− 2q − 2q .
1

rmα(m,q) − 2q < xm < rmα(m,q) + 2q ,
k(m, q, n)	2	k(m, q, n)+1	2

(3)
2n	+ 2q < xm <	2n	− 2q .

Now suppose p ≥ q. Then
1	1	1	1	1	1	1
zmp − 2p = rmα(m,p) + 2p − 2p < xm + 2p < rmα(m,p) + 2p + 2p = zmp + 2p .
From this and (3), it holds
k(m, q, n)	2	1	1	k(m, q, n)+1	2	2

(4)
2n	+ 2q − 2p + 2p < zmp <	2n	− 2q + 2p ,

from which follows (1).
Fact 2: There exists an integer kmn such that

kmn ≤ x
< kmn +1 

2n	m
2n	.

It then follows that there is a positive integer q0 satisfying
kmn +1 	4
(5)	− x	>	.

2n	m
2q0

With these kmn and q0, we will show that, for any q ≥ q0,

(6)
kmn < z 
< kmn +1  − 2 .

2n	mq
2n	2q

If (6) holds, then k(m, q, n)= kmn and l(m, q, n) /=2 for any q ≥ q0, proving Fact 2.
For the proof of (6), we have for any q ≥ q0,

(7)
kmn ≤ x	< z 
2	2
< x  +  ≤ x  +

2n	m	mq
m	2q	m	2q0

and, by (5),
2	kmn +1	2
x  +	<	−


< kmn +1 − 2 .

m
This and (7) yield (6).
2q0
2n	2q0
2n	2q

Fact 3: Suppose l(m, q, n) = 1, and put k ≡ k(m, q, n). Then,
k	4	k +1	2
2n + 2q ≤ zmq ≤	2n	− 2q .
Suppose p > q. (If p = q, then the assertion in Fact 3 already holds.) When l(m, q, n)= 1, (3) holds. Furthermore, k(m, p, n)= k(m, q, n)= k by Fact 1. So, we obtain l(m, p, n) = 1 as follows. From (4) we have hence
k	2	k +1	2	2
2n + 2q < zmp <	2n	− 2q + 2p ,
k(m, p, n)	4	k(m, p, n)+ 1	2
2n	+ 2p < zmp <	2n	− 2p .

Fact 4: Assume limq→∞ l(m, q, n) = 0. Suppose also that  k
≤ xm
< k+1 for

an integer k. For all sufficiently large q, we have that xm < zmq < k+1, hence
k = k(m, q, n). limq→∞ l(m, q, n)= 0 means that
k	k	4
≤ xm < zmq <	+ 
2n	2n	2q

for all sufficiently large q, hence xm =  k
= Ln
(xm).

Fact 5: This fact follows from the choice of k(m, q, n).	 

Sequential computability of a function
We will define two notions of sequential computability of a real function on I, one with respect to the Euclidean topology and one with respect to {Un}, and then relate them.
Definition 4.1 (Sequential computability) Let f : I → R be a real function defined on I.
f is called D-sequentially computable if, for every D-computable se- quence of real numbers {xm} ⊂ I, {f (xm)} is R-computable (cf. Section 2).
f is called L∗-sequentially computable if, for any R-computable sequence
{xm} ⊂ I, there are a recursive sequence of rational numbers {tmq} and a function δ : N2 → N which is recursive in ν satisfying
f (xm)  ⟨tmq, δ(m, p)⟩ ,


where ν is the limiting recursive modulus of convergence of {zmp} to {xm} in Theorem 3.3.
Note 1  L∗-sequential computability is stated slightly differently from the cor- responding notion in [10].
We will show that the two notions of sequential computability in Definition
coincide for functions satisfying a certain effective continuity. The Remark below will be useful.
Remark 4.2 If {xm} is D-computable with recursive {qmp} and β, that is, xm  D ⟨qmp, β(m, n)⟩, then in Theorem 3.3, we can take zmp = qmp and ν(m, n) = β(m, n), hence ν (a limiting recursive modulus of convergence of
{zmp} to {xm}) can in fact be taken to be recursive.
Theorem 4.3 (From L∗-sequential computability to D-sequential computabil- ity) If f is L∗-sequentially computable, then f is D-sequentially computable.
Proof Suppose f is L∗-sequentially computable and let {xm} ⊂ I be D- computable. Then it is R-computable. By definition, there are a recursive sequence of rational numbers tmq and a function δ which is recursive in ν satisfying f (xm)  ⟨tmq, δ(m, p)⟩ . By virtue of the Remark above, ν can in fact be recursive for this {xm}, hence δ can be recursive, and so {f (xm)} is R-computable.	 
We will next consider the family of functions which are “effectively uni- formly continuous” with respect to {Un}. A function in this family is generally not continuous but is piecewise continuous in the Euclidean topology.
Definition 4.4 (Effective uniform continuity) A function f : I → R is called effectively D-uniformly continuous (abbreviated to educ) if there is a recursive function γ0 such that, for n ≥ γ0(p),
1
y ∈ Un(x) ⇒ |f (x) − f (y)| < 2p .
Note 2 In claiming educ of f, it suﬃces to claim that y ∈ Uγ0 (p)(x) implies
|f (x) − f (y)| <  1 .
Theorem 4.5 (From D-sequential computability to L∗- sequential computabil- ity) If f is educ and D-sequentially computable, then f is L∗-sequentially computable.
Proof Suppose f is D-sequentially computable, and suppose {xm} is R- computable. Then by Theorem 3.3 there is a recursive sequence of rational

numbers {zmp} and a limiting recursive function ν such that {xm} is weakly
D-computable, that is,
zmp ∈ Un(xm)	for	p ≥ ν(m, n).
Since {zmq} is a recursive sequence of rational numbers, it is D-computable (Lemma 3.1). So, by the assumption that f is D-sequentially computable,
{f (zmq)} is R-computable. Namely, there are a recursive sequence of ratio- nal numbers {smqt} and a recursive β(m, q, n) such that f (zmq)  ⟨smql, β⟩ , namely,
1
|f (zmq) − smql| < 2n	if	l ≥ β(m, q, n).
Now define a recursive sequence of rational numbers {tmn} by
tmn := smnβ(m,n,n).

Next define δ(m, p), using γ0 in Definition 4.4, by
δ(m, p) := max(ν(m; γ0(p + 1)),p + 1).
δ is limiting recursive (recursive in ν). Suppose q ≥ δ(m, p) ≥ ν(m, γ0(p + 1)),p + 1. Then, by (9), zmq ∈ Uγ0 (p+1)(xm), hence by educ (Definition 4.4) it holds that
1
|f (xm) − f (zmq)| < 2p+1 .
1	1	1
|f (zmq ) − tmq | = |f (zmq ) − smqβ(m,q,q)| < 2q ≤ 2δ(m,p) ≤ 2p+1 .
We have thus
1
|f (xm) − tmq| < 2p
if q ≥ δ(m, p), that is, f (xm) is approximated by recursive {tmq} with a modulus of convergence δ which is recursive in ν.	 
By virtue of Theorems 4.3 and 4.5, it will be reasonable to define the uniform D-computability of a function as follows.
Definition 4.6 (D-uniformly computable function ) A function f : I → R is called D-uniformly computable if it is D-sequentially computable and educ. The first condition can be replaced by L∗-sequential computability at the presence of the second condition.
Note 3 A function which is effectively D-uniformly continuous (Deﬁnition 4.4) and is D-sequentially computable is uniformly computable in the sense of Deﬁnition 4.5 of [8]. In [8], we presented a weaker notion of computabillity in the effective uniform space.


For a single function, Theorem 4.5 may not be so striking because of the assumption educ, which is a rather strong property. With a sequence of func- tions, however, it exhibits more power, since then we can deal with a case where the jump points vary according to the functions in the sequence. We will present an example of such in the next section.

L∗-sequential computability of the Rademacher func- tion system
We can easily extend the definitions and propositions in the previous section to a sequence (or multiple sequence) of functions. Below we state the extended definitions and propositions corresponding to Definitions 4.1 and 4.4, and Theorems 4.3 and 4.5.
Definition 5.1 (Sequential computability notions of a function sequence) Consider a function sequence {fi} from I to R.
{fi} is called D-sequentially computable if, for any D-computable {xm},
{fi(xm)} is an R-computable double sequence of real numbers.
{fi} is called L∗-sequentially computable if, for any R-computable
{xm}, there are a recursive sequence of rational numbers {timq} and a function
δ which is recursive in ν satisfying
fi(xm)  ⟨timq, δ(i, m, p)⟩ ,
where ν is a limiting recursive function claimed in Theorem 3.3.
{fi} is called educ if there is a recursive function γ0 satisfying
1
y ∈ Un(x),n ≥ γ0(i, p) ⇒ |fi(x) − fi(y)| < 2p .
Proposition 5.2 (Sequential computability notions of a function sequence)
1) If {fi} is a D-sequentially computable sequence of functions which is educ, then {fi} is L∗-sequentially computable.
2) If {fi} is L∗-sequentially computable, then {fi} is D-sequentially com- putable.
Now we will deal with a specific system of the Rademacher functions {φi} (cf. Section 2). For any recursive sequence of rationals {qmn} ⊂ I, the se- quence of values {φi(qmn)} is a recursive (triple) sequence of rational numbers (integers). Furthermore {φi} is educ and is D-sequentially computable. (These properties are essentially included in Theorem 2 of [12].) Then 1) of Propo- sition 5.2 implies that it is L∗-sequentially computable. We thus have the

following characterization of {φi}.
Theorem 5.3 (Sequential computability of the Rademacher function system) The Rademacher function system {φi} is educ and is L∗-sequentially com- putable.
Remark 5.4 There are many piecewise continuous functions on I in the Eu- clidean topology which are not D-uniformly continuous, that is, not uniformly continuous in the space ⟨I, {Un}⟩. Some of them can be characterized as “lo- cally uniformly continuous functions” and “continuous functions” in the space
⟨I, {Un}⟩. Corresponding to these notions of continuity, we can introduce the notions of “locally uniform D-computability” and “D-computability” by rephrasing the definitions in Brattka and Mori ([1] [4],[5]).
Let {ei} be an effective enumeration of binary rational numbers in I.
We call a function f : I → R locally uniformly D-computable if the follow- ing conditions hold: f is D-sequentially computable, and there are recursive

functions γ and α satisfying that |f (x) − f (y)| <  1 
if x, y ∈ Uγ(i)
(ei) and

y ∈ Uα(i,p)(x); ∪∞
Uγ(i)(ei)= I.

A function f : I → R is called D-computable if it satisfies the following: f is D-sequentially computable, and f is effectively D-continuous, that is, there exists a recursive funtion γ(i, p) such that x ∈ Uγ(i,p)(ei) implies |f (x)−f (ei)| <
 1  and ∪∞ U	(e )= I for each p.

2p	i=1
γ(i,p)  i

The following are some examples of locally uniformly D-computable func-
tions which are not uniformly D-continuous.

Pick up disjoint intervals {In
}, where In
= [ 2n−2 , 2n−1 ).  Then it

2n−2
2n−2
 
2n	2n

holds that ∪∞
n
2n−2
= [0, 1) = I. Define a function by φ(x)= n if x ∈ In	.

φ is not D-uniformly continuous, but it is locally uniformly continuous with
respect to {Un}. ψ(x) = n + x, x ∈ In	is also an example of this sort.
Another such example is the following function: µ(x) =  1  if 0 ≤ x < 1

and µ(x) = 1 if 1
≤ x < 1. These functions are in fact locally uniformly

D-computable.
An example of a D-computable function which is not locally uniformly
D-continuous has been constructed by Brattka in Theorem 12 of [1].
A theorem corresponding to Theorem 4.5 for effectively D-continuous func- tions can be proved with more elaboration, the details of which will appear elsewhere.
Note 4 In [8], notions of “computability” and “uniform computability” have been deﬁned for the effectively uniform space. D-computability satisﬁes the condition of “computability” in [8], and D-uniform computability satisﬁes the condition of “uniform computability” in [8]. Locally uniform D-computability is between “uniform computability” and “computability” in the sense of [8].

References
Brattka,V., Some notes on Fine computability, JUCS, 8(3) (2002),382-395.
Gold, E.M., Limiting recursion, JSL, 30-1 (1965), 28-48
Kawada, Y., Mimura, Y., Outline of Modern Mathematics (in Japanese), Iwanami Shoten (1965)
Mori, T., Computabilities of Fine continuous functions, Computability and Complexity in Analysis, LNCS 2064, Springer (2001) 200-221
Mori, T., On the computability of Walsh functions, TCS 284 (2002) 419-436
Pour-El, M.B., Richards, J.I., Computability in Analysis and Physics, Springer-Verlag (1989)
Schipp, F., Wade, W.R., Simon, P., Walsh Series, Adam Hilger (1990)
Tsujii, Y., Yasugi, M., Mori, T., Some properties of the effectively uniform topological space,
Computability and Complexity in Analysis, LNCS 2064, Springer (2001) 336-356
Yasugi, M., Brattka, V., Washihara, M., Computability aspects of some discontinuous functions,
Scientiae Mathematicae Japonicae (SCMJ) Online, vol.5 (2001) 405-419
Yasugi, M., Tsujii, Y., Two notions of sequential computability of a function with jumps, ENTCS 66 No.1 (2002) 11 pages; http://www.elsevier.nl/locate/entcs/volume66.html . Revised version: Computability of a function with jumps -Effective uniformity and limiting recursion-, to appear in Topology and its Applications(Elsevier Science).
Yasugi, M., Tsujii, Y., Mori, T., Metrization of the uniform space and effective convergence,
Math. Log. Quart. 48 (2002) Suppl.1, 123-130
Yasugi, M., Tsujii, Y., Mori, T., Effective sequence of uniformities and the Rademacher function system (Preliminary Notes); http://www.kyoto-su.ac.jp/~yasugi/page/recent.html .
Yasugi, Y., Washihara, M., A note on Rademacher functions and computability, Words, Languages and Combinatorics III, World Scientific (2003) 466-475
