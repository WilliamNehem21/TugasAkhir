Egyptian Informatics Journal 23 (2022) 259–269








Full length article
Trust identification through cognitive correlates with emphasizing attention in cloud robotics
Wasim Ahmad Khan a, Fahad Ahmad b, Saad Awadh Alanazi c, Tayyabah Hasan d, Shahid Naseem e,
Kottakkaran Sooppy Nisar f,⇑
a School of Computer Science, National College of Business Administration & Economics, Lahore, Pakistan
b Department of Basic Sciences, Deanship of Common First Year, Jouf University, Sakaka, Aljouf 72341, Saudi Arabia
c Department of Computer Science, College of Computer and Information Sciences, Jouf University, Sakaka, Aljouf 72341, Saudi Arabia
d Department of Computer Sciences, Kinnaird College for Women, Lahore, Pakistan
e Department of Information Sciences, University of Education, Lahore, Punjab 54700, Pakistan
f Department of Mathematics, College Arts and Science, Prince Sattam Bin Abdulaziz University, Wadi Aldawaser 11991, Saudi Arabia



a r t i c l e  i n f o 

Article history:
Received 4 August 2021
Revised 10 January 2022
Accepted 18 January 2022
Available online 28 January 2022

Keywords:
Artificial Intelligence Stimuli
Selective Attention Mamdani Model Fuzzy Logic Confidence Experience
Trust
Cloud Robotics
a b s t r a c t 

Attention and Trust remain the crux of robotic sensory perception when associated with cloud robotics. It involves tasks that compete for attention from several stimuli taken by the robot itself upon its selective attention mode, focuses its attention on the task with higher precedence, and filters out the rest to be performed later. The robot could unload storage-extensive and computation extensive jobs towards the cloud while keeping trust establishment in control. Factors leading to these robots’ availability, con- fidentiality, data protection, and isolation security trigger attention. Trust involving suppliers and users is intended to attain safety measures that endorse various cloud suppliers’ status and accessible services. It takes several input stimuli from the robot, i.e., confidence, experience, and emotion, and gives output as trust level to pay attention during social interactions among robots. Input parameters are mapped into fuzzy sets, taking a range of input and output membership functions. The fuzzifier and defuzzifier are designed according to the proposed scheme. The developed system, named Trust Annotator, is tested and analyzed using MATLAB R2021a. Mamdani model is conferred, which yielded some unusual yet promising outcomes. These outcomes show conformity between the designed and simulated systems.
© 2022 THE AUTHORS. Published by Elsevier B.V. on behalf of Faculty of Computers and Information,
Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.
org/licenses/by-nc-nd/4.0/).





Introduction

With other rapid advancements in technology in everyday life, social robots have also paved their way in predominating our soci- ety by offering enhanced capabilities through much accurate natu- ral language processing and image processing. Owing to this fact,

* Corresponding author.
E-mail addresses: drwasimahmadkhan@gmail.com (W.A. Khan), drfahadahmad- mian@gmail.com (F. Ahmad), sanazi@ju.edu.sa (S.A. Alanazi), tabbyhassan14@g- mail.com (T. Hasan), shahid.naseem@ue.edu.pk (S. Naseem), n.sooppy@psau.edu.sa (K.S. Nisar).
Peer review under responsibility of Faculty of Computers and Information, Cairo University.
these robots have widely been deployed from the industrial to the commercial sector, thus broadening their application areas from laboratory to routine life [1–3]. Since an extensive knowledge base contributes to better cognitive capabilities, these robots can benefit from cloud technologies having access to more powerful computation, storage, and other shared services offered by the cen- tralized data centers, leading to the cost-effectiveness of having lightweight, compact but more intelligent robots [4].
Attention and Trust in cloud robotics are used in several intelli- gent machines to perform insistent, tedious tasks. Such prepro- grammed robots have always been flourishing in their accomplishments due to their precision, survival (endurance), and cognitive capabilities, i.e., attention and Trust. These cognitive capabilities manifest on close-grained information required for visual direction (like in cocktail party phenomenon) [5–7].
A trust-based approach could be enforced to compete with pri- vacy vulnerability in a universal computing environment. Any application or service incorporated in cloud robotics needs to



https://doi.org/10.1016/j.eij.2022.01.003
1110-8665/© 2022 THE AUTHORS. Published by Elsevier B.V. on behalf of Faculty of Computers and Information, Cairo University. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).



own full trust values judged by all individual parameters [8]. An identity management system guards the allotment of identities and protects them—a security concern for authentication checks. The authorization is a two-way treaty. Data service privacy and secrecy are required while moving from one cloud to another [2]. The communication medium should be secure enough to incorpo- rate a private, confidential conversation as virtualization (simulat- ing or emulating on a computer or using cloud computing) gives rise to the hypervisor, thus protecting such obstacles or risks [4].
Many enterprises and businesses are moving towards produc-
tion of the represented items of the fuzzy set varies (E). Assume that set ’X’ contains several elements, each of which must be sym- bolized by the interval [0, 1]. If any Robot’s Trust Level ’Y’ is a mem- ber of set ’X,’ then Equation (1) denotes this mapping:
EX (Y) ∈ [0; 1]	(1)
also, for the ‘ m’ number of items, they can be characterized in the
form of Equation (2):
"E(y1)	E(y2)	E(ym)#	X E(yj ) 

tives. Critical socioeconomic impacts have been brought to human lives over the past few decades. The inducement of Trust
x1	x1
xm	j=1  xj

in cloud robotics helps robots have Trust in humans to carry out only those commanded by a trustable human being [5]. Even in domestic circumstances, a social humanoid robot must not carry out all the assigned tasks as some of them may be hazardous to the people living in the house or to himself. In addition, developing Trust in cloud robotics can also diminish confidentiality and pri- vacy issues as desired information would be given only to the trusted person or machine [6].
To handle these machines, the primary stint is to cope with the sizeable quantity of facts continuously received via more than one sensor [7,8]. There are stern difficulties of redundant data control in robots’ visible belief [9]. Consequently, modeling primates-like visual interest mechanisms for the robot is becoming more popular among many robotic researchers [10]. A visual interest model allows the robots to selectively and autonomously pick a ‘‘behav- iorally applicable” section of visible information for additional pro- cessing [11].
With the utilization of cloud foundation and its convention set of IoT, assets can give robots and mechanization framework [12]. The operation of robots and robotization frameworks depends upon information through the system to help [13]. We can enhance robot and computerization framework utilizing cloud either by giving access to datasheets, production models, benchmark, recreational instruments, open rivalry for the plan and framework or open- source programming can also contribute for the said cause [14].
Fuzzy Logic is an advanced Boolean logic form where the values always lie between 0 and 1. The truth is deemed entirely true and completely false (including extreme values). The said technique is vital in demonstrating human-like behavior or decision-making by the non-human agents for mechanization purposes in which robotics and automation are prominent prospects [15]. Typically, the robots sense various environmental information through their sensors which act as inputs to the fuzzy system, then the Fuzzifica- tion process converts crisp inputs into fuzzy values, and finally, we get crisp output through the Defuzzification process [9,10,16]. The following model below represents the working of the Fuzzy Logic in Fig. 1. In this paper, the robot’s Trust has been gained through three input parameters: confidence, experience, and emotion, given to the Fuzzy Inference System.
A set of requirement specifications is treated as objects and meets the fuzzy membership properties. The membership Expecta-
where y1, y2,.. ., ym are members of X and E(y1 ), E(y2 ), ... , E(ym ) are the
membership degrees of Y1, Y2,.. ., Ym.
Fuzzy measure (E) is an extension of likeness on a space ‘Y’ is a mapping from subsets of Y into the unit interval E: 2Y ? [0, 1] such
that E(Y) = 1, E(Y) = 0, and if X ⊂ D then E(X) ≤ E(D).
Fuzzification is the technique of making the crisp input values
to the comparable membership function to acquire the fuzzy mea- sure of that corresponding value. Fuzzification of user input vari- ables for creating fuzzy inference systems relies heavily on the usage of fuzzy linguistic variables [17]. As a result, defuzzification
comprehension. Any element × ∈ XO that has a grade of member- converts the aggregated fuzzy value into a precise quantity for user ship greater than or equal to the value ’E’ belongs to ’X’.
Assume E is a fuzzy measure on ’Y,’ the Sugeno integral of a function g: Y [0, 1] in terms of fuzzy measure. Equation (3) is used to define E:
g(y)dE = max 1 6 j 6 m(min( g(yj ; E Xj )))	(3)
defined  as  g(y1)  ≤  g(y2)  ≤  g(y3)  ≤  ···  ≤  g(ym). where g(y1), g(y2), g(y3), ... , g(ym) are the ranges and they are
The fuzzy decision tree combines decision tree concepts with
the capacity to process fuzzy systems’ ambiguity and imprecision. Furthermore, fuzzy decision trees inherit the necessary qualities of decision trees, such as low computing cost and the ability to express information graphically or as a collection of rules. In three ways, a fuzzy decision tree differs from a typical decision tree: it uses splitting criteria based on fuzzy limitations, it uses alternative inference processes, and the fuzzy sets that represent Trust Level information must be defined [18].
The attributes are chosen based on their information gain, which reduces the amount of data required in the decision table to classify the Trust Level. Equation (4) gives the predicted infor- mation needed to classify the Trust Level in the dataset DT:
m
T(DT ) = —	Pbjlog2Pbj	(4)
j=1
Pbj is the probability that an arbitrary Trust Level in DT fits class
Cj and is projected by adding the Trust Level entropy. Assume that the Trust Level in Cj have m distinct values, {c1, c2,.. ., cs}, Trust Level in Cj can be used to partition DT into m partitions or subsets,
{D1, D2,.. ., Ds} where D1(k = 1, s) comprises those Samples (S) in DT. Then the Entropy (En) of Trust Level Ci is given by Equation (5):
En(Ci) = X S1j + S2j + S1sj T(S1j + S2j + S1sj)	(5)

The branching attribute is chosen based on the Trust Level,
resulting in the most information gain. Equation (6) expresses the information gain for a given subset Ds:





Fig. 1. Fuzzy logic model.
m
T D1j + D2j + D1sj = —	Pbjklog2Pbjk	(6)
j=1




(Cj)      =      T(DT)      —     En(Cj) Finally, the information gain of Trust Level Cj is given by; Gain
The details of the proposed work have been discussed in the
coming sections of the paper. The literature study has been carried out in section 2. The methodology of the proposed work is eluci- dated in section 3. The results obtained through the work proposed are presented and analyzed in section 4, followed by the conclud- ing remarks in section 5.

Related work

In this section, different proposed works from various authors have been studied to know the applications of social robots and the contribution of fuzzy Logic to optimize cognitive capabilities in one way or another.

Risk assessment in parallel robot for elbow and wrist rehabilitation using fuzzy logic

The application of robots in medicine and healthcare comprises several types, i.e., surgery, rehabilitation, telepresence, sanitation, etc. As it is a susceptible application area, it needs extra attention to be drawn. The main concern regarding robots in medicine and healthcare is their safe use, both for patients and agents. The authors have assessed the risk of using robotic systems for wrist and elbow rehabilitation, particularly from the safety point of view [11]. The results are further analyzed through Fuzzy Logic to know the extent of the safety. This innovative method for risk assess- ment was then tested successfully on 18 patients for the trials, val- idating the safety concerns.

Visual tracking using closed-words

In this study, the authors have provided a robust motion detec- tion algorithm for the robot, which detects motion rate using a background subtraction technique [19]. It captures the static image, and whenever it detects any change, it subtracts the current image from the previously captured image to analyze the differ- ence. It gives object blobs compared to the last image frame in which the object was detected. In this way, motion can be detected from the background [20].

Advanced controllers using fuzzy logic

A self-tuning fuzzy regulator wherein the control rules, the enrollment work, or the scaling factors are self-balanced. Among them, the control rules and the scaling factors assume significant jobs. So the authors have utilized an ongoing tuning for yield scal- ing factors. Its primary points of interest over a general FLC are more grounded control ability, expanded adaptability, and hearti- ness. The PI-type fuzzy regulator generally gives excellent; consis- tent state execution yet has transient execution, not all that great. The authors have followed a technique in [21] to get significant transient and consistent state execution. The technique is that, ini- tially, the framework has a substantial positive speeding up, so the scaling variable is increased to such an extent that the ascent and settling times are decreased. Close to the set moment that the framework has a negative speed up, the scaling variables are diminished with the end goal of diminished or dispensed over- shoot. While controlling a plant, a talented human administrator controls the procedure input (i.e., regulator yield) based on blunder ’e’ and changes in mistake ’De’ to limit the blunder inside the base time. Fuzzy logic control is an information-based framework. The yield SF should be resolved cautiously for the fruitful and com- pelling FLC [21,22].
New controller for mobile robots using fuzzy and genetic algorithm

The fuzzy regulator permits the robot to improve its movement and arrive at the last objective. Specifically, when the robot meets a deterrent during its shifting, the fuzzy regulator enters an office that permits the robot to stay away from the hindrance straightfor- wardly and familiarly. The boundaries utilized as contributions to the fuzzy regulator are data originating from natural sensors from the portable robot’s gadgets, and they empower it to recreate the general condition [23]. Specifically, as contributions of the regula- tor, the researchers utilized these accompanying factors [24]:
Distance obstacle Dx demonstrates the separation and the level pivot between the versatile robot and the impediment.
Distance obstacle Dy demonstrates the separation and the ver- tical hub between the versatile robot and the snag.
Both distance obstacles Dx and Dy are considered in correlation with a fixed deterrent [25].

Application of fuzzy Logic in autonomous robots

The utilization of fuzzy procedures in achieving autonomy has gotten across the board in recent years and various fields of applied autonomy, such as to conduct structure, coordination of conduct, observation, limitation, and so on. The centrality of the commit- ments was at its peak till the end of the 1990 s, where the funda- mental point in mechanical autonomy was the execution of essential practices. In recent years, the deliberation in autonomy implementation moved to build robots that work independently in natural conditions. The actual effect of fuzzy methods in the mechanical technology network is not as profound as it was in the beginning phases to apply autonomy or what it is worth for in other application regimes. However, new rising regimes in mechanical technology, for example, human and humanoid com- munication, or settled ones, for example, discernment, are genuine instances of new expected domains of uses where hybridized fuzzy methodologies, will without a doubt, be fitted for showing their ability to manage such perplexing and dynamic situations [26].

Framework for culture aware robots based on fuzzy logic

Cultural variation, i.e., the coordination of a robot’s practices to its client’s cultural standards and inclinations, is a notable funda- mental necessity for achieving any assistive application. Nonethe- less, culture-subordinate robot practices are regularly verifiably set by architects, accordingly, not taking into account a programmed and straightforward variation to various societies [27]. A strategy for the plan of culture-mindful robots that can adjust their conduct to adjust to a given culture is presented [28]. Planning from cul- tural components to related restrictions of robot practices depends on semantic factors to encode heterogeneous cultural elements in a uniform formalism and on fuzzy guidelines to encode subjective relations among various factors [29]. It is shown in two reasonable contextual analyses [30].

Materials and methods

Proposed work

The proposed technique environs that a robot’s Trust relies on three fundamental cognitive factors: confidence level, emotions of the interacting machine, and the experience with another machine. To emphasize attention based on Trust, Mamdani Fuzzy Inference System (MFIS) Module named as Trust Annotator is being designed and implemented in the cloud, which could leverage the



use of centralized knowledge base as well as the local rule bases of the regions from where the robots are accessing the centralized MFIS module as depicted in Fig. 2.
The MSIF module is employed to determine the trust level in robots via Machine-to-Cloud (M2C) communication to gain atten- tion for social interactions in Machine-to-Machine (M2M) commu- nication in cloud robotics. The proposed scenario algorithm is as under, where S is the region obtained for serving robotic agents during a time interval t.
with other agents. The MFIS module contributes to the interaction’s attention-seeking phase by inducing cognitive capabilities by devel- oping Trust based on the agent’s cognitive, sensory inputs, hence, dealing with the severe difficulties and issues in maintaining confi- dentiality and privacy.
In coming subsections, the Trust Annotator module’s methodol- ogy presented in Fig. 1 is elucidated in which Mamdani Inference Model has been exploited. Its intuitiveness is crucial for choosing this model, which generates a control system that employs sets

		of linguistic rules from a more interpretable rule base, easily

Algorithm: For Development of Trust and Emphasizing Attention in M2M Communication

Goal: To make robotic agents more socially able by seeking attention through the Trust level.
Step 1: Initializing cloud monitoring cycle over different regions
Step 2: Declaration of input parameters and output signal for the MSIF:
Ex ← Experience
E ← Emotion
C ← Confidence
T ← Trust level Step 3: Return S for t
Step 4: MSIF module ← robotic agent from S
Step 5: Sensing of input stimuli for Ex, E, and C by robotic
agent
Step 6: Sharing information via M2C communication during t
Step 7: Returning T value for the agent
Step 8: M2M communication based on the value of T
Step   10:   t   ←   t   +   1 Step 9: Update the centralized knowledge base
Repeat step 3.



At a certain time, a new regional set of robotic agents are procured to establish a Machine-to-Cloud communication link from where a certain agent accesses the MFIS module before social interaction
obtained through experienced human operators. Due to this fact, they are pertinent to expert systems where human-like knowledge is required. Crisp values are like binary values assigned to any (in- put stimuli) statement answer but always exist between 0 and 1. More superficially, It is defined as either the value is true or false, varying like binary values. But in the case of fuzzy, we would take the intermediate value (any real-numbers between 0 & 1). Obtained crisp values of input stimuli are given to a fuzzifier that transfers to the inference engine in the form of fuzzy input sets, and over there, defined rules get applied. As a result, fuzzy output sets are obtained that get defuzzified in the defuzzifier and trans- ferred as crisp outputs to the user.



Fuzzifier

The given crisp values for input stimuli are associated with the fuzzifier with a definite level and produce linguistic values for every entered variable [31]. The inference engine simulates the human decision in fuzzy Logic with fuzzy standards, consequence, and inference [32]. For three input variables and the output, Trian- gular membership functions created using MATLAB R2021A are shown in Figs. 3a, 3b, 3c, and 3d.
These triangular member functions can be mathematically written as piece-wise functions, denoted by l defining different ranges between 0 and 100 for each. So, the piece-wise functions are l low(x), l medium(x) and l high(x) represented through Equation




Fig. 2. Trust Development Among Cloud Robotics using Mamdani-Type Fuzzy Inference System.




Fig. 3a. Membership functions for Input ‘‘Confidence”



Fig. 3b. Membership functions for Input ‘‘Experience”




Fig. 3c. Membership functions for Input ‘‘Emotions”




Fig. 3d. Membership Functions for Output ‘‘Trust”



where              ×∈            {C}. (7), Equation (8) and Equation (9) for the ‘Confidence’ input
lhappy(x)= (x — 50.0)/(75.0 — 50.0)50.0 ≤ x ≤ 75.0
(100 — x)/(100 — 75.0)75.0 ≤ x ≤ 100
(16)

llow(x)=  0	x ≤ 0
(33.33 — x)/(33.33 — 0) 0 ≤ x ≤ 33.33
lmed(x)=  (x — 0)/(33.33 — 0)	0 ≤ x ≤ 33.33
(7)
unreliable(x), l partially-reliable(x) and l trustworthy(x) where × ∈ {T} And similar is the case with the output variable Trust having l within the defined range 0–100 and are represented through Equa-
tion (17), Equation (18), and Equation (19).

(66.66 — x)/(66.66 — 33.33) 33.33 ≤ x ≤ 66.66
(8)
lunreliable(x)= 
0x ≤ 0
(33.33 — x)/(33.33 — 0)0 ≤ x ≤ 33.33
(17)

lhigh(x)=	(x — 33.33)/(66.66 — 0) 33.33 ≤ x ≤ 66.66
(100 — x)/(100 — 66.66)	66.66 ≤ x ≤ 100
(9)
lpartially —
reliable(x)= 
(x — 0)/(33.33 — 0)0 ≤ x ≤ 33.33
(66.66 — x)/(66.66 — 33.33)33.33 ≤ x ≤ 66.66

Likewise, the membership functions for Experience input have the same defined ranges, so the piece-wise functions l bad(x), l
not-bad(x) and l good(x) represented through Equation (10), Equation
(11) and Equation (12) is similar to those mentioned above


lreliable(x)= (x — 33.33)/(66.66 — 0)33.33 ≤ x ≤ 66.66
(100 — x)/(100 — 66.66)66.66 ≤ x ≤ 100
(18)
(19)

where ×∈ {Ex}.
lbad(x)= 
0x ≤ 0
(10)
Hence the total number of membership functions for inputs is 10, and that for output is 3. The input membership functions and their linguistic values, ranges of occupied regions, and rule map-

(33.33 — x)/(33.33 — 0)0 ≤ x ≤ 33.33
l	(x — 0)/(33.33 — 0)0 ≤ x ≤ 33.33
pings are given in Table 1 and Table 2. After every sampling period, the algorithm takes Confidence, Experience, and Emotion to mea- sure the trust level by applying Fuzzy Logic [33].

not — bad(x)= 
(66.66 — x)/(66.66 — 33.33)33.33 ≤ x ≤ 66.66
(11)
Three different fuzzifiers are needed for the fuzzification pro- cess, which takes three variables. The model of such a fuzzifier is demonstrated in Fig. 4.
Using the predefined values of inputs, positive outcomes of

lgood(x)= (x — 33.33)/(66.66 — 0)33.33 ≤ x ≤ 66.66
(100 — x)/(100 — 66.66)66.66 ≤ x ≤ 100
(12)
three fuzzifiers are listed in Table 3. These outcomes are obtained using the fuzzified model for confidence, emotion, and experience

The third input parameter, Emotion, has four membership func- tions l angry(x), l sad(x), l neutral(x), and l happy(x), with different ranges defined between 0 and 100. So, the piece-wise functions are represented through Equation (13), Equation (14), Equation
(15), and Equation (16), where ×∈ {E}.
intakes.

Implication engine (Inference)

This engine, consisting of six AND operators, selects the most negligible value intake for the output. The Maximum-Minimum
arrangement is applied to get the resultant values by accepting

langry(x)= 
lsad(x)= 
0x ≤ 0
(25.0 — x)/(25.0 — 0)0 ≤ x ≤ 25.0
(x — 0)/(25.0 — 0)0 ≤ x ≤ 25.0
(13)
(14)
six intakes from the fuzzifier [34]. Total active rules can be calcu- lated as k*m*n, where k, m, and n are the levels taken for each input, respectively. The three input variables described here con- sisted of two three’s and one four membership functions. Alto-

(50.0 — x)/(50.0 — 25.0)25.0 ≤ x ≤ 50.0
lneutral(x)= (x — 25.0)/(50.0 — 25.0)25.0 ≤ x ≤ 50.0
(75.0 — x)/(75.0 — 50.0)50.0 ≤ x ≤ 75.0
(15)
gether, these rules become 36 in number. In the current situation, for specific values of three variables, merely eight rules are needed, which are designed as under through Equation (20) to Equation (27):

Membership functions and linguistic values of input variables in all fuzzified regions.



Table 2
Rule mapping with occupied regions.

























P6 = q[2]q[1]q[4] = 0.340.020.61 = 0.34	(25)
1  3  6
P7 = q[2]q[2]q[3] = 0.340.980.39 = 0.34	(26)
2  4  5
P8 = q[2]q[2]q[4] = 0.340.980.61 = 0.34	(27)
2  4  6








Table 3
Fuzzified results.


Fig. 4. Fuzzifier block.
Rule selector

Rule selector obtains crisp values of confidence, emotion, and experience. Singleton values are given out of resultant functions under algorithmic rules applied to the designed system. Eight rules are required to conform to singleton values G1, G2, G3, G4, G5, G6,

Inputs	Values	Selected Region	Calculated Fuzzy Set


Confidence	J = 17	1st Region	q1=(50–17)/50 = 0.66
q2 = 1-q1 = 1–0.66 = 0.34
Experience	J = 49	2nd Region	q3=(50–49)/50 = 0.02
q4 = 1-q3 = 1–0.02 = 0.98
Emotion	J = 70	3rd Region	q5=(100–70)/66.6 = 0.45
q6 = 1-q5 = 1–0.45 = 0.55
P1 = q[1]q[1]q[3] = 0.660.020.45 = 0.02	(20)
G7, and G8, each for three input variables, as listed in Table 4 below.
With every region having three fuzzy variables, the rule base accepts three crisp input values to allocate the cosmos of discourse into regions, rules get applied, and singleton values are given out as output agreeing to every output variable. The fundamental block of the rule base is presented in Fig. 5.

Defuzzifier

1  3  5

P2 = q[1]q[1]q[4] = 0.660.020.55 = 0.02	(21)
P3 = q[1]q[2]q[3] = 0.660.980.45 = 0.45	(22)
P4 = q[1]q[2]q[4] = 0.660.980.55 = 0.55	(23)
P5 = q[2]q[1]q[3] = 0.340.020.39 = 0.02	(24)
Crisp value productivities are provided in the defuzzification process after approximating its intakes. To every single of the three defuzzifiers, sixteen inputs are given; Eight values of P1, P2, P3, P4, P5, P6, P7, P8 from the implication engine’s productivities, and eight values G1, G2, G3, G4, G5, G6, G7, and G8 as shown in Fig. 6 below. The defuzzifier rounds off to crisp value employing the following mathematical expression denoted by D, where i = 1 to 8.


Table 4
Singleton values of predefined rules against inputs.






Fig. 5. Rule base (key block).




Fig. 6. Defuzzifier block.




Results and discussion

The Trust Annotator MFIS is discussed in this section by com- paring the designed values with the simulated ones in MATLAB R2021A. Table 5 lists the inference engine’s designed values, then propagated to the defuzzifier to obtain crisp output values.
Table 5
Designed values for Trust.



According to the results of the designed values of the inference engine through Equation (28) to Equation (30):
Pi = 0.02 + 0.02 + 0.45 + 0.551 + 0.02 + 0.02 + 0.34
+ 0.34 = 1.761	(28)
The summation of the products of inference engine’s productiv-
ities and that from the rule base is:
PiGi = 0.572	(29)
Then,
Vc =	PiGi/	Pi = 0.308 = 30.8%	(30)
Here, Vc determines the crisp value for the output variable. The
outcomes are then originated conferring to the MATLAB R2021A simulation. These outcomes are compared and are found precisely according to the designed system. The provided value for confi- dence is 17 that falls in the 1st region; for the experience, it is 49, which again falls in the 1st region; and for emotion, it is 70 that falls in the 3rd region. According to this range scheme, these eight rules are applied for MATLAB R2021A simulation. Using MATLAB R2021A Rule viewer, the implemented values are identified as rep- resented in Fig. 7.
Table 6 shows the comparative outcomes of the system’s designed value and its corresponding simulated value, which is considerably good.
We have performed exhaustive experiments for better perfor- mance representation in this study. The presented results are opti- mized as we have verified these results after varying the number of fuzzy sets and shape of the fuzzy sets, but we get the best results with the presented configuration. The evaluated and simulated results are close enough to be considered promising, with an error rate of 8.0 %. In this proposed model, Trust relies on the chosen attributes of confidence, emotion, and experience altogether. How-




Fig. 7. MATLAB R2021a rule viewer.


Table 6
Support vector machine characterization.

Analysis	Outcome Values
Designed System Value	30.8
MATLAB R2021A Simulated System Value	30
Error Percentage	8.00%
ever, the dependency of Trust on these factors can be visualized more precisely and effectively utilizing surface graphs. Figs. 8(a), 8(b), and 8(c) represent the plots between Trust and its cognitive factors, i.e., confidence, emotion, and experience.
The visualizations from these graphs show that the level of Trust varies gradually with the variations in its cognitive factors’ values. However, the dependency of Trust is less inclined towards the confidence and experience of the robots. Whereas the third input parameter, i.e., emotion, has a far critical impact on drawing attention based on Trust in contrast with the other two factors, i.e., if it is happy along with not-bad to a good experience with the interacting robot only then, it builds full Trust (see Fig. 8(c)). On the contrary, if the interacting robot’s experience is somewhere between not-bad and bad, but the confidence is medium to high, it can still consider it trustworthy with a 75–100% trust level (see Fig. 8(a)). Likewise, if the emotion is neutral and happy and the confidence level is higher, the Trust Level is 75–100% (see
Fig. 8(b)). Keeping in view the impact of the robot’s emotion from the above statements, this particular cognitive factor’s significance plays a significant part in reinforcing cognitive capabilities.


Conclusion

The MFIS named Trust Annotator is proposed in this paper, a cloud-based FLC system for developing Trust among robots during social interactions. After so many iterations and configurations, the system is designed for ideal outcomes and then tested using MATLAB R2021a. The designed and simulated system results for the developed Trust Annotator are quite an in accordance. The designed model can be protracted for any range of sensory inputs and outcomes. The application of developing Trust in cloud robotics using attention level has a broader scope. It covers the problems of privacy and access control and safeguards all beings in the natural environment. The proposed system, being a more precise way of developing Trust, using the comparison of attention and emotion, can lead to a better interpretation in human-robot companionship. In future with the proposed systems’ help, we can put another step to hold a more sociable agent, increasing pro- ductivity and efficiency by emotional empathy prediction to cater Robot-to-Robot or Robot-to-Human mutual interaction precisely in a socially dynamic environment.




Fig. 8. a. The Plot Between Confidence, Emotions, and Trust; b. The Plot Between Emotions, Experience, And Trust; c. The Plot Between Confidence, Experience, And Trust.



Declaration of Competing Interest

The authors declare that they have no known competing finan- cial interests or personal relationships that could have appeared to influence the work reported in this paper.

References

Yi L et al. Reconfiguration during locomotion by pavement sweeping robot with feedback control from vision system. IEEE Access 2020;8:113355–70.
Hruška L, Sincˇák P, Ferencˇík N, Cˇík I, ‘‘Application of cloud-based social robotics in cognitive exercises for elderly people,” in 2020 IEEE 18th World Symposium on Applied Machine Intelligence and Informatics (SAMI), 2020, pp. 57-62: IEEE.
Kudo R, Cochrane M, Takahashi K, Inoue T, Mizuno K. Experimental validation of link quality prediction using exact self-status of mobility robots in wireless LAN systems. IEICE Trans Commun 2020.
Urrea C, Matteoda R. Development of a virtual reality simulator for a strategy for coordinating cooperative manipulator robots using cloud computing. Rob Auton Syst 2020;126:103447.
Umbrico A, Cesta A, Cortellessa G, Orlandini A. A holistic approach to behavior adaptation for socially assistive robots. Int J Social Robotics 2020;12 (3):617–37.
Andriella A, Torras C, Alenyà G. Cognitive system framework for brain-training exercise based on human-robot interaction. Cognitive Computation 2020;12 (4):793–810.
Charalambous G, Fletcher S, Webb P. The development of a scale to evaluate trust in industrial human-robot collaboration. Int J Social Robotics 2016;8 (2):193–209.
Cameron D et al. The effect of social-cognitive recovery strategies on likability, capability and trust in social robots. Comput Hum Behav 2021;114:106561.
Dias LA, de Oliveira Silva RW, da Silva Emanuel PC, Filho AF, Bento RT. Application of the fuzzy logic for the development of automnomous robot with obstacles deviation. Int J Control Autom Syst 2018;16(2):823–33.
Singh NH, Thongam K. Mobile robot navigation using fuzzy logic in static environments. Procedia Comput Sci 2018;125:11–7.
Tucan P, Gherman B, Major K, Vaida C, Major Z, Plitea N, et al. Fuzzy logic- based risk assessment of a parallel robot for elbow and wrist rehabilitation. Int J Environ Res Public Health 2020;17(2):654. doi: https://doi.org/10.3390/ ijerph17020654.
Magyar G, Vircikova M, ‘‘Proposal of a cloud-based agent for social human- robot interaction that learns from the human experimenters,” in 2015 IEEE 19th International Conference on Intelligent Engineering Systems (INES), 2015, pp. 107-111: IEEE.
Knox WB, Stone P. Reinforcement learning from simultaneous human and MDP reward. AAMAS 2012:475–82.
Jeong S, Lee M, Arie H, Tani J, ‘‘Developmental learning of integrating visual attention shifts and bimanual object grasping and manipulation tasks,” in 2010 IEEE 9th International Conference on Development and Learning, 2010,
pp. 165-170: IEEE.
Yanes N, Bououd I, Alanazi SA, Ahmad FJIA, ‘‘Fuzzy Logic Based Prospects Identification System for Foreign Language Learning Through Serious Games,” vol. 9, pp. 63173-63187, 2021.
Shahzadi S, Khaliq B, Rizwan M, Ahmad F. Security of cloud computing using adaptive neural fuzzy inference system. Security and Communication Networks 2020;2020:1–15.
Nagarajan R, Thirunavukarasu R. A fuzzy-based decision-making broker for effective identification and selection of cloud infrastructure services. Soft Comput 2019;23(19):9669–83.
Nagarajan R, Selvamuthukumaran S, Thirunavukarasu R, ‘‘A fuzzy logic based trust evaluation model for the selection of cloud services,” in 2017 International Conference on Computer Communication and Informatics (ICCCI), 2017, pp. 1-5: IEEE.
Lv H, Dong X. Target detection algorithm for basketball moving images based on improved gaussian mixture model. Microprocess Microsyst 2021;83:104010.
Jian J-Y, Bisantz AM, Drury CG. Foundations for an empirically determined scale of trust in automated systems. Int J Cognitive Ergonomics 2000;4 (1):53–71.
Szmidt E, Kacprzyk J, ‘‘Remarks on some applications of intuitionistic fuzzy sets in decision making,” Note on IFS, vol. 2, 1996.
Meenakshi A. Fuzzy matrix: Theory and applications. MJP Publisher 2019.
Sharma KD, Ayyub M, Saroha S, Handershot AF. Advanced controllers using fuzzy logic controller (FLC) for performance improvement. Int Electr Eng J (IEEJ) 2014;5:1452–8.
Vicente A, ‘‘Development of new intelligent autonomous robotic assistant for hospitals,” 2018.
Pennacchio S, Raimondi T, Raimondi FM, Bosco G. A new controller for mobile robots based on fuzzy logic and genetic algorithms. WSEAS Trans Circuits and Systems 2004;3(9):1871–5.
Islam MS, Sarker MSZ, Rafi KAA, Othman M. Development of a fuzzy logic controller algorithm for air-conditioning system. In: 2006 IEEE International Conference on Semiconductor Electronics. IEEE; 2006. p. 830–4.
Vircikova M, Magyar G, Sincak P. Cloud-based social robot that learns to motivate children as an assistant in back-pain therapy and as a foreign language tutor. In: Proceedings of the New Friends 2015 1st International Conference on Social Robotics in Therapy and Education. p. 44–5.
Langlois L, Régis C. Analyzing the contribution of ethical charters to building the future of artificial intelligence governance. In: Reflections on Artificial Intelligence for Humanity. Springer; 2021. p. 150–70.
Sucar E, Mayora O, de Cote EM. Applications for Future Internet. Springer; 2017.
Khan MS, Benkrid K, ‘‘A proposed grinding and mixing system using fuzzy time control discrete event model for industrial applications,” Proc. 2009 IMECS, 2009.
Mohanty SK, Premsankar G, Di Francesco M. An evaluation of open source serverless computing frameworks. CloudCom 2018:115–20.
Yang C, Oh S-K, Yang B, Pedrycz W, Fu Z. Fuzzy quasi-linear SVM classifier: Design and analysis. Fuzzy Sets Syst 2020.
Shi K, Wang J, Zhong S, Tang Y, Cheng J. Non-fragile memory filtering of TS fuzzy delayed neural networks based on switched fuzzy sampled-data control. Fuzzy Sets Syst 2020;394:40–64.
Al-Janabi A, Al-Zubaidi EA, Al Sagheer RHA. Dependable estimations for education quality using fuzzy logic based strategy a case study (University of Kufa). Indonesian Journal of Electrical Engineering and Computer Science 2020;17(1):472–80.
