Electronic Notes in Theoretical Computer Science 120 (2005) 3–16	
www.elsevier.com/locate/entcs


On the Borel Complexity of Hahn-Banach Extensions
Vasco Brattka1
Department of Mathematics & Applied Mathematics University of Cape Town
South Africa

Abstract
The classical Hahn-Banach Theorem states that any linear bounded functional defined on a linear subspace of a normed space admits a norm-preserving linear bounded extension to the whole space. The constructive and computational content of this theorem has been studied by Bishop, Bridges, Metakides, Nerode, Shore, Kalantari, Downey, Ishihara and others and it is known that the theorem does not admit a general computable version. We prove a new computable version of this theorem without unrolling the classical proof of the theorem itself. More precisely, we study computability properties of the uniform extension operator which maps each functional and subspace to the set of corresponding extensions. It turns out that this operator is upper semi-computable in a well- defined sense. By applying a computable version of the Banach-Alaoglu Theorem we can show that computing a Hahn-Banach extension cannot be harder than finding a zero on a compact metric space. This allows us to conclude that the Hahn-Banach extension operator is Σ0–computable while it is easy to see that it is not lower semi-computable in general. Moreover, we can derive
computable versions of the Hahn-Banach Theorem for those functionals and subspaces which admit unique extensions.
Keywords: computable analysis, effective descriptive set theory


Introduction
The Hahn-Banach Theorem is one of the important basic theorems in func- tional analysis (see [11] for a proof of the classical theorem). It guarantees that on normed spaces there are sufficiently many linear bounded functionals.

1 Email: BrattkaV@maths.uct.ac.za



1571-0661 © 2005 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2004.07.011


Theorem 1.1 (Hahn-Banach Theorem) Let X be a normed space and Y ⊆ X a linear subspace. Any linear bounded functional f : Y → R ad- mits a linear bounded extension g : X → R with ||g|| = ||f ||.
Versions of related statements have been first proved independently by Hahn and Banach. There are standard methods to generalize this result to the field of complex numbers C which do also apply for the computational version and for technical simplicity we will just consider normed spaces over R throughout this paper.
It is known that the Hahn-Banach Theorem is equivalent to the Axiom of Choice in certain settings. Although for separable normed spaces the full Ax- iom of Choice is not required, the theorem is still non-constructive in this case. In constructive analysis it has been proved that it is equivalent to the lesser limited principle of omniscience (LLPO) and to K¨onig’s Lemma [14]. Similarly, in reverse mathematics the separable Hahn-Banach Theorem is equivalent over RCA0 to weak Ko¨nig’s Lemma [20]. Although these results show that no general constructive version exists, there are at least certain
constructive versions available [17,18,2]. In particular, Bishop proved a fully constructive “ε–version” where norm-preserving is relaxed to ||g|| ≤ ||f || + ε for any prescribed ε > 0 ([2], see also [9]). This version can be transferred
into the computable setting [17,18] and we will not discuss it in this paper. Metakides and Nerode [17] have also proved the following computable version of the Hahn-Banach Theorem for finite-dimensional spaces (which we formu- late in our terms).
Theorem 1.2 (Metakides and Nerode) Let X be a ﬁnite-dimensional com- putable Banach space with some closed linear subspace Y ⊆ X. For any com- putable linear functional f : Y → R with computable norm ||f || there exists a computable linear extension g : X → R with ||g|| = ||f ||.
One should notice that the proof of this theorem is necessarily non-con- structive since a uniform version of this result does not hold true (this follows from known counterexamples, see also Proposition 6.7). Moreover, Metakides, Nerode and Shore [18] have constructed a computable counterexample which shows that a corresponding result cannot be proved for infinite-dimensional spaces in general.
A further characterization of those spaces which fulfill a computable Hahn- Banach Theorem as Theorem 1.2 would be an interesting result. Pour-El and Richards [19] mention this problem as part of their sixth problem. We are not going to answer this “open ended question” in this paper, but we will follow Pour-El and Richard’s program in the sense that we prove a kind of a master theorem (Corollary 5.3) which allows to conclude computable


versions of the Hahn-Banach Theorem as well as upper bounds on its Borel and Turing complexity. Surprisingly, the proof of this theorem does not require a constructivization of the classical proof but just an “external analysis”. The “general principles” behind our results are the following: Computing zeros on a compact metric space is not too hard (Lemma 6.2); Finding uniquely determined zeros on a compact metric space is computable (Lemma 7.1). Our result also allows to derive sufficient conditions which lead to new computable versions of the Hahn-Banach Theorem. These conditions suggest that there is no straightforward characterization of those spaces that allow a computable Hahn-Banach Theorem (in the non-uniform case).
We close the introduction with a short survey on the organisation of this paper. In the following section we will present some preliminaries from com- putable analysis. In Section 3 we discuss the classical proof of the Hahn- Banach Theorem and we will derive a computable version for the unique case. In Section 4 we will derive our first uniform computable version of the Hahn- Banach Theorem which shows that the set of linear extensions is a functionally closed set in the dual space (endowed with a certain topology). In Section 5 we will reduce the complexity of the Hahn-Banach extension by transferring the problem into a compact metric space by employing a computable version of the Banach-Alaoglu Theorem. Section 6 provides results on the upper bound of the complexity of Hahn-Banach extension. On the one hand, we will show that the extension operator is Σ0–computable and on the other hand we will
conclude that any individual extension is ∅'–computable. Finally, Section 7
is again devoted to those cases where the extensions are uniquely determined
and, consequently, computable. Due to space limitations we omit most proofs in this extended abstract version.


Preliminaries from Computable Analysis
We will study the Hahn-Banach Theorem from the point of view of com- putable analysis, which is the Turing machine based theory of computability on real numbers and other topological spaces. Pioneering work on this theory has been presented by Turing [22], Banach and Mazur [1], Lacombe [16] and Grzegorczyk [12]. Recent monographs have been published by Pour-El and Richards [19], Ko [15] and Weihrauch [23]. For the following we will assume some familiarity with the basic concepts of the representation based approach to computable analysis as presented in [23]. Due to lack of space, we will only briefly sketch the additional concepts which we require and we point the reader to [3,8] for more precise definitions. The most important concept for the study of the Hahn-Banach Theorem is the concept of a computable normed space


which in turn is based on the concept of a computable metric space [3].
Definition 2.1 [Computable normed space] A tuple (X, || ||, e) is called a
computable normed space, if
|| || : X → R is a norm on X,
e : N → X is a fundamental sequence, i.e. its linear span is dense in X,
(X, d, αe) with d(x, y) := ||x−y|| and αe⟨k, ⟨n0, ..., nk⟩⟩ := Σk	αQ(ni)ei,
is a computable metric space with Cauchy representation δX,
(X, δX) is a computable vector space over R (i.e. the linear operations and the zero vector are computable with respect to δX ).
If in the situation of the definition the underlying space (X, || ||) is even a Banach space, i.e. if (X, d) is a complete metric space, then (X, || ||, e) is called a computable Banach space. If the norm and the fundamental sequence are clear from the context or locally irrelevant, we will say for short that X is a computable normed space or a computable Banach space. We will always
assume that computable normed spaces are represented by their Cauchy rep- resentations, which are admissible with respect to the norm topology. If X is a computable normed space, then || || : X → R is a computable function. Many
common spaces such as the lp–spaces for computable p can be considered as computable normed spaces.
Whenever X is a computable metric space with Cauchy representation δX, we obtain a representation δC(X) := [δX → δR] of the set C(X) of continuous functions f : X → R. This representation is admissible with respect to the
compact open topology on C(X) and it fulfills two essential conditions [23]:
evaluation and type conversion are computable.
By definition all computable normed spaces are separable. However, many classical non-separable normed space can still be considered as computable normed spaces in an extended sense (see [7] for a discussion of this topic). Here, we will especially use the dual space.
Definition 2.2 [Dual space] Let (X, || ||) be a computable normed space and let X∗ be the space of linear bounded functionals f : X → R endowed with the operator norm defined by ||f || := sup||x||=1 |f (x)| and the representation δX∗ , defined by δX∗ ⟨p, q⟩ = f : ⇐⇒ δC(X)(p) = f and δR(q) = ||f ||.
Note that δX∗ is in general not admissible with respect to the norm topol- ogy on X∗ but with respect to some weaker topology (see [7]). Whenever we consider continuity related to X∗, then we endow X∗ with the final topology
induced by δX∗ .
We close this section with some remarks on hyperspaces. For any com-


putable metric space (X, d, α) we denote by U⟨n,k⟩ := B(α(n), αQ(k)) a num- bering of the basic open balls (with center from the dense subset and rational radius). Correspondingly, we denote by U ⟨n,k⟩ := B(α(n), αQ(k)) a number- ing of the closed basic balls (which are, in general, different from the closures U⟨n,k⟩ of the open basic balls).  By A(X) and S(X) we denote the set of
closed subsets of a metric space X and by K(X) the set of compact subsets.
Both hyperspaces can be equipped with several different topologies and cor- responding representations. We just summerize the basic underlying ideas, precise definitions can be found in [8]:
A<(X) denotes the hyperspace of closed subsets A ⊆ X with respect to “positive information”,
i.e. a name of some closed set A consists of on an enumeration of all basic open sets Un such that A ∩ Un /= ∅; the corresponding computable objects A ∈ A<(X) are called r.e. closed sets,
S(X) denotes the hyperspace of closed subsets A ⊆ X with respect to “sequential information”,
i.e. a name of some closed set A consists of a δN –name of a sequence f : N → X which is dense in A; the corresponding computable objects A ∈ S(X) are called effectively separable closed sets,
A>(X) denotes the hyperspace of closed subsets A ⊆ X with respect to “negative information”,
i.e. a namSe of some closed set A consists of an enumeration of some basic open sets Un such that

X \ A =
sets,
∞
n=0
Un; the corresponding computable objects A ∈ A>(X) are called co-r.e. closed

A(X) denotes the hyperspace of closed subsets A ⊆ X with respect to “full information”, i.e. a name of some closed set A consists of both types of information: with respect to A<(X) and A>(X); the corresponding computable objects A ∈ A(X) are called recursive closed sets,
K>(X) denotes the hyperspace of compact subsets K ⊆ X with respect to “covering infor- mation”, i.e. a name of some compact set K consists of an enumeration of all finite covers (Un1 , ..., Unk ) of K by basic open sets Uni ; the corresponding computable objects K ∈ K>(X) are called co-r.e. compact sets,
K(X) denotes the hyperspace of compact subsets K ⊆ X with respect to “full covering in- formation”, i.e. a name of some compact set K consists of an enumeration of all finite covers (Un1 , ..., Unk ) of K by basic open sets Uni with the additional property that any Uni actually meets K; the corresponding computable objects K ∈ K(X) are called recursive compact sets.
Note that id : S(X) → A<(X) is computable for all computable metric spaces, but the inverse is not continuous in general (but it is computable in case that X is complete) [8]. The co-r.e. closed subsets are also known as Π0–sets.

The Unique Case
The purpose of this section is to recall the classical proof of the Hahn-Banach Theorem for the separable case and to derive a computable version for the unique case. The main observation is included in the following classical lemma (for a proof see for instance [11]) which describes how a functional can be extended by one dimension.
Lemma 3.1 Let (X, || ||) be a normed space, Y ⊆ X a linear subspace, x ∈ X
and let Z be the linear subspace generated by Y ∪ {x}. Let f : Y → R be a


linear functional with ||f || = 1. A functional g : Z → R with g|Y = f |Y is a linear extension of f with ||g|| = 1, if and only if
sup(f (u) − ||x − u||) ≤ g(x) ≤ inf (f (v)+ ||x − v||).

u∈Y
v∈Y

The reader should notice that the statement also holds in case x ∈ Y since the inequality reduces to the equality f (x) = g(x) in this case. The proof of the Theorem of Metakides and Nerode 1.2 is directly based on this lemma and additionally exploits finite-dimensionality [17]. For those cases where the extension is uniquely determined, we can directly derive the following com- putable version of the Hahn-Banach Theorem. We recall that a computable
metric space X is called effectively separable, if there is a computable sequence
f : N → X which is dense in X.
Theorem 3.2 (Unique extension) Let X be a computable normed space and let Y ⊆ X be an effectively separable linear subspace. For any computable linear functional f : Y → R with computable norm ||f || which admits a unique linear extension g : X → R with ||g|| = ||f ||, it follows that this extension is computable.
This result can be extended to a uniform version (see Corollary 7.2), i.e. a certain map H which maps each pair (f, Y ) to the uniquely determined exten- sion, is computable. Now the question appears whether such a computable H, potentially multi-valued, also exists for those cases where the extension is not uniquely determined? And, if not, which is the degree of non-computability of H? The crucial point here is that in the non-unique case we have to select some value g(x) in the interval given by Lemma 3.1 for any step of extension. Obviously, this extension is neither continuous nor uniformly computable in general and, even worse, any selection seems to depend on the previous one. Thus, we need a kind of effective dependent choice. On the first sight it seems that we climb up the Borel hierarchy by any step of extension which would lead to a rather high degree of discontinuity and non-effectivity of the exten- sion map. However, we will see in the following sections that we can do better than this and we will estimate the upper bound of complexity for all steps of extension at once by studying all extensions simultaneously.

Hahn-Banach Extension Map
For any function f : X → R and any Y ⊆ X we define the set of linear extensions with the same operator norm:
HY (f ) := {g ∈ X∗ : g|Y = f |Y and ||g|| = ||f |Y ||}.


The classical Hahn-Banach Theorem states that HY (f ) is non-empty for any linear bounded functional f : Y → R and any closed linear subspace Y . Note, that in case of a closed Y we can consider any linear functional f : Y → R tacitly as a continuous function f : X → R by the Tietze Extension Theorem
(however, this extension is not necessarily linear on X). This even holds for computable functionals and co-r.e. closed subspaces Y by the effective ver- sion of the Tietze Extension Theorem [24]. We will now study computability
properties of the map (f, Y ) '→ HY (f ) with respect to different spaces. By
the above remark on continuous extensions we can, without loss of generality and for technical simplicity, consider the extension map on the source space C(X) × S(X) with the hyperspace of functionally closed subsets as target
space.
A set is called functionally closed if it is the zero set of some real-valued continuous function. While any functionally closed set is closed, the converse holds only for certain classes of spaces. These classes include perfectly normal T1–spaces and hence, in particular, metric spaces. We define an effective version of this concept.
Definition 4.1 [Co-r.e. functionally closed sets] Let (X, δ) be an admissibly represented space. A set A ⊆ X is called co-r.e. functionally closed, if there is a computable function f : X → R such that A = f −1{0}.
For computable metric spaces it is easy to see that a subset A ⊆ X is co-r.e. functionally closed, if and only if A is co-r.e. closed. In the following we will denote by F(X) := {A ⊆ X : A functionally closed} the hyperspace of functionally closed subsets which we endow with the representation δF(X),
defined by δF(X)(p) := (δC(X)(p))−1{0}. Now it is easy to see that the set of
all linear bounded extensions of a functional is functionally co-r.e. closed in X∗ (note that any A ∈ F(X∗) is understood to be functionally closed with respect to the final topology of δX∗ on X∗, which in general does not coincide with the norm topology on X∗).
Theorem 4.2 For any computable normed space X the map
H :⊆ C(X) × S(X) → F(X∗), (f, Y ) '→ HY (f )
with dom(H) = {(f, Y ) : Y and f |Y are linear, ||f |Y || = 1} is computable.
From now on we will call the map H from the previous theorem the Hahn- Banach extension map. We will use the same terminology even if source or target spaces are slightly modified. Now we formulate a non-uniform corollary.
Corollary 4.3 For any computable normed space X with effectively separa- ble subspace Y ⊆ X and any computable linear functional f : Y → R with computable norm ||f ||, the set HY (f ) is co-r.e. functionally closed in X ∗.


Note that strictly speaking this is not a corollary of the previous theorem. On the one hand, we have to add a non-uniform case distinction for zero and nonzero functionals (as in the proof of Theorem 3.2). On the other hand, we have formulated the corollary not only for closed subspaces but for arbitrary subspaces. This is a consequence of the proof and not of the statement of the previous theorem. As a benefit of this section we formulate the following ob- servation: To compute a Hahn-Banach extension of a linear functional cannot be harder than computing zeros on the dual space.

The Computable Banach-Alaoglu Theorem
In the previous section we have seen that computing Hahn-Banach extensions cannot be harder than computing zeros on the dual space. Unfortunately, the dual space of a computable normed space is an unpleasant place and computing a zero on such a space might be a rather difficult task. In order to reduce the complexity we will employ a computational version of the Banach- Alaoglu Theorem which ensures that the unit ball of the dual space is compact in a certain sense. 2
Theorem 5.1 (Computable Banach-Alaoglu Theorem) Let X be a com-
putable normed space. Then there is a recursively compact computable metric space X^ such that the closed unit ball BX∗ := B(0, 1) of the dual space X∗ can be computably embedded into X^ as a co-r.e. compact subset.
It is part of the statement of the classical Banach-Alaoglu Theorem that the topology on BX∗ induced by the subtopology of X^ on ι(BX∗ ) is just the weak∗ topology, but we will not use this fact here. In the following we will
tacitly apply the computable embedding ι which exists by the computable
version of the Banach-Alaoglu Theorem 5.1 (in this sense the map I in the following lemma does map A to ι(A).)
Lemma 5.2 If X is a computable normed space, then the identity mapping I :⊆ F(X∗) → K>(X^),A '→ A is computable on subsets of BX∗ , i.e. with dom(I) = {A ∈ F(X∗) : A ⊆ BX∗ }.
The previous lemma could be proved without the Tietze Extension The- orem and the proof could be simplified in case that BX∗ is even recursive compact and hence a compact metric space itself. We do not yet know under which conditions this holds. It seems that we do need the Hahn-Banach Theo- rem in order to prove that BX∗ is recursive compact and thus it should be the

2  Historically, it might be more appropriate to call this a computable Banach Theorem since Banach already proved the classical result for the separable case.


case at least for spaces with uniquely determined extensions which does not help us for our present purpose. Now a combination of the previous lemma with Theorem 4.2 allows to conclude the following corollary which is the main result of this section.
Corollary 5.3 (Computable Hahn-Banach Theorem) For any comput- able normed space X, the Hahn-Banach extension map
H :⊆ C(X) × S(X) → K>(X^), (f, Y ) '→ HY (f )
with dom(H) = {(f, Y ) : Y and f |Y are linear, ||f |Y || = 1} is computable.
Again we formulate a non-uniform corollary (where the same remarks as in case of Corollary 4.3 do apply).
Corollary 5.4 For any computable normed space X with effectively separable linear subspace Y ⊆ X and any computable linear functional f : Y → R with computable norm ||f ||, the set HY (f ) is co-r.e. compact in X^ .
As a benefit of this section we can reformulate the observation stated at the end of the previous section: To compute a Hahn-Banach extension of a linear functional cannot be harder than computing zeros on a compact metric space.

Borel Complexity of Hahn-Banach Extension
In this section we will use the computable Hahn-Banach Theorem (Corol- lary 5.3) in order to obtain upper bounds on the Borel complexity of Hahn- Banach extension maps. The notion of Borel computability (or effective Borel measurability) has been studied in [4]. Here, we will use a slightly extended version which is not restricted to Polish spaces.
Definition 6.1 [Σ0–computability] Let (X, δX ) and (Y, δY ) be represented spaces. A function f :⊆ X → Y is called Σ0–computable, if there is a Σ0–
2	2
computable function F :⊆ NN → NN such that δY F (p) = fδX (p) for all
p ∈ dom(fδX).
It should be observed that this is a conservative extension of the notion of Σ0–computability as it has been used in [4]. This follows from the Rep- resentation Theorem 6.1 in [4]. Our main tool is the following lemma which guarantees that in compact metric spaces transferring negative into positive information is not too hard.
Lemma 6.2 If X is a recursive compact computable metric space, then the identity id : K>(X) → K(X) is Σ0–computable.


The reader should notice that this result essentially relies on the fact that the underlying space X is compact and a similar result with A> and A could only be proved for certain locally compact metric spaces X (such as the finite-
dimensional Euclidean space Rn). Now we combine the previous result with the fact that Choice : K(X) ⇒ X, A '→ A is computable in order to obtain:
Lemma 6.3 (Choice) For any complete computable metric space X there is a Σ0–computable choice function choice :⊆ K>(X) → X with choice(A) ∈ A for any non-empty A ∈ K>(X).
In the following we will say that a function h :⊆ C(X) × S(X) → X ∗ is a Hahn-Banach selection, if dom(h) = dom(H) and h(f, Y ) ∈ H(f, Y ) for any (f, Y ) ∈ dom(h), where H denotes the Hahn-Banach extension map. We will use the same terminology even if h is multi-valued (with h(f, Y ) ⊆
H(f, Y )) and if the source and target spaces are slightly modified. Using the computable Hahn-Banach Extension Theorem (Corollary 5.3) we obtain the following corollary.
Corollary 6.4 (Borel complexity) For any computable normed space X the Hahn-Banach extension map can be considered as a Σ0–computable map H :⊆ C(X) × S(X) → K(X^) and there is a Σ0–computable Hahn-Banach
selection h :⊆ C(X) × S(X) → X∗.
We can conclude that the same purely topological result holds for any separable normed space.
Corollary 6.5 For any separable normed space X the Hahn-Banach exten- sion map H :⊆ C(X) × S(X) → K(X^) can be considered as a Σ0–measurable
map and there is a Σ0–measurable Hahn-Banach selection h.
One might ask whether the Hahn-Banach extension map H is not only Σ0– computable but even Σ0–complete. However, the counterexample of Metakides, Nerode and Shore [18] combined with the Invariance Theorem 8.3 from [4] al- ready shows that this cannot be the case in general (a Σ0–complete map has to map some computable input to some non-computable output). Moreover,
by the Invariance Theorem Σ0–computable functions map computable inputs to ∆0–computable outputs (here, ∆0 is to be understood with respect to the
2	2
arithmetical hierarchy). Applied to the realizer of h we can conclude that
the extension g admits a ∆0–computable name and such a name is especially
∅'–computable (i.e. Turing reducible to ∅').
Corollary 6.6 (Turing complexity) For any computable normed space X with recursive closed linear subspace Y ⊆ X and any computable linear func- tional f : Y → R with computable norm ||f ||, there exists a ∅'–computable

extension g : X → R with ||f || = ||g||.
Now one can ask whether the upper bound on the Borel complexity pro- vided by the previous corollary is optimal or whether there is even a com- putable Hahn-Banach extension map. It has been shown by Bishop [2], Metakides, Nerode and Shore [18] and others that the Hahn-Banach Theo- rem does not admit a uniform computable version. However, these results do more or less show that the construction is not uniform in the norm. We can employ the even simpler proof idea by Ishihara [14] in order to prove that the construction is not uniform in the functional and the subspace (for a fixed norm).
Proposition 6.7 For the Banach space (X, || ||) with X = R2 and the norm
||(x, y)|| := |x| + |y| there exists no multi-valued lower semi-continuous Hahn- Banach selection h :⊆ C(X) × A(X) ⇒ X∗.
The Unique Case again
In this section we will see that we can also conclude some positive results from our version of the computable Hahn-Banach Extension Theorem (Corol- lary 5.3). Especially in those cases where the extension is uniquely determined, we can directly conclude that it is computable. This mainly follows from the following lemma.
Lemma 7.1 For recursive compact recursive metric spaces, the injection map in : X ‹→ K>(X),x '→ {x} is computable and admits a partial computable right inverse.
The proof follows from Lemma 6.4 in [6]. One the one hand, we can directly derive a second independent proof of Theorem 3.2 from this lemma and Corollary 5.4. It should be noticed that this second proof employs the classical Hahn-Banach Theorem but does not require an analysis of its proof. We also formulate the uniform version of this result which is a consequence of Corollary 5.3 and the previous lemma.
Corollary 7.2 (Unique extensions) For any computable normed space X
the restriction of the Hahn-Banach extension map
H|U :⊆ C(X) × S(X) → K(X^), (f, Y ) '→ HY (f )
to U := {(f, Y ) : HY (f ) is a singleton} is computable and it admits a com- putable selection h|U :⊆ C(X) × S(X) → X∗.
Those normed spaces which always admit unique extensions have been characterized. We recall that a normed space (X, || ||) is called strictly convex,


if ||x + y|| < ||x|| +||y|| holds for all linearly independent x, y ∈ X (i.e. if there are no line segments in the unit sphere). Examples of strictly convex spaces are lp for 1 < p < ∞ and Hilbert spaces in general. The spaces c0, l1, l∞ are not strictly convex. It is known that for a normed space X the Hahn-
Banach extensions are uniquely determined for every (closed) linear subspace Y and linear functional f , if and only if the dual space X∗ is strictly convex [21]. Moreover, a space with a strictly convex dual is itself smooth, i.e. its
norm is Gaˆteaux differentiable at every nonzero point. Similar conditions of uniqueness have been exploited constructively by Ishihara [13]. For arbitrary normed spaces there are also conditions on pairs (f, Y ) known which guarantee that the extensions for this specific pair are uniquely determined [21]. By the corollary on unique extensions above, the Hahn-Banach extension map is automatically computable under any such condition.

Conclusion
We have studied computable versions of the Hahn-Banach Theorem. It turned out that several results can be derived from a purely “external analysis” of the theorem and without unrolling the classical proof. Our positive main result (Corollary 5.3) is a kind of a computable version of the classically known fact
that the Hahn-Banach extension operator is weak∗ upper semi-continuous [21]. The results on Borel and Turing complexity have all been derived from this
master theorem. The following tabular gives an overview on the results.



strictly convex dual finite-dimensional separable
non-uniform computable computable
∅'–computable
uniform computable Σ0–computable
Σ0–computable

Fig. 1. Computability of Hahn-Banach extensions on computable normed spaces
All given results are for computable normed spaces of a certain type (i.e. “separable” is just a synonym for the general case). One might add another observation which holds in the non-uniform general case: there exists always a norm-preserving linear bounded extension which is locally computable in the sense that it maps computable inputs to computable outputs. We have not attempted to characterize those spaces which allow a uniform or non- uniform computable version. It seems that a characterization for the uniform case should be easier to obtain than for the non-uniform case. For instance, one could ask whether the Hahn-Banach extension map is computable, if and


only if the space admits a strictly convex dual? A corresponding character- ization for the non-uniform case, addressed in the open problem of Pour-El and Richards which we have cited in the Introduction, is still out of sight. Our results rather suggest that we could mix uniform and non-uniform con- ditions in order to derive sufficient conditions for non-uniform computability. For instance, it seems that any computable normed space X which admits a recursive closed subspace Z of finite codimension and with a strictly convex
dual Z∗ has the property that any computable linear functional f : Y → R
on a recursive closed subspace Y has a norm-preserving computable linear extension to X: first extend f uniformly to Y ∪ Z and then non-uniformly to
X.

References
Banach, S. and S. Mazur, Sur les fonctions calculables, Ann. Soc. Pol. de Math. 16 (1937),
p. 223.
Bishop, E. and D. S. Bridges, “Constructive Analysis,” Grundlehren Math. Wiss. 279, Springer, Berlin, 1985.
Brattka, V., Computability over topological structures, in: S. B. Cooper and S. S. Goncharov (eds.), Computability and Models, Kluwer Academic Publishers, New York, 2003 pp. 93–136.
Brattka, V., Effective Borel measurability and reducibility of functions, in: V. Brattka,
M. Schro¨der, K. Weihrauch and N. Zhong (eds.), Computability and Complexity in Analysis, Informatik Berichte 302 (2003), pp. 117–152.
Brattka, V., The inversion problem for computable linear operators, in: H. Alt and M. Habib (eds.), STACS 2003, Lect. Notes Comput. Sci. 2607 (2003), pp. 391–402.
Brattka, V., Plottable real number functions and the computable graph theorem, Informatik Berichte 300, FernUniversita¨t in Hagen, Fachbereich Informatik, Hagen (2003).
Brattka, V., Computability on non-separable Banach spaces and Landau’s theorem (submitted).
Brattka, V. and G. Presser, Computability on subsets of metric spaces, Theoret. Comput. Sci.
305 (2003), pp. 43–76.
Bridges, D. and F. Richman, “Varieties of Constructive Mathematics,” London Math. Soc. Lect. Note Ser. 97, Cambridge University Press, Cambridge, 1987.
Downey, R. and I. Kalantari, Effective extensions of linear forms on a recursive vector space over a recursive ﬁeld, Zeits. Math. Logik Grundl. Math. 31 (1985), pp. 193–200.
Goffman, C. and G. Pedrick, “First Course in Functional Analysis,” Prentince-Hall, Englewood Cliffs, 1965.
Grzegorczyk, A., On the deﬁnitions of computable real continuous functions, Fund. Math. 44
(1957), pp. 61–71.
Ishihara, H., On the constructive Hahn-Banach theorem, Bull. London Math. Soc. 21 (1989),
pp. 79–81.
Ishihara, H., An omniscience principle, the Ko¨nig lemma and the Hahn-Banach theorem, Zeits. Math. Logik Grundl. Math. 36 (1990), pp. 237–240.


Ko, K.-I., “Complexity Theory of Real Functions,” Progress Theoret. Comput. Sci., Birkh¨auser, Boston, 1991.
Lacombe, D., Extension de la notion de fonction r´ecursive aux fonctions d’une ou plusieurs variables r´eelles I-III, C.R. Acad. Sci. Paris 240,241 (1955), pp. 2478–2480,13–14,151–153.
Metakides, G. and A. Nerode, The introduction of non-recursive methods into mathematics, in:
A. Troelstra and D. v. Dalen (eds.), The L.E.J. Brouwer Centenary Symposium, Stud. Logic Found. Math. 110 (1982), pp. 319–335.
Metakides, G., A. Nerode and R. Shore, Recursive limits on the Hahn-Banach theorem, in:
M. Rosenblatt (ed.), Errett Bishop: Reflections on Him and His Research, Contemporary Mathematics 39 (1985), pp. 85–91.
Pour-El, M. B. and J. I. Richards, “Computability in Analysis and Physics,” Perspect. Math. Logic, Springer, Berlin, 1989.
Simpson, S. G., “Subsystems of Second Order Arithmetic,” Perspect. Math. Logic, Springer, Berlin, 1999.
Sims, B. and D. Yost, Linear Hahn-Banach extension operators, Proceedings of the Edinburgh Mathematical Society 32 (1989), pp. 53–57.
Turing, A. M., On computable numbers, with an application to the “Entscheidungsproblem”, Proc. London Math. Soc. 42 (1936), pp. 230–265.
Weihrauch, K., “Computable Analysis,” Springer, Berlin, 2000.
Weihrauch, K., On computable metric spaces Tietze-Urysohn extension is computable, in:
J. Blanck, V. Brattka and P. Hertling (eds.), Computability and Complexity in Analysis, Lect. Notes Comput. Sci. 2064 (2001), pp. 357–368.
