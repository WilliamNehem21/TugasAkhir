Available online at www.sciencedirect.com



Electronic Notes in Theoretical Computer Science 277 (2011) 77–87
www.elsevier.com/locate/entcs

Modular Modelling in Synthetic Biology: Light-Based Communication in E. coli
Donal Stewart1
DemonSoft Ltd Edinburgh, United Kingdom
John Roger Wilson-Kanamori2
School of Informatics University of Edinburgh Edinburgh, United Kingdom

Abstract
Modularity - the notion that individual components can be described as self-contained units and composed in different combinations - is a concept integral to synthetic biology. In vitro, it is embodied by the notion of
BioBrickTMparts: standardised DNA sequences of defined structure, function, and common interfaces that can be composed and integrated into living cells. A similar modularity in the modelling of such systems, however, has not been explored until much more recently. In the course of the 2010 International Genetically Engineered Machine (iGEM) competition, the University of Edinburgh team adopted an iterative rule- based approach to developing a BioBrick model of light-based communication in Escherichia coli. The system was modelled in the Kappa stochastic rule-based biological modelling language, allowing for the modular development and analysis of a complicated biological system. It also utilised newly developed spatial extensions to aid in the depiction of intercellular communication via light emitting and light sensing pathways, demonstrating the extensibility of the language as a whole. This paper provides a case study of modelling synthetic biology projects using the rule-based techniques outlined above, documenting the benefits of this modular iterative approach.
Keywords: Kappa, iGEM, rule-based, modular, iterative, model, modelling, synthetic biology.


Introduction
The International Genetically Engineered Machine (iGEM) competition is an an- nual undergraduate competition in synthetic biology, drawing together students

1 Email: donal.stewart@bcs.org.uk
2 Email: j.r.wilson-kanamori@sms.ed.ac.uk
3 We would like to thank Vincent Danos for his guidance, and all the members and supervisors of the 2010 University of Edinburgh iGEM team for their inspired collaborative effort.

1571-0661 © 2011 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2011.09.037

from various backgrounds including biology, engineering, informatics, and so- cial science. The goal of these interdisciplinary teams is to design and con- struct novel synthetic biological systems, utilising modular DNA building blocks known as BioBrickTMparts, that extend the library of well-characterised modular parts for use in future projects (for further information, readers are directed to http://ung.igem.org).
The University of Edinburgh iGEM team was one of 118 such teams that partic- ipated in the 2010 competition, attaining a Gold Medal standard at the Jamboree held at the Massachusetts Institute of Technology in November. The focus of the team’s project was the development of a light-based communication system, involv- ing the establishment of three independent channels of communication in different spectral wavelengths to enable bacterial cells to react with each other as well as with electronic systems. Crucial to this was the modelling of the individual light sensors and emitters in action as well as analysis of the proposed system as a whole, and for their efforts the University of Edinburgh iGEM team won the Best Model special prize.
The modelling was undertaken using the Kappa stochastic rule-based biologi- cal modelling language [7]. Kappa represents biological entities such as proteins, DNA, and RNA as agents, which are named sets of sites that can be used to hold state or bind and interact with other agents. Interactions are represented by rules in the form of precondition and effect, governed by an associated rate of reaction that regulates how frequently the interaction occurs. Rules differ from individual reactions since not all sites need to be depicted on participating agents - for ex- ample, phosphorylation at a particular site may occur independently from whether its neighbouring site is bound or not - which means that a single rule may encom- pass any number of individual reactions. Rule-based modelling languages, including Kappa and the similar BioNetGen Language [2], have been the focus of recent at- tention in developing biological models that are concise, comprehensible, and easily extensible [1].
Rule-based approaches are useful when modelling synthetic biology. They alle- viate the quantitative combinatorial explosion that results from molecular entities existing under multiple different conditions (for example, states of phosphorylation). They are inherently flexible in nature; the association of different independent rule sets implicitly generates different overall systems, thus allowing modular develop- ment of subsystems and their composition into a conjoined whole. They are also fully capable of accommodating complex regulatory structures and combinatorial networks, and of doing so without ever needing to fully enumerate the species that a set of rules might produce (thus greatly reducing computational complexity).
These advantages were exploited by Ty Thomson in 2009 in formulating a frame- work for modelling BioBrick parts in Kappa [16]. This framework allows for the modular description of individual parts within the system and their composition into more complicated devices and systems, and by doing so also provides the ba- sis for an iterative incremental approach to modelling synthetic biological systems. Such a modular methodology for modelling synthetic biological systems was first

explored by Marchisio and Stelling in 2008 [12]; this was also based on the BioBrick standard, and was formalised by systems of ordinary differential equations (ODEs). More recent tools such as TinkerCell [4] allow modellers to incorporate important principles such as stochasticity and automated analysis into the modelling of Bio- Brick parts. Ty Thomson’s framework, however, improves upon previous work by providing the advantages of rule-based modelling described above on top of the efficient simulation techniques supplied by Kappa.
This paper documents a rule-based approach to biological modelling, as outlined above, in the context of collaborative synthetic biology projects such as iGEM. It explores modular development, such as the design of individual subsystems, the incremental addition to an established core, the verification of component function- ality, and the extension of the core model to achieve results beyond the scope of more traditional approaches.
Section 2 briefly describes the main features of the model developed, before the rest of the paper delves into the use of Kappa in creating the model: section 3 elaborates upon the Kappa BioBrick framework, section 4 defines the advantages of Kappa with regards to modularity and the iterative and incremental development of the model, and finally section 5 demonstrates how the approach can be extended (in this case, to the development of a model of intercellular interactions). All models, submodels, and simulations discussed throughout this paper are available at http:
//homepages.inf.ed.ac.uk/s0458094/CS2Bio11.

The Model
The modelled system was based on the standard Elowitz repressilator [8]: three genes connected in a feedback loop, such that each gene is repressed by the previous gene in the loop and in turn represses the next gene, thus creating a three-part oscillating device. This core repressilator formed the basis of a composite device integrating three sets of light sensors and emitters (Figure 1). Previous efforts in the iGEM competition had focused on the development and characterisation of these sensors and emitters, but not on matching paired sensors and emitters of similar wavelengths, or on considering their combined use in a single system.
Green light emissions were based on the standard firefly (Photinus pyralis) lu- ciferase enzyme [13], and then underwent site-directed mutagenesis to create red light [3]. The blue light emission system was developed from a bacterial luciferase from Xenorhabdus luminescens [5]. The red light sensor was based on a bacterial phytochrome [11], the blue light sensor was based on a plant phototropin [14], and a novel fusion protein was designed as a green light sensor; the red and hypothetical green sensors were modified from two-component regulatory systems, whereas the blue light sensor was an allosteric hybrid protein with a simpler mechanism. For fur- ther information regarding the biological aspects of the paper, readers are directed to the documentation on the team wiki at http://2010.igem.org/Team:Edinburgh. Each gene in the repressilating loop stimulates the production of light of a partic- ular wavelength; meanwhile, the light sensing pathways provide input to the central



Fig. 1. Modelling the light emitting and light sensing pathways coupled to an Elowitz repressilator. At the centre the oscillating repressilator regulates the emission of light in the system. The light sensing pathways then provide input to this central regulator, reinforcing responses in an attempt to synchronise the system.

repressilator to reinforce the response (activated green and blue sensors inhibit the repressilator explicitly, whilst the activated red sensor ceases promotion of the re- pressilator, hence inhibiting it implicitly). This reinforcement helps to overcome the greatest weakness of the Elowitz repressilator: the fact that without external regulation such as quorum sensing [6,9], the system oscillations are extremely im- precise. The ideal goal of the project was the development of a multi-cellular system capable of self-reinforcing collective synchronisation.
The Kappa model created during the course of the project was a representation of the system described above. It was composed of 145 rules detailing the function of sixteen BioBrick parts, not including those responsible for creation of the light sensors (assumed to be constitutively expressed) and the proteins associated with the various pathways. These rules could be decomposed into seven constituent modules: the core repressilator (itself a combination of three distinct devices), three light sensing pathways, and similarly three light emitting pathways. The modular nature of the model is described in greater detail in section 4 below.
Figure 2 shows typical results for the complete system, showing an oscillating structure with each light output linked to the absence of its corresponding repressor (for example, high levels of red light are linked to an absence of the LacI repressor within the system). The light thus produced helps to reinforce the internal oscilla- tions by inhibiting the production of a second repressor protein within the system (in the case of the red light, inhibition of the TetR repressor eventually allows blue



Fig. 2. Simulation of the complete light network model, showing the interactions between light (top) and the genes in the core repressilator (bottom). Units (time and concentration) are arbitrary.

light to be produced).
For further information regarding the use of Kappa in the modelling, readers are directed to the supplementary information at http://homepages.inf.ed.ac. uk/s0458094/CS2Bio11.

The Modular Kappa BioBrick Framework
One reason why rule-based languages such as Kappa are useful for modelling bio- logical systems is because they provide an invaluable aid to the organisation and thorough description of the biological parts involved. The structure provided by Ty Thomson’s Kappa BioBrick framework [16] attempts to “introduce a modular framework for modelling BioBrick parts and systems using rule-based modelling”. It proved extremely useful in standardising the explicit description of the BioBrick parts used within the model, detailing the actions of the individual parts as well as transcription factor combinatorics, and simultaneously accounting for shared re- sources. For example, many of the components in the completed system re-used individual parts, such that a particular transcription rule, for example, could be invoked in the context of multiple components within the system.
The framework divides all BioBrick parts into four broad categories according to function (promoter sequences, coding sequences, ribosome binding sites, and terminators) and establishes a concise and complete set of rules and associated kinetic rates necessary to describe their interactions. Instead of requiring modellers to rewrite equations every time they wish to create a new model, the framework allows them to work at the granularity of individual parts - once the rules for these parts have been established, they can be composed together in a modular manner. This is similar to the use of BioBricks in synthetic biology, the goal of which is simple composability allowing for easy reuse of parts via the use of standardised interfaces.
The standard BioBrick part is composed of one or more DNA agents connected

in a chain. Each BioBrick part also has an RNA representation, defined in a similar manner, which is necessary as the DNA may be transcribed.
All BioBrick DNA agents must have associated rules that describe the tran- scription of the part from DNA to RNA whilst ‘passing along’ the RNA polymerase involved, along with dealing with possible falloff of the RNA polymerase. Similarly, any RNA agent that can be translated must have rules that deal with translation and the movement of the ribosome involved. RNA agents must also describe their potential degradation (unlike DNA agents, which by default are assumed not to degrade).
In addition to the above, some BioBrick parts require specific rules and rates according to their function. BioBrick promoters, for instance, must define the mech- anism of transcription factor and RNA polymerase binding, as well as the initiation of the transcription process after the RNA polymerase has bound to it, in addition to the transcription proper as described previously. BioBrick terminators generally have a higher falloff rate of RNA polymerase than other BioBrick components due to their function in preventing further transcription downstream.
Finally, the above rules do not take into account the actions of the proteins after they are translated or any pathways that they may be involved in, bar their possible effect as a transcription factor. Such considerations (for example, protein degradation or kinase activity) are up to the individual modeller to incorporate.
As an example, the Kappa model below shows the rules defined for two BioBrick components; a promoter activated by the transcription factor LovTAP, and a coding sequence for the production of λ-cI.
### Global Rules ’Ribosome falloff’ \
Ribosome(rna!1), RNA(bind!1) -> Ribosome(rna), RNA(bind) @ ’ribosome falloff rate’ ’RNAP falloff’ \
DNA(bind!1,down!3), RNAP(dna!1,rna!2), RNA(down!2), DNA(up!3,bind!_) -> \ DNA(bind,down!1), RNAP(dna,rna), RNA(down), DNA(up!1,bind!_) @ ’RNAP falloff rate’


### BBaK191007 trp promoter
# Transcription factor binding to promoter region. ’LOVTAP binding to K191007’ \
DNA(bind,type~K191007p2,down!2), DNA(up!2,bind,type~K191007p3), LOVTAP(dna) -> \ DNA(bind!1,type~K191007p2,down!2), DNA(up!2,bind,type~K191007p3), LOVTAP(dna!1) \ @ ’LOVTAP transcription factor binding rate’
’LOVTAP unbinding from K191007’ \
DNA(bind!1,type~K191007p2,down!2), DNA(up!2,bind,type~K191007p3), LOVTAP(dna!1) -> \ DNA(bind,type~K191007p2,down!2), DNA(up!2,bind,type~K191007p3), LOVTAP(dna) \
@ ’LOVTAP transcription factor unbinding rate’
# RNAP binding to promoter regions. ’RNAP binding to K191007 (no LOVTAP)’ \
DNA(bind,type~K191007p2,down!1), DNA(up!1,bind,type~K191007p3), RNAP(dna,rna) -> \ DNA(bind,type~K191007p2,down!1), DNA(up!1,bind!2,type~K191007p3), RNAP(dna!2,rna) \ @ ’high RNAP binding rate’
’RNAP binding to K191007 (LOVTAP on p2)’ \ DNA(bind!1,type~K191007p2,down!2), DNA(up!2,bind,type~K191007p3), \ LOVTAP(dna!1), RNAP(dna,rna) -> \
DNA(bind!1,type~K191007p2,down!2), DNA(up!2,bind!3,type~K191007p3), \ LOVTAP(dna!1), RNAP(dna!3,rna) @ ’low RNAP binding rate’
# Transcription.
’Transcription initiation of K191007’ \ DNA(bind!1,type~K191007p3,down!2), RNAP(dna!1,rna), DNA(up!2,bind) -> \ DNA(bind,type~K191007p3,down!3), RNAP(dna!1,rna!2), DNA(up!3,bind!1), \ RNA(bind,up,down!2,type~K191007) @ ’transcription initiation rate’


’Transcription of K191007 (readthrough)’ \ DNA(bind!1,type~K191007p1,down!2), DNA(up!2,bind,type~K191007p2,down!3), \ DNA(up!3,bind,type~K191007p3,down!4), DNA(up!4,bind), \ RNAP(dna!1,rna!5), RNA(down!5) -> \
DNA(bind,type~K191007p1,down!2), DNA(up!2,bind,type~K191007p2,down!3), \ DNA(up!3,bind,type~K191007p3,down!4), DNA(up!4,bind!1), \ RNAP(dna!1,rna!5), RNA(down!6), RNA(bind,up!6,down!5,type~K191007) \
@ ’transcription rate’

### BBaC0051 lambda-cI coding sequence # Transcription.
’C0051 transcription’ \
DNA(bind!1,down!2,type~C0051), RNAP(dna!1,rna!3), DNA(up!2,bind), RNA(down!3) -> \ DNA(bind,down!2,type~C0051), RNAP(dna!1,rna!3), DNA(up!2,bind!1), RNA(down!4), \ RNA(bind,up!4,down!3,type~C0051) @ ’transcription rate’
# Translation
’cI translation initiation’ \
RNA(bind!2,down!1), RNA(bind,up!1,type~C0051), Ribosome(rna!2) -> \ RNA(bind,down!1), RNA(bind!2,up!1,type~C0051), Ribosome(rna!2) \
@ ’translation initiation rate’ ’cI translation’ \
RNA(bind!1,type~C0051), Ribosome(rna!1) -> \ RNA(bind,type~C0051), Ribosome(rna), cI(dna) @ ’translation rate’
The Kappa definitions for the BioBricks above are independent (apart from the sharing of global kinetic rates) and their composition in a model is effected by connecting the parts together as below.
### Composition of BioBricks
%init: 1 (DNA(up,down!1,bind,type~K191007p1), DNA(up!1,down!2,bind,type~K191007p2), \ DNA(up!2,down!3,bind,type~K191007p3), DNA(up!8,down!9,bind,type~C0051))
This Kappa statement produces a composite part in which the production of λ-cI is dependant on the availability of the transcription factor LovTAP. This is a simple example of the modular use of BioBrick Kappa modelling; more complex models are available in the supplementary material.

Device Modularity and Iterative Development
The Kappa BioBrick framework also provides the basis for the modelling of com- ponent devices that, when combined, make up the system as a whole. This is ac- complished in a similar manner to the modularity of the individual BioBrick parts - individual devices, consisting of a set of agents, rules, and associated variables, can be simply composed together into a single model. Depending on the level of model granularity desired, additional non-framework rules might be required (for example describing the activity of a signalling pathway linking a translation product to a transcription factor); however, these can be safely added independently of the core framework, and can be thought of as a modular component unto themselves.
This two-fold modular nature of modelling in the Kappa BioBrick framework lends itself to an iterative and incremental developmental approach to a project. The ability for individual modules to be developed and verified independently greatly simplifies the process of breaking down the overall effort into manageable units, amenable to repeated cycles of refinement and extension.
As an example, the light communication model was composed of seven compo- nents, each of which could be considered a functional model in its own right; each


	
(a) Blue light sensing	(b) Blue light sensing perturbation
Fig. 3. Analysis of the blue light sensing pathway taken in isolation (thus demonstrating the modularity of the model). The wildtype pathway is depicted in red and the effect of its perturbation via a strong light signal in green; when activated, the production and equilibrium concentration of lambda-CI in the system falls. Simulations were run for eight independent cells; units (time and concentration) are arbitrary.

(a) Core repressilator	(b) Light emission pathways

(c) Light sensing pathways	(d) Complete light network
Fig. 4. Evolution of the light communication system, from core repressilator to complete network, showing the modular nature of the system and the iterative development approach.

of these could be validated individually (as shown in Figure 3 as an example for the blue light sensing pathway) before being combined into a whole.
The first iteration of development adapted the core Elowitz repressilator com- ponent (Figure 4a) from a similar model created by Ty Thomson as the proof-of- concept of the Kappa BioBrick framework. The modellers then added the light generation pathways (Figure 4b) to the model, thus producing oscillating light out-

puts linked to the oscillations of the core repressilator.
The next development iterations linked the light sensing pathways to the core components. Initially, these pathways were modelled without allowing the produced transcription factors to bind to the repressilator (Figure 4c); this gave the team the ability to test the individual pathways in isolation, via perturbation analysis of the type shown in Figure 3. Finally, this interim model was extended to allow the transcription factors produced by the light sensing pathways to bind to the BioBrick parts in the core repressilator and affect their transcription directly (Figure 4d), thus resulting in the complete model of the overall target system.
A large proportion of the development involved repeated refinement of the model and its accompanying kinetic parameters to obtain the behaviour necessary for os- cillation. Due to constraints on time and equipment in the biological component of the project, these rate parameters were derived from in silico trial-and-error analysis rather than in vitro experimentation. On the other hand, such iterative development has continued beyond the scope of the iGEM project; for example, re- cent developments in Kappa syntax [10] allow for the declaration of global variables that can be used to control the rates of multiple rules, thus affording another layer of modularity in the development of the model as rules with similar function (for example, readthrough transcription) can be controlled by a single parameter.
Spatial Extensions


The above intracellular model was then extended to simu- late the behaviour of an idealised colony of bacteria com- municating with each other using the light produced within each cell. The assumption was made that the bacteria were non-motile and closely packed in a two-dimensional hexagonal biofilm (Figure 5). A custom, spatially aware extension to ba- sic Kappa [15] was used to describe the bacterial colony, and additional rules were added to represent the communication of light between cells. This model was then converted to stan- dard Kappa and simulated using existing Kappa simulation tools [10].
### Sample Spatial Kappa diffusion rule
%transport: ’diffusion RED’ ’6way’ RED() @ ’light diffusion rate’



Fig. 5. Modelled bac- terial colony

### Equivalent translated Kappa diffusion rule (one of many) ’diffusion RED-1’ \
RED(loc~cytosol,loc_index_1~0,loc_index_2~0) -> \ RED(loc~cytosol,loc_index_1~1,loc_index_2~0) @ ’light diffusion rate’
To measure the coherence or synchronisation of a colony of cells, a measure similar to that described in Garcia-Ojalvo et al. (2004) [9] was used. At each sample point, the light levels in each cell were recorded, along with the colony mean (x¯) light levels, and standard deviation (σ) of the individual cell light levels from these colony means. A lower mean standard deviation of these light levels over the duration of the simulation was taken to signify an increased level of colony synchronisation. The results were recorded over sufficiently long simulations (109


Simulation Results

Isolated cells	(c) Communicating cells
Fig. 6. Comparison of mean cell light levels in 4x4 colonies of cells, both isolated and communicating between cells in the colony. Shaded areas on the graphs show standard deviation of cell light levels from colony mean. Communicating colony shows lower standard deviations, and hence increased coherence in cell activity levels. Units (time and concentration) are arbitrary.

events each) to allow accurate average behaviour to be recorded. The results (Figure 6) show that a communicating colony has less deviation in light levels between cells, and therefore increased synchronisation.

Conclusion
A fundamental challenge to synthetic biology is the engineering of biological parts with behaviour that is well-defined in relation to other parts. This not only requires controlled and precise measurement protocols, but also a modelling language for the formalisation of these interactions. The Kappa stochastic rule-based biological modelling language provides a means to this end - a set of rules describing the ways in which the biological part interacts with other parts present in the system.
Central to the effort to introduce the principles of engineering to biological systems is the concept of modularity. BioBrick parts represent a step forward in this direction, with defined structure and function and a common composable interface. The 2010 University of Edinburgh iGEM team took a modular iterative rule-based approach to the problem of modelling a synthetic biological system, and found that not only did this ease the complexity of working with interacting pathways and transcription networks, but also provided a strong basis for future work through its flexibility. For example, although the team were unsuccessful in actually creating a multi-cellular system capable of self-reinforcing collective synchronisation in vivo, the modular nature of the modelling means that it is relatively simple to swap components and re-wire pathways to find optimal configurations, which can then be verified in vivo.
The Kappa rule-based approach has a number of advantages over its alterna- tives, not least in the fact that it greatly reduces the combinatorial complexity of the system in comparison to more traditional reaction-based models. Modular rules describe the functionality of individual BioBrick parts in an easy-to-understand

manner, thus aiding comprehension of the underlying biology, and can be easily re-used both in different contexts within a model and across multiple different mod- els. The associated BioBrick modelling framework is well-suited to working with individual parts and this can only improve in the future with the development of dedicated support tools. The modularity of the approach also makes it easy to apply flexible iterative development methodologies to the problem, easing not only the complexity of the model but also the complexity of the modelling process as well.

References
Bachman, J. A., and P. Sorger, New approaches to modeling complex biochemistry, Nature Methods. 8
(2011), 130–131.
Blinov, M. L., J. R. Faeder, and W. S. Hlavacek, BioNetGen: Software for rule-based modeling of signal transduction based on the interactions of molecular domains, Bioinformatics. 20 (2004), 3289–3292.
Branchini, B. R., T. L. Southworth, N. F. Khattak, E. Michelini, and A. Roda, Red- and green-emitting firefly luciferase mutants for bioluminescent reporter applications, Analytical Biochemistry. 345 (2005), 140–148.
Chandran, D., F. T. Bergmann, and H. M. Sauro, TinkerCell: modular CAD tool for synthetic biology, J Biol Eng. 3 (2009)
Colepicolo, P., K. W. Cho, G. O. Poinar, and J. W. Hastings, Growth and luminescence of the bacterium Xenorhabdus luminescens from a human wound, Applied and Environmental Microbiology. 55 (1989), 2601–2606.
Danino, T., O. Mondragon-Palomino, L. Tsimring, and J. Hasty, A synchronized quorum of genetic clocks, Nature. 463 (2010), 326–330.
Danos, V., and C. Laneve, Formal Molecular Biology, Theoretical Computer Science. 325 (2004), 69– 110.
Elowitz, M. B., and S. Leibler, A synthetic oscillatory network of transcriptional regulators, Nature.
403 (2000), 335–338.
Garcia-Ojalvo, J., M.B. Elowitz, and S.H. Strogatz, Modeling a synthetic multicellular clock: repressilators coupled by quorum sensing, Proceedings of the National Academy of Sciences. 101 (2004), 10955–10960.
Krivine, J., KaSim: A new rewrite of the Kappa simulator in OCAML (2010), URL:
http://www.kappalanguage.org/tools.
Levskaya, A., A. A. Chevalier, J. J. Tabor, Z. B. Simpson, L. A. Lavery, M. Levy, E. A. Davidson, A. Scouras, A. D. Ellington, E. M. Marcotte, and C. A. Voigt, Synthetic biology: engineering Escherichia coli to see light, Nature. 438 (2005), 441–442.
Marchisio, M. A., and J. Stelling, Computational design of synthetic gene circuits with composable parts, Bioinformatics. 24 (2008), 1903–1910.
Shapiro, E., C. Lu, and F. Baneyx, A set of multicolored Photinus pyralis luciferase mutants for in vivo bioluminescence applications, Protein Engineering, Design and Selection. 18 (2005), 581–587.
Strickland, D., K. Moffat, and T. R. Sosnick, Light-activated DNA binding in a designed allosteric protein, Proceedings of the National Academy of Sciences. 105 (2009), 10709–10714.
Stewart, D., “Spatial Kappa: A Kappa simulator incorporating spatial extensions to the Kappa language,” (2011), URL: http://www.demonsoft.org/SpatialKappa.
Thomson, T., “Rule-Based Modeling of BioBrick Parts,” (2009), URL: http://www.rulebase.org.
