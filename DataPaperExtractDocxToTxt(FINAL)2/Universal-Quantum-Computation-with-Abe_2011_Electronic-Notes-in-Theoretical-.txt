

Electronic Notes in Theoretical Computer Science 270 (2) (2011) 209–218
www.elsevier.com/locate/entcs

Universal Quantum Computation with Abelian Anyon Models
James R. Wootton1,2 Jiannis K. Pachos 1,3
School of Physics and Astronomy University of Leeds
Leeds, UK

Abstract
We consider topological quantum memories for a general class of abelian anyon models defined on spin lattices. These are non-universal for quantum computation when restricting to topological operations alone, such as braiding and fusion. The effects of additional non-topological operations, such as spin measurements, are studied. These are shown to allow universal quantum computation, while still utilizing topological protection. Our work gives an insight into the relation between abelian models and their non-abelian counterparts.
Keywords: Anyon, Topological, Fault-tolerance, Quantum computation, Quantum memory.


Introduction
Anyons are quasiparticles that can exist on two-dimensional systems [1,2]. Their non-local behaviour is an interesting topic for foundational research in quantum physics [3,4]. Importantly, one may employ anyons for fault-tolerant quantum com- putation [5,6,7]. The so-called non-abelian anyon models receive most attention, since they possess straightforward means to store, protect and manipulate quan- tum information. Even so, proposals have been made to realize universal quantum computation using an abelian model, the toric code [8,9,10]. We extend the latter scheme to a wider class of abelian models, proving universality and fault-tolerance. This provides fresh insight into the power of abelian anyons in relation to their non-abelian counterparts. Physical realizations of abelian anyons are simpler than those for non-abelian anyons, giving an experimental motivation for our work.

1 Thanks to Gavin K. Brennen, Ville Lahtinen and Zhenghan Wang for inspiring conversations.
2 Email: phyjrw@leeds.ac.uk
3 Email: j.k.pachos@leeds.ac.uk

1571-0661 © 2011 Elsevier B.V. Open access under CC BY-NC-ND license.
doi:10.1016/j.entcs.2011.01.032

We employ Kitaev’s quantum double models [5], expressed as stabilizer codes [11]. By analysing the outcome of stabilizer measurements, known as the syndrome, the type of error may be determined and corrected. The probability of the syndrome giving misleading results is suppressed by certain parameters of the code. We specif- ically consider models based upon the cyclic group of d elements, Zd, realized on a square lattice with a d-level spin on each edge. The elements g ∈ Zd are used to label basis states of d-dimensional spins, for which the generalised Pauli operators are defined,
(1)	σx = Σ | g + 1⟩ ⟨g | , σz = Σ ωg | g⟩ ⟨g | .
g∈Zd	g∈Zd
Here ω = ei2π/d. These satisfy the commutation relation σzσx = ωσxσz. The eigenbasis and eigenvalues of the σz operation are obvious. The eigenstates of σx are those of the Fourier transform basis,

(2)
 1 
| g˜⟩ = √d
Σ

h∈Zd
ωgh
| h⟩ ,

with corresponding eigenvalues ω−j. To rotate between these two bases, the follow- ing unitary is used to perform the Fourier transform,

(3)
F = Σ
g∈Zd
 1 
| g˜⟩ ⟨g | = √d
Σ

g,h∈Zd
ωgh
| h⟩ ⟨g | .

This has the properties F 2 | g⟩ = | −g⟩, F 3 = F† and F 4 = I.
The stabilizers of the quantum double models are defined as follows on the four spins around each vertex, v, and plaquette, p,
A(v)= σx†σx†σxσx,  B(p)= σz†σzσzσz†,
1	2	3 4	1	2 3 4
where the numbering proceeds clockwise from the top-most spin (Fig. 1). These have eigenvalues ωg = ei2πg/d for each g ∈ Zd. No anyon is associated with a vertex or plaquette if A(v) | ψ⟩ = B(p) | ψ⟩ = | ψ⟩. An anyon eg is associated with a vertex, v, if A(v) | ψ⟩ = ωg | ψ⟩. An anyon mg is associated with a plaquette, p, if B(p) | ψ⟩ = ωg | ψ⟩. The anyonic vacuum corresponds to the stabilizer space of the code. A Hamiltonian may be defined from the plaquette and vertex operators as follows,
H = − Σ A(v) − Σ B(p)+ h.c..
v	p
The anyonic vacuum, and hence the stabilizer space, forms the ground state of this Hamiltonian. It also assigns energy to anyons, making them localised quasiparticle excitations.
The creation and movement of the anyons may be achieved by σz and σx op- erations. The creation of any anyon eg or mg will result also in the creation of its respective antiparticle, e−g or m−g. Here, due to the use of the cyclic groups, −g is taken to mean d − g. The operation σz on spins 1 or 2 of a vertex, or σz† on 3 or 4, creates an eg charge at that vertex and an e−g on the other vertex shared by the spin. Similarly, a σx on spins 2 or 3 of a plaquette, or a σx† on 1 or 4, creates an mg flux on that plaquette and an m−g on the other plaquette shared by the spin.

Particles can be moved and braided using corresponding strings and loops of the σz and σx operations. The commutation relations of these give a phase ωgh when an eg anyon is moved clockwise around an mh. The phase ω−gh is obtained for an anti- clockwise braiding. Superpositions of anyon states may be moved using entangling gates [12,13] or potential wells [9], allowing more complex braiding behaviour.

Fig. 1. The models are realized on a square lattice with a d-level spin on each edge. The numbering of spins around a plaquette, p, and vertex, v, is shown. Anyons eg reside on vertices. These may be created in pairs by single spin operations, and moved away from each other by chains of these operations along a string of spins. Anyons mg reside on plaquettes, and may be created and moved similarly.


Encoding of Qudits
Logical qudits are stored on the lattice using states of anyon occupancies. The qudits come in two types, denoted v and p, stored on pairs of vertices and plaquettes, respectively. We consider a basis for these qudits labelled | j⟩v/p for j = 0 ...d − 1. These are defined in terms of the anyon occupancies of two vertices, v1 and v2, or two plaquettes, p1 and p2, as follows,
| j⟩v = | ej⟩v1 | e−j⟩v2 ,  | j⟩p = | mj⟩p1 | m−j⟩p2 .
The stabilizers are not enforced on the vertices and plaquettes in which the qudits are stored. This opens so-called holes in the code [10], bringing the logical states into the stabilizer space. The Hamiltonian (5) must be modified accordingly, with the corresponding plaquette and vertex terms removed. When the anyon quasiparticles are moved, e.g. for braiding, the holes must move with them.
Pauli operators for the qudits are defined in a similar way to the lattice spins,
X = Σ | j + 1⟩ ⟨j | , Z = Σ ωj | j⟩ ⟨j | .
j	j
Certain logical operations follow naturally from the properties of the anyon model. Measurements in the logical Z basis may be performed by measuring the occupancies of the vertices and plaquettes. Logical Z and X rotations may be performed by braiding and fusing with ancillary anyon pairs, respectively. The Xs operation may be performed on the v qudits by creating an e1 and e−1, placing the former on v1

and the latter on v2. Similarly, we may perform an Xp operation by placing fluxes on plaquettes. The Zs operation may be performed on the v qudits by creating an m1 and m−1, braiding the m1 around s1 and then annihilating the flux pair. Similarly, we may perform Zp by braiding a charge pair around p1. Braiding the contents of the v1 of one qudit around those of the p1 of another will implement a controlled-Z gate or its inverse, depending upon the chirality of the operation.
Note from (6) that the logical states ˜0 v/p will take the form of Bell pairs. This
anyonic entanglement is a natural consequence of the conservation law requiring that anyons are created in pairs. It has been shown that anyonic entanglement is truly non-local, since it may be used to violate Bell’s inequalities [15]. In our case, the entanglement allows the qudits to be stored non-locally, providing fault-tolerance.
Non-topological Operations and Universality
The logical operations implemented by braiding and fusion do not form a powerful gate set. Further logical operations may be achieved by measuring the spins of the lattice. This allows logical qudits stored on neighbouring plaquettes or vertices to be measured in the X basis. It also allows the preparation of a wide range of logical states. We demonstrate how these may be used as ancillae in protocols implementing various single qudit gates. When d is prime, we prove the universality of the resulting gate set.
Consider two logical qudits, one v-type and one p-type, stored on the vertices and plaquettes neighbouring a lattice spin, i. The vertex v1 is taken to be that for which i is labelled 1 or 2 and the plaquette p1 is that for which i is 2 or 3 (Fig. 2). The logical X operations then take the following simple form,
Xv = σz, Xp = σx.
i	i
Any projector onto states of i may be decomposed as a sum of the spin Pauli operators, and therefore the logical qudit Pauli operators. Single spin measurements on i therefore correspond to measurements of the logical qubits. In general, these will be in an entangled basis. The exceptions are measurements of σz and σx, which
i	i
provide X basis measurements of the v- and p-type qudits, respectively.

Fig. 2. Measurements of a single spin i effect the surrounding plaquettes and vertices. A v-type qudit may be stored in the two vertices and a p-type qudit in the two plaquettes. The single spin measurements correspond to either single qudit measurements, or entangling two qudit measurements.

The X measurements may be used to implement a Fourier transform, F , on a v

type qudit in arbitrary state | ψ⟩v = Σj cj | j⟩v. This requires an additional p-type qudit in state ˜0 p = k | k⟩p /√d, which can be prepared probabilistically by Xp measurements. Entangling these together with a controlled-Z yields the state,

 ˜ 
Σ jk

 1  Σ ˜	l


Measuring the v qudit in the X basis then teleports the state to the p-type qudit while implementing the Fourier transform F . This is up to a Pauli correction, according to the measurement outcome. A corresponding process can be used if the initial state is on a p-type qudit. The circuit for the process is given in Fig. 3(a). The Fourier transform allows the application of a controlled-X between two v-type qudits, or two p-type qudits. This is done by the application of F† to the target qudit, followed by the controlled-Z, and finally followed by F .
Single spin measurements may be used to prepare logical ancilla states as follows.
First a lattice spin, i, is measured in a basis including the state | φ⟩ = √1 Σj eiφj | j⟩.
The corresponding projector may be expressed,

(10)
| φ⟩ ⟨φ | = 1 Σ ei(φj+k−φj ) | j + k⟩
1
⟨j | =
Σ ei(φj+k−φj )ω−jlXkXl .

d
j,k
i	d2
p	v
j,k,l

This results in a superposition of the neighbouring v and p qudit states, whose co- efficients depend on those of | φ⟩. Applying Xp† to the p qudit and projecting the its state onto | 0⟩p, will leave the v qudit in the state


 1  Σ



i(φj+1−φj )  ˜ 

A Fourier transform using the above method will then transform this into the p
qudit

 1  Σ

j
ei(φj+1−φj )
| j⟩p

Setting φ0 = 0 and defining a set of phases θk such that φj = − Σk=1...j−1 θk for

j = 1...d − 1, this becomes,
(11)
| θ⟩p =
Σ eiθj | j⟩p .
j

This is the required ancilla state, which may be prepared for any desired set of θk. The ancilla states may be used to perform single qubit rotations of the form,

(12)
Uv,p(θ)= Σ eiθj | j⟩v,p ⟨j | ,
j

to qudits in arbitrary state | ψ⟩v,p = Σk ck | k⟩v,p. To do this, the inverse of a controlled-X is applied between | ψ⟩v,p and an ancilla in state | θ⟩v,p, with the latter as the target. The resulting state is
(13)	Σ eiθj ck | k⟩v,p | j − k⟩v,p = Σ eiθj+k ck | k⟩v,p | j⟩v,p
j,k	j,k

Measuring the ancilla qudit in the Z basis and obtaining the outcome j = 0 means the phase gate has been implemented correctly. Otherwise the process may be repeated with the same qudits until the right result is obtained, changing the θj’s to correct the erroneous rotations. Each attempt succeeds with a probability of 0.5, so success will come within a small number of steps. The circuit for the process is given in Fig. 3(b).
These phase gates, along with the Fourier transform, are able to perform a large number of single qudit rotations. For the case that d is prime it is proven that arbitrary single qudit rotations are possible [14]. With the entangling gates, this provides universal quantum computation.

Fig. 3. The circuits to implement (a) a Fourier transform, and (b) the rotation U (θ). Both of these are implemented on a v-type qudit in arbitrary state | ψ⟩. Corresponding circuits exist for p-type qudits.


Fault-tolerance
We consider two forms of error in the model: perturbations in the Hamiltonian and thermal errors. The former only affect the encoded information if they lift the degeneracy. Due to the non-local encoding of the qudits, such perturbations must consist of many body operations that either loop around the holes or stretch between them. These become increasingly unlikely as the distance between the holes is increased. Any other perturbations will not commute with the Hamiltonian, and so their effects are efficiently suppressed by the gap.
Thermal errors applied to the spin lattice correspond to the creation and propa- gation of stray anyons. The creation of these costs energy, and so the gap naturally protects against them. However, once they have been created, the movement of the stray anyons does not cost further energy. The fault-tolerance of the encoding then comes from the underlying stabilizer code [6], since measuring the syndrome allows stray anyons to be detected and annihilated. If the anyons propagated far enough the annihilation will not correct the error, but consolidate it. For example, consider a v-type qudit stored in two holes, v1 and v2, d vertices apart. If the syndrome is measured and a single e−1 anyon is found, its antiparticle must reside in one of the holes. It will be assumed that it resides in the hole closest to the e−1, since this is the most probable case, and so the e−1 will be moved there to annihilate the e1 and correct the error. However, if the e1 actually resided in the hole furthest from the e−1, this action would not correct the error, but actually form a logical X or X† operation on the qudit. Such a process requires errors to occur on d/2 spins, and

so has probability O(pd/2), where p is the probability of a single spin error. Moving the holes far apart therefore exponentially suppresses X errors. A corresponding argument holds for p-type qudits.
The occurrence of Z errors requires the braiding of flux anyons around holes. Since the boundary of a hole consists of four spins, only two spin errors are required to fool the stabilizer and cause logical errors. This is because such errors form half of a loop around a hole, and attempts at error correction may complete this loop by mistake. The solution to this is to use a repetition code, which emerges naturally from the anyon models. To do this for v-type qudits, two additional holes are introduced. The first is on a vertex neighboring v1, denoted v1j . The shared spin between these is projected onto the state | 0⟩, corresponding to the identity element of Zd. To do this, the spin may be measured in the σz basis. If the outcome is | g⟩, the operation A±g(v1j ) may be applied, where the sign depends upon the orientation
of the link. This then maps the spin state to | 0⟩ without creating flux anyons. The
second additional hole is on v2j , neighbouring v2, and the shared spin is similarly projected to | 0⟩. The projections cause the logical qudit to be stored in all four holes, and so it becomes further delocalised. Repeated applications of the procedure allow the qudit to be stored in 2N holes, arranged in two rows. For this encoding the shared spins must be regularly measured in the σz basis to verify that they remain in the state | 0⟩. Any change in their state is a signature that a braiding has occurred around one or some of the holes. By applying the A (v) operations required to return the spins to the state | 0⟩, the effects of these braidings can be reversed. However, if more that half of the holes in a row are braided around, the attempt at correction will consolidate the error, resulting in a logical Z. This has probability O(pN/2), and so is exponentially suppressed by the number of holes. The errors may also be suppressed by the use of local magnetic fields [16]. The probability of X errors, however, increases since there are more holes that stray anyons may fall into. This increase is polynomial, and so may easily be compensated for by increasing the distance between the rows.
This scheme is called a repetition code since the X basis measurements can be performed using any two vertices from different rows, and with loops around single holes affected only the X-basis measurements using that hole. Measurement of the syndrome is then equivalent to majority voting with these. A corresponding scheme can be used to store p-type qudits on more holes, though the projections in that
case are to the state ˜0 using B±g(pj1) operations.
The preparation of the logical ancilla states requires the holes to be neighbouring, and so prone to errors. The preparation should therefore occur on quickly, on timescales for which the probability of error is small. In addition to this, errors in preparation can be suppressed by using purification schemes [17].

Application to Other Models
The methods developed above apply to all quantum double models based on Abelian groups, since all such groups are cyclic or direct products of cyclic groups. The

methods also have a straightforward generalisation to non-Abelian quantum double models. These are similarly realized on spin lattices, with stabilizers defined on each plaquette and vertex [5]. However, the flux and charge quasiparticles are not gauge invariant, so they may not be directly identified with the anyons of the models. Even so, it is known how the gauge invariant anyons may be formed from these [12]. As with the Abelian models, logical information may be stored by not enforcing stabilizers, and so creating holes. However, we also have the choice of expressing the encoding in terms of the anyons or the underlying flux and charge quasiparticles [18]. The separation between the holes provides fault-tolerance, with errors suppressed by distance. The usage of additional holes will also provide protection in some cases
for the non-abelian models, but the full generalization is not known.
For any quantum double model, projections onto lattice spins may be decom- posed into creation operators for quasiparticle pairs. Spin measurements may then be used to measure logical states stored on neighboring plaquettes and vertices, and to create ancilla states. These will then increase the computational power of the model from that possible by braiding and fusion alone. Note that, for non-abelian models, it may not be possible to measure v-type and p-type qudits separately, corresponding to the X measurements above. It is likely that only entangling mea- surements between a v- and a p-type qudit will be possible in general.
The application of the methods beyond quantum double models is speculative. We must therefore use general principles to guide us. In any physical realization of anyons, there are two types of entanglement to consider: that of the underlying physical medium and that of the anyons. Any controlled reduction in the former seems to yield increases in the latter. For example, the state with vacuum every- where has no anyonic entanglement, but requires a maximally entangled state of the physical medium. Conversely, a separable state of the medium results in indef- inite anyon occupancies across the system. The corresponding superpositions lead to highly entangled states of anyons. Localised measurements on the medium will lower its entanglement. Anyonic entanglement should then arise as a consequence, which could be used to prepare logical ancilla states and increase computational power.
The method can also be applied to non-anyonic stabilizer codes. Consider the following code, defined on six spin-1/2 particles.
S1 = σzσz,	S2 = σzσz,	S3 = σzσz,	S4 = σzσz,

(14)
1 2	2 3	4 5	5 6

S5 = σxσxσxσxσxσx,	S6 = σzσzσzσz.

1 2 3
4 5 6
1 3 4 6

A qubit may be stored in holes by not enforcing stabilizers S1 and S2. The logical state | 0⟩ is identified with a +1 eigenvalue for both S1 and S2. The state | 1⟩ is associated with a −1 eigenvalue. The logical Pauli operators are Z = S1 or S2 and X = σx. Alternatively, a qubit may be stored by not enforcing S2 and S3. The Pauli operators in this case are Z = S2 or S3 and X = σxσx. In the former case
3 4
X is provided by a single spin operation, and so the information stored in this
way is easily accessible. This allows the possibility of creating states by single spin measurements, as with anyons. In the latter case the X, like the Z’s, is a two spin

operation. This protects the stored information, since single spin operations are not sufficient to cause a logical error.
With anyonic codes, the separation of holes means that logical qudits can be given arbitrary protection. In the above example the protection is limited to single spin errors. This limitation is also found when information is stored in holes of other stabilizer codes, such as the Steane and Shor codes. Of course this is not surprising, since these codes were designed to have information stored in the stabilizer space, rather than in holes. It would be interesting to know whether topological codes are the only ones for which holes provide arbitrary protection, or whether others are possible.
Experimental Realizations
The use of simple abelian models means that our work is in tune with current ex- perimental proposals, as well as actual experiments. One promising possibility is Josephson-junctions, for which the means to produce the Hamiltonians for D(Zd) models has been well studied [19,20], along with other models such as the non- abelian D(S3). Polar molecules have also been considered as a means to produce the Hamiltonians of quantum double models, with a complete toolbox of interactions proposed [21]. Topological states may also be produced without a Hamiltonian. Ex- periments with these have been performed, demonstrating anyonic braiding [22,23]. These systems, though small, could also be used to demonstrate the preparation of ancilla state described here.
Conclusion
We have studied a class of anyon models, realizable on spin lattice. These are abelian, and so not expected to possess any serious computational power. We show that the addition of single spin measurements increases the computational power significantly. This is because they may be expressed in terms of the logical states as measurements in entangled bases. This additional resource provably provides a universal gate set for many of these models, and likely for most others as well. We also comment on the fault-tolerance, naturally provided by the Hamiltonian and stabilizers of the topological models on which the schemes are based. This work also gives an insight into the relationship between abelian and non-abelian models. The repetition code used, for example, bears striking similarities to the encoding found in the non-abelian charges of the D(S3). Elaborations on these points may be found in further works by the authors [16,24].

References
Wilczek, F., Quantum Mechanics of Fractional-Spin Particles, Phys. Rev. Lett. 49 (1982), 957.
Preskill,	J.,	Lecture	Notes	for	Physics	219:	Quantum	Computation,
http://www.theory.caltech.edu/ preskill/ph219/


Levin, M., and X.-G. Wen, String-net Condensation: A Physical Mechanism for Topological Phases,
Phys. Rev. B 71 (2005), 045110.
Wen, X.-G., From New States of Matter to a Unification of Light and Electrons, Prog. Theor. Phys. Suppl. 160 (2006), 351-360.
Kitaev, A., Fault-Tolerant Quantum Computation by Anyons, Ann. Phys. 303 (2003), 2-30.
Dennis E., A. Kitaev, A. Landahl, and J. Preskill, Topological Quantum Memory, J. Math. Phys. 43
(2002), 4452-4505.
Brennen, G. K., and J. K. Pachos, Why Should Anyone Care About Computing with Anyons?, Proc.
R. Soc. London, A 464 (2008), 1-24, and references therein.
Lloyd, S., Quantum Computation with Abelian Anyons, Quant. Inf. Proc. 1 (2002), 1-2.
Pachos, J. K., Quantum Computation with Abelian Anyons on the Honeycomb Lattice, Int. J. Quant. Inf. 4 (2006), 947-954.
Raussendorf, R. J. Harrington and K. Goyal, Topological Fault-Tolerance in Cluster State Quantum Computation, New J. Phys. 9 (2007), 199.
Gottesman, D. Class of Quantum Error-Correcting Codes Saturating the Quantum Hamming Bound,
Phys. Rev. A 54 (1996), 1862.
Aguado, M. G. K. Brennen, F. Verstraete and J. I. Cirac, Creation, Manipulation, and Detection of Abelian and Non-Abelian Anyons in Optical Lattices, Phys. Rev. Lett. 101, (2008) 260501; Brennen,
G. K., M. Aguado, and J. I. Cirac, Simulations of Quantum Double Models, New J. Phys. 11 (2009) 053009.
Wootton, J. R., V. Lahtinen, Z. Wang, and J. K. Pachos, Non-Abelian Statistics from an Abelian Model,
Phys. Rev. B 78 (2008), 161102(R).
Clark, S., Valence Bond Solid Formalism for d-Level One-Way Quantum Computation, J. Phys. A: Math. Gen. 39 (2006), 2701-2721,.
G.K. Brennen, S. Iblisdir, J.K. Pachos, J.K. Slingerland, Non-locality of non-Abelian anyons, New J. Phys. 11, (2009), 103023.
Wootton, J. R., V. Lahtinen, and J. K. Pachos, Engineering non-Abelian topological memories from Abelian lattice models, arXiv:0908.0708 (2009).
Bravyi, S., Universal Quantum Computation with the nu=5/2 Fractional Quantum Hall State,Phys. Rev. A 73 (2006), 042313.
Mochon, C., Anyon Computers with Smaller Groups, Phys. Rev. A 69 (2004), 032306.
Doucot, B., L. B. Ioffe and J. Vidal, Discrete Non-Abelian Gauge Theories in Josephson-Junction Arrays and Quantum Computation, Phys. Rev. B 69 (2004), 214501.
Gladchenko, S., D. Olaya, E. Dupont-Ferrier, B. Doucot, L. B. Ioffe, M. E. Gershenson, Superconducting Nanocircuits for Topologically Protected Qubits, Nat. Phys. 5 (2009), 48 - 53.
Micheli, A., G. K. Brennen and P. Zoller, A Toolbox for Lattice-Spin Models with Polar Molecules, Nat. Phys. 2, (2006) 341-347.
Pachos, J. K., W. Wieczorek, C. Schmid, N. Kiesel, R. Pohlner, and H. Weinfurter, Revealing Anyonic Statistics with Multiphoton Entanglement,New J. Phys. 11, (2009) 083010.
Lu, C.-Y., W.-B. Gao, O. Gu¨hne, X.-Q. Zhou, Z.-B. Chen, and J.-W. Pan, et al., Demonstrating Anyonic Fractional Statistics with a Six-Qubit Quantum Simulator, Phys. Rev. Lett. 102, (2009) 030502.
Wootton, J. R., V. Lahtinen, and J. K. Pachos, Universal Quantum Computation with a Non-Abelian Topological Memory, LNCS 5906 (2009) 56-65.
